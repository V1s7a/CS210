//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Unknown Toolkit Version
// Based on LLVM 3.4svn
//

.version 6.5
.target sm_61, texmode_independent
.address_size 64

	// .globl	m01700_m04
.const .align 8 .b8 k_sha512[640] = {34, 174, 40, 215, 152, 47, 138, 66, 205, 101, 239, 35, 145, 68, 55, 113, 47, 59, 77, 236, 207, 251, 192, 181, 188, 219, 137, 129, 165, 219, 181, 233, 56, 181, 72, 243, 91, 194, 86, 57, 25, 208, 5, 182, 241, 17, 241, 89, 155, 79, 25, 175, 164, 130, 63, 146, 24, 129, 109, 218, 213, 94, 28, 171, 66, 2, 3, 163, 152, 170, 7, 216, 190, 111, 112, 69, 1, 91, 131, 18, 140, 178, 228, 78, 190, 133, 49, 36, 226, 180, 255, 213, 195, 125, 12, 85, 111, 137, 123, 242, 116, 93, 190, 114, 177, 150, 22, 59, 254, 177, 222, 128, 53, 18, 199, 37, 167, 6, 220, 155, 148, 38, 105, 207, 116, 241, 155, 193, 210, 74, 241, 158, 193, 105, 155, 228, 227, 37, 79, 56, 134, 71, 190, 239, 181, 213, 140, 139, 198, 157, 193, 15, 101, 156, 172, 119, 204, 161, 12, 36, 117, 2, 43, 89, 111, 44, 233, 45, 131, 228, 166, 110, 170, 132, 116, 74, 212, 251, 65, 189, 220, 169, 176, 92, 181, 83, 17, 131, 218, 136, 249, 118, 171, 223, 102, 238, 82, 81, 62, 152, 16, 50, 180, 45, 109, 198, 49, 168, 63, 33, 251, 152, 200, 39, 3, 176, 228, 14, 239, 190, 199, 127, 89, 191, 194, 143, 168, 61, 243, 11, 224, 198, 37, 167, 10, 147, 71, 145, 167, 213, 111, 130, 3, 224, 81, 99, 202, 6, 112, 110, 14, 10, 103, 41, 41, 20, 252, 47, 210, 70, 133, 10, 183, 39, 38, 201, 38, 92, 56, 33, 27, 46, 237, 42, 196, 90, 252, 109, 44, 77, 223, 179, 149, 157, 19, 13, 56, 83, 222, 99, 175, 139, 84, 115, 10, 101, 168, 178, 119, 60, 187, 10, 106, 118, 230, 174, 237, 71, 46, 201, 194, 129, 59, 53, 130, 20, 133, 44, 114, 146, 100, 3, 241, 76, 161, 232, 191, 162, 1, 48, 66, 188, 75, 102, 26, 168, 145, 151, 248, 208, 112, 139, 75, 194, 48, 190, 84, 6, 163, 81, 108, 199, 24, 82, 239, 214, 25, 232, 146, 209, 16, 169, 101, 85, 36, 6, 153, 214, 42, 32, 113, 87, 133, 53, 14, 244, 184, 209, 187, 50, 112, 160, 106, 16, 200, 208, 210, 184, 22, 193, 164, 25, 83, 171, 65, 81, 8, 108, 55, 30, 153, 235, 142, 223, 76, 119, 72, 39, 168, 72, 155, 225, 181, 188, 176, 52, 99, 90, 201, 197, 179, 12, 28, 57, 203, 138, 65, 227, 74, 170, 216, 78, 115, 227, 99, 119, 79, 202, 156, 91, 163, 184, 178, 214, 243, 111, 46, 104, 252, 178, 239, 93, 238, 130, 143, 116, 96, 47, 23, 67, 111, 99, 165, 120, 114, 171, 240, 161, 20, 120, 200, 132, 236, 57, 100, 26, 8, 2, 199, 140, 40, 30, 99, 35, 250, 255, 190, 144, 233, 189, 130, 222, 235, 108, 80, 164, 21, 121, 198, 178, 247, 163, 249, 190, 43, 83, 114, 227, 242, 120, 113, 198, 156, 97, 38, 234, 206, 62, 39, 202, 7, 194, 192, 33, 199, 184, 134, 209, 30, 235, 224, 205, 214, 125, 218, 234, 120, 209, 110, 238, 127, 79, 125, 245, 186, 111, 23, 114, 170, 103, 240, 6, 166, 152, 200, 162, 197, 125, 99, 10, 174, 13, 249, 190, 4, 152, 63, 17, 27, 71, 28, 19, 53, 11, 113, 27, 132, 125, 4, 35, 245, 119, 219, 40, 147, 36, 199, 64, 123, 171, 202, 50, 188, 190, 201, 21, 10, 190, 158, 60, 76, 13, 16, 156, 196, 103, 29, 67, 182, 66, 62, 203, 190, 212, 197, 76, 42, 126, 101, 252, 156, 41, 127, 89, 236, 250, 214, 58, 171, 111, 203, 95, 23, 88, 71, 74, 140, 25, 68, 108};

.entry m01700_m04(
	.param .u64 .ptr .global .align 4 m01700_m04_param_0,
	.param .u64 .ptr .global .align 4 m01700_m04_param_1,
	.param .u64 .ptr .global .align 4 m01700_m04_param_2,
	.param .u64 .ptr .const .align 4 m01700_m04_param_3,
	.param .u64 .ptr .global .align 1 m01700_m04_param_4,
	.param .u64 .ptr .global .align 1 m01700_m04_param_5,
	.param .u64 .ptr .global .align 4 m01700_m04_param_6,
	.param .u64 .ptr .global .align 4 m01700_m04_param_7,
	.param .u64 .ptr .global .align 4 m01700_m04_param_8,
	.param .u64 .ptr .global .align 4 m01700_m04_param_9,
	.param .u64 .ptr .global .align 4 m01700_m04_param_10,
	.param .u64 .ptr .global .align 4 m01700_m04_param_11,
	.param .u64 .ptr .global .align 4 m01700_m04_param_12,
	.param .u64 .ptr .global .align 4 m01700_m04_param_13,
	.param .u64 .ptr .global .align 8 m01700_m04_param_14,
	.param .u64 .ptr .global .align 4 m01700_m04_param_15,
	.param .u64 .ptr .global .align 4 m01700_m04_param_16,
	.param .u64 .ptr .global .align 4 m01700_m04_param_17,
	.param .u64 .ptr .global .align 1 m01700_m04_param_18,
	.param .u64 .ptr .global .align 4 m01700_m04_param_19,
	.param .u64 .ptr .global .align 1 m01700_m04_param_20,
	.param .u64 .ptr .global .align 1 m01700_m04_param_21,
	.param .u64 .ptr .global .align 1 m01700_m04_param_22,
	.param .u64 .ptr .global .align 1 m01700_m04_param_23,
	.param .u32 m01700_m04_param_24,
	.param .u32 m01700_m04_param_25,
	.param .u32 m01700_m04_param_26,
	.param .u32 m01700_m04_param_27,
	.param .u32 m01700_m04_param_28,
	.param .u32 m01700_m04_param_29,
	.param .u32 m01700_m04_param_30,
	.param .u32 m01700_m04_param_31,
	.param .u32 m01700_m04_param_32,
	.param .u32 m01700_m04_param_33,
	.param .u64 m01700_m04_param_34
)
{
	.reg .pred 	%p<28>;
	.reg .b32 	%r<801>;
	.reg .b64 	%rd<1118>;


	ld.param.u64 	%rd81, [m01700_m04_param_0];
	ld.param.u64 	%rd94, [m01700_m04_param_19];
	ld.param.u32 	%r33, [m01700_m04_param_24];
	ld.param.u32 	%r34, [m01700_m04_param_25];
	ld.param.u32 	%r35, [m01700_m04_param_26];
	ld.param.u32 	%r37, [m01700_m04_param_30];
	ld.param.u32 	%r38, [m01700_m04_param_31];
	ld.param.u32 	%r39, [m01700_m04_param_32];
	ld.param.u64 	%rd95, [m01700_m04_param_34];
	mov.b32	%r40, %envreg3;
	mov.u32 	%r41, %ctaid.x;
	mov.u32 	%r42, %ntid.x;
	mad.lo.s32 	%r43, %r41, %r42, %r40;
	mov.u32 	%r44, %tid.x;
	add.s32 	%r1, %r43, %r44;
	cvt.s64.s32	%rd1, %r1;
	setp.ge.u64	%p1, %rd1, %rd95;
	@%p1 bra 	BB0_33;

	setp.eq.s32	%p2, %r37, 0;
	@%p2 bra 	BB0_33;

	mul.wide.s32 	%rd96, %r1, 260;
	add.s64 	%rd97, %rd81, %rd96;
	ld.global.u32 	%r2, [%rd97];
	ld.global.u32 	%r3, [%rd97+4];
	ld.global.u32 	%r46, [%rd97+8];
	ld.global.u32 	%r47, [%rd97+12];
	mov.b64	%rd2, {%r47, %r46};
	ld.global.u32 	%r48, [%rd97+60];
	mov.u32 	%r795, 0;
	mov.b64	%rd3, {%r48, %r795};
	ld.const.u64 	%rd98, [k_sha512];
	add.s64 	%rd4, %rd98, -1150475826592481981;
	ld.const.u64 	%rd99, [k_sha512+8];
	add.s64 	%rd100, %rd2, %rd99;
	add.s64 	%rd5, %rd100, 2270897969802886507;
	ld.const.u64 	%rd101, [k_sha512+16];
	add.s64 	%rd6, %rd101, -7276294671716946913;
	ld.const.u64 	%rd102, [k_sha512+24];
	add.s64 	%rd7, %rd102, 5840696475078001361;
	ld.const.u64 	%rd103, [k_sha512+120];
	add.s64 	%rd19, %rd103, %rd3;
	and.b32  	%r4, %r34, 31;
	and.b32  	%r5, %r35, 31;
	cvt.u64.u32	%rd20, %r39;

BB0_3:
	mov.u32 	%r794, 0;
	mov.b64	%rd1113, {%r48, %r794};
	ld.const.u64 	%rd1083, [k_sha512+112];
	ld.const.u64 	%rd1082, [k_sha512+104];
	ld.const.u64 	%rd1081, [k_sha512+96];
	ld.const.u64 	%rd1080, [k_sha512+88];
	ld.const.u64 	%rd1079, [k_sha512+80];
	ld.const.u64 	%rd1078, [k_sha512+72];
	ld.const.u64 	%rd1077, [k_sha512+64];
	ld.const.u64 	%rd1076, [k_sha512+56];
	ld.const.u64 	%rd1075, [k_sha512+48];
	ld.const.u64 	%rd1074, [k_sha512+40];
	ld.const.u64 	%rd1073, [k_sha512+32];
	ld.param.u64 	%rd1072, [m01700_m04_param_3];
	mul.wide.u32 	%rd118, %r795, 4;
	add.s64 	%rd119, %rd1072, %rd118;
	ld.const.u32 	%r50, [%rd119];
	or.b32  	%r51, %r50, %r2;
	mov.b64	%rd1098, {%r3, %r51};
	add.s64 	%rd120, %rd4, %rd1098;
	add.s64 	%rd121, %rd120, -4263291710961585108;
	add.s64 	%rd122, %rd120, 7114151716102877840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r52,%dummy}, %rd121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r53}, %rd121;
	}
	shf.r.wrap.b32 	%r54, %r53, %r52, 14;
	shf.r.wrap.b32 	%r55, %r52, %r53, 14;
	mov.b64 	%rd123, {%r55, %r54};
	shf.r.wrap.b32 	%r56, %r53, %r52, 18;
	shf.r.wrap.b32 	%r57, %r52, %r53, 18;
	mov.b64 	%rd124, {%r57, %r56};
	xor.b64  	%rd125, %rd123, %rd124;
	shf.l.wrap.b32 	%r58, %r52, %r53, 23;
	shf.l.wrap.b32 	%r59, %r53, %r52, 23;
	mov.b64 	%rd126, {%r59, %r58};
	xor.b64  	%rd127, %rd125, %rd126;
	and.b64  	%rd128, %rd121, -3887949035690463538;
	xor.b64  	%rd129, %rd128, -7276294671716946913;
	add.s64 	%rd130, %rd5, %rd129;
	add.s64 	%rd131, %rd130, %rd127;
	add.s64 	%rd132, %rd131, 4354685564936845355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r60,%dummy}, %rd122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r61}, %rd122;
	}
	shf.r.wrap.b32 	%r62, %r61, %r60, 28;
	shf.r.wrap.b32 	%r63, %r60, %r61, 28;
	mov.b64 	%rd133, {%r63, %r62};
	shf.l.wrap.b32 	%r64, %r60, %r61, 30;
	shf.l.wrap.b32 	%r65, %r61, %r60, 30;
	mov.b64 	%rd134, {%r65, %r64};
	xor.b64  	%rd135, %rd133, %rd134;
	shf.l.wrap.b32 	%r66, %r60, %r61, 25;
	shf.l.wrap.b32 	%r67, %r61, %r60, 25;
	mov.b64 	%rd136, {%r67, %r66};
	xor.b64  	%rd137, %rd135, %rd136;
	and.b64  	%rd138, %rd122, 7640891576956012808;
	and.b64  	%rd139, %rd122, -4942790177534073029;
	xor.b64  	%rd140, %rd139, 3026882967131160840;
	or.b64  	%rd141, %rd140, %rd138;
	add.s64 	%rd142, %rd137, %rd141;
	add.s64 	%rd143, %rd142, %rd131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r68,%dummy}, %rd132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r69}, %rd132;
	}
	shf.r.wrap.b32 	%r70, %r69, %r68, 14;
	shf.r.wrap.b32 	%r71, %r68, %r69, 14;
	mov.b64 	%rd144, {%r71, %r70};
	shf.r.wrap.b32 	%r72, %r69, %r68, 18;
	shf.r.wrap.b32 	%r73, %r68, %r69, 18;
	mov.b64 	%rd145, {%r73, %r72};
	xor.b64  	%rd146, %rd144, %rd145;
	shf.l.wrap.b32 	%r74, %r68, %r69, 23;
	shf.l.wrap.b32 	%r75, %r69, %r68, 23;
	mov.b64 	%rd147, {%r75, %r74};
	xor.b64  	%rd148, %rd146, %rd147;
	xor.b64  	%rd149, %rd121, 5840696475078001361;
	and.b64  	%rd150, %rd132, %rd149;
	xor.b64  	%rd151, %rd150, 5840696475078001361;
	add.s64 	%rd152, %rd6, %rd151;
	add.s64 	%rd153, %rd152, %rd148;
	add.s64 	%rd154, %rd153, -4942790177534073029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r76,%dummy}, %rd143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r77}, %rd143;
	}
	shf.r.wrap.b32 	%r78, %r77, %r76, 28;
	shf.r.wrap.b32 	%r79, %r76, %r77, 28;
	mov.b64 	%rd155, {%r79, %r78};
	shf.l.wrap.b32 	%r80, %r76, %r77, 30;
	shf.l.wrap.b32 	%r81, %r77, %r76, 30;
	mov.b64 	%rd156, {%r81, %r80};
	xor.b64  	%rd157, %rd155, %rd156;
	shf.l.wrap.b32 	%r82, %r76, %r77, 25;
	shf.l.wrap.b32 	%r83, %r77, %r76, 25;
	mov.b64 	%rd158, {%r83, %r82};
	xor.b64  	%rd159, %rd157, %rd158;
	and.b64  	%rd160, %rd143, %rd122;
	xor.b64  	%rd161, %rd143, %rd122;
	and.b64  	%rd162, %rd161, 7640891576956012808;
	or.b64  	%rd163, %rd162, %rd160;
	add.s64 	%rd164, %rd159, %rd163;
	add.s64 	%rd165, %rd164, %rd153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r84,%dummy}, %rd154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r85}, %rd154;
	}
	shf.r.wrap.b32 	%r86, %r85, %r84, 14;
	shf.r.wrap.b32 	%r87, %r84, %r85, 14;
	mov.b64 	%rd166, {%r87, %r86};
	shf.r.wrap.b32 	%r88, %r85, %r84, 18;
	shf.r.wrap.b32 	%r89, %r84, %r85, 18;
	mov.b64 	%rd167, {%r89, %r88};
	xor.b64  	%rd168, %rd166, %rd167;
	shf.l.wrap.b32 	%r90, %r84, %r85, 23;
	shf.l.wrap.b32 	%r91, %r85, %r84, 23;
	mov.b64 	%rd169, {%r91, %r90};
	xor.b64  	%rd170, %rd168, %rd169;
	xor.b64  	%rd171, %rd132, %rd121;
	and.b64  	%rd172, %rd154, %rd171;
	xor.b64  	%rd173, %rd172, %rd121;
	add.s64 	%rd174, %rd7, %rd173;
	add.s64 	%rd175, %rd174, %rd170;
	add.s64 	%rd176, %rd175, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r92,%dummy}, %rd165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r93}, %rd165;
	}
	shf.r.wrap.b32 	%r94, %r93, %r92, 28;
	shf.r.wrap.b32 	%r95, %r92, %r93, 28;
	mov.b64 	%rd177, {%r95, %r94};
	shf.l.wrap.b32 	%r96, %r92, %r93, 30;
	shf.l.wrap.b32 	%r97, %r93, %r92, 30;
	mov.b64 	%rd178, {%r97, %r96};
	xor.b64  	%rd179, %rd177, %rd178;
	shf.l.wrap.b32 	%r98, %r92, %r93, 25;
	shf.l.wrap.b32 	%r99, %r93, %r92, 25;
	mov.b64 	%rd180, {%r99, %r98};
	xor.b64  	%rd181, %rd179, %rd180;
	and.b64  	%rd182, %rd165, %rd143;
	xor.b64  	%rd183, %rd165, %rd143;
	and.b64  	%rd184, %rd183, %rd122;
	or.b64  	%rd185, %rd184, %rd182;
	add.s64 	%rd186, %rd181, %rd185;
	add.s64 	%rd187, %rd186, %rd175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r100,%dummy}, %rd176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r101}, %rd176;
	}
	shf.r.wrap.b32 	%r102, %r101, %r100, 14;
	shf.r.wrap.b32 	%r103, %r100, %r101, 14;
	mov.b64 	%rd188, {%r103, %r102};
	shf.r.wrap.b32 	%r104, %r101, %r100, 18;
	shf.r.wrap.b32 	%r105, %r100, %r101, 18;
	mov.b64 	%rd189, {%r105, %r104};
	xor.b64  	%rd190, %rd188, %rd189;
	shf.l.wrap.b32 	%r106, %r100, %r101, 23;
	shf.l.wrap.b32 	%r107, %r101, %r100, 23;
	mov.b64 	%rd191, {%r107, %r106};
	xor.b64  	%rd192, %rd190, %rd191;
	xor.b64  	%rd193, %rd154, %rd132;
	and.b64  	%rd194, %rd176, %rd193;
	xor.b64  	%rd195, %rd194, %rd132;
	add.s64 	%rd196, %rd121, %rd1073;
	add.s64 	%rd197, %rd196, %rd195;
	add.s64 	%rd198, %rd197, %rd192;
	add.s64 	%rd199, %rd198, %rd122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r108,%dummy}, %rd187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r109}, %rd187;
	}
	shf.r.wrap.b32 	%r110, %r109, %r108, 28;
	shf.r.wrap.b32 	%r111, %r108, %r109, 28;
	mov.b64 	%rd200, {%r111, %r110};
	shf.l.wrap.b32 	%r112, %r108, %r109, 30;
	shf.l.wrap.b32 	%r113, %r109, %r108, 30;
	mov.b64 	%rd201, {%r113, %r112};
	xor.b64  	%rd202, %rd200, %rd201;
	shf.l.wrap.b32 	%r114, %r108, %r109, 25;
	shf.l.wrap.b32 	%r115, %r109, %r108, 25;
	mov.b64 	%rd203, {%r115, %r114};
	xor.b64  	%rd204, %rd202, %rd203;
	and.b64  	%rd205, %rd187, %rd165;
	xor.b64  	%rd206, %rd187, %rd165;
	and.b64  	%rd207, %rd206, %rd143;
	or.b64  	%rd208, %rd207, %rd205;
	add.s64 	%rd209, %rd204, %rd208;
	add.s64 	%rd210, %rd209, %rd198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r116,%dummy}, %rd199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r117}, %rd199;
	}
	shf.r.wrap.b32 	%r118, %r117, %r116, 14;
	shf.r.wrap.b32 	%r119, %r116, %r117, 14;
	mov.b64 	%rd211, {%r119, %r118};
	shf.r.wrap.b32 	%r120, %r117, %r116, 18;
	shf.r.wrap.b32 	%r121, %r116, %r117, 18;
	mov.b64 	%rd212, {%r121, %r120};
	xor.b64  	%rd213, %rd211, %rd212;
	shf.l.wrap.b32 	%r122, %r116, %r117, 23;
	shf.l.wrap.b32 	%r123, %r117, %r116, 23;
	mov.b64 	%rd214, {%r123, %r122};
	xor.b64  	%rd215, %rd213, %rd214;
	xor.b64  	%rd216, %rd176, %rd154;
	and.b64  	%rd217, %rd199, %rd216;
	xor.b64  	%rd218, %rd217, %rd154;
	add.s64 	%rd219, %rd132, %rd1074;
	add.s64 	%rd220, %rd219, %rd218;
	add.s64 	%rd221, %rd220, %rd215;
	add.s64 	%rd222, %rd221, %rd143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r124,%dummy}, %rd210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r125}, %rd210;
	}
	shf.r.wrap.b32 	%r126, %r125, %r124, 28;
	shf.r.wrap.b32 	%r127, %r124, %r125, 28;
	mov.b64 	%rd223, {%r127, %r126};
	shf.l.wrap.b32 	%r128, %r124, %r125, 30;
	shf.l.wrap.b32 	%r129, %r125, %r124, 30;
	mov.b64 	%rd224, {%r129, %r128};
	xor.b64  	%rd225, %rd223, %rd224;
	shf.l.wrap.b32 	%r130, %r124, %r125, 25;
	shf.l.wrap.b32 	%r131, %r125, %r124, 25;
	mov.b64 	%rd226, {%r131, %r130};
	xor.b64  	%rd227, %rd225, %rd226;
	and.b64  	%rd228, %rd210, %rd187;
	xor.b64  	%rd229, %rd210, %rd187;
	and.b64  	%rd230, %rd229, %rd165;
	or.b64  	%rd231, %rd230, %rd228;
	add.s64 	%rd232, %rd227, %rd231;
	add.s64 	%rd233, %rd232, %rd221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r132,%dummy}, %rd222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r133}, %rd222;
	}
	shf.r.wrap.b32 	%r134, %r133, %r132, 14;
	shf.r.wrap.b32 	%r135, %r132, %r133, 14;
	mov.b64 	%rd234, {%r135, %r134};
	shf.r.wrap.b32 	%r136, %r133, %r132, 18;
	shf.r.wrap.b32 	%r137, %r132, %r133, 18;
	mov.b64 	%rd235, {%r137, %r136};
	xor.b64  	%rd236, %rd234, %rd235;
	shf.l.wrap.b32 	%r138, %r132, %r133, 23;
	shf.l.wrap.b32 	%r139, %r133, %r132, 23;
	mov.b64 	%rd237, {%r139, %r138};
	xor.b64  	%rd238, %rd236, %rd237;
	xor.b64  	%rd239, %rd199, %rd176;
	and.b64  	%rd240, %rd222, %rd239;
	xor.b64  	%rd241, %rd240, %rd176;
	add.s64 	%rd242, %rd154, %rd1075;
	add.s64 	%rd243, %rd242, %rd241;
	add.s64 	%rd244, %rd243, %rd238;
	add.s64 	%rd245, %rd244, %rd165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r140,%dummy}, %rd233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r141}, %rd233;
	}
	shf.r.wrap.b32 	%r142, %r141, %r140, 28;
	shf.r.wrap.b32 	%r143, %r140, %r141, 28;
	mov.b64 	%rd246, {%r143, %r142};
	shf.l.wrap.b32 	%r144, %r140, %r141, 30;
	shf.l.wrap.b32 	%r145, %r141, %r140, 30;
	mov.b64 	%rd247, {%r145, %r144};
	xor.b64  	%rd248, %rd246, %rd247;
	shf.l.wrap.b32 	%r146, %r140, %r141, 25;
	shf.l.wrap.b32 	%r147, %r141, %r140, 25;
	mov.b64 	%rd249, {%r147, %r146};
	xor.b64  	%rd250, %rd248, %rd249;
	and.b64  	%rd251, %rd233, %rd210;
	xor.b64  	%rd252, %rd233, %rd210;
	and.b64  	%rd253, %rd252, %rd187;
	or.b64  	%rd254, %rd253, %rd251;
	add.s64 	%rd255, %rd250, %rd254;
	add.s64 	%rd256, %rd255, %rd244;
	add.s64 	%rd257, %rd176, %rd1076;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r148,%dummy}, %rd245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r149}, %rd245;
	}
	shf.r.wrap.b32 	%r150, %r149, %r148, 14;
	shf.r.wrap.b32 	%r151, %r148, %r149, 14;
	mov.b64 	%rd258, {%r151, %r150};
	shf.r.wrap.b32 	%r152, %r149, %r148, 18;
	shf.r.wrap.b32 	%r153, %r148, %r149, 18;
	mov.b64 	%rd259, {%r153, %r152};
	xor.b64  	%rd260, %rd258, %rd259;
	shf.l.wrap.b32 	%r154, %r148, %r149, 23;
	shf.l.wrap.b32 	%r155, %r149, %r148, 23;
	mov.b64 	%rd261, {%r155, %r154};
	xor.b64  	%rd262, %rd260, %rd261;
	xor.b64  	%rd263, %rd222, %rd199;
	and.b64  	%rd264, %rd245, %rd263;
	xor.b64  	%rd265, %rd264, %rd199;
	add.s64 	%rd266, %rd257, %rd265;
	add.s64 	%rd267, %rd266, %rd262;
	add.s64 	%rd268, %rd267, %rd187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r156,%dummy}, %rd256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r157}, %rd256;
	}
	shf.r.wrap.b32 	%r158, %r157, %r156, 28;
	shf.r.wrap.b32 	%r159, %r156, %r157, 28;
	mov.b64 	%rd269, {%r159, %r158};
	shf.l.wrap.b32 	%r160, %r156, %r157, 30;
	shf.l.wrap.b32 	%r161, %r157, %r156, 30;
	mov.b64 	%rd270, {%r161, %r160};
	xor.b64  	%rd271, %rd269, %rd270;
	shf.l.wrap.b32 	%r162, %r156, %r157, 25;
	shf.l.wrap.b32 	%r163, %r157, %r156, 25;
	mov.b64 	%rd272, {%r163, %r162};
	xor.b64  	%rd273, %rd271, %rd272;
	and.b64  	%rd274, %rd256, %rd233;
	xor.b64  	%rd275, %rd256, %rd233;
	and.b64  	%rd276, %rd275, %rd210;
	or.b64  	%rd277, %rd276, %rd274;
	add.s64 	%rd278, %rd273, %rd277;
	add.s64 	%rd279, %rd278, %rd267;
	add.s64 	%rd280, %rd199, %rd1077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r164,%dummy}, %rd268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r165}, %rd268;
	}
	shf.r.wrap.b32 	%r166, %r165, %r164, 14;
	shf.r.wrap.b32 	%r167, %r164, %r165, 14;
	mov.b64 	%rd281, {%r167, %r166};
	shf.r.wrap.b32 	%r168, %r165, %r164, 18;
	shf.r.wrap.b32 	%r169, %r164, %r165, 18;
	mov.b64 	%rd282, {%r169, %r168};
	xor.b64  	%rd283, %rd281, %rd282;
	shf.l.wrap.b32 	%r170, %r164, %r165, 23;
	shf.l.wrap.b32 	%r171, %r165, %r164, 23;
	mov.b64 	%rd284, {%r171, %r170};
	xor.b64  	%rd285, %rd283, %rd284;
	xor.b64  	%rd286, %rd245, %rd222;
	and.b64  	%rd287, %rd268, %rd286;
	xor.b64  	%rd288, %rd287, %rd222;
	add.s64 	%rd289, %rd280, %rd288;
	add.s64 	%rd290, %rd289, %rd285;
	add.s64 	%rd291, %rd290, %rd210;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r172,%dummy}, %rd279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r173}, %rd279;
	}
	shf.r.wrap.b32 	%r174, %r173, %r172, 28;
	shf.r.wrap.b32 	%r175, %r172, %r173, 28;
	mov.b64 	%rd292, {%r175, %r174};
	shf.l.wrap.b32 	%r176, %r172, %r173, 30;
	shf.l.wrap.b32 	%r177, %r173, %r172, 30;
	mov.b64 	%rd293, {%r177, %r176};
	xor.b64  	%rd294, %rd292, %rd293;
	shf.l.wrap.b32 	%r178, %r172, %r173, 25;
	shf.l.wrap.b32 	%r179, %r173, %r172, 25;
	mov.b64 	%rd295, {%r179, %r178};
	xor.b64  	%rd296, %rd294, %rd295;
	and.b64  	%rd297, %rd279, %rd256;
	xor.b64  	%rd298, %rd279, %rd256;
	and.b64  	%rd299, %rd298, %rd233;
	or.b64  	%rd300, %rd299, %rd297;
	add.s64 	%rd301, %rd296, %rd300;
	add.s64 	%rd302, %rd301, %rd290;
	add.s64 	%rd303, %rd222, %rd1078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r180,%dummy}, %rd291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r181}, %rd291;
	}
	shf.r.wrap.b32 	%r182, %r181, %r180, 14;
	shf.r.wrap.b32 	%r183, %r180, %r181, 14;
	mov.b64 	%rd304, {%r183, %r182};
	shf.r.wrap.b32 	%r184, %r181, %r180, 18;
	shf.r.wrap.b32 	%r185, %r180, %r181, 18;
	mov.b64 	%rd305, {%r185, %r184};
	xor.b64  	%rd306, %rd304, %rd305;
	shf.l.wrap.b32 	%r186, %r180, %r181, 23;
	shf.l.wrap.b32 	%r187, %r181, %r180, 23;
	mov.b64 	%rd307, {%r187, %r186};
	xor.b64  	%rd308, %rd306, %rd307;
	xor.b64  	%rd309, %rd268, %rd245;
	and.b64  	%rd310, %rd291, %rd309;
	xor.b64  	%rd311, %rd310, %rd245;
	add.s64 	%rd312, %rd303, %rd311;
	add.s64 	%rd313, %rd312, %rd308;
	add.s64 	%rd314, %rd313, %rd233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r188,%dummy}, %rd302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r189}, %rd302;
	}
	shf.r.wrap.b32 	%r190, %r189, %r188, 28;
	shf.r.wrap.b32 	%r191, %r188, %r189, 28;
	mov.b64 	%rd315, {%r191, %r190};
	shf.l.wrap.b32 	%r192, %r188, %r189, 30;
	shf.l.wrap.b32 	%r193, %r189, %r188, 30;
	mov.b64 	%rd316, {%r193, %r192};
	xor.b64  	%rd317, %rd315, %rd316;
	shf.l.wrap.b32 	%r194, %r188, %r189, 25;
	shf.l.wrap.b32 	%r195, %r189, %r188, 25;
	mov.b64 	%rd318, {%r195, %r194};
	xor.b64  	%rd319, %rd317, %rd318;
	and.b64  	%rd320, %rd302, %rd279;
	xor.b64  	%rd321, %rd302, %rd279;
	and.b64  	%rd322, %rd321, %rd256;
	or.b64  	%rd323, %rd322, %rd320;
	add.s64 	%rd324, %rd319, %rd323;
	add.s64 	%rd325, %rd324, %rd313;
	add.s64 	%rd326, %rd245, %rd1079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r196,%dummy}, %rd314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r197}, %rd314;
	}
	shf.r.wrap.b32 	%r198, %r197, %r196, 14;
	shf.r.wrap.b32 	%r199, %r196, %r197, 14;
	mov.b64 	%rd327, {%r199, %r198};
	shf.r.wrap.b32 	%r200, %r197, %r196, 18;
	shf.r.wrap.b32 	%r201, %r196, %r197, 18;
	mov.b64 	%rd328, {%r201, %r200};
	xor.b64  	%rd329, %rd327, %rd328;
	shf.l.wrap.b32 	%r202, %r196, %r197, 23;
	shf.l.wrap.b32 	%r203, %r197, %r196, 23;
	mov.b64 	%rd330, {%r203, %r202};
	xor.b64  	%rd331, %rd329, %rd330;
	xor.b64  	%rd332, %rd291, %rd268;
	and.b64  	%rd333, %rd314, %rd332;
	xor.b64  	%rd334, %rd333, %rd268;
	add.s64 	%rd335, %rd326, %rd334;
	add.s64 	%rd336, %rd335, %rd331;
	add.s64 	%rd337, %rd336, %rd256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r204,%dummy}, %rd325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r205}, %rd325;
	}
	shf.r.wrap.b32 	%r206, %r205, %r204, 28;
	shf.r.wrap.b32 	%r207, %r204, %r205, 28;
	mov.b64 	%rd338, {%r207, %r206};
	shf.l.wrap.b32 	%r208, %r204, %r205, 30;
	shf.l.wrap.b32 	%r209, %r205, %r204, 30;
	mov.b64 	%rd339, {%r209, %r208};
	xor.b64  	%rd340, %rd338, %rd339;
	shf.l.wrap.b32 	%r210, %r204, %r205, 25;
	shf.l.wrap.b32 	%r211, %r205, %r204, 25;
	mov.b64 	%rd341, {%r211, %r210};
	xor.b64  	%rd342, %rd340, %rd341;
	and.b64  	%rd343, %rd325, %rd302;
	xor.b64  	%rd344, %rd325, %rd302;
	and.b64  	%rd345, %rd344, %rd279;
	or.b64  	%rd346, %rd345, %rd343;
	add.s64 	%rd347, %rd342, %rd346;
	add.s64 	%rd348, %rd347, %rd336;
	add.s64 	%rd349, %rd268, %rd1080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r212,%dummy}, %rd337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r213}, %rd337;
	}
	shf.r.wrap.b32 	%r214, %r213, %r212, 14;
	shf.r.wrap.b32 	%r215, %r212, %r213, 14;
	mov.b64 	%rd350, {%r215, %r214};
	shf.r.wrap.b32 	%r216, %r213, %r212, 18;
	shf.r.wrap.b32 	%r217, %r212, %r213, 18;
	mov.b64 	%rd351, {%r217, %r216};
	xor.b64  	%rd352, %rd350, %rd351;
	shf.l.wrap.b32 	%r218, %r212, %r213, 23;
	shf.l.wrap.b32 	%r219, %r213, %r212, 23;
	mov.b64 	%rd353, {%r219, %r218};
	xor.b64  	%rd354, %rd352, %rd353;
	xor.b64  	%rd355, %rd314, %rd291;
	and.b64  	%rd356, %rd337, %rd355;
	xor.b64  	%rd357, %rd356, %rd291;
	add.s64 	%rd358, %rd349, %rd357;
	add.s64 	%rd359, %rd358, %rd354;
	add.s64 	%rd360, %rd359, %rd279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r220,%dummy}, %rd348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r221}, %rd348;
	}
	shf.r.wrap.b32 	%r222, %r221, %r220, 28;
	shf.r.wrap.b32 	%r223, %r220, %r221, 28;
	mov.b64 	%rd361, {%r223, %r222};
	shf.l.wrap.b32 	%r224, %r220, %r221, 30;
	shf.l.wrap.b32 	%r225, %r221, %r220, 30;
	mov.b64 	%rd362, {%r225, %r224};
	xor.b64  	%rd363, %rd361, %rd362;
	shf.l.wrap.b32 	%r226, %r220, %r221, 25;
	shf.l.wrap.b32 	%r227, %r221, %r220, 25;
	mov.b64 	%rd364, {%r227, %r226};
	xor.b64  	%rd365, %rd363, %rd364;
	and.b64  	%rd366, %rd348, %rd325;
	xor.b64  	%rd367, %rd348, %rd325;
	and.b64  	%rd368, %rd367, %rd302;
	or.b64  	%rd369, %rd368, %rd366;
	add.s64 	%rd370, %rd365, %rd369;
	add.s64 	%rd371, %rd370, %rd359;
	add.s64 	%rd372, %rd291, %rd1081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r228,%dummy}, %rd360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r229}, %rd360;
	}
	shf.r.wrap.b32 	%r230, %r229, %r228, 14;
	shf.r.wrap.b32 	%r231, %r228, %r229, 14;
	mov.b64 	%rd373, {%r231, %r230};
	shf.r.wrap.b32 	%r232, %r229, %r228, 18;
	shf.r.wrap.b32 	%r233, %r228, %r229, 18;
	mov.b64 	%rd374, {%r233, %r232};
	xor.b64  	%rd375, %rd373, %rd374;
	shf.l.wrap.b32 	%r234, %r228, %r229, 23;
	shf.l.wrap.b32 	%r235, %r229, %r228, 23;
	mov.b64 	%rd376, {%r235, %r234};
	xor.b64  	%rd377, %rd375, %rd376;
	xor.b64  	%rd378, %rd337, %rd314;
	and.b64  	%rd379, %rd360, %rd378;
	xor.b64  	%rd380, %rd379, %rd314;
	add.s64 	%rd381, %rd372, %rd380;
	add.s64 	%rd382, %rd381, %rd377;
	add.s64 	%rd1094, %rd382, %rd302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r236,%dummy}, %rd371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r237}, %rd371;
	}
	shf.r.wrap.b32 	%r238, %r237, %r236, 28;
	shf.r.wrap.b32 	%r239, %r236, %r237, 28;
	mov.b64 	%rd383, {%r239, %r238};
	shf.l.wrap.b32 	%r240, %r236, %r237, 30;
	shf.l.wrap.b32 	%r241, %r237, %r236, 30;
	mov.b64 	%rd384, {%r241, %r240};
	xor.b64  	%rd385, %rd383, %rd384;
	shf.l.wrap.b32 	%r242, %r236, %r237, 25;
	shf.l.wrap.b32 	%r243, %r237, %r236, 25;
	mov.b64 	%rd386, {%r243, %r242};
	xor.b64  	%rd387, %rd385, %rd386;
	and.b64  	%rd388, %rd371, %rd348;
	xor.b64  	%rd389, %rd371, %rd348;
	and.b64  	%rd390, %rd389, %rd325;
	or.b64  	%rd391, %rd390, %rd388;
	add.s64 	%rd392, %rd387, %rd391;
	add.s64 	%rd1117, %rd392, %rd382;
	add.s64 	%rd393, %rd314, %rd1082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r244,%dummy}, %rd1094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r245}, %rd1094;
	}
	shf.r.wrap.b32 	%r246, %r245, %r244, 14;
	shf.r.wrap.b32 	%r247, %r244, %r245, 14;
	mov.b64 	%rd394, {%r247, %r246};
	shf.r.wrap.b32 	%r248, %r245, %r244, 18;
	shf.r.wrap.b32 	%r249, %r244, %r245, 18;
	mov.b64 	%rd395, {%r249, %r248};
	xor.b64  	%rd396, %rd394, %rd395;
	shf.l.wrap.b32 	%r250, %r244, %r245, 23;
	shf.l.wrap.b32 	%r251, %r245, %r244, 23;
	mov.b64 	%rd397, {%r251, %r250};
	xor.b64  	%rd398, %rd396, %rd397;
	xor.b64  	%rd399, %rd360, %rd337;
	and.b64  	%rd400, %rd1094, %rd399;
	xor.b64  	%rd401, %rd400, %rd337;
	add.s64 	%rd402, %rd393, %rd401;
	add.s64 	%rd403, %rd402, %rd398;
	add.s64 	%rd1095, %rd403, %rd325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r252,%dummy}, %rd1117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r253}, %rd1117;
	}
	shf.r.wrap.b32 	%r254, %r253, %r252, 28;
	shf.r.wrap.b32 	%r255, %r252, %r253, 28;
	mov.b64 	%rd404, {%r255, %r254};
	shf.l.wrap.b32 	%r256, %r252, %r253, 30;
	shf.l.wrap.b32 	%r257, %r253, %r252, 30;
	mov.b64 	%rd405, {%r257, %r256};
	xor.b64  	%rd406, %rd404, %rd405;
	shf.l.wrap.b32 	%r258, %r252, %r253, 25;
	shf.l.wrap.b32 	%r259, %r253, %r252, 25;
	mov.b64 	%rd407, {%r259, %r258};
	xor.b64  	%rd408, %rd406, %rd407;
	and.b64  	%rd409, %rd1117, %rd371;
	xor.b64  	%rd410, %rd1117, %rd371;
	and.b64  	%rd411, %rd410, %rd348;
	or.b64  	%rd412, %rd411, %rd409;
	add.s64 	%rd413, %rd408, %rd412;
	add.s64 	%rd1116, %rd413, %rd403;
	add.s64 	%rd414, %rd337, %rd1083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r260,%dummy}, %rd1095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r261}, %rd1095;
	}
	shf.r.wrap.b32 	%r262, %r261, %r260, 14;
	shf.r.wrap.b32 	%r263, %r260, %r261, 14;
	mov.b64 	%rd415, {%r263, %r262};
	shf.r.wrap.b32 	%r264, %r261, %r260, 18;
	shf.r.wrap.b32 	%r265, %r260, %r261, 18;
	mov.b64 	%rd416, {%r265, %r264};
	xor.b64  	%rd417, %rd415, %rd416;
	shf.l.wrap.b32 	%r266, %r260, %r261, 23;
	shf.l.wrap.b32 	%r267, %r261, %r260, 23;
	mov.b64 	%rd418, {%r267, %r266};
	xor.b64  	%rd419, %rd417, %rd418;
	xor.b64  	%rd420, %rd1094, %rd360;
	and.b64  	%rd421, %rd1095, %rd420;
	xor.b64  	%rd422, %rd421, %rd360;
	add.s64 	%rd423, %rd414, %rd422;
	add.s64 	%rd424, %rd423, %rd419;
	add.s64 	%rd1096, %rd424, %rd348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r268,%dummy}, %rd1116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r269}, %rd1116;
	}
	shf.r.wrap.b32 	%r270, %r269, %r268, 28;
	shf.r.wrap.b32 	%r271, %r268, %r269, 28;
	mov.b64 	%rd425, {%r271, %r270};
	shf.l.wrap.b32 	%r272, %r268, %r269, 30;
	shf.l.wrap.b32 	%r273, %r269, %r268, 30;
	mov.b64 	%rd426, {%r273, %r272};
	xor.b64  	%rd427, %rd425, %rd426;
	shf.l.wrap.b32 	%r274, %r268, %r269, 25;
	shf.l.wrap.b32 	%r275, %r269, %r268, 25;
	mov.b64 	%rd428, {%r275, %r274};
	xor.b64  	%rd429, %rd427, %rd428;
	and.b64  	%rd430, %rd1116, %rd1117;
	xor.b64  	%rd431, %rd1116, %rd1117;
	and.b64  	%rd432, %rd431, %rd371;
	or.b64  	%rd433, %rd432, %rd430;
	add.s64 	%rd434, %rd429, %rd433;
	add.s64 	%rd1115, %rd434, %rd424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r276,%dummy}, %rd1096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r277}, %rd1096;
	}
	shf.r.wrap.b32 	%r278, %r277, %r276, 14;
	shf.r.wrap.b32 	%r279, %r276, %r277, 14;
	mov.b64 	%rd435, {%r279, %r278};
	shf.r.wrap.b32 	%r280, %r277, %r276, 18;
	shf.r.wrap.b32 	%r281, %r276, %r277, 18;
	mov.b64 	%rd436, {%r281, %r280};
	xor.b64  	%rd437, %rd435, %rd436;
	shf.l.wrap.b32 	%r282, %r276, %r277, 23;
	shf.l.wrap.b32 	%r283, %r277, %r276, 23;
	mov.b64 	%rd438, {%r283, %r282};
	xor.b64  	%rd439, %rd437, %rd438;
	xor.b64  	%rd440, %rd1095, %rd1094;
	and.b64  	%rd441, %rd1096, %rd440;
	xor.b64  	%rd442, %rd441, %rd1094;
	add.s64 	%rd443, %rd19, %rd360;
	add.s64 	%rd444, %rd443, %rd442;
	add.s64 	%rd445, %rd444, %rd439;
	add.s64 	%rd1097, %rd445, %rd371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r284,%dummy}, %rd1115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r285}, %rd1115;
	}
	shf.r.wrap.b32 	%r286, %r285, %r284, 28;
	shf.r.wrap.b32 	%r287, %r284, %r285, 28;
	mov.b64 	%rd446, {%r287, %r286};
	shf.l.wrap.b32 	%r288, %r284, %r285, 30;
	shf.l.wrap.b32 	%r289, %r285, %r284, 30;
	mov.b64 	%rd447, {%r289, %r288};
	xor.b64  	%rd448, %rd446, %rd447;
	shf.l.wrap.b32 	%r290, %r284, %r285, 25;
	shf.l.wrap.b32 	%r291, %r285, %r284, 25;
	mov.b64 	%rd449, {%r291, %r290};
	xor.b64  	%rd450, %rd448, %rd449;
	and.b64  	%rd451, %rd1115, %rd1116;
	xor.b64  	%rd452, %rd1115, %rd1116;
	and.b64  	%rd453, %rd452, %rd1117;
	or.b64  	%rd454, %rd453, %rd451;
	add.s64 	%rd455, %rd450, %rd454;
	add.s64 	%rd1114, %rd455, %rd445;
	mov.u64 	%rd1100, 0;
	mov.u32 	%r796, 16;
	mov.u64 	%rd1093, k_sha512;
	mov.u64 	%rd1099, %rd2;
	mov.u64 	%rd1101, %rd1100;
	mov.u64 	%rd1102, %rd1100;
	mov.u64 	%rd1103, %rd1100;
	mov.u64 	%rd1104, %rd1100;
	mov.u64 	%rd1105, %rd1100;
	mov.u64 	%rd1106, %rd1100;
	mov.u64 	%rd1107, %rd1100;
	mov.u64 	%rd1108, %rd1100;
	mov.u64 	%rd1109, %rd1100;
	mov.u64 	%rd1110, %rd1100;
	mov.u64 	%rd1111, %rd1100;
	mov.u64 	%rd1112, %rd1100;

BB0_4:
	shr.u64 	%rd456, %rd1112, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r292}, %rd1112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r293,%dummy}, %rd1112;
	}
	shf.l.wrap.b32 	%r294, %r293, %r292, 3;
	shf.l.wrap.b32 	%r295, %r292, %r293, 3;
	mov.b64 	%rd457, {%r295, %r294};
	xor.b64  	%rd458, %rd457, %rd456;
	shf.r.wrap.b32 	%r296, %r292, %r293, 19;
	shf.r.wrap.b32 	%r297, %r293, %r292, 19;
	mov.b64 	%rd459, {%r297, %r296};
	xor.b64  	%rd460, %rd458, %rd459;
	add.s64 	%rd461, %rd1107, %rd460;
	shr.u64 	%rd462, %rd1099, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r298,%dummy}, %rd1099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r299}, %rd1099;
	}
	shf.r.wrap.b32 	%r300, %r299, %r298, 8;
	shf.r.wrap.b32 	%r301, %r298, %r299, 8;
	mov.b64 	%rd463, {%r301, %r300};
	xor.b64  	%rd464, %rd463, %rd462;
	shf.r.wrap.b32 	%r302, %r299, %r298, 1;
	shf.r.wrap.b32 	%r303, %r298, %r299, 1;
	mov.b64 	%rd465, {%r303, %r302};
	xor.b64  	%rd466, %rd464, %rd465;
	add.s64 	%rd467, %rd461, %rd1098;
	add.s64 	%rd1098, %rd467, %rd466;
	shr.u64 	%rd468, %rd1113, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r304}, %rd1113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r305,%dummy}, %rd1113;
	}
	shf.l.wrap.b32 	%r306, %r305, %r304, 3;
	shf.l.wrap.b32 	%r307, %r304, %r305, 3;
	mov.b64 	%rd469, {%r307, %r306};
	xor.b64  	%rd470, %rd469, %rd468;
	shf.r.wrap.b32 	%r308, %r304, %r305, 19;
	shf.r.wrap.b32 	%r309, %r305, %r304, 19;
	mov.b64 	%rd471, {%r309, %r308};
	xor.b64  	%rd472, %rd470, %rd471;
	add.s64 	%rd473, %rd1108, %rd472;
	shr.u64 	%rd474, %rd1100, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r310,%dummy}, %rd1100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r311}, %rd1100;
	}
	shf.r.wrap.b32 	%r312, %r311, %r310, 8;
	shf.r.wrap.b32 	%r313, %r310, %r311, 8;
	mov.b64 	%rd475, {%r313, %r312};
	xor.b64  	%rd476, %rd475, %rd474;
	shf.r.wrap.b32 	%r314, %r311, %r310, 1;
	shf.r.wrap.b32 	%r315, %r310, %r311, 1;
	mov.b64 	%rd477, {%r315, %r314};
	xor.b64  	%rd478, %rd476, %rd477;
	add.s64 	%rd479, %rd473, %rd1099;
	add.s64 	%rd1099, %rd479, %rd478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r316,%dummy}, %rd1098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r317}, %rd1098;
	}
	shf.r.wrap.b32 	%r318, %r317, %r316, 19;
	shf.r.wrap.b32 	%r319, %r316, %r317, 19;
	mov.b64 	%rd480, {%r319, %r318};
	shf.l.wrap.b32 	%r320, %r316, %r317, 3;
	shf.l.wrap.b32 	%r321, %r317, %r316, 3;
	mov.b64 	%rd481, {%r321, %r320};
	shr.u64 	%rd482, %rd1098, 6;
	xor.b64  	%rd483, %rd481, %rd482;
	xor.b64  	%rd484, %rd483, %rd480;
	shr.u64 	%rd485, %rd1101, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r322,%dummy}, %rd1101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r323}, %rd1101;
	}
	shf.r.wrap.b32 	%r324, %r323, %r322, 8;
	shf.r.wrap.b32 	%r325, %r322, %r323, 8;
	mov.b64 	%rd486, {%r325, %r324};
	xor.b64  	%rd487, %rd486, %rd485;
	shf.r.wrap.b32 	%r326, %r323, %r322, 1;
	shf.r.wrap.b32 	%r327, %r322, %r323, 1;
	mov.b64 	%rd488, {%r327, %r326};
	xor.b64  	%rd489, %rd487, %rd488;
	add.s64 	%rd490, %rd1100, %rd1109;
	add.s64 	%rd491, %rd490, %rd489;
	add.s64 	%rd1100, %rd491, %rd484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r328,%dummy}, %rd1099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r329}, %rd1099;
	}
	shf.r.wrap.b32 	%r330, %r329, %r328, 19;
	shf.r.wrap.b32 	%r331, %r328, %r329, 19;
	mov.b64 	%rd492, {%r331, %r330};
	shf.l.wrap.b32 	%r332, %r328, %r329, 3;
	shf.l.wrap.b32 	%r333, %r329, %r328, 3;
	mov.b64 	%rd493, {%r333, %r332};
	shr.u64 	%rd494, %rd1099, 6;
	xor.b64  	%rd495, %rd493, %rd494;
	xor.b64  	%rd496, %rd495, %rd492;
	shr.u64 	%rd497, %rd1102, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r334,%dummy}, %rd1102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r335}, %rd1102;
	}
	shf.r.wrap.b32 	%r336, %r335, %r334, 8;
	shf.r.wrap.b32 	%r337, %r334, %r335, 8;
	mov.b64 	%rd498, {%r337, %r336};
	xor.b64  	%rd499, %rd498, %rd497;
	shf.r.wrap.b32 	%r338, %r335, %r334, 1;
	shf.r.wrap.b32 	%r339, %r334, %r335, 1;
	mov.b64 	%rd500, {%r339, %r338};
	xor.b64  	%rd501, %rd499, %rd500;
	add.s64 	%rd502, %rd1101, %rd1110;
	add.s64 	%rd503, %rd502, %rd501;
	add.s64 	%rd1101, %rd503, %rd496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r340,%dummy}, %rd1100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r341}, %rd1100;
	}
	shf.r.wrap.b32 	%r342, %r341, %r340, 19;
	shf.r.wrap.b32 	%r343, %r340, %r341, 19;
	mov.b64 	%rd504, {%r343, %r342};
	shf.l.wrap.b32 	%r344, %r340, %r341, 3;
	shf.l.wrap.b32 	%r345, %r341, %r340, 3;
	mov.b64 	%rd505, {%r345, %r344};
	shr.u64 	%rd506, %rd1100, 6;
	xor.b64  	%rd507, %rd505, %rd506;
	xor.b64  	%rd508, %rd507, %rd504;
	shr.u64 	%rd509, %rd1103, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r346,%dummy}, %rd1103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r347}, %rd1103;
	}
	shf.r.wrap.b32 	%r348, %r347, %r346, 8;
	shf.r.wrap.b32 	%r349, %r346, %r347, 8;
	mov.b64 	%rd510, {%r349, %r348};
	xor.b64  	%rd511, %rd510, %rd509;
	shf.r.wrap.b32 	%r350, %r347, %r346, 1;
	shf.r.wrap.b32 	%r351, %r346, %r347, 1;
	mov.b64 	%rd512, {%r351, %r350};
	xor.b64  	%rd513, %rd511, %rd512;
	add.s64 	%rd514, %rd1102, %rd1111;
	add.s64 	%rd515, %rd514, %rd513;
	add.s64 	%rd1102, %rd515, %rd508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r352,%dummy}, %rd1101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r353}, %rd1101;
	}
	shf.r.wrap.b32 	%r354, %r353, %r352, 19;
	shf.r.wrap.b32 	%r355, %r352, %r353, 19;
	mov.b64 	%rd516, {%r355, %r354};
	shf.l.wrap.b32 	%r356, %r352, %r353, 3;
	shf.l.wrap.b32 	%r357, %r353, %r352, 3;
	mov.b64 	%rd517, {%r357, %r356};
	shr.u64 	%rd518, %rd1101, 6;
	xor.b64  	%rd519, %rd517, %rd518;
	xor.b64  	%rd520, %rd519, %rd516;
	shr.u64 	%rd521, %rd1104, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r358,%dummy}, %rd1104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r359}, %rd1104;
	}
	shf.r.wrap.b32 	%r360, %r359, %r358, 8;
	shf.r.wrap.b32 	%r361, %r358, %r359, 8;
	mov.b64 	%rd522, {%r361, %r360};
	xor.b64  	%rd523, %rd522, %rd521;
	shf.r.wrap.b32 	%r362, %r359, %r358, 1;
	shf.r.wrap.b32 	%r363, %r358, %r359, 1;
	mov.b64 	%rd524, {%r363, %r362};
	xor.b64  	%rd525, %rd523, %rd524;
	add.s64 	%rd526, %rd1103, %rd1112;
	add.s64 	%rd527, %rd526, %rd525;
	add.s64 	%rd1103, %rd527, %rd520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r364,%dummy}, %rd1102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r365}, %rd1102;
	}
	shf.r.wrap.b32 	%r366, %r365, %r364, 19;
	shf.r.wrap.b32 	%r367, %r364, %r365, 19;
	mov.b64 	%rd528, {%r367, %r366};
	shf.l.wrap.b32 	%r368, %r364, %r365, 3;
	shf.l.wrap.b32 	%r369, %r365, %r364, 3;
	mov.b64 	%rd529, {%r369, %r368};
	shr.u64 	%rd530, %rd1102, 6;
	xor.b64  	%rd531, %rd529, %rd530;
	xor.b64  	%rd532, %rd531, %rd528;
	shr.u64 	%rd533, %rd1105, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r370,%dummy}, %rd1105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r371}, %rd1105;
	}
	shf.r.wrap.b32 	%r372, %r371, %r370, 8;
	shf.r.wrap.b32 	%r373, %r370, %r371, 8;
	mov.b64 	%rd534, {%r373, %r372};
	xor.b64  	%rd535, %rd534, %rd533;
	shf.r.wrap.b32 	%r374, %r371, %r370, 1;
	shf.r.wrap.b32 	%r375, %r370, %r371, 1;
	mov.b64 	%rd536, {%r375, %r374};
	xor.b64  	%rd537, %rd535, %rd536;
	add.s64 	%rd538, %rd1104, %rd1113;
	add.s64 	%rd539, %rd538, %rd537;
	add.s64 	%rd1104, %rd539, %rd532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r376,%dummy}, %rd1103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r377}, %rd1103;
	}
	shf.r.wrap.b32 	%r378, %r377, %r376, 19;
	shf.r.wrap.b32 	%r379, %r376, %r377, 19;
	mov.b64 	%rd540, {%r379, %r378};
	shf.l.wrap.b32 	%r380, %r376, %r377, 3;
	shf.l.wrap.b32 	%r381, %r377, %r376, 3;
	mov.b64 	%rd541, {%r381, %r380};
	shr.u64 	%rd542, %rd1103, 6;
	xor.b64  	%rd543, %rd541, %rd542;
	xor.b64  	%rd544, %rd543, %rd540;
	shr.u64 	%rd545, %rd1106, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r382,%dummy}, %rd1106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r383}, %rd1106;
	}
	shf.r.wrap.b32 	%r384, %r383, %r382, 8;
	shf.r.wrap.b32 	%r385, %r382, %r383, 8;
	mov.b64 	%rd546, {%r385, %r384};
	xor.b64  	%rd547, %rd546, %rd545;
	shf.r.wrap.b32 	%r386, %r383, %r382, 1;
	shf.r.wrap.b32 	%r387, %r382, %r383, 1;
	mov.b64 	%rd548, {%r387, %r386};
	xor.b64  	%rd549, %rd547, %rd548;
	add.s64 	%rd550, %rd549, %rd1105;
	add.s64 	%rd551, %rd550, %rd1098;
	add.s64 	%rd1105, %rd551, %rd544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r388,%dummy}, %rd1104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r389}, %rd1104;
	}
	shf.r.wrap.b32 	%r390, %r389, %r388, 19;
	shf.r.wrap.b32 	%r391, %r388, %r389, 19;
	mov.b64 	%rd552, {%r391, %r390};
	shf.l.wrap.b32 	%r392, %r388, %r389, 3;
	shf.l.wrap.b32 	%r393, %r389, %r388, 3;
	mov.b64 	%rd553, {%r393, %r392};
	shr.u64 	%rd554, %rd1104, 6;
	xor.b64  	%rd555, %rd553, %rd554;
	xor.b64  	%rd556, %rd555, %rd552;
	shr.u64 	%rd557, %rd1107, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r394,%dummy}, %rd1107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r395}, %rd1107;
	}
	shf.r.wrap.b32 	%r396, %r395, %r394, 8;
	shf.r.wrap.b32 	%r397, %r394, %r395, 8;
	mov.b64 	%rd558, {%r397, %r396};
	xor.b64  	%rd559, %rd558, %rd557;
	shf.r.wrap.b32 	%r398, %r395, %r394, 1;
	shf.r.wrap.b32 	%r399, %r394, %r395, 1;
	mov.b64 	%rd560, {%r399, %r398};
	xor.b64  	%rd561, %rd559, %rd560;
	add.s64 	%rd562, %rd561, %rd1106;
	add.s64 	%rd563, %rd562, %rd1099;
	add.s64 	%rd1106, %rd563, %rd556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r400,%dummy}, %rd1105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r401}, %rd1105;
	}
	shf.r.wrap.b32 	%r402, %r401, %r400, 19;
	shf.r.wrap.b32 	%r403, %r400, %r401, 19;
	mov.b64 	%rd564, {%r403, %r402};
	shf.l.wrap.b32 	%r404, %r400, %r401, 3;
	shf.l.wrap.b32 	%r405, %r401, %r400, 3;
	mov.b64 	%rd565, {%r405, %r404};
	shr.u64 	%rd566, %rd1105, 6;
	xor.b64  	%rd567, %rd565, %rd566;
	xor.b64  	%rd568, %rd567, %rd564;
	shr.u64 	%rd569, %rd1108, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r406,%dummy}, %rd1108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r407}, %rd1108;
	}
	shf.r.wrap.b32 	%r408, %r407, %r406, 8;
	shf.r.wrap.b32 	%r409, %r406, %r407, 8;
	mov.b64 	%rd570, {%r409, %r408};
	xor.b64  	%rd571, %rd570, %rd569;
	shf.r.wrap.b32 	%r410, %r407, %r406, 1;
	shf.r.wrap.b32 	%r411, %r406, %r407, 1;
	mov.b64 	%rd572, {%r411, %r410};
	xor.b64  	%rd573, %rd571, %rd572;
	add.s64 	%rd574, %rd573, %rd1107;
	add.s64 	%rd575, %rd574, %rd1100;
	add.s64 	%rd1107, %rd575, %rd568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r412,%dummy}, %rd1106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r413}, %rd1106;
	}
	shf.r.wrap.b32 	%r414, %r413, %r412, 19;
	shf.r.wrap.b32 	%r415, %r412, %r413, 19;
	mov.b64 	%rd576, {%r415, %r414};
	shf.l.wrap.b32 	%r416, %r412, %r413, 3;
	shf.l.wrap.b32 	%r417, %r413, %r412, 3;
	mov.b64 	%rd577, {%r417, %r416};
	shr.u64 	%rd578, %rd1106, 6;
	xor.b64  	%rd579, %rd577, %rd578;
	xor.b64  	%rd580, %rd579, %rd576;
	shr.u64 	%rd581, %rd1109, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r418,%dummy}, %rd1109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r419}, %rd1109;
	}
	shf.r.wrap.b32 	%r420, %r419, %r418, 8;
	shf.r.wrap.b32 	%r421, %r418, %r419, 8;
	mov.b64 	%rd582, {%r421, %r420};
	xor.b64  	%rd583, %rd582, %rd581;
	shf.r.wrap.b32 	%r422, %r419, %r418, 1;
	shf.r.wrap.b32 	%r423, %r418, %r419, 1;
	mov.b64 	%rd584, {%r423, %r422};
	xor.b64  	%rd585, %rd583, %rd584;
	add.s64 	%rd586, %rd585, %rd1108;
	add.s64 	%rd587, %rd586, %rd1101;
	add.s64 	%rd1108, %rd587, %rd580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r424,%dummy}, %rd1107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r425}, %rd1107;
	}
	shf.r.wrap.b32 	%r426, %r425, %r424, 19;
	shf.r.wrap.b32 	%r427, %r424, %r425, 19;
	mov.b64 	%rd588, {%r427, %r426};
	shf.l.wrap.b32 	%r428, %r424, %r425, 3;
	shf.l.wrap.b32 	%r429, %r425, %r424, 3;
	mov.b64 	%rd589, {%r429, %r428};
	shr.u64 	%rd590, %rd1107, 6;
	xor.b64  	%rd591, %rd589, %rd590;
	xor.b64  	%rd592, %rd591, %rd588;
	shr.u64 	%rd593, %rd1110, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r430,%dummy}, %rd1110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r431}, %rd1110;
	}
	shf.r.wrap.b32 	%r432, %r431, %r430, 8;
	shf.r.wrap.b32 	%r433, %r430, %r431, 8;
	mov.b64 	%rd594, {%r433, %r432};
	xor.b64  	%rd595, %rd594, %rd593;
	shf.r.wrap.b32 	%r434, %r431, %r430, 1;
	shf.r.wrap.b32 	%r435, %r430, %r431, 1;
	mov.b64 	%rd596, {%r435, %r434};
	xor.b64  	%rd597, %rd595, %rd596;
	add.s64 	%rd598, %rd597, %rd1109;
	add.s64 	%rd599, %rd598, %rd1102;
	add.s64 	%rd1109, %rd599, %rd592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r436,%dummy}, %rd1108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r437}, %rd1108;
	}
	shf.r.wrap.b32 	%r438, %r437, %r436, 19;
	shf.r.wrap.b32 	%r439, %r436, %r437, 19;
	mov.b64 	%rd600, {%r439, %r438};
	shf.l.wrap.b32 	%r440, %r436, %r437, 3;
	shf.l.wrap.b32 	%r441, %r437, %r436, 3;
	mov.b64 	%rd601, {%r441, %r440};
	shr.u64 	%rd602, %rd1108, 6;
	xor.b64  	%rd603, %rd601, %rd602;
	xor.b64  	%rd604, %rd603, %rd600;
	shr.u64 	%rd605, %rd1111, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r442,%dummy}, %rd1111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r443}, %rd1111;
	}
	shf.r.wrap.b32 	%r444, %r443, %r442, 8;
	shf.r.wrap.b32 	%r445, %r442, %r443, 8;
	mov.b64 	%rd606, {%r445, %r444};
	xor.b64  	%rd607, %rd606, %rd605;
	shf.r.wrap.b32 	%r446, %r443, %r442, 1;
	shf.r.wrap.b32 	%r447, %r442, %r443, 1;
	mov.b64 	%rd608, {%r447, %r446};
	xor.b64  	%rd609, %rd607, %rd608;
	add.s64 	%rd610, %rd609, %rd1110;
	add.s64 	%rd611, %rd610, %rd1103;
	add.s64 	%rd1110, %rd611, %rd604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r448,%dummy}, %rd1109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r449}, %rd1109;
	}
	shf.r.wrap.b32 	%r450, %r449, %r448, 19;
	shf.r.wrap.b32 	%r451, %r448, %r449, 19;
	mov.b64 	%rd612, {%r451, %r450};
	shf.l.wrap.b32 	%r452, %r448, %r449, 3;
	shf.l.wrap.b32 	%r453, %r449, %r448, 3;
	mov.b64 	%rd613, {%r453, %r452};
	shr.u64 	%rd614, %rd1109, 6;
	xor.b64  	%rd615, %rd613, %rd614;
	xor.b64  	%rd616, %rd615, %rd612;
	shr.u64 	%rd617, %rd1112, 7;
	shf.r.wrap.b32 	%r454, %r292, %r293, 8;
	shf.r.wrap.b32 	%r455, %r293, %r292, 8;
	mov.b64 	%rd618, {%r455, %r454};
	xor.b64  	%rd619, %rd618, %rd617;
	shf.r.wrap.b32 	%r456, %r292, %r293, 1;
	shf.r.wrap.b32 	%r457, %r293, %r292, 1;
	mov.b64 	%rd620, {%r457, %r456};
	xor.b64  	%rd621, %rd619, %rd620;
	add.s64 	%rd622, %rd621, %rd1111;
	add.s64 	%rd623, %rd622, %rd1104;
	add.s64 	%rd1111, %rd623, %rd616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r458,%dummy}, %rd1110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r459}, %rd1110;
	}
	shf.r.wrap.b32 	%r460, %r459, %r458, 19;
	shf.r.wrap.b32 	%r461, %r458, %r459, 19;
	mov.b64 	%rd624, {%r461, %r460};
	shf.l.wrap.b32 	%r462, %r458, %r459, 3;
	shf.l.wrap.b32 	%r463, %r459, %r458, 3;
	mov.b64 	%rd625, {%r463, %r462};
	shr.u64 	%rd626, %rd1110, 6;
	xor.b64  	%rd627, %rd625, %rd626;
	xor.b64  	%rd628, %rd627, %rd624;
	shr.u64 	%rd629, %rd1113, 7;
	shf.r.wrap.b32 	%r464, %r304, %r305, 8;
	shf.r.wrap.b32 	%r465, %r305, %r304, 8;
	mov.b64 	%rd630, {%r465, %r464};
	xor.b64  	%rd631, %rd630, %rd629;
	shf.r.wrap.b32 	%r466, %r304, %r305, 1;
	shf.r.wrap.b32 	%r467, %r305, %r304, 1;
	mov.b64 	%rd632, {%r467, %r466};
	xor.b64  	%rd633, %rd631, %rd632;
	add.s64 	%rd634, %rd633, %rd1112;
	add.s64 	%rd635, %rd634, %rd1105;
	add.s64 	%rd1112, %rd635, %rd628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r468,%dummy}, %rd1111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r469}, %rd1111;
	}
	shf.r.wrap.b32 	%r470, %r469, %r468, 19;
	shf.r.wrap.b32 	%r471, %r468, %r469, 19;
	mov.b64 	%rd636, {%r471, %r470};
	shf.l.wrap.b32 	%r472, %r468, %r469, 3;
	shf.l.wrap.b32 	%r473, %r469, %r468, 3;
	mov.b64 	%rd637, {%r473, %r472};
	shr.u64 	%rd638, %rd1111, 6;
	xor.b64  	%rd639, %rd637, %rd638;
	xor.b64  	%rd640, %rd639, %rd636;
	shf.r.wrap.b32 	%r474, %r317, %r316, 1;
	shf.r.wrap.b32 	%r475, %r316, %r317, 1;
	mov.b64 	%rd641, {%r475, %r474};
	shf.r.wrap.b32 	%r476, %r317, %r316, 8;
	shf.r.wrap.b32 	%r477, %r316, %r317, 8;
	mov.b64 	%rd642, {%r477, %r476};
	shr.u64 	%rd643, %rd1098, 7;
	xor.b64  	%rd644, %rd642, %rd643;
	xor.b64  	%rd645, %rd644, %rd641;
	add.s64 	%rd646, %rd645, %rd1113;
	add.s64 	%rd647, %rd646, %rd1106;
	add.s64 	%rd1113, %rd647, %rd640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r478,%dummy}, %rd1097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r479}, %rd1097;
	}
	shf.r.wrap.b32 	%r480, %r479, %r478, 18;
	shf.r.wrap.b32 	%r481, %r478, %r479, 18;
	mov.b64 	%rd648, {%r481, %r480};
	shf.r.wrap.b32 	%r482, %r479, %r478, 14;
	shf.r.wrap.b32 	%r483, %r478, %r479, 14;
	mov.b64 	%rd649, {%r483, %r482};
	xor.b64  	%rd650, %rd649, %rd648;
	shf.l.wrap.b32 	%r484, %r478, %r479, 23;
	shf.l.wrap.b32 	%r485, %r479, %r478, 23;
	mov.b64 	%rd651, {%r485, %r484};
	xor.b64  	%rd652, %rd650, %rd651;
	xor.b64  	%rd653, %rd1095, %rd1096;
	and.b64  	%rd654, %rd653, %rd1097;
	xor.b64  	%rd655, %rd654, %rd1095;
	add.s64 	%rd656, %rd1098, %rd1094;
	add.s64 	%rd657, %rd656, %rd652;
	add.s64 	%rd658, %rd657, %rd655;
	add.s64 	%rd79, %rd1093, 128;
	ld.const.u64 	%rd659, [%rd1093+128];
	add.s64 	%rd660, %rd658, %rd659;
	add.s64 	%rd661, %rd660, %rd1117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r486}, %rd1114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r487,%dummy}, %rd1114;
	}
	shf.l.wrap.b32 	%r488, %r487, %r486, 30;
	shf.l.wrap.b32 	%r489, %r486, %r487, 30;
	mov.b64 	%rd662, {%r489, %r488};
	shf.r.wrap.b32 	%r490, %r486, %r487, 28;
	shf.r.wrap.b32 	%r491, %r487, %r486, 28;
	mov.b64 	%rd663, {%r491, %r490};
	xor.b64  	%rd664, %rd663, %rd662;
	shf.l.wrap.b32 	%r492, %r487, %r486, 25;
	shf.l.wrap.b32 	%r493, %r486, %r487, 25;
	mov.b64 	%rd665, {%r493, %r492};
	xor.b64  	%rd666, %rd664, %rd665;
	xor.b64  	%rd667, %rd1114, %rd1115;
	and.b64  	%rd668, %rd667, %rd1116;
	and.b64  	%rd669, %rd1114, %rd1115;
	or.b64  	%rd670, %rd668, %rd669;
	add.s64 	%rd671, %rd666, %rd670;
	add.s64 	%rd672, %rd671, %rd660;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r494,%dummy}, %rd661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r495}, %rd661;
	}
	shf.r.wrap.b32 	%r496, %r495, %r494, 14;
	shf.r.wrap.b32 	%r497, %r494, %r495, 14;
	mov.b64 	%rd673, {%r497, %r496};
	shf.r.wrap.b32 	%r498, %r495, %r494, 18;
	shf.r.wrap.b32 	%r499, %r494, %r495, 18;
	mov.b64 	%rd674, {%r499, %r498};
	xor.b64  	%rd675, %rd673, %rd674;
	shf.l.wrap.b32 	%r500, %r494, %r495, 23;
	shf.l.wrap.b32 	%r501, %r495, %r494, 23;
	mov.b64 	%rd676, {%r501, %r500};
	xor.b64  	%rd677, %rd675, %rd676;
	xor.b64  	%rd678, %rd1096, %rd1097;
	and.b64  	%rd679, %rd661, %rd678;
	xor.b64  	%rd680, %rd679, %rd1096;
	add.s64 	%rd681, %rd1099, %rd1095;
	ld.const.u64 	%rd682, [%rd1093+136];
	add.s64 	%rd683, %rd681, %rd682;
	add.s64 	%rd684, %rd683, %rd680;
	add.s64 	%rd685, %rd684, %rd677;
	add.s64 	%rd686, %rd685, %rd1116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r502,%dummy}, %rd672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r503}, %rd672;
	}
	shf.r.wrap.b32 	%r504, %r503, %r502, 28;
	shf.r.wrap.b32 	%r505, %r502, %r503, 28;
	mov.b64 	%rd687, {%r505, %r504};
	shf.l.wrap.b32 	%r506, %r502, %r503, 30;
	shf.l.wrap.b32 	%r507, %r503, %r502, 30;
	mov.b64 	%rd688, {%r507, %r506};
	xor.b64  	%rd689, %rd687, %rd688;
	shf.l.wrap.b32 	%r508, %r502, %r503, 25;
	shf.l.wrap.b32 	%r509, %r503, %r502, 25;
	mov.b64 	%rd690, {%r509, %r508};
	xor.b64  	%rd691, %rd689, %rd690;
	and.b64  	%rd692, %rd672, %rd1114;
	xor.b64  	%rd693, %rd672, %rd1114;
	and.b64  	%rd694, %rd693, %rd1115;
	or.b64  	%rd695, %rd694, %rd692;
	add.s64 	%rd696, %rd691, %rd695;
	add.s64 	%rd697, %rd696, %rd685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r510,%dummy}, %rd686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r511}, %rd686;
	}
	shf.r.wrap.b32 	%r512, %r511, %r510, 14;
	shf.r.wrap.b32 	%r513, %r510, %r511, 14;
	mov.b64 	%rd698, {%r513, %r512};
	shf.r.wrap.b32 	%r514, %r511, %r510, 18;
	shf.r.wrap.b32 	%r515, %r510, %r511, 18;
	mov.b64 	%rd699, {%r515, %r514};
	xor.b64  	%rd700, %rd698, %rd699;
	shf.l.wrap.b32 	%r516, %r510, %r511, 23;
	shf.l.wrap.b32 	%r517, %r511, %r510, 23;
	mov.b64 	%rd701, {%r517, %r516};
	xor.b64  	%rd702, %rd700, %rd701;
	xor.b64  	%rd703, %rd661, %rd1097;
	and.b64  	%rd704, %rd686, %rd703;
	xor.b64  	%rd705, %rd704, %rd1097;
	add.s64 	%rd706, %rd1100, %rd1096;
	ld.const.u64 	%rd707, [%rd1093+144];
	add.s64 	%rd708, %rd706, %rd707;
	add.s64 	%rd709, %rd708, %rd705;
	add.s64 	%rd710, %rd709, %rd702;
	add.s64 	%rd711, %rd710, %rd1115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r518,%dummy}, %rd697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r519}, %rd697;
	}
	shf.r.wrap.b32 	%r520, %r519, %r518, 28;
	shf.r.wrap.b32 	%r521, %r518, %r519, 28;
	mov.b64 	%rd712, {%r521, %r520};
	shf.l.wrap.b32 	%r522, %r518, %r519, 30;
	shf.l.wrap.b32 	%r523, %r519, %r518, 30;
	mov.b64 	%rd713, {%r523, %r522};
	xor.b64  	%rd714, %rd712, %rd713;
	shf.l.wrap.b32 	%r524, %r518, %r519, 25;
	shf.l.wrap.b32 	%r525, %r519, %r518, 25;
	mov.b64 	%rd715, {%r525, %r524};
	xor.b64  	%rd716, %rd714, %rd715;
	and.b64  	%rd717, %rd697, %rd672;
	xor.b64  	%rd718, %rd697, %rd672;
	and.b64  	%rd719, %rd718, %rd1114;
	or.b64  	%rd720, %rd719, %rd717;
	add.s64 	%rd721, %rd716, %rd720;
	add.s64 	%rd722, %rd721, %rd710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r526,%dummy}, %rd711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r527}, %rd711;
	}
	shf.r.wrap.b32 	%r528, %r527, %r526, 14;
	shf.r.wrap.b32 	%r529, %r526, %r527, 14;
	mov.b64 	%rd723, {%r529, %r528};
	shf.r.wrap.b32 	%r530, %r527, %r526, 18;
	shf.r.wrap.b32 	%r531, %r526, %r527, 18;
	mov.b64 	%rd724, {%r531, %r530};
	xor.b64  	%rd725, %rd723, %rd724;
	shf.l.wrap.b32 	%r532, %r526, %r527, 23;
	shf.l.wrap.b32 	%r533, %r527, %r526, 23;
	mov.b64 	%rd726, {%r533, %r532};
	xor.b64  	%rd727, %rd725, %rd726;
	xor.b64  	%rd728, %rd686, %rd661;
	and.b64  	%rd729, %rd711, %rd728;
	xor.b64  	%rd730, %rd729, %rd661;
	add.s64 	%rd731, %rd1101, %rd1097;
	ld.const.u64 	%rd732, [%rd1093+152];
	add.s64 	%rd733, %rd731, %rd732;
	add.s64 	%rd734, %rd733, %rd730;
	add.s64 	%rd735, %rd734, %rd727;
	add.s64 	%rd736, %rd735, %rd1114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r534,%dummy}, %rd722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r535}, %rd722;
	}
	shf.r.wrap.b32 	%r536, %r535, %r534, 28;
	shf.r.wrap.b32 	%r537, %r534, %r535, 28;
	mov.b64 	%rd737, {%r537, %r536};
	shf.l.wrap.b32 	%r538, %r534, %r535, 30;
	shf.l.wrap.b32 	%r539, %r535, %r534, 30;
	mov.b64 	%rd738, {%r539, %r538};
	xor.b64  	%rd739, %rd737, %rd738;
	shf.l.wrap.b32 	%r540, %r534, %r535, 25;
	shf.l.wrap.b32 	%r541, %r535, %r534, 25;
	mov.b64 	%rd740, {%r541, %r540};
	xor.b64  	%rd741, %rd739, %rd740;
	and.b64  	%rd742, %rd722, %rd697;
	xor.b64  	%rd743, %rd722, %rd697;
	and.b64  	%rd744, %rd743, %rd672;
	or.b64  	%rd745, %rd744, %rd742;
	add.s64 	%rd746, %rd741, %rd745;
	add.s64 	%rd747, %rd746, %rd735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r542,%dummy}, %rd736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r543}, %rd736;
	}
	shf.r.wrap.b32 	%r544, %r543, %r542, 14;
	shf.r.wrap.b32 	%r545, %r542, %r543, 14;
	mov.b64 	%rd748, {%r545, %r544};
	shf.r.wrap.b32 	%r546, %r543, %r542, 18;
	shf.r.wrap.b32 	%r547, %r542, %r543, 18;
	mov.b64 	%rd749, {%r547, %r546};
	xor.b64  	%rd750, %rd748, %rd749;
	shf.l.wrap.b32 	%r548, %r542, %r543, 23;
	shf.l.wrap.b32 	%r549, %r543, %r542, 23;
	mov.b64 	%rd751, {%r549, %r548};
	xor.b64  	%rd752, %rd750, %rd751;
	xor.b64  	%rd753, %rd711, %rd686;
	and.b64  	%rd754, %rd736, %rd753;
	xor.b64  	%rd755, %rd754, %rd686;
	add.s64 	%rd756, %rd661, %rd1102;
	ld.const.u64 	%rd757, [%rd1093+160];
	add.s64 	%rd758, %rd756, %rd757;
	add.s64 	%rd759, %rd758, %rd755;
	add.s64 	%rd760, %rd759, %rd752;
	add.s64 	%rd761, %rd760, %rd672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r550,%dummy}, %rd747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r551}, %rd747;
	}
	shf.r.wrap.b32 	%r552, %r551, %r550, 28;
	shf.r.wrap.b32 	%r553, %r550, %r551, 28;
	mov.b64 	%rd762, {%r553, %r552};
	shf.l.wrap.b32 	%r554, %r550, %r551, 30;
	shf.l.wrap.b32 	%r555, %r551, %r550, 30;
	mov.b64 	%rd763, {%r555, %r554};
	xor.b64  	%rd764, %rd762, %rd763;
	shf.l.wrap.b32 	%r556, %r550, %r551, 25;
	shf.l.wrap.b32 	%r557, %r551, %r550, 25;
	mov.b64 	%rd765, {%r557, %r556};
	xor.b64  	%rd766, %rd764, %rd765;
	and.b64  	%rd767, %rd747, %rd722;
	xor.b64  	%rd768, %rd747, %rd722;
	and.b64  	%rd769, %rd768, %rd697;
	or.b64  	%rd770, %rd769, %rd767;
	add.s64 	%rd771, %rd766, %rd770;
	add.s64 	%rd772, %rd771, %rd760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r558,%dummy}, %rd761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r559}, %rd761;
	}
	shf.r.wrap.b32 	%r560, %r559, %r558, 14;
	shf.r.wrap.b32 	%r561, %r558, %r559, 14;
	mov.b64 	%rd773, {%r561, %r560};
	shf.r.wrap.b32 	%r562, %r559, %r558, 18;
	shf.r.wrap.b32 	%r563, %r558, %r559, 18;
	mov.b64 	%rd774, {%r563, %r562};
	xor.b64  	%rd775, %rd773, %rd774;
	shf.l.wrap.b32 	%r564, %r558, %r559, 23;
	shf.l.wrap.b32 	%r565, %r559, %r558, 23;
	mov.b64 	%rd776, {%r565, %r564};
	xor.b64  	%rd777, %rd775, %rd776;
	xor.b64  	%rd778, %rd736, %rd711;
	and.b64  	%rd779, %rd761, %rd778;
	xor.b64  	%rd780, %rd779, %rd711;
	ld.const.u64 	%rd781, [%rd1093+168];
	add.s64 	%rd782, %rd781, %rd1103;
	add.s64 	%rd783, %rd782, %rd686;
	add.s64 	%rd784, %rd783, %rd780;
	add.s64 	%rd785, %rd784, %rd777;
	add.s64 	%rd786, %rd785, %rd697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r566,%dummy}, %rd772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r567}, %rd772;
	}
	shf.r.wrap.b32 	%r568, %r567, %r566, 28;
	shf.r.wrap.b32 	%r569, %r566, %r567, 28;
	mov.b64 	%rd787, {%r569, %r568};
	shf.l.wrap.b32 	%r570, %r566, %r567, 30;
	shf.l.wrap.b32 	%r571, %r567, %r566, 30;
	mov.b64 	%rd788, {%r571, %r570};
	xor.b64  	%rd789, %rd787, %rd788;
	shf.l.wrap.b32 	%r572, %r566, %r567, 25;
	shf.l.wrap.b32 	%r573, %r567, %r566, 25;
	mov.b64 	%rd790, {%r573, %r572};
	xor.b64  	%rd791, %rd789, %rd790;
	and.b64  	%rd792, %rd772, %rd747;
	xor.b64  	%rd793, %rd772, %rd747;
	and.b64  	%rd794, %rd793, %rd722;
	or.b64  	%rd795, %rd794, %rd792;
	add.s64 	%rd796, %rd791, %rd795;
	add.s64 	%rd797, %rd796, %rd785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r574,%dummy}, %rd786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r575}, %rd786;
	}
	shf.r.wrap.b32 	%r576, %r575, %r574, 14;
	shf.r.wrap.b32 	%r577, %r574, %r575, 14;
	mov.b64 	%rd798, {%r577, %r576};
	shf.r.wrap.b32 	%r578, %r575, %r574, 18;
	shf.r.wrap.b32 	%r579, %r574, %r575, 18;
	mov.b64 	%rd799, {%r579, %r578};
	xor.b64  	%rd800, %rd798, %rd799;
	shf.l.wrap.b32 	%r580, %r574, %r575, 23;
	shf.l.wrap.b32 	%r581, %r575, %r574, 23;
	mov.b64 	%rd801, {%r581, %r580};
	xor.b64  	%rd802, %rd800, %rd801;
	xor.b64  	%rd803, %rd761, %rd736;
	and.b64  	%rd804, %rd786, %rd803;
	xor.b64  	%rd805, %rd804, %rd736;
	ld.const.u64 	%rd806, [%rd1093+176];
	add.s64 	%rd807, %rd806, %rd1104;
	add.s64 	%rd808, %rd807, %rd711;
	add.s64 	%rd809, %rd808, %rd805;
	add.s64 	%rd810, %rd809, %rd802;
	add.s64 	%rd811, %rd810, %rd722;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r582,%dummy}, %rd797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r583}, %rd797;
	}
	shf.r.wrap.b32 	%r584, %r583, %r582, 28;
	shf.r.wrap.b32 	%r585, %r582, %r583, 28;
	mov.b64 	%rd812, {%r585, %r584};
	shf.l.wrap.b32 	%r586, %r582, %r583, 30;
	shf.l.wrap.b32 	%r587, %r583, %r582, 30;
	mov.b64 	%rd813, {%r587, %r586};
	xor.b64  	%rd814, %rd812, %rd813;
	shf.l.wrap.b32 	%r588, %r582, %r583, 25;
	shf.l.wrap.b32 	%r589, %r583, %r582, 25;
	mov.b64 	%rd815, {%r589, %r588};
	xor.b64  	%rd816, %rd814, %rd815;
	and.b64  	%rd817, %rd797, %rd772;
	xor.b64  	%rd818, %rd797, %rd772;
	and.b64  	%rd819, %rd818, %rd747;
	or.b64  	%rd820, %rd819, %rd817;
	add.s64 	%rd821, %rd816, %rd820;
	add.s64 	%rd822, %rd821, %rd810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r590,%dummy}, %rd811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r591}, %rd811;
	}
	shf.r.wrap.b32 	%r592, %r591, %r590, 14;
	shf.r.wrap.b32 	%r593, %r590, %r591, 14;
	mov.b64 	%rd823, {%r593, %r592};
	shf.r.wrap.b32 	%r594, %r591, %r590, 18;
	shf.r.wrap.b32 	%r595, %r590, %r591, 18;
	mov.b64 	%rd824, {%r595, %r594};
	xor.b64  	%rd825, %rd823, %rd824;
	shf.l.wrap.b32 	%r596, %r590, %r591, 23;
	shf.l.wrap.b32 	%r597, %r591, %r590, 23;
	mov.b64 	%rd826, {%r597, %r596};
	xor.b64  	%rd827, %rd825, %rd826;
	xor.b64  	%rd828, %rd786, %rd761;
	and.b64  	%rd829, %rd811, %rd828;
	xor.b64  	%rd830, %rd829, %rd761;
	ld.const.u64 	%rd831, [%rd1093+184];
	add.s64 	%rd832, %rd831, %rd1105;
	add.s64 	%rd833, %rd832, %rd736;
	add.s64 	%rd834, %rd833, %rd830;
	add.s64 	%rd835, %rd834, %rd827;
	add.s64 	%rd836, %rd835, %rd747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r598,%dummy}, %rd822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r599}, %rd822;
	}
	shf.r.wrap.b32 	%r600, %r599, %r598, 28;
	shf.r.wrap.b32 	%r601, %r598, %r599, 28;
	mov.b64 	%rd837, {%r601, %r600};
	shf.l.wrap.b32 	%r602, %r598, %r599, 30;
	shf.l.wrap.b32 	%r603, %r599, %r598, 30;
	mov.b64 	%rd838, {%r603, %r602};
	xor.b64  	%rd839, %rd837, %rd838;
	shf.l.wrap.b32 	%r604, %r598, %r599, 25;
	shf.l.wrap.b32 	%r605, %r599, %r598, 25;
	mov.b64 	%rd840, {%r605, %r604};
	xor.b64  	%rd841, %rd839, %rd840;
	and.b64  	%rd842, %rd822, %rd797;
	xor.b64  	%rd843, %rd822, %rd797;
	and.b64  	%rd844, %rd843, %rd772;
	or.b64  	%rd845, %rd844, %rd842;
	add.s64 	%rd846, %rd841, %rd845;
	add.s64 	%rd847, %rd846, %rd835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r606,%dummy}, %rd836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r607}, %rd836;
	}
	shf.r.wrap.b32 	%r608, %r607, %r606, 14;
	shf.r.wrap.b32 	%r609, %r606, %r607, 14;
	mov.b64 	%rd848, {%r609, %r608};
	shf.r.wrap.b32 	%r610, %r607, %r606, 18;
	shf.r.wrap.b32 	%r611, %r606, %r607, 18;
	mov.b64 	%rd849, {%r611, %r610};
	xor.b64  	%rd850, %rd848, %rd849;
	shf.l.wrap.b32 	%r612, %r606, %r607, 23;
	shf.l.wrap.b32 	%r613, %r607, %r606, 23;
	mov.b64 	%rd851, {%r613, %r612};
	xor.b64  	%rd852, %rd850, %rd851;
	xor.b64  	%rd853, %rd811, %rd786;
	and.b64  	%rd854, %rd836, %rd853;
	xor.b64  	%rd855, %rd854, %rd786;
	ld.const.u64 	%rd856, [%rd1093+192];
	add.s64 	%rd857, %rd856, %rd1106;
	add.s64 	%rd858, %rd857, %rd761;
	add.s64 	%rd859, %rd858, %rd855;
	add.s64 	%rd860, %rd859, %rd852;
	add.s64 	%rd861, %rd860, %rd772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r614,%dummy}, %rd847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r615}, %rd847;
	}
	shf.r.wrap.b32 	%r616, %r615, %r614, 28;
	shf.r.wrap.b32 	%r617, %r614, %r615, 28;
	mov.b64 	%rd862, {%r617, %r616};
	shf.l.wrap.b32 	%r618, %r614, %r615, 30;
	shf.l.wrap.b32 	%r619, %r615, %r614, 30;
	mov.b64 	%rd863, {%r619, %r618};
	xor.b64  	%rd864, %rd862, %rd863;
	shf.l.wrap.b32 	%r620, %r614, %r615, 25;
	shf.l.wrap.b32 	%r621, %r615, %r614, 25;
	mov.b64 	%rd865, {%r621, %r620};
	xor.b64  	%rd866, %rd864, %rd865;
	and.b64  	%rd867, %rd847, %rd822;
	xor.b64  	%rd868, %rd847, %rd822;
	and.b64  	%rd869, %rd868, %rd797;
	or.b64  	%rd870, %rd869, %rd867;
	add.s64 	%rd871, %rd866, %rd870;
	add.s64 	%rd872, %rd871, %rd860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r622,%dummy}, %rd861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r623}, %rd861;
	}
	shf.r.wrap.b32 	%r624, %r623, %r622, 14;
	shf.r.wrap.b32 	%r625, %r622, %r623, 14;
	mov.b64 	%rd873, {%r625, %r624};
	shf.r.wrap.b32 	%r626, %r623, %r622, 18;
	shf.r.wrap.b32 	%r627, %r622, %r623, 18;
	mov.b64 	%rd874, {%r627, %r626};
	xor.b64  	%rd875, %rd873, %rd874;
	shf.l.wrap.b32 	%r628, %r622, %r623, 23;
	shf.l.wrap.b32 	%r629, %r623, %r622, 23;
	mov.b64 	%rd876, {%r629, %r628};
	xor.b64  	%rd877, %rd875, %rd876;
	xor.b64  	%rd878, %rd836, %rd811;
	and.b64  	%rd879, %rd861, %rd878;
	xor.b64  	%rd880, %rd879, %rd811;
	ld.const.u64 	%rd881, [%rd1093+200];
	add.s64 	%rd882, %rd881, %rd1107;
	add.s64 	%rd883, %rd882, %rd786;
	add.s64 	%rd884, %rd883, %rd880;
	add.s64 	%rd885, %rd884, %rd877;
	add.s64 	%rd886, %rd885, %rd797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r630,%dummy}, %rd872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r631}, %rd872;
	}
	shf.r.wrap.b32 	%r632, %r631, %r630, 28;
	shf.r.wrap.b32 	%r633, %r630, %r631, 28;
	mov.b64 	%rd887, {%r633, %r632};
	shf.l.wrap.b32 	%r634, %r630, %r631, 30;
	shf.l.wrap.b32 	%r635, %r631, %r630, 30;
	mov.b64 	%rd888, {%r635, %r634};
	xor.b64  	%rd889, %rd887, %rd888;
	shf.l.wrap.b32 	%r636, %r630, %r631, 25;
	shf.l.wrap.b32 	%r637, %r631, %r630, 25;
	mov.b64 	%rd890, {%r637, %r636};
	xor.b64  	%rd891, %rd889, %rd890;
	and.b64  	%rd892, %rd872, %rd847;
	xor.b64  	%rd893, %rd872, %rd847;
	and.b64  	%rd894, %rd893, %rd822;
	or.b64  	%rd895, %rd894, %rd892;
	add.s64 	%rd896, %rd891, %rd895;
	add.s64 	%rd897, %rd896, %rd885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r638,%dummy}, %rd886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r639}, %rd886;
	}
	shf.r.wrap.b32 	%r640, %r639, %r638, 14;
	shf.r.wrap.b32 	%r641, %r638, %r639, 14;
	mov.b64 	%rd898, {%r641, %r640};
	shf.r.wrap.b32 	%r642, %r639, %r638, 18;
	shf.r.wrap.b32 	%r643, %r638, %r639, 18;
	mov.b64 	%rd899, {%r643, %r642};
	xor.b64  	%rd900, %rd898, %rd899;
	shf.l.wrap.b32 	%r644, %r638, %r639, 23;
	shf.l.wrap.b32 	%r645, %r639, %r638, 23;
	mov.b64 	%rd901, {%r645, %r644};
	xor.b64  	%rd902, %rd900, %rd901;
	xor.b64  	%rd903, %rd861, %rd836;
	and.b64  	%rd904, %rd886, %rd903;
	xor.b64  	%rd905, %rd904, %rd836;
	ld.const.u64 	%rd906, [%rd1093+208];
	add.s64 	%rd907, %rd906, %rd1108;
	add.s64 	%rd908, %rd907, %rd811;
	add.s64 	%rd909, %rd908, %rd905;
	add.s64 	%rd910, %rd909, %rd902;
	add.s64 	%rd911, %rd910, %rd822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r646,%dummy}, %rd897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r647}, %rd897;
	}
	shf.r.wrap.b32 	%r648, %r647, %r646, 28;
	shf.r.wrap.b32 	%r649, %r646, %r647, 28;
	mov.b64 	%rd912, {%r649, %r648};
	shf.l.wrap.b32 	%r650, %r646, %r647, 30;
	shf.l.wrap.b32 	%r651, %r647, %r646, 30;
	mov.b64 	%rd913, {%r651, %r650};
	xor.b64  	%rd914, %rd912, %rd913;
	shf.l.wrap.b32 	%r652, %r646, %r647, 25;
	shf.l.wrap.b32 	%r653, %r647, %r646, 25;
	mov.b64 	%rd915, {%r653, %r652};
	xor.b64  	%rd916, %rd914, %rd915;
	and.b64  	%rd917, %rd897, %rd872;
	xor.b64  	%rd918, %rd897, %rd872;
	and.b64  	%rd919, %rd918, %rd847;
	or.b64  	%rd920, %rd919, %rd917;
	add.s64 	%rd921, %rd916, %rd920;
	add.s64 	%rd922, %rd921, %rd910;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r654,%dummy}, %rd911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r655}, %rd911;
	}
	shf.r.wrap.b32 	%r656, %r655, %r654, 14;
	shf.r.wrap.b32 	%r657, %r654, %r655, 14;
	mov.b64 	%rd923, {%r657, %r656};
	shf.r.wrap.b32 	%r658, %r655, %r654, 18;
	shf.r.wrap.b32 	%r659, %r654, %r655, 18;
	mov.b64 	%rd924, {%r659, %r658};
	xor.b64  	%rd925, %rd923, %rd924;
	shf.l.wrap.b32 	%r660, %r654, %r655, 23;
	shf.l.wrap.b32 	%r661, %r655, %r654, 23;
	mov.b64 	%rd926, {%r661, %r660};
	xor.b64  	%rd927, %rd925, %rd926;
	xor.b64  	%rd928, %rd886, %rd861;
	and.b64  	%rd929, %rd911, %rd928;
	xor.b64  	%rd930, %rd929, %rd861;
	ld.const.u64 	%rd931, [%rd1093+216];
	add.s64 	%rd932, %rd931, %rd1109;
	add.s64 	%rd933, %rd932, %rd836;
	add.s64 	%rd934, %rd933, %rd930;
	add.s64 	%rd935, %rd934, %rd927;
	add.s64 	%rd936, %rd935, %rd847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r662,%dummy}, %rd922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r663}, %rd922;
	}
	shf.r.wrap.b32 	%r664, %r663, %r662, 28;
	shf.r.wrap.b32 	%r665, %r662, %r663, 28;
	mov.b64 	%rd937, {%r665, %r664};
	shf.l.wrap.b32 	%r666, %r662, %r663, 30;
	shf.l.wrap.b32 	%r667, %r663, %r662, 30;
	mov.b64 	%rd938, {%r667, %r666};
	xor.b64  	%rd939, %rd937, %rd938;
	shf.l.wrap.b32 	%r668, %r662, %r663, 25;
	shf.l.wrap.b32 	%r669, %r663, %r662, 25;
	mov.b64 	%rd940, {%r669, %r668};
	xor.b64  	%rd941, %rd939, %rd940;
	and.b64  	%rd942, %rd922, %rd897;
	xor.b64  	%rd943, %rd922, %rd897;
	and.b64  	%rd944, %rd943, %rd872;
	or.b64  	%rd945, %rd944, %rd942;
	add.s64 	%rd946, %rd941, %rd945;
	add.s64 	%rd947, %rd946, %rd935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r670,%dummy}, %rd936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r671}, %rd936;
	}
	shf.r.wrap.b32 	%r672, %r671, %r670, 14;
	shf.r.wrap.b32 	%r673, %r670, %r671, 14;
	mov.b64 	%rd948, {%r673, %r672};
	shf.r.wrap.b32 	%r674, %r671, %r670, 18;
	shf.r.wrap.b32 	%r675, %r670, %r671, 18;
	mov.b64 	%rd949, {%r675, %r674};
	xor.b64  	%rd950, %rd948, %rd949;
	shf.l.wrap.b32 	%r676, %r670, %r671, 23;
	shf.l.wrap.b32 	%r677, %r671, %r670, 23;
	mov.b64 	%rd951, {%r677, %r676};
	xor.b64  	%rd952, %rd950, %rd951;
	xor.b64  	%rd953, %rd911, %rd886;
	and.b64  	%rd954, %rd936, %rd953;
	xor.b64  	%rd955, %rd954, %rd886;
	ld.const.u64 	%rd956, [%rd1093+224];
	add.s64 	%rd957, %rd956, %rd1110;
	add.s64 	%rd958, %rd957, %rd861;
	add.s64 	%rd959, %rd958, %rd955;
	add.s64 	%rd960, %rd959, %rd952;
	add.s64 	%rd1094, %rd960, %rd872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r678,%dummy}, %rd947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r679}, %rd947;
	}
	shf.r.wrap.b32 	%r680, %r679, %r678, 28;
	shf.r.wrap.b32 	%r681, %r678, %r679, 28;
	mov.b64 	%rd961, {%r681, %r680};
	shf.l.wrap.b32 	%r682, %r678, %r679, 30;
	shf.l.wrap.b32 	%r683, %r679, %r678, 30;
	mov.b64 	%rd962, {%r683, %r682};
	xor.b64  	%rd963, %rd961, %rd962;
	shf.l.wrap.b32 	%r684, %r678, %r679, 25;
	shf.l.wrap.b32 	%r685, %r679, %r678, 25;
	mov.b64 	%rd964, {%r685, %r684};
	xor.b64  	%rd965, %rd963, %rd964;
	and.b64  	%rd966, %rd947, %rd922;
	xor.b64  	%rd967, %rd947, %rd922;
	and.b64  	%rd968, %rd967, %rd897;
	or.b64  	%rd969, %rd968, %rd966;
	add.s64 	%rd970, %rd965, %rd969;
	add.s64 	%rd1117, %rd970, %rd960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r686,%dummy}, %rd1094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r687}, %rd1094;
	}
	shf.r.wrap.b32 	%r688, %r687, %r686, 14;
	shf.r.wrap.b32 	%r689, %r686, %r687, 14;
	mov.b64 	%rd971, {%r689, %r688};
	shf.r.wrap.b32 	%r690, %r687, %r686, 18;
	shf.r.wrap.b32 	%r691, %r686, %r687, 18;
	mov.b64 	%rd972, {%r691, %r690};
	xor.b64  	%rd973, %rd971, %rd972;
	shf.l.wrap.b32 	%r692, %r686, %r687, 23;
	shf.l.wrap.b32 	%r693, %r687, %r686, 23;
	mov.b64 	%rd974, {%r693, %r692};
	xor.b64  	%rd975, %rd973, %rd974;
	xor.b64  	%rd976, %rd936, %rd911;
	and.b64  	%rd977, %rd1094, %rd976;
	xor.b64  	%rd978, %rd977, %rd911;
	ld.const.u64 	%rd979, [%rd1093+232];
	add.s64 	%rd980, %rd979, %rd1111;
	add.s64 	%rd981, %rd980, %rd886;
	add.s64 	%rd982, %rd981, %rd978;
	add.s64 	%rd983, %rd982, %rd975;
	add.s64 	%rd1095, %rd983, %rd897;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r694,%dummy}, %rd1117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r695}, %rd1117;
	}
	shf.r.wrap.b32 	%r696, %r695, %r694, 28;
	shf.r.wrap.b32 	%r697, %r694, %r695, 28;
	mov.b64 	%rd984, {%r697, %r696};
	shf.l.wrap.b32 	%r698, %r694, %r695, 30;
	shf.l.wrap.b32 	%r699, %r695, %r694, 30;
	mov.b64 	%rd985, {%r699, %r698};
	xor.b64  	%rd986, %rd984, %rd985;
	shf.l.wrap.b32 	%r700, %r694, %r695, 25;
	shf.l.wrap.b32 	%r701, %r695, %r694, 25;
	mov.b64 	%rd987, {%r701, %r700};
	xor.b64  	%rd988, %rd986, %rd987;
	and.b64  	%rd989, %rd1117, %rd947;
	xor.b64  	%rd990, %rd1117, %rd947;
	and.b64  	%rd991, %rd990, %rd922;
	or.b64  	%rd992, %rd991, %rd989;
	add.s64 	%rd993, %rd988, %rd992;
	add.s64 	%rd1116, %rd993, %rd983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r702,%dummy}, %rd1095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r703}, %rd1095;
	}
	shf.r.wrap.b32 	%r704, %r703, %r702, 14;
	shf.r.wrap.b32 	%r705, %r702, %r703, 14;
	mov.b64 	%rd994, {%r705, %r704};
	shf.r.wrap.b32 	%r706, %r703, %r702, 18;
	shf.r.wrap.b32 	%r707, %r702, %r703, 18;
	mov.b64 	%rd995, {%r707, %r706};
	xor.b64  	%rd996, %rd994, %rd995;
	shf.l.wrap.b32 	%r708, %r702, %r703, 23;
	shf.l.wrap.b32 	%r709, %r703, %r702, 23;
	mov.b64 	%rd997, {%r709, %r708};
	xor.b64  	%rd998, %rd996, %rd997;
	xor.b64  	%rd999, %rd1094, %rd936;
	and.b64  	%rd1000, %rd1095, %rd999;
	xor.b64  	%rd1001, %rd1000, %rd936;
	ld.const.u64 	%rd1002, [%rd1093+240];
	add.s64 	%rd1003, %rd1002, %rd1112;
	add.s64 	%rd1004, %rd1003, %rd911;
	add.s64 	%rd1005, %rd1004, %rd1001;
	add.s64 	%rd1006, %rd1005, %rd998;
	add.s64 	%rd1096, %rd1006, %rd922;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r710,%dummy}, %rd1116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r711}, %rd1116;
	}
	shf.r.wrap.b32 	%r712, %r711, %r710, 28;
	shf.r.wrap.b32 	%r713, %r710, %r711, 28;
	mov.b64 	%rd1007, {%r713, %r712};
	shf.l.wrap.b32 	%r714, %r710, %r711, 30;
	shf.l.wrap.b32 	%r715, %r711, %r710, 30;
	mov.b64 	%rd1008, {%r715, %r714};
	xor.b64  	%rd1009, %rd1007, %rd1008;
	shf.l.wrap.b32 	%r716, %r710, %r711, 25;
	shf.l.wrap.b32 	%r717, %r711, %r710, 25;
	mov.b64 	%rd1010, {%r717, %r716};
	xor.b64  	%rd1011, %rd1009, %rd1010;
	and.b64  	%rd1012, %rd1116, %rd1117;
	xor.b64  	%rd1013, %rd1116, %rd1117;
	and.b64  	%rd1014, %rd1013, %rd947;
	or.b64  	%rd1015, %rd1014, %rd1012;
	add.s64 	%rd1016, %rd1011, %rd1015;
	add.s64 	%rd1115, %rd1016, %rd1006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r718,%dummy}, %rd1096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r719}, %rd1096;
	}
	shf.r.wrap.b32 	%r720, %r719, %r718, 14;
	shf.r.wrap.b32 	%r721, %r718, %r719, 14;
	mov.b64 	%rd1017, {%r721, %r720};
	shf.r.wrap.b32 	%r722, %r719, %r718, 18;
	shf.r.wrap.b32 	%r723, %r718, %r719, 18;
	mov.b64 	%rd1018, {%r723, %r722};
	xor.b64  	%rd1019, %rd1017, %rd1018;
	shf.l.wrap.b32 	%r724, %r718, %r719, 23;
	shf.l.wrap.b32 	%r725, %r719, %r718, 23;
	mov.b64 	%rd1020, {%r725, %r724};
	xor.b64  	%rd1021, %rd1019, %rd1020;
	xor.b64  	%rd1022, %rd1095, %rd1094;
	and.b64  	%rd1023, %rd1096, %rd1022;
	xor.b64  	%rd1024, %rd1023, %rd1094;
	ld.const.u64 	%rd1025, [%rd1093+248];
	add.s64 	%rd1026, %rd1025, %rd1113;
	add.s64 	%rd1027, %rd1026, %rd936;
	add.s64 	%rd1028, %rd1027, %rd1024;
	add.s64 	%rd1029, %rd1028, %rd1021;
	add.s64 	%rd1097, %rd1029, %rd947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r726,%dummy}, %rd1115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r727}, %rd1115;
	}
	shf.r.wrap.b32 	%r728, %r727, %r726, 28;
	shf.r.wrap.b32 	%r729, %r726, %r727, 28;
	mov.b64 	%rd1030, {%r729, %r728};
	shf.l.wrap.b32 	%r730, %r726, %r727, 30;
	shf.l.wrap.b32 	%r731, %r727, %r726, 30;
	mov.b64 	%rd1031, {%r731, %r730};
	xor.b64  	%rd1032, %rd1030, %rd1031;
	shf.l.wrap.b32 	%r732, %r726, %r727, 25;
	shf.l.wrap.b32 	%r733, %r727, %r726, 25;
	mov.b64 	%rd1033, {%r733, %r732};
	xor.b64  	%rd1034, %rd1032, %rd1033;
	and.b64  	%rd1035, %rd1115, %rd1116;
	xor.b64  	%rd1036, %rd1115, %rd1116;
	and.b64  	%rd1037, %rd1036, %rd1117;
	or.b64  	%rd1038, %rd1037, %rd1035;
	add.s64 	%rd1039, %rd1034, %rd1038;
	add.s64 	%rd1114, %rd1039, %rd1029;
	add.s32 	%r796, %r796, 16;
	setp.lt.s32	%p3, %r796, 80;
	mov.u64 	%rd1093, %rd79;
	@%p3 bra 	BB0_4;

	ld.param.u64 	%rd1069, [m01700_m04_param_6];
	mov.b64	{%r9, %r10}, %rd1094;
	mov.u32 	%r734, 1;
	mov.b64	{%r11, %r12}, %rd1117;
	shr.u32 	%r735, %r9, %r4;
	and.b32  	%r736, %r735, %r33;
	mul.wide.u32 	%rd1040, %r736, 4;
	add.s64 	%rd1041, %rd1069, %rd1040;
	and.b32  	%r737, %r9, 31;
	shl.b32 	%r13, %r734, %r737;
	ld.global.u32 	%r738, [%rd1041];
	and.b32  	%r739, %r738, %r13;
	setp.eq.s32	%p4, %r739, 0;
	@%p4 bra 	BB0_32;

	ld.param.u64 	%rd1070, [m01700_m04_param_7];
	shr.u32 	%r740, %r10, %r4;
	and.b32  	%r741, %r740, %r33;
	mul.wide.u32 	%rd1042, %r741, 4;
	add.s64 	%rd1043, %rd1070, %rd1042;
	and.b32  	%r742, %r10, 31;
	shl.b32 	%r14, %r734, %r742;
	ld.global.u32 	%r744, [%rd1043];
	and.b32  	%r745, %r744, %r14;
	setp.eq.s32	%p5, %r745, 0;
	@%p5 bra 	BB0_32;

	ld.param.u64 	%rd1071, [m01700_m04_param_8];
	shr.u32 	%r746, %r11, %r4;
	and.b32  	%r747, %r746, %r33;
	mul.wide.u32 	%rd1044, %r747, 4;
	add.s64 	%rd1045, %rd1071, %rd1044;
	and.b32  	%r748, %r11, 31;
	shl.b32 	%r15, %r734, %r748;
	ld.global.u32 	%r750, [%rd1045];
	and.b32  	%r751, %r750, %r15;
	setp.eq.s32	%p6, %r751, 0;
	@%p6 bra 	BB0_32;

	ld.param.u64 	%rd1084, [m01700_m04_param_9];
	shr.u32 	%r752, %r12, %r4;
	and.b32  	%r753, %r752, %r33;
	mul.wide.u32 	%rd1046, %r753, 4;
	add.s64 	%rd1047, %rd1084, %rd1046;
	and.b32  	%r754, %r12, 31;
	shl.b32 	%r16, %r734, %r754;
	ld.global.u32 	%r756, [%rd1047];
	and.b32  	%r757, %r756, %r16;
	setp.eq.s32	%p7, %r757, 0;
	@%p7 bra 	BB0_32;

	ld.param.u64 	%rd1085, [m01700_m04_param_10];
	shr.u32 	%r758, %r9, %r5;
	and.b32  	%r759, %r758, %r33;
	mul.wide.u32 	%rd1048, %r759, 4;
	add.s64 	%rd1049, %rd1085, %rd1048;
	ld.global.u32 	%r760, [%rd1049];
	and.b32  	%r761, %r760, %r13;
	setp.eq.s32	%p8, %r761, 0;
	@%p8 bra 	BB0_32;

	ld.param.u64 	%rd1086, [m01700_m04_param_11];
	shr.u32 	%r762, %r10, %r5;
	and.b32  	%r763, %r762, %r33;
	mul.wide.u32 	%rd1050, %r763, 4;
	add.s64 	%rd1051, %rd1086, %rd1050;
	ld.global.u32 	%r764, [%rd1051];
	and.b32  	%r765, %r764, %r14;
	setp.eq.s32	%p9, %r765, 0;
	@%p9 bra 	BB0_32;

	ld.param.u64 	%rd1087, [m01700_m04_param_12];
	shr.u32 	%r766, %r11, %r5;
	and.b32  	%r767, %r766, %r33;
	mul.wide.u32 	%rd1052, %r767, 4;
	add.s64 	%rd1053, %rd1087, %rd1052;
	ld.global.u32 	%r768, [%rd1053];
	and.b32  	%r769, %r768, %r15;
	setp.eq.s32	%p10, %r769, 0;
	@%p10 bra 	BB0_32;

	ld.param.u64 	%rd1088, [m01700_m04_param_13];
	shr.u32 	%r770, %r12, %r5;
	and.b32  	%r771, %r770, %r33;
	mul.wide.u32 	%rd1054, %r771, 4;
	add.s64 	%rd1055, %rd1088, %rd1054;
	ld.global.u32 	%r772, [%rd1055];
	and.b32  	%r773, %r772, %r16;
	setp.eq.s32	%p11, %r773, 0;
	@%p11 bra 	BB0_32;

	setp.eq.s32	%p12, %r38, 0;
	mov.u32 	%r798, 0;
	mov.u32 	%r774, -1;
	mov.u32 	%r797, %r38;
	@%p12 bra 	BB0_26;

BB0_14:
	ld.param.u64 	%rd1089, [m01700_m04_param_15];
	shr.u32 	%r19, %r797, 1;
	add.s32 	%r800, %r19, %r798;
	cvt.u64.u32	%rd1056, %r800;
	add.s64 	%rd80, %rd1056, %rd20;
	shl.b64 	%rd1057, %rd80, 6;
	add.s64 	%rd1058, %rd1089, %rd1057;
	ld.global.u32 	%r21, [%rd1058+28];
	setp.gt.u32	%p13, %r12, %r21;
	mov.u32 	%r799, %r734;
	@%p13 bra 	BB0_24;

	setp.lt.u32	%p14, %r12, %r21;
	mov.u32 	%r777, -1;
	@%p14 bra 	BB0_16;
	bra.uni 	BB0_17;

BB0_16:
	mov.u32 	%r799, %r777;
	bra.uni 	BB0_24;

BB0_17:
	ld.global.u32 	%r22, [%rd1058+24];
	setp.gt.u32	%p15, %r11, %r22;
	mov.u32 	%r799, %r734;
	@%p15 bra 	BB0_24;

	setp.lt.u32	%p16, %r11, %r22;
	@%p16 bra 	BB0_19;
	bra.uni 	BB0_20;

BB0_19:
	mov.u32 	%r799, %r777;
	bra.uni 	BB0_24;

BB0_20:
	ld.global.u32 	%r23, [%rd1058+60];
	setp.gt.u32	%p17, %r10, %r23;
	mov.u32 	%r799, %r734;
	@%p17 bra 	BB0_24;

	setp.lt.u32	%p18, %r10, %r23;
	mov.u32 	%r799, %r777;
	@%p18 bra 	BB0_24;

	ld.global.u32 	%r24, [%rd1058+56];
	setp.gt.u32	%p19, %r9, %r24;
	mov.u32 	%r799, %r734;
	@%p19 bra 	BB0_24;

	setp.lt.u32	%p20, %r9, %r24;
	selp.b32	%r799, -1, 0, %p20;

BB0_24:
	add.s32 	%r783, %r19, 1;
	setp.gt.s32	%p21, %r799, 0;
	selp.b32	%r784, %r783, 0, %p21;
	add.s32 	%r798, %r784, %r798;
	selp.b32	%r785, -1, 0, %p21;
	add.s32 	%r786, %r785, %r797;
	shr.u32 	%r797, %r786, 1;
	setp.eq.s32	%p22, %r799, 0;
	@%p22 bra 	BB0_27;

	setp.ne.s32	%p23, %r797, 0;
	@%p23 bra 	BB0_14;

BB0_26:
	mov.u32 	%r800, %r774;

BB0_27:
	setp.eq.s32	%p24, %r800, -1;
	@%p24 bra 	BB0_32;

	ld.param.u64 	%rd1090, [m01700_m04_param_16];
	ld.param.u32 	%r791, [m01700_m04_param_32];
	add.s32 	%r30, %r800, %r791;
	mul.wide.u32 	%rd1065, %r30, 4;
	add.s64 	%rd1066, %rd1090, %rd1065;
	atom.global.add.u32 	%r788, [%rd1066], 1;
	setp.ne.s32	%p25, %r788, 0;
	@%p25 bra 	BB0_32;

	atom.global.add.u32 	%r31, [%rd94], 1;
	setp.lt.u32	%p26, %r31, %r38;
	@%p26 bra 	BB0_31;
	bra.uni 	BB0_30;

BB0_31:
	ld.param.u32 	%r793, [m01700_m04_param_27];
	ld.param.u64 	%rd1091, [m01700_m04_param_14];
	mul.wide.u32 	%rd1067, %r31, 32;
	add.s64 	%rd1068, %rd1091, %rd1067;
	st.global.u32 	[%rd1068+12], %r793;
	st.global.u32 	[%rd1068+16], %r800;
	st.global.u32 	[%rd1068+20], %r30;
	st.global.u64 	[%rd1068], %rd1;
	st.global.u32 	[%rd1068+8], %r795;
	mov.u32 	%r790, 0;
	st.global.u32 	[%rd1068+24], %r790;
	st.global.u32 	[%rd1068+28], %r790;
	bra.uni 	BB0_32;

BB0_30:
	atom.global.add.u32 	%r789, [%rd94], -1;

BB0_32:
	ld.param.u32 	%r792, [m01700_m04_param_30];
	add.s32 	%r795, %r795, 1;
	setp.lt.u32	%p27, %r795, %r792;
	@%p27 bra 	BB0_3;

BB0_33:
	ret;
}

	// .globl	m01700_m08
.entry m01700_m08(
	.param .u64 .ptr .global .align 4 m01700_m08_param_0,
	.param .u64 .ptr .global .align 4 m01700_m08_param_1,
	.param .u64 .ptr .global .align 4 m01700_m08_param_2,
	.param .u64 .ptr .const .align 4 m01700_m08_param_3,
	.param .u64 .ptr .global .align 1 m01700_m08_param_4,
	.param .u64 .ptr .global .align 1 m01700_m08_param_5,
	.param .u64 .ptr .global .align 4 m01700_m08_param_6,
	.param .u64 .ptr .global .align 4 m01700_m08_param_7,
	.param .u64 .ptr .global .align 4 m01700_m08_param_8,
	.param .u64 .ptr .global .align 4 m01700_m08_param_9,
	.param .u64 .ptr .global .align 4 m01700_m08_param_10,
	.param .u64 .ptr .global .align 4 m01700_m08_param_11,
	.param .u64 .ptr .global .align 4 m01700_m08_param_12,
	.param .u64 .ptr .global .align 4 m01700_m08_param_13,
	.param .u64 .ptr .global .align 8 m01700_m08_param_14,
	.param .u64 .ptr .global .align 4 m01700_m08_param_15,
	.param .u64 .ptr .global .align 4 m01700_m08_param_16,
	.param .u64 .ptr .global .align 4 m01700_m08_param_17,
	.param .u64 .ptr .global .align 1 m01700_m08_param_18,
	.param .u64 .ptr .global .align 4 m01700_m08_param_19,
	.param .u64 .ptr .global .align 1 m01700_m08_param_20,
	.param .u64 .ptr .global .align 1 m01700_m08_param_21,
	.param .u64 .ptr .global .align 1 m01700_m08_param_22,
	.param .u64 .ptr .global .align 1 m01700_m08_param_23,
	.param .u32 m01700_m08_param_24,
	.param .u32 m01700_m08_param_25,
	.param .u32 m01700_m08_param_26,
	.param .u32 m01700_m08_param_27,
	.param .u32 m01700_m08_param_28,
	.param .u32 m01700_m08_param_29,
	.param .u32 m01700_m08_param_30,
	.param .u32 m01700_m08_param_31,
	.param .u32 m01700_m08_param_32,
	.param .u32 m01700_m08_param_33,
	.param .u64 m01700_m08_param_34
)
{
	.reg .pred 	%p<28>;
	.reg .b32 	%r<805>;
	.reg .b64 	%rd<1120>;


	ld.param.u64 	%rd83, [m01700_m08_param_0];
	ld.param.u64 	%rd96, [m01700_m08_param_19];
	ld.param.u32 	%r33, [m01700_m08_param_24];
	ld.param.u32 	%r34, [m01700_m08_param_25];
	ld.param.u32 	%r35, [m01700_m08_param_26];
	ld.param.u32 	%r37, [m01700_m08_param_30];
	ld.param.u32 	%r38, [m01700_m08_param_31];
	ld.param.u32 	%r39, [m01700_m08_param_32];
	ld.param.u64 	%rd97, [m01700_m08_param_34];
	mov.b32	%r40, %envreg3;
	mov.u32 	%r41, %ctaid.x;
	mov.u32 	%r42, %ntid.x;
	mad.lo.s32 	%r43, %r41, %r42, %r40;
	mov.u32 	%r44, %tid.x;
	add.s32 	%r1, %r43, %r44;
	cvt.s64.s32	%rd1, %r1;
	setp.ge.u64	%p1, %rd1, %rd97;
	@%p1 bra 	BB1_33;

	setp.eq.s32	%p2, %r37, 0;
	@%p2 bra 	BB1_33;

	mul.wide.s32 	%rd98, %r1, 260;
	add.s64 	%rd99, %rd83, %rd98;
	ld.global.u32 	%r2, [%rd99];
	ld.global.u32 	%r3, [%rd99+4];
	ld.global.u32 	%r46, [%rd99+8];
	ld.global.u32 	%r47, [%rd99+12];
	mov.b64	%rd2, {%r47, %r46};
	ld.global.u32 	%r48, [%rd99+16];
	ld.global.u32 	%r49, [%rd99+20];
	mov.b64	%rd3, {%r49, %r48};
	ld.global.u32 	%r50, [%rd99+24];
	ld.global.u32 	%r51, [%rd99+28];
	mov.b64	%rd4, {%r51, %r50};
	ld.global.u32 	%r52, [%rd99+60];
	mov.u32 	%r799, 0;
	mov.b64	%rd5, {%r52, %r799};
	ld.const.u64 	%rd100, [k_sha512];
	add.s64 	%rd6, %rd100, -1150475826592481981;
	ld.const.u64 	%rd101, [k_sha512+8];
	add.s64 	%rd102, %rd2, %rd101;
	add.s64 	%rd7, %rd102, 2270897969802886507;
	ld.const.u64 	%rd103, [k_sha512+16];
	add.s64 	%rd104, %rd3, %rd103;
	add.s64 	%rd8, %rd104, -7276294671716946913;
	ld.const.u64 	%rd105, [k_sha512+24];
	add.s64 	%rd106, %rd4, %rd105;
	add.s64 	%rd9, %rd106, 5840696475078001361;
	ld.const.u64 	%rd107, [k_sha512+120];
	add.s64 	%rd21, %rd107, %rd5;
	and.b32  	%r4, %r34, 31;
	and.b32  	%r5, %r35, 31;
	cvt.u64.u32	%rd22, %r39;

BB1_3:
	mov.u32 	%r798, 0;
	mov.b64	%rd1115, {%r52, %r798};
	ld.const.u64 	%rd1084, [k_sha512+112];
	ld.const.u64 	%rd1083, [k_sha512+104];
	ld.const.u64 	%rd1082, [k_sha512+96];
	ld.const.u64 	%rd1081, [k_sha512+88];
	ld.const.u64 	%rd1080, [k_sha512+80];
	ld.const.u64 	%rd1079, [k_sha512+72];
	ld.const.u64 	%rd1078, [k_sha512+64];
	ld.const.u64 	%rd1077, [k_sha512+56];
	ld.const.u64 	%rd1076, [k_sha512+48];
	ld.const.u64 	%rd1075, [k_sha512+40];
	ld.const.u64 	%rd1074, [k_sha512+32];
	ld.param.u64 	%rd1073, [m01700_m08_param_3];
	mul.wide.u32 	%rd120, %r799, 4;
	add.s64 	%rd121, %rd1073, %rd120;
	ld.const.u32 	%r54, [%rd121];
	or.b32  	%r55, %r54, %r2;
	mov.b64	%rd1100, {%r3, %r55};
	add.s64 	%rd122, %rd6, %rd1100;
	add.s64 	%rd123, %rd122, -4263291710961585108;
	add.s64 	%rd124, %rd122, 7114151716102877840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r56,%dummy}, %rd123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r57}, %rd123;
	}
	shf.r.wrap.b32 	%r58, %r57, %r56, 14;
	shf.r.wrap.b32 	%r59, %r56, %r57, 14;
	mov.b64 	%rd125, {%r59, %r58};
	shf.r.wrap.b32 	%r60, %r57, %r56, 18;
	shf.r.wrap.b32 	%r61, %r56, %r57, 18;
	mov.b64 	%rd126, {%r61, %r60};
	xor.b64  	%rd127, %rd125, %rd126;
	shf.l.wrap.b32 	%r62, %r56, %r57, 23;
	shf.l.wrap.b32 	%r63, %r57, %r56, 23;
	mov.b64 	%rd128, {%r63, %r62};
	xor.b64  	%rd129, %rd127, %rd128;
	and.b64  	%rd130, %rd123, -3887949035690463538;
	xor.b64  	%rd131, %rd130, -7276294671716946913;
	add.s64 	%rd132, %rd7, %rd131;
	add.s64 	%rd133, %rd132, %rd129;
	add.s64 	%rd134, %rd133, 4354685564936845355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r64,%dummy}, %rd124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r65}, %rd124;
	}
	shf.r.wrap.b32 	%r66, %r65, %r64, 28;
	shf.r.wrap.b32 	%r67, %r64, %r65, 28;
	mov.b64 	%rd135, {%r67, %r66};
	shf.l.wrap.b32 	%r68, %r64, %r65, 30;
	shf.l.wrap.b32 	%r69, %r65, %r64, 30;
	mov.b64 	%rd136, {%r69, %r68};
	xor.b64  	%rd137, %rd135, %rd136;
	shf.l.wrap.b32 	%r70, %r64, %r65, 25;
	shf.l.wrap.b32 	%r71, %r65, %r64, 25;
	mov.b64 	%rd138, {%r71, %r70};
	xor.b64  	%rd139, %rd137, %rd138;
	and.b64  	%rd140, %rd124, 7640891576956012808;
	and.b64  	%rd141, %rd124, -4942790177534073029;
	xor.b64  	%rd142, %rd141, 3026882967131160840;
	or.b64  	%rd143, %rd142, %rd140;
	add.s64 	%rd144, %rd139, %rd143;
	add.s64 	%rd145, %rd144, %rd133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r72,%dummy}, %rd134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r73}, %rd134;
	}
	shf.r.wrap.b32 	%r74, %r73, %r72, 14;
	shf.r.wrap.b32 	%r75, %r72, %r73, 14;
	mov.b64 	%rd146, {%r75, %r74};
	shf.r.wrap.b32 	%r76, %r73, %r72, 18;
	shf.r.wrap.b32 	%r77, %r72, %r73, 18;
	mov.b64 	%rd147, {%r77, %r76};
	xor.b64  	%rd148, %rd146, %rd147;
	shf.l.wrap.b32 	%r78, %r72, %r73, 23;
	shf.l.wrap.b32 	%r79, %r73, %r72, 23;
	mov.b64 	%rd149, {%r79, %r78};
	xor.b64  	%rd150, %rd148, %rd149;
	xor.b64  	%rd151, %rd123, 5840696475078001361;
	and.b64  	%rd152, %rd134, %rd151;
	xor.b64  	%rd153, %rd152, 5840696475078001361;
	add.s64 	%rd154, %rd8, %rd153;
	add.s64 	%rd155, %rd154, %rd150;
	add.s64 	%rd156, %rd155, -4942790177534073029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r80,%dummy}, %rd145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r81}, %rd145;
	}
	shf.r.wrap.b32 	%r82, %r81, %r80, 28;
	shf.r.wrap.b32 	%r83, %r80, %r81, 28;
	mov.b64 	%rd157, {%r83, %r82};
	shf.l.wrap.b32 	%r84, %r80, %r81, 30;
	shf.l.wrap.b32 	%r85, %r81, %r80, 30;
	mov.b64 	%rd158, {%r85, %r84};
	xor.b64  	%rd159, %rd157, %rd158;
	shf.l.wrap.b32 	%r86, %r80, %r81, 25;
	shf.l.wrap.b32 	%r87, %r81, %r80, 25;
	mov.b64 	%rd160, {%r87, %r86};
	xor.b64  	%rd161, %rd159, %rd160;
	and.b64  	%rd162, %rd145, %rd124;
	xor.b64  	%rd163, %rd145, %rd124;
	and.b64  	%rd164, %rd163, 7640891576956012808;
	or.b64  	%rd165, %rd164, %rd162;
	add.s64 	%rd166, %rd161, %rd165;
	add.s64 	%rd167, %rd166, %rd155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r88,%dummy}, %rd156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r89}, %rd156;
	}
	shf.r.wrap.b32 	%r90, %r89, %r88, 14;
	shf.r.wrap.b32 	%r91, %r88, %r89, 14;
	mov.b64 	%rd168, {%r91, %r90};
	shf.r.wrap.b32 	%r92, %r89, %r88, 18;
	shf.r.wrap.b32 	%r93, %r88, %r89, 18;
	mov.b64 	%rd169, {%r93, %r92};
	xor.b64  	%rd170, %rd168, %rd169;
	shf.l.wrap.b32 	%r94, %r88, %r89, 23;
	shf.l.wrap.b32 	%r95, %r89, %r88, 23;
	mov.b64 	%rd171, {%r95, %r94};
	xor.b64  	%rd172, %rd170, %rd171;
	xor.b64  	%rd173, %rd134, %rd123;
	and.b64  	%rd174, %rd156, %rd173;
	xor.b64  	%rd175, %rd174, %rd123;
	add.s64 	%rd176, %rd9, %rd175;
	add.s64 	%rd177, %rd176, %rd172;
	add.s64 	%rd178, %rd177, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r96,%dummy}, %rd167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r97}, %rd167;
	}
	shf.r.wrap.b32 	%r98, %r97, %r96, 28;
	shf.r.wrap.b32 	%r99, %r96, %r97, 28;
	mov.b64 	%rd179, {%r99, %r98};
	shf.l.wrap.b32 	%r100, %r96, %r97, 30;
	shf.l.wrap.b32 	%r101, %r97, %r96, 30;
	mov.b64 	%rd180, {%r101, %r100};
	xor.b64  	%rd181, %rd179, %rd180;
	shf.l.wrap.b32 	%r102, %r96, %r97, 25;
	shf.l.wrap.b32 	%r103, %r97, %r96, 25;
	mov.b64 	%rd182, {%r103, %r102};
	xor.b64  	%rd183, %rd181, %rd182;
	and.b64  	%rd184, %rd167, %rd145;
	xor.b64  	%rd185, %rd167, %rd145;
	and.b64  	%rd186, %rd185, %rd124;
	or.b64  	%rd187, %rd186, %rd184;
	add.s64 	%rd188, %rd183, %rd187;
	add.s64 	%rd189, %rd188, %rd177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r104,%dummy}, %rd178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r105}, %rd178;
	}
	shf.r.wrap.b32 	%r106, %r105, %r104, 14;
	shf.r.wrap.b32 	%r107, %r104, %r105, 14;
	mov.b64 	%rd190, {%r107, %r106};
	shf.r.wrap.b32 	%r108, %r105, %r104, 18;
	shf.r.wrap.b32 	%r109, %r104, %r105, 18;
	mov.b64 	%rd191, {%r109, %r108};
	xor.b64  	%rd192, %rd190, %rd191;
	shf.l.wrap.b32 	%r110, %r104, %r105, 23;
	shf.l.wrap.b32 	%r111, %r105, %r104, 23;
	mov.b64 	%rd193, {%r111, %r110};
	xor.b64  	%rd194, %rd192, %rd193;
	xor.b64  	%rd195, %rd156, %rd134;
	and.b64  	%rd196, %rd178, %rd195;
	xor.b64  	%rd197, %rd196, %rd134;
	add.s64 	%rd198, %rd123, %rd1074;
	add.s64 	%rd199, %rd198, %rd197;
	add.s64 	%rd200, %rd199, %rd194;
	add.s64 	%rd201, %rd200, %rd124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r112,%dummy}, %rd189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r113}, %rd189;
	}
	shf.r.wrap.b32 	%r114, %r113, %r112, 28;
	shf.r.wrap.b32 	%r115, %r112, %r113, 28;
	mov.b64 	%rd202, {%r115, %r114};
	shf.l.wrap.b32 	%r116, %r112, %r113, 30;
	shf.l.wrap.b32 	%r117, %r113, %r112, 30;
	mov.b64 	%rd203, {%r117, %r116};
	xor.b64  	%rd204, %rd202, %rd203;
	shf.l.wrap.b32 	%r118, %r112, %r113, 25;
	shf.l.wrap.b32 	%r119, %r113, %r112, 25;
	mov.b64 	%rd205, {%r119, %r118};
	xor.b64  	%rd206, %rd204, %rd205;
	and.b64  	%rd207, %rd189, %rd167;
	xor.b64  	%rd208, %rd189, %rd167;
	and.b64  	%rd209, %rd208, %rd145;
	or.b64  	%rd210, %rd209, %rd207;
	add.s64 	%rd211, %rd206, %rd210;
	add.s64 	%rd212, %rd211, %rd200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r120,%dummy}, %rd201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r121}, %rd201;
	}
	shf.r.wrap.b32 	%r122, %r121, %r120, 14;
	shf.r.wrap.b32 	%r123, %r120, %r121, 14;
	mov.b64 	%rd213, {%r123, %r122};
	shf.r.wrap.b32 	%r124, %r121, %r120, 18;
	shf.r.wrap.b32 	%r125, %r120, %r121, 18;
	mov.b64 	%rd214, {%r125, %r124};
	xor.b64  	%rd215, %rd213, %rd214;
	shf.l.wrap.b32 	%r126, %r120, %r121, 23;
	shf.l.wrap.b32 	%r127, %r121, %r120, 23;
	mov.b64 	%rd216, {%r127, %r126};
	xor.b64  	%rd217, %rd215, %rd216;
	xor.b64  	%rd218, %rd178, %rd156;
	and.b64  	%rd219, %rd201, %rd218;
	xor.b64  	%rd220, %rd219, %rd156;
	add.s64 	%rd221, %rd134, %rd1075;
	add.s64 	%rd222, %rd221, %rd220;
	add.s64 	%rd223, %rd222, %rd217;
	add.s64 	%rd224, %rd223, %rd145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r128,%dummy}, %rd212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r129}, %rd212;
	}
	shf.r.wrap.b32 	%r130, %r129, %r128, 28;
	shf.r.wrap.b32 	%r131, %r128, %r129, 28;
	mov.b64 	%rd225, {%r131, %r130};
	shf.l.wrap.b32 	%r132, %r128, %r129, 30;
	shf.l.wrap.b32 	%r133, %r129, %r128, 30;
	mov.b64 	%rd226, {%r133, %r132};
	xor.b64  	%rd227, %rd225, %rd226;
	shf.l.wrap.b32 	%r134, %r128, %r129, 25;
	shf.l.wrap.b32 	%r135, %r129, %r128, 25;
	mov.b64 	%rd228, {%r135, %r134};
	xor.b64  	%rd229, %rd227, %rd228;
	and.b64  	%rd230, %rd212, %rd189;
	xor.b64  	%rd231, %rd212, %rd189;
	and.b64  	%rd232, %rd231, %rd167;
	or.b64  	%rd233, %rd232, %rd230;
	add.s64 	%rd234, %rd229, %rd233;
	add.s64 	%rd235, %rd234, %rd223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r136,%dummy}, %rd224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r137}, %rd224;
	}
	shf.r.wrap.b32 	%r138, %r137, %r136, 14;
	shf.r.wrap.b32 	%r139, %r136, %r137, 14;
	mov.b64 	%rd236, {%r139, %r138};
	shf.r.wrap.b32 	%r140, %r137, %r136, 18;
	shf.r.wrap.b32 	%r141, %r136, %r137, 18;
	mov.b64 	%rd237, {%r141, %r140};
	xor.b64  	%rd238, %rd236, %rd237;
	shf.l.wrap.b32 	%r142, %r136, %r137, 23;
	shf.l.wrap.b32 	%r143, %r137, %r136, 23;
	mov.b64 	%rd239, {%r143, %r142};
	xor.b64  	%rd240, %rd238, %rd239;
	xor.b64  	%rd241, %rd201, %rd178;
	and.b64  	%rd242, %rd224, %rd241;
	xor.b64  	%rd243, %rd242, %rd178;
	add.s64 	%rd244, %rd156, %rd1076;
	add.s64 	%rd245, %rd244, %rd243;
	add.s64 	%rd246, %rd245, %rd240;
	add.s64 	%rd247, %rd246, %rd167;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r144,%dummy}, %rd235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r145}, %rd235;
	}
	shf.r.wrap.b32 	%r146, %r145, %r144, 28;
	shf.r.wrap.b32 	%r147, %r144, %r145, 28;
	mov.b64 	%rd248, {%r147, %r146};
	shf.l.wrap.b32 	%r148, %r144, %r145, 30;
	shf.l.wrap.b32 	%r149, %r145, %r144, 30;
	mov.b64 	%rd249, {%r149, %r148};
	xor.b64  	%rd250, %rd248, %rd249;
	shf.l.wrap.b32 	%r150, %r144, %r145, 25;
	shf.l.wrap.b32 	%r151, %r145, %r144, 25;
	mov.b64 	%rd251, {%r151, %r150};
	xor.b64  	%rd252, %rd250, %rd251;
	and.b64  	%rd253, %rd235, %rd212;
	xor.b64  	%rd254, %rd235, %rd212;
	and.b64  	%rd255, %rd254, %rd189;
	or.b64  	%rd256, %rd255, %rd253;
	add.s64 	%rd257, %rd252, %rd256;
	add.s64 	%rd258, %rd257, %rd246;
	add.s64 	%rd259, %rd178, %rd1077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r152,%dummy}, %rd247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r153}, %rd247;
	}
	shf.r.wrap.b32 	%r154, %r153, %r152, 14;
	shf.r.wrap.b32 	%r155, %r152, %r153, 14;
	mov.b64 	%rd260, {%r155, %r154};
	shf.r.wrap.b32 	%r156, %r153, %r152, 18;
	shf.r.wrap.b32 	%r157, %r152, %r153, 18;
	mov.b64 	%rd261, {%r157, %r156};
	xor.b64  	%rd262, %rd260, %rd261;
	shf.l.wrap.b32 	%r158, %r152, %r153, 23;
	shf.l.wrap.b32 	%r159, %r153, %r152, 23;
	mov.b64 	%rd263, {%r159, %r158};
	xor.b64  	%rd264, %rd262, %rd263;
	xor.b64  	%rd265, %rd224, %rd201;
	and.b64  	%rd266, %rd247, %rd265;
	xor.b64  	%rd267, %rd266, %rd201;
	add.s64 	%rd268, %rd259, %rd267;
	add.s64 	%rd269, %rd268, %rd264;
	add.s64 	%rd270, %rd269, %rd189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r160,%dummy}, %rd258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r161}, %rd258;
	}
	shf.r.wrap.b32 	%r162, %r161, %r160, 28;
	shf.r.wrap.b32 	%r163, %r160, %r161, 28;
	mov.b64 	%rd271, {%r163, %r162};
	shf.l.wrap.b32 	%r164, %r160, %r161, 30;
	shf.l.wrap.b32 	%r165, %r161, %r160, 30;
	mov.b64 	%rd272, {%r165, %r164};
	xor.b64  	%rd273, %rd271, %rd272;
	shf.l.wrap.b32 	%r166, %r160, %r161, 25;
	shf.l.wrap.b32 	%r167, %r161, %r160, 25;
	mov.b64 	%rd274, {%r167, %r166};
	xor.b64  	%rd275, %rd273, %rd274;
	and.b64  	%rd276, %rd258, %rd235;
	xor.b64  	%rd277, %rd258, %rd235;
	and.b64  	%rd278, %rd277, %rd212;
	or.b64  	%rd279, %rd278, %rd276;
	add.s64 	%rd280, %rd275, %rd279;
	add.s64 	%rd281, %rd280, %rd269;
	add.s64 	%rd282, %rd201, %rd1078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r168,%dummy}, %rd270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r169}, %rd270;
	}
	shf.r.wrap.b32 	%r170, %r169, %r168, 14;
	shf.r.wrap.b32 	%r171, %r168, %r169, 14;
	mov.b64 	%rd283, {%r171, %r170};
	shf.r.wrap.b32 	%r172, %r169, %r168, 18;
	shf.r.wrap.b32 	%r173, %r168, %r169, 18;
	mov.b64 	%rd284, {%r173, %r172};
	xor.b64  	%rd285, %rd283, %rd284;
	shf.l.wrap.b32 	%r174, %r168, %r169, 23;
	shf.l.wrap.b32 	%r175, %r169, %r168, 23;
	mov.b64 	%rd286, {%r175, %r174};
	xor.b64  	%rd287, %rd285, %rd286;
	xor.b64  	%rd288, %rd247, %rd224;
	and.b64  	%rd289, %rd270, %rd288;
	xor.b64  	%rd290, %rd289, %rd224;
	add.s64 	%rd291, %rd282, %rd290;
	add.s64 	%rd292, %rd291, %rd287;
	add.s64 	%rd293, %rd292, %rd212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r176,%dummy}, %rd281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r177}, %rd281;
	}
	shf.r.wrap.b32 	%r178, %r177, %r176, 28;
	shf.r.wrap.b32 	%r179, %r176, %r177, 28;
	mov.b64 	%rd294, {%r179, %r178};
	shf.l.wrap.b32 	%r180, %r176, %r177, 30;
	shf.l.wrap.b32 	%r181, %r177, %r176, 30;
	mov.b64 	%rd295, {%r181, %r180};
	xor.b64  	%rd296, %rd294, %rd295;
	shf.l.wrap.b32 	%r182, %r176, %r177, 25;
	shf.l.wrap.b32 	%r183, %r177, %r176, 25;
	mov.b64 	%rd297, {%r183, %r182};
	xor.b64  	%rd298, %rd296, %rd297;
	and.b64  	%rd299, %rd281, %rd258;
	xor.b64  	%rd300, %rd281, %rd258;
	and.b64  	%rd301, %rd300, %rd235;
	or.b64  	%rd302, %rd301, %rd299;
	add.s64 	%rd303, %rd298, %rd302;
	add.s64 	%rd304, %rd303, %rd292;
	add.s64 	%rd305, %rd224, %rd1079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r184,%dummy}, %rd293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r185}, %rd293;
	}
	shf.r.wrap.b32 	%r186, %r185, %r184, 14;
	shf.r.wrap.b32 	%r187, %r184, %r185, 14;
	mov.b64 	%rd306, {%r187, %r186};
	shf.r.wrap.b32 	%r188, %r185, %r184, 18;
	shf.r.wrap.b32 	%r189, %r184, %r185, 18;
	mov.b64 	%rd307, {%r189, %r188};
	xor.b64  	%rd308, %rd306, %rd307;
	shf.l.wrap.b32 	%r190, %r184, %r185, 23;
	shf.l.wrap.b32 	%r191, %r185, %r184, 23;
	mov.b64 	%rd309, {%r191, %r190};
	xor.b64  	%rd310, %rd308, %rd309;
	xor.b64  	%rd311, %rd270, %rd247;
	and.b64  	%rd312, %rd293, %rd311;
	xor.b64  	%rd313, %rd312, %rd247;
	add.s64 	%rd314, %rd305, %rd313;
	add.s64 	%rd315, %rd314, %rd310;
	add.s64 	%rd316, %rd315, %rd235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r192,%dummy}, %rd304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r193}, %rd304;
	}
	shf.r.wrap.b32 	%r194, %r193, %r192, 28;
	shf.r.wrap.b32 	%r195, %r192, %r193, 28;
	mov.b64 	%rd317, {%r195, %r194};
	shf.l.wrap.b32 	%r196, %r192, %r193, 30;
	shf.l.wrap.b32 	%r197, %r193, %r192, 30;
	mov.b64 	%rd318, {%r197, %r196};
	xor.b64  	%rd319, %rd317, %rd318;
	shf.l.wrap.b32 	%r198, %r192, %r193, 25;
	shf.l.wrap.b32 	%r199, %r193, %r192, 25;
	mov.b64 	%rd320, {%r199, %r198};
	xor.b64  	%rd321, %rd319, %rd320;
	and.b64  	%rd322, %rd304, %rd281;
	xor.b64  	%rd323, %rd304, %rd281;
	and.b64  	%rd324, %rd323, %rd258;
	or.b64  	%rd325, %rd324, %rd322;
	add.s64 	%rd326, %rd321, %rd325;
	add.s64 	%rd327, %rd326, %rd315;
	add.s64 	%rd328, %rd247, %rd1080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r200,%dummy}, %rd316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r201}, %rd316;
	}
	shf.r.wrap.b32 	%r202, %r201, %r200, 14;
	shf.r.wrap.b32 	%r203, %r200, %r201, 14;
	mov.b64 	%rd329, {%r203, %r202};
	shf.r.wrap.b32 	%r204, %r201, %r200, 18;
	shf.r.wrap.b32 	%r205, %r200, %r201, 18;
	mov.b64 	%rd330, {%r205, %r204};
	xor.b64  	%rd331, %rd329, %rd330;
	shf.l.wrap.b32 	%r206, %r200, %r201, 23;
	shf.l.wrap.b32 	%r207, %r201, %r200, 23;
	mov.b64 	%rd332, {%r207, %r206};
	xor.b64  	%rd333, %rd331, %rd332;
	xor.b64  	%rd334, %rd293, %rd270;
	and.b64  	%rd335, %rd316, %rd334;
	xor.b64  	%rd336, %rd335, %rd270;
	add.s64 	%rd337, %rd328, %rd336;
	add.s64 	%rd338, %rd337, %rd333;
	add.s64 	%rd339, %rd338, %rd258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r208,%dummy}, %rd327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r209}, %rd327;
	}
	shf.r.wrap.b32 	%r210, %r209, %r208, 28;
	shf.r.wrap.b32 	%r211, %r208, %r209, 28;
	mov.b64 	%rd340, {%r211, %r210};
	shf.l.wrap.b32 	%r212, %r208, %r209, 30;
	shf.l.wrap.b32 	%r213, %r209, %r208, 30;
	mov.b64 	%rd341, {%r213, %r212};
	xor.b64  	%rd342, %rd340, %rd341;
	shf.l.wrap.b32 	%r214, %r208, %r209, 25;
	shf.l.wrap.b32 	%r215, %r209, %r208, 25;
	mov.b64 	%rd343, {%r215, %r214};
	xor.b64  	%rd344, %rd342, %rd343;
	and.b64  	%rd345, %rd327, %rd304;
	xor.b64  	%rd346, %rd327, %rd304;
	and.b64  	%rd347, %rd346, %rd281;
	or.b64  	%rd348, %rd347, %rd345;
	add.s64 	%rd349, %rd344, %rd348;
	add.s64 	%rd350, %rd349, %rd338;
	add.s64 	%rd351, %rd270, %rd1081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r216,%dummy}, %rd339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r217}, %rd339;
	}
	shf.r.wrap.b32 	%r218, %r217, %r216, 14;
	shf.r.wrap.b32 	%r219, %r216, %r217, 14;
	mov.b64 	%rd352, {%r219, %r218};
	shf.r.wrap.b32 	%r220, %r217, %r216, 18;
	shf.r.wrap.b32 	%r221, %r216, %r217, 18;
	mov.b64 	%rd353, {%r221, %r220};
	xor.b64  	%rd354, %rd352, %rd353;
	shf.l.wrap.b32 	%r222, %r216, %r217, 23;
	shf.l.wrap.b32 	%r223, %r217, %r216, 23;
	mov.b64 	%rd355, {%r223, %r222};
	xor.b64  	%rd356, %rd354, %rd355;
	xor.b64  	%rd357, %rd316, %rd293;
	and.b64  	%rd358, %rd339, %rd357;
	xor.b64  	%rd359, %rd358, %rd293;
	add.s64 	%rd360, %rd351, %rd359;
	add.s64 	%rd361, %rd360, %rd356;
	add.s64 	%rd362, %rd361, %rd281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r224,%dummy}, %rd350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r225}, %rd350;
	}
	shf.r.wrap.b32 	%r226, %r225, %r224, 28;
	shf.r.wrap.b32 	%r227, %r224, %r225, 28;
	mov.b64 	%rd363, {%r227, %r226};
	shf.l.wrap.b32 	%r228, %r224, %r225, 30;
	shf.l.wrap.b32 	%r229, %r225, %r224, 30;
	mov.b64 	%rd364, {%r229, %r228};
	xor.b64  	%rd365, %rd363, %rd364;
	shf.l.wrap.b32 	%r230, %r224, %r225, 25;
	shf.l.wrap.b32 	%r231, %r225, %r224, 25;
	mov.b64 	%rd366, {%r231, %r230};
	xor.b64  	%rd367, %rd365, %rd366;
	and.b64  	%rd368, %rd350, %rd327;
	xor.b64  	%rd369, %rd350, %rd327;
	and.b64  	%rd370, %rd369, %rd304;
	or.b64  	%rd371, %rd370, %rd368;
	add.s64 	%rd372, %rd367, %rd371;
	add.s64 	%rd373, %rd372, %rd361;
	add.s64 	%rd374, %rd293, %rd1082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r232,%dummy}, %rd362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r233}, %rd362;
	}
	shf.r.wrap.b32 	%r234, %r233, %r232, 14;
	shf.r.wrap.b32 	%r235, %r232, %r233, 14;
	mov.b64 	%rd375, {%r235, %r234};
	shf.r.wrap.b32 	%r236, %r233, %r232, 18;
	shf.r.wrap.b32 	%r237, %r232, %r233, 18;
	mov.b64 	%rd376, {%r237, %r236};
	xor.b64  	%rd377, %rd375, %rd376;
	shf.l.wrap.b32 	%r238, %r232, %r233, 23;
	shf.l.wrap.b32 	%r239, %r233, %r232, 23;
	mov.b64 	%rd378, {%r239, %r238};
	xor.b64  	%rd379, %rd377, %rd378;
	xor.b64  	%rd380, %rd339, %rd316;
	and.b64  	%rd381, %rd362, %rd380;
	xor.b64  	%rd382, %rd381, %rd316;
	add.s64 	%rd383, %rd374, %rd382;
	add.s64 	%rd384, %rd383, %rd379;
	add.s64 	%rd1096, %rd384, %rd304;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r240,%dummy}, %rd373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r241}, %rd373;
	}
	shf.r.wrap.b32 	%r242, %r241, %r240, 28;
	shf.r.wrap.b32 	%r243, %r240, %r241, 28;
	mov.b64 	%rd385, {%r243, %r242};
	shf.l.wrap.b32 	%r244, %r240, %r241, 30;
	shf.l.wrap.b32 	%r245, %r241, %r240, 30;
	mov.b64 	%rd386, {%r245, %r244};
	xor.b64  	%rd387, %rd385, %rd386;
	shf.l.wrap.b32 	%r246, %r240, %r241, 25;
	shf.l.wrap.b32 	%r247, %r241, %r240, 25;
	mov.b64 	%rd388, {%r247, %r246};
	xor.b64  	%rd389, %rd387, %rd388;
	and.b64  	%rd390, %rd373, %rd350;
	xor.b64  	%rd391, %rd373, %rd350;
	and.b64  	%rd392, %rd391, %rd327;
	or.b64  	%rd393, %rd392, %rd390;
	add.s64 	%rd394, %rd389, %rd393;
	add.s64 	%rd1119, %rd394, %rd384;
	add.s64 	%rd395, %rd316, %rd1083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r248,%dummy}, %rd1096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r249}, %rd1096;
	}
	shf.r.wrap.b32 	%r250, %r249, %r248, 14;
	shf.r.wrap.b32 	%r251, %r248, %r249, 14;
	mov.b64 	%rd396, {%r251, %r250};
	shf.r.wrap.b32 	%r252, %r249, %r248, 18;
	shf.r.wrap.b32 	%r253, %r248, %r249, 18;
	mov.b64 	%rd397, {%r253, %r252};
	xor.b64  	%rd398, %rd396, %rd397;
	shf.l.wrap.b32 	%r254, %r248, %r249, 23;
	shf.l.wrap.b32 	%r255, %r249, %r248, 23;
	mov.b64 	%rd399, {%r255, %r254};
	xor.b64  	%rd400, %rd398, %rd399;
	xor.b64  	%rd401, %rd362, %rd339;
	and.b64  	%rd402, %rd1096, %rd401;
	xor.b64  	%rd403, %rd402, %rd339;
	add.s64 	%rd404, %rd395, %rd403;
	add.s64 	%rd405, %rd404, %rd400;
	add.s64 	%rd1097, %rd405, %rd327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r256,%dummy}, %rd1119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r257}, %rd1119;
	}
	shf.r.wrap.b32 	%r258, %r257, %r256, 28;
	shf.r.wrap.b32 	%r259, %r256, %r257, 28;
	mov.b64 	%rd406, {%r259, %r258};
	shf.l.wrap.b32 	%r260, %r256, %r257, 30;
	shf.l.wrap.b32 	%r261, %r257, %r256, 30;
	mov.b64 	%rd407, {%r261, %r260};
	xor.b64  	%rd408, %rd406, %rd407;
	shf.l.wrap.b32 	%r262, %r256, %r257, 25;
	shf.l.wrap.b32 	%r263, %r257, %r256, 25;
	mov.b64 	%rd409, {%r263, %r262};
	xor.b64  	%rd410, %rd408, %rd409;
	and.b64  	%rd411, %rd1119, %rd373;
	xor.b64  	%rd412, %rd1119, %rd373;
	and.b64  	%rd413, %rd412, %rd350;
	or.b64  	%rd414, %rd413, %rd411;
	add.s64 	%rd415, %rd410, %rd414;
	add.s64 	%rd1118, %rd415, %rd405;
	add.s64 	%rd416, %rd339, %rd1084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r264,%dummy}, %rd1097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r265}, %rd1097;
	}
	shf.r.wrap.b32 	%r266, %r265, %r264, 14;
	shf.r.wrap.b32 	%r267, %r264, %r265, 14;
	mov.b64 	%rd417, {%r267, %r266};
	shf.r.wrap.b32 	%r268, %r265, %r264, 18;
	shf.r.wrap.b32 	%r269, %r264, %r265, 18;
	mov.b64 	%rd418, {%r269, %r268};
	xor.b64  	%rd419, %rd417, %rd418;
	shf.l.wrap.b32 	%r270, %r264, %r265, 23;
	shf.l.wrap.b32 	%r271, %r265, %r264, 23;
	mov.b64 	%rd420, {%r271, %r270};
	xor.b64  	%rd421, %rd419, %rd420;
	xor.b64  	%rd422, %rd1096, %rd362;
	and.b64  	%rd423, %rd1097, %rd422;
	xor.b64  	%rd424, %rd423, %rd362;
	add.s64 	%rd425, %rd416, %rd424;
	add.s64 	%rd426, %rd425, %rd421;
	add.s64 	%rd1098, %rd426, %rd350;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r272,%dummy}, %rd1118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r273}, %rd1118;
	}
	shf.r.wrap.b32 	%r274, %r273, %r272, 28;
	shf.r.wrap.b32 	%r275, %r272, %r273, 28;
	mov.b64 	%rd427, {%r275, %r274};
	shf.l.wrap.b32 	%r276, %r272, %r273, 30;
	shf.l.wrap.b32 	%r277, %r273, %r272, 30;
	mov.b64 	%rd428, {%r277, %r276};
	xor.b64  	%rd429, %rd427, %rd428;
	shf.l.wrap.b32 	%r278, %r272, %r273, 25;
	shf.l.wrap.b32 	%r279, %r273, %r272, 25;
	mov.b64 	%rd430, {%r279, %r278};
	xor.b64  	%rd431, %rd429, %rd430;
	and.b64  	%rd432, %rd1118, %rd1119;
	xor.b64  	%rd433, %rd1118, %rd1119;
	and.b64  	%rd434, %rd433, %rd373;
	or.b64  	%rd435, %rd434, %rd432;
	add.s64 	%rd436, %rd431, %rd435;
	add.s64 	%rd1117, %rd436, %rd426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r280,%dummy}, %rd1098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r281}, %rd1098;
	}
	shf.r.wrap.b32 	%r282, %r281, %r280, 14;
	shf.r.wrap.b32 	%r283, %r280, %r281, 14;
	mov.b64 	%rd437, {%r283, %r282};
	shf.r.wrap.b32 	%r284, %r281, %r280, 18;
	shf.r.wrap.b32 	%r285, %r280, %r281, 18;
	mov.b64 	%rd438, {%r285, %r284};
	xor.b64  	%rd439, %rd437, %rd438;
	shf.l.wrap.b32 	%r286, %r280, %r281, 23;
	shf.l.wrap.b32 	%r287, %r281, %r280, 23;
	mov.b64 	%rd440, {%r287, %r286};
	xor.b64  	%rd441, %rd439, %rd440;
	xor.b64  	%rd442, %rd1097, %rd1096;
	and.b64  	%rd443, %rd1098, %rd442;
	xor.b64  	%rd444, %rd443, %rd1096;
	add.s64 	%rd445, %rd21, %rd362;
	add.s64 	%rd446, %rd445, %rd444;
	add.s64 	%rd447, %rd446, %rd441;
	add.s64 	%rd1099, %rd447, %rd373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r288,%dummy}, %rd1117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r289}, %rd1117;
	}
	shf.r.wrap.b32 	%r290, %r289, %r288, 28;
	shf.r.wrap.b32 	%r291, %r288, %r289, 28;
	mov.b64 	%rd448, {%r291, %r290};
	shf.l.wrap.b32 	%r292, %r288, %r289, 30;
	shf.l.wrap.b32 	%r293, %r289, %r288, 30;
	mov.b64 	%rd449, {%r293, %r292};
	xor.b64  	%rd450, %rd448, %rd449;
	shf.l.wrap.b32 	%r294, %r288, %r289, 25;
	shf.l.wrap.b32 	%r295, %r289, %r288, 25;
	mov.b64 	%rd451, {%r295, %r294};
	xor.b64  	%rd452, %rd450, %rd451;
	and.b64  	%rd453, %rd1117, %rd1118;
	xor.b64  	%rd454, %rd1117, %rd1118;
	and.b64  	%rd455, %rd454, %rd1119;
	or.b64  	%rd456, %rd455, %rd453;
	add.s64 	%rd457, %rd452, %rd456;
	add.s64 	%rd1116, %rd457, %rd447;
	mov.u64 	%rd1104, 0;
	mov.u32 	%r800, 16;
	mov.u64 	%rd1095, k_sha512;
	mov.u64 	%rd1101, %rd2;
	mov.u64 	%rd1102, %rd3;
	mov.u64 	%rd1103, %rd4;
	mov.u64 	%rd1105, %rd1104;
	mov.u64 	%rd1106, %rd1104;
	mov.u64 	%rd1107, %rd1104;
	mov.u64 	%rd1108, %rd1104;
	mov.u64 	%rd1109, %rd1104;
	mov.u64 	%rd1110, %rd1104;
	mov.u64 	%rd1111, %rd1104;
	mov.u64 	%rd1112, %rd1104;
	mov.u64 	%rd1113, %rd1104;
	mov.u64 	%rd1114, %rd1104;

BB1_4:
	shr.u64 	%rd458, %rd1114, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r296}, %rd1114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r297,%dummy}, %rd1114;
	}
	shf.l.wrap.b32 	%r298, %r297, %r296, 3;
	shf.l.wrap.b32 	%r299, %r296, %r297, 3;
	mov.b64 	%rd459, {%r299, %r298};
	xor.b64  	%rd460, %rd459, %rd458;
	shf.r.wrap.b32 	%r300, %r296, %r297, 19;
	shf.r.wrap.b32 	%r301, %r297, %r296, 19;
	mov.b64 	%rd461, {%r301, %r300};
	xor.b64  	%rd462, %rd460, %rd461;
	add.s64 	%rd463, %rd1109, %rd462;
	shr.u64 	%rd464, %rd1101, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r302,%dummy}, %rd1101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r303}, %rd1101;
	}
	shf.r.wrap.b32 	%r304, %r303, %r302, 8;
	shf.r.wrap.b32 	%r305, %r302, %r303, 8;
	mov.b64 	%rd465, {%r305, %r304};
	xor.b64  	%rd466, %rd465, %rd464;
	shf.r.wrap.b32 	%r306, %r303, %r302, 1;
	shf.r.wrap.b32 	%r307, %r302, %r303, 1;
	mov.b64 	%rd467, {%r307, %r306};
	xor.b64  	%rd468, %rd466, %rd467;
	add.s64 	%rd469, %rd463, %rd1100;
	add.s64 	%rd1100, %rd469, %rd468;
	shr.u64 	%rd470, %rd1115, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r308}, %rd1115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r309,%dummy}, %rd1115;
	}
	shf.l.wrap.b32 	%r310, %r309, %r308, 3;
	shf.l.wrap.b32 	%r311, %r308, %r309, 3;
	mov.b64 	%rd471, {%r311, %r310};
	xor.b64  	%rd472, %rd471, %rd470;
	shf.r.wrap.b32 	%r312, %r308, %r309, 19;
	shf.r.wrap.b32 	%r313, %r309, %r308, 19;
	mov.b64 	%rd473, {%r313, %r312};
	xor.b64  	%rd474, %rd472, %rd473;
	add.s64 	%rd475, %rd1110, %rd474;
	shr.u64 	%rd476, %rd1102, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r314,%dummy}, %rd1102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r315}, %rd1102;
	}
	shf.r.wrap.b32 	%r316, %r315, %r314, 8;
	shf.r.wrap.b32 	%r317, %r314, %r315, 8;
	mov.b64 	%rd477, {%r317, %r316};
	xor.b64  	%rd478, %rd477, %rd476;
	shf.r.wrap.b32 	%r318, %r315, %r314, 1;
	shf.r.wrap.b32 	%r319, %r314, %r315, 1;
	mov.b64 	%rd479, {%r319, %r318};
	xor.b64  	%rd480, %rd478, %rd479;
	add.s64 	%rd481, %rd475, %rd1101;
	add.s64 	%rd1101, %rd481, %rd480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r320,%dummy}, %rd1100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r321}, %rd1100;
	}
	shf.r.wrap.b32 	%r322, %r321, %r320, 19;
	shf.r.wrap.b32 	%r323, %r320, %r321, 19;
	mov.b64 	%rd482, {%r323, %r322};
	shf.l.wrap.b32 	%r324, %r320, %r321, 3;
	shf.l.wrap.b32 	%r325, %r321, %r320, 3;
	mov.b64 	%rd483, {%r325, %r324};
	shr.u64 	%rd484, %rd1100, 6;
	xor.b64  	%rd485, %rd483, %rd484;
	xor.b64  	%rd486, %rd485, %rd482;
	shr.u64 	%rd487, %rd1103, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r326,%dummy}, %rd1103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r327}, %rd1103;
	}
	shf.r.wrap.b32 	%r328, %r327, %r326, 8;
	shf.r.wrap.b32 	%r329, %r326, %r327, 8;
	mov.b64 	%rd488, {%r329, %r328};
	xor.b64  	%rd489, %rd488, %rd487;
	shf.r.wrap.b32 	%r330, %r327, %r326, 1;
	shf.r.wrap.b32 	%r331, %r326, %r327, 1;
	mov.b64 	%rd490, {%r331, %r330};
	xor.b64  	%rd491, %rd489, %rd490;
	add.s64 	%rd492, %rd1102, %rd1111;
	add.s64 	%rd493, %rd492, %rd491;
	add.s64 	%rd1102, %rd493, %rd486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r332,%dummy}, %rd1101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r333}, %rd1101;
	}
	shf.r.wrap.b32 	%r334, %r333, %r332, 19;
	shf.r.wrap.b32 	%r335, %r332, %r333, 19;
	mov.b64 	%rd494, {%r335, %r334};
	shf.l.wrap.b32 	%r336, %r332, %r333, 3;
	shf.l.wrap.b32 	%r337, %r333, %r332, 3;
	mov.b64 	%rd495, {%r337, %r336};
	shr.u64 	%rd496, %rd1101, 6;
	xor.b64  	%rd497, %rd495, %rd496;
	xor.b64  	%rd498, %rd497, %rd494;
	shr.u64 	%rd499, %rd1104, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r338,%dummy}, %rd1104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r339}, %rd1104;
	}
	shf.r.wrap.b32 	%r340, %r339, %r338, 8;
	shf.r.wrap.b32 	%r341, %r338, %r339, 8;
	mov.b64 	%rd500, {%r341, %r340};
	xor.b64  	%rd501, %rd500, %rd499;
	shf.r.wrap.b32 	%r342, %r339, %r338, 1;
	shf.r.wrap.b32 	%r343, %r338, %r339, 1;
	mov.b64 	%rd502, {%r343, %r342};
	xor.b64  	%rd503, %rd501, %rd502;
	add.s64 	%rd504, %rd1103, %rd1112;
	add.s64 	%rd505, %rd504, %rd503;
	add.s64 	%rd1103, %rd505, %rd498;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r344,%dummy}, %rd1102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r345}, %rd1102;
	}
	shf.r.wrap.b32 	%r346, %r345, %r344, 19;
	shf.r.wrap.b32 	%r347, %r344, %r345, 19;
	mov.b64 	%rd506, {%r347, %r346};
	shf.l.wrap.b32 	%r348, %r344, %r345, 3;
	shf.l.wrap.b32 	%r349, %r345, %r344, 3;
	mov.b64 	%rd507, {%r349, %r348};
	shr.u64 	%rd508, %rd1102, 6;
	xor.b64  	%rd509, %rd507, %rd508;
	xor.b64  	%rd510, %rd509, %rd506;
	shr.u64 	%rd511, %rd1105, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r350,%dummy}, %rd1105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r351}, %rd1105;
	}
	shf.r.wrap.b32 	%r352, %r351, %r350, 8;
	shf.r.wrap.b32 	%r353, %r350, %r351, 8;
	mov.b64 	%rd512, {%r353, %r352};
	xor.b64  	%rd513, %rd512, %rd511;
	shf.r.wrap.b32 	%r354, %r351, %r350, 1;
	shf.r.wrap.b32 	%r355, %r350, %r351, 1;
	mov.b64 	%rd514, {%r355, %r354};
	xor.b64  	%rd515, %rd513, %rd514;
	add.s64 	%rd516, %rd1104, %rd1113;
	add.s64 	%rd517, %rd516, %rd515;
	add.s64 	%rd1104, %rd517, %rd510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r356,%dummy}, %rd1103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r357}, %rd1103;
	}
	shf.r.wrap.b32 	%r358, %r357, %r356, 19;
	shf.r.wrap.b32 	%r359, %r356, %r357, 19;
	mov.b64 	%rd518, {%r359, %r358};
	shf.l.wrap.b32 	%r360, %r356, %r357, 3;
	shf.l.wrap.b32 	%r361, %r357, %r356, 3;
	mov.b64 	%rd519, {%r361, %r360};
	shr.u64 	%rd520, %rd1103, 6;
	xor.b64  	%rd521, %rd519, %rd520;
	xor.b64  	%rd522, %rd521, %rd518;
	shr.u64 	%rd523, %rd1106, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r362,%dummy}, %rd1106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r363}, %rd1106;
	}
	shf.r.wrap.b32 	%r364, %r363, %r362, 8;
	shf.r.wrap.b32 	%r365, %r362, %r363, 8;
	mov.b64 	%rd524, {%r365, %r364};
	xor.b64  	%rd525, %rd524, %rd523;
	shf.r.wrap.b32 	%r366, %r363, %r362, 1;
	shf.r.wrap.b32 	%r367, %r362, %r363, 1;
	mov.b64 	%rd526, {%r367, %r366};
	xor.b64  	%rd527, %rd525, %rd526;
	add.s64 	%rd528, %rd1105, %rd1114;
	add.s64 	%rd529, %rd528, %rd527;
	add.s64 	%rd1105, %rd529, %rd522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r368,%dummy}, %rd1104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r369}, %rd1104;
	}
	shf.r.wrap.b32 	%r370, %r369, %r368, 19;
	shf.r.wrap.b32 	%r371, %r368, %r369, 19;
	mov.b64 	%rd530, {%r371, %r370};
	shf.l.wrap.b32 	%r372, %r368, %r369, 3;
	shf.l.wrap.b32 	%r373, %r369, %r368, 3;
	mov.b64 	%rd531, {%r373, %r372};
	shr.u64 	%rd532, %rd1104, 6;
	xor.b64  	%rd533, %rd531, %rd532;
	xor.b64  	%rd534, %rd533, %rd530;
	shr.u64 	%rd535, %rd1107, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r374,%dummy}, %rd1107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r375}, %rd1107;
	}
	shf.r.wrap.b32 	%r376, %r375, %r374, 8;
	shf.r.wrap.b32 	%r377, %r374, %r375, 8;
	mov.b64 	%rd536, {%r377, %r376};
	xor.b64  	%rd537, %rd536, %rd535;
	shf.r.wrap.b32 	%r378, %r375, %r374, 1;
	shf.r.wrap.b32 	%r379, %r374, %r375, 1;
	mov.b64 	%rd538, {%r379, %r378};
	xor.b64  	%rd539, %rd537, %rd538;
	add.s64 	%rd540, %rd1106, %rd1115;
	add.s64 	%rd541, %rd540, %rd539;
	add.s64 	%rd1106, %rd541, %rd534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r380,%dummy}, %rd1105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r381}, %rd1105;
	}
	shf.r.wrap.b32 	%r382, %r381, %r380, 19;
	shf.r.wrap.b32 	%r383, %r380, %r381, 19;
	mov.b64 	%rd542, {%r383, %r382};
	shf.l.wrap.b32 	%r384, %r380, %r381, 3;
	shf.l.wrap.b32 	%r385, %r381, %r380, 3;
	mov.b64 	%rd543, {%r385, %r384};
	shr.u64 	%rd544, %rd1105, 6;
	xor.b64  	%rd545, %rd543, %rd544;
	xor.b64  	%rd546, %rd545, %rd542;
	shr.u64 	%rd547, %rd1108, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r386,%dummy}, %rd1108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r387}, %rd1108;
	}
	shf.r.wrap.b32 	%r388, %r387, %r386, 8;
	shf.r.wrap.b32 	%r389, %r386, %r387, 8;
	mov.b64 	%rd548, {%r389, %r388};
	xor.b64  	%rd549, %rd548, %rd547;
	shf.r.wrap.b32 	%r390, %r387, %r386, 1;
	shf.r.wrap.b32 	%r391, %r386, %r387, 1;
	mov.b64 	%rd550, {%r391, %r390};
	xor.b64  	%rd551, %rd549, %rd550;
	add.s64 	%rd552, %rd551, %rd1107;
	add.s64 	%rd553, %rd552, %rd1100;
	add.s64 	%rd1107, %rd553, %rd546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r392,%dummy}, %rd1106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r393}, %rd1106;
	}
	shf.r.wrap.b32 	%r394, %r393, %r392, 19;
	shf.r.wrap.b32 	%r395, %r392, %r393, 19;
	mov.b64 	%rd554, {%r395, %r394};
	shf.l.wrap.b32 	%r396, %r392, %r393, 3;
	shf.l.wrap.b32 	%r397, %r393, %r392, 3;
	mov.b64 	%rd555, {%r397, %r396};
	shr.u64 	%rd556, %rd1106, 6;
	xor.b64  	%rd557, %rd555, %rd556;
	xor.b64  	%rd558, %rd557, %rd554;
	shr.u64 	%rd559, %rd1109, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r398,%dummy}, %rd1109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r399}, %rd1109;
	}
	shf.r.wrap.b32 	%r400, %r399, %r398, 8;
	shf.r.wrap.b32 	%r401, %r398, %r399, 8;
	mov.b64 	%rd560, {%r401, %r400};
	xor.b64  	%rd561, %rd560, %rd559;
	shf.r.wrap.b32 	%r402, %r399, %r398, 1;
	shf.r.wrap.b32 	%r403, %r398, %r399, 1;
	mov.b64 	%rd562, {%r403, %r402};
	xor.b64  	%rd563, %rd561, %rd562;
	add.s64 	%rd564, %rd563, %rd1108;
	add.s64 	%rd565, %rd564, %rd1101;
	add.s64 	%rd1108, %rd565, %rd558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r404,%dummy}, %rd1107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r405}, %rd1107;
	}
	shf.r.wrap.b32 	%r406, %r405, %r404, 19;
	shf.r.wrap.b32 	%r407, %r404, %r405, 19;
	mov.b64 	%rd566, {%r407, %r406};
	shf.l.wrap.b32 	%r408, %r404, %r405, 3;
	shf.l.wrap.b32 	%r409, %r405, %r404, 3;
	mov.b64 	%rd567, {%r409, %r408};
	shr.u64 	%rd568, %rd1107, 6;
	xor.b64  	%rd569, %rd567, %rd568;
	xor.b64  	%rd570, %rd569, %rd566;
	shr.u64 	%rd571, %rd1110, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r410,%dummy}, %rd1110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r411}, %rd1110;
	}
	shf.r.wrap.b32 	%r412, %r411, %r410, 8;
	shf.r.wrap.b32 	%r413, %r410, %r411, 8;
	mov.b64 	%rd572, {%r413, %r412};
	xor.b64  	%rd573, %rd572, %rd571;
	shf.r.wrap.b32 	%r414, %r411, %r410, 1;
	shf.r.wrap.b32 	%r415, %r410, %r411, 1;
	mov.b64 	%rd574, {%r415, %r414};
	xor.b64  	%rd575, %rd573, %rd574;
	add.s64 	%rd576, %rd575, %rd1109;
	add.s64 	%rd577, %rd576, %rd1102;
	add.s64 	%rd1109, %rd577, %rd570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r416,%dummy}, %rd1108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r417}, %rd1108;
	}
	shf.r.wrap.b32 	%r418, %r417, %r416, 19;
	shf.r.wrap.b32 	%r419, %r416, %r417, 19;
	mov.b64 	%rd578, {%r419, %r418};
	shf.l.wrap.b32 	%r420, %r416, %r417, 3;
	shf.l.wrap.b32 	%r421, %r417, %r416, 3;
	mov.b64 	%rd579, {%r421, %r420};
	shr.u64 	%rd580, %rd1108, 6;
	xor.b64  	%rd581, %rd579, %rd580;
	xor.b64  	%rd582, %rd581, %rd578;
	shr.u64 	%rd583, %rd1111, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r422,%dummy}, %rd1111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r423}, %rd1111;
	}
	shf.r.wrap.b32 	%r424, %r423, %r422, 8;
	shf.r.wrap.b32 	%r425, %r422, %r423, 8;
	mov.b64 	%rd584, {%r425, %r424};
	xor.b64  	%rd585, %rd584, %rd583;
	shf.r.wrap.b32 	%r426, %r423, %r422, 1;
	shf.r.wrap.b32 	%r427, %r422, %r423, 1;
	mov.b64 	%rd586, {%r427, %r426};
	xor.b64  	%rd587, %rd585, %rd586;
	add.s64 	%rd588, %rd587, %rd1110;
	add.s64 	%rd589, %rd588, %rd1103;
	add.s64 	%rd1110, %rd589, %rd582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r428,%dummy}, %rd1109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r429}, %rd1109;
	}
	shf.r.wrap.b32 	%r430, %r429, %r428, 19;
	shf.r.wrap.b32 	%r431, %r428, %r429, 19;
	mov.b64 	%rd590, {%r431, %r430};
	shf.l.wrap.b32 	%r432, %r428, %r429, 3;
	shf.l.wrap.b32 	%r433, %r429, %r428, 3;
	mov.b64 	%rd591, {%r433, %r432};
	shr.u64 	%rd592, %rd1109, 6;
	xor.b64  	%rd593, %rd591, %rd592;
	xor.b64  	%rd594, %rd593, %rd590;
	shr.u64 	%rd595, %rd1112, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r434,%dummy}, %rd1112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r435}, %rd1112;
	}
	shf.r.wrap.b32 	%r436, %r435, %r434, 8;
	shf.r.wrap.b32 	%r437, %r434, %r435, 8;
	mov.b64 	%rd596, {%r437, %r436};
	xor.b64  	%rd597, %rd596, %rd595;
	shf.r.wrap.b32 	%r438, %r435, %r434, 1;
	shf.r.wrap.b32 	%r439, %r434, %r435, 1;
	mov.b64 	%rd598, {%r439, %r438};
	xor.b64  	%rd599, %rd597, %rd598;
	add.s64 	%rd600, %rd599, %rd1111;
	add.s64 	%rd601, %rd600, %rd1104;
	add.s64 	%rd1111, %rd601, %rd594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r440,%dummy}, %rd1110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r441}, %rd1110;
	}
	shf.r.wrap.b32 	%r442, %r441, %r440, 19;
	shf.r.wrap.b32 	%r443, %r440, %r441, 19;
	mov.b64 	%rd602, {%r443, %r442};
	shf.l.wrap.b32 	%r444, %r440, %r441, 3;
	shf.l.wrap.b32 	%r445, %r441, %r440, 3;
	mov.b64 	%rd603, {%r445, %r444};
	shr.u64 	%rd604, %rd1110, 6;
	xor.b64  	%rd605, %rd603, %rd604;
	xor.b64  	%rd606, %rd605, %rd602;
	shr.u64 	%rd607, %rd1113, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r446,%dummy}, %rd1113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r447}, %rd1113;
	}
	shf.r.wrap.b32 	%r448, %r447, %r446, 8;
	shf.r.wrap.b32 	%r449, %r446, %r447, 8;
	mov.b64 	%rd608, {%r449, %r448};
	xor.b64  	%rd609, %rd608, %rd607;
	shf.r.wrap.b32 	%r450, %r447, %r446, 1;
	shf.r.wrap.b32 	%r451, %r446, %r447, 1;
	mov.b64 	%rd610, {%r451, %r450};
	xor.b64  	%rd611, %rd609, %rd610;
	add.s64 	%rd612, %rd611, %rd1112;
	add.s64 	%rd613, %rd612, %rd1105;
	add.s64 	%rd1112, %rd613, %rd606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r452,%dummy}, %rd1111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r453}, %rd1111;
	}
	shf.r.wrap.b32 	%r454, %r453, %r452, 19;
	shf.r.wrap.b32 	%r455, %r452, %r453, 19;
	mov.b64 	%rd614, {%r455, %r454};
	shf.l.wrap.b32 	%r456, %r452, %r453, 3;
	shf.l.wrap.b32 	%r457, %r453, %r452, 3;
	mov.b64 	%rd615, {%r457, %r456};
	shr.u64 	%rd616, %rd1111, 6;
	xor.b64  	%rd617, %rd615, %rd616;
	xor.b64  	%rd618, %rd617, %rd614;
	shr.u64 	%rd619, %rd1114, 7;
	shf.r.wrap.b32 	%r458, %r296, %r297, 8;
	shf.r.wrap.b32 	%r459, %r297, %r296, 8;
	mov.b64 	%rd620, {%r459, %r458};
	xor.b64  	%rd621, %rd620, %rd619;
	shf.r.wrap.b32 	%r460, %r296, %r297, 1;
	shf.r.wrap.b32 	%r461, %r297, %r296, 1;
	mov.b64 	%rd622, {%r461, %r460};
	xor.b64  	%rd623, %rd621, %rd622;
	add.s64 	%rd624, %rd623, %rd1113;
	add.s64 	%rd625, %rd624, %rd1106;
	add.s64 	%rd1113, %rd625, %rd618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r462,%dummy}, %rd1112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r463}, %rd1112;
	}
	shf.r.wrap.b32 	%r464, %r463, %r462, 19;
	shf.r.wrap.b32 	%r465, %r462, %r463, 19;
	mov.b64 	%rd626, {%r465, %r464};
	shf.l.wrap.b32 	%r466, %r462, %r463, 3;
	shf.l.wrap.b32 	%r467, %r463, %r462, 3;
	mov.b64 	%rd627, {%r467, %r466};
	shr.u64 	%rd628, %rd1112, 6;
	xor.b64  	%rd629, %rd627, %rd628;
	xor.b64  	%rd630, %rd629, %rd626;
	shr.u64 	%rd631, %rd1115, 7;
	shf.r.wrap.b32 	%r468, %r308, %r309, 8;
	shf.r.wrap.b32 	%r469, %r309, %r308, 8;
	mov.b64 	%rd632, {%r469, %r468};
	xor.b64  	%rd633, %rd632, %rd631;
	shf.r.wrap.b32 	%r470, %r308, %r309, 1;
	shf.r.wrap.b32 	%r471, %r309, %r308, 1;
	mov.b64 	%rd634, {%r471, %r470};
	xor.b64  	%rd635, %rd633, %rd634;
	add.s64 	%rd636, %rd635, %rd1114;
	add.s64 	%rd637, %rd636, %rd1107;
	add.s64 	%rd1114, %rd637, %rd630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r472,%dummy}, %rd1113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r473}, %rd1113;
	}
	shf.r.wrap.b32 	%r474, %r473, %r472, 19;
	shf.r.wrap.b32 	%r475, %r472, %r473, 19;
	mov.b64 	%rd638, {%r475, %r474};
	shf.l.wrap.b32 	%r476, %r472, %r473, 3;
	shf.l.wrap.b32 	%r477, %r473, %r472, 3;
	mov.b64 	%rd639, {%r477, %r476};
	shr.u64 	%rd640, %rd1113, 6;
	xor.b64  	%rd641, %rd639, %rd640;
	xor.b64  	%rd642, %rd641, %rd638;
	shf.r.wrap.b32 	%r478, %r321, %r320, 1;
	shf.r.wrap.b32 	%r479, %r320, %r321, 1;
	mov.b64 	%rd643, {%r479, %r478};
	shf.r.wrap.b32 	%r480, %r321, %r320, 8;
	shf.r.wrap.b32 	%r481, %r320, %r321, 8;
	mov.b64 	%rd644, {%r481, %r480};
	shr.u64 	%rd645, %rd1100, 7;
	xor.b64  	%rd646, %rd644, %rd645;
	xor.b64  	%rd647, %rd646, %rd643;
	add.s64 	%rd648, %rd647, %rd1115;
	add.s64 	%rd649, %rd648, %rd1108;
	add.s64 	%rd1115, %rd649, %rd642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r482,%dummy}, %rd1099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r483}, %rd1099;
	}
	shf.r.wrap.b32 	%r484, %r483, %r482, 18;
	shf.r.wrap.b32 	%r485, %r482, %r483, 18;
	mov.b64 	%rd650, {%r485, %r484};
	shf.r.wrap.b32 	%r486, %r483, %r482, 14;
	shf.r.wrap.b32 	%r487, %r482, %r483, 14;
	mov.b64 	%rd651, {%r487, %r486};
	xor.b64  	%rd652, %rd651, %rd650;
	shf.l.wrap.b32 	%r488, %r482, %r483, 23;
	shf.l.wrap.b32 	%r489, %r483, %r482, 23;
	mov.b64 	%rd653, {%r489, %r488};
	xor.b64  	%rd654, %rd652, %rd653;
	xor.b64  	%rd655, %rd1097, %rd1098;
	and.b64  	%rd656, %rd655, %rd1099;
	xor.b64  	%rd657, %rd656, %rd1097;
	add.s64 	%rd658, %rd1100, %rd1096;
	add.s64 	%rd659, %rd658, %rd654;
	add.s64 	%rd660, %rd659, %rd657;
	add.s64 	%rd81, %rd1095, 128;
	ld.const.u64 	%rd661, [%rd1095+128];
	add.s64 	%rd662, %rd660, %rd661;
	add.s64 	%rd663, %rd662, %rd1119;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r490}, %rd1116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r491,%dummy}, %rd1116;
	}
	shf.l.wrap.b32 	%r492, %r491, %r490, 30;
	shf.l.wrap.b32 	%r493, %r490, %r491, 30;
	mov.b64 	%rd664, {%r493, %r492};
	shf.r.wrap.b32 	%r494, %r490, %r491, 28;
	shf.r.wrap.b32 	%r495, %r491, %r490, 28;
	mov.b64 	%rd665, {%r495, %r494};
	xor.b64  	%rd666, %rd665, %rd664;
	shf.l.wrap.b32 	%r496, %r491, %r490, 25;
	shf.l.wrap.b32 	%r497, %r490, %r491, 25;
	mov.b64 	%rd667, {%r497, %r496};
	xor.b64  	%rd668, %rd666, %rd667;
	xor.b64  	%rd669, %rd1116, %rd1117;
	and.b64  	%rd670, %rd669, %rd1118;
	and.b64  	%rd671, %rd1116, %rd1117;
	or.b64  	%rd672, %rd670, %rd671;
	add.s64 	%rd673, %rd668, %rd672;
	add.s64 	%rd674, %rd673, %rd662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r498,%dummy}, %rd663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r499}, %rd663;
	}
	shf.r.wrap.b32 	%r500, %r499, %r498, 14;
	shf.r.wrap.b32 	%r501, %r498, %r499, 14;
	mov.b64 	%rd675, {%r501, %r500};
	shf.r.wrap.b32 	%r502, %r499, %r498, 18;
	shf.r.wrap.b32 	%r503, %r498, %r499, 18;
	mov.b64 	%rd676, {%r503, %r502};
	xor.b64  	%rd677, %rd675, %rd676;
	shf.l.wrap.b32 	%r504, %r498, %r499, 23;
	shf.l.wrap.b32 	%r505, %r499, %r498, 23;
	mov.b64 	%rd678, {%r505, %r504};
	xor.b64  	%rd679, %rd677, %rd678;
	xor.b64  	%rd680, %rd1098, %rd1099;
	and.b64  	%rd681, %rd663, %rd680;
	xor.b64  	%rd682, %rd681, %rd1098;
	add.s64 	%rd683, %rd1101, %rd1097;
	ld.const.u64 	%rd684, [%rd1095+136];
	add.s64 	%rd685, %rd683, %rd684;
	add.s64 	%rd686, %rd685, %rd682;
	add.s64 	%rd687, %rd686, %rd679;
	add.s64 	%rd688, %rd687, %rd1118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r506,%dummy}, %rd674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r507}, %rd674;
	}
	shf.r.wrap.b32 	%r508, %r507, %r506, 28;
	shf.r.wrap.b32 	%r509, %r506, %r507, 28;
	mov.b64 	%rd689, {%r509, %r508};
	shf.l.wrap.b32 	%r510, %r506, %r507, 30;
	shf.l.wrap.b32 	%r511, %r507, %r506, 30;
	mov.b64 	%rd690, {%r511, %r510};
	xor.b64  	%rd691, %rd689, %rd690;
	shf.l.wrap.b32 	%r512, %r506, %r507, 25;
	shf.l.wrap.b32 	%r513, %r507, %r506, 25;
	mov.b64 	%rd692, {%r513, %r512};
	xor.b64  	%rd693, %rd691, %rd692;
	and.b64  	%rd694, %rd674, %rd1116;
	xor.b64  	%rd695, %rd674, %rd1116;
	and.b64  	%rd696, %rd695, %rd1117;
	or.b64  	%rd697, %rd696, %rd694;
	add.s64 	%rd698, %rd693, %rd697;
	add.s64 	%rd699, %rd698, %rd687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r514,%dummy}, %rd688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r515}, %rd688;
	}
	shf.r.wrap.b32 	%r516, %r515, %r514, 14;
	shf.r.wrap.b32 	%r517, %r514, %r515, 14;
	mov.b64 	%rd700, {%r517, %r516};
	shf.r.wrap.b32 	%r518, %r515, %r514, 18;
	shf.r.wrap.b32 	%r519, %r514, %r515, 18;
	mov.b64 	%rd701, {%r519, %r518};
	xor.b64  	%rd702, %rd700, %rd701;
	shf.l.wrap.b32 	%r520, %r514, %r515, 23;
	shf.l.wrap.b32 	%r521, %r515, %r514, 23;
	mov.b64 	%rd703, {%r521, %r520};
	xor.b64  	%rd704, %rd702, %rd703;
	xor.b64  	%rd705, %rd663, %rd1099;
	and.b64  	%rd706, %rd688, %rd705;
	xor.b64  	%rd707, %rd706, %rd1099;
	add.s64 	%rd708, %rd1102, %rd1098;
	ld.const.u64 	%rd709, [%rd1095+144];
	add.s64 	%rd710, %rd708, %rd709;
	add.s64 	%rd711, %rd710, %rd707;
	add.s64 	%rd712, %rd711, %rd704;
	add.s64 	%rd713, %rd712, %rd1117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r522,%dummy}, %rd699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r523}, %rd699;
	}
	shf.r.wrap.b32 	%r524, %r523, %r522, 28;
	shf.r.wrap.b32 	%r525, %r522, %r523, 28;
	mov.b64 	%rd714, {%r525, %r524};
	shf.l.wrap.b32 	%r526, %r522, %r523, 30;
	shf.l.wrap.b32 	%r527, %r523, %r522, 30;
	mov.b64 	%rd715, {%r527, %r526};
	xor.b64  	%rd716, %rd714, %rd715;
	shf.l.wrap.b32 	%r528, %r522, %r523, 25;
	shf.l.wrap.b32 	%r529, %r523, %r522, 25;
	mov.b64 	%rd717, {%r529, %r528};
	xor.b64  	%rd718, %rd716, %rd717;
	and.b64  	%rd719, %rd699, %rd674;
	xor.b64  	%rd720, %rd699, %rd674;
	and.b64  	%rd721, %rd720, %rd1116;
	or.b64  	%rd722, %rd721, %rd719;
	add.s64 	%rd723, %rd718, %rd722;
	add.s64 	%rd724, %rd723, %rd712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r530,%dummy}, %rd713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r531}, %rd713;
	}
	shf.r.wrap.b32 	%r532, %r531, %r530, 14;
	shf.r.wrap.b32 	%r533, %r530, %r531, 14;
	mov.b64 	%rd725, {%r533, %r532};
	shf.r.wrap.b32 	%r534, %r531, %r530, 18;
	shf.r.wrap.b32 	%r535, %r530, %r531, 18;
	mov.b64 	%rd726, {%r535, %r534};
	xor.b64  	%rd727, %rd725, %rd726;
	shf.l.wrap.b32 	%r536, %r530, %r531, 23;
	shf.l.wrap.b32 	%r537, %r531, %r530, 23;
	mov.b64 	%rd728, {%r537, %r536};
	xor.b64  	%rd729, %rd727, %rd728;
	xor.b64  	%rd730, %rd688, %rd663;
	and.b64  	%rd731, %rd713, %rd730;
	xor.b64  	%rd732, %rd731, %rd663;
	add.s64 	%rd733, %rd1103, %rd1099;
	ld.const.u64 	%rd734, [%rd1095+152];
	add.s64 	%rd735, %rd733, %rd734;
	add.s64 	%rd736, %rd735, %rd732;
	add.s64 	%rd737, %rd736, %rd729;
	add.s64 	%rd738, %rd737, %rd1116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r538,%dummy}, %rd724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r539}, %rd724;
	}
	shf.r.wrap.b32 	%r540, %r539, %r538, 28;
	shf.r.wrap.b32 	%r541, %r538, %r539, 28;
	mov.b64 	%rd739, {%r541, %r540};
	shf.l.wrap.b32 	%r542, %r538, %r539, 30;
	shf.l.wrap.b32 	%r543, %r539, %r538, 30;
	mov.b64 	%rd740, {%r543, %r542};
	xor.b64  	%rd741, %rd739, %rd740;
	shf.l.wrap.b32 	%r544, %r538, %r539, 25;
	shf.l.wrap.b32 	%r545, %r539, %r538, 25;
	mov.b64 	%rd742, {%r545, %r544};
	xor.b64  	%rd743, %rd741, %rd742;
	and.b64  	%rd744, %rd724, %rd699;
	xor.b64  	%rd745, %rd724, %rd699;
	and.b64  	%rd746, %rd745, %rd674;
	or.b64  	%rd747, %rd746, %rd744;
	add.s64 	%rd748, %rd743, %rd747;
	add.s64 	%rd749, %rd748, %rd737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r546,%dummy}, %rd738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r547}, %rd738;
	}
	shf.r.wrap.b32 	%r548, %r547, %r546, 14;
	shf.r.wrap.b32 	%r549, %r546, %r547, 14;
	mov.b64 	%rd750, {%r549, %r548};
	shf.r.wrap.b32 	%r550, %r547, %r546, 18;
	shf.r.wrap.b32 	%r551, %r546, %r547, 18;
	mov.b64 	%rd751, {%r551, %r550};
	xor.b64  	%rd752, %rd750, %rd751;
	shf.l.wrap.b32 	%r552, %r546, %r547, 23;
	shf.l.wrap.b32 	%r553, %r547, %r546, 23;
	mov.b64 	%rd753, {%r553, %r552};
	xor.b64  	%rd754, %rd752, %rd753;
	xor.b64  	%rd755, %rd713, %rd688;
	and.b64  	%rd756, %rd738, %rd755;
	xor.b64  	%rd757, %rd756, %rd688;
	add.s64 	%rd758, %rd663, %rd1104;
	ld.const.u64 	%rd759, [%rd1095+160];
	add.s64 	%rd760, %rd758, %rd759;
	add.s64 	%rd761, %rd760, %rd757;
	add.s64 	%rd762, %rd761, %rd754;
	add.s64 	%rd763, %rd762, %rd674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r554,%dummy}, %rd749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r555}, %rd749;
	}
	shf.r.wrap.b32 	%r556, %r555, %r554, 28;
	shf.r.wrap.b32 	%r557, %r554, %r555, 28;
	mov.b64 	%rd764, {%r557, %r556};
	shf.l.wrap.b32 	%r558, %r554, %r555, 30;
	shf.l.wrap.b32 	%r559, %r555, %r554, 30;
	mov.b64 	%rd765, {%r559, %r558};
	xor.b64  	%rd766, %rd764, %rd765;
	shf.l.wrap.b32 	%r560, %r554, %r555, 25;
	shf.l.wrap.b32 	%r561, %r555, %r554, 25;
	mov.b64 	%rd767, {%r561, %r560};
	xor.b64  	%rd768, %rd766, %rd767;
	and.b64  	%rd769, %rd749, %rd724;
	xor.b64  	%rd770, %rd749, %rd724;
	and.b64  	%rd771, %rd770, %rd699;
	or.b64  	%rd772, %rd771, %rd769;
	add.s64 	%rd773, %rd768, %rd772;
	add.s64 	%rd774, %rd773, %rd762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r562,%dummy}, %rd763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r563}, %rd763;
	}
	shf.r.wrap.b32 	%r564, %r563, %r562, 14;
	shf.r.wrap.b32 	%r565, %r562, %r563, 14;
	mov.b64 	%rd775, {%r565, %r564};
	shf.r.wrap.b32 	%r566, %r563, %r562, 18;
	shf.r.wrap.b32 	%r567, %r562, %r563, 18;
	mov.b64 	%rd776, {%r567, %r566};
	xor.b64  	%rd777, %rd775, %rd776;
	shf.l.wrap.b32 	%r568, %r562, %r563, 23;
	shf.l.wrap.b32 	%r569, %r563, %r562, 23;
	mov.b64 	%rd778, {%r569, %r568};
	xor.b64  	%rd779, %rd777, %rd778;
	xor.b64  	%rd780, %rd738, %rd713;
	and.b64  	%rd781, %rd763, %rd780;
	xor.b64  	%rd782, %rd781, %rd713;
	ld.const.u64 	%rd783, [%rd1095+168];
	add.s64 	%rd784, %rd783, %rd1105;
	add.s64 	%rd785, %rd784, %rd688;
	add.s64 	%rd786, %rd785, %rd782;
	add.s64 	%rd787, %rd786, %rd779;
	add.s64 	%rd788, %rd787, %rd699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r570,%dummy}, %rd774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r571}, %rd774;
	}
	shf.r.wrap.b32 	%r572, %r571, %r570, 28;
	shf.r.wrap.b32 	%r573, %r570, %r571, 28;
	mov.b64 	%rd789, {%r573, %r572};
	shf.l.wrap.b32 	%r574, %r570, %r571, 30;
	shf.l.wrap.b32 	%r575, %r571, %r570, 30;
	mov.b64 	%rd790, {%r575, %r574};
	xor.b64  	%rd791, %rd789, %rd790;
	shf.l.wrap.b32 	%r576, %r570, %r571, 25;
	shf.l.wrap.b32 	%r577, %r571, %r570, 25;
	mov.b64 	%rd792, {%r577, %r576};
	xor.b64  	%rd793, %rd791, %rd792;
	and.b64  	%rd794, %rd774, %rd749;
	xor.b64  	%rd795, %rd774, %rd749;
	and.b64  	%rd796, %rd795, %rd724;
	or.b64  	%rd797, %rd796, %rd794;
	add.s64 	%rd798, %rd793, %rd797;
	add.s64 	%rd799, %rd798, %rd787;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r578,%dummy}, %rd788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r579}, %rd788;
	}
	shf.r.wrap.b32 	%r580, %r579, %r578, 14;
	shf.r.wrap.b32 	%r581, %r578, %r579, 14;
	mov.b64 	%rd800, {%r581, %r580};
	shf.r.wrap.b32 	%r582, %r579, %r578, 18;
	shf.r.wrap.b32 	%r583, %r578, %r579, 18;
	mov.b64 	%rd801, {%r583, %r582};
	xor.b64  	%rd802, %rd800, %rd801;
	shf.l.wrap.b32 	%r584, %r578, %r579, 23;
	shf.l.wrap.b32 	%r585, %r579, %r578, 23;
	mov.b64 	%rd803, {%r585, %r584};
	xor.b64  	%rd804, %rd802, %rd803;
	xor.b64  	%rd805, %rd763, %rd738;
	and.b64  	%rd806, %rd788, %rd805;
	xor.b64  	%rd807, %rd806, %rd738;
	ld.const.u64 	%rd808, [%rd1095+176];
	add.s64 	%rd809, %rd808, %rd1106;
	add.s64 	%rd810, %rd809, %rd713;
	add.s64 	%rd811, %rd810, %rd807;
	add.s64 	%rd812, %rd811, %rd804;
	add.s64 	%rd813, %rd812, %rd724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r586,%dummy}, %rd799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r587}, %rd799;
	}
	shf.r.wrap.b32 	%r588, %r587, %r586, 28;
	shf.r.wrap.b32 	%r589, %r586, %r587, 28;
	mov.b64 	%rd814, {%r589, %r588};
	shf.l.wrap.b32 	%r590, %r586, %r587, 30;
	shf.l.wrap.b32 	%r591, %r587, %r586, 30;
	mov.b64 	%rd815, {%r591, %r590};
	xor.b64  	%rd816, %rd814, %rd815;
	shf.l.wrap.b32 	%r592, %r586, %r587, 25;
	shf.l.wrap.b32 	%r593, %r587, %r586, 25;
	mov.b64 	%rd817, {%r593, %r592};
	xor.b64  	%rd818, %rd816, %rd817;
	and.b64  	%rd819, %rd799, %rd774;
	xor.b64  	%rd820, %rd799, %rd774;
	and.b64  	%rd821, %rd820, %rd749;
	or.b64  	%rd822, %rd821, %rd819;
	add.s64 	%rd823, %rd818, %rd822;
	add.s64 	%rd824, %rd823, %rd812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r594,%dummy}, %rd813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r595}, %rd813;
	}
	shf.r.wrap.b32 	%r596, %r595, %r594, 14;
	shf.r.wrap.b32 	%r597, %r594, %r595, 14;
	mov.b64 	%rd825, {%r597, %r596};
	shf.r.wrap.b32 	%r598, %r595, %r594, 18;
	shf.r.wrap.b32 	%r599, %r594, %r595, 18;
	mov.b64 	%rd826, {%r599, %r598};
	xor.b64  	%rd827, %rd825, %rd826;
	shf.l.wrap.b32 	%r600, %r594, %r595, 23;
	shf.l.wrap.b32 	%r601, %r595, %r594, 23;
	mov.b64 	%rd828, {%r601, %r600};
	xor.b64  	%rd829, %rd827, %rd828;
	xor.b64  	%rd830, %rd788, %rd763;
	and.b64  	%rd831, %rd813, %rd830;
	xor.b64  	%rd832, %rd831, %rd763;
	ld.const.u64 	%rd833, [%rd1095+184];
	add.s64 	%rd834, %rd833, %rd1107;
	add.s64 	%rd835, %rd834, %rd738;
	add.s64 	%rd836, %rd835, %rd832;
	add.s64 	%rd837, %rd836, %rd829;
	add.s64 	%rd838, %rd837, %rd749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r602,%dummy}, %rd824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r603}, %rd824;
	}
	shf.r.wrap.b32 	%r604, %r603, %r602, 28;
	shf.r.wrap.b32 	%r605, %r602, %r603, 28;
	mov.b64 	%rd839, {%r605, %r604};
	shf.l.wrap.b32 	%r606, %r602, %r603, 30;
	shf.l.wrap.b32 	%r607, %r603, %r602, 30;
	mov.b64 	%rd840, {%r607, %r606};
	xor.b64  	%rd841, %rd839, %rd840;
	shf.l.wrap.b32 	%r608, %r602, %r603, 25;
	shf.l.wrap.b32 	%r609, %r603, %r602, 25;
	mov.b64 	%rd842, {%r609, %r608};
	xor.b64  	%rd843, %rd841, %rd842;
	and.b64  	%rd844, %rd824, %rd799;
	xor.b64  	%rd845, %rd824, %rd799;
	and.b64  	%rd846, %rd845, %rd774;
	or.b64  	%rd847, %rd846, %rd844;
	add.s64 	%rd848, %rd843, %rd847;
	add.s64 	%rd849, %rd848, %rd837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r610,%dummy}, %rd838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r611}, %rd838;
	}
	shf.r.wrap.b32 	%r612, %r611, %r610, 14;
	shf.r.wrap.b32 	%r613, %r610, %r611, 14;
	mov.b64 	%rd850, {%r613, %r612};
	shf.r.wrap.b32 	%r614, %r611, %r610, 18;
	shf.r.wrap.b32 	%r615, %r610, %r611, 18;
	mov.b64 	%rd851, {%r615, %r614};
	xor.b64  	%rd852, %rd850, %rd851;
	shf.l.wrap.b32 	%r616, %r610, %r611, 23;
	shf.l.wrap.b32 	%r617, %r611, %r610, 23;
	mov.b64 	%rd853, {%r617, %r616};
	xor.b64  	%rd854, %rd852, %rd853;
	xor.b64  	%rd855, %rd813, %rd788;
	and.b64  	%rd856, %rd838, %rd855;
	xor.b64  	%rd857, %rd856, %rd788;
	ld.const.u64 	%rd858, [%rd1095+192];
	add.s64 	%rd859, %rd858, %rd1108;
	add.s64 	%rd860, %rd859, %rd763;
	add.s64 	%rd861, %rd860, %rd857;
	add.s64 	%rd862, %rd861, %rd854;
	add.s64 	%rd863, %rd862, %rd774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r618,%dummy}, %rd849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r619}, %rd849;
	}
	shf.r.wrap.b32 	%r620, %r619, %r618, 28;
	shf.r.wrap.b32 	%r621, %r618, %r619, 28;
	mov.b64 	%rd864, {%r621, %r620};
	shf.l.wrap.b32 	%r622, %r618, %r619, 30;
	shf.l.wrap.b32 	%r623, %r619, %r618, 30;
	mov.b64 	%rd865, {%r623, %r622};
	xor.b64  	%rd866, %rd864, %rd865;
	shf.l.wrap.b32 	%r624, %r618, %r619, 25;
	shf.l.wrap.b32 	%r625, %r619, %r618, 25;
	mov.b64 	%rd867, {%r625, %r624};
	xor.b64  	%rd868, %rd866, %rd867;
	and.b64  	%rd869, %rd849, %rd824;
	xor.b64  	%rd870, %rd849, %rd824;
	and.b64  	%rd871, %rd870, %rd799;
	or.b64  	%rd872, %rd871, %rd869;
	add.s64 	%rd873, %rd868, %rd872;
	add.s64 	%rd874, %rd873, %rd862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r626,%dummy}, %rd863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r627}, %rd863;
	}
	shf.r.wrap.b32 	%r628, %r627, %r626, 14;
	shf.r.wrap.b32 	%r629, %r626, %r627, 14;
	mov.b64 	%rd875, {%r629, %r628};
	shf.r.wrap.b32 	%r630, %r627, %r626, 18;
	shf.r.wrap.b32 	%r631, %r626, %r627, 18;
	mov.b64 	%rd876, {%r631, %r630};
	xor.b64  	%rd877, %rd875, %rd876;
	shf.l.wrap.b32 	%r632, %r626, %r627, 23;
	shf.l.wrap.b32 	%r633, %r627, %r626, 23;
	mov.b64 	%rd878, {%r633, %r632};
	xor.b64  	%rd879, %rd877, %rd878;
	xor.b64  	%rd880, %rd838, %rd813;
	and.b64  	%rd881, %rd863, %rd880;
	xor.b64  	%rd882, %rd881, %rd813;
	ld.const.u64 	%rd883, [%rd1095+200];
	add.s64 	%rd884, %rd883, %rd1109;
	add.s64 	%rd885, %rd884, %rd788;
	add.s64 	%rd886, %rd885, %rd882;
	add.s64 	%rd887, %rd886, %rd879;
	add.s64 	%rd888, %rd887, %rd799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r634,%dummy}, %rd874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r635}, %rd874;
	}
	shf.r.wrap.b32 	%r636, %r635, %r634, 28;
	shf.r.wrap.b32 	%r637, %r634, %r635, 28;
	mov.b64 	%rd889, {%r637, %r636};
	shf.l.wrap.b32 	%r638, %r634, %r635, 30;
	shf.l.wrap.b32 	%r639, %r635, %r634, 30;
	mov.b64 	%rd890, {%r639, %r638};
	xor.b64  	%rd891, %rd889, %rd890;
	shf.l.wrap.b32 	%r640, %r634, %r635, 25;
	shf.l.wrap.b32 	%r641, %r635, %r634, 25;
	mov.b64 	%rd892, {%r641, %r640};
	xor.b64  	%rd893, %rd891, %rd892;
	and.b64  	%rd894, %rd874, %rd849;
	xor.b64  	%rd895, %rd874, %rd849;
	and.b64  	%rd896, %rd895, %rd824;
	or.b64  	%rd897, %rd896, %rd894;
	add.s64 	%rd898, %rd893, %rd897;
	add.s64 	%rd899, %rd898, %rd887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r642,%dummy}, %rd888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r643}, %rd888;
	}
	shf.r.wrap.b32 	%r644, %r643, %r642, 14;
	shf.r.wrap.b32 	%r645, %r642, %r643, 14;
	mov.b64 	%rd900, {%r645, %r644};
	shf.r.wrap.b32 	%r646, %r643, %r642, 18;
	shf.r.wrap.b32 	%r647, %r642, %r643, 18;
	mov.b64 	%rd901, {%r647, %r646};
	xor.b64  	%rd902, %rd900, %rd901;
	shf.l.wrap.b32 	%r648, %r642, %r643, 23;
	shf.l.wrap.b32 	%r649, %r643, %r642, 23;
	mov.b64 	%rd903, {%r649, %r648};
	xor.b64  	%rd904, %rd902, %rd903;
	xor.b64  	%rd905, %rd863, %rd838;
	and.b64  	%rd906, %rd888, %rd905;
	xor.b64  	%rd907, %rd906, %rd838;
	ld.const.u64 	%rd908, [%rd1095+208];
	add.s64 	%rd909, %rd908, %rd1110;
	add.s64 	%rd910, %rd909, %rd813;
	add.s64 	%rd911, %rd910, %rd907;
	add.s64 	%rd912, %rd911, %rd904;
	add.s64 	%rd913, %rd912, %rd824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r650,%dummy}, %rd899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r651}, %rd899;
	}
	shf.r.wrap.b32 	%r652, %r651, %r650, 28;
	shf.r.wrap.b32 	%r653, %r650, %r651, 28;
	mov.b64 	%rd914, {%r653, %r652};
	shf.l.wrap.b32 	%r654, %r650, %r651, 30;
	shf.l.wrap.b32 	%r655, %r651, %r650, 30;
	mov.b64 	%rd915, {%r655, %r654};
	xor.b64  	%rd916, %rd914, %rd915;
	shf.l.wrap.b32 	%r656, %r650, %r651, 25;
	shf.l.wrap.b32 	%r657, %r651, %r650, 25;
	mov.b64 	%rd917, {%r657, %r656};
	xor.b64  	%rd918, %rd916, %rd917;
	and.b64  	%rd919, %rd899, %rd874;
	xor.b64  	%rd920, %rd899, %rd874;
	and.b64  	%rd921, %rd920, %rd849;
	or.b64  	%rd922, %rd921, %rd919;
	add.s64 	%rd923, %rd918, %rd922;
	add.s64 	%rd924, %rd923, %rd912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r658,%dummy}, %rd913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r659}, %rd913;
	}
	shf.r.wrap.b32 	%r660, %r659, %r658, 14;
	shf.r.wrap.b32 	%r661, %r658, %r659, 14;
	mov.b64 	%rd925, {%r661, %r660};
	shf.r.wrap.b32 	%r662, %r659, %r658, 18;
	shf.r.wrap.b32 	%r663, %r658, %r659, 18;
	mov.b64 	%rd926, {%r663, %r662};
	xor.b64  	%rd927, %rd925, %rd926;
	shf.l.wrap.b32 	%r664, %r658, %r659, 23;
	shf.l.wrap.b32 	%r665, %r659, %r658, 23;
	mov.b64 	%rd928, {%r665, %r664};
	xor.b64  	%rd929, %rd927, %rd928;
	xor.b64  	%rd930, %rd888, %rd863;
	and.b64  	%rd931, %rd913, %rd930;
	xor.b64  	%rd932, %rd931, %rd863;
	ld.const.u64 	%rd933, [%rd1095+216];
	add.s64 	%rd934, %rd933, %rd1111;
	add.s64 	%rd935, %rd934, %rd838;
	add.s64 	%rd936, %rd935, %rd932;
	add.s64 	%rd937, %rd936, %rd929;
	add.s64 	%rd938, %rd937, %rd849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r666,%dummy}, %rd924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r667}, %rd924;
	}
	shf.r.wrap.b32 	%r668, %r667, %r666, 28;
	shf.r.wrap.b32 	%r669, %r666, %r667, 28;
	mov.b64 	%rd939, {%r669, %r668};
	shf.l.wrap.b32 	%r670, %r666, %r667, 30;
	shf.l.wrap.b32 	%r671, %r667, %r666, 30;
	mov.b64 	%rd940, {%r671, %r670};
	xor.b64  	%rd941, %rd939, %rd940;
	shf.l.wrap.b32 	%r672, %r666, %r667, 25;
	shf.l.wrap.b32 	%r673, %r667, %r666, 25;
	mov.b64 	%rd942, {%r673, %r672};
	xor.b64  	%rd943, %rd941, %rd942;
	and.b64  	%rd944, %rd924, %rd899;
	xor.b64  	%rd945, %rd924, %rd899;
	and.b64  	%rd946, %rd945, %rd874;
	or.b64  	%rd947, %rd946, %rd944;
	add.s64 	%rd948, %rd943, %rd947;
	add.s64 	%rd949, %rd948, %rd937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r674,%dummy}, %rd938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r675}, %rd938;
	}
	shf.r.wrap.b32 	%r676, %r675, %r674, 14;
	shf.r.wrap.b32 	%r677, %r674, %r675, 14;
	mov.b64 	%rd950, {%r677, %r676};
	shf.r.wrap.b32 	%r678, %r675, %r674, 18;
	shf.r.wrap.b32 	%r679, %r674, %r675, 18;
	mov.b64 	%rd951, {%r679, %r678};
	xor.b64  	%rd952, %rd950, %rd951;
	shf.l.wrap.b32 	%r680, %r674, %r675, 23;
	shf.l.wrap.b32 	%r681, %r675, %r674, 23;
	mov.b64 	%rd953, {%r681, %r680};
	xor.b64  	%rd954, %rd952, %rd953;
	xor.b64  	%rd955, %rd913, %rd888;
	and.b64  	%rd956, %rd938, %rd955;
	xor.b64  	%rd957, %rd956, %rd888;
	ld.const.u64 	%rd958, [%rd1095+224];
	add.s64 	%rd959, %rd958, %rd1112;
	add.s64 	%rd960, %rd959, %rd863;
	add.s64 	%rd961, %rd960, %rd957;
	add.s64 	%rd962, %rd961, %rd954;
	add.s64 	%rd1096, %rd962, %rd874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r682,%dummy}, %rd949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r683}, %rd949;
	}
	shf.r.wrap.b32 	%r684, %r683, %r682, 28;
	shf.r.wrap.b32 	%r685, %r682, %r683, 28;
	mov.b64 	%rd963, {%r685, %r684};
	shf.l.wrap.b32 	%r686, %r682, %r683, 30;
	shf.l.wrap.b32 	%r687, %r683, %r682, 30;
	mov.b64 	%rd964, {%r687, %r686};
	xor.b64  	%rd965, %rd963, %rd964;
	shf.l.wrap.b32 	%r688, %r682, %r683, 25;
	shf.l.wrap.b32 	%r689, %r683, %r682, 25;
	mov.b64 	%rd966, {%r689, %r688};
	xor.b64  	%rd967, %rd965, %rd966;
	and.b64  	%rd968, %rd949, %rd924;
	xor.b64  	%rd969, %rd949, %rd924;
	and.b64  	%rd970, %rd969, %rd899;
	or.b64  	%rd971, %rd970, %rd968;
	add.s64 	%rd972, %rd967, %rd971;
	add.s64 	%rd1119, %rd972, %rd962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r690,%dummy}, %rd1096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r691}, %rd1096;
	}
	shf.r.wrap.b32 	%r692, %r691, %r690, 14;
	shf.r.wrap.b32 	%r693, %r690, %r691, 14;
	mov.b64 	%rd973, {%r693, %r692};
	shf.r.wrap.b32 	%r694, %r691, %r690, 18;
	shf.r.wrap.b32 	%r695, %r690, %r691, 18;
	mov.b64 	%rd974, {%r695, %r694};
	xor.b64  	%rd975, %rd973, %rd974;
	shf.l.wrap.b32 	%r696, %r690, %r691, 23;
	shf.l.wrap.b32 	%r697, %r691, %r690, 23;
	mov.b64 	%rd976, {%r697, %r696};
	xor.b64  	%rd977, %rd975, %rd976;
	xor.b64  	%rd978, %rd938, %rd913;
	and.b64  	%rd979, %rd1096, %rd978;
	xor.b64  	%rd980, %rd979, %rd913;
	ld.const.u64 	%rd981, [%rd1095+232];
	add.s64 	%rd982, %rd981, %rd1113;
	add.s64 	%rd983, %rd982, %rd888;
	add.s64 	%rd984, %rd983, %rd980;
	add.s64 	%rd985, %rd984, %rd977;
	add.s64 	%rd1097, %rd985, %rd899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r698,%dummy}, %rd1119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r699}, %rd1119;
	}
	shf.r.wrap.b32 	%r700, %r699, %r698, 28;
	shf.r.wrap.b32 	%r701, %r698, %r699, 28;
	mov.b64 	%rd986, {%r701, %r700};
	shf.l.wrap.b32 	%r702, %r698, %r699, 30;
	shf.l.wrap.b32 	%r703, %r699, %r698, 30;
	mov.b64 	%rd987, {%r703, %r702};
	xor.b64  	%rd988, %rd986, %rd987;
	shf.l.wrap.b32 	%r704, %r698, %r699, 25;
	shf.l.wrap.b32 	%r705, %r699, %r698, 25;
	mov.b64 	%rd989, {%r705, %r704};
	xor.b64  	%rd990, %rd988, %rd989;
	and.b64  	%rd991, %rd1119, %rd949;
	xor.b64  	%rd992, %rd1119, %rd949;
	and.b64  	%rd993, %rd992, %rd924;
	or.b64  	%rd994, %rd993, %rd991;
	add.s64 	%rd995, %rd990, %rd994;
	add.s64 	%rd1118, %rd995, %rd985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r706,%dummy}, %rd1097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r707}, %rd1097;
	}
	shf.r.wrap.b32 	%r708, %r707, %r706, 14;
	shf.r.wrap.b32 	%r709, %r706, %r707, 14;
	mov.b64 	%rd996, {%r709, %r708};
	shf.r.wrap.b32 	%r710, %r707, %r706, 18;
	shf.r.wrap.b32 	%r711, %r706, %r707, 18;
	mov.b64 	%rd997, {%r711, %r710};
	xor.b64  	%rd998, %rd996, %rd997;
	shf.l.wrap.b32 	%r712, %r706, %r707, 23;
	shf.l.wrap.b32 	%r713, %r707, %r706, 23;
	mov.b64 	%rd999, {%r713, %r712};
	xor.b64  	%rd1000, %rd998, %rd999;
	xor.b64  	%rd1001, %rd1096, %rd938;
	and.b64  	%rd1002, %rd1097, %rd1001;
	xor.b64  	%rd1003, %rd1002, %rd938;
	ld.const.u64 	%rd1004, [%rd1095+240];
	add.s64 	%rd1005, %rd1004, %rd1114;
	add.s64 	%rd1006, %rd1005, %rd913;
	add.s64 	%rd1007, %rd1006, %rd1003;
	add.s64 	%rd1008, %rd1007, %rd1000;
	add.s64 	%rd1098, %rd1008, %rd924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r714,%dummy}, %rd1118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r715}, %rd1118;
	}
	shf.r.wrap.b32 	%r716, %r715, %r714, 28;
	shf.r.wrap.b32 	%r717, %r714, %r715, 28;
	mov.b64 	%rd1009, {%r717, %r716};
	shf.l.wrap.b32 	%r718, %r714, %r715, 30;
	shf.l.wrap.b32 	%r719, %r715, %r714, 30;
	mov.b64 	%rd1010, {%r719, %r718};
	xor.b64  	%rd1011, %rd1009, %rd1010;
	shf.l.wrap.b32 	%r720, %r714, %r715, 25;
	shf.l.wrap.b32 	%r721, %r715, %r714, 25;
	mov.b64 	%rd1012, {%r721, %r720};
	xor.b64  	%rd1013, %rd1011, %rd1012;
	and.b64  	%rd1014, %rd1118, %rd1119;
	xor.b64  	%rd1015, %rd1118, %rd1119;
	and.b64  	%rd1016, %rd1015, %rd949;
	or.b64  	%rd1017, %rd1016, %rd1014;
	add.s64 	%rd1018, %rd1013, %rd1017;
	add.s64 	%rd1117, %rd1018, %rd1008;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r722,%dummy}, %rd1098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r723}, %rd1098;
	}
	shf.r.wrap.b32 	%r724, %r723, %r722, 14;
	shf.r.wrap.b32 	%r725, %r722, %r723, 14;
	mov.b64 	%rd1019, {%r725, %r724};
	shf.r.wrap.b32 	%r726, %r723, %r722, 18;
	shf.r.wrap.b32 	%r727, %r722, %r723, 18;
	mov.b64 	%rd1020, {%r727, %r726};
	xor.b64  	%rd1021, %rd1019, %rd1020;
	shf.l.wrap.b32 	%r728, %r722, %r723, 23;
	shf.l.wrap.b32 	%r729, %r723, %r722, 23;
	mov.b64 	%rd1022, {%r729, %r728};
	xor.b64  	%rd1023, %rd1021, %rd1022;
	xor.b64  	%rd1024, %rd1097, %rd1096;
	and.b64  	%rd1025, %rd1098, %rd1024;
	xor.b64  	%rd1026, %rd1025, %rd1096;
	ld.const.u64 	%rd1027, [%rd1095+248];
	add.s64 	%rd1028, %rd1027, %rd1115;
	add.s64 	%rd1029, %rd1028, %rd938;
	add.s64 	%rd1030, %rd1029, %rd1026;
	add.s64 	%rd1031, %rd1030, %rd1023;
	add.s64 	%rd1099, %rd1031, %rd949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r730,%dummy}, %rd1117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r731}, %rd1117;
	}
	shf.r.wrap.b32 	%r732, %r731, %r730, 28;
	shf.r.wrap.b32 	%r733, %r730, %r731, 28;
	mov.b64 	%rd1032, {%r733, %r732};
	shf.l.wrap.b32 	%r734, %r730, %r731, 30;
	shf.l.wrap.b32 	%r735, %r731, %r730, 30;
	mov.b64 	%rd1033, {%r735, %r734};
	xor.b64  	%rd1034, %rd1032, %rd1033;
	shf.l.wrap.b32 	%r736, %r730, %r731, 25;
	shf.l.wrap.b32 	%r737, %r731, %r730, 25;
	mov.b64 	%rd1035, {%r737, %r736};
	xor.b64  	%rd1036, %rd1034, %rd1035;
	and.b64  	%rd1037, %rd1117, %rd1118;
	xor.b64  	%rd1038, %rd1117, %rd1118;
	and.b64  	%rd1039, %rd1038, %rd1119;
	or.b64  	%rd1040, %rd1039, %rd1037;
	add.s64 	%rd1041, %rd1036, %rd1040;
	add.s64 	%rd1116, %rd1041, %rd1031;
	add.s32 	%r800, %r800, 16;
	setp.lt.s32	%p3, %r800, 80;
	mov.u64 	%rd1095, %rd81;
	@%p3 bra 	BB1_4;

	ld.param.u64 	%rd1071, [m01700_m08_param_6];
	mov.b64	{%r9, %r10}, %rd1096;
	mov.u32 	%r738, 1;
	mov.b64	{%r11, %r12}, %rd1119;
	shr.u32 	%r739, %r9, %r4;
	and.b32  	%r740, %r739, %r33;
	mul.wide.u32 	%rd1042, %r740, 4;
	add.s64 	%rd1043, %rd1071, %rd1042;
	and.b32  	%r741, %r9, 31;
	shl.b32 	%r13, %r738, %r741;
	ld.global.u32 	%r742, [%rd1043];
	and.b32  	%r743, %r742, %r13;
	setp.eq.s32	%p4, %r743, 0;
	@%p4 bra 	BB1_32;

	ld.param.u64 	%rd1072, [m01700_m08_param_7];
	shr.u32 	%r744, %r10, %r4;
	and.b32  	%r745, %r744, %r33;
	mul.wide.u32 	%rd1044, %r745, 4;
	add.s64 	%rd1045, %rd1072, %rd1044;
	and.b32  	%r746, %r10, 31;
	shl.b32 	%r14, %r738, %r746;
	ld.global.u32 	%r748, [%rd1045];
	and.b32  	%r749, %r748, %r14;
	setp.eq.s32	%p5, %r749, 0;
	@%p5 bra 	BB1_32;

	ld.param.u64 	%rd1085, [m01700_m08_param_8];
	shr.u32 	%r750, %r11, %r4;
	and.b32  	%r751, %r750, %r33;
	mul.wide.u32 	%rd1046, %r751, 4;
	add.s64 	%rd1047, %rd1085, %rd1046;
	and.b32  	%r752, %r11, 31;
	shl.b32 	%r15, %r738, %r752;
	ld.global.u32 	%r754, [%rd1047];
	and.b32  	%r755, %r754, %r15;
	setp.eq.s32	%p6, %r755, 0;
	@%p6 bra 	BB1_32;

	ld.param.u64 	%rd1086, [m01700_m08_param_9];
	shr.u32 	%r756, %r12, %r4;
	and.b32  	%r757, %r756, %r33;
	mul.wide.u32 	%rd1048, %r757, 4;
	add.s64 	%rd1049, %rd1086, %rd1048;
	and.b32  	%r758, %r12, 31;
	shl.b32 	%r16, %r738, %r758;
	ld.global.u32 	%r760, [%rd1049];
	and.b32  	%r761, %r760, %r16;
	setp.eq.s32	%p7, %r761, 0;
	@%p7 bra 	BB1_32;

	ld.param.u64 	%rd1087, [m01700_m08_param_10];
	shr.u32 	%r762, %r9, %r5;
	and.b32  	%r763, %r762, %r33;
	mul.wide.u32 	%rd1050, %r763, 4;
	add.s64 	%rd1051, %rd1087, %rd1050;
	ld.global.u32 	%r764, [%rd1051];
	and.b32  	%r765, %r764, %r13;
	setp.eq.s32	%p8, %r765, 0;
	@%p8 bra 	BB1_32;

	ld.param.u64 	%rd1088, [m01700_m08_param_11];
	shr.u32 	%r766, %r10, %r5;
	and.b32  	%r767, %r766, %r33;
	mul.wide.u32 	%rd1052, %r767, 4;
	add.s64 	%rd1053, %rd1088, %rd1052;
	ld.global.u32 	%r768, [%rd1053];
	and.b32  	%r769, %r768, %r14;
	setp.eq.s32	%p9, %r769, 0;
	@%p9 bra 	BB1_32;

	ld.param.u64 	%rd1089, [m01700_m08_param_12];
	shr.u32 	%r770, %r11, %r5;
	and.b32  	%r771, %r770, %r33;
	mul.wide.u32 	%rd1054, %r771, 4;
	add.s64 	%rd1055, %rd1089, %rd1054;
	ld.global.u32 	%r772, [%rd1055];
	and.b32  	%r773, %r772, %r15;
	setp.eq.s32	%p10, %r773, 0;
	@%p10 bra 	BB1_32;

	ld.param.u64 	%rd1090, [m01700_m08_param_13];
	shr.u32 	%r774, %r12, %r5;
	and.b32  	%r775, %r774, %r33;
	mul.wide.u32 	%rd1056, %r775, 4;
	add.s64 	%rd1057, %rd1090, %rd1056;
	ld.global.u32 	%r776, [%rd1057];
	and.b32  	%r777, %r776, %r16;
	setp.eq.s32	%p11, %r777, 0;
	@%p11 bra 	BB1_32;

	setp.eq.s32	%p12, %r38, 0;
	mov.u32 	%r802, 0;
	mov.u32 	%r778, -1;
	mov.u32 	%r801, %r38;
	@%p12 bra 	BB1_26;

BB1_14:
	ld.param.u64 	%rd1091, [m01700_m08_param_15];
	shr.u32 	%r19, %r801, 1;
	add.s32 	%r804, %r19, %r802;
	cvt.u64.u32	%rd1058, %r804;
	add.s64 	%rd82, %rd1058, %rd22;
	shl.b64 	%rd1059, %rd82, 6;
	add.s64 	%rd1060, %rd1091, %rd1059;
	ld.global.u32 	%r21, [%rd1060+28];
	setp.gt.u32	%p13, %r12, %r21;
	mov.u32 	%r803, %r738;
	@%p13 bra 	BB1_24;

	setp.lt.u32	%p14, %r12, %r21;
	mov.u32 	%r781, -1;
	@%p14 bra 	BB1_16;
	bra.uni 	BB1_17;

BB1_16:
	mov.u32 	%r803, %r781;
	bra.uni 	BB1_24;

BB1_17:
	ld.global.u32 	%r22, [%rd1060+24];
	setp.gt.u32	%p15, %r11, %r22;
	mov.u32 	%r803, %r738;
	@%p15 bra 	BB1_24;

	setp.lt.u32	%p16, %r11, %r22;
	@%p16 bra 	BB1_19;
	bra.uni 	BB1_20;

BB1_19:
	mov.u32 	%r803, %r781;
	bra.uni 	BB1_24;

BB1_20:
	ld.global.u32 	%r23, [%rd1060+60];
	setp.gt.u32	%p17, %r10, %r23;
	mov.u32 	%r803, %r738;
	@%p17 bra 	BB1_24;

	setp.lt.u32	%p18, %r10, %r23;
	mov.u32 	%r803, %r781;
	@%p18 bra 	BB1_24;

	ld.global.u32 	%r24, [%rd1060+56];
	setp.gt.u32	%p19, %r9, %r24;
	mov.u32 	%r803, %r738;
	@%p19 bra 	BB1_24;

	setp.lt.u32	%p20, %r9, %r24;
	selp.b32	%r803, -1, 0, %p20;

BB1_24:
	add.s32 	%r787, %r19, 1;
	setp.gt.s32	%p21, %r803, 0;
	selp.b32	%r788, %r787, 0, %p21;
	add.s32 	%r802, %r788, %r802;
	selp.b32	%r789, -1, 0, %p21;
	add.s32 	%r790, %r789, %r801;
	shr.u32 	%r801, %r790, 1;
	setp.eq.s32	%p22, %r803, 0;
	@%p22 bra 	BB1_27;

	setp.ne.s32	%p23, %r801, 0;
	@%p23 bra 	BB1_14;

BB1_26:
	mov.u32 	%r804, %r778;

BB1_27:
	setp.eq.s32	%p24, %r804, -1;
	@%p24 bra 	BB1_32;

	ld.param.u64 	%rd1092, [m01700_m08_param_16];
	ld.param.u32 	%r795, [m01700_m08_param_32];
	add.s32 	%r30, %r804, %r795;
	mul.wide.u32 	%rd1067, %r30, 4;
	add.s64 	%rd1068, %rd1092, %rd1067;
	atom.global.add.u32 	%r792, [%rd1068], 1;
	setp.ne.s32	%p25, %r792, 0;
	@%p25 bra 	BB1_32;

	atom.global.add.u32 	%r31, [%rd96], 1;
	setp.lt.u32	%p26, %r31, %r38;
	@%p26 bra 	BB1_31;
	bra.uni 	BB1_30;

BB1_31:
	ld.param.u32 	%r797, [m01700_m08_param_27];
	ld.param.u64 	%rd1093, [m01700_m08_param_14];
	mul.wide.u32 	%rd1069, %r31, 32;
	add.s64 	%rd1070, %rd1093, %rd1069;
	st.global.u32 	[%rd1070+12], %r797;
	st.global.u32 	[%rd1070+16], %r804;
	st.global.u32 	[%rd1070+20], %r30;
	st.global.u64 	[%rd1070], %rd1;
	st.global.u32 	[%rd1070+8], %r799;
	mov.u32 	%r794, 0;
	st.global.u32 	[%rd1070+24], %r794;
	st.global.u32 	[%rd1070+28], %r794;
	bra.uni 	BB1_32;

BB1_30:
	atom.global.add.u32 	%r793, [%rd96], -1;

BB1_32:
	ld.param.u32 	%r796, [m01700_m08_param_30];
	add.s32 	%r799, %r799, 1;
	setp.lt.u32	%p27, %r799, %r796;
	@%p27 bra 	BB1_3;

BB1_33:
	ret;
}

	// .globl	m01700_m16
.entry m01700_m16(
	.param .u64 .ptr .global .align 4 m01700_m16_param_0,
	.param .u64 .ptr .global .align 4 m01700_m16_param_1,
	.param .u64 .ptr .global .align 4 m01700_m16_param_2,
	.param .u64 .ptr .const .align 4 m01700_m16_param_3,
	.param .u64 .ptr .global .align 1 m01700_m16_param_4,
	.param .u64 .ptr .global .align 1 m01700_m16_param_5,
	.param .u64 .ptr .global .align 4 m01700_m16_param_6,
	.param .u64 .ptr .global .align 4 m01700_m16_param_7,
	.param .u64 .ptr .global .align 4 m01700_m16_param_8,
	.param .u64 .ptr .global .align 4 m01700_m16_param_9,
	.param .u64 .ptr .global .align 4 m01700_m16_param_10,
	.param .u64 .ptr .global .align 4 m01700_m16_param_11,
	.param .u64 .ptr .global .align 4 m01700_m16_param_12,
	.param .u64 .ptr .global .align 4 m01700_m16_param_13,
	.param .u64 .ptr .global .align 8 m01700_m16_param_14,
	.param .u64 .ptr .global .align 4 m01700_m16_param_15,
	.param .u64 .ptr .global .align 4 m01700_m16_param_16,
	.param .u64 .ptr .global .align 4 m01700_m16_param_17,
	.param .u64 .ptr .global .align 1 m01700_m16_param_18,
	.param .u64 .ptr .global .align 4 m01700_m16_param_19,
	.param .u64 .ptr .global .align 1 m01700_m16_param_20,
	.param .u64 .ptr .global .align 1 m01700_m16_param_21,
	.param .u64 .ptr .global .align 1 m01700_m16_param_22,
	.param .u64 .ptr .global .align 1 m01700_m16_param_23,
	.param .u32 m01700_m16_param_24,
	.param .u32 m01700_m16_param_25,
	.param .u32 m01700_m16_param_26,
	.param .u32 m01700_m16_param_27,
	.param .u32 m01700_m16_param_28,
	.param .u32 m01700_m16_param_29,
	.param .u32 m01700_m16_param_30,
	.param .u32 m01700_m16_param_31,
	.param .u32 m01700_m16_param_32,
	.param .u32 m01700_m16_param_33,
	.param .u64 m01700_m16_param_34
)
{
	.reg .pred 	%p<28>;
	.reg .b32 	%r<811>;
	.reg .b64 	%rd<1119>;


	ld.param.u64 	%rd86, [m01700_m16_param_0];
	ld.param.u64 	%rd99, [m01700_m16_param_19];
	ld.param.u32 	%r33, [m01700_m16_param_24];
	ld.param.u32 	%r34, [m01700_m16_param_25];
	ld.param.u32 	%r35, [m01700_m16_param_26];
	ld.param.u32 	%r37, [m01700_m16_param_30];
	ld.param.u32 	%r38, [m01700_m16_param_31];
	ld.param.u32 	%r39, [m01700_m16_param_32];
	ld.param.u64 	%rd100, [m01700_m16_param_34];
	mov.b32	%r40, %envreg3;
	mov.u32 	%r41, %ctaid.x;
	mov.u32 	%r42, %ntid.x;
	mad.lo.s32 	%r43, %r41, %r42, %r40;
	mov.u32 	%r44, %tid.x;
	add.s32 	%r1, %r43, %r44;
	cvt.s64.s32	%rd1, %r1;
	setp.ge.u64	%p1, %rd1, %rd100;
	@%p1 bra 	BB2_33;

	setp.eq.s32	%p2, %r37, 0;
	@%p2 bra 	BB2_33;

	mul.wide.s32 	%rd101, %r1, 260;
	add.s64 	%rd102, %rd86, %rd101;
	ld.global.u32 	%r2, [%rd102];
	ld.global.u32 	%r3, [%rd102+4];
	ld.global.u32 	%r46, [%rd102+8];
	ld.global.u32 	%r47, [%rd102+12];
	mov.u32 	%r805, 0;
	mov.b64	%rd2, {%r47, %r46};
	ld.global.u32 	%r48, [%rd102+16];
	ld.global.u32 	%r49, [%rd102+20];
	mov.b64	%rd3, {%r49, %r48};
	ld.global.u32 	%r50, [%rd102+24];
	ld.global.u32 	%r51, [%rd102+28];
	mov.b64	%rd4, {%r51, %r50};
	ld.global.u32 	%r52, [%rd102+32];
	ld.global.u32 	%r53, [%rd102+36];
	mov.b64	%rd5, {%r53, %r52};
	ld.global.u32 	%r54, [%rd102+40];
	ld.global.u32 	%r55, [%rd102+44];
	mov.b64	%rd6, {%r55, %r54};
	ld.global.u32 	%r56, [%rd102+48];
	ld.global.u32 	%r57, [%rd102+52];
	mov.b64	%rd7, {%r57, %r56};
	ld.global.u32 	%r58, [%rd102+56];
	ld.global.u32 	%r59, [%rd102+60];
	mov.b64	%rd8, {%r59, %r58};
	ld.const.u64 	%rd103, [k_sha512];
	add.s64 	%rd9, %rd103, -1150475826592481981;
	ld.const.u64 	%rd104, [k_sha512+8];
	add.s64 	%rd105, %rd2, %rd104;
	add.s64 	%rd10, %rd105, 2270897969802886507;
	ld.const.u64 	%rd106, [k_sha512+16];
	add.s64 	%rd107, %rd3, %rd106;
	add.s64 	%rd11, %rd107, -7276294671716946913;
	ld.const.u64 	%rd108, [k_sha512+24];
	add.s64 	%rd109, %rd4, %rd108;
	add.s64 	%rd12, %rd109, 5840696475078001361;
	ld.const.u64 	%rd110, [k_sha512+32];
	add.s64 	%rd13, %rd110, %rd5;
	ld.const.u64 	%rd111, [k_sha512+40];
	add.s64 	%rd14, %rd111, %rd6;
	ld.const.u64 	%rd112, [k_sha512+48];
	add.s64 	%rd15, %rd112, %rd7;
	ld.const.u64 	%rd113, [k_sha512+120];
	add.s64 	%rd24, %rd113, %rd8;
	and.b32  	%r4, %r34, 31;
	and.b32  	%r5, %r35, 31;
	cvt.u64.u32	%rd25, %r39;

BB2_3:
	ld.const.u64 	%rd1085, [k_sha512+112];
	ld.const.u64 	%rd1084, [k_sha512+104];
	ld.const.u64 	%rd1083, [k_sha512+96];
	ld.const.u64 	%rd1082, [k_sha512+88];
	ld.const.u64 	%rd1081, [k_sha512+80];
	ld.const.u64 	%rd1080, [k_sha512+72];
	ld.const.u64 	%rd1079, [k_sha512+64];
	ld.const.u64 	%rd1078, [k_sha512+56];
	ld.param.u64 	%rd1077, [m01700_m16_param_3];
	mul.wide.u32 	%rd123, %r805, 4;
	add.s64 	%rd124, %rd1077, %rd123;
	ld.const.u32 	%r61, [%rd124];
	or.b32  	%r62, %r61, %r2;
	mov.b64	%rd1099, {%r3, %r62};
	add.s64 	%rd125, %rd9, %rd1099;
	add.s64 	%rd126, %rd125, -4263291710961585108;
	add.s64 	%rd127, %rd125, 7114151716102877840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r63,%dummy}, %rd126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r64}, %rd126;
	}
	shf.r.wrap.b32 	%r65, %r64, %r63, 14;
	shf.r.wrap.b32 	%r66, %r63, %r64, 14;
	mov.b64 	%rd128, {%r66, %r65};
	shf.r.wrap.b32 	%r67, %r64, %r63, 18;
	shf.r.wrap.b32 	%r68, %r63, %r64, 18;
	mov.b64 	%rd129, {%r68, %r67};
	xor.b64  	%rd130, %rd128, %rd129;
	shf.l.wrap.b32 	%r69, %r63, %r64, 23;
	shf.l.wrap.b32 	%r70, %r64, %r63, 23;
	mov.b64 	%rd131, {%r70, %r69};
	xor.b64  	%rd132, %rd130, %rd131;
	and.b64  	%rd133, %rd126, -3887949035690463538;
	xor.b64  	%rd134, %rd133, -7276294671716946913;
	add.s64 	%rd135, %rd10, %rd134;
	add.s64 	%rd136, %rd135, %rd132;
	add.s64 	%rd137, %rd136, 4354685564936845355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r71,%dummy}, %rd127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r72}, %rd127;
	}
	shf.r.wrap.b32 	%r73, %r72, %r71, 28;
	shf.r.wrap.b32 	%r74, %r71, %r72, 28;
	mov.b64 	%rd138, {%r74, %r73};
	shf.l.wrap.b32 	%r75, %r71, %r72, 30;
	shf.l.wrap.b32 	%r76, %r72, %r71, 30;
	mov.b64 	%rd139, {%r76, %r75};
	xor.b64  	%rd140, %rd138, %rd139;
	shf.l.wrap.b32 	%r77, %r71, %r72, 25;
	shf.l.wrap.b32 	%r78, %r72, %r71, 25;
	mov.b64 	%rd141, {%r78, %r77};
	xor.b64  	%rd142, %rd140, %rd141;
	and.b64  	%rd143, %rd127, 7640891576956012808;
	and.b64  	%rd144, %rd127, -4942790177534073029;
	xor.b64  	%rd145, %rd144, 3026882967131160840;
	or.b64  	%rd146, %rd145, %rd143;
	add.s64 	%rd147, %rd142, %rd146;
	add.s64 	%rd148, %rd147, %rd136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r79,%dummy}, %rd137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r80}, %rd137;
	}
	shf.r.wrap.b32 	%r81, %r80, %r79, 14;
	shf.r.wrap.b32 	%r82, %r79, %r80, 14;
	mov.b64 	%rd149, {%r82, %r81};
	shf.r.wrap.b32 	%r83, %r80, %r79, 18;
	shf.r.wrap.b32 	%r84, %r79, %r80, 18;
	mov.b64 	%rd150, {%r84, %r83};
	xor.b64  	%rd151, %rd149, %rd150;
	shf.l.wrap.b32 	%r85, %r79, %r80, 23;
	shf.l.wrap.b32 	%r86, %r80, %r79, 23;
	mov.b64 	%rd152, {%r86, %r85};
	xor.b64  	%rd153, %rd151, %rd152;
	xor.b64  	%rd154, %rd126, 5840696475078001361;
	and.b64  	%rd155, %rd137, %rd154;
	xor.b64  	%rd156, %rd155, 5840696475078001361;
	add.s64 	%rd157, %rd11, %rd156;
	add.s64 	%rd158, %rd157, %rd153;
	add.s64 	%rd159, %rd158, -4942790177534073029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r87,%dummy}, %rd148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r88}, %rd148;
	}
	shf.r.wrap.b32 	%r89, %r88, %r87, 28;
	shf.r.wrap.b32 	%r90, %r87, %r88, 28;
	mov.b64 	%rd160, {%r90, %r89};
	shf.l.wrap.b32 	%r91, %r87, %r88, 30;
	shf.l.wrap.b32 	%r92, %r88, %r87, 30;
	mov.b64 	%rd161, {%r92, %r91};
	xor.b64  	%rd162, %rd160, %rd161;
	shf.l.wrap.b32 	%r93, %r87, %r88, 25;
	shf.l.wrap.b32 	%r94, %r88, %r87, 25;
	mov.b64 	%rd163, {%r94, %r93};
	xor.b64  	%rd164, %rd162, %rd163;
	and.b64  	%rd165, %rd148, %rd127;
	xor.b64  	%rd166, %rd148, %rd127;
	and.b64  	%rd167, %rd166, 7640891576956012808;
	or.b64  	%rd168, %rd167, %rd165;
	add.s64 	%rd169, %rd164, %rd168;
	add.s64 	%rd170, %rd169, %rd158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r95,%dummy}, %rd159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r96}, %rd159;
	}
	shf.r.wrap.b32 	%r97, %r96, %r95, 14;
	shf.r.wrap.b32 	%r98, %r95, %r96, 14;
	mov.b64 	%rd171, {%r98, %r97};
	shf.r.wrap.b32 	%r99, %r96, %r95, 18;
	shf.r.wrap.b32 	%r100, %r95, %r96, 18;
	mov.b64 	%rd172, {%r100, %r99};
	xor.b64  	%rd173, %rd171, %rd172;
	shf.l.wrap.b32 	%r101, %r95, %r96, 23;
	shf.l.wrap.b32 	%r102, %r96, %r95, 23;
	mov.b64 	%rd174, {%r102, %r101};
	xor.b64  	%rd175, %rd173, %rd174;
	xor.b64  	%rd176, %rd137, %rd126;
	and.b64  	%rd177, %rd159, %rd176;
	xor.b64  	%rd178, %rd177, %rd126;
	add.s64 	%rd179, %rd12, %rd178;
	add.s64 	%rd180, %rd179, %rd175;
	add.s64 	%rd181, %rd180, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r103,%dummy}, %rd170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r104}, %rd170;
	}
	shf.r.wrap.b32 	%r105, %r104, %r103, 28;
	shf.r.wrap.b32 	%r106, %r103, %r104, 28;
	mov.b64 	%rd182, {%r106, %r105};
	shf.l.wrap.b32 	%r107, %r103, %r104, 30;
	shf.l.wrap.b32 	%r108, %r104, %r103, 30;
	mov.b64 	%rd183, {%r108, %r107};
	xor.b64  	%rd184, %rd182, %rd183;
	shf.l.wrap.b32 	%r109, %r103, %r104, 25;
	shf.l.wrap.b32 	%r110, %r104, %r103, 25;
	mov.b64 	%rd185, {%r110, %r109};
	xor.b64  	%rd186, %rd184, %rd185;
	and.b64  	%rd187, %rd170, %rd148;
	xor.b64  	%rd188, %rd170, %rd148;
	and.b64  	%rd189, %rd188, %rd127;
	or.b64  	%rd190, %rd189, %rd187;
	add.s64 	%rd191, %rd186, %rd190;
	add.s64 	%rd192, %rd191, %rd180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r111,%dummy}, %rd181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r112}, %rd181;
	}
	shf.r.wrap.b32 	%r113, %r112, %r111, 14;
	shf.r.wrap.b32 	%r114, %r111, %r112, 14;
	mov.b64 	%rd193, {%r114, %r113};
	shf.r.wrap.b32 	%r115, %r112, %r111, 18;
	shf.r.wrap.b32 	%r116, %r111, %r112, 18;
	mov.b64 	%rd194, {%r116, %r115};
	xor.b64  	%rd195, %rd193, %rd194;
	shf.l.wrap.b32 	%r117, %r111, %r112, 23;
	shf.l.wrap.b32 	%r118, %r112, %r111, 23;
	mov.b64 	%rd196, {%r118, %r117};
	xor.b64  	%rd197, %rd195, %rd196;
	xor.b64  	%rd198, %rd159, %rd137;
	and.b64  	%rd199, %rd181, %rd198;
	xor.b64  	%rd200, %rd199, %rd137;
	add.s64 	%rd201, %rd13, %rd126;
	add.s64 	%rd202, %rd201, %rd200;
	add.s64 	%rd203, %rd202, %rd197;
	add.s64 	%rd204, %rd203, %rd127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r119,%dummy}, %rd192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r120}, %rd192;
	}
	shf.r.wrap.b32 	%r121, %r120, %r119, 28;
	shf.r.wrap.b32 	%r122, %r119, %r120, 28;
	mov.b64 	%rd205, {%r122, %r121};
	shf.l.wrap.b32 	%r123, %r119, %r120, 30;
	shf.l.wrap.b32 	%r124, %r120, %r119, 30;
	mov.b64 	%rd206, {%r124, %r123};
	xor.b64  	%rd207, %rd205, %rd206;
	shf.l.wrap.b32 	%r125, %r119, %r120, 25;
	shf.l.wrap.b32 	%r126, %r120, %r119, 25;
	mov.b64 	%rd208, {%r126, %r125};
	xor.b64  	%rd209, %rd207, %rd208;
	and.b64  	%rd210, %rd192, %rd170;
	xor.b64  	%rd211, %rd192, %rd170;
	and.b64  	%rd212, %rd211, %rd148;
	or.b64  	%rd213, %rd212, %rd210;
	add.s64 	%rd214, %rd209, %rd213;
	add.s64 	%rd215, %rd214, %rd203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r127,%dummy}, %rd204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r128}, %rd204;
	}
	shf.r.wrap.b32 	%r129, %r128, %r127, 14;
	shf.r.wrap.b32 	%r130, %r127, %r128, 14;
	mov.b64 	%rd216, {%r130, %r129};
	shf.r.wrap.b32 	%r131, %r128, %r127, 18;
	shf.r.wrap.b32 	%r132, %r127, %r128, 18;
	mov.b64 	%rd217, {%r132, %r131};
	xor.b64  	%rd218, %rd216, %rd217;
	shf.l.wrap.b32 	%r133, %r127, %r128, 23;
	shf.l.wrap.b32 	%r134, %r128, %r127, 23;
	mov.b64 	%rd219, {%r134, %r133};
	xor.b64  	%rd220, %rd218, %rd219;
	xor.b64  	%rd221, %rd181, %rd159;
	and.b64  	%rd222, %rd204, %rd221;
	xor.b64  	%rd223, %rd222, %rd159;
	add.s64 	%rd224, %rd14, %rd137;
	add.s64 	%rd225, %rd224, %rd223;
	add.s64 	%rd226, %rd225, %rd220;
	add.s64 	%rd227, %rd226, %rd148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r135,%dummy}, %rd215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r136}, %rd215;
	}
	shf.r.wrap.b32 	%r137, %r136, %r135, 28;
	shf.r.wrap.b32 	%r138, %r135, %r136, 28;
	mov.b64 	%rd228, {%r138, %r137};
	shf.l.wrap.b32 	%r139, %r135, %r136, 30;
	shf.l.wrap.b32 	%r140, %r136, %r135, 30;
	mov.b64 	%rd229, {%r140, %r139};
	xor.b64  	%rd230, %rd228, %rd229;
	shf.l.wrap.b32 	%r141, %r135, %r136, 25;
	shf.l.wrap.b32 	%r142, %r136, %r135, 25;
	mov.b64 	%rd231, {%r142, %r141};
	xor.b64  	%rd232, %rd230, %rd231;
	and.b64  	%rd233, %rd215, %rd192;
	xor.b64  	%rd234, %rd215, %rd192;
	and.b64  	%rd235, %rd234, %rd170;
	or.b64  	%rd236, %rd235, %rd233;
	add.s64 	%rd237, %rd232, %rd236;
	add.s64 	%rd238, %rd237, %rd226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r143,%dummy}, %rd227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r144}, %rd227;
	}
	shf.r.wrap.b32 	%r145, %r144, %r143, 14;
	shf.r.wrap.b32 	%r146, %r143, %r144, 14;
	mov.b64 	%rd239, {%r146, %r145};
	shf.r.wrap.b32 	%r147, %r144, %r143, 18;
	shf.r.wrap.b32 	%r148, %r143, %r144, 18;
	mov.b64 	%rd240, {%r148, %r147};
	xor.b64  	%rd241, %rd239, %rd240;
	shf.l.wrap.b32 	%r149, %r143, %r144, 23;
	shf.l.wrap.b32 	%r150, %r144, %r143, 23;
	mov.b64 	%rd242, {%r150, %r149};
	xor.b64  	%rd243, %rd241, %rd242;
	xor.b64  	%rd244, %rd204, %rd181;
	and.b64  	%rd245, %rd227, %rd244;
	xor.b64  	%rd246, %rd245, %rd181;
	add.s64 	%rd247, %rd15, %rd159;
	add.s64 	%rd248, %rd247, %rd246;
	add.s64 	%rd249, %rd248, %rd243;
	add.s64 	%rd250, %rd249, %rd170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r151,%dummy}, %rd238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r152}, %rd238;
	}
	shf.r.wrap.b32 	%r153, %r152, %r151, 28;
	shf.r.wrap.b32 	%r154, %r151, %r152, 28;
	mov.b64 	%rd251, {%r154, %r153};
	shf.l.wrap.b32 	%r155, %r151, %r152, 30;
	shf.l.wrap.b32 	%r156, %r152, %r151, 30;
	mov.b64 	%rd252, {%r156, %r155};
	xor.b64  	%rd253, %rd251, %rd252;
	shf.l.wrap.b32 	%r157, %r151, %r152, 25;
	shf.l.wrap.b32 	%r158, %r152, %r151, 25;
	mov.b64 	%rd254, {%r158, %r157};
	xor.b64  	%rd255, %rd253, %rd254;
	and.b64  	%rd256, %rd238, %rd215;
	xor.b64  	%rd257, %rd238, %rd215;
	and.b64  	%rd258, %rd257, %rd192;
	or.b64  	%rd259, %rd258, %rd256;
	add.s64 	%rd260, %rd255, %rd259;
	add.s64 	%rd261, %rd260, %rd249;
	add.s64 	%rd262, %rd181, %rd1078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r159,%dummy}, %rd250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r160}, %rd250;
	}
	shf.r.wrap.b32 	%r161, %r160, %r159, 14;
	shf.r.wrap.b32 	%r162, %r159, %r160, 14;
	mov.b64 	%rd263, {%r162, %r161};
	shf.r.wrap.b32 	%r163, %r160, %r159, 18;
	shf.r.wrap.b32 	%r164, %r159, %r160, 18;
	mov.b64 	%rd264, {%r164, %r163};
	xor.b64  	%rd265, %rd263, %rd264;
	shf.l.wrap.b32 	%r165, %r159, %r160, 23;
	shf.l.wrap.b32 	%r166, %r160, %r159, 23;
	mov.b64 	%rd266, {%r166, %r165};
	xor.b64  	%rd267, %rd265, %rd266;
	xor.b64  	%rd268, %rd227, %rd204;
	and.b64  	%rd269, %rd250, %rd268;
	xor.b64  	%rd270, %rd269, %rd204;
	add.s64 	%rd271, %rd262, %rd270;
	add.s64 	%rd272, %rd271, %rd267;
	add.s64 	%rd273, %rd272, %rd192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r167,%dummy}, %rd261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r168}, %rd261;
	}
	shf.r.wrap.b32 	%r169, %r168, %r167, 28;
	shf.r.wrap.b32 	%r170, %r167, %r168, 28;
	mov.b64 	%rd274, {%r170, %r169};
	shf.l.wrap.b32 	%r171, %r167, %r168, 30;
	shf.l.wrap.b32 	%r172, %r168, %r167, 30;
	mov.b64 	%rd275, {%r172, %r171};
	xor.b64  	%rd276, %rd274, %rd275;
	shf.l.wrap.b32 	%r173, %r167, %r168, 25;
	shf.l.wrap.b32 	%r174, %r168, %r167, 25;
	mov.b64 	%rd277, {%r174, %r173};
	xor.b64  	%rd278, %rd276, %rd277;
	and.b64  	%rd279, %rd261, %rd238;
	xor.b64  	%rd280, %rd261, %rd238;
	and.b64  	%rd281, %rd280, %rd215;
	or.b64  	%rd282, %rd281, %rd279;
	add.s64 	%rd283, %rd278, %rd282;
	add.s64 	%rd284, %rd283, %rd272;
	add.s64 	%rd285, %rd204, %rd1079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r175,%dummy}, %rd273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r176}, %rd273;
	}
	shf.r.wrap.b32 	%r177, %r176, %r175, 14;
	shf.r.wrap.b32 	%r178, %r175, %r176, 14;
	mov.b64 	%rd286, {%r178, %r177};
	shf.r.wrap.b32 	%r179, %r176, %r175, 18;
	shf.r.wrap.b32 	%r180, %r175, %r176, 18;
	mov.b64 	%rd287, {%r180, %r179};
	xor.b64  	%rd288, %rd286, %rd287;
	shf.l.wrap.b32 	%r181, %r175, %r176, 23;
	shf.l.wrap.b32 	%r182, %r176, %r175, 23;
	mov.b64 	%rd289, {%r182, %r181};
	xor.b64  	%rd290, %rd288, %rd289;
	xor.b64  	%rd291, %rd250, %rd227;
	and.b64  	%rd292, %rd273, %rd291;
	xor.b64  	%rd293, %rd292, %rd227;
	add.s64 	%rd294, %rd285, %rd293;
	add.s64 	%rd295, %rd294, %rd290;
	add.s64 	%rd296, %rd295, %rd215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r183,%dummy}, %rd284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r184}, %rd284;
	}
	shf.r.wrap.b32 	%r185, %r184, %r183, 28;
	shf.r.wrap.b32 	%r186, %r183, %r184, 28;
	mov.b64 	%rd297, {%r186, %r185};
	shf.l.wrap.b32 	%r187, %r183, %r184, 30;
	shf.l.wrap.b32 	%r188, %r184, %r183, 30;
	mov.b64 	%rd298, {%r188, %r187};
	xor.b64  	%rd299, %rd297, %rd298;
	shf.l.wrap.b32 	%r189, %r183, %r184, 25;
	shf.l.wrap.b32 	%r190, %r184, %r183, 25;
	mov.b64 	%rd300, {%r190, %r189};
	xor.b64  	%rd301, %rd299, %rd300;
	and.b64  	%rd302, %rd284, %rd261;
	xor.b64  	%rd303, %rd284, %rd261;
	and.b64  	%rd304, %rd303, %rd238;
	or.b64  	%rd305, %rd304, %rd302;
	add.s64 	%rd306, %rd301, %rd305;
	add.s64 	%rd307, %rd306, %rd295;
	add.s64 	%rd308, %rd227, %rd1080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r191,%dummy}, %rd296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r192}, %rd296;
	}
	shf.r.wrap.b32 	%r193, %r192, %r191, 14;
	shf.r.wrap.b32 	%r194, %r191, %r192, 14;
	mov.b64 	%rd309, {%r194, %r193};
	shf.r.wrap.b32 	%r195, %r192, %r191, 18;
	shf.r.wrap.b32 	%r196, %r191, %r192, 18;
	mov.b64 	%rd310, {%r196, %r195};
	xor.b64  	%rd311, %rd309, %rd310;
	shf.l.wrap.b32 	%r197, %r191, %r192, 23;
	shf.l.wrap.b32 	%r198, %r192, %r191, 23;
	mov.b64 	%rd312, {%r198, %r197};
	xor.b64  	%rd313, %rd311, %rd312;
	xor.b64  	%rd314, %rd273, %rd250;
	and.b64  	%rd315, %rd296, %rd314;
	xor.b64  	%rd316, %rd315, %rd250;
	add.s64 	%rd317, %rd308, %rd316;
	add.s64 	%rd318, %rd317, %rd313;
	add.s64 	%rd319, %rd318, %rd238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r199,%dummy}, %rd307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r200}, %rd307;
	}
	shf.r.wrap.b32 	%r201, %r200, %r199, 28;
	shf.r.wrap.b32 	%r202, %r199, %r200, 28;
	mov.b64 	%rd320, {%r202, %r201};
	shf.l.wrap.b32 	%r203, %r199, %r200, 30;
	shf.l.wrap.b32 	%r204, %r200, %r199, 30;
	mov.b64 	%rd321, {%r204, %r203};
	xor.b64  	%rd322, %rd320, %rd321;
	shf.l.wrap.b32 	%r205, %r199, %r200, 25;
	shf.l.wrap.b32 	%r206, %r200, %r199, 25;
	mov.b64 	%rd323, {%r206, %r205};
	xor.b64  	%rd324, %rd322, %rd323;
	and.b64  	%rd325, %rd307, %rd284;
	xor.b64  	%rd326, %rd307, %rd284;
	and.b64  	%rd327, %rd326, %rd261;
	or.b64  	%rd328, %rd327, %rd325;
	add.s64 	%rd329, %rd324, %rd328;
	add.s64 	%rd330, %rd329, %rd318;
	add.s64 	%rd331, %rd250, %rd1081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r207,%dummy}, %rd319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r208}, %rd319;
	}
	shf.r.wrap.b32 	%r209, %r208, %r207, 14;
	shf.r.wrap.b32 	%r210, %r207, %r208, 14;
	mov.b64 	%rd332, {%r210, %r209};
	shf.r.wrap.b32 	%r211, %r208, %r207, 18;
	shf.r.wrap.b32 	%r212, %r207, %r208, 18;
	mov.b64 	%rd333, {%r212, %r211};
	xor.b64  	%rd334, %rd332, %rd333;
	shf.l.wrap.b32 	%r213, %r207, %r208, 23;
	shf.l.wrap.b32 	%r214, %r208, %r207, 23;
	mov.b64 	%rd335, {%r214, %r213};
	xor.b64  	%rd336, %rd334, %rd335;
	xor.b64  	%rd337, %rd296, %rd273;
	and.b64  	%rd338, %rd319, %rd337;
	xor.b64  	%rd339, %rd338, %rd273;
	add.s64 	%rd340, %rd331, %rd339;
	add.s64 	%rd341, %rd340, %rd336;
	add.s64 	%rd342, %rd341, %rd261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r215,%dummy}, %rd330;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r216}, %rd330;
	}
	shf.r.wrap.b32 	%r217, %r216, %r215, 28;
	shf.r.wrap.b32 	%r218, %r215, %r216, 28;
	mov.b64 	%rd343, {%r218, %r217};
	shf.l.wrap.b32 	%r219, %r215, %r216, 30;
	shf.l.wrap.b32 	%r220, %r216, %r215, 30;
	mov.b64 	%rd344, {%r220, %r219};
	xor.b64  	%rd345, %rd343, %rd344;
	shf.l.wrap.b32 	%r221, %r215, %r216, 25;
	shf.l.wrap.b32 	%r222, %r216, %r215, 25;
	mov.b64 	%rd346, {%r222, %r221};
	xor.b64  	%rd347, %rd345, %rd346;
	and.b64  	%rd348, %rd330, %rd307;
	xor.b64  	%rd349, %rd330, %rd307;
	and.b64  	%rd350, %rd349, %rd284;
	or.b64  	%rd351, %rd350, %rd348;
	add.s64 	%rd352, %rd347, %rd351;
	add.s64 	%rd353, %rd352, %rd341;
	add.s64 	%rd354, %rd273, %rd1082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r223,%dummy}, %rd342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r224}, %rd342;
	}
	shf.r.wrap.b32 	%r225, %r224, %r223, 14;
	shf.r.wrap.b32 	%r226, %r223, %r224, 14;
	mov.b64 	%rd355, {%r226, %r225};
	shf.r.wrap.b32 	%r227, %r224, %r223, 18;
	shf.r.wrap.b32 	%r228, %r223, %r224, 18;
	mov.b64 	%rd356, {%r228, %r227};
	xor.b64  	%rd357, %rd355, %rd356;
	shf.l.wrap.b32 	%r229, %r223, %r224, 23;
	shf.l.wrap.b32 	%r230, %r224, %r223, 23;
	mov.b64 	%rd358, {%r230, %r229};
	xor.b64  	%rd359, %rd357, %rd358;
	xor.b64  	%rd360, %rd319, %rd296;
	and.b64  	%rd361, %rd342, %rd360;
	xor.b64  	%rd362, %rd361, %rd296;
	add.s64 	%rd363, %rd354, %rd362;
	add.s64 	%rd364, %rd363, %rd359;
	add.s64 	%rd365, %rd364, %rd284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r231,%dummy}, %rd353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r232}, %rd353;
	}
	shf.r.wrap.b32 	%r233, %r232, %r231, 28;
	shf.r.wrap.b32 	%r234, %r231, %r232, 28;
	mov.b64 	%rd366, {%r234, %r233};
	shf.l.wrap.b32 	%r235, %r231, %r232, 30;
	shf.l.wrap.b32 	%r236, %r232, %r231, 30;
	mov.b64 	%rd367, {%r236, %r235};
	xor.b64  	%rd368, %rd366, %rd367;
	shf.l.wrap.b32 	%r237, %r231, %r232, 25;
	shf.l.wrap.b32 	%r238, %r232, %r231, 25;
	mov.b64 	%rd369, {%r238, %r237};
	xor.b64  	%rd370, %rd368, %rd369;
	and.b64  	%rd371, %rd353, %rd330;
	xor.b64  	%rd372, %rd353, %rd330;
	and.b64  	%rd373, %rd372, %rd307;
	or.b64  	%rd374, %rd373, %rd371;
	add.s64 	%rd375, %rd370, %rd374;
	add.s64 	%rd376, %rd375, %rd364;
	add.s64 	%rd377, %rd296, %rd1083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r239,%dummy}, %rd365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r240}, %rd365;
	}
	shf.r.wrap.b32 	%r241, %r240, %r239, 14;
	shf.r.wrap.b32 	%r242, %r239, %r240, 14;
	mov.b64 	%rd378, {%r242, %r241};
	shf.r.wrap.b32 	%r243, %r240, %r239, 18;
	shf.r.wrap.b32 	%r244, %r239, %r240, 18;
	mov.b64 	%rd379, {%r244, %r243};
	xor.b64  	%rd380, %rd378, %rd379;
	shf.l.wrap.b32 	%r245, %r239, %r240, 23;
	shf.l.wrap.b32 	%r246, %r240, %r239, 23;
	mov.b64 	%rd381, {%r246, %r245};
	xor.b64  	%rd382, %rd380, %rd381;
	xor.b64  	%rd383, %rd342, %rd319;
	and.b64  	%rd384, %rd365, %rd383;
	xor.b64  	%rd385, %rd384, %rd319;
	add.s64 	%rd386, %rd377, %rd385;
	add.s64 	%rd387, %rd386, %rd382;
	add.s64 	%rd1095, %rd387, %rd307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r247,%dummy}, %rd376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r248}, %rd376;
	}
	shf.r.wrap.b32 	%r249, %r248, %r247, 28;
	shf.r.wrap.b32 	%r250, %r247, %r248, 28;
	mov.b64 	%rd388, {%r250, %r249};
	shf.l.wrap.b32 	%r251, %r247, %r248, 30;
	shf.l.wrap.b32 	%r252, %r248, %r247, 30;
	mov.b64 	%rd389, {%r252, %r251};
	xor.b64  	%rd390, %rd388, %rd389;
	shf.l.wrap.b32 	%r253, %r247, %r248, 25;
	shf.l.wrap.b32 	%r254, %r248, %r247, 25;
	mov.b64 	%rd391, {%r254, %r253};
	xor.b64  	%rd392, %rd390, %rd391;
	and.b64  	%rd393, %rd376, %rd353;
	xor.b64  	%rd394, %rd376, %rd353;
	and.b64  	%rd395, %rd394, %rd330;
	or.b64  	%rd396, %rd395, %rd393;
	add.s64 	%rd397, %rd392, %rd396;
	add.s64 	%rd1118, %rd397, %rd387;
	add.s64 	%rd398, %rd319, %rd1084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r255,%dummy}, %rd1095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r256}, %rd1095;
	}
	shf.r.wrap.b32 	%r257, %r256, %r255, 14;
	shf.r.wrap.b32 	%r258, %r255, %r256, 14;
	mov.b64 	%rd399, {%r258, %r257};
	shf.r.wrap.b32 	%r259, %r256, %r255, 18;
	shf.r.wrap.b32 	%r260, %r255, %r256, 18;
	mov.b64 	%rd400, {%r260, %r259};
	xor.b64  	%rd401, %rd399, %rd400;
	shf.l.wrap.b32 	%r261, %r255, %r256, 23;
	shf.l.wrap.b32 	%r262, %r256, %r255, 23;
	mov.b64 	%rd402, {%r262, %r261};
	xor.b64  	%rd403, %rd401, %rd402;
	xor.b64  	%rd404, %rd365, %rd342;
	and.b64  	%rd405, %rd1095, %rd404;
	xor.b64  	%rd406, %rd405, %rd342;
	add.s64 	%rd407, %rd398, %rd406;
	add.s64 	%rd408, %rd407, %rd403;
	add.s64 	%rd1096, %rd408, %rd330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r263,%dummy}, %rd1118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r264}, %rd1118;
	}
	shf.r.wrap.b32 	%r265, %r264, %r263, 28;
	shf.r.wrap.b32 	%r266, %r263, %r264, 28;
	mov.b64 	%rd409, {%r266, %r265};
	shf.l.wrap.b32 	%r267, %r263, %r264, 30;
	shf.l.wrap.b32 	%r268, %r264, %r263, 30;
	mov.b64 	%rd410, {%r268, %r267};
	xor.b64  	%rd411, %rd409, %rd410;
	shf.l.wrap.b32 	%r269, %r263, %r264, 25;
	shf.l.wrap.b32 	%r270, %r264, %r263, 25;
	mov.b64 	%rd412, {%r270, %r269};
	xor.b64  	%rd413, %rd411, %rd412;
	and.b64  	%rd414, %rd1118, %rd376;
	xor.b64  	%rd415, %rd1118, %rd376;
	and.b64  	%rd416, %rd415, %rd353;
	or.b64  	%rd417, %rd416, %rd414;
	add.s64 	%rd418, %rd413, %rd417;
	add.s64 	%rd1117, %rd418, %rd408;
	add.s64 	%rd419, %rd342, %rd1085;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r271,%dummy}, %rd1096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r272}, %rd1096;
	}
	shf.r.wrap.b32 	%r273, %r272, %r271, 14;
	shf.r.wrap.b32 	%r274, %r271, %r272, 14;
	mov.b64 	%rd420, {%r274, %r273};
	shf.r.wrap.b32 	%r275, %r272, %r271, 18;
	shf.r.wrap.b32 	%r276, %r271, %r272, 18;
	mov.b64 	%rd421, {%r276, %r275};
	xor.b64  	%rd422, %rd420, %rd421;
	shf.l.wrap.b32 	%r277, %r271, %r272, 23;
	shf.l.wrap.b32 	%r278, %r272, %r271, 23;
	mov.b64 	%rd423, {%r278, %r277};
	xor.b64  	%rd424, %rd422, %rd423;
	xor.b64  	%rd425, %rd1095, %rd365;
	and.b64  	%rd426, %rd1096, %rd425;
	xor.b64  	%rd427, %rd426, %rd365;
	add.s64 	%rd428, %rd419, %rd427;
	add.s64 	%rd429, %rd428, %rd424;
	add.s64 	%rd1097, %rd429, %rd353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r279,%dummy}, %rd1117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r280}, %rd1117;
	}
	shf.r.wrap.b32 	%r281, %r280, %r279, 28;
	shf.r.wrap.b32 	%r282, %r279, %r280, 28;
	mov.b64 	%rd430, {%r282, %r281};
	shf.l.wrap.b32 	%r283, %r279, %r280, 30;
	shf.l.wrap.b32 	%r284, %r280, %r279, 30;
	mov.b64 	%rd431, {%r284, %r283};
	xor.b64  	%rd432, %rd430, %rd431;
	shf.l.wrap.b32 	%r285, %r279, %r280, 25;
	shf.l.wrap.b32 	%r286, %r280, %r279, 25;
	mov.b64 	%rd433, {%r286, %r285};
	xor.b64  	%rd434, %rd432, %rd433;
	and.b64  	%rd435, %rd1117, %rd1118;
	xor.b64  	%rd436, %rd1117, %rd1118;
	and.b64  	%rd437, %rd436, %rd376;
	or.b64  	%rd438, %rd437, %rd435;
	add.s64 	%rd439, %rd434, %rd438;
	add.s64 	%rd1116, %rd439, %rd429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r287,%dummy}, %rd1097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r288}, %rd1097;
	}
	shf.r.wrap.b32 	%r289, %r288, %r287, 14;
	shf.r.wrap.b32 	%r290, %r287, %r288, 14;
	mov.b64 	%rd440, {%r290, %r289};
	shf.r.wrap.b32 	%r291, %r288, %r287, 18;
	shf.r.wrap.b32 	%r292, %r287, %r288, 18;
	mov.b64 	%rd441, {%r292, %r291};
	xor.b64  	%rd442, %rd440, %rd441;
	shf.l.wrap.b32 	%r293, %r287, %r288, 23;
	shf.l.wrap.b32 	%r294, %r288, %r287, 23;
	mov.b64 	%rd443, {%r294, %r293};
	xor.b64  	%rd444, %rd442, %rd443;
	xor.b64  	%rd445, %rd1096, %rd1095;
	and.b64  	%rd446, %rd1097, %rd445;
	xor.b64  	%rd447, %rd446, %rd1095;
	add.s64 	%rd448, %rd24, %rd365;
	add.s64 	%rd449, %rd448, %rd447;
	add.s64 	%rd450, %rd449, %rd444;
	add.s64 	%rd1098, %rd450, %rd376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r295,%dummy}, %rd1116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r296}, %rd1116;
	}
	shf.r.wrap.b32 	%r297, %r296, %r295, 28;
	shf.r.wrap.b32 	%r298, %r295, %r296, 28;
	mov.b64 	%rd451, {%r298, %r297};
	shf.l.wrap.b32 	%r299, %r295, %r296, 30;
	shf.l.wrap.b32 	%r300, %r296, %r295, 30;
	mov.b64 	%rd452, {%r300, %r299};
	xor.b64  	%rd453, %rd451, %rd452;
	shf.l.wrap.b32 	%r301, %r295, %r296, 25;
	shf.l.wrap.b32 	%r302, %r296, %r295, 25;
	mov.b64 	%rd454, {%r302, %r301};
	xor.b64  	%rd455, %rd453, %rd454;
	and.b64  	%rd456, %rd1116, %rd1117;
	xor.b64  	%rd457, %rd1116, %rd1117;
	and.b64  	%rd458, %rd457, %rd1118;
	or.b64  	%rd459, %rd458, %rd456;
	add.s64 	%rd460, %rd455, %rd459;
	add.s64 	%rd1115, %rd460, %rd450;
	mov.u64 	%rd1106, 0;
	mov.u32 	%r806, 16;
	mov.u64 	%rd1094, k_sha512;
	mov.u64 	%rd1100, %rd2;
	mov.u64 	%rd1101, %rd3;
	mov.u64 	%rd1102, %rd4;
	mov.u64 	%rd1103, %rd5;
	mov.u64 	%rd1104, %rd6;
	mov.u64 	%rd1105, %rd7;
	mov.u64 	%rd1107, %rd1106;
	mov.u64 	%rd1108, %rd1106;
	mov.u64 	%rd1109, %rd1106;
	mov.u64 	%rd1110, %rd1106;
	mov.u64 	%rd1111, %rd1106;
	mov.u64 	%rd1112, %rd1106;
	mov.u64 	%rd1113, %rd1106;
	mov.u64 	%rd1114, %rd8;

BB2_4:
	shr.u64 	%rd461, %rd1113, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r303}, %rd1113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r304,%dummy}, %rd1113;
	}
	shf.l.wrap.b32 	%r305, %r304, %r303, 3;
	shf.l.wrap.b32 	%r306, %r303, %r304, 3;
	mov.b64 	%rd462, {%r306, %r305};
	xor.b64  	%rd463, %rd462, %rd461;
	shf.r.wrap.b32 	%r307, %r303, %r304, 19;
	shf.r.wrap.b32 	%r308, %r304, %r303, 19;
	mov.b64 	%rd464, {%r308, %r307};
	xor.b64  	%rd465, %rd463, %rd464;
	add.s64 	%rd466, %rd1108, %rd465;
	shr.u64 	%rd467, %rd1100, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r309,%dummy}, %rd1100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r310}, %rd1100;
	}
	shf.r.wrap.b32 	%r311, %r310, %r309, 8;
	shf.r.wrap.b32 	%r312, %r309, %r310, 8;
	mov.b64 	%rd468, {%r312, %r311};
	xor.b64  	%rd469, %rd468, %rd467;
	shf.r.wrap.b32 	%r313, %r310, %r309, 1;
	shf.r.wrap.b32 	%r314, %r309, %r310, 1;
	mov.b64 	%rd470, {%r314, %r313};
	xor.b64  	%rd471, %rd469, %rd470;
	add.s64 	%rd472, %rd466, %rd1099;
	add.s64 	%rd1099, %rd472, %rd471;
	shr.u64 	%rd473, %rd1114, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r315}, %rd1114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r316,%dummy}, %rd1114;
	}
	shf.l.wrap.b32 	%r317, %r316, %r315, 3;
	shf.l.wrap.b32 	%r318, %r315, %r316, 3;
	mov.b64 	%rd474, {%r318, %r317};
	xor.b64  	%rd475, %rd474, %rd473;
	shf.r.wrap.b32 	%r319, %r315, %r316, 19;
	shf.r.wrap.b32 	%r320, %r316, %r315, 19;
	mov.b64 	%rd476, {%r320, %r319};
	xor.b64  	%rd477, %rd475, %rd476;
	add.s64 	%rd478, %rd1109, %rd477;
	shr.u64 	%rd479, %rd1101, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r321,%dummy}, %rd1101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r322}, %rd1101;
	}
	shf.r.wrap.b32 	%r323, %r322, %r321, 8;
	shf.r.wrap.b32 	%r324, %r321, %r322, 8;
	mov.b64 	%rd480, {%r324, %r323};
	xor.b64  	%rd481, %rd480, %rd479;
	shf.r.wrap.b32 	%r325, %r322, %r321, 1;
	shf.r.wrap.b32 	%r326, %r321, %r322, 1;
	mov.b64 	%rd482, {%r326, %r325};
	xor.b64  	%rd483, %rd481, %rd482;
	add.s64 	%rd484, %rd478, %rd1100;
	add.s64 	%rd1100, %rd484, %rd483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r327,%dummy}, %rd1099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r328}, %rd1099;
	}
	shf.r.wrap.b32 	%r329, %r328, %r327, 19;
	shf.r.wrap.b32 	%r330, %r327, %r328, 19;
	mov.b64 	%rd485, {%r330, %r329};
	shf.l.wrap.b32 	%r331, %r327, %r328, 3;
	shf.l.wrap.b32 	%r332, %r328, %r327, 3;
	mov.b64 	%rd486, {%r332, %r331};
	shr.u64 	%rd487, %rd1099, 6;
	xor.b64  	%rd488, %rd486, %rd487;
	xor.b64  	%rd489, %rd488, %rd485;
	shr.u64 	%rd490, %rd1102, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r333,%dummy}, %rd1102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r334}, %rd1102;
	}
	shf.r.wrap.b32 	%r335, %r334, %r333, 8;
	shf.r.wrap.b32 	%r336, %r333, %r334, 8;
	mov.b64 	%rd491, {%r336, %r335};
	xor.b64  	%rd492, %rd491, %rd490;
	shf.r.wrap.b32 	%r337, %r334, %r333, 1;
	shf.r.wrap.b32 	%r338, %r333, %r334, 1;
	mov.b64 	%rd493, {%r338, %r337};
	xor.b64  	%rd494, %rd492, %rd493;
	add.s64 	%rd495, %rd1101, %rd1110;
	add.s64 	%rd496, %rd495, %rd494;
	add.s64 	%rd1101, %rd496, %rd489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r339,%dummy}, %rd1100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r340}, %rd1100;
	}
	shf.r.wrap.b32 	%r341, %r340, %r339, 19;
	shf.r.wrap.b32 	%r342, %r339, %r340, 19;
	mov.b64 	%rd497, {%r342, %r341};
	shf.l.wrap.b32 	%r343, %r339, %r340, 3;
	shf.l.wrap.b32 	%r344, %r340, %r339, 3;
	mov.b64 	%rd498, {%r344, %r343};
	shr.u64 	%rd499, %rd1100, 6;
	xor.b64  	%rd500, %rd498, %rd499;
	xor.b64  	%rd501, %rd500, %rd497;
	shr.u64 	%rd502, %rd1103, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r345,%dummy}, %rd1103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r346}, %rd1103;
	}
	shf.r.wrap.b32 	%r347, %r346, %r345, 8;
	shf.r.wrap.b32 	%r348, %r345, %r346, 8;
	mov.b64 	%rd503, {%r348, %r347};
	xor.b64  	%rd504, %rd503, %rd502;
	shf.r.wrap.b32 	%r349, %r346, %r345, 1;
	shf.r.wrap.b32 	%r350, %r345, %r346, 1;
	mov.b64 	%rd505, {%r350, %r349};
	xor.b64  	%rd506, %rd504, %rd505;
	add.s64 	%rd507, %rd1102, %rd1111;
	add.s64 	%rd508, %rd507, %rd506;
	add.s64 	%rd1102, %rd508, %rd501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r351,%dummy}, %rd1101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r352}, %rd1101;
	}
	shf.r.wrap.b32 	%r353, %r352, %r351, 19;
	shf.r.wrap.b32 	%r354, %r351, %r352, 19;
	mov.b64 	%rd509, {%r354, %r353};
	shf.l.wrap.b32 	%r355, %r351, %r352, 3;
	shf.l.wrap.b32 	%r356, %r352, %r351, 3;
	mov.b64 	%rd510, {%r356, %r355};
	shr.u64 	%rd511, %rd1101, 6;
	xor.b64  	%rd512, %rd510, %rd511;
	xor.b64  	%rd513, %rd512, %rd509;
	shr.u64 	%rd514, %rd1104, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r357,%dummy}, %rd1104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r358}, %rd1104;
	}
	shf.r.wrap.b32 	%r359, %r358, %r357, 8;
	shf.r.wrap.b32 	%r360, %r357, %r358, 8;
	mov.b64 	%rd515, {%r360, %r359};
	xor.b64  	%rd516, %rd515, %rd514;
	shf.r.wrap.b32 	%r361, %r358, %r357, 1;
	shf.r.wrap.b32 	%r362, %r357, %r358, 1;
	mov.b64 	%rd517, {%r362, %r361};
	xor.b64  	%rd518, %rd516, %rd517;
	add.s64 	%rd519, %rd1103, %rd1112;
	add.s64 	%rd520, %rd519, %rd518;
	add.s64 	%rd1103, %rd520, %rd513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r363,%dummy}, %rd1102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r364}, %rd1102;
	}
	shf.r.wrap.b32 	%r365, %r364, %r363, 19;
	shf.r.wrap.b32 	%r366, %r363, %r364, 19;
	mov.b64 	%rd521, {%r366, %r365};
	shf.l.wrap.b32 	%r367, %r363, %r364, 3;
	shf.l.wrap.b32 	%r368, %r364, %r363, 3;
	mov.b64 	%rd522, {%r368, %r367};
	shr.u64 	%rd523, %rd1102, 6;
	xor.b64  	%rd524, %rd522, %rd523;
	xor.b64  	%rd525, %rd524, %rd521;
	shr.u64 	%rd526, %rd1105, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r369,%dummy}, %rd1105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r370}, %rd1105;
	}
	shf.r.wrap.b32 	%r371, %r370, %r369, 8;
	shf.r.wrap.b32 	%r372, %r369, %r370, 8;
	mov.b64 	%rd527, {%r372, %r371};
	xor.b64  	%rd528, %rd527, %rd526;
	shf.r.wrap.b32 	%r373, %r370, %r369, 1;
	shf.r.wrap.b32 	%r374, %r369, %r370, 1;
	mov.b64 	%rd529, {%r374, %r373};
	xor.b64  	%rd530, %rd528, %rd529;
	add.s64 	%rd531, %rd1104, %rd1113;
	add.s64 	%rd532, %rd531, %rd530;
	add.s64 	%rd1104, %rd532, %rd525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r375,%dummy}, %rd1103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r376}, %rd1103;
	}
	shf.r.wrap.b32 	%r377, %r376, %r375, 19;
	shf.r.wrap.b32 	%r378, %r375, %r376, 19;
	mov.b64 	%rd533, {%r378, %r377};
	shf.l.wrap.b32 	%r379, %r375, %r376, 3;
	shf.l.wrap.b32 	%r380, %r376, %r375, 3;
	mov.b64 	%rd534, {%r380, %r379};
	shr.u64 	%rd535, %rd1103, 6;
	xor.b64  	%rd536, %rd534, %rd535;
	xor.b64  	%rd537, %rd536, %rd533;
	shr.u64 	%rd538, %rd1106, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r381,%dummy}, %rd1106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r382}, %rd1106;
	}
	shf.r.wrap.b32 	%r383, %r382, %r381, 8;
	shf.r.wrap.b32 	%r384, %r381, %r382, 8;
	mov.b64 	%rd539, {%r384, %r383};
	xor.b64  	%rd540, %rd539, %rd538;
	shf.r.wrap.b32 	%r385, %r382, %r381, 1;
	shf.r.wrap.b32 	%r386, %r381, %r382, 1;
	mov.b64 	%rd541, {%r386, %r385};
	xor.b64  	%rd542, %rd540, %rd541;
	add.s64 	%rd543, %rd1105, %rd1114;
	add.s64 	%rd544, %rd543, %rd542;
	add.s64 	%rd1105, %rd544, %rd537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r387,%dummy}, %rd1104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r388}, %rd1104;
	}
	shf.r.wrap.b32 	%r389, %r388, %r387, 19;
	shf.r.wrap.b32 	%r390, %r387, %r388, 19;
	mov.b64 	%rd545, {%r390, %r389};
	shf.l.wrap.b32 	%r391, %r387, %r388, 3;
	shf.l.wrap.b32 	%r392, %r388, %r387, 3;
	mov.b64 	%rd546, {%r392, %r391};
	shr.u64 	%rd547, %rd1104, 6;
	xor.b64  	%rd548, %rd546, %rd547;
	xor.b64  	%rd549, %rd548, %rd545;
	shr.u64 	%rd550, %rd1107, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r393,%dummy}, %rd1107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r394}, %rd1107;
	}
	shf.r.wrap.b32 	%r395, %r394, %r393, 8;
	shf.r.wrap.b32 	%r396, %r393, %r394, 8;
	mov.b64 	%rd551, {%r396, %r395};
	xor.b64  	%rd552, %rd551, %rd550;
	shf.r.wrap.b32 	%r397, %r394, %r393, 1;
	shf.r.wrap.b32 	%r398, %r393, %r394, 1;
	mov.b64 	%rd553, {%r398, %r397};
	xor.b64  	%rd554, %rd552, %rd553;
	add.s64 	%rd555, %rd554, %rd1106;
	add.s64 	%rd556, %rd555, %rd1099;
	add.s64 	%rd1106, %rd556, %rd549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r399,%dummy}, %rd1105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r400}, %rd1105;
	}
	shf.r.wrap.b32 	%r401, %r400, %r399, 19;
	shf.r.wrap.b32 	%r402, %r399, %r400, 19;
	mov.b64 	%rd557, {%r402, %r401};
	shf.l.wrap.b32 	%r403, %r399, %r400, 3;
	shf.l.wrap.b32 	%r404, %r400, %r399, 3;
	mov.b64 	%rd558, {%r404, %r403};
	shr.u64 	%rd559, %rd1105, 6;
	xor.b64  	%rd560, %rd558, %rd559;
	xor.b64  	%rd561, %rd560, %rd557;
	shr.u64 	%rd562, %rd1108, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r405,%dummy}, %rd1108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r406}, %rd1108;
	}
	shf.r.wrap.b32 	%r407, %r406, %r405, 8;
	shf.r.wrap.b32 	%r408, %r405, %r406, 8;
	mov.b64 	%rd563, {%r408, %r407};
	xor.b64  	%rd564, %rd563, %rd562;
	shf.r.wrap.b32 	%r409, %r406, %r405, 1;
	shf.r.wrap.b32 	%r410, %r405, %r406, 1;
	mov.b64 	%rd565, {%r410, %r409};
	xor.b64  	%rd566, %rd564, %rd565;
	add.s64 	%rd567, %rd566, %rd1107;
	add.s64 	%rd568, %rd567, %rd1100;
	add.s64 	%rd1107, %rd568, %rd561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r411,%dummy}, %rd1106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r412}, %rd1106;
	}
	shf.r.wrap.b32 	%r413, %r412, %r411, 19;
	shf.r.wrap.b32 	%r414, %r411, %r412, 19;
	mov.b64 	%rd569, {%r414, %r413};
	shf.l.wrap.b32 	%r415, %r411, %r412, 3;
	shf.l.wrap.b32 	%r416, %r412, %r411, 3;
	mov.b64 	%rd570, {%r416, %r415};
	shr.u64 	%rd571, %rd1106, 6;
	xor.b64  	%rd572, %rd570, %rd571;
	xor.b64  	%rd573, %rd572, %rd569;
	shr.u64 	%rd574, %rd1109, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r417,%dummy}, %rd1109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r418}, %rd1109;
	}
	shf.r.wrap.b32 	%r419, %r418, %r417, 8;
	shf.r.wrap.b32 	%r420, %r417, %r418, 8;
	mov.b64 	%rd575, {%r420, %r419};
	xor.b64  	%rd576, %rd575, %rd574;
	shf.r.wrap.b32 	%r421, %r418, %r417, 1;
	shf.r.wrap.b32 	%r422, %r417, %r418, 1;
	mov.b64 	%rd577, {%r422, %r421};
	xor.b64  	%rd578, %rd576, %rd577;
	add.s64 	%rd579, %rd578, %rd1108;
	add.s64 	%rd580, %rd579, %rd1101;
	add.s64 	%rd1108, %rd580, %rd573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r423,%dummy}, %rd1107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r424}, %rd1107;
	}
	shf.r.wrap.b32 	%r425, %r424, %r423, 19;
	shf.r.wrap.b32 	%r426, %r423, %r424, 19;
	mov.b64 	%rd581, {%r426, %r425};
	shf.l.wrap.b32 	%r427, %r423, %r424, 3;
	shf.l.wrap.b32 	%r428, %r424, %r423, 3;
	mov.b64 	%rd582, {%r428, %r427};
	shr.u64 	%rd583, %rd1107, 6;
	xor.b64  	%rd584, %rd582, %rd583;
	xor.b64  	%rd585, %rd584, %rd581;
	shr.u64 	%rd586, %rd1110, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r429,%dummy}, %rd1110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r430}, %rd1110;
	}
	shf.r.wrap.b32 	%r431, %r430, %r429, 8;
	shf.r.wrap.b32 	%r432, %r429, %r430, 8;
	mov.b64 	%rd587, {%r432, %r431};
	xor.b64  	%rd588, %rd587, %rd586;
	shf.r.wrap.b32 	%r433, %r430, %r429, 1;
	shf.r.wrap.b32 	%r434, %r429, %r430, 1;
	mov.b64 	%rd589, {%r434, %r433};
	xor.b64  	%rd590, %rd588, %rd589;
	add.s64 	%rd591, %rd590, %rd1109;
	add.s64 	%rd592, %rd591, %rd1102;
	add.s64 	%rd1109, %rd592, %rd585;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r435,%dummy}, %rd1108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r436}, %rd1108;
	}
	shf.r.wrap.b32 	%r437, %r436, %r435, 19;
	shf.r.wrap.b32 	%r438, %r435, %r436, 19;
	mov.b64 	%rd593, {%r438, %r437};
	shf.l.wrap.b32 	%r439, %r435, %r436, 3;
	shf.l.wrap.b32 	%r440, %r436, %r435, 3;
	mov.b64 	%rd594, {%r440, %r439};
	shr.u64 	%rd595, %rd1108, 6;
	xor.b64  	%rd596, %rd594, %rd595;
	xor.b64  	%rd597, %rd596, %rd593;
	shr.u64 	%rd598, %rd1111, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r441,%dummy}, %rd1111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r442}, %rd1111;
	}
	shf.r.wrap.b32 	%r443, %r442, %r441, 8;
	shf.r.wrap.b32 	%r444, %r441, %r442, 8;
	mov.b64 	%rd599, {%r444, %r443};
	xor.b64  	%rd600, %rd599, %rd598;
	shf.r.wrap.b32 	%r445, %r442, %r441, 1;
	shf.r.wrap.b32 	%r446, %r441, %r442, 1;
	mov.b64 	%rd601, {%r446, %r445};
	xor.b64  	%rd602, %rd600, %rd601;
	add.s64 	%rd603, %rd602, %rd1110;
	add.s64 	%rd604, %rd603, %rd1103;
	add.s64 	%rd1110, %rd604, %rd597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r447,%dummy}, %rd1109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r448}, %rd1109;
	}
	shf.r.wrap.b32 	%r449, %r448, %r447, 19;
	shf.r.wrap.b32 	%r450, %r447, %r448, 19;
	mov.b64 	%rd605, {%r450, %r449};
	shf.l.wrap.b32 	%r451, %r447, %r448, 3;
	shf.l.wrap.b32 	%r452, %r448, %r447, 3;
	mov.b64 	%rd606, {%r452, %r451};
	shr.u64 	%rd607, %rd1109, 6;
	xor.b64  	%rd608, %rd606, %rd607;
	xor.b64  	%rd609, %rd608, %rd605;
	shr.u64 	%rd610, %rd1112, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r453,%dummy}, %rd1112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r454}, %rd1112;
	}
	shf.r.wrap.b32 	%r455, %r454, %r453, 8;
	shf.r.wrap.b32 	%r456, %r453, %r454, 8;
	mov.b64 	%rd611, {%r456, %r455};
	xor.b64  	%rd612, %rd611, %rd610;
	shf.r.wrap.b32 	%r457, %r454, %r453, 1;
	shf.r.wrap.b32 	%r458, %r453, %r454, 1;
	mov.b64 	%rd613, {%r458, %r457};
	xor.b64  	%rd614, %rd612, %rd613;
	add.s64 	%rd615, %rd614, %rd1111;
	add.s64 	%rd616, %rd615, %rd1104;
	add.s64 	%rd1111, %rd616, %rd609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r459,%dummy}, %rd1110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r460}, %rd1110;
	}
	shf.r.wrap.b32 	%r461, %r460, %r459, 19;
	shf.r.wrap.b32 	%r462, %r459, %r460, 19;
	mov.b64 	%rd617, {%r462, %r461};
	shf.l.wrap.b32 	%r463, %r459, %r460, 3;
	shf.l.wrap.b32 	%r464, %r460, %r459, 3;
	mov.b64 	%rd618, {%r464, %r463};
	shr.u64 	%rd619, %rd1110, 6;
	xor.b64  	%rd620, %rd618, %rd619;
	xor.b64  	%rd621, %rd620, %rd617;
	shr.u64 	%rd622, %rd1113, 7;
	shf.r.wrap.b32 	%r465, %r303, %r304, 8;
	shf.r.wrap.b32 	%r466, %r304, %r303, 8;
	mov.b64 	%rd623, {%r466, %r465};
	xor.b64  	%rd624, %rd623, %rd622;
	shf.r.wrap.b32 	%r467, %r303, %r304, 1;
	shf.r.wrap.b32 	%r468, %r304, %r303, 1;
	mov.b64 	%rd625, {%r468, %r467};
	xor.b64  	%rd626, %rd624, %rd625;
	add.s64 	%rd627, %rd626, %rd1112;
	add.s64 	%rd628, %rd627, %rd1105;
	add.s64 	%rd1112, %rd628, %rd621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r469,%dummy}, %rd1111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r470}, %rd1111;
	}
	shf.r.wrap.b32 	%r471, %r470, %r469, 19;
	shf.r.wrap.b32 	%r472, %r469, %r470, 19;
	mov.b64 	%rd629, {%r472, %r471};
	shf.l.wrap.b32 	%r473, %r469, %r470, 3;
	shf.l.wrap.b32 	%r474, %r470, %r469, 3;
	mov.b64 	%rd630, {%r474, %r473};
	shr.u64 	%rd631, %rd1111, 6;
	xor.b64  	%rd632, %rd630, %rd631;
	xor.b64  	%rd633, %rd632, %rd629;
	shr.u64 	%rd634, %rd1114, 7;
	shf.r.wrap.b32 	%r475, %r315, %r316, 8;
	shf.r.wrap.b32 	%r476, %r316, %r315, 8;
	mov.b64 	%rd635, {%r476, %r475};
	xor.b64  	%rd636, %rd635, %rd634;
	shf.r.wrap.b32 	%r477, %r315, %r316, 1;
	shf.r.wrap.b32 	%r478, %r316, %r315, 1;
	mov.b64 	%rd637, {%r478, %r477};
	xor.b64  	%rd638, %rd636, %rd637;
	add.s64 	%rd639, %rd638, %rd1113;
	add.s64 	%rd640, %rd639, %rd1106;
	add.s64 	%rd1113, %rd640, %rd633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r479,%dummy}, %rd1112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r480}, %rd1112;
	}
	shf.r.wrap.b32 	%r481, %r480, %r479, 19;
	shf.r.wrap.b32 	%r482, %r479, %r480, 19;
	mov.b64 	%rd641, {%r482, %r481};
	shf.l.wrap.b32 	%r483, %r479, %r480, 3;
	shf.l.wrap.b32 	%r484, %r480, %r479, 3;
	mov.b64 	%rd642, {%r484, %r483};
	shr.u64 	%rd643, %rd1112, 6;
	xor.b64  	%rd644, %rd642, %rd643;
	xor.b64  	%rd645, %rd644, %rd641;
	shf.r.wrap.b32 	%r485, %r328, %r327, 1;
	shf.r.wrap.b32 	%r486, %r327, %r328, 1;
	mov.b64 	%rd646, {%r486, %r485};
	shf.r.wrap.b32 	%r487, %r328, %r327, 8;
	shf.r.wrap.b32 	%r488, %r327, %r328, 8;
	mov.b64 	%rd647, {%r488, %r487};
	shr.u64 	%rd648, %rd1099, 7;
	xor.b64  	%rd649, %rd647, %rd648;
	xor.b64  	%rd650, %rd649, %rd646;
	add.s64 	%rd651, %rd650, %rd1114;
	add.s64 	%rd652, %rd651, %rd1107;
	add.s64 	%rd1114, %rd652, %rd645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r489,%dummy}, %rd1098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r490}, %rd1098;
	}
	shf.r.wrap.b32 	%r491, %r490, %r489, 18;
	shf.r.wrap.b32 	%r492, %r489, %r490, 18;
	mov.b64 	%rd653, {%r492, %r491};
	shf.r.wrap.b32 	%r493, %r490, %r489, 14;
	shf.r.wrap.b32 	%r494, %r489, %r490, 14;
	mov.b64 	%rd654, {%r494, %r493};
	xor.b64  	%rd655, %rd654, %rd653;
	shf.l.wrap.b32 	%r495, %r489, %r490, 23;
	shf.l.wrap.b32 	%r496, %r490, %r489, 23;
	mov.b64 	%rd656, {%r496, %r495};
	xor.b64  	%rd657, %rd655, %rd656;
	xor.b64  	%rd658, %rd1096, %rd1097;
	and.b64  	%rd659, %rd658, %rd1098;
	xor.b64  	%rd660, %rd659, %rd1096;
	add.s64 	%rd661, %rd1099, %rd1095;
	add.s64 	%rd662, %rd661, %rd657;
	add.s64 	%rd663, %rd662, %rd660;
	add.s64 	%rd84, %rd1094, 128;
	ld.const.u64 	%rd664, [%rd1094+128];
	add.s64 	%rd665, %rd663, %rd664;
	add.s64 	%rd666, %rd665, %rd1118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r497}, %rd1115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r498,%dummy}, %rd1115;
	}
	shf.l.wrap.b32 	%r499, %r498, %r497, 30;
	shf.l.wrap.b32 	%r500, %r497, %r498, 30;
	mov.b64 	%rd667, {%r500, %r499};
	shf.r.wrap.b32 	%r501, %r497, %r498, 28;
	shf.r.wrap.b32 	%r502, %r498, %r497, 28;
	mov.b64 	%rd668, {%r502, %r501};
	xor.b64  	%rd669, %rd668, %rd667;
	shf.l.wrap.b32 	%r503, %r498, %r497, 25;
	shf.l.wrap.b32 	%r504, %r497, %r498, 25;
	mov.b64 	%rd670, {%r504, %r503};
	xor.b64  	%rd671, %rd669, %rd670;
	xor.b64  	%rd672, %rd1115, %rd1116;
	and.b64  	%rd673, %rd672, %rd1117;
	and.b64  	%rd674, %rd1115, %rd1116;
	or.b64  	%rd675, %rd673, %rd674;
	add.s64 	%rd676, %rd671, %rd675;
	add.s64 	%rd677, %rd676, %rd665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r505,%dummy}, %rd666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r506}, %rd666;
	}
	shf.r.wrap.b32 	%r507, %r506, %r505, 14;
	shf.r.wrap.b32 	%r508, %r505, %r506, 14;
	mov.b64 	%rd678, {%r508, %r507};
	shf.r.wrap.b32 	%r509, %r506, %r505, 18;
	shf.r.wrap.b32 	%r510, %r505, %r506, 18;
	mov.b64 	%rd679, {%r510, %r509};
	xor.b64  	%rd680, %rd678, %rd679;
	shf.l.wrap.b32 	%r511, %r505, %r506, 23;
	shf.l.wrap.b32 	%r512, %r506, %r505, 23;
	mov.b64 	%rd681, {%r512, %r511};
	xor.b64  	%rd682, %rd680, %rd681;
	xor.b64  	%rd683, %rd1097, %rd1098;
	and.b64  	%rd684, %rd666, %rd683;
	xor.b64  	%rd685, %rd684, %rd1097;
	add.s64 	%rd686, %rd1100, %rd1096;
	ld.const.u64 	%rd687, [%rd1094+136];
	add.s64 	%rd688, %rd686, %rd687;
	add.s64 	%rd689, %rd688, %rd685;
	add.s64 	%rd690, %rd689, %rd682;
	add.s64 	%rd691, %rd690, %rd1117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r513,%dummy}, %rd677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r514}, %rd677;
	}
	shf.r.wrap.b32 	%r515, %r514, %r513, 28;
	shf.r.wrap.b32 	%r516, %r513, %r514, 28;
	mov.b64 	%rd692, {%r516, %r515};
	shf.l.wrap.b32 	%r517, %r513, %r514, 30;
	shf.l.wrap.b32 	%r518, %r514, %r513, 30;
	mov.b64 	%rd693, {%r518, %r517};
	xor.b64  	%rd694, %rd692, %rd693;
	shf.l.wrap.b32 	%r519, %r513, %r514, 25;
	shf.l.wrap.b32 	%r520, %r514, %r513, 25;
	mov.b64 	%rd695, {%r520, %r519};
	xor.b64  	%rd696, %rd694, %rd695;
	and.b64  	%rd697, %rd677, %rd1115;
	xor.b64  	%rd698, %rd677, %rd1115;
	and.b64  	%rd699, %rd698, %rd1116;
	or.b64  	%rd700, %rd699, %rd697;
	add.s64 	%rd701, %rd696, %rd700;
	add.s64 	%rd702, %rd701, %rd690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r521,%dummy}, %rd691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r522}, %rd691;
	}
	shf.r.wrap.b32 	%r523, %r522, %r521, 14;
	shf.r.wrap.b32 	%r524, %r521, %r522, 14;
	mov.b64 	%rd703, {%r524, %r523};
	shf.r.wrap.b32 	%r525, %r522, %r521, 18;
	shf.r.wrap.b32 	%r526, %r521, %r522, 18;
	mov.b64 	%rd704, {%r526, %r525};
	xor.b64  	%rd705, %rd703, %rd704;
	shf.l.wrap.b32 	%r527, %r521, %r522, 23;
	shf.l.wrap.b32 	%r528, %r522, %r521, 23;
	mov.b64 	%rd706, {%r528, %r527};
	xor.b64  	%rd707, %rd705, %rd706;
	xor.b64  	%rd708, %rd666, %rd1098;
	and.b64  	%rd709, %rd691, %rd708;
	xor.b64  	%rd710, %rd709, %rd1098;
	add.s64 	%rd711, %rd1101, %rd1097;
	ld.const.u64 	%rd712, [%rd1094+144];
	add.s64 	%rd713, %rd711, %rd712;
	add.s64 	%rd714, %rd713, %rd710;
	add.s64 	%rd715, %rd714, %rd707;
	add.s64 	%rd716, %rd715, %rd1116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r529,%dummy}, %rd702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r530}, %rd702;
	}
	shf.r.wrap.b32 	%r531, %r530, %r529, 28;
	shf.r.wrap.b32 	%r532, %r529, %r530, 28;
	mov.b64 	%rd717, {%r532, %r531};
	shf.l.wrap.b32 	%r533, %r529, %r530, 30;
	shf.l.wrap.b32 	%r534, %r530, %r529, 30;
	mov.b64 	%rd718, {%r534, %r533};
	xor.b64  	%rd719, %rd717, %rd718;
	shf.l.wrap.b32 	%r535, %r529, %r530, 25;
	shf.l.wrap.b32 	%r536, %r530, %r529, 25;
	mov.b64 	%rd720, {%r536, %r535};
	xor.b64  	%rd721, %rd719, %rd720;
	and.b64  	%rd722, %rd702, %rd677;
	xor.b64  	%rd723, %rd702, %rd677;
	and.b64  	%rd724, %rd723, %rd1115;
	or.b64  	%rd725, %rd724, %rd722;
	add.s64 	%rd726, %rd721, %rd725;
	add.s64 	%rd727, %rd726, %rd715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r537,%dummy}, %rd716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r538}, %rd716;
	}
	shf.r.wrap.b32 	%r539, %r538, %r537, 14;
	shf.r.wrap.b32 	%r540, %r537, %r538, 14;
	mov.b64 	%rd728, {%r540, %r539};
	shf.r.wrap.b32 	%r541, %r538, %r537, 18;
	shf.r.wrap.b32 	%r542, %r537, %r538, 18;
	mov.b64 	%rd729, {%r542, %r541};
	xor.b64  	%rd730, %rd728, %rd729;
	shf.l.wrap.b32 	%r543, %r537, %r538, 23;
	shf.l.wrap.b32 	%r544, %r538, %r537, 23;
	mov.b64 	%rd731, {%r544, %r543};
	xor.b64  	%rd732, %rd730, %rd731;
	xor.b64  	%rd733, %rd691, %rd666;
	and.b64  	%rd734, %rd716, %rd733;
	xor.b64  	%rd735, %rd734, %rd666;
	add.s64 	%rd736, %rd1102, %rd1098;
	ld.const.u64 	%rd737, [%rd1094+152];
	add.s64 	%rd738, %rd736, %rd737;
	add.s64 	%rd739, %rd738, %rd735;
	add.s64 	%rd740, %rd739, %rd732;
	add.s64 	%rd741, %rd740, %rd1115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r545,%dummy}, %rd727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r546}, %rd727;
	}
	shf.r.wrap.b32 	%r547, %r546, %r545, 28;
	shf.r.wrap.b32 	%r548, %r545, %r546, 28;
	mov.b64 	%rd742, {%r548, %r547};
	shf.l.wrap.b32 	%r549, %r545, %r546, 30;
	shf.l.wrap.b32 	%r550, %r546, %r545, 30;
	mov.b64 	%rd743, {%r550, %r549};
	xor.b64  	%rd744, %rd742, %rd743;
	shf.l.wrap.b32 	%r551, %r545, %r546, 25;
	shf.l.wrap.b32 	%r552, %r546, %r545, 25;
	mov.b64 	%rd745, {%r552, %r551};
	xor.b64  	%rd746, %rd744, %rd745;
	and.b64  	%rd747, %rd727, %rd702;
	xor.b64  	%rd748, %rd727, %rd702;
	and.b64  	%rd749, %rd748, %rd677;
	or.b64  	%rd750, %rd749, %rd747;
	add.s64 	%rd751, %rd746, %rd750;
	add.s64 	%rd752, %rd751, %rd740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r553,%dummy}, %rd741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r554}, %rd741;
	}
	shf.r.wrap.b32 	%r555, %r554, %r553, 14;
	shf.r.wrap.b32 	%r556, %r553, %r554, 14;
	mov.b64 	%rd753, {%r556, %r555};
	shf.r.wrap.b32 	%r557, %r554, %r553, 18;
	shf.r.wrap.b32 	%r558, %r553, %r554, 18;
	mov.b64 	%rd754, {%r558, %r557};
	xor.b64  	%rd755, %rd753, %rd754;
	shf.l.wrap.b32 	%r559, %r553, %r554, 23;
	shf.l.wrap.b32 	%r560, %r554, %r553, 23;
	mov.b64 	%rd756, {%r560, %r559};
	xor.b64  	%rd757, %rd755, %rd756;
	xor.b64  	%rd758, %rd716, %rd691;
	and.b64  	%rd759, %rd741, %rd758;
	xor.b64  	%rd760, %rd759, %rd691;
	add.s64 	%rd761, %rd666, %rd1103;
	ld.const.u64 	%rd762, [%rd1094+160];
	add.s64 	%rd763, %rd761, %rd762;
	add.s64 	%rd764, %rd763, %rd760;
	add.s64 	%rd765, %rd764, %rd757;
	add.s64 	%rd766, %rd765, %rd677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r561,%dummy}, %rd752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r562}, %rd752;
	}
	shf.r.wrap.b32 	%r563, %r562, %r561, 28;
	shf.r.wrap.b32 	%r564, %r561, %r562, 28;
	mov.b64 	%rd767, {%r564, %r563};
	shf.l.wrap.b32 	%r565, %r561, %r562, 30;
	shf.l.wrap.b32 	%r566, %r562, %r561, 30;
	mov.b64 	%rd768, {%r566, %r565};
	xor.b64  	%rd769, %rd767, %rd768;
	shf.l.wrap.b32 	%r567, %r561, %r562, 25;
	shf.l.wrap.b32 	%r568, %r562, %r561, 25;
	mov.b64 	%rd770, {%r568, %r567};
	xor.b64  	%rd771, %rd769, %rd770;
	and.b64  	%rd772, %rd752, %rd727;
	xor.b64  	%rd773, %rd752, %rd727;
	and.b64  	%rd774, %rd773, %rd702;
	or.b64  	%rd775, %rd774, %rd772;
	add.s64 	%rd776, %rd771, %rd775;
	add.s64 	%rd777, %rd776, %rd765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r569,%dummy}, %rd766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r570}, %rd766;
	}
	shf.r.wrap.b32 	%r571, %r570, %r569, 14;
	shf.r.wrap.b32 	%r572, %r569, %r570, 14;
	mov.b64 	%rd778, {%r572, %r571};
	shf.r.wrap.b32 	%r573, %r570, %r569, 18;
	shf.r.wrap.b32 	%r574, %r569, %r570, 18;
	mov.b64 	%rd779, {%r574, %r573};
	xor.b64  	%rd780, %rd778, %rd779;
	shf.l.wrap.b32 	%r575, %r569, %r570, 23;
	shf.l.wrap.b32 	%r576, %r570, %r569, 23;
	mov.b64 	%rd781, {%r576, %r575};
	xor.b64  	%rd782, %rd780, %rd781;
	xor.b64  	%rd783, %rd741, %rd716;
	and.b64  	%rd784, %rd766, %rd783;
	xor.b64  	%rd785, %rd784, %rd716;
	ld.const.u64 	%rd786, [%rd1094+168];
	add.s64 	%rd787, %rd786, %rd1104;
	add.s64 	%rd788, %rd787, %rd691;
	add.s64 	%rd789, %rd788, %rd785;
	add.s64 	%rd790, %rd789, %rd782;
	add.s64 	%rd791, %rd790, %rd702;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r577,%dummy}, %rd777;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r578}, %rd777;
	}
	shf.r.wrap.b32 	%r579, %r578, %r577, 28;
	shf.r.wrap.b32 	%r580, %r577, %r578, 28;
	mov.b64 	%rd792, {%r580, %r579};
	shf.l.wrap.b32 	%r581, %r577, %r578, 30;
	shf.l.wrap.b32 	%r582, %r578, %r577, 30;
	mov.b64 	%rd793, {%r582, %r581};
	xor.b64  	%rd794, %rd792, %rd793;
	shf.l.wrap.b32 	%r583, %r577, %r578, 25;
	shf.l.wrap.b32 	%r584, %r578, %r577, 25;
	mov.b64 	%rd795, {%r584, %r583};
	xor.b64  	%rd796, %rd794, %rd795;
	and.b64  	%rd797, %rd777, %rd752;
	xor.b64  	%rd798, %rd777, %rd752;
	and.b64  	%rd799, %rd798, %rd727;
	or.b64  	%rd800, %rd799, %rd797;
	add.s64 	%rd801, %rd796, %rd800;
	add.s64 	%rd802, %rd801, %rd790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r585,%dummy}, %rd791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r586}, %rd791;
	}
	shf.r.wrap.b32 	%r587, %r586, %r585, 14;
	shf.r.wrap.b32 	%r588, %r585, %r586, 14;
	mov.b64 	%rd803, {%r588, %r587};
	shf.r.wrap.b32 	%r589, %r586, %r585, 18;
	shf.r.wrap.b32 	%r590, %r585, %r586, 18;
	mov.b64 	%rd804, {%r590, %r589};
	xor.b64  	%rd805, %rd803, %rd804;
	shf.l.wrap.b32 	%r591, %r585, %r586, 23;
	shf.l.wrap.b32 	%r592, %r586, %r585, 23;
	mov.b64 	%rd806, {%r592, %r591};
	xor.b64  	%rd807, %rd805, %rd806;
	xor.b64  	%rd808, %rd766, %rd741;
	and.b64  	%rd809, %rd791, %rd808;
	xor.b64  	%rd810, %rd809, %rd741;
	ld.const.u64 	%rd811, [%rd1094+176];
	add.s64 	%rd812, %rd811, %rd1105;
	add.s64 	%rd813, %rd812, %rd716;
	add.s64 	%rd814, %rd813, %rd810;
	add.s64 	%rd815, %rd814, %rd807;
	add.s64 	%rd816, %rd815, %rd727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r593,%dummy}, %rd802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r594}, %rd802;
	}
	shf.r.wrap.b32 	%r595, %r594, %r593, 28;
	shf.r.wrap.b32 	%r596, %r593, %r594, 28;
	mov.b64 	%rd817, {%r596, %r595};
	shf.l.wrap.b32 	%r597, %r593, %r594, 30;
	shf.l.wrap.b32 	%r598, %r594, %r593, 30;
	mov.b64 	%rd818, {%r598, %r597};
	xor.b64  	%rd819, %rd817, %rd818;
	shf.l.wrap.b32 	%r599, %r593, %r594, 25;
	shf.l.wrap.b32 	%r600, %r594, %r593, 25;
	mov.b64 	%rd820, {%r600, %r599};
	xor.b64  	%rd821, %rd819, %rd820;
	and.b64  	%rd822, %rd802, %rd777;
	xor.b64  	%rd823, %rd802, %rd777;
	and.b64  	%rd824, %rd823, %rd752;
	or.b64  	%rd825, %rd824, %rd822;
	add.s64 	%rd826, %rd821, %rd825;
	add.s64 	%rd827, %rd826, %rd815;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r601,%dummy}, %rd816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r602}, %rd816;
	}
	shf.r.wrap.b32 	%r603, %r602, %r601, 14;
	shf.r.wrap.b32 	%r604, %r601, %r602, 14;
	mov.b64 	%rd828, {%r604, %r603};
	shf.r.wrap.b32 	%r605, %r602, %r601, 18;
	shf.r.wrap.b32 	%r606, %r601, %r602, 18;
	mov.b64 	%rd829, {%r606, %r605};
	xor.b64  	%rd830, %rd828, %rd829;
	shf.l.wrap.b32 	%r607, %r601, %r602, 23;
	shf.l.wrap.b32 	%r608, %r602, %r601, 23;
	mov.b64 	%rd831, {%r608, %r607};
	xor.b64  	%rd832, %rd830, %rd831;
	xor.b64  	%rd833, %rd791, %rd766;
	and.b64  	%rd834, %rd816, %rd833;
	xor.b64  	%rd835, %rd834, %rd766;
	ld.const.u64 	%rd836, [%rd1094+184];
	add.s64 	%rd837, %rd836, %rd1106;
	add.s64 	%rd838, %rd837, %rd741;
	add.s64 	%rd839, %rd838, %rd835;
	add.s64 	%rd840, %rd839, %rd832;
	add.s64 	%rd841, %rd840, %rd752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r609,%dummy}, %rd827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r610}, %rd827;
	}
	shf.r.wrap.b32 	%r611, %r610, %r609, 28;
	shf.r.wrap.b32 	%r612, %r609, %r610, 28;
	mov.b64 	%rd842, {%r612, %r611};
	shf.l.wrap.b32 	%r613, %r609, %r610, 30;
	shf.l.wrap.b32 	%r614, %r610, %r609, 30;
	mov.b64 	%rd843, {%r614, %r613};
	xor.b64  	%rd844, %rd842, %rd843;
	shf.l.wrap.b32 	%r615, %r609, %r610, 25;
	shf.l.wrap.b32 	%r616, %r610, %r609, 25;
	mov.b64 	%rd845, {%r616, %r615};
	xor.b64  	%rd846, %rd844, %rd845;
	and.b64  	%rd847, %rd827, %rd802;
	xor.b64  	%rd848, %rd827, %rd802;
	and.b64  	%rd849, %rd848, %rd777;
	or.b64  	%rd850, %rd849, %rd847;
	add.s64 	%rd851, %rd846, %rd850;
	add.s64 	%rd852, %rd851, %rd840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r617,%dummy}, %rd841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r618}, %rd841;
	}
	shf.r.wrap.b32 	%r619, %r618, %r617, 14;
	shf.r.wrap.b32 	%r620, %r617, %r618, 14;
	mov.b64 	%rd853, {%r620, %r619};
	shf.r.wrap.b32 	%r621, %r618, %r617, 18;
	shf.r.wrap.b32 	%r622, %r617, %r618, 18;
	mov.b64 	%rd854, {%r622, %r621};
	xor.b64  	%rd855, %rd853, %rd854;
	shf.l.wrap.b32 	%r623, %r617, %r618, 23;
	shf.l.wrap.b32 	%r624, %r618, %r617, 23;
	mov.b64 	%rd856, {%r624, %r623};
	xor.b64  	%rd857, %rd855, %rd856;
	xor.b64  	%rd858, %rd816, %rd791;
	and.b64  	%rd859, %rd841, %rd858;
	xor.b64  	%rd860, %rd859, %rd791;
	ld.const.u64 	%rd861, [%rd1094+192];
	add.s64 	%rd862, %rd861, %rd1107;
	add.s64 	%rd863, %rd862, %rd766;
	add.s64 	%rd864, %rd863, %rd860;
	add.s64 	%rd865, %rd864, %rd857;
	add.s64 	%rd866, %rd865, %rd777;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r625,%dummy}, %rd852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r626}, %rd852;
	}
	shf.r.wrap.b32 	%r627, %r626, %r625, 28;
	shf.r.wrap.b32 	%r628, %r625, %r626, 28;
	mov.b64 	%rd867, {%r628, %r627};
	shf.l.wrap.b32 	%r629, %r625, %r626, 30;
	shf.l.wrap.b32 	%r630, %r626, %r625, 30;
	mov.b64 	%rd868, {%r630, %r629};
	xor.b64  	%rd869, %rd867, %rd868;
	shf.l.wrap.b32 	%r631, %r625, %r626, 25;
	shf.l.wrap.b32 	%r632, %r626, %r625, 25;
	mov.b64 	%rd870, {%r632, %r631};
	xor.b64  	%rd871, %rd869, %rd870;
	and.b64  	%rd872, %rd852, %rd827;
	xor.b64  	%rd873, %rd852, %rd827;
	and.b64  	%rd874, %rd873, %rd802;
	or.b64  	%rd875, %rd874, %rd872;
	add.s64 	%rd876, %rd871, %rd875;
	add.s64 	%rd877, %rd876, %rd865;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r633,%dummy}, %rd866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r634}, %rd866;
	}
	shf.r.wrap.b32 	%r635, %r634, %r633, 14;
	shf.r.wrap.b32 	%r636, %r633, %r634, 14;
	mov.b64 	%rd878, {%r636, %r635};
	shf.r.wrap.b32 	%r637, %r634, %r633, 18;
	shf.r.wrap.b32 	%r638, %r633, %r634, 18;
	mov.b64 	%rd879, {%r638, %r637};
	xor.b64  	%rd880, %rd878, %rd879;
	shf.l.wrap.b32 	%r639, %r633, %r634, 23;
	shf.l.wrap.b32 	%r640, %r634, %r633, 23;
	mov.b64 	%rd881, {%r640, %r639};
	xor.b64  	%rd882, %rd880, %rd881;
	xor.b64  	%rd883, %rd841, %rd816;
	and.b64  	%rd884, %rd866, %rd883;
	xor.b64  	%rd885, %rd884, %rd816;
	ld.const.u64 	%rd886, [%rd1094+200];
	add.s64 	%rd887, %rd886, %rd1108;
	add.s64 	%rd888, %rd887, %rd791;
	add.s64 	%rd889, %rd888, %rd885;
	add.s64 	%rd890, %rd889, %rd882;
	add.s64 	%rd891, %rd890, %rd802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r641,%dummy}, %rd877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r642}, %rd877;
	}
	shf.r.wrap.b32 	%r643, %r642, %r641, 28;
	shf.r.wrap.b32 	%r644, %r641, %r642, 28;
	mov.b64 	%rd892, {%r644, %r643};
	shf.l.wrap.b32 	%r645, %r641, %r642, 30;
	shf.l.wrap.b32 	%r646, %r642, %r641, 30;
	mov.b64 	%rd893, {%r646, %r645};
	xor.b64  	%rd894, %rd892, %rd893;
	shf.l.wrap.b32 	%r647, %r641, %r642, 25;
	shf.l.wrap.b32 	%r648, %r642, %r641, 25;
	mov.b64 	%rd895, {%r648, %r647};
	xor.b64  	%rd896, %rd894, %rd895;
	and.b64  	%rd897, %rd877, %rd852;
	xor.b64  	%rd898, %rd877, %rd852;
	and.b64  	%rd899, %rd898, %rd827;
	or.b64  	%rd900, %rd899, %rd897;
	add.s64 	%rd901, %rd896, %rd900;
	add.s64 	%rd902, %rd901, %rd890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r649,%dummy}, %rd891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r650}, %rd891;
	}
	shf.r.wrap.b32 	%r651, %r650, %r649, 14;
	shf.r.wrap.b32 	%r652, %r649, %r650, 14;
	mov.b64 	%rd903, {%r652, %r651};
	shf.r.wrap.b32 	%r653, %r650, %r649, 18;
	shf.r.wrap.b32 	%r654, %r649, %r650, 18;
	mov.b64 	%rd904, {%r654, %r653};
	xor.b64  	%rd905, %rd903, %rd904;
	shf.l.wrap.b32 	%r655, %r649, %r650, 23;
	shf.l.wrap.b32 	%r656, %r650, %r649, 23;
	mov.b64 	%rd906, {%r656, %r655};
	xor.b64  	%rd907, %rd905, %rd906;
	xor.b64  	%rd908, %rd866, %rd841;
	and.b64  	%rd909, %rd891, %rd908;
	xor.b64  	%rd910, %rd909, %rd841;
	ld.const.u64 	%rd911, [%rd1094+208];
	add.s64 	%rd912, %rd911, %rd1109;
	add.s64 	%rd913, %rd912, %rd816;
	add.s64 	%rd914, %rd913, %rd910;
	add.s64 	%rd915, %rd914, %rd907;
	add.s64 	%rd916, %rd915, %rd827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r657,%dummy}, %rd902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r658}, %rd902;
	}
	shf.r.wrap.b32 	%r659, %r658, %r657, 28;
	shf.r.wrap.b32 	%r660, %r657, %r658, 28;
	mov.b64 	%rd917, {%r660, %r659};
	shf.l.wrap.b32 	%r661, %r657, %r658, 30;
	shf.l.wrap.b32 	%r662, %r658, %r657, 30;
	mov.b64 	%rd918, {%r662, %r661};
	xor.b64  	%rd919, %rd917, %rd918;
	shf.l.wrap.b32 	%r663, %r657, %r658, 25;
	shf.l.wrap.b32 	%r664, %r658, %r657, 25;
	mov.b64 	%rd920, {%r664, %r663};
	xor.b64  	%rd921, %rd919, %rd920;
	and.b64  	%rd922, %rd902, %rd877;
	xor.b64  	%rd923, %rd902, %rd877;
	and.b64  	%rd924, %rd923, %rd852;
	or.b64  	%rd925, %rd924, %rd922;
	add.s64 	%rd926, %rd921, %rd925;
	add.s64 	%rd927, %rd926, %rd915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r665,%dummy}, %rd916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r666}, %rd916;
	}
	shf.r.wrap.b32 	%r667, %r666, %r665, 14;
	shf.r.wrap.b32 	%r668, %r665, %r666, 14;
	mov.b64 	%rd928, {%r668, %r667};
	shf.r.wrap.b32 	%r669, %r666, %r665, 18;
	shf.r.wrap.b32 	%r670, %r665, %r666, 18;
	mov.b64 	%rd929, {%r670, %r669};
	xor.b64  	%rd930, %rd928, %rd929;
	shf.l.wrap.b32 	%r671, %r665, %r666, 23;
	shf.l.wrap.b32 	%r672, %r666, %r665, 23;
	mov.b64 	%rd931, {%r672, %r671};
	xor.b64  	%rd932, %rd930, %rd931;
	xor.b64  	%rd933, %rd891, %rd866;
	and.b64  	%rd934, %rd916, %rd933;
	xor.b64  	%rd935, %rd934, %rd866;
	ld.const.u64 	%rd936, [%rd1094+216];
	add.s64 	%rd937, %rd936, %rd1110;
	add.s64 	%rd938, %rd937, %rd841;
	add.s64 	%rd939, %rd938, %rd935;
	add.s64 	%rd940, %rd939, %rd932;
	add.s64 	%rd941, %rd940, %rd852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r673,%dummy}, %rd927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r674}, %rd927;
	}
	shf.r.wrap.b32 	%r675, %r674, %r673, 28;
	shf.r.wrap.b32 	%r676, %r673, %r674, 28;
	mov.b64 	%rd942, {%r676, %r675};
	shf.l.wrap.b32 	%r677, %r673, %r674, 30;
	shf.l.wrap.b32 	%r678, %r674, %r673, 30;
	mov.b64 	%rd943, {%r678, %r677};
	xor.b64  	%rd944, %rd942, %rd943;
	shf.l.wrap.b32 	%r679, %r673, %r674, 25;
	shf.l.wrap.b32 	%r680, %r674, %r673, 25;
	mov.b64 	%rd945, {%r680, %r679};
	xor.b64  	%rd946, %rd944, %rd945;
	and.b64  	%rd947, %rd927, %rd902;
	xor.b64  	%rd948, %rd927, %rd902;
	and.b64  	%rd949, %rd948, %rd877;
	or.b64  	%rd950, %rd949, %rd947;
	add.s64 	%rd951, %rd946, %rd950;
	add.s64 	%rd952, %rd951, %rd940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r681,%dummy}, %rd941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r682}, %rd941;
	}
	shf.r.wrap.b32 	%r683, %r682, %r681, 14;
	shf.r.wrap.b32 	%r684, %r681, %r682, 14;
	mov.b64 	%rd953, {%r684, %r683};
	shf.r.wrap.b32 	%r685, %r682, %r681, 18;
	shf.r.wrap.b32 	%r686, %r681, %r682, 18;
	mov.b64 	%rd954, {%r686, %r685};
	xor.b64  	%rd955, %rd953, %rd954;
	shf.l.wrap.b32 	%r687, %r681, %r682, 23;
	shf.l.wrap.b32 	%r688, %r682, %r681, 23;
	mov.b64 	%rd956, {%r688, %r687};
	xor.b64  	%rd957, %rd955, %rd956;
	xor.b64  	%rd958, %rd916, %rd891;
	and.b64  	%rd959, %rd941, %rd958;
	xor.b64  	%rd960, %rd959, %rd891;
	ld.const.u64 	%rd961, [%rd1094+224];
	add.s64 	%rd962, %rd961, %rd1111;
	add.s64 	%rd963, %rd962, %rd866;
	add.s64 	%rd964, %rd963, %rd960;
	add.s64 	%rd965, %rd964, %rd957;
	add.s64 	%rd1095, %rd965, %rd877;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r689,%dummy}, %rd952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r690}, %rd952;
	}
	shf.r.wrap.b32 	%r691, %r690, %r689, 28;
	shf.r.wrap.b32 	%r692, %r689, %r690, 28;
	mov.b64 	%rd966, {%r692, %r691};
	shf.l.wrap.b32 	%r693, %r689, %r690, 30;
	shf.l.wrap.b32 	%r694, %r690, %r689, 30;
	mov.b64 	%rd967, {%r694, %r693};
	xor.b64  	%rd968, %rd966, %rd967;
	shf.l.wrap.b32 	%r695, %r689, %r690, 25;
	shf.l.wrap.b32 	%r696, %r690, %r689, 25;
	mov.b64 	%rd969, {%r696, %r695};
	xor.b64  	%rd970, %rd968, %rd969;
	and.b64  	%rd971, %rd952, %rd927;
	xor.b64  	%rd972, %rd952, %rd927;
	and.b64  	%rd973, %rd972, %rd902;
	or.b64  	%rd974, %rd973, %rd971;
	add.s64 	%rd975, %rd970, %rd974;
	add.s64 	%rd1118, %rd975, %rd965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r697,%dummy}, %rd1095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r698}, %rd1095;
	}
	shf.r.wrap.b32 	%r699, %r698, %r697, 14;
	shf.r.wrap.b32 	%r700, %r697, %r698, 14;
	mov.b64 	%rd976, {%r700, %r699};
	shf.r.wrap.b32 	%r701, %r698, %r697, 18;
	shf.r.wrap.b32 	%r702, %r697, %r698, 18;
	mov.b64 	%rd977, {%r702, %r701};
	xor.b64  	%rd978, %rd976, %rd977;
	shf.l.wrap.b32 	%r703, %r697, %r698, 23;
	shf.l.wrap.b32 	%r704, %r698, %r697, 23;
	mov.b64 	%rd979, {%r704, %r703};
	xor.b64  	%rd980, %rd978, %rd979;
	xor.b64  	%rd981, %rd941, %rd916;
	and.b64  	%rd982, %rd1095, %rd981;
	xor.b64  	%rd983, %rd982, %rd916;
	ld.const.u64 	%rd984, [%rd1094+232];
	add.s64 	%rd985, %rd984, %rd1112;
	add.s64 	%rd986, %rd985, %rd891;
	add.s64 	%rd987, %rd986, %rd983;
	add.s64 	%rd988, %rd987, %rd980;
	add.s64 	%rd1096, %rd988, %rd902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r705,%dummy}, %rd1118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r706}, %rd1118;
	}
	shf.r.wrap.b32 	%r707, %r706, %r705, 28;
	shf.r.wrap.b32 	%r708, %r705, %r706, 28;
	mov.b64 	%rd989, {%r708, %r707};
	shf.l.wrap.b32 	%r709, %r705, %r706, 30;
	shf.l.wrap.b32 	%r710, %r706, %r705, 30;
	mov.b64 	%rd990, {%r710, %r709};
	xor.b64  	%rd991, %rd989, %rd990;
	shf.l.wrap.b32 	%r711, %r705, %r706, 25;
	shf.l.wrap.b32 	%r712, %r706, %r705, 25;
	mov.b64 	%rd992, {%r712, %r711};
	xor.b64  	%rd993, %rd991, %rd992;
	and.b64  	%rd994, %rd1118, %rd952;
	xor.b64  	%rd995, %rd1118, %rd952;
	and.b64  	%rd996, %rd995, %rd927;
	or.b64  	%rd997, %rd996, %rd994;
	add.s64 	%rd998, %rd993, %rd997;
	add.s64 	%rd1117, %rd998, %rd988;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r713,%dummy}, %rd1096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r714}, %rd1096;
	}
	shf.r.wrap.b32 	%r715, %r714, %r713, 14;
	shf.r.wrap.b32 	%r716, %r713, %r714, 14;
	mov.b64 	%rd999, {%r716, %r715};
	shf.r.wrap.b32 	%r717, %r714, %r713, 18;
	shf.r.wrap.b32 	%r718, %r713, %r714, 18;
	mov.b64 	%rd1000, {%r718, %r717};
	xor.b64  	%rd1001, %rd999, %rd1000;
	shf.l.wrap.b32 	%r719, %r713, %r714, 23;
	shf.l.wrap.b32 	%r720, %r714, %r713, 23;
	mov.b64 	%rd1002, {%r720, %r719};
	xor.b64  	%rd1003, %rd1001, %rd1002;
	xor.b64  	%rd1004, %rd1095, %rd941;
	and.b64  	%rd1005, %rd1096, %rd1004;
	xor.b64  	%rd1006, %rd1005, %rd941;
	ld.const.u64 	%rd1007, [%rd1094+240];
	add.s64 	%rd1008, %rd1007, %rd1113;
	add.s64 	%rd1009, %rd1008, %rd916;
	add.s64 	%rd1010, %rd1009, %rd1006;
	add.s64 	%rd1011, %rd1010, %rd1003;
	add.s64 	%rd1097, %rd1011, %rd927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r721,%dummy}, %rd1117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r722}, %rd1117;
	}
	shf.r.wrap.b32 	%r723, %r722, %r721, 28;
	shf.r.wrap.b32 	%r724, %r721, %r722, 28;
	mov.b64 	%rd1012, {%r724, %r723};
	shf.l.wrap.b32 	%r725, %r721, %r722, 30;
	shf.l.wrap.b32 	%r726, %r722, %r721, 30;
	mov.b64 	%rd1013, {%r726, %r725};
	xor.b64  	%rd1014, %rd1012, %rd1013;
	shf.l.wrap.b32 	%r727, %r721, %r722, 25;
	shf.l.wrap.b32 	%r728, %r722, %r721, 25;
	mov.b64 	%rd1015, {%r728, %r727};
	xor.b64  	%rd1016, %rd1014, %rd1015;
	and.b64  	%rd1017, %rd1117, %rd1118;
	xor.b64  	%rd1018, %rd1117, %rd1118;
	and.b64  	%rd1019, %rd1018, %rd952;
	or.b64  	%rd1020, %rd1019, %rd1017;
	add.s64 	%rd1021, %rd1016, %rd1020;
	add.s64 	%rd1116, %rd1021, %rd1011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r729,%dummy}, %rd1097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r730}, %rd1097;
	}
	shf.r.wrap.b32 	%r731, %r730, %r729, 14;
	shf.r.wrap.b32 	%r732, %r729, %r730, 14;
	mov.b64 	%rd1022, {%r732, %r731};
	shf.r.wrap.b32 	%r733, %r730, %r729, 18;
	shf.r.wrap.b32 	%r734, %r729, %r730, 18;
	mov.b64 	%rd1023, {%r734, %r733};
	xor.b64  	%rd1024, %rd1022, %rd1023;
	shf.l.wrap.b32 	%r735, %r729, %r730, 23;
	shf.l.wrap.b32 	%r736, %r730, %r729, 23;
	mov.b64 	%rd1025, {%r736, %r735};
	xor.b64  	%rd1026, %rd1024, %rd1025;
	xor.b64  	%rd1027, %rd1096, %rd1095;
	and.b64  	%rd1028, %rd1097, %rd1027;
	xor.b64  	%rd1029, %rd1028, %rd1095;
	ld.const.u64 	%rd1030, [%rd1094+248];
	add.s64 	%rd1031, %rd1030, %rd1114;
	add.s64 	%rd1032, %rd1031, %rd941;
	add.s64 	%rd1033, %rd1032, %rd1029;
	add.s64 	%rd1034, %rd1033, %rd1026;
	add.s64 	%rd1098, %rd1034, %rd952;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r737,%dummy}, %rd1116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r738}, %rd1116;
	}
	shf.r.wrap.b32 	%r739, %r738, %r737, 28;
	shf.r.wrap.b32 	%r740, %r737, %r738, 28;
	mov.b64 	%rd1035, {%r740, %r739};
	shf.l.wrap.b32 	%r741, %r737, %r738, 30;
	shf.l.wrap.b32 	%r742, %r738, %r737, 30;
	mov.b64 	%rd1036, {%r742, %r741};
	xor.b64  	%rd1037, %rd1035, %rd1036;
	shf.l.wrap.b32 	%r743, %r737, %r738, 25;
	shf.l.wrap.b32 	%r744, %r738, %r737, 25;
	mov.b64 	%rd1038, {%r744, %r743};
	xor.b64  	%rd1039, %rd1037, %rd1038;
	and.b64  	%rd1040, %rd1116, %rd1117;
	xor.b64  	%rd1041, %rd1116, %rd1117;
	and.b64  	%rd1042, %rd1041, %rd1118;
	or.b64  	%rd1043, %rd1042, %rd1040;
	add.s64 	%rd1044, %rd1039, %rd1043;
	add.s64 	%rd1115, %rd1044, %rd1034;
	add.s32 	%r806, %r806, 16;
	setp.lt.s32	%p3, %r806, 80;
	mov.u64 	%rd1094, %rd84;
	@%p3 bra 	BB2_4;

	ld.param.u64 	%rd1074, [m01700_m16_param_6];
	mov.b64	{%r9, %r10}, %rd1095;
	mov.u32 	%r745, 1;
	mov.b64	{%r11, %r12}, %rd1118;
	shr.u32 	%r746, %r9, %r4;
	and.b32  	%r747, %r746, %r33;
	mul.wide.u32 	%rd1045, %r747, 4;
	add.s64 	%rd1046, %rd1074, %rd1045;
	and.b32  	%r748, %r9, 31;
	shl.b32 	%r13, %r745, %r748;
	ld.global.u32 	%r749, [%rd1046];
	and.b32  	%r750, %r749, %r13;
	setp.eq.s32	%p4, %r750, 0;
	@%p4 bra 	BB2_32;

	ld.param.u64 	%rd1075, [m01700_m16_param_7];
	shr.u32 	%r751, %r10, %r4;
	and.b32  	%r752, %r751, %r33;
	mul.wide.u32 	%rd1047, %r752, 4;
	add.s64 	%rd1048, %rd1075, %rd1047;
	and.b32  	%r753, %r10, 31;
	shl.b32 	%r14, %r745, %r753;
	ld.global.u32 	%r755, [%rd1048];
	and.b32  	%r756, %r755, %r14;
	setp.eq.s32	%p5, %r756, 0;
	@%p5 bra 	BB2_32;

	ld.param.u64 	%rd1076, [m01700_m16_param_8];
	shr.u32 	%r757, %r11, %r4;
	and.b32  	%r758, %r757, %r33;
	mul.wide.u32 	%rd1049, %r758, 4;
	add.s64 	%rd1050, %rd1076, %rd1049;
	and.b32  	%r759, %r11, 31;
	shl.b32 	%r15, %r745, %r759;
	ld.global.u32 	%r761, [%rd1050];
	and.b32  	%r762, %r761, %r15;
	setp.eq.s32	%p6, %r762, 0;
	@%p6 bra 	BB2_32;

	ld.param.u64 	%rd1086, [m01700_m16_param_9];
	shr.u32 	%r763, %r12, %r4;
	and.b32  	%r764, %r763, %r33;
	mul.wide.u32 	%rd1051, %r764, 4;
	add.s64 	%rd1052, %rd1086, %rd1051;
	and.b32  	%r765, %r12, 31;
	shl.b32 	%r16, %r745, %r765;
	ld.global.u32 	%r767, [%rd1052];
	and.b32  	%r768, %r767, %r16;
	setp.eq.s32	%p7, %r768, 0;
	@%p7 bra 	BB2_32;

	ld.param.u64 	%rd1087, [m01700_m16_param_10];
	shr.u32 	%r769, %r9, %r5;
	and.b32  	%r770, %r769, %r33;
	mul.wide.u32 	%rd1053, %r770, 4;
	add.s64 	%rd1054, %rd1087, %rd1053;
	ld.global.u32 	%r771, [%rd1054];
	and.b32  	%r772, %r771, %r13;
	setp.eq.s32	%p8, %r772, 0;
	@%p8 bra 	BB2_32;

	ld.param.u64 	%rd1088, [m01700_m16_param_11];
	shr.u32 	%r773, %r10, %r5;
	and.b32  	%r774, %r773, %r33;
	mul.wide.u32 	%rd1055, %r774, 4;
	add.s64 	%rd1056, %rd1088, %rd1055;
	ld.global.u32 	%r775, [%rd1056];
	and.b32  	%r776, %r775, %r14;
	setp.eq.s32	%p9, %r776, 0;
	@%p9 bra 	BB2_32;

	ld.param.u64 	%rd1089, [m01700_m16_param_12];
	shr.u32 	%r777, %r11, %r5;
	and.b32  	%r778, %r777, %r33;
	mul.wide.u32 	%rd1057, %r778, 4;
	add.s64 	%rd1058, %rd1089, %rd1057;
	ld.global.u32 	%r779, [%rd1058];
	and.b32  	%r780, %r779, %r15;
	setp.eq.s32	%p10, %r780, 0;
	@%p10 bra 	BB2_32;

	ld.param.u64 	%rd1090, [m01700_m16_param_13];
	shr.u32 	%r781, %r12, %r5;
	and.b32  	%r782, %r781, %r33;
	mul.wide.u32 	%rd1059, %r782, 4;
	add.s64 	%rd1060, %rd1090, %rd1059;
	ld.global.u32 	%r783, [%rd1060];
	and.b32  	%r784, %r783, %r16;
	setp.eq.s32	%p11, %r784, 0;
	@%p11 bra 	BB2_32;

	setp.eq.s32	%p12, %r38, 0;
	mov.u32 	%r808, 0;
	mov.u32 	%r785, -1;
	mov.u32 	%r807, %r38;
	@%p12 bra 	BB2_26;

BB2_14:
	ld.param.u64 	%rd1091, [m01700_m16_param_15];
	shr.u32 	%r19, %r807, 1;
	add.s32 	%r810, %r19, %r808;
	cvt.u64.u32	%rd1061, %r810;
	add.s64 	%rd85, %rd1061, %rd25;
	shl.b64 	%rd1062, %rd85, 6;
	add.s64 	%rd1063, %rd1091, %rd1062;
	ld.global.u32 	%r21, [%rd1063+28];
	setp.gt.u32	%p13, %r12, %r21;
	mov.u32 	%r809, %r745;
	@%p13 bra 	BB2_24;

	setp.lt.u32	%p14, %r12, %r21;
	mov.u32 	%r788, -1;
	@%p14 bra 	BB2_16;
	bra.uni 	BB2_17;

BB2_16:
	mov.u32 	%r809, %r788;
	bra.uni 	BB2_24;

BB2_17:
	ld.global.u32 	%r22, [%rd1063+24];
	setp.gt.u32	%p15, %r11, %r22;
	mov.u32 	%r809, %r745;
	@%p15 bra 	BB2_24;

	setp.lt.u32	%p16, %r11, %r22;
	@%p16 bra 	BB2_19;
	bra.uni 	BB2_20;

BB2_19:
	mov.u32 	%r809, %r788;
	bra.uni 	BB2_24;

BB2_20:
	ld.global.u32 	%r23, [%rd1063+60];
	setp.gt.u32	%p17, %r10, %r23;
	mov.u32 	%r809, %r745;
	@%p17 bra 	BB2_24;

	setp.lt.u32	%p18, %r10, %r23;
	mov.u32 	%r809, %r788;
	@%p18 bra 	BB2_24;

	ld.global.u32 	%r24, [%rd1063+56];
	setp.gt.u32	%p19, %r9, %r24;
	mov.u32 	%r809, %r745;
	@%p19 bra 	BB2_24;

	setp.lt.u32	%p20, %r9, %r24;
	selp.b32	%r809, -1, 0, %p20;

BB2_24:
	add.s32 	%r794, %r19, 1;
	setp.gt.s32	%p21, %r809, 0;
	selp.b32	%r795, %r794, 0, %p21;
	add.s32 	%r808, %r795, %r808;
	selp.b32	%r796, -1, 0, %p21;
	add.s32 	%r797, %r796, %r807;
	shr.u32 	%r807, %r797, 1;
	setp.eq.s32	%p22, %r809, 0;
	@%p22 bra 	BB2_27;

	setp.ne.s32	%p23, %r807, 0;
	@%p23 bra 	BB2_14;

BB2_26:
	mov.u32 	%r810, %r785;

BB2_27:
	setp.eq.s32	%p24, %r810, -1;
	@%p24 bra 	BB2_32;

	ld.param.u64 	%rd1092, [m01700_m16_param_16];
	ld.param.u32 	%r802, [m01700_m16_param_32];
	add.s32 	%r30, %r810, %r802;
	mul.wide.u32 	%rd1070, %r30, 4;
	add.s64 	%rd1071, %rd1092, %rd1070;
	atom.global.add.u32 	%r799, [%rd1071], 1;
	setp.ne.s32	%p25, %r799, 0;
	@%p25 bra 	BB2_32;

	atom.global.add.u32 	%r31, [%rd99], 1;
	setp.lt.u32	%p26, %r31, %r38;
	@%p26 bra 	BB2_31;
	bra.uni 	BB2_30;

BB2_31:
	ld.param.u32 	%r804, [m01700_m16_param_27];
	ld.param.u64 	%rd1093, [m01700_m16_param_14];
	mul.wide.u32 	%rd1072, %r31, 32;
	add.s64 	%rd1073, %rd1093, %rd1072;
	st.global.u32 	[%rd1073+12], %r804;
	st.global.u32 	[%rd1073+16], %r810;
	st.global.u32 	[%rd1073+20], %r30;
	st.global.u64 	[%rd1073], %rd1;
	st.global.u32 	[%rd1073+8], %r805;
	mov.u32 	%r801, 0;
	st.global.u32 	[%rd1073+24], %r801;
	st.global.u32 	[%rd1073+28], %r801;
	bra.uni 	BB2_32;

BB2_30:
	atom.global.add.u32 	%r800, [%rd99], -1;

BB2_32:
	ld.param.u32 	%r803, [m01700_m16_param_30];
	add.s32 	%r805, %r805, 1;
	setp.lt.u32	%p27, %r805, %r803;
	@%p27 bra 	BB2_3;

BB2_33:
	ret;
}

	// .globl	m01700_s04
.entry m01700_s04(
	.param .u64 .ptr .global .align 4 m01700_s04_param_0,
	.param .u64 .ptr .global .align 4 m01700_s04_param_1,
	.param .u64 .ptr .global .align 4 m01700_s04_param_2,
	.param .u64 .ptr .const .align 4 m01700_s04_param_3,
	.param .u64 .ptr .global .align 1 m01700_s04_param_4,
	.param .u64 .ptr .global .align 1 m01700_s04_param_5,
	.param .u64 .ptr .global .align 4 m01700_s04_param_6,
	.param .u64 .ptr .global .align 4 m01700_s04_param_7,
	.param .u64 .ptr .global .align 4 m01700_s04_param_8,
	.param .u64 .ptr .global .align 4 m01700_s04_param_9,
	.param .u64 .ptr .global .align 4 m01700_s04_param_10,
	.param .u64 .ptr .global .align 4 m01700_s04_param_11,
	.param .u64 .ptr .global .align 4 m01700_s04_param_12,
	.param .u64 .ptr .global .align 4 m01700_s04_param_13,
	.param .u64 .ptr .global .align 8 m01700_s04_param_14,
	.param .u64 .ptr .global .align 4 m01700_s04_param_15,
	.param .u64 .ptr .global .align 4 m01700_s04_param_16,
	.param .u64 .ptr .global .align 4 m01700_s04_param_17,
	.param .u64 .ptr .global .align 1 m01700_s04_param_18,
	.param .u64 .ptr .global .align 4 m01700_s04_param_19,
	.param .u64 .ptr .global .align 1 m01700_s04_param_20,
	.param .u64 .ptr .global .align 1 m01700_s04_param_21,
	.param .u64 .ptr .global .align 1 m01700_s04_param_22,
	.param .u64 .ptr .global .align 1 m01700_s04_param_23,
	.param .u32 m01700_s04_param_24,
	.param .u32 m01700_s04_param_25,
	.param .u32 m01700_s04_param_26,
	.param .u32 m01700_s04_param_27,
	.param .u32 m01700_s04_param_28,
	.param .u32 m01700_s04_param_29,
	.param .u32 m01700_s04_param_30,
	.param .u32 m01700_s04_param_31,
	.param .u32 m01700_s04_param_32,
	.param .u32 m01700_s04_param_33,
	.param .u64 m01700_s04_param_34
)
{
	.reg .pred 	%p<13>;
	.reg .b32 	%r<725>;
	.reg .b64 	%rd<1075>;


	ld.param.u64 	%rd80, [m01700_s04_param_0];
	ld.param.u64 	%rd83, [m01700_s04_param_15];
	ld.param.u64 	%rd84, [m01700_s04_param_16];
	ld.param.u64 	%rd85, [m01700_s04_param_19];
	ld.param.u32 	%r16, [m01700_s04_param_30];
	ld.param.u32 	%r18, [m01700_s04_param_32];
	ld.param.u64 	%rd86, [m01700_s04_param_34];
	mov.b32	%r19, %envreg3;
	mov.u32 	%r20, %ctaid.x;
	mov.u32 	%r21, %ntid.x;
	mad.lo.s32 	%r22, %r20, %r21, %r19;
	mov.u32 	%r23, %tid.x;
	add.s32 	%r1, %r22, %r23;
	cvt.s64.s32	%rd1, %r1;
	setp.ge.u64	%p1, %rd1, %rd86;
	@%p1 bra 	BB3_12;

	setp.eq.s32	%p2, %r16, 0;
	@%p2 bra 	BB3_12;

	mul.wide.s32 	%rd87, %r1, 260;
	add.s64 	%rd88, %rd80, %rd87;
	ld.global.u32 	%r2, [%rd88];
	ld.global.u32 	%r3, [%rd88+4];
	mul.wide.u32 	%rd89, %r18, 64;
	add.s64 	%rd90, %rd83, %rd89;
	ld.global.u32 	%r4, [%rd90+56];
	ld.global.u32 	%r5, [%rd90+60];
	ld.global.u32 	%r6, [%rd90+24];
	ld.global.u32 	%r7, [%rd90+28];
	ld.global.u32 	%r25, [%rd88+8];
	ld.global.u32 	%r26, [%rd88+12];
	mov.b64	%rd2, {%r26, %r25};
	ld.global.u32 	%r27, [%rd88+60];
	mov.u32 	%r723, 0;
	mov.b64	%rd3, {%r27, %r723};
	ld.const.u64 	%rd91, [k_sha512];
	add.s64 	%rd4, %rd91, -1150475826592481981;
	ld.const.u64 	%rd92, [k_sha512+8];
	add.s64 	%rd93, %rd2, %rd92;
	add.s64 	%rd5, %rd93, 2270897969802886507;
	ld.const.u64 	%rd94, [k_sha512+16];
	add.s64 	%rd6, %rd94, -7276294671716946913;
	ld.const.u64 	%rd95, [k_sha512+24];
	add.s64 	%rd7, %rd95, 5840696475078001361;
	ld.const.u64 	%rd96, [k_sha512+120];
	add.s64 	%rd19, %rd96, %rd3;
	mul.wide.u32 	%rd97, %r18, 4;
	add.s64 	%rd20, %rd84, %rd97;

BB3_3:
	mov.u32 	%r720, 0;
	mov.b64	%rd1070, {%r27, %r720};
	ld.const.u64 	%rd1047, [k_sha512+112];
	ld.const.u64 	%rd1046, [k_sha512+104];
	ld.const.u64 	%rd1045, [k_sha512+96];
	ld.const.u64 	%rd1044, [k_sha512+88];
	ld.const.u64 	%rd1043, [k_sha512+80];
	ld.const.u64 	%rd1042, [k_sha512+72];
	ld.const.u64 	%rd1041, [k_sha512+64];
	ld.const.u64 	%rd1040, [k_sha512+56];
	ld.const.u64 	%rd1039, [k_sha512+48];
	ld.const.u64 	%rd1038, [k_sha512+40];
	ld.const.u64 	%rd1037, [k_sha512+32];
	ld.param.u64 	%rd1036, [m01700_s04_param_3];
	mul.wide.u32 	%rd112, %r723, 4;
	add.s64 	%rd113, %rd1036, %rd112;
	ld.const.u32 	%r29, [%rd113];
	or.b32  	%r30, %r29, %r2;
	mov.b64	%rd1055, {%r3, %r30};
	add.s64 	%rd114, %rd4, %rd1055;
	add.s64 	%rd115, %rd114, -4263291710961585108;
	add.s64 	%rd116, %rd114, 7114151716102877840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r31,%dummy}, %rd115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r32}, %rd115;
	}
	shf.r.wrap.b32 	%r33, %r32, %r31, 14;
	shf.r.wrap.b32 	%r34, %r31, %r32, 14;
	mov.b64 	%rd117, {%r34, %r33};
	shf.r.wrap.b32 	%r35, %r32, %r31, 18;
	shf.r.wrap.b32 	%r36, %r31, %r32, 18;
	mov.b64 	%rd118, {%r36, %r35};
	xor.b64  	%rd119, %rd117, %rd118;
	shf.l.wrap.b32 	%r37, %r31, %r32, 23;
	shf.l.wrap.b32 	%r38, %r32, %r31, 23;
	mov.b64 	%rd120, {%r38, %r37};
	xor.b64  	%rd121, %rd119, %rd120;
	and.b64  	%rd122, %rd115, -3887949035690463538;
	xor.b64  	%rd123, %rd122, -7276294671716946913;
	add.s64 	%rd124, %rd5, %rd123;
	add.s64 	%rd125, %rd124, %rd121;
	add.s64 	%rd126, %rd125, 4354685564936845355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r39,%dummy}, %rd116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r40}, %rd116;
	}
	shf.r.wrap.b32 	%r41, %r40, %r39, 28;
	shf.r.wrap.b32 	%r42, %r39, %r40, 28;
	mov.b64 	%rd127, {%r42, %r41};
	shf.l.wrap.b32 	%r43, %r39, %r40, 30;
	shf.l.wrap.b32 	%r44, %r40, %r39, 30;
	mov.b64 	%rd128, {%r44, %r43};
	xor.b64  	%rd129, %rd127, %rd128;
	shf.l.wrap.b32 	%r45, %r39, %r40, 25;
	shf.l.wrap.b32 	%r46, %r40, %r39, 25;
	mov.b64 	%rd130, {%r46, %r45};
	xor.b64  	%rd131, %rd129, %rd130;
	and.b64  	%rd132, %rd116, 7640891576956012808;
	and.b64  	%rd133, %rd116, -4942790177534073029;
	xor.b64  	%rd134, %rd133, 3026882967131160840;
	or.b64  	%rd135, %rd134, %rd132;
	add.s64 	%rd136, %rd131, %rd135;
	add.s64 	%rd137, %rd136, %rd125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r47,%dummy}, %rd126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r48}, %rd126;
	}
	shf.r.wrap.b32 	%r49, %r48, %r47, 14;
	shf.r.wrap.b32 	%r50, %r47, %r48, 14;
	mov.b64 	%rd138, {%r50, %r49};
	shf.r.wrap.b32 	%r51, %r48, %r47, 18;
	shf.r.wrap.b32 	%r52, %r47, %r48, 18;
	mov.b64 	%rd139, {%r52, %r51};
	xor.b64  	%rd140, %rd138, %rd139;
	shf.l.wrap.b32 	%r53, %r47, %r48, 23;
	shf.l.wrap.b32 	%r54, %r48, %r47, 23;
	mov.b64 	%rd141, {%r54, %r53};
	xor.b64  	%rd142, %rd140, %rd141;
	xor.b64  	%rd143, %rd115, 5840696475078001361;
	and.b64  	%rd144, %rd126, %rd143;
	xor.b64  	%rd145, %rd144, 5840696475078001361;
	add.s64 	%rd146, %rd6, %rd145;
	add.s64 	%rd147, %rd146, %rd142;
	add.s64 	%rd148, %rd147, -4942790177534073029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r55,%dummy}, %rd137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r56}, %rd137;
	}
	shf.r.wrap.b32 	%r57, %r56, %r55, 28;
	shf.r.wrap.b32 	%r58, %r55, %r56, 28;
	mov.b64 	%rd149, {%r58, %r57};
	shf.l.wrap.b32 	%r59, %r55, %r56, 30;
	shf.l.wrap.b32 	%r60, %r56, %r55, 30;
	mov.b64 	%rd150, {%r60, %r59};
	xor.b64  	%rd151, %rd149, %rd150;
	shf.l.wrap.b32 	%r61, %r55, %r56, 25;
	shf.l.wrap.b32 	%r62, %r56, %r55, 25;
	mov.b64 	%rd152, {%r62, %r61};
	xor.b64  	%rd153, %rd151, %rd152;
	and.b64  	%rd154, %rd137, %rd116;
	xor.b64  	%rd155, %rd137, %rd116;
	and.b64  	%rd156, %rd155, 7640891576956012808;
	or.b64  	%rd157, %rd156, %rd154;
	add.s64 	%rd158, %rd153, %rd157;
	add.s64 	%rd159, %rd158, %rd147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r63,%dummy}, %rd148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r64}, %rd148;
	}
	shf.r.wrap.b32 	%r65, %r64, %r63, 14;
	shf.r.wrap.b32 	%r66, %r63, %r64, 14;
	mov.b64 	%rd160, {%r66, %r65};
	shf.r.wrap.b32 	%r67, %r64, %r63, 18;
	shf.r.wrap.b32 	%r68, %r63, %r64, 18;
	mov.b64 	%rd161, {%r68, %r67};
	xor.b64  	%rd162, %rd160, %rd161;
	shf.l.wrap.b32 	%r69, %r63, %r64, 23;
	shf.l.wrap.b32 	%r70, %r64, %r63, 23;
	mov.b64 	%rd163, {%r70, %r69};
	xor.b64  	%rd164, %rd162, %rd163;
	xor.b64  	%rd165, %rd126, %rd115;
	and.b64  	%rd166, %rd148, %rd165;
	xor.b64  	%rd167, %rd166, %rd115;
	add.s64 	%rd168, %rd7, %rd167;
	add.s64 	%rd169, %rd168, %rd164;
	add.s64 	%rd170, %rd169, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r71,%dummy}, %rd159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r72}, %rd159;
	}
	shf.r.wrap.b32 	%r73, %r72, %r71, 28;
	shf.r.wrap.b32 	%r74, %r71, %r72, 28;
	mov.b64 	%rd171, {%r74, %r73};
	shf.l.wrap.b32 	%r75, %r71, %r72, 30;
	shf.l.wrap.b32 	%r76, %r72, %r71, 30;
	mov.b64 	%rd172, {%r76, %r75};
	xor.b64  	%rd173, %rd171, %rd172;
	shf.l.wrap.b32 	%r77, %r71, %r72, 25;
	shf.l.wrap.b32 	%r78, %r72, %r71, 25;
	mov.b64 	%rd174, {%r78, %r77};
	xor.b64  	%rd175, %rd173, %rd174;
	and.b64  	%rd176, %rd159, %rd137;
	xor.b64  	%rd177, %rd159, %rd137;
	and.b64  	%rd178, %rd177, %rd116;
	or.b64  	%rd179, %rd178, %rd176;
	add.s64 	%rd180, %rd175, %rd179;
	add.s64 	%rd181, %rd180, %rd169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r79,%dummy}, %rd170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r80}, %rd170;
	}
	shf.r.wrap.b32 	%r81, %r80, %r79, 14;
	shf.r.wrap.b32 	%r82, %r79, %r80, 14;
	mov.b64 	%rd182, {%r82, %r81};
	shf.r.wrap.b32 	%r83, %r80, %r79, 18;
	shf.r.wrap.b32 	%r84, %r79, %r80, 18;
	mov.b64 	%rd183, {%r84, %r83};
	xor.b64  	%rd184, %rd182, %rd183;
	shf.l.wrap.b32 	%r85, %r79, %r80, 23;
	shf.l.wrap.b32 	%r86, %r80, %r79, 23;
	mov.b64 	%rd185, {%r86, %r85};
	xor.b64  	%rd186, %rd184, %rd185;
	xor.b64  	%rd187, %rd148, %rd126;
	and.b64  	%rd188, %rd170, %rd187;
	xor.b64  	%rd189, %rd188, %rd126;
	add.s64 	%rd190, %rd115, %rd1037;
	add.s64 	%rd191, %rd190, %rd189;
	add.s64 	%rd192, %rd191, %rd186;
	add.s64 	%rd193, %rd192, %rd116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r87,%dummy}, %rd181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r88}, %rd181;
	}
	shf.r.wrap.b32 	%r89, %r88, %r87, 28;
	shf.r.wrap.b32 	%r90, %r87, %r88, 28;
	mov.b64 	%rd194, {%r90, %r89};
	shf.l.wrap.b32 	%r91, %r87, %r88, 30;
	shf.l.wrap.b32 	%r92, %r88, %r87, 30;
	mov.b64 	%rd195, {%r92, %r91};
	xor.b64  	%rd196, %rd194, %rd195;
	shf.l.wrap.b32 	%r93, %r87, %r88, 25;
	shf.l.wrap.b32 	%r94, %r88, %r87, 25;
	mov.b64 	%rd197, {%r94, %r93};
	xor.b64  	%rd198, %rd196, %rd197;
	and.b64  	%rd199, %rd181, %rd159;
	xor.b64  	%rd200, %rd181, %rd159;
	and.b64  	%rd201, %rd200, %rd137;
	or.b64  	%rd202, %rd201, %rd199;
	add.s64 	%rd203, %rd198, %rd202;
	add.s64 	%rd204, %rd203, %rd192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r95,%dummy}, %rd193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r96}, %rd193;
	}
	shf.r.wrap.b32 	%r97, %r96, %r95, 14;
	shf.r.wrap.b32 	%r98, %r95, %r96, 14;
	mov.b64 	%rd205, {%r98, %r97};
	shf.r.wrap.b32 	%r99, %r96, %r95, 18;
	shf.r.wrap.b32 	%r100, %r95, %r96, 18;
	mov.b64 	%rd206, {%r100, %r99};
	xor.b64  	%rd207, %rd205, %rd206;
	shf.l.wrap.b32 	%r101, %r95, %r96, 23;
	shf.l.wrap.b32 	%r102, %r96, %r95, 23;
	mov.b64 	%rd208, {%r102, %r101};
	xor.b64  	%rd209, %rd207, %rd208;
	xor.b64  	%rd210, %rd170, %rd148;
	and.b64  	%rd211, %rd193, %rd210;
	xor.b64  	%rd212, %rd211, %rd148;
	add.s64 	%rd213, %rd126, %rd1038;
	add.s64 	%rd214, %rd213, %rd212;
	add.s64 	%rd215, %rd214, %rd209;
	add.s64 	%rd216, %rd215, %rd137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r103,%dummy}, %rd204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r104}, %rd204;
	}
	shf.r.wrap.b32 	%r105, %r104, %r103, 28;
	shf.r.wrap.b32 	%r106, %r103, %r104, 28;
	mov.b64 	%rd217, {%r106, %r105};
	shf.l.wrap.b32 	%r107, %r103, %r104, 30;
	shf.l.wrap.b32 	%r108, %r104, %r103, 30;
	mov.b64 	%rd218, {%r108, %r107};
	xor.b64  	%rd219, %rd217, %rd218;
	shf.l.wrap.b32 	%r109, %r103, %r104, 25;
	shf.l.wrap.b32 	%r110, %r104, %r103, 25;
	mov.b64 	%rd220, {%r110, %r109};
	xor.b64  	%rd221, %rd219, %rd220;
	and.b64  	%rd222, %rd204, %rd181;
	xor.b64  	%rd223, %rd204, %rd181;
	and.b64  	%rd224, %rd223, %rd159;
	or.b64  	%rd225, %rd224, %rd222;
	add.s64 	%rd226, %rd221, %rd225;
	add.s64 	%rd227, %rd226, %rd215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r111,%dummy}, %rd216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r112}, %rd216;
	}
	shf.r.wrap.b32 	%r113, %r112, %r111, 14;
	shf.r.wrap.b32 	%r114, %r111, %r112, 14;
	mov.b64 	%rd228, {%r114, %r113};
	shf.r.wrap.b32 	%r115, %r112, %r111, 18;
	shf.r.wrap.b32 	%r116, %r111, %r112, 18;
	mov.b64 	%rd229, {%r116, %r115};
	xor.b64  	%rd230, %rd228, %rd229;
	shf.l.wrap.b32 	%r117, %r111, %r112, 23;
	shf.l.wrap.b32 	%r118, %r112, %r111, 23;
	mov.b64 	%rd231, {%r118, %r117};
	xor.b64  	%rd232, %rd230, %rd231;
	xor.b64  	%rd233, %rd193, %rd170;
	and.b64  	%rd234, %rd216, %rd233;
	xor.b64  	%rd235, %rd234, %rd170;
	add.s64 	%rd236, %rd148, %rd1039;
	add.s64 	%rd237, %rd236, %rd235;
	add.s64 	%rd238, %rd237, %rd232;
	add.s64 	%rd239, %rd238, %rd159;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r119,%dummy}, %rd227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r120}, %rd227;
	}
	shf.r.wrap.b32 	%r121, %r120, %r119, 28;
	shf.r.wrap.b32 	%r122, %r119, %r120, 28;
	mov.b64 	%rd240, {%r122, %r121};
	shf.l.wrap.b32 	%r123, %r119, %r120, 30;
	shf.l.wrap.b32 	%r124, %r120, %r119, 30;
	mov.b64 	%rd241, {%r124, %r123};
	xor.b64  	%rd242, %rd240, %rd241;
	shf.l.wrap.b32 	%r125, %r119, %r120, 25;
	shf.l.wrap.b32 	%r126, %r120, %r119, 25;
	mov.b64 	%rd243, {%r126, %r125};
	xor.b64  	%rd244, %rd242, %rd243;
	and.b64  	%rd245, %rd227, %rd204;
	xor.b64  	%rd246, %rd227, %rd204;
	and.b64  	%rd247, %rd246, %rd181;
	or.b64  	%rd248, %rd247, %rd245;
	add.s64 	%rd249, %rd244, %rd248;
	add.s64 	%rd250, %rd249, %rd238;
	add.s64 	%rd251, %rd170, %rd1040;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r127,%dummy}, %rd239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r128}, %rd239;
	}
	shf.r.wrap.b32 	%r129, %r128, %r127, 14;
	shf.r.wrap.b32 	%r130, %r127, %r128, 14;
	mov.b64 	%rd252, {%r130, %r129};
	shf.r.wrap.b32 	%r131, %r128, %r127, 18;
	shf.r.wrap.b32 	%r132, %r127, %r128, 18;
	mov.b64 	%rd253, {%r132, %r131};
	xor.b64  	%rd254, %rd252, %rd253;
	shf.l.wrap.b32 	%r133, %r127, %r128, 23;
	shf.l.wrap.b32 	%r134, %r128, %r127, 23;
	mov.b64 	%rd255, {%r134, %r133};
	xor.b64  	%rd256, %rd254, %rd255;
	xor.b64  	%rd257, %rd216, %rd193;
	and.b64  	%rd258, %rd239, %rd257;
	xor.b64  	%rd259, %rd258, %rd193;
	add.s64 	%rd260, %rd251, %rd259;
	add.s64 	%rd261, %rd260, %rd256;
	add.s64 	%rd262, %rd261, %rd181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r135,%dummy}, %rd250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r136}, %rd250;
	}
	shf.r.wrap.b32 	%r137, %r136, %r135, 28;
	shf.r.wrap.b32 	%r138, %r135, %r136, 28;
	mov.b64 	%rd263, {%r138, %r137};
	shf.l.wrap.b32 	%r139, %r135, %r136, 30;
	shf.l.wrap.b32 	%r140, %r136, %r135, 30;
	mov.b64 	%rd264, {%r140, %r139};
	xor.b64  	%rd265, %rd263, %rd264;
	shf.l.wrap.b32 	%r141, %r135, %r136, 25;
	shf.l.wrap.b32 	%r142, %r136, %r135, 25;
	mov.b64 	%rd266, {%r142, %r141};
	xor.b64  	%rd267, %rd265, %rd266;
	and.b64  	%rd268, %rd250, %rd227;
	xor.b64  	%rd269, %rd250, %rd227;
	and.b64  	%rd270, %rd269, %rd204;
	or.b64  	%rd271, %rd270, %rd268;
	add.s64 	%rd272, %rd267, %rd271;
	add.s64 	%rd273, %rd272, %rd261;
	add.s64 	%rd274, %rd193, %rd1041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r143,%dummy}, %rd262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r144}, %rd262;
	}
	shf.r.wrap.b32 	%r145, %r144, %r143, 14;
	shf.r.wrap.b32 	%r146, %r143, %r144, 14;
	mov.b64 	%rd275, {%r146, %r145};
	shf.r.wrap.b32 	%r147, %r144, %r143, 18;
	shf.r.wrap.b32 	%r148, %r143, %r144, 18;
	mov.b64 	%rd276, {%r148, %r147};
	xor.b64  	%rd277, %rd275, %rd276;
	shf.l.wrap.b32 	%r149, %r143, %r144, 23;
	shf.l.wrap.b32 	%r150, %r144, %r143, 23;
	mov.b64 	%rd278, {%r150, %r149};
	xor.b64  	%rd279, %rd277, %rd278;
	xor.b64  	%rd280, %rd239, %rd216;
	and.b64  	%rd281, %rd262, %rd280;
	xor.b64  	%rd282, %rd281, %rd216;
	add.s64 	%rd283, %rd274, %rd282;
	add.s64 	%rd284, %rd283, %rd279;
	add.s64 	%rd285, %rd284, %rd204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r151,%dummy}, %rd273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r152}, %rd273;
	}
	shf.r.wrap.b32 	%r153, %r152, %r151, 28;
	shf.r.wrap.b32 	%r154, %r151, %r152, 28;
	mov.b64 	%rd286, {%r154, %r153};
	shf.l.wrap.b32 	%r155, %r151, %r152, 30;
	shf.l.wrap.b32 	%r156, %r152, %r151, 30;
	mov.b64 	%rd287, {%r156, %r155};
	xor.b64  	%rd288, %rd286, %rd287;
	shf.l.wrap.b32 	%r157, %r151, %r152, 25;
	shf.l.wrap.b32 	%r158, %r152, %r151, 25;
	mov.b64 	%rd289, {%r158, %r157};
	xor.b64  	%rd290, %rd288, %rd289;
	and.b64  	%rd291, %rd273, %rd250;
	xor.b64  	%rd292, %rd273, %rd250;
	and.b64  	%rd293, %rd292, %rd227;
	or.b64  	%rd294, %rd293, %rd291;
	add.s64 	%rd295, %rd290, %rd294;
	add.s64 	%rd296, %rd295, %rd284;
	add.s64 	%rd297, %rd216, %rd1042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r159,%dummy}, %rd285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r160}, %rd285;
	}
	shf.r.wrap.b32 	%r161, %r160, %r159, 14;
	shf.r.wrap.b32 	%r162, %r159, %r160, 14;
	mov.b64 	%rd298, {%r162, %r161};
	shf.r.wrap.b32 	%r163, %r160, %r159, 18;
	shf.r.wrap.b32 	%r164, %r159, %r160, 18;
	mov.b64 	%rd299, {%r164, %r163};
	xor.b64  	%rd300, %rd298, %rd299;
	shf.l.wrap.b32 	%r165, %r159, %r160, 23;
	shf.l.wrap.b32 	%r166, %r160, %r159, 23;
	mov.b64 	%rd301, {%r166, %r165};
	xor.b64  	%rd302, %rd300, %rd301;
	xor.b64  	%rd303, %rd262, %rd239;
	and.b64  	%rd304, %rd285, %rd303;
	xor.b64  	%rd305, %rd304, %rd239;
	add.s64 	%rd306, %rd297, %rd305;
	add.s64 	%rd307, %rd306, %rd302;
	add.s64 	%rd308, %rd307, %rd227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r167,%dummy}, %rd296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r168}, %rd296;
	}
	shf.r.wrap.b32 	%r169, %r168, %r167, 28;
	shf.r.wrap.b32 	%r170, %r167, %r168, 28;
	mov.b64 	%rd309, {%r170, %r169};
	shf.l.wrap.b32 	%r171, %r167, %r168, 30;
	shf.l.wrap.b32 	%r172, %r168, %r167, 30;
	mov.b64 	%rd310, {%r172, %r171};
	xor.b64  	%rd311, %rd309, %rd310;
	shf.l.wrap.b32 	%r173, %r167, %r168, 25;
	shf.l.wrap.b32 	%r174, %r168, %r167, 25;
	mov.b64 	%rd312, {%r174, %r173};
	xor.b64  	%rd313, %rd311, %rd312;
	and.b64  	%rd314, %rd296, %rd273;
	xor.b64  	%rd315, %rd296, %rd273;
	and.b64  	%rd316, %rd315, %rd250;
	or.b64  	%rd317, %rd316, %rd314;
	add.s64 	%rd318, %rd313, %rd317;
	add.s64 	%rd319, %rd318, %rd307;
	add.s64 	%rd320, %rd239, %rd1043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r175,%dummy}, %rd308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r176}, %rd308;
	}
	shf.r.wrap.b32 	%r177, %r176, %r175, 14;
	shf.r.wrap.b32 	%r178, %r175, %r176, 14;
	mov.b64 	%rd321, {%r178, %r177};
	shf.r.wrap.b32 	%r179, %r176, %r175, 18;
	shf.r.wrap.b32 	%r180, %r175, %r176, 18;
	mov.b64 	%rd322, {%r180, %r179};
	xor.b64  	%rd323, %rd321, %rd322;
	shf.l.wrap.b32 	%r181, %r175, %r176, 23;
	shf.l.wrap.b32 	%r182, %r176, %r175, 23;
	mov.b64 	%rd324, {%r182, %r181};
	xor.b64  	%rd325, %rd323, %rd324;
	xor.b64  	%rd326, %rd285, %rd262;
	and.b64  	%rd327, %rd308, %rd326;
	xor.b64  	%rd328, %rd327, %rd262;
	add.s64 	%rd329, %rd320, %rd328;
	add.s64 	%rd330, %rd329, %rd325;
	add.s64 	%rd331, %rd330, %rd250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r183,%dummy}, %rd319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r184}, %rd319;
	}
	shf.r.wrap.b32 	%r185, %r184, %r183, 28;
	shf.r.wrap.b32 	%r186, %r183, %r184, 28;
	mov.b64 	%rd332, {%r186, %r185};
	shf.l.wrap.b32 	%r187, %r183, %r184, 30;
	shf.l.wrap.b32 	%r188, %r184, %r183, 30;
	mov.b64 	%rd333, {%r188, %r187};
	xor.b64  	%rd334, %rd332, %rd333;
	shf.l.wrap.b32 	%r189, %r183, %r184, 25;
	shf.l.wrap.b32 	%r190, %r184, %r183, 25;
	mov.b64 	%rd335, {%r190, %r189};
	xor.b64  	%rd336, %rd334, %rd335;
	and.b64  	%rd337, %rd319, %rd296;
	xor.b64  	%rd338, %rd319, %rd296;
	and.b64  	%rd339, %rd338, %rd273;
	or.b64  	%rd340, %rd339, %rd337;
	add.s64 	%rd341, %rd336, %rd340;
	add.s64 	%rd342, %rd341, %rd330;
	add.s64 	%rd343, %rd262, %rd1044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r191,%dummy}, %rd331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r192}, %rd331;
	}
	shf.r.wrap.b32 	%r193, %r192, %r191, 14;
	shf.r.wrap.b32 	%r194, %r191, %r192, 14;
	mov.b64 	%rd344, {%r194, %r193};
	shf.r.wrap.b32 	%r195, %r192, %r191, 18;
	shf.r.wrap.b32 	%r196, %r191, %r192, 18;
	mov.b64 	%rd345, {%r196, %r195};
	xor.b64  	%rd346, %rd344, %rd345;
	shf.l.wrap.b32 	%r197, %r191, %r192, 23;
	shf.l.wrap.b32 	%r198, %r192, %r191, 23;
	mov.b64 	%rd347, {%r198, %r197};
	xor.b64  	%rd348, %rd346, %rd347;
	xor.b64  	%rd349, %rd308, %rd285;
	and.b64  	%rd350, %rd331, %rd349;
	xor.b64  	%rd351, %rd350, %rd285;
	add.s64 	%rd352, %rd343, %rd351;
	add.s64 	%rd353, %rd352, %rd348;
	add.s64 	%rd354, %rd353, %rd273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r199,%dummy}, %rd342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r200}, %rd342;
	}
	shf.r.wrap.b32 	%r201, %r200, %r199, 28;
	shf.r.wrap.b32 	%r202, %r199, %r200, 28;
	mov.b64 	%rd355, {%r202, %r201};
	shf.l.wrap.b32 	%r203, %r199, %r200, 30;
	shf.l.wrap.b32 	%r204, %r200, %r199, 30;
	mov.b64 	%rd356, {%r204, %r203};
	xor.b64  	%rd357, %rd355, %rd356;
	shf.l.wrap.b32 	%r205, %r199, %r200, 25;
	shf.l.wrap.b32 	%r206, %r200, %r199, 25;
	mov.b64 	%rd358, {%r206, %r205};
	xor.b64  	%rd359, %rd357, %rd358;
	and.b64  	%rd360, %rd342, %rd319;
	xor.b64  	%rd361, %rd342, %rd319;
	and.b64  	%rd362, %rd361, %rd296;
	or.b64  	%rd363, %rd362, %rd360;
	add.s64 	%rd364, %rd359, %rd363;
	add.s64 	%rd365, %rd364, %rd353;
	add.s64 	%rd366, %rd285, %rd1045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r207,%dummy}, %rd354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r208}, %rd354;
	}
	shf.r.wrap.b32 	%r209, %r208, %r207, 14;
	shf.r.wrap.b32 	%r210, %r207, %r208, 14;
	mov.b64 	%rd367, {%r210, %r209};
	shf.r.wrap.b32 	%r211, %r208, %r207, 18;
	shf.r.wrap.b32 	%r212, %r207, %r208, 18;
	mov.b64 	%rd368, {%r212, %r211};
	xor.b64  	%rd369, %rd367, %rd368;
	shf.l.wrap.b32 	%r213, %r207, %r208, 23;
	shf.l.wrap.b32 	%r214, %r208, %r207, 23;
	mov.b64 	%rd370, {%r214, %r213};
	xor.b64  	%rd371, %rd369, %rd370;
	xor.b64  	%rd372, %rd331, %rd308;
	and.b64  	%rd373, %rd354, %rd372;
	xor.b64  	%rd374, %rd373, %rd308;
	add.s64 	%rd375, %rd366, %rd374;
	add.s64 	%rd376, %rd375, %rd371;
	add.s64 	%rd1051, %rd376, %rd296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r215,%dummy}, %rd365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r216}, %rd365;
	}
	shf.r.wrap.b32 	%r217, %r216, %r215, 28;
	shf.r.wrap.b32 	%r218, %r215, %r216, 28;
	mov.b64 	%rd377, {%r218, %r217};
	shf.l.wrap.b32 	%r219, %r215, %r216, 30;
	shf.l.wrap.b32 	%r220, %r216, %r215, 30;
	mov.b64 	%rd378, {%r220, %r219};
	xor.b64  	%rd379, %rd377, %rd378;
	shf.l.wrap.b32 	%r221, %r215, %r216, 25;
	shf.l.wrap.b32 	%r222, %r216, %r215, 25;
	mov.b64 	%rd380, {%r222, %r221};
	xor.b64  	%rd381, %rd379, %rd380;
	and.b64  	%rd382, %rd365, %rd342;
	xor.b64  	%rd383, %rd365, %rd342;
	and.b64  	%rd384, %rd383, %rd319;
	or.b64  	%rd385, %rd384, %rd382;
	add.s64 	%rd386, %rd381, %rd385;
	add.s64 	%rd1074, %rd386, %rd376;
	add.s64 	%rd387, %rd308, %rd1046;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r223,%dummy}, %rd1051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r224}, %rd1051;
	}
	shf.r.wrap.b32 	%r225, %r224, %r223, 14;
	shf.r.wrap.b32 	%r226, %r223, %r224, 14;
	mov.b64 	%rd388, {%r226, %r225};
	shf.r.wrap.b32 	%r227, %r224, %r223, 18;
	shf.r.wrap.b32 	%r228, %r223, %r224, 18;
	mov.b64 	%rd389, {%r228, %r227};
	xor.b64  	%rd390, %rd388, %rd389;
	shf.l.wrap.b32 	%r229, %r223, %r224, 23;
	shf.l.wrap.b32 	%r230, %r224, %r223, 23;
	mov.b64 	%rd391, {%r230, %r229};
	xor.b64  	%rd392, %rd390, %rd391;
	xor.b64  	%rd393, %rd354, %rd331;
	and.b64  	%rd394, %rd1051, %rd393;
	xor.b64  	%rd395, %rd394, %rd331;
	add.s64 	%rd396, %rd387, %rd395;
	add.s64 	%rd397, %rd396, %rd392;
	add.s64 	%rd1052, %rd397, %rd319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r231,%dummy}, %rd1074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r232}, %rd1074;
	}
	shf.r.wrap.b32 	%r233, %r232, %r231, 28;
	shf.r.wrap.b32 	%r234, %r231, %r232, 28;
	mov.b64 	%rd398, {%r234, %r233};
	shf.l.wrap.b32 	%r235, %r231, %r232, 30;
	shf.l.wrap.b32 	%r236, %r232, %r231, 30;
	mov.b64 	%rd399, {%r236, %r235};
	xor.b64  	%rd400, %rd398, %rd399;
	shf.l.wrap.b32 	%r237, %r231, %r232, 25;
	shf.l.wrap.b32 	%r238, %r232, %r231, 25;
	mov.b64 	%rd401, {%r238, %r237};
	xor.b64  	%rd402, %rd400, %rd401;
	and.b64  	%rd403, %rd1074, %rd365;
	xor.b64  	%rd404, %rd1074, %rd365;
	and.b64  	%rd405, %rd404, %rd342;
	or.b64  	%rd406, %rd405, %rd403;
	add.s64 	%rd407, %rd402, %rd406;
	add.s64 	%rd1073, %rd407, %rd397;
	add.s64 	%rd408, %rd331, %rd1047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r239,%dummy}, %rd1052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r240}, %rd1052;
	}
	shf.r.wrap.b32 	%r241, %r240, %r239, 14;
	shf.r.wrap.b32 	%r242, %r239, %r240, 14;
	mov.b64 	%rd409, {%r242, %r241};
	shf.r.wrap.b32 	%r243, %r240, %r239, 18;
	shf.r.wrap.b32 	%r244, %r239, %r240, 18;
	mov.b64 	%rd410, {%r244, %r243};
	xor.b64  	%rd411, %rd409, %rd410;
	shf.l.wrap.b32 	%r245, %r239, %r240, 23;
	shf.l.wrap.b32 	%r246, %r240, %r239, 23;
	mov.b64 	%rd412, {%r246, %r245};
	xor.b64  	%rd413, %rd411, %rd412;
	xor.b64  	%rd414, %rd1051, %rd354;
	and.b64  	%rd415, %rd1052, %rd414;
	xor.b64  	%rd416, %rd415, %rd354;
	add.s64 	%rd417, %rd408, %rd416;
	add.s64 	%rd418, %rd417, %rd413;
	add.s64 	%rd1053, %rd418, %rd342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r247,%dummy}, %rd1073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r248}, %rd1073;
	}
	shf.r.wrap.b32 	%r249, %r248, %r247, 28;
	shf.r.wrap.b32 	%r250, %r247, %r248, 28;
	mov.b64 	%rd419, {%r250, %r249};
	shf.l.wrap.b32 	%r251, %r247, %r248, 30;
	shf.l.wrap.b32 	%r252, %r248, %r247, 30;
	mov.b64 	%rd420, {%r252, %r251};
	xor.b64  	%rd421, %rd419, %rd420;
	shf.l.wrap.b32 	%r253, %r247, %r248, 25;
	shf.l.wrap.b32 	%r254, %r248, %r247, 25;
	mov.b64 	%rd422, {%r254, %r253};
	xor.b64  	%rd423, %rd421, %rd422;
	and.b64  	%rd424, %rd1073, %rd1074;
	xor.b64  	%rd425, %rd1073, %rd1074;
	and.b64  	%rd426, %rd425, %rd365;
	or.b64  	%rd427, %rd426, %rd424;
	add.s64 	%rd428, %rd423, %rd427;
	add.s64 	%rd1072, %rd428, %rd418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r255,%dummy}, %rd1053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r256}, %rd1053;
	}
	shf.r.wrap.b32 	%r257, %r256, %r255, 14;
	shf.r.wrap.b32 	%r258, %r255, %r256, 14;
	mov.b64 	%rd429, {%r258, %r257};
	shf.r.wrap.b32 	%r259, %r256, %r255, 18;
	shf.r.wrap.b32 	%r260, %r255, %r256, 18;
	mov.b64 	%rd430, {%r260, %r259};
	xor.b64  	%rd431, %rd429, %rd430;
	shf.l.wrap.b32 	%r261, %r255, %r256, 23;
	shf.l.wrap.b32 	%r262, %r256, %r255, 23;
	mov.b64 	%rd432, {%r262, %r261};
	xor.b64  	%rd433, %rd431, %rd432;
	xor.b64  	%rd434, %rd1052, %rd1051;
	and.b64  	%rd435, %rd1053, %rd434;
	xor.b64  	%rd436, %rd435, %rd1051;
	add.s64 	%rd437, %rd19, %rd354;
	add.s64 	%rd438, %rd437, %rd436;
	add.s64 	%rd439, %rd438, %rd433;
	add.s64 	%rd1054, %rd439, %rd365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r263,%dummy}, %rd1072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r264}, %rd1072;
	}
	shf.r.wrap.b32 	%r265, %r264, %r263, 28;
	shf.r.wrap.b32 	%r266, %r263, %r264, 28;
	mov.b64 	%rd440, {%r266, %r265};
	shf.l.wrap.b32 	%r267, %r263, %r264, 30;
	shf.l.wrap.b32 	%r268, %r264, %r263, 30;
	mov.b64 	%rd441, {%r268, %r267};
	xor.b64  	%rd442, %rd440, %rd441;
	shf.l.wrap.b32 	%r269, %r263, %r264, 25;
	shf.l.wrap.b32 	%r270, %r264, %r263, 25;
	mov.b64 	%rd443, {%r270, %r269};
	xor.b64  	%rd444, %rd442, %rd443;
	and.b64  	%rd445, %rd1072, %rd1073;
	xor.b64  	%rd446, %rd1072, %rd1073;
	and.b64  	%rd447, %rd446, %rd1074;
	or.b64  	%rd448, %rd447, %rd445;
	add.s64 	%rd449, %rd444, %rd448;
	add.s64 	%rd1071, %rd449, %rd439;
	mov.u64 	%rd1057, 0;
	mov.u32 	%r724, 16;
	mov.u64 	%rd1050, k_sha512;
	mov.u64 	%rd1056, %rd2;
	mov.u64 	%rd1058, %rd1057;
	mov.u64 	%rd1059, %rd1057;
	mov.u64 	%rd1060, %rd1057;
	mov.u64 	%rd1061, %rd1057;
	mov.u64 	%rd1062, %rd1057;
	mov.u64 	%rd1063, %rd1057;
	mov.u64 	%rd1064, %rd1057;
	mov.u64 	%rd1065, %rd1057;
	mov.u64 	%rd1066, %rd1057;
	mov.u64 	%rd1067, %rd1057;
	mov.u64 	%rd1068, %rd1057;
	mov.u64 	%rd1069, %rd1057;

BB3_4:
	shr.u64 	%rd450, %rd1069, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r271}, %rd1069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r272,%dummy}, %rd1069;
	}
	shf.l.wrap.b32 	%r273, %r272, %r271, 3;
	shf.l.wrap.b32 	%r274, %r271, %r272, 3;
	mov.b64 	%rd451, {%r274, %r273};
	xor.b64  	%rd452, %rd451, %rd450;
	shf.r.wrap.b32 	%r275, %r271, %r272, 19;
	shf.r.wrap.b32 	%r276, %r272, %r271, 19;
	mov.b64 	%rd453, {%r276, %r275};
	xor.b64  	%rd454, %rd452, %rd453;
	add.s64 	%rd455, %rd1064, %rd454;
	shr.u64 	%rd456, %rd1056, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r277,%dummy}, %rd1056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r278}, %rd1056;
	}
	shf.r.wrap.b32 	%r279, %r278, %r277, 8;
	shf.r.wrap.b32 	%r280, %r277, %r278, 8;
	mov.b64 	%rd457, {%r280, %r279};
	xor.b64  	%rd458, %rd457, %rd456;
	shf.r.wrap.b32 	%r281, %r278, %r277, 1;
	shf.r.wrap.b32 	%r282, %r277, %r278, 1;
	mov.b64 	%rd459, {%r282, %r281};
	xor.b64  	%rd460, %rd458, %rd459;
	add.s64 	%rd461, %rd455, %rd1055;
	add.s64 	%rd1055, %rd461, %rd460;
	shr.u64 	%rd462, %rd1070, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r283}, %rd1070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r284,%dummy}, %rd1070;
	}
	shf.l.wrap.b32 	%r285, %r284, %r283, 3;
	shf.l.wrap.b32 	%r286, %r283, %r284, 3;
	mov.b64 	%rd463, {%r286, %r285};
	xor.b64  	%rd464, %rd463, %rd462;
	shf.r.wrap.b32 	%r287, %r283, %r284, 19;
	shf.r.wrap.b32 	%r288, %r284, %r283, 19;
	mov.b64 	%rd465, {%r288, %r287};
	xor.b64  	%rd466, %rd464, %rd465;
	add.s64 	%rd467, %rd1065, %rd466;
	shr.u64 	%rd468, %rd1057, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r289,%dummy}, %rd1057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r290}, %rd1057;
	}
	shf.r.wrap.b32 	%r291, %r290, %r289, 8;
	shf.r.wrap.b32 	%r292, %r289, %r290, 8;
	mov.b64 	%rd469, {%r292, %r291};
	xor.b64  	%rd470, %rd469, %rd468;
	shf.r.wrap.b32 	%r293, %r290, %r289, 1;
	shf.r.wrap.b32 	%r294, %r289, %r290, 1;
	mov.b64 	%rd471, {%r294, %r293};
	xor.b64  	%rd472, %rd470, %rd471;
	add.s64 	%rd473, %rd467, %rd1056;
	add.s64 	%rd1056, %rd473, %rd472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r295,%dummy}, %rd1055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r296}, %rd1055;
	}
	shf.r.wrap.b32 	%r297, %r296, %r295, 19;
	shf.r.wrap.b32 	%r298, %r295, %r296, 19;
	mov.b64 	%rd474, {%r298, %r297};
	shf.l.wrap.b32 	%r299, %r295, %r296, 3;
	shf.l.wrap.b32 	%r300, %r296, %r295, 3;
	mov.b64 	%rd475, {%r300, %r299};
	shr.u64 	%rd476, %rd1055, 6;
	xor.b64  	%rd477, %rd475, %rd476;
	xor.b64  	%rd478, %rd477, %rd474;
	shr.u64 	%rd479, %rd1058, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r301,%dummy}, %rd1058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r302}, %rd1058;
	}
	shf.r.wrap.b32 	%r303, %r302, %r301, 8;
	shf.r.wrap.b32 	%r304, %r301, %r302, 8;
	mov.b64 	%rd480, {%r304, %r303};
	xor.b64  	%rd481, %rd480, %rd479;
	shf.r.wrap.b32 	%r305, %r302, %r301, 1;
	shf.r.wrap.b32 	%r306, %r301, %r302, 1;
	mov.b64 	%rd482, {%r306, %r305};
	xor.b64  	%rd483, %rd481, %rd482;
	add.s64 	%rd484, %rd1057, %rd1066;
	add.s64 	%rd485, %rd484, %rd483;
	add.s64 	%rd1057, %rd485, %rd478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r307,%dummy}, %rd1056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r308}, %rd1056;
	}
	shf.r.wrap.b32 	%r309, %r308, %r307, 19;
	shf.r.wrap.b32 	%r310, %r307, %r308, 19;
	mov.b64 	%rd486, {%r310, %r309};
	shf.l.wrap.b32 	%r311, %r307, %r308, 3;
	shf.l.wrap.b32 	%r312, %r308, %r307, 3;
	mov.b64 	%rd487, {%r312, %r311};
	shr.u64 	%rd488, %rd1056, 6;
	xor.b64  	%rd489, %rd487, %rd488;
	xor.b64  	%rd490, %rd489, %rd486;
	shr.u64 	%rd491, %rd1059, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r313,%dummy}, %rd1059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r314}, %rd1059;
	}
	shf.r.wrap.b32 	%r315, %r314, %r313, 8;
	shf.r.wrap.b32 	%r316, %r313, %r314, 8;
	mov.b64 	%rd492, {%r316, %r315};
	xor.b64  	%rd493, %rd492, %rd491;
	shf.r.wrap.b32 	%r317, %r314, %r313, 1;
	shf.r.wrap.b32 	%r318, %r313, %r314, 1;
	mov.b64 	%rd494, {%r318, %r317};
	xor.b64  	%rd495, %rd493, %rd494;
	add.s64 	%rd496, %rd1058, %rd1067;
	add.s64 	%rd497, %rd496, %rd495;
	add.s64 	%rd1058, %rd497, %rd490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r319,%dummy}, %rd1057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r320}, %rd1057;
	}
	shf.r.wrap.b32 	%r321, %r320, %r319, 19;
	shf.r.wrap.b32 	%r322, %r319, %r320, 19;
	mov.b64 	%rd498, {%r322, %r321};
	shf.l.wrap.b32 	%r323, %r319, %r320, 3;
	shf.l.wrap.b32 	%r324, %r320, %r319, 3;
	mov.b64 	%rd499, {%r324, %r323};
	shr.u64 	%rd500, %rd1057, 6;
	xor.b64  	%rd501, %rd499, %rd500;
	xor.b64  	%rd502, %rd501, %rd498;
	shr.u64 	%rd503, %rd1060, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r325,%dummy}, %rd1060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r326}, %rd1060;
	}
	shf.r.wrap.b32 	%r327, %r326, %r325, 8;
	shf.r.wrap.b32 	%r328, %r325, %r326, 8;
	mov.b64 	%rd504, {%r328, %r327};
	xor.b64  	%rd505, %rd504, %rd503;
	shf.r.wrap.b32 	%r329, %r326, %r325, 1;
	shf.r.wrap.b32 	%r330, %r325, %r326, 1;
	mov.b64 	%rd506, {%r330, %r329};
	xor.b64  	%rd507, %rd505, %rd506;
	add.s64 	%rd508, %rd1059, %rd1068;
	add.s64 	%rd509, %rd508, %rd507;
	add.s64 	%rd1059, %rd509, %rd502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r331,%dummy}, %rd1058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r332}, %rd1058;
	}
	shf.r.wrap.b32 	%r333, %r332, %r331, 19;
	shf.r.wrap.b32 	%r334, %r331, %r332, 19;
	mov.b64 	%rd510, {%r334, %r333};
	shf.l.wrap.b32 	%r335, %r331, %r332, 3;
	shf.l.wrap.b32 	%r336, %r332, %r331, 3;
	mov.b64 	%rd511, {%r336, %r335};
	shr.u64 	%rd512, %rd1058, 6;
	xor.b64  	%rd513, %rd511, %rd512;
	xor.b64  	%rd514, %rd513, %rd510;
	shr.u64 	%rd515, %rd1061, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r337,%dummy}, %rd1061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r338}, %rd1061;
	}
	shf.r.wrap.b32 	%r339, %r338, %r337, 8;
	shf.r.wrap.b32 	%r340, %r337, %r338, 8;
	mov.b64 	%rd516, {%r340, %r339};
	xor.b64  	%rd517, %rd516, %rd515;
	shf.r.wrap.b32 	%r341, %r338, %r337, 1;
	shf.r.wrap.b32 	%r342, %r337, %r338, 1;
	mov.b64 	%rd518, {%r342, %r341};
	xor.b64  	%rd519, %rd517, %rd518;
	add.s64 	%rd520, %rd1060, %rd1069;
	add.s64 	%rd521, %rd520, %rd519;
	add.s64 	%rd1060, %rd521, %rd514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r343,%dummy}, %rd1059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r344}, %rd1059;
	}
	shf.r.wrap.b32 	%r345, %r344, %r343, 19;
	shf.r.wrap.b32 	%r346, %r343, %r344, 19;
	mov.b64 	%rd522, {%r346, %r345};
	shf.l.wrap.b32 	%r347, %r343, %r344, 3;
	shf.l.wrap.b32 	%r348, %r344, %r343, 3;
	mov.b64 	%rd523, {%r348, %r347};
	shr.u64 	%rd524, %rd1059, 6;
	xor.b64  	%rd525, %rd523, %rd524;
	xor.b64  	%rd526, %rd525, %rd522;
	shr.u64 	%rd527, %rd1062, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r349,%dummy}, %rd1062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r350}, %rd1062;
	}
	shf.r.wrap.b32 	%r351, %r350, %r349, 8;
	shf.r.wrap.b32 	%r352, %r349, %r350, 8;
	mov.b64 	%rd528, {%r352, %r351};
	xor.b64  	%rd529, %rd528, %rd527;
	shf.r.wrap.b32 	%r353, %r350, %r349, 1;
	shf.r.wrap.b32 	%r354, %r349, %r350, 1;
	mov.b64 	%rd530, {%r354, %r353};
	xor.b64  	%rd531, %rd529, %rd530;
	add.s64 	%rd532, %rd1061, %rd1070;
	add.s64 	%rd533, %rd532, %rd531;
	add.s64 	%rd1061, %rd533, %rd526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r355,%dummy}, %rd1060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r356}, %rd1060;
	}
	shf.r.wrap.b32 	%r357, %r356, %r355, 19;
	shf.r.wrap.b32 	%r358, %r355, %r356, 19;
	mov.b64 	%rd534, {%r358, %r357};
	shf.l.wrap.b32 	%r359, %r355, %r356, 3;
	shf.l.wrap.b32 	%r360, %r356, %r355, 3;
	mov.b64 	%rd535, {%r360, %r359};
	shr.u64 	%rd536, %rd1060, 6;
	xor.b64  	%rd537, %rd535, %rd536;
	xor.b64  	%rd538, %rd537, %rd534;
	shr.u64 	%rd539, %rd1063, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r361,%dummy}, %rd1063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r362}, %rd1063;
	}
	shf.r.wrap.b32 	%r363, %r362, %r361, 8;
	shf.r.wrap.b32 	%r364, %r361, %r362, 8;
	mov.b64 	%rd540, {%r364, %r363};
	xor.b64  	%rd541, %rd540, %rd539;
	shf.r.wrap.b32 	%r365, %r362, %r361, 1;
	shf.r.wrap.b32 	%r366, %r361, %r362, 1;
	mov.b64 	%rd542, {%r366, %r365};
	xor.b64  	%rd543, %rd541, %rd542;
	add.s64 	%rd544, %rd543, %rd1062;
	add.s64 	%rd545, %rd544, %rd1055;
	add.s64 	%rd1062, %rd545, %rd538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r367,%dummy}, %rd1061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r368}, %rd1061;
	}
	shf.r.wrap.b32 	%r369, %r368, %r367, 19;
	shf.r.wrap.b32 	%r370, %r367, %r368, 19;
	mov.b64 	%rd546, {%r370, %r369};
	shf.l.wrap.b32 	%r371, %r367, %r368, 3;
	shf.l.wrap.b32 	%r372, %r368, %r367, 3;
	mov.b64 	%rd547, {%r372, %r371};
	shr.u64 	%rd548, %rd1061, 6;
	xor.b64  	%rd549, %rd547, %rd548;
	xor.b64  	%rd550, %rd549, %rd546;
	shr.u64 	%rd551, %rd1064, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r373,%dummy}, %rd1064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r374}, %rd1064;
	}
	shf.r.wrap.b32 	%r375, %r374, %r373, 8;
	shf.r.wrap.b32 	%r376, %r373, %r374, 8;
	mov.b64 	%rd552, {%r376, %r375};
	xor.b64  	%rd553, %rd552, %rd551;
	shf.r.wrap.b32 	%r377, %r374, %r373, 1;
	shf.r.wrap.b32 	%r378, %r373, %r374, 1;
	mov.b64 	%rd554, {%r378, %r377};
	xor.b64  	%rd555, %rd553, %rd554;
	add.s64 	%rd556, %rd555, %rd1063;
	add.s64 	%rd557, %rd556, %rd1056;
	add.s64 	%rd1063, %rd557, %rd550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r379,%dummy}, %rd1062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r380}, %rd1062;
	}
	shf.r.wrap.b32 	%r381, %r380, %r379, 19;
	shf.r.wrap.b32 	%r382, %r379, %r380, 19;
	mov.b64 	%rd558, {%r382, %r381};
	shf.l.wrap.b32 	%r383, %r379, %r380, 3;
	shf.l.wrap.b32 	%r384, %r380, %r379, 3;
	mov.b64 	%rd559, {%r384, %r383};
	shr.u64 	%rd560, %rd1062, 6;
	xor.b64  	%rd561, %rd559, %rd560;
	xor.b64  	%rd562, %rd561, %rd558;
	shr.u64 	%rd563, %rd1065, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r385,%dummy}, %rd1065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r386}, %rd1065;
	}
	shf.r.wrap.b32 	%r387, %r386, %r385, 8;
	shf.r.wrap.b32 	%r388, %r385, %r386, 8;
	mov.b64 	%rd564, {%r388, %r387};
	xor.b64  	%rd565, %rd564, %rd563;
	shf.r.wrap.b32 	%r389, %r386, %r385, 1;
	shf.r.wrap.b32 	%r390, %r385, %r386, 1;
	mov.b64 	%rd566, {%r390, %r389};
	xor.b64  	%rd567, %rd565, %rd566;
	add.s64 	%rd568, %rd567, %rd1064;
	add.s64 	%rd569, %rd568, %rd1057;
	add.s64 	%rd1064, %rd569, %rd562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r391,%dummy}, %rd1063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r392}, %rd1063;
	}
	shf.r.wrap.b32 	%r393, %r392, %r391, 19;
	shf.r.wrap.b32 	%r394, %r391, %r392, 19;
	mov.b64 	%rd570, {%r394, %r393};
	shf.l.wrap.b32 	%r395, %r391, %r392, 3;
	shf.l.wrap.b32 	%r396, %r392, %r391, 3;
	mov.b64 	%rd571, {%r396, %r395};
	shr.u64 	%rd572, %rd1063, 6;
	xor.b64  	%rd573, %rd571, %rd572;
	xor.b64  	%rd574, %rd573, %rd570;
	shr.u64 	%rd575, %rd1066, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r397,%dummy}, %rd1066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r398}, %rd1066;
	}
	shf.r.wrap.b32 	%r399, %r398, %r397, 8;
	shf.r.wrap.b32 	%r400, %r397, %r398, 8;
	mov.b64 	%rd576, {%r400, %r399};
	xor.b64  	%rd577, %rd576, %rd575;
	shf.r.wrap.b32 	%r401, %r398, %r397, 1;
	shf.r.wrap.b32 	%r402, %r397, %r398, 1;
	mov.b64 	%rd578, {%r402, %r401};
	xor.b64  	%rd579, %rd577, %rd578;
	add.s64 	%rd580, %rd579, %rd1065;
	add.s64 	%rd581, %rd580, %rd1058;
	add.s64 	%rd1065, %rd581, %rd574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r403,%dummy}, %rd1064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r404}, %rd1064;
	}
	shf.r.wrap.b32 	%r405, %r404, %r403, 19;
	shf.r.wrap.b32 	%r406, %r403, %r404, 19;
	mov.b64 	%rd582, {%r406, %r405};
	shf.l.wrap.b32 	%r407, %r403, %r404, 3;
	shf.l.wrap.b32 	%r408, %r404, %r403, 3;
	mov.b64 	%rd583, {%r408, %r407};
	shr.u64 	%rd584, %rd1064, 6;
	xor.b64  	%rd585, %rd583, %rd584;
	xor.b64  	%rd586, %rd585, %rd582;
	shr.u64 	%rd587, %rd1067, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r409,%dummy}, %rd1067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r410}, %rd1067;
	}
	shf.r.wrap.b32 	%r411, %r410, %r409, 8;
	shf.r.wrap.b32 	%r412, %r409, %r410, 8;
	mov.b64 	%rd588, {%r412, %r411};
	xor.b64  	%rd589, %rd588, %rd587;
	shf.r.wrap.b32 	%r413, %r410, %r409, 1;
	shf.r.wrap.b32 	%r414, %r409, %r410, 1;
	mov.b64 	%rd590, {%r414, %r413};
	xor.b64  	%rd591, %rd589, %rd590;
	add.s64 	%rd592, %rd591, %rd1066;
	add.s64 	%rd593, %rd592, %rd1059;
	add.s64 	%rd1066, %rd593, %rd586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r415,%dummy}, %rd1065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r416}, %rd1065;
	}
	shf.r.wrap.b32 	%r417, %r416, %r415, 19;
	shf.r.wrap.b32 	%r418, %r415, %r416, 19;
	mov.b64 	%rd594, {%r418, %r417};
	shf.l.wrap.b32 	%r419, %r415, %r416, 3;
	shf.l.wrap.b32 	%r420, %r416, %r415, 3;
	mov.b64 	%rd595, {%r420, %r419};
	shr.u64 	%rd596, %rd1065, 6;
	xor.b64  	%rd597, %rd595, %rd596;
	xor.b64  	%rd598, %rd597, %rd594;
	shr.u64 	%rd599, %rd1068, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r421,%dummy}, %rd1068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r422}, %rd1068;
	}
	shf.r.wrap.b32 	%r423, %r422, %r421, 8;
	shf.r.wrap.b32 	%r424, %r421, %r422, 8;
	mov.b64 	%rd600, {%r424, %r423};
	xor.b64  	%rd601, %rd600, %rd599;
	shf.r.wrap.b32 	%r425, %r422, %r421, 1;
	shf.r.wrap.b32 	%r426, %r421, %r422, 1;
	mov.b64 	%rd602, {%r426, %r425};
	xor.b64  	%rd603, %rd601, %rd602;
	add.s64 	%rd604, %rd603, %rd1067;
	add.s64 	%rd605, %rd604, %rd1060;
	add.s64 	%rd1067, %rd605, %rd598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r427,%dummy}, %rd1066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r428}, %rd1066;
	}
	shf.r.wrap.b32 	%r429, %r428, %r427, 19;
	shf.r.wrap.b32 	%r430, %r427, %r428, 19;
	mov.b64 	%rd606, {%r430, %r429};
	shf.l.wrap.b32 	%r431, %r427, %r428, 3;
	shf.l.wrap.b32 	%r432, %r428, %r427, 3;
	mov.b64 	%rd607, {%r432, %r431};
	shr.u64 	%rd608, %rd1066, 6;
	xor.b64  	%rd609, %rd607, %rd608;
	xor.b64  	%rd610, %rd609, %rd606;
	shr.u64 	%rd611, %rd1069, 7;
	shf.r.wrap.b32 	%r433, %r271, %r272, 8;
	shf.r.wrap.b32 	%r434, %r272, %r271, 8;
	mov.b64 	%rd612, {%r434, %r433};
	xor.b64  	%rd613, %rd612, %rd611;
	shf.r.wrap.b32 	%r435, %r271, %r272, 1;
	shf.r.wrap.b32 	%r436, %r272, %r271, 1;
	mov.b64 	%rd614, {%r436, %r435};
	xor.b64  	%rd615, %rd613, %rd614;
	add.s64 	%rd616, %rd615, %rd1068;
	add.s64 	%rd617, %rd616, %rd1061;
	add.s64 	%rd1068, %rd617, %rd610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r437,%dummy}, %rd1067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r438}, %rd1067;
	}
	shf.r.wrap.b32 	%r439, %r438, %r437, 19;
	shf.r.wrap.b32 	%r440, %r437, %r438, 19;
	mov.b64 	%rd618, {%r440, %r439};
	shf.l.wrap.b32 	%r441, %r437, %r438, 3;
	shf.l.wrap.b32 	%r442, %r438, %r437, 3;
	mov.b64 	%rd619, {%r442, %r441};
	shr.u64 	%rd620, %rd1067, 6;
	xor.b64  	%rd621, %rd619, %rd620;
	xor.b64  	%rd622, %rd621, %rd618;
	shr.u64 	%rd623, %rd1070, 7;
	shf.r.wrap.b32 	%r443, %r283, %r284, 8;
	shf.r.wrap.b32 	%r444, %r284, %r283, 8;
	mov.b64 	%rd624, {%r444, %r443};
	xor.b64  	%rd625, %rd624, %rd623;
	shf.r.wrap.b32 	%r445, %r283, %r284, 1;
	shf.r.wrap.b32 	%r446, %r284, %r283, 1;
	mov.b64 	%rd626, {%r446, %r445};
	xor.b64  	%rd627, %rd625, %rd626;
	add.s64 	%rd628, %rd627, %rd1069;
	add.s64 	%rd629, %rd628, %rd1062;
	add.s64 	%rd1069, %rd629, %rd622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r447,%dummy}, %rd1068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r448}, %rd1068;
	}
	shf.r.wrap.b32 	%r449, %r448, %r447, 19;
	shf.r.wrap.b32 	%r450, %r447, %r448, 19;
	mov.b64 	%rd630, {%r450, %r449};
	shf.l.wrap.b32 	%r451, %r447, %r448, 3;
	shf.l.wrap.b32 	%r452, %r448, %r447, 3;
	mov.b64 	%rd631, {%r452, %r451};
	shr.u64 	%rd632, %rd1068, 6;
	xor.b64  	%rd633, %rd631, %rd632;
	xor.b64  	%rd634, %rd633, %rd630;
	shf.r.wrap.b32 	%r453, %r296, %r295, 1;
	shf.r.wrap.b32 	%r454, %r295, %r296, 1;
	mov.b64 	%rd635, {%r454, %r453};
	shf.r.wrap.b32 	%r455, %r296, %r295, 8;
	shf.r.wrap.b32 	%r456, %r295, %r296, 8;
	mov.b64 	%rd636, {%r456, %r455};
	shr.u64 	%rd637, %rd1055, 7;
	xor.b64  	%rd638, %rd636, %rd637;
	xor.b64  	%rd639, %rd638, %rd635;
	add.s64 	%rd640, %rd639, %rd1070;
	add.s64 	%rd641, %rd640, %rd1063;
	add.s64 	%rd1070, %rd641, %rd634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r457,%dummy}, %rd1054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r458}, %rd1054;
	}
	shf.r.wrap.b32 	%r459, %r458, %r457, 18;
	shf.r.wrap.b32 	%r460, %r457, %r458, 18;
	mov.b64 	%rd642, {%r460, %r459};
	shf.r.wrap.b32 	%r461, %r458, %r457, 14;
	shf.r.wrap.b32 	%r462, %r457, %r458, 14;
	mov.b64 	%rd643, {%r462, %r461};
	xor.b64  	%rd644, %rd643, %rd642;
	shf.l.wrap.b32 	%r463, %r457, %r458, 23;
	shf.l.wrap.b32 	%r464, %r458, %r457, 23;
	mov.b64 	%rd645, {%r464, %r463};
	xor.b64  	%rd646, %rd644, %rd645;
	xor.b64  	%rd647, %rd1052, %rd1053;
	and.b64  	%rd648, %rd647, %rd1054;
	xor.b64  	%rd649, %rd648, %rd1052;
	add.s64 	%rd650, %rd1055, %rd1051;
	add.s64 	%rd651, %rd650, %rd646;
	add.s64 	%rd652, %rd651, %rd649;
	add.s64 	%rd79, %rd1050, 128;
	ld.const.u64 	%rd653, [%rd1050+128];
	add.s64 	%rd654, %rd652, %rd653;
	add.s64 	%rd655, %rd654, %rd1074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r465}, %rd1071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r466,%dummy}, %rd1071;
	}
	shf.l.wrap.b32 	%r467, %r466, %r465, 30;
	shf.l.wrap.b32 	%r468, %r465, %r466, 30;
	mov.b64 	%rd656, {%r468, %r467};
	shf.r.wrap.b32 	%r469, %r465, %r466, 28;
	shf.r.wrap.b32 	%r470, %r466, %r465, 28;
	mov.b64 	%rd657, {%r470, %r469};
	xor.b64  	%rd658, %rd657, %rd656;
	shf.l.wrap.b32 	%r471, %r466, %r465, 25;
	shf.l.wrap.b32 	%r472, %r465, %r466, 25;
	mov.b64 	%rd659, {%r472, %r471};
	xor.b64  	%rd660, %rd658, %rd659;
	xor.b64  	%rd661, %rd1071, %rd1072;
	and.b64  	%rd662, %rd661, %rd1073;
	and.b64  	%rd663, %rd1071, %rd1072;
	or.b64  	%rd664, %rd662, %rd663;
	add.s64 	%rd665, %rd660, %rd664;
	add.s64 	%rd666, %rd665, %rd654;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r473,%dummy}, %rd655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r474}, %rd655;
	}
	shf.r.wrap.b32 	%r475, %r474, %r473, 14;
	shf.r.wrap.b32 	%r476, %r473, %r474, 14;
	mov.b64 	%rd667, {%r476, %r475};
	shf.r.wrap.b32 	%r477, %r474, %r473, 18;
	shf.r.wrap.b32 	%r478, %r473, %r474, 18;
	mov.b64 	%rd668, {%r478, %r477};
	xor.b64  	%rd669, %rd667, %rd668;
	shf.l.wrap.b32 	%r479, %r473, %r474, 23;
	shf.l.wrap.b32 	%r480, %r474, %r473, 23;
	mov.b64 	%rd670, {%r480, %r479};
	xor.b64  	%rd671, %rd669, %rd670;
	xor.b64  	%rd672, %rd1053, %rd1054;
	and.b64  	%rd673, %rd655, %rd672;
	xor.b64  	%rd674, %rd673, %rd1053;
	add.s64 	%rd675, %rd1056, %rd1052;
	ld.const.u64 	%rd676, [%rd1050+136];
	add.s64 	%rd677, %rd675, %rd676;
	add.s64 	%rd678, %rd677, %rd674;
	add.s64 	%rd679, %rd678, %rd671;
	add.s64 	%rd680, %rd679, %rd1073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r481,%dummy}, %rd666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r482}, %rd666;
	}
	shf.r.wrap.b32 	%r483, %r482, %r481, 28;
	shf.r.wrap.b32 	%r484, %r481, %r482, 28;
	mov.b64 	%rd681, {%r484, %r483};
	shf.l.wrap.b32 	%r485, %r481, %r482, 30;
	shf.l.wrap.b32 	%r486, %r482, %r481, 30;
	mov.b64 	%rd682, {%r486, %r485};
	xor.b64  	%rd683, %rd681, %rd682;
	shf.l.wrap.b32 	%r487, %r481, %r482, 25;
	shf.l.wrap.b32 	%r488, %r482, %r481, 25;
	mov.b64 	%rd684, {%r488, %r487};
	xor.b64  	%rd685, %rd683, %rd684;
	and.b64  	%rd686, %rd666, %rd1071;
	xor.b64  	%rd687, %rd666, %rd1071;
	and.b64  	%rd688, %rd687, %rd1072;
	or.b64  	%rd689, %rd688, %rd686;
	add.s64 	%rd690, %rd685, %rd689;
	add.s64 	%rd691, %rd690, %rd679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r489,%dummy}, %rd680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r490}, %rd680;
	}
	shf.r.wrap.b32 	%r491, %r490, %r489, 14;
	shf.r.wrap.b32 	%r492, %r489, %r490, 14;
	mov.b64 	%rd692, {%r492, %r491};
	shf.r.wrap.b32 	%r493, %r490, %r489, 18;
	shf.r.wrap.b32 	%r494, %r489, %r490, 18;
	mov.b64 	%rd693, {%r494, %r493};
	xor.b64  	%rd694, %rd692, %rd693;
	shf.l.wrap.b32 	%r495, %r489, %r490, 23;
	shf.l.wrap.b32 	%r496, %r490, %r489, 23;
	mov.b64 	%rd695, {%r496, %r495};
	xor.b64  	%rd696, %rd694, %rd695;
	xor.b64  	%rd697, %rd655, %rd1054;
	and.b64  	%rd698, %rd680, %rd697;
	xor.b64  	%rd699, %rd698, %rd1054;
	add.s64 	%rd700, %rd1057, %rd1053;
	ld.const.u64 	%rd701, [%rd1050+144];
	add.s64 	%rd702, %rd700, %rd701;
	add.s64 	%rd703, %rd702, %rd699;
	add.s64 	%rd704, %rd703, %rd696;
	add.s64 	%rd705, %rd704, %rd1072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r497,%dummy}, %rd691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r498}, %rd691;
	}
	shf.r.wrap.b32 	%r499, %r498, %r497, 28;
	shf.r.wrap.b32 	%r500, %r497, %r498, 28;
	mov.b64 	%rd706, {%r500, %r499};
	shf.l.wrap.b32 	%r501, %r497, %r498, 30;
	shf.l.wrap.b32 	%r502, %r498, %r497, 30;
	mov.b64 	%rd707, {%r502, %r501};
	xor.b64  	%rd708, %rd706, %rd707;
	shf.l.wrap.b32 	%r503, %r497, %r498, 25;
	shf.l.wrap.b32 	%r504, %r498, %r497, 25;
	mov.b64 	%rd709, {%r504, %r503};
	xor.b64  	%rd710, %rd708, %rd709;
	and.b64  	%rd711, %rd691, %rd666;
	xor.b64  	%rd712, %rd691, %rd666;
	and.b64  	%rd713, %rd712, %rd1071;
	or.b64  	%rd714, %rd713, %rd711;
	add.s64 	%rd715, %rd710, %rd714;
	add.s64 	%rd716, %rd715, %rd704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r505,%dummy}, %rd705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r506}, %rd705;
	}
	shf.r.wrap.b32 	%r507, %r506, %r505, 14;
	shf.r.wrap.b32 	%r508, %r505, %r506, 14;
	mov.b64 	%rd717, {%r508, %r507};
	shf.r.wrap.b32 	%r509, %r506, %r505, 18;
	shf.r.wrap.b32 	%r510, %r505, %r506, 18;
	mov.b64 	%rd718, {%r510, %r509};
	xor.b64  	%rd719, %rd717, %rd718;
	shf.l.wrap.b32 	%r511, %r505, %r506, 23;
	shf.l.wrap.b32 	%r512, %r506, %r505, 23;
	mov.b64 	%rd720, {%r512, %r511};
	xor.b64  	%rd721, %rd719, %rd720;
	xor.b64  	%rd722, %rd680, %rd655;
	and.b64  	%rd723, %rd705, %rd722;
	xor.b64  	%rd724, %rd723, %rd655;
	add.s64 	%rd725, %rd1058, %rd1054;
	ld.const.u64 	%rd726, [%rd1050+152];
	add.s64 	%rd727, %rd725, %rd726;
	add.s64 	%rd728, %rd727, %rd724;
	add.s64 	%rd729, %rd728, %rd721;
	add.s64 	%rd730, %rd729, %rd1071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r513,%dummy}, %rd716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r514}, %rd716;
	}
	shf.r.wrap.b32 	%r515, %r514, %r513, 28;
	shf.r.wrap.b32 	%r516, %r513, %r514, 28;
	mov.b64 	%rd731, {%r516, %r515};
	shf.l.wrap.b32 	%r517, %r513, %r514, 30;
	shf.l.wrap.b32 	%r518, %r514, %r513, 30;
	mov.b64 	%rd732, {%r518, %r517};
	xor.b64  	%rd733, %rd731, %rd732;
	shf.l.wrap.b32 	%r519, %r513, %r514, 25;
	shf.l.wrap.b32 	%r520, %r514, %r513, 25;
	mov.b64 	%rd734, {%r520, %r519};
	xor.b64  	%rd735, %rd733, %rd734;
	and.b64  	%rd736, %rd716, %rd691;
	xor.b64  	%rd737, %rd716, %rd691;
	and.b64  	%rd738, %rd737, %rd666;
	or.b64  	%rd739, %rd738, %rd736;
	add.s64 	%rd740, %rd735, %rd739;
	add.s64 	%rd741, %rd740, %rd729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r521,%dummy}, %rd730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r522}, %rd730;
	}
	shf.r.wrap.b32 	%r523, %r522, %r521, 14;
	shf.r.wrap.b32 	%r524, %r521, %r522, 14;
	mov.b64 	%rd742, {%r524, %r523};
	shf.r.wrap.b32 	%r525, %r522, %r521, 18;
	shf.r.wrap.b32 	%r526, %r521, %r522, 18;
	mov.b64 	%rd743, {%r526, %r525};
	xor.b64  	%rd744, %rd742, %rd743;
	shf.l.wrap.b32 	%r527, %r521, %r522, 23;
	shf.l.wrap.b32 	%r528, %r522, %r521, 23;
	mov.b64 	%rd745, {%r528, %r527};
	xor.b64  	%rd746, %rd744, %rd745;
	xor.b64  	%rd747, %rd705, %rd680;
	and.b64  	%rd748, %rd730, %rd747;
	xor.b64  	%rd749, %rd748, %rd680;
	add.s64 	%rd750, %rd655, %rd1059;
	ld.const.u64 	%rd751, [%rd1050+160];
	add.s64 	%rd752, %rd750, %rd751;
	add.s64 	%rd753, %rd752, %rd749;
	add.s64 	%rd754, %rd753, %rd746;
	add.s64 	%rd755, %rd754, %rd666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r529,%dummy}, %rd741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r530}, %rd741;
	}
	shf.r.wrap.b32 	%r531, %r530, %r529, 28;
	shf.r.wrap.b32 	%r532, %r529, %r530, 28;
	mov.b64 	%rd756, {%r532, %r531};
	shf.l.wrap.b32 	%r533, %r529, %r530, 30;
	shf.l.wrap.b32 	%r534, %r530, %r529, 30;
	mov.b64 	%rd757, {%r534, %r533};
	xor.b64  	%rd758, %rd756, %rd757;
	shf.l.wrap.b32 	%r535, %r529, %r530, 25;
	shf.l.wrap.b32 	%r536, %r530, %r529, 25;
	mov.b64 	%rd759, {%r536, %r535};
	xor.b64  	%rd760, %rd758, %rd759;
	and.b64  	%rd761, %rd741, %rd716;
	xor.b64  	%rd762, %rd741, %rd716;
	and.b64  	%rd763, %rd762, %rd691;
	or.b64  	%rd764, %rd763, %rd761;
	add.s64 	%rd765, %rd760, %rd764;
	add.s64 	%rd766, %rd765, %rd754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r537,%dummy}, %rd755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r538}, %rd755;
	}
	shf.r.wrap.b32 	%r539, %r538, %r537, 14;
	shf.r.wrap.b32 	%r540, %r537, %r538, 14;
	mov.b64 	%rd767, {%r540, %r539};
	shf.r.wrap.b32 	%r541, %r538, %r537, 18;
	shf.r.wrap.b32 	%r542, %r537, %r538, 18;
	mov.b64 	%rd768, {%r542, %r541};
	xor.b64  	%rd769, %rd767, %rd768;
	shf.l.wrap.b32 	%r543, %r537, %r538, 23;
	shf.l.wrap.b32 	%r544, %r538, %r537, 23;
	mov.b64 	%rd770, {%r544, %r543};
	xor.b64  	%rd771, %rd769, %rd770;
	xor.b64  	%rd772, %rd730, %rd705;
	and.b64  	%rd773, %rd755, %rd772;
	xor.b64  	%rd774, %rd773, %rd705;
	ld.const.u64 	%rd775, [%rd1050+168];
	add.s64 	%rd776, %rd775, %rd1060;
	add.s64 	%rd777, %rd776, %rd680;
	add.s64 	%rd778, %rd777, %rd774;
	add.s64 	%rd779, %rd778, %rd771;
	add.s64 	%rd780, %rd779, %rd691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r545,%dummy}, %rd766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r546}, %rd766;
	}
	shf.r.wrap.b32 	%r547, %r546, %r545, 28;
	shf.r.wrap.b32 	%r548, %r545, %r546, 28;
	mov.b64 	%rd781, {%r548, %r547};
	shf.l.wrap.b32 	%r549, %r545, %r546, 30;
	shf.l.wrap.b32 	%r550, %r546, %r545, 30;
	mov.b64 	%rd782, {%r550, %r549};
	xor.b64  	%rd783, %rd781, %rd782;
	shf.l.wrap.b32 	%r551, %r545, %r546, 25;
	shf.l.wrap.b32 	%r552, %r546, %r545, 25;
	mov.b64 	%rd784, {%r552, %r551};
	xor.b64  	%rd785, %rd783, %rd784;
	and.b64  	%rd786, %rd766, %rd741;
	xor.b64  	%rd787, %rd766, %rd741;
	and.b64  	%rd788, %rd787, %rd716;
	or.b64  	%rd789, %rd788, %rd786;
	add.s64 	%rd790, %rd785, %rd789;
	add.s64 	%rd791, %rd790, %rd779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r553,%dummy}, %rd780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r554}, %rd780;
	}
	shf.r.wrap.b32 	%r555, %r554, %r553, 14;
	shf.r.wrap.b32 	%r556, %r553, %r554, 14;
	mov.b64 	%rd792, {%r556, %r555};
	shf.r.wrap.b32 	%r557, %r554, %r553, 18;
	shf.r.wrap.b32 	%r558, %r553, %r554, 18;
	mov.b64 	%rd793, {%r558, %r557};
	xor.b64  	%rd794, %rd792, %rd793;
	shf.l.wrap.b32 	%r559, %r553, %r554, 23;
	shf.l.wrap.b32 	%r560, %r554, %r553, 23;
	mov.b64 	%rd795, {%r560, %r559};
	xor.b64  	%rd796, %rd794, %rd795;
	xor.b64  	%rd797, %rd755, %rd730;
	and.b64  	%rd798, %rd780, %rd797;
	xor.b64  	%rd799, %rd798, %rd730;
	ld.const.u64 	%rd800, [%rd1050+176];
	add.s64 	%rd801, %rd800, %rd1061;
	add.s64 	%rd802, %rd801, %rd705;
	add.s64 	%rd803, %rd802, %rd799;
	add.s64 	%rd804, %rd803, %rd796;
	add.s64 	%rd805, %rd804, %rd716;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r561,%dummy}, %rd791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r562}, %rd791;
	}
	shf.r.wrap.b32 	%r563, %r562, %r561, 28;
	shf.r.wrap.b32 	%r564, %r561, %r562, 28;
	mov.b64 	%rd806, {%r564, %r563};
	shf.l.wrap.b32 	%r565, %r561, %r562, 30;
	shf.l.wrap.b32 	%r566, %r562, %r561, 30;
	mov.b64 	%rd807, {%r566, %r565};
	xor.b64  	%rd808, %rd806, %rd807;
	shf.l.wrap.b32 	%r567, %r561, %r562, 25;
	shf.l.wrap.b32 	%r568, %r562, %r561, 25;
	mov.b64 	%rd809, {%r568, %r567};
	xor.b64  	%rd810, %rd808, %rd809;
	and.b64  	%rd811, %rd791, %rd766;
	xor.b64  	%rd812, %rd791, %rd766;
	and.b64  	%rd813, %rd812, %rd741;
	or.b64  	%rd814, %rd813, %rd811;
	add.s64 	%rd815, %rd810, %rd814;
	add.s64 	%rd816, %rd815, %rd804;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r569,%dummy}, %rd805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r570}, %rd805;
	}
	shf.r.wrap.b32 	%r571, %r570, %r569, 14;
	shf.r.wrap.b32 	%r572, %r569, %r570, 14;
	mov.b64 	%rd817, {%r572, %r571};
	shf.r.wrap.b32 	%r573, %r570, %r569, 18;
	shf.r.wrap.b32 	%r574, %r569, %r570, 18;
	mov.b64 	%rd818, {%r574, %r573};
	xor.b64  	%rd819, %rd817, %rd818;
	shf.l.wrap.b32 	%r575, %r569, %r570, 23;
	shf.l.wrap.b32 	%r576, %r570, %r569, 23;
	mov.b64 	%rd820, {%r576, %r575};
	xor.b64  	%rd821, %rd819, %rd820;
	xor.b64  	%rd822, %rd780, %rd755;
	and.b64  	%rd823, %rd805, %rd822;
	xor.b64  	%rd824, %rd823, %rd755;
	ld.const.u64 	%rd825, [%rd1050+184];
	add.s64 	%rd826, %rd825, %rd1062;
	add.s64 	%rd827, %rd826, %rd730;
	add.s64 	%rd828, %rd827, %rd824;
	add.s64 	%rd829, %rd828, %rd821;
	add.s64 	%rd830, %rd829, %rd741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r577,%dummy}, %rd816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r578}, %rd816;
	}
	shf.r.wrap.b32 	%r579, %r578, %r577, 28;
	shf.r.wrap.b32 	%r580, %r577, %r578, 28;
	mov.b64 	%rd831, {%r580, %r579};
	shf.l.wrap.b32 	%r581, %r577, %r578, 30;
	shf.l.wrap.b32 	%r582, %r578, %r577, 30;
	mov.b64 	%rd832, {%r582, %r581};
	xor.b64  	%rd833, %rd831, %rd832;
	shf.l.wrap.b32 	%r583, %r577, %r578, 25;
	shf.l.wrap.b32 	%r584, %r578, %r577, 25;
	mov.b64 	%rd834, {%r584, %r583};
	xor.b64  	%rd835, %rd833, %rd834;
	and.b64  	%rd836, %rd816, %rd791;
	xor.b64  	%rd837, %rd816, %rd791;
	and.b64  	%rd838, %rd837, %rd766;
	or.b64  	%rd839, %rd838, %rd836;
	add.s64 	%rd840, %rd835, %rd839;
	add.s64 	%rd841, %rd840, %rd829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r585,%dummy}, %rd830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r586}, %rd830;
	}
	shf.r.wrap.b32 	%r587, %r586, %r585, 14;
	shf.r.wrap.b32 	%r588, %r585, %r586, 14;
	mov.b64 	%rd842, {%r588, %r587};
	shf.r.wrap.b32 	%r589, %r586, %r585, 18;
	shf.r.wrap.b32 	%r590, %r585, %r586, 18;
	mov.b64 	%rd843, {%r590, %r589};
	xor.b64  	%rd844, %rd842, %rd843;
	shf.l.wrap.b32 	%r591, %r585, %r586, 23;
	shf.l.wrap.b32 	%r592, %r586, %r585, 23;
	mov.b64 	%rd845, {%r592, %r591};
	xor.b64  	%rd846, %rd844, %rd845;
	xor.b64  	%rd847, %rd805, %rd780;
	and.b64  	%rd848, %rd830, %rd847;
	xor.b64  	%rd849, %rd848, %rd780;
	ld.const.u64 	%rd850, [%rd1050+192];
	add.s64 	%rd851, %rd850, %rd1063;
	add.s64 	%rd852, %rd851, %rd755;
	add.s64 	%rd853, %rd852, %rd849;
	add.s64 	%rd854, %rd853, %rd846;
	add.s64 	%rd855, %rd854, %rd766;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r593,%dummy}, %rd841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r594}, %rd841;
	}
	shf.r.wrap.b32 	%r595, %r594, %r593, 28;
	shf.r.wrap.b32 	%r596, %r593, %r594, 28;
	mov.b64 	%rd856, {%r596, %r595};
	shf.l.wrap.b32 	%r597, %r593, %r594, 30;
	shf.l.wrap.b32 	%r598, %r594, %r593, 30;
	mov.b64 	%rd857, {%r598, %r597};
	xor.b64  	%rd858, %rd856, %rd857;
	shf.l.wrap.b32 	%r599, %r593, %r594, 25;
	shf.l.wrap.b32 	%r600, %r594, %r593, 25;
	mov.b64 	%rd859, {%r600, %r599};
	xor.b64  	%rd860, %rd858, %rd859;
	and.b64  	%rd861, %rd841, %rd816;
	xor.b64  	%rd862, %rd841, %rd816;
	and.b64  	%rd863, %rd862, %rd791;
	or.b64  	%rd864, %rd863, %rd861;
	add.s64 	%rd865, %rd860, %rd864;
	add.s64 	%rd866, %rd865, %rd854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r601,%dummy}, %rd855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r602}, %rd855;
	}
	shf.r.wrap.b32 	%r603, %r602, %r601, 14;
	shf.r.wrap.b32 	%r604, %r601, %r602, 14;
	mov.b64 	%rd867, {%r604, %r603};
	shf.r.wrap.b32 	%r605, %r602, %r601, 18;
	shf.r.wrap.b32 	%r606, %r601, %r602, 18;
	mov.b64 	%rd868, {%r606, %r605};
	xor.b64  	%rd869, %rd867, %rd868;
	shf.l.wrap.b32 	%r607, %r601, %r602, 23;
	shf.l.wrap.b32 	%r608, %r602, %r601, 23;
	mov.b64 	%rd870, {%r608, %r607};
	xor.b64  	%rd871, %rd869, %rd870;
	xor.b64  	%rd872, %rd830, %rd805;
	and.b64  	%rd873, %rd855, %rd872;
	xor.b64  	%rd874, %rd873, %rd805;
	ld.const.u64 	%rd875, [%rd1050+200];
	add.s64 	%rd876, %rd875, %rd1064;
	add.s64 	%rd877, %rd876, %rd780;
	add.s64 	%rd878, %rd877, %rd874;
	add.s64 	%rd879, %rd878, %rd871;
	add.s64 	%rd880, %rd879, %rd791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r609,%dummy}, %rd866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r610}, %rd866;
	}
	shf.r.wrap.b32 	%r611, %r610, %r609, 28;
	shf.r.wrap.b32 	%r612, %r609, %r610, 28;
	mov.b64 	%rd881, {%r612, %r611};
	shf.l.wrap.b32 	%r613, %r609, %r610, 30;
	shf.l.wrap.b32 	%r614, %r610, %r609, 30;
	mov.b64 	%rd882, {%r614, %r613};
	xor.b64  	%rd883, %rd881, %rd882;
	shf.l.wrap.b32 	%r615, %r609, %r610, 25;
	shf.l.wrap.b32 	%r616, %r610, %r609, 25;
	mov.b64 	%rd884, {%r616, %r615};
	xor.b64  	%rd885, %rd883, %rd884;
	and.b64  	%rd886, %rd866, %rd841;
	xor.b64  	%rd887, %rd866, %rd841;
	and.b64  	%rd888, %rd887, %rd816;
	or.b64  	%rd889, %rd888, %rd886;
	add.s64 	%rd890, %rd885, %rd889;
	add.s64 	%rd891, %rd890, %rd879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r617,%dummy}, %rd880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r618}, %rd880;
	}
	shf.r.wrap.b32 	%r619, %r618, %r617, 14;
	shf.r.wrap.b32 	%r620, %r617, %r618, 14;
	mov.b64 	%rd892, {%r620, %r619};
	shf.r.wrap.b32 	%r621, %r618, %r617, 18;
	shf.r.wrap.b32 	%r622, %r617, %r618, 18;
	mov.b64 	%rd893, {%r622, %r621};
	xor.b64  	%rd894, %rd892, %rd893;
	shf.l.wrap.b32 	%r623, %r617, %r618, 23;
	shf.l.wrap.b32 	%r624, %r618, %r617, 23;
	mov.b64 	%rd895, {%r624, %r623};
	xor.b64  	%rd896, %rd894, %rd895;
	xor.b64  	%rd897, %rd855, %rd830;
	and.b64  	%rd898, %rd880, %rd897;
	xor.b64  	%rd899, %rd898, %rd830;
	ld.const.u64 	%rd900, [%rd1050+208];
	add.s64 	%rd901, %rd900, %rd1065;
	add.s64 	%rd902, %rd901, %rd805;
	add.s64 	%rd903, %rd902, %rd899;
	add.s64 	%rd904, %rd903, %rd896;
	add.s64 	%rd905, %rd904, %rd816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r625,%dummy}, %rd891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r626}, %rd891;
	}
	shf.r.wrap.b32 	%r627, %r626, %r625, 28;
	shf.r.wrap.b32 	%r628, %r625, %r626, 28;
	mov.b64 	%rd906, {%r628, %r627};
	shf.l.wrap.b32 	%r629, %r625, %r626, 30;
	shf.l.wrap.b32 	%r630, %r626, %r625, 30;
	mov.b64 	%rd907, {%r630, %r629};
	xor.b64  	%rd908, %rd906, %rd907;
	shf.l.wrap.b32 	%r631, %r625, %r626, 25;
	shf.l.wrap.b32 	%r632, %r626, %r625, 25;
	mov.b64 	%rd909, {%r632, %r631};
	xor.b64  	%rd910, %rd908, %rd909;
	and.b64  	%rd911, %rd891, %rd866;
	xor.b64  	%rd912, %rd891, %rd866;
	and.b64  	%rd913, %rd912, %rd841;
	or.b64  	%rd914, %rd913, %rd911;
	add.s64 	%rd915, %rd910, %rd914;
	add.s64 	%rd916, %rd915, %rd904;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r633,%dummy}, %rd905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r634}, %rd905;
	}
	shf.r.wrap.b32 	%r635, %r634, %r633, 14;
	shf.r.wrap.b32 	%r636, %r633, %r634, 14;
	mov.b64 	%rd917, {%r636, %r635};
	shf.r.wrap.b32 	%r637, %r634, %r633, 18;
	shf.r.wrap.b32 	%r638, %r633, %r634, 18;
	mov.b64 	%rd918, {%r638, %r637};
	xor.b64  	%rd919, %rd917, %rd918;
	shf.l.wrap.b32 	%r639, %r633, %r634, 23;
	shf.l.wrap.b32 	%r640, %r634, %r633, 23;
	mov.b64 	%rd920, {%r640, %r639};
	xor.b64  	%rd921, %rd919, %rd920;
	xor.b64  	%rd922, %rd880, %rd855;
	and.b64  	%rd923, %rd905, %rd922;
	xor.b64  	%rd924, %rd923, %rd855;
	ld.const.u64 	%rd925, [%rd1050+216];
	add.s64 	%rd926, %rd925, %rd1066;
	add.s64 	%rd927, %rd926, %rd830;
	add.s64 	%rd928, %rd927, %rd924;
	add.s64 	%rd929, %rd928, %rd921;
	add.s64 	%rd930, %rd929, %rd841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r641,%dummy}, %rd916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r642}, %rd916;
	}
	shf.r.wrap.b32 	%r643, %r642, %r641, 28;
	shf.r.wrap.b32 	%r644, %r641, %r642, 28;
	mov.b64 	%rd931, {%r644, %r643};
	shf.l.wrap.b32 	%r645, %r641, %r642, 30;
	shf.l.wrap.b32 	%r646, %r642, %r641, 30;
	mov.b64 	%rd932, {%r646, %r645};
	xor.b64  	%rd933, %rd931, %rd932;
	shf.l.wrap.b32 	%r647, %r641, %r642, 25;
	shf.l.wrap.b32 	%r648, %r642, %r641, 25;
	mov.b64 	%rd934, {%r648, %r647};
	xor.b64  	%rd935, %rd933, %rd934;
	and.b64  	%rd936, %rd916, %rd891;
	xor.b64  	%rd937, %rd916, %rd891;
	and.b64  	%rd938, %rd937, %rd866;
	or.b64  	%rd939, %rd938, %rd936;
	add.s64 	%rd940, %rd935, %rd939;
	add.s64 	%rd941, %rd940, %rd929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r649,%dummy}, %rd930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r650}, %rd930;
	}
	shf.r.wrap.b32 	%r651, %r650, %r649, 14;
	shf.r.wrap.b32 	%r652, %r649, %r650, 14;
	mov.b64 	%rd942, {%r652, %r651};
	shf.r.wrap.b32 	%r653, %r650, %r649, 18;
	shf.r.wrap.b32 	%r654, %r649, %r650, 18;
	mov.b64 	%rd943, {%r654, %r653};
	xor.b64  	%rd944, %rd942, %rd943;
	shf.l.wrap.b32 	%r655, %r649, %r650, 23;
	shf.l.wrap.b32 	%r656, %r650, %r649, 23;
	mov.b64 	%rd945, {%r656, %r655};
	xor.b64  	%rd946, %rd944, %rd945;
	xor.b64  	%rd947, %rd905, %rd880;
	and.b64  	%rd948, %rd930, %rd947;
	xor.b64  	%rd949, %rd948, %rd880;
	ld.const.u64 	%rd950, [%rd1050+224];
	add.s64 	%rd951, %rd950, %rd1067;
	add.s64 	%rd952, %rd951, %rd855;
	add.s64 	%rd953, %rd952, %rd949;
	add.s64 	%rd954, %rd953, %rd946;
	add.s64 	%rd1051, %rd954, %rd866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r657,%dummy}, %rd941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r658}, %rd941;
	}
	shf.r.wrap.b32 	%r659, %r658, %r657, 28;
	shf.r.wrap.b32 	%r660, %r657, %r658, 28;
	mov.b64 	%rd955, {%r660, %r659};
	shf.l.wrap.b32 	%r661, %r657, %r658, 30;
	shf.l.wrap.b32 	%r662, %r658, %r657, 30;
	mov.b64 	%rd956, {%r662, %r661};
	xor.b64  	%rd957, %rd955, %rd956;
	shf.l.wrap.b32 	%r663, %r657, %r658, 25;
	shf.l.wrap.b32 	%r664, %r658, %r657, 25;
	mov.b64 	%rd958, {%r664, %r663};
	xor.b64  	%rd959, %rd957, %rd958;
	and.b64  	%rd960, %rd941, %rd916;
	xor.b64  	%rd961, %rd941, %rd916;
	and.b64  	%rd962, %rd961, %rd891;
	or.b64  	%rd963, %rd962, %rd960;
	add.s64 	%rd964, %rd959, %rd963;
	add.s64 	%rd1074, %rd964, %rd954;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r665,%dummy}, %rd1051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r666}, %rd1051;
	}
	shf.r.wrap.b32 	%r667, %r666, %r665, 14;
	shf.r.wrap.b32 	%r668, %r665, %r666, 14;
	mov.b64 	%rd965, {%r668, %r667};
	shf.r.wrap.b32 	%r669, %r666, %r665, 18;
	shf.r.wrap.b32 	%r670, %r665, %r666, 18;
	mov.b64 	%rd966, {%r670, %r669};
	xor.b64  	%rd967, %rd965, %rd966;
	shf.l.wrap.b32 	%r671, %r665, %r666, 23;
	shf.l.wrap.b32 	%r672, %r666, %r665, 23;
	mov.b64 	%rd968, {%r672, %r671};
	xor.b64  	%rd969, %rd967, %rd968;
	xor.b64  	%rd970, %rd930, %rd905;
	and.b64  	%rd971, %rd1051, %rd970;
	xor.b64  	%rd972, %rd971, %rd905;
	ld.const.u64 	%rd973, [%rd1050+232];
	add.s64 	%rd974, %rd973, %rd1068;
	add.s64 	%rd975, %rd974, %rd880;
	add.s64 	%rd976, %rd975, %rd972;
	add.s64 	%rd977, %rd976, %rd969;
	add.s64 	%rd1052, %rd977, %rd891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r673,%dummy}, %rd1074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r674}, %rd1074;
	}
	shf.r.wrap.b32 	%r675, %r674, %r673, 28;
	shf.r.wrap.b32 	%r676, %r673, %r674, 28;
	mov.b64 	%rd978, {%r676, %r675};
	shf.l.wrap.b32 	%r677, %r673, %r674, 30;
	shf.l.wrap.b32 	%r678, %r674, %r673, 30;
	mov.b64 	%rd979, {%r678, %r677};
	xor.b64  	%rd980, %rd978, %rd979;
	shf.l.wrap.b32 	%r679, %r673, %r674, 25;
	shf.l.wrap.b32 	%r680, %r674, %r673, 25;
	mov.b64 	%rd981, {%r680, %r679};
	xor.b64  	%rd982, %rd980, %rd981;
	and.b64  	%rd983, %rd1074, %rd941;
	xor.b64  	%rd984, %rd1074, %rd941;
	and.b64  	%rd985, %rd984, %rd916;
	or.b64  	%rd986, %rd985, %rd983;
	add.s64 	%rd987, %rd982, %rd986;
	add.s64 	%rd1073, %rd987, %rd977;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r681,%dummy}, %rd1052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r682}, %rd1052;
	}
	shf.r.wrap.b32 	%r683, %r682, %r681, 14;
	shf.r.wrap.b32 	%r684, %r681, %r682, 14;
	mov.b64 	%rd988, {%r684, %r683};
	shf.r.wrap.b32 	%r685, %r682, %r681, 18;
	shf.r.wrap.b32 	%r686, %r681, %r682, 18;
	mov.b64 	%rd989, {%r686, %r685};
	xor.b64  	%rd990, %rd988, %rd989;
	shf.l.wrap.b32 	%r687, %r681, %r682, 23;
	shf.l.wrap.b32 	%r688, %r682, %r681, 23;
	mov.b64 	%rd991, {%r688, %r687};
	xor.b64  	%rd992, %rd990, %rd991;
	xor.b64  	%rd993, %rd1051, %rd930;
	and.b64  	%rd994, %rd1052, %rd993;
	xor.b64  	%rd995, %rd994, %rd930;
	ld.const.u64 	%rd996, [%rd1050+240];
	add.s64 	%rd997, %rd996, %rd1069;
	add.s64 	%rd998, %rd997, %rd905;
	add.s64 	%rd999, %rd998, %rd995;
	add.s64 	%rd1000, %rd999, %rd992;
	add.s64 	%rd1053, %rd1000, %rd916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r689,%dummy}, %rd1073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r690}, %rd1073;
	}
	shf.r.wrap.b32 	%r691, %r690, %r689, 28;
	shf.r.wrap.b32 	%r692, %r689, %r690, 28;
	mov.b64 	%rd1001, {%r692, %r691};
	shf.l.wrap.b32 	%r693, %r689, %r690, 30;
	shf.l.wrap.b32 	%r694, %r690, %r689, 30;
	mov.b64 	%rd1002, {%r694, %r693};
	xor.b64  	%rd1003, %rd1001, %rd1002;
	shf.l.wrap.b32 	%r695, %r689, %r690, 25;
	shf.l.wrap.b32 	%r696, %r690, %r689, 25;
	mov.b64 	%rd1004, {%r696, %r695};
	xor.b64  	%rd1005, %rd1003, %rd1004;
	and.b64  	%rd1006, %rd1073, %rd1074;
	xor.b64  	%rd1007, %rd1073, %rd1074;
	and.b64  	%rd1008, %rd1007, %rd941;
	or.b64  	%rd1009, %rd1008, %rd1006;
	add.s64 	%rd1010, %rd1005, %rd1009;
	add.s64 	%rd1072, %rd1010, %rd1000;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r697,%dummy}, %rd1053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r698}, %rd1053;
	}
	shf.r.wrap.b32 	%r699, %r698, %r697, 14;
	shf.r.wrap.b32 	%r700, %r697, %r698, 14;
	mov.b64 	%rd1011, {%r700, %r699};
	shf.r.wrap.b32 	%r701, %r698, %r697, 18;
	shf.r.wrap.b32 	%r702, %r697, %r698, 18;
	mov.b64 	%rd1012, {%r702, %r701};
	xor.b64  	%rd1013, %rd1011, %rd1012;
	shf.l.wrap.b32 	%r703, %r697, %r698, 23;
	shf.l.wrap.b32 	%r704, %r698, %r697, 23;
	mov.b64 	%rd1014, {%r704, %r703};
	xor.b64  	%rd1015, %rd1013, %rd1014;
	xor.b64  	%rd1016, %rd1052, %rd1051;
	and.b64  	%rd1017, %rd1053, %rd1016;
	xor.b64  	%rd1018, %rd1017, %rd1051;
	ld.const.u64 	%rd1019, [%rd1050+248];
	add.s64 	%rd1020, %rd1019, %rd1070;
	add.s64 	%rd1021, %rd1020, %rd930;
	add.s64 	%rd1022, %rd1021, %rd1018;
	add.s64 	%rd1023, %rd1022, %rd1015;
	add.s64 	%rd1054, %rd1023, %rd941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r705,%dummy}, %rd1072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r706}, %rd1072;
	}
	shf.r.wrap.b32 	%r707, %r706, %r705, 28;
	shf.r.wrap.b32 	%r708, %r705, %r706, 28;
	mov.b64 	%rd1024, {%r708, %r707};
	shf.l.wrap.b32 	%r709, %r705, %r706, 30;
	shf.l.wrap.b32 	%r710, %r706, %r705, 30;
	mov.b64 	%rd1025, {%r710, %r709};
	xor.b64  	%rd1026, %rd1024, %rd1025;
	shf.l.wrap.b32 	%r711, %r705, %r706, 25;
	shf.l.wrap.b32 	%r712, %r706, %r705, 25;
	mov.b64 	%rd1027, {%r712, %r711};
	xor.b64  	%rd1028, %rd1026, %rd1027;
	and.b64  	%rd1029, %rd1072, %rd1073;
	xor.b64  	%rd1030, %rd1072, %rd1073;
	and.b64  	%rd1031, %rd1030, %rd1074;
	or.b64  	%rd1032, %rd1031, %rd1029;
	add.s64 	%rd1033, %rd1028, %rd1032;
	add.s64 	%rd1071, %rd1033, %rd1023;
	add.s32 	%r724, %r724, 16;
	setp.lt.s32	%p3, %r724, 80;
	mov.u64 	%rd1050, %rd79;
	@%p3 bra 	BB3_4;

	mov.b64	{%r11, %r12}, %rd1051;
	setp.ne.s32	%p4, %r11, %r4;
	@%p4 bra 	BB3_11;

	mov.b64	{%r713, %r714}, %rd1074;
	setp.ne.s32	%p5, %r12, %r5;
	setp.ne.s32	%p6, %r713, %r6;
	or.pred  	%p7, %p5, %p6;
	setp.ne.s32	%p8, %r714, %r7;
	or.pred  	%p9, %p7, %p8;
	@%p9 bra 	BB3_11;

	atom.global.add.u32 	%r715, [%rd20], 1;
	setp.ne.s32	%p10, %r715, 0;
	@%p10 bra 	BB3_11;

	ld.param.u32 	%r721, [m01700_s04_param_31];
	atom.global.add.u32 	%r13, [%rd85], 1;
	setp.lt.u32	%p11, %r13, %r721;
	@%p11 bra 	BB3_10;
	bra.uni 	BB3_9;

BB3_10:
	ld.param.u32 	%r722, [m01700_s04_param_27];
	ld.param.u64 	%rd1049, [m01700_s04_param_14];
	ld.param.u32 	%r719, [m01700_s04_param_32];
	mul.wide.u32 	%rd1034, %r13, 32;
	add.s64 	%rd1035, %rd1049, %rd1034;
	st.global.u32 	[%rd1035+12], %r722;
	mov.u32 	%r717, 0;
	st.global.u32 	[%rd1035+16], %r717;
	st.global.u32 	[%rd1035+20], %r719;
	st.global.u64 	[%rd1035], %rd1;
	st.global.u32 	[%rd1035+8], %r723;
	st.global.u32 	[%rd1035+24], %r717;
	st.global.u32 	[%rd1035+28], %r717;
	bra.uni 	BB3_11;

BB3_9:
	atom.global.add.u32 	%r716, [%rd85], -1;

BB3_11:
	ld.param.u32 	%r718, [m01700_s04_param_30];
	add.s32 	%r723, %r723, 1;
	setp.lt.u32	%p12, %r723, %r718;
	@%p12 bra 	BB3_3;

BB3_12:
	ret;
}

	// .globl	m01700_s08
.entry m01700_s08(
	.param .u64 .ptr .global .align 4 m01700_s08_param_0,
	.param .u64 .ptr .global .align 4 m01700_s08_param_1,
	.param .u64 .ptr .global .align 4 m01700_s08_param_2,
	.param .u64 .ptr .const .align 4 m01700_s08_param_3,
	.param .u64 .ptr .global .align 1 m01700_s08_param_4,
	.param .u64 .ptr .global .align 1 m01700_s08_param_5,
	.param .u64 .ptr .global .align 4 m01700_s08_param_6,
	.param .u64 .ptr .global .align 4 m01700_s08_param_7,
	.param .u64 .ptr .global .align 4 m01700_s08_param_8,
	.param .u64 .ptr .global .align 4 m01700_s08_param_9,
	.param .u64 .ptr .global .align 4 m01700_s08_param_10,
	.param .u64 .ptr .global .align 4 m01700_s08_param_11,
	.param .u64 .ptr .global .align 4 m01700_s08_param_12,
	.param .u64 .ptr .global .align 4 m01700_s08_param_13,
	.param .u64 .ptr .global .align 8 m01700_s08_param_14,
	.param .u64 .ptr .global .align 4 m01700_s08_param_15,
	.param .u64 .ptr .global .align 4 m01700_s08_param_16,
	.param .u64 .ptr .global .align 4 m01700_s08_param_17,
	.param .u64 .ptr .global .align 1 m01700_s08_param_18,
	.param .u64 .ptr .global .align 4 m01700_s08_param_19,
	.param .u64 .ptr .global .align 1 m01700_s08_param_20,
	.param .u64 .ptr .global .align 1 m01700_s08_param_21,
	.param .u64 .ptr .global .align 1 m01700_s08_param_22,
	.param .u64 .ptr .global .align 1 m01700_s08_param_23,
	.param .u32 m01700_s08_param_24,
	.param .u32 m01700_s08_param_25,
	.param .u32 m01700_s08_param_26,
	.param .u32 m01700_s08_param_27,
	.param .u32 m01700_s08_param_28,
	.param .u32 m01700_s08_param_29,
	.param .u32 m01700_s08_param_30,
	.param .u32 m01700_s08_param_31,
	.param .u32 m01700_s08_param_32,
	.param .u32 m01700_s08_param_33,
	.param .u64 m01700_s08_param_34
)
{
	.reg .pred 	%p<13>;
	.reg .b32 	%r<729>;
	.reg .b64 	%rd<1077>;


	ld.param.u64 	%rd82, [m01700_s08_param_0];
	ld.param.u64 	%rd85, [m01700_s08_param_15];
	ld.param.u64 	%rd86, [m01700_s08_param_16];
	ld.param.u64 	%rd87, [m01700_s08_param_19];
	ld.param.u32 	%r16, [m01700_s08_param_30];
	ld.param.u32 	%r18, [m01700_s08_param_32];
	ld.param.u64 	%rd88, [m01700_s08_param_34];
	mov.b32	%r19, %envreg3;
	mov.u32 	%r20, %ctaid.x;
	mov.u32 	%r21, %ntid.x;
	mad.lo.s32 	%r22, %r20, %r21, %r19;
	mov.u32 	%r23, %tid.x;
	add.s32 	%r1, %r22, %r23;
	cvt.s64.s32	%rd1, %r1;
	setp.ge.u64	%p1, %rd1, %rd88;
	@%p1 bra 	BB4_12;

	setp.eq.s32	%p2, %r16, 0;
	@%p2 bra 	BB4_12;

	mul.wide.s32 	%rd89, %r1, 260;
	add.s64 	%rd90, %rd82, %rd89;
	ld.global.u32 	%r2, [%rd90];
	ld.global.u32 	%r3, [%rd90+4];
	mul.wide.u32 	%rd91, %r18, 64;
	add.s64 	%rd92, %rd85, %rd91;
	ld.global.u32 	%r4, [%rd92+56];
	ld.global.u32 	%r5, [%rd92+60];
	ld.global.u32 	%r6, [%rd92+24];
	ld.global.u32 	%r7, [%rd92+28];
	ld.global.u32 	%r25, [%rd90+8];
	ld.global.u32 	%r26, [%rd90+12];
	mov.b64	%rd2, {%r26, %r25};
	ld.global.u32 	%r27, [%rd90+16];
	ld.global.u32 	%r28, [%rd90+20];
	mov.b64	%rd3, {%r28, %r27};
	ld.global.u32 	%r29, [%rd90+24];
	ld.global.u32 	%r30, [%rd90+28];
	mov.b64	%rd4, {%r30, %r29};
	ld.global.u32 	%r31, [%rd90+60];
	mov.u32 	%r727, 0;
	mov.b64	%rd5, {%r31, %r727};
	ld.const.u64 	%rd93, [k_sha512];
	add.s64 	%rd6, %rd93, -1150475826592481981;
	ld.const.u64 	%rd94, [k_sha512+8];
	add.s64 	%rd95, %rd2, %rd94;
	add.s64 	%rd7, %rd95, 2270897969802886507;
	ld.const.u64 	%rd96, [k_sha512+16];
	add.s64 	%rd97, %rd3, %rd96;
	add.s64 	%rd8, %rd97, -7276294671716946913;
	ld.const.u64 	%rd98, [k_sha512+24];
	add.s64 	%rd99, %rd4, %rd98;
	add.s64 	%rd9, %rd99, 5840696475078001361;
	ld.const.u64 	%rd100, [k_sha512+120];
	add.s64 	%rd21, %rd100, %rd5;
	mul.wide.u32 	%rd101, %r18, 4;
	add.s64 	%rd22, %rd86, %rd101;

BB4_3:
	mov.u32 	%r724, 0;
	mov.b64	%rd1072, {%r31, %r724};
	ld.const.u64 	%rd1049, [k_sha512+112];
	ld.const.u64 	%rd1048, [k_sha512+104];
	ld.const.u64 	%rd1047, [k_sha512+96];
	ld.const.u64 	%rd1046, [k_sha512+88];
	ld.const.u64 	%rd1045, [k_sha512+80];
	ld.const.u64 	%rd1044, [k_sha512+72];
	ld.const.u64 	%rd1043, [k_sha512+64];
	ld.const.u64 	%rd1042, [k_sha512+56];
	ld.const.u64 	%rd1041, [k_sha512+48];
	ld.const.u64 	%rd1040, [k_sha512+40];
	ld.const.u64 	%rd1039, [k_sha512+32];
	ld.param.u64 	%rd1038, [m01700_s08_param_3];
	mul.wide.u32 	%rd114, %r727, 4;
	add.s64 	%rd115, %rd1038, %rd114;
	ld.const.u32 	%r33, [%rd115];
	or.b32  	%r34, %r33, %r2;
	mov.b64	%rd1057, {%r3, %r34};
	add.s64 	%rd116, %rd6, %rd1057;
	add.s64 	%rd117, %rd116, -4263291710961585108;
	add.s64 	%rd118, %rd116, 7114151716102877840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r35,%dummy}, %rd117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r36}, %rd117;
	}
	shf.r.wrap.b32 	%r37, %r36, %r35, 14;
	shf.r.wrap.b32 	%r38, %r35, %r36, 14;
	mov.b64 	%rd119, {%r38, %r37};
	shf.r.wrap.b32 	%r39, %r36, %r35, 18;
	shf.r.wrap.b32 	%r40, %r35, %r36, 18;
	mov.b64 	%rd120, {%r40, %r39};
	xor.b64  	%rd121, %rd119, %rd120;
	shf.l.wrap.b32 	%r41, %r35, %r36, 23;
	shf.l.wrap.b32 	%r42, %r36, %r35, 23;
	mov.b64 	%rd122, {%r42, %r41};
	xor.b64  	%rd123, %rd121, %rd122;
	and.b64  	%rd124, %rd117, -3887949035690463538;
	xor.b64  	%rd125, %rd124, -7276294671716946913;
	add.s64 	%rd126, %rd7, %rd125;
	add.s64 	%rd127, %rd126, %rd123;
	add.s64 	%rd128, %rd127, 4354685564936845355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r43,%dummy}, %rd118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r44}, %rd118;
	}
	shf.r.wrap.b32 	%r45, %r44, %r43, 28;
	shf.r.wrap.b32 	%r46, %r43, %r44, 28;
	mov.b64 	%rd129, {%r46, %r45};
	shf.l.wrap.b32 	%r47, %r43, %r44, 30;
	shf.l.wrap.b32 	%r48, %r44, %r43, 30;
	mov.b64 	%rd130, {%r48, %r47};
	xor.b64  	%rd131, %rd129, %rd130;
	shf.l.wrap.b32 	%r49, %r43, %r44, 25;
	shf.l.wrap.b32 	%r50, %r44, %r43, 25;
	mov.b64 	%rd132, {%r50, %r49};
	xor.b64  	%rd133, %rd131, %rd132;
	and.b64  	%rd134, %rd118, 7640891576956012808;
	and.b64  	%rd135, %rd118, -4942790177534073029;
	xor.b64  	%rd136, %rd135, 3026882967131160840;
	or.b64  	%rd137, %rd136, %rd134;
	add.s64 	%rd138, %rd133, %rd137;
	add.s64 	%rd139, %rd138, %rd127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r51,%dummy}, %rd128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r52}, %rd128;
	}
	shf.r.wrap.b32 	%r53, %r52, %r51, 14;
	shf.r.wrap.b32 	%r54, %r51, %r52, 14;
	mov.b64 	%rd140, {%r54, %r53};
	shf.r.wrap.b32 	%r55, %r52, %r51, 18;
	shf.r.wrap.b32 	%r56, %r51, %r52, 18;
	mov.b64 	%rd141, {%r56, %r55};
	xor.b64  	%rd142, %rd140, %rd141;
	shf.l.wrap.b32 	%r57, %r51, %r52, 23;
	shf.l.wrap.b32 	%r58, %r52, %r51, 23;
	mov.b64 	%rd143, {%r58, %r57};
	xor.b64  	%rd144, %rd142, %rd143;
	xor.b64  	%rd145, %rd117, 5840696475078001361;
	and.b64  	%rd146, %rd128, %rd145;
	xor.b64  	%rd147, %rd146, 5840696475078001361;
	add.s64 	%rd148, %rd8, %rd147;
	add.s64 	%rd149, %rd148, %rd144;
	add.s64 	%rd150, %rd149, -4942790177534073029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r59,%dummy}, %rd139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r60}, %rd139;
	}
	shf.r.wrap.b32 	%r61, %r60, %r59, 28;
	shf.r.wrap.b32 	%r62, %r59, %r60, 28;
	mov.b64 	%rd151, {%r62, %r61};
	shf.l.wrap.b32 	%r63, %r59, %r60, 30;
	shf.l.wrap.b32 	%r64, %r60, %r59, 30;
	mov.b64 	%rd152, {%r64, %r63};
	xor.b64  	%rd153, %rd151, %rd152;
	shf.l.wrap.b32 	%r65, %r59, %r60, 25;
	shf.l.wrap.b32 	%r66, %r60, %r59, 25;
	mov.b64 	%rd154, {%r66, %r65};
	xor.b64  	%rd155, %rd153, %rd154;
	and.b64  	%rd156, %rd139, %rd118;
	xor.b64  	%rd157, %rd139, %rd118;
	and.b64  	%rd158, %rd157, 7640891576956012808;
	or.b64  	%rd159, %rd158, %rd156;
	add.s64 	%rd160, %rd155, %rd159;
	add.s64 	%rd161, %rd160, %rd149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r67,%dummy}, %rd150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r68}, %rd150;
	}
	shf.r.wrap.b32 	%r69, %r68, %r67, 14;
	shf.r.wrap.b32 	%r70, %r67, %r68, 14;
	mov.b64 	%rd162, {%r70, %r69};
	shf.r.wrap.b32 	%r71, %r68, %r67, 18;
	shf.r.wrap.b32 	%r72, %r67, %r68, 18;
	mov.b64 	%rd163, {%r72, %r71};
	xor.b64  	%rd164, %rd162, %rd163;
	shf.l.wrap.b32 	%r73, %r67, %r68, 23;
	shf.l.wrap.b32 	%r74, %r68, %r67, 23;
	mov.b64 	%rd165, {%r74, %r73};
	xor.b64  	%rd166, %rd164, %rd165;
	xor.b64  	%rd167, %rd128, %rd117;
	and.b64  	%rd168, %rd150, %rd167;
	xor.b64  	%rd169, %rd168, %rd117;
	add.s64 	%rd170, %rd9, %rd169;
	add.s64 	%rd171, %rd170, %rd166;
	add.s64 	%rd172, %rd171, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r75,%dummy}, %rd161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r76}, %rd161;
	}
	shf.r.wrap.b32 	%r77, %r76, %r75, 28;
	shf.r.wrap.b32 	%r78, %r75, %r76, 28;
	mov.b64 	%rd173, {%r78, %r77};
	shf.l.wrap.b32 	%r79, %r75, %r76, 30;
	shf.l.wrap.b32 	%r80, %r76, %r75, 30;
	mov.b64 	%rd174, {%r80, %r79};
	xor.b64  	%rd175, %rd173, %rd174;
	shf.l.wrap.b32 	%r81, %r75, %r76, 25;
	shf.l.wrap.b32 	%r82, %r76, %r75, 25;
	mov.b64 	%rd176, {%r82, %r81};
	xor.b64  	%rd177, %rd175, %rd176;
	and.b64  	%rd178, %rd161, %rd139;
	xor.b64  	%rd179, %rd161, %rd139;
	and.b64  	%rd180, %rd179, %rd118;
	or.b64  	%rd181, %rd180, %rd178;
	add.s64 	%rd182, %rd177, %rd181;
	add.s64 	%rd183, %rd182, %rd171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r83,%dummy}, %rd172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r84}, %rd172;
	}
	shf.r.wrap.b32 	%r85, %r84, %r83, 14;
	shf.r.wrap.b32 	%r86, %r83, %r84, 14;
	mov.b64 	%rd184, {%r86, %r85};
	shf.r.wrap.b32 	%r87, %r84, %r83, 18;
	shf.r.wrap.b32 	%r88, %r83, %r84, 18;
	mov.b64 	%rd185, {%r88, %r87};
	xor.b64  	%rd186, %rd184, %rd185;
	shf.l.wrap.b32 	%r89, %r83, %r84, 23;
	shf.l.wrap.b32 	%r90, %r84, %r83, 23;
	mov.b64 	%rd187, {%r90, %r89};
	xor.b64  	%rd188, %rd186, %rd187;
	xor.b64  	%rd189, %rd150, %rd128;
	and.b64  	%rd190, %rd172, %rd189;
	xor.b64  	%rd191, %rd190, %rd128;
	add.s64 	%rd192, %rd117, %rd1039;
	add.s64 	%rd193, %rd192, %rd191;
	add.s64 	%rd194, %rd193, %rd188;
	add.s64 	%rd195, %rd194, %rd118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r91,%dummy}, %rd183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r92}, %rd183;
	}
	shf.r.wrap.b32 	%r93, %r92, %r91, 28;
	shf.r.wrap.b32 	%r94, %r91, %r92, 28;
	mov.b64 	%rd196, {%r94, %r93};
	shf.l.wrap.b32 	%r95, %r91, %r92, 30;
	shf.l.wrap.b32 	%r96, %r92, %r91, 30;
	mov.b64 	%rd197, {%r96, %r95};
	xor.b64  	%rd198, %rd196, %rd197;
	shf.l.wrap.b32 	%r97, %r91, %r92, 25;
	shf.l.wrap.b32 	%r98, %r92, %r91, 25;
	mov.b64 	%rd199, {%r98, %r97};
	xor.b64  	%rd200, %rd198, %rd199;
	and.b64  	%rd201, %rd183, %rd161;
	xor.b64  	%rd202, %rd183, %rd161;
	and.b64  	%rd203, %rd202, %rd139;
	or.b64  	%rd204, %rd203, %rd201;
	add.s64 	%rd205, %rd200, %rd204;
	add.s64 	%rd206, %rd205, %rd194;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r99,%dummy}, %rd195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r100}, %rd195;
	}
	shf.r.wrap.b32 	%r101, %r100, %r99, 14;
	shf.r.wrap.b32 	%r102, %r99, %r100, 14;
	mov.b64 	%rd207, {%r102, %r101};
	shf.r.wrap.b32 	%r103, %r100, %r99, 18;
	shf.r.wrap.b32 	%r104, %r99, %r100, 18;
	mov.b64 	%rd208, {%r104, %r103};
	xor.b64  	%rd209, %rd207, %rd208;
	shf.l.wrap.b32 	%r105, %r99, %r100, 23;
	shf.l.wrap.b32 	%r106, %r100, %r99, 23;
	mov.b64 	%rd210, {%r106, %r105};
	xor.b64  	%rd211, %rd209, %rd210;
	xor.b64  	%rd212, %rd172, %rd150;
	and.b64  	%rd213, %rd195, %rd212;
	xor.b64  	%rd214, %rd213, %rd150;
	add.s64 	%rd215, %rd128, %rd1040;
	add.s64 	%rd216, %rd215, %rd214;
	add.s64 	%rd217, %rd216, %rd211;
	add.s64 	%rd218, %rd217, %rd139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r107,%dummy}, %rd206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r108}, %rd206;
	}
	shf.r.wrap.b32 	%r109, %r108, %r107, 28;
	shf.r.wrap.b32 	%r110, %r107, %r108, 28;
	mov.b64 	%rd219, {%r110, %r109};
	shf.l.wrap.b32 	%r111, %r107, %r108, 30;
	shf.l.wrap.b32 	%r112, %r108, %r107, 30;
	mov.b64 	%rd220, {%r112, %r111};
	xor.b64  	%rd221, %rd219, %rd220;
	shf.l.wrap.b32 	%r113, %r107, %r108, 25;
	shf.l.wrap.b32 	%r114, %r108, %r107, 25;
	mov.b64 	%rd222, {%r114, %r113};
	xor.b64  	%rd223, %rd221, %rd222;
	and.b64  	%rd224, %rd206, %rd183;
	xor.b64  	%rd225, %rd206, %rd183;
	and.b64  	%rd226, %rd225, %rd161;
	or.b64  	%rd227, %rd226, %rd224;
	add.s64 	%rd228, %rd223, %rd227;
	add.s64 	%rd229, %rd228, %rd217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r115,%dummy}, %rd218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r116}, %rd218;
	}
	shf.r.wrap.b32 	%r117, %r116, %r115, 14;
	shf.r.wrap.b32 	%r118, %r115, %r116, 14;
	mov.b64 	%rd230, {%r118, %r117};
	shf.r.wrap.b32 	%r119, %r116, %r115, 18;
	shf.r.wrap.b32 	%r120, %r115, %r116, 18;
	mov.b64 	%rd231, {%r120, %r119};
	xor.b64  	%rd232, %rd230, %rd231;
	shf.l.wrap.b32 	%r121, %r115, %r116, 23;
	shf.l.wrap.b32 	%r122, %r116, %r115, 23;
	mov.b64 	%rd233, {%r122, %r121};
	xor.b64  	%rd234, %rd232, %rd233;
	xor.b64  	%rd235, %rd195, %rd172;
	and.b64  	%rd236, %rd218, %rd235;
	xor.b64  	%rd237, %rd236, %rd172;
	add.s64 	%rd238, %rd150, %rd1041;
	add.s64 	%rd239, %rd238, %rd237;
	add.s64 	%rd240, %rd239, %rd234;
	add.s64 	%rd241, %rd240, %rd161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r123,%dummy}, %rd229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r124}, %rd229;
	}
	shf.r.wrap.b32 	%r125, %r124, %r123, 28;
	shf.r.wrap.b32 	%r126, %r123, %r124, 28;
	mov.b64 	%rd242, {%r126, %r125};
	shf.l.wrap.b32 	%r127, %r123, %r124, 30;
	shf.l.wrap.b32 	%r128, %r124, %r123, 30;
	mov.b64 	%rd243, {%r128, %r127};
	xor.b64  	%rd244, %rd242, %rd243;
	shf.l.wrap.b32 	%r129, %r123, %r124, 25;
	shf.l.wrap.b32 	%r130, %r124, %r123, 25;
	mov.b64 	%rd245, {%r130, %r129};
	xor.b64  	%rd246, %rd244, %rd245;
	and.b64  	%rd247, %rd229, %rd206;
	xor.b64  	%rd248, %rd229, %rd206;
	and.b64  	%rd249, %rd248, %rd183;
	or.b64  	%rd250, %rd249, %rd247;
	add.s64 	%rd251, %rd246, %rd250;
	add.s64 	%rd252, %rd251, %rd240;
	add.s64 	%rd253, %rd172, %rd1042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r131,%dummy}, %rd241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r132}, %rd241;
	}
	shf.r.wrap.b32 	%r133, %r132, %r131, 14;
	shf.r.wrap.b32 	%r134, %r131, %r132, 14;
	mov.b64 	%rd254, {%r134, %r133};
	shf.r.wrap.b32 	%r135, %r132, %r131, 18;
	shf.r.wrap.b32 	%r136, %r131, %r132, 18;
	mov.b64 	%rd255, {%r136, %r135};
	xor.b64  	%rd256, %rd254, %rd255;
	shf.l.wrap.b32 	%r137, %r131, %r132, 23;
	shf.l.wrap.b32 	%r138, %r132, %r131, 23;
	mov.b64 	%rd257, {%r138, %r137};
	xor.b64  	%rd258, %rd256, %rd257;
	xor.b64  	%rd259, %rd218, %rd195;
	and.b64  	%rd260, %rd241, %rd259;
	xor.b64  	%rd261, %rd260, %rd195;
	add.s64 	%rd262, %rd253, %rd261;
	add.s64 	%rd263, %rd262, %rd258;
	add.s64 	%rd264, %rd263, %rd183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r139,%dummy}, %rd252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r140}, %rd252;
	}
	shf.r.wrap.b32 	%r141, %r140, %r139, 28;
	shf.r.wrap.b32 	%r142, %r139, %r140, 28;
	mov.b64 	%rd265, {%r142, %r141};
	shf.l.wrap.b32 	%r143, %r139, %r140, 30;
	shf.l.wrap.b32 	%r144, %r140, %r139, 30;
	mov.b64 	%rd266, {%r144, %r143};
	xor.b64  	%rd267, %rd265, %rd266;
	shf.l.wrap.b32 	%r145, %r139, %r140, 25;
	shf.l.wrap.b32 	%r146, %r140, %r139, 25;
	mov.b64 	%rd268, {%r146, %r145};
	xor.b64  	%rd269, %rd267, %rd268;
	and.b64  	%rd270, %rd252, %rd229;
	xor.b64  	%rd271, %rd252, %rd229;
	and.b64  	%rd272, %rd271, %rd206;
	or.b64  	%rd273, %rd272, %rd270;
	add.s64 	%rd274, %rd269, %rd273;
	add.s64 	%rd275, %rd274, %rd263;
	add.s64 	%rd276, %rd195, %rd1043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r147,%dummy}, %rd264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r148}, %rd264;
	}
	shf.r.wrap.b32 	%r149, %r148, %r147, 14;
	shf.r.wrap.b32 	%r150, %r147, %r148, 14;
	mov.b64 	%rd277, {%r150, %r149};
	shf.r.wrap.b32 	%r151, %r148, %r147, 18;
	shf.r.wrap.b32 	%r152, %r147, %r148, 18;
	mov.b64 	%rd278, {%r152, %r151};
	xor.b64  	%rd279, %rd277, %rd278;
	shf.l.wrap.b32 	%r153, %r147, %r148, 23;
	shf.l.wrap.b32 	%r154, %r148, %r147, 23;
	mov.b64 	%rd280, {%r154, %r153};
	xor.b64  	%rd281, %rd279, %rd280;
	xor.b64  	%rd282, %rd241, %rd218;
	and.b64  	%rd283, %rd264, %rd282;
	xor.b64  	%rd284, %rd283, %rd218;
	add.s64 	%rd285, %rd276, %rd284;
	add.s64 	%rd286, %rd285, %rd281;
	add.s64 	%rd287, %rd286, %rd206;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r155,%dummy}, %rd275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r156}, %rd275;
	}
	shf.r.wrap.b32 	%r157, %r156, %r155, 28;
	shf.r.wrap.b32 	%r158, %r155, %r156, 28;
	mov.b64 	%rd288, {%r158, %r157};
	shf.l.wrap.b32 	%r159, %r155, %r156, 30;
	shf.l.wrap.b32 	%r160, %r156, %r155, 30;
	mov.b64 	%rd289, {%r160, %r159};
	xor.b64  	%rd290, %rd288, %rd289;
	shf.l.wrap.b32 	%r161, %r155, %r156, 25;
	shf.l.wrap.b32 	%r162, %r156, %r155, 25;
	mov.b64 	%rd291, {%r162, %r161};
	xor.b64  	%rd292, %rd290, %rd291;
	and.b64  	%rd293, %rd275, %rd252;
	xor.b64  	%rd294, %rd275, %rd252;
	and.b64  	%rd295, %rd294, %rd229;
	or.b64  	%rd296, %rd295, %rd293;
	add.s64 	%rd297, %rd292, %rd296;
	add.s64 	%rd298, %rd297, %rd286;
	add.s64 	%rd299, %rd218, %rd1044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r163,%dummy}, %rd287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r164}, %rd287;
	}
	shf.r.wrap.b32 	%r165, %r164, %r163, 14;
	shf.r.wrap.b32 	%r166, %r163, %r164, 14;
	mov.b64 	%rd300, {%r166, %r165};
	shf.r.wrap.b32 	%r167, %r164, %r163, 18;
	shf.r.wrap.b32 	%r168, %r163, %r164, 18;
	mov.b64 	%rd301, {%r168, %r167};
	xor.b64  	%rd302, %rd300, %rd301;
	shf.l.wrap.b32 	%r169, %r163, %r164, 23;
	shf.l.wrap.b32 	%r170, %r164, %r163, 23;
	mov.b64 	%rd303, {%r170, %r169};
	xor.b64  	%rd304, %rd302, %rd303;
	xor.b64  	%rd305, %rd264, %rd241;
	and.b64  	%rd306, %rd287, %rd305;
	xor.b64  	%rd307, %rd306, %rd241;
	add.s64 	%rd308, %rd299, %rd307;
	add.s64 	%rd309, %rd308, %rd304;
	add.s64 	%rd310, %rd309, %rd229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r171,%dummy}, %rd298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r172}, %rd298;
	}
	shf.r.wrap.b32 	%r173, %r172, %r171, 28;
	shf.r.wrap.b32 	%r174, %r171, %r172, 28;
	mov.b64 	%rd311, {%r174, %r173};
	shf.l.wrap.b32 	%r175, %r171, %r172, 30;
	shf.l.wrap.b32 	%r176, %r172, %r171, 30;
	mov.b64 	%rd312, {%r176, %r175};
	xor.b64  	%rd313, %rd311, %rd312;
	shf.l.wrap.b32 	%r177, %r171, %r172, 25;
	shf.l.wrap.b32 	%r178, %r172, %r171, 25;
	mov.b64 	%rd314, {%r178, %r177};
	xor.b64  	%rd315, %rd313, %rd314;
	and.b64  	%rd316, %rd298, %rd275;
	xor.b64  	%rd317, %rd298, %rd275;
	and.b64  	%rd318, %rd317, %rd252;
	or.b64  	%rd319, %rd318, %rd316;
	add.s64 	%rd320, %rd315, %rd319;
	add.s64 	%rd321, %rd320, %rd309;
	add.s64 	%rd322, %rd241, %rd1045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r179,%dummy}, %rd310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r180}, %rd310;
	}
	shf.r.wrap.b32 	%r181, %r180, %r179, 14;
	shf.r.wrap.b32 	%r182, %r179, %r180, 14;
	mov.b64 	%rd323, {%r182, %r181};
	shf.r.wrap.b32 	%r183, %r180, %r179, 18;
	shf.r.wrap.b32 	%r184, %r179, %r180, 18;
	mov.b64 	%rd324, {%r184, %r183};
	xor.b64  	%rd325, %rd323, %rd324;
	shf.l.wrap.b32 	%r185, %r179, %r180, 23;
	shf.l.wrap.b32 	%r186, %r180, %r179, 23;
	mov.b64 	%rd326, {%r186, %r185};
	xor.b64  	%rd327, %rd325, %rd326;
	xor.b64  	%rd328, %rd287, %rd264;
	and.b64  	%rd329, %rd310, %rd328;
	xor.b64  	%rd330, %rd329, %rd264;
	add.s64 	%rd331, %rd322, %rd330;
	add.s64 	%rd332, %rd331, %rd327;
	add.s64 	%rd333, %rd332, %rd252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r187,%dummy}, %rd321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r188}, %rd321;
	}
	shf.r.wrap.b32 	%r189, %r188, %r187, 28;
	shf.r.wrap.b32 	%r190, %r187, %r188, 28;
	mov.b64 	%rd334, {%r190, %r189};
	shf.l.wrap.b32 	%r191, %r187, %r188, 30;
	shf.l.wrap.b32 	%r192, %r188, %r187, 30;
	mov.b64 	%rd335, {%r192, %r191};
	xor.b64  	%rd336, %rd334, %rd335;
	shf.l.wrap.b32 	%r193, %r187, %r188, 25;
	shf.l.wrap.b32 	%r194, %r188, %r187, 25;
	mov.b64 	%rd337, {%r194, %r193};
	xor.b64  	%rd338, %rd336, %rd337;
	and.b64  	%rd339, %rd321, %rd298;
	xor.b64  	%rd340, %rd321, %rd298;
	and.b64  	%rd341, %rd340, %rd275;
	or.b64  	%rd342, %rd341, %rd339;
	add.s64 	%rd343, %rd338, %rd342;
	add.s64 	%rd344, %rd343, %rd332;
	add.s64 	%rd345, %rd264, %rd1046;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r195,%dummy}, %rd333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r196}, %rd333;
	}
	shf.r.wrap.b32 	%r197, %r196, %r195, 14;
	shf.r.wrap.b32 	%r198, %r195, %r196, 14;
	mov.b64 	%rd346, {%r198, %r197};
	shf.r.wrap.b32 	%r199, %r196, %r195, 18;
	shf.r.wrap.b32 	%r200, %r195, %r196, 18;
	mov.b64 	%rd347, {%r200, %r199};
	xor.b64  	%rd348, %rd346, %rd347;
	shf.l.wrap.b32 	%r201, %r195, %r196, 23;
	shf.l.wrap.b32 	%r202, %r196, %r195, 23;
	mov.b64 	%rd349, {%r202, %r201};
	xor.b64  	%rd350, %rd348, %rd349;
	xor.b64  	%rd351, %rd310, %rd287;
	and.b64  	%rd352, %rd333, %rd351;
	xor.b64  	%rd353, %rd352, %rd287;
	add.s64 	%rd354, %rd345, %rd353;
	add.s64 	%rd355, %rd354, %rd350;
	add.s64 	%rd356, %rd355, %rd275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r203,%dummy}, %rd344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r204}, %rd344;
	}
	shf.r.wrap.b32 	%r205, %r204, %r203, 28;
	shf.r.wrap.b32 	%r206, %r203, %r204, 28;
	mov.b64 	%rd357, {%r206, %r205};
	shf.l.wrap.b32 	%r207, %r203, %r204, 30;
	shf.l.wrap.b32 	%r208, %r204, %r203, 30;
	mov.b64 	%rd358, {%r208, %r207};
	xor.b64  	%rd359, %rd357, %rd358;
	shf.l.wrap.b32 	%r209, %r203, %r204, 25;
	shf.l.wrap.b32 	%r210, %r204, %r203, 25;
	mov.b64 	%rd360, {%r210, %r209};
	xor.b64  	%rd361, %rd359, %rd360;
	and.b64  	%rd362, %rd344, %rd321;
	xor.b64  	%rd363, %rd344, %rd321;
	and.b64  	%rd364, %rd363, %rd298;
	or.b64  	%rd365, %rd364, %rd362;
	add.s64 	%rd366, %rd361, %rd365;
	add.s64 	%rd367, %rd366, %rd355;
	add.s64 	%rd368, %rd287, %rd1047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r211,%dummy}, %rd356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r212}, %rd356;
	}
	shf.r.wrap.b32 	%r213, %r212, %r211, 14;
	shf.r.wrap.b32 	%r214, %r211, %r212, 14;
	mov.b64 	%rd369, {%r214, %r213};
	shf.r.wrap.b32 	%r215, %r212, %r211, 18;
	shf.r.wrap.b32 	%r216, %r211, %r212, 18;
	mov.b64 	%rd370, {%r216, %r215};
	xor.b64  	%rd371, %rd369, %rd370;
	shf.l.wrap.b32 	%r217, %r211, %r212, 23;
	shf.l.wrap.b32 	%r218, %r212, %r211, 23;
	mov.b64 	%rd372, {%r218, %r217};
	xor.b64  	%rd373, %rd371, %rd372;
	xor.b64  	%rd374, %rd333, %rd310;
	and.b64  	%rd375, %rd356, %rd374;
	xor.b64  	%rd376, %rd375, %rd310;
	add.s64 	%rd377, %rd368, %rd376;
	add.s64 	%rd378, %rd377, %rd373;
	add.s64 	%rd1053, %rd378, %rd298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r219,%dummy}, %rd367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r220}, %rd367;
	}
	shf.r.wrap.b32 	%r221, %r220, %r219, 28;
	shf.r.wrap.b32 	%r222, %r219, %r220, 28;
	mov.b64 	%rd379, {%r222, %r221};
	shf.l.wrap.b32 	%r223, %r219, %r220, 30;
	shf.l.wrap.b32 	%r224, %r220, %r219, 30;
	mov.b64 	%rd380, {%r224, %r223};
	xor.b64  	%rd381, %rd379, %rd380;
	shf.l.wrap.b32 	%r225, %r219, %r220, 25;
	shf.l.wrap.b32 	%r226, %r220, %r219, 25;
	mov.b64 	%rd382, {%r226, %r225};
	xor.b64  	%rd383, %rd381, %rd382;
	and.b64  	%rd384, %rd367, %rd344;
	xor.b64  	%rd385, %rd367, %rd344;
	and.b64  	%rd386, %rd385, %rd321;
	or.b64  	%rd387, %rd386, %rd384;
	add.s64 	%rd388, %rd383, %rd387;
	add.s64 	%rd1076, %rd388, %rd378;
	add.s64 	%rd389, %rd310, %rd1048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r227,%dummy}, %rd1053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r228}, %rd1053;
	}
	shf.r.wrap.b32 	%r229, %r228, %r227, 14;
	shf.r.wrap.b32 	%r230, %r227, %r228, 14;
	mov.b64 	%rd390, {%r230, %r229};
	shf.r.wrap.b32 	%r231, %r228, %r227, 18;
	shf.r.wrap.b32 	%r232, %r227, %r228, 18;
	mov.b64 	%rd391, {%r232, %r231};
	xor.b64  	%rd392, %rd390, %rd391;
	shf.l.wrap.b32 	%r233, %r227, %r228, 23;
	shf.l.wrap.b32 	%r234, %r228, %r227, 23;
	mov.b64 	%rd393, {%r234, %r233};
	xor.b64  	%rd394, %rd392, %rd393;
	xor.b64  	%rd395, %rd356, %rd333;
	and.b64  	%rd396, %rd1053, %rd395;
	xor.b64  	%rd397, %rd396, %rd333;
	add.s64 	%rd398, %rd389, %rd397;
	add.s64 	%rd399, %rd398, %rd394;
	add.s64 	%rd1054, %rd399, %rd321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r235,%dummy}, %rd1076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r236}, %rd1076;
	}
	shf.r.wrap.b32 	%r237, %r236, %r235, 28;
	shf.r.wrap.b32 	%r238, %r235, %r236, 28;
	mov.b64 	%rd400, {%r238, %r237};
	shf.l.wrap.b32 	%r239, %r235, %r236, 30;
	shf.l.wrap.b32 	%r240, %r236, %r235, 30;
	mov.b64 	%rd401, {%r240, %r239};
	xor.b64  	%rd402, %rd400, %rd401;
	shf.l.wrap.b32 	%r241, %r235, %r236, 25;
	shf.l.wrap.b32 	%r242, %r236, %r235, 25;
	mov.b64 	%rd403, {%r242, %r241};
	xor.b64  	%rd404, %rd402, %rd403;
	and.b64  	%rd405, %rd1076, %rd367;
	xor.b64  	%rd406, %rd1076, %rd367;
	and.b64  	%rd407, %rd406, %rd344;
	or.b64  	%rd408, %rd407, %rd405;
	add.s64 	%rd409, %rd404, %rd408;
	add.s64 	%rd1075, %rd409, %rd399;
	add.s64 	%rd410, %rd333, %rd1049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r243,%dummy}, %rd1054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r244}, %rd1054;
	}
	shf.r.wrap.b32 	%r245, %r244, %r243, 14;
	shf.r.wrap.b32 	%r246, %r243, %r244, 14;
	mov.b64 	%rd411, {%r246, %r245};
	shf.r.wrap.b32 	%r247, %r244, %r243, 18;
	shf.r.wrap.b32 	%r248, %r243, %r244, 18;
	mov.b64 	%rd412, {%r248, %r247};
	xor.b64  	%rd413, %rd411, %rd412;
	shf.l.wrap.b32 	%r249, %r243, %r244, 23;
	shf.l.wrap.b32 	%r250, %r244, %r243, 23;
	mov.b64 	%rd414, {%r250, %r249};
	xor.b64  	%rd415, %rd413, %rd414;
	xor.b64  	%rd416, %rd1053, %rd356;
	and.b64  	%rd417, %rd1054, %rd416;
	xor.b64  	%rd418, %rd417, %rd356;
	add.s64 	%rd419, %rd410, %rd418;
	add.s64 	%rd420, %rd419, %rd415;
	add.s64 	%rd1055, %rd420, %rd344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r251,%dummy}, %rd1075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r252}, %rd1075;
	}
	shf.r.wrap.b32 	%r253, %r252, %r251, 28;
	shf.r.wrap.b32 	%r254, %r251, %r252, 28;
	mov.b64 	%rd421, {%r254, %r253};
	shf.l.wrap.b32 	%r255, %r251, %r252, 30;
	shf.l.wrap.b32 	%r256, %r252, %r251, 30;
	mov.b64 	%rd422, {%r256, %r255};
	xor.b64  	%rd423, %rd421, %rd422;
	shf.l.wrap.b32 	%r257, %r251, %r252, 25;
	shf.l.wrap.b32 	%r258, %r252, %r251, 25;
	mov.b64 	%rd424, {%r258, %r257};
	xor.b64  	%rd425, %rd423, %rd424;
	and.b64  	%rd426, %rd1075, %rd1076;
	xor.b64  	%rd427, %rd1075, %rd1076;
	and.b64  	%rd428, %rd427, %rd367;
	or.b64  	%rd429, %rd428, %rd426;
	add.s64 	%rd430, %rd425, %rd429;
	add.s64 	%rd1074, %rd430, %rd420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r259,%dummy}, %rd1055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r260}, %rd1055;
	}
	shf.r.wrap.b32 	%r261, %r260, %r259, 14;
	shf.r.wrap.b32 	%r262, %r259, %r260, 14;
	mov.b64 	%rd431, {%r262, %r261};
	shf.r.wrap.b32 	%r263, %r260, %r259, 18;
	shf.r.wrap.b32 	%r264, %r259, %r260, 18;
	mov.b64 	%rd432, {%r264, %r263};
	xor.b64  	%rd433, %rd431, %rd432;
	shf.l.wrap.b32 	%r265, %r259, %r260, 23;
	shf.l.wrap.b32 	%r266, %r260, %r259, 23;
	mov.b64 	%rd434, {%r266, %r265};
	xor.b64  	%rd435, %rd433, %rd434;
	xor.b64  	%rd436, %rd1054, %rd1053;
	and.b64  	%rd437, %rd1055, %rd436;
	xor.b64  	%rd438, %rd437, %rd1053;
	add.s64 	%rd439, %rd21, %rd356;
	add.s64 	%rd440, %rd439, %rd438;
	add.s64 	%rd441, %rd440, %rd435;
	add.s64 	%rd1056, %rd441, %rd367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r267,%dummy}, %rd1074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r268}, %rd1074;
	}
	shf.r.wrap.b32 	%r269, %r268, %r267, 28;
	shf.r.wrap.b32 	%r270, %r267, %r268, 28;
	mov.b64 	%rd442, {%r270, %r269};
	shf.l.wrap.b32 	%r271, %r267, %r268, 30;
	shf.l.wrap.b32 	%r272, %r268, %r267, 30;
	mov.b64 	%rd443, {%r272, %r271};
	xor.b64  	%rd444, %rd442, %rd443;
	shf.l.wrap.b32 	%r273, %r267, %r268, 25;
	shf.l.wrap.b32 	%r274, %r268, %r267, 25;
	mov.b64 	%rd445, {%r274, %r273};
	xor.b64  	%rd446, %rd444, %rd445;
	and.b64  	%rd447, %rd1074, %rd1075;
	xor.b64  	%rd448, %rd1074, %rd1075;
	and.b64  	%rd449, %rd448, %rd1076;
	or.b64  	%rd450, %rd449, %rd447;
	add.s64 	%rd451, %rd446, %rd450;
	add.s64 	%rd1073, %rd451, %rd441;
	mov.u64 	%rd1061, 0;
	mov.u32 	%r728, 16;
	mov.u64 	%rd1052, k_sha512;
	mov.u64 	%rd1058, %rd2;
	mov.u64 	%rd1059, %rd3;
	mov.u64 	%rd1060, %rd4;
	mov.u64 	%rd1062, %rd1061;
	mov.u64 	%rd1063, %rd1061;
	mov.u64 	%rd1064, %rd1061;
	mov.u64 	%rd1065, %rd1061;
	mov.u64 	%rd1066, %rd1061;
	mov.u64 	%rd1067, %rd1061;
	mov.u64 	%rd1068, %rd1061;
	mov.u64 	%rd1069, %rd1061;
	mov.u64 	%rd1070, %rd1061;
	mov.u64 	%rd1071, %rd1061;

BB4_4:
	shr.u64 	%rd452, %rd1071, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r275}, %rd1071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r276,%dummy}, %rd1071;
	}
	shf.l.wrap.b32 	%r277, %r276, %r275, 3;
	shf.l.wrap.b32 	%r278, %r275, %r276, 3;
	mov.b64 	%rd453, {%r278, %r277};
	xor.b64  	%rd454, %rd453, %rd452;
	shf.r.wrap.b32 	%r279, %r275, %r276, 19;
	shf.r.wrap.b32 	%r280, %r276, %r275, 19;
	mov.b64 	%rd455, {%r280, %r279};
	xor.b64  	%rd456, %rd454, %rd455;
	add.s64 	%rd457, %rd1066, %rd456;
	shr.u64 	%rd458, %rd1058, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r281,%dummy}, %rd1058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r282}, %rd1058;
	}
	shf.r.wrap.b32 	%r283, %r282, %r281, 8;
	shf.r.wrap.b32 	%r284, %r281, %r282, 8;
	mov.b64 	%rd459, {%r284, %r283};
	xor.b64  	%rd460, %rd459, %rd458;
	shf.r.wrap.b32 	%r285, %r282, %r281, 1;
	shf.r.wrap.b32 	%r286, %r281, %r282, 1;
	mov.b64 	%rd461, {%r286, %r285};
	xor.b64  	%rd462, %rd460, %rd461;
	add.s64 	%rd463, %rd457, %rd1057;
	add.s64 	%rd1057, %rd463, %rd462;
	shr.u64 	%rd464, %rd1072, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r287}, %rd1072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r288,%dummy}, %rd1072;
	}
	shf.l.wrap.b32 	%r289, %r288, %r287, 3;
	shf.l.wrap.b32 	%r290, %r287, %r288, 3;
	mov.b64 	%rd465, {%r290, %r289};
	xor.b64  	%rd466, %rd465, %rd464;
	shf.r.wrap.b32 	%r291, %r287, %r288, 19;
	shf.r.wrap.b32 	%r292, %r288, %r287, 19;
	mov.b64 	%rd467, {%r292, %r291};
	xor.b64  	%rd468, %rd466, %rd467;
	add.s64 	%rd469, %rd1067, %rd468;
	shr.u64 	%rd470, %rd1059, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r293,%dummy}, %rd1059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r294}, %rd1059;
	}
	shf.r.wrap.b32 	%r295, %r294, %r293, 8;
	shf.r.wrap.b32 	%r296, %r293, %r294, 8;
	mov.b64 	%rd471, {%r296, %r295};
	xor.b64  	%rd472, %rd471, %rd470;
	shf.r.wrap.b32 	%r297, %r294, %r293, 1;
	shf.r.wrap.b32 	%r298, %r293, %r294, 1;
	mov.b64 	%rd473, {%r298, %r297};
	xor.b64  	%rd474, %rd472, %rd473;
	add.s64 	%rd475, %rd469, %rd1058;
	add.s64 	%rd1058, %rd475, %rd474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r299,%dummy}, %rd1057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r300}, %rd1057;
	}
	shf.r.wrap.b32 	%r301, %r300, %r299, 19;
	shf.r.wrap.b32 	%r302, %r299, %r300, 19;
	mov.b64 	%rd476, {%r302, %r301};
	shf.l.wrap.b32 	%r303, %r299, %r300, 3;
	shf.l.wrap.b32 	%r304, %r300, %r299, 3;
	mov.b64 	%rd477, {%r304, %r303};
	shr.u64 	%rd478, %rd1057, 6;
	xor.b64  	%rd479, %rd477, %rd478;
	xor.b64  	%rd480, %rd479, %rd476;
	shr.u64 	%rd481, %rd1060, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r305,%dummy}, %rd1060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r306}, %rd1060;
	}
	shf.r.wrap.b32 	%r307, %r306, %r305, 8;
	shf.r.wrap.b32 	%r308, %r305, %r306, 8;
	mov.b64 	%rd482, {%r308, %r307};
	xor.b64  	%rd483, %rd482, %rd481;
	shf.r.wrap.b32 	%r309, %r306, %r305, 1;
	shf.r.wrap.b32 	%r310, %r305, %r306, 1;
	mov.b64 	%rd484, {%r310, %r309};
	xor.b64  	%rd485, %rd483, %rd484;
	add.s64 	%rd486, %rd1059, %rd1068;
	add.s64 	%rd487, %rd486, %rd485;
	add.s64 	%rd1059, %rd487, %rd480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r311,%dummy}, %rd1058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r312}, %rd1058;
	}
	shf.r.wrap.b32 	%r313, %r312, %r311, 19;
	shf.r.wrap.b32 	%r314, %r311, %r312, 19;
	mov.b64 	%rd488, {%r314, %r313};
	shf.l.wrap.b32 	%r315, %r311, %r312, 3;
	shf.l.wrap.b32 	%r316, %r312, %r311, 3;
	mov.b64 	%rd489, {%r316, %r315};
	shr.u64 	%rd490, %rd1058, 6;
	xor.b64  	%rd491, %rd489, %rd490;
	xor.b64  	%rd492, %rd491, %rd488;
	shr.u64 	%rd493, %rd1061, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r317,%dummy}, %rd1061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r318}, %rd1061;
	}
	shf.r.wrap.b32 	%r319, %r318, %r317, 8;
	shf.r.wrap.b32 	%r320, %r317, %r318, 8;
	mov.b64 	%rd494, {%r320, %r319};
	xor.b64  	%rd495, %rd494, %rd493;
	shf.r.wrap.b32 	%r321, %r318, %r317, 1;
	shf.r.wrap.b32 	%r322, %r317, %r318, 1;
	mov.b64 	%rd496, {%r322, %r321};
	xor.b64  	%rd497, %rd495, %rd496;
	add.s64 	%rd498, %rd1060, %rd1069;
	add.s64 	%rd499, %rd498, %rd497;
	add.s64 	%rd1060, %rd499, %rd492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r323,%dummy}, %rd1059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r324}, %rd1059;
	}
	shf.r.wrap.b32 	%r325, %r324, %r323, 19;
	shf.r.wrap.b32 	%r326, %r323, %r324, 19;
	mov.b64 	%rd500, {%r326, %r325};
	shf.l.wrap.b32 	%r327, %r323, %r324, 3;
	shf.l.wrap.b32 	%r328, %r324, %r323, 3;
	mov.b64 	%rd501, {%r328, %r327};
	shr.u64 	%rd502, %rd1059, 6;
	xor.b64  	%rd503, %rd501, %rd502;
	xor.b64  	%rd504, %rd503, %rd500;
	shr.u64 	%rd505, %rd1062, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r329,%dummy}, %rd1062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r330}, %rd1062;
	}
	shf.r.wrap.b32 	%r331, %r330, %r329, 8;
	shf.r.wrap.b32 	%r332, %r329, %r330, 8;
	mov.b64 	%rd506, {%r332, %r331};
	xor.b64  	%rd507, %rd506, %rd505;
	shf.r.wrap.b32 	%r333, %r330, %r329, 1;
	shf.r.wrap.b32 	%r334, %r329, %r330, 1;
	mov.b64 	%rd508, {%r334, %r333};
	xor.b64  	%rd509, %rd507, %rd508;
	add.s64 	%rd510, %rd1061, %rd1070;
	add.s64 	%rd511, %rd510, %rd509;
	add.s64 	%rd1061, %rd511, %rd504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r335,%dummy}, %rd1060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r336}, %rd1060;
	}
	shf.r.wrap.b32 	%r337, %r336, %r335, 19;
	shf.r.wrap.b32 	%r338, %r335, %r336, 19;
	mov.b64 	%rd512, {%r338, %r337};
	shf.l.wrap.b32 	%r339, %r335, %r336, 3;
	shf.l.wrap.b32 	%r340, %r336, %r335, 3;
	mov.b64 	%rd513, {%r340, %r339};
	shr.u64 	%rd514, %rd1060, 6;
	xor.b64  	%rd515, %rd513, %rd514;
	xor.b64  	%rd516, %rd515, %rd512;
	shr.u64 	%rd517, %rd1063, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r341,%dummy}, %rd1063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r342}, %rd1063;
	}
	shf.r.wrap.b32 	%r343, %r342, %r341, 8;
	shf.r.wrap.b32 	%r344, %r341, %r342, 8;
	mov.b64 	%rd518, {%r344, %r343};
	xor.b64  	%rd519, %rd518, %rd517;
	shf.r.wrap.b32 	%r345, %r342, %r341, 1;
	shf.r.wrap.b32 	%r346, %r341, %r342, 1;
	mov.b64 	%rd520, {%r346, %r345};
	xor.b64  	%rd521, %rd519, %rd520;
	add.s64 	%rd522, %rd1062, %rd1071;
	add.s64 	%rd523, %rd522, %rd521;
	add.s64 	%rd1062, %rd523, %rd516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r347,%dummy}, %rd1061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r348}, %rd1061;
	}
	shf.r.wrap.b32 	%r349, %r348, %r347, 19;
	shf.r.wrap.b32 	%r350, %r347, %r348, 19;
	mov.b64 	%rd524, {%r350, %r349};
	shf.l.wrap.b32 	%r351, %r347, %r348, 3;
	shf.l.wrap.b32 	%r352, %r348, %r347, 3;
	mov.b64 	%rd525, {%r352, %r351};
	shr.u64 	%rd526, %rd1061, 6;
	xor.b64  	%rd527, %rd525, %rd526;
	xor.b64  	%rd528, %rd527, %rd524;
	shr.u64 	%rd529, %rd1064, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r353,%dummy}, %rd1064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r354}, %rd1064;
	}
	shf.r.wrap.b32 	%r355, %r354, %r353, 8;
	shf.r.wrap.b32 	%r356, %r353, %r354, 8;
	mov.b64 	%rd530, {%r356, %r355};
	xor.b64  	%rd531, %rd530, %rd529;
	shf.r.wrap.b32 	%r357, %r354, %r353, 1;
	shf.r.wrap.b32 	%r358, %r353, %r354, 1;
	mov.b64 	%rd532, {%r358, %r357};
	xor.b64  	%rd533, %rd531, %rd532;
	add.s64 	%rd534, %rd1063, %rd1072;
	add.s64 	%rd535, %rd534, %rd533;
	add.s64 	%rd1063, %rd535, %rd528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r359,%dummy}, %rd1062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r360}, %rd1062;
	}
	shf.r.wrap.b32 	%r361, %r360, %r359, 19;
	shf.r.wrap.b32 	%r362, %r359, %r360, 19;
	mov.b64 	%rd536, {%r362, %r361};
	shf.l.wrap.b32 	%r363, %r359, %r360, 3;
	shf.l.wrap.b32 	%r364, %r360, %r359, 3;
	mov.b64 	%rd537, {%r364, %r363};
	shr.u64 	%rd538, %rd1062, 6;
	xor.b64  	%rd539, %rd537, %rd538;
	xor.b64  	%rd540, %rd539, %rd536;
	shr.u64 	%rd541, %rd1065, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r365,%dummy}, %rd1065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r366}, %rd1065;
	}
	shf.r.wrap.b32 	%r367, %r366, %r365, 8;
	shf.r.wrap.b32 	%r368, %r365, %r366, 8;
	mov.b64 	%rd542, {%r368, %r367};
	xor.b64  	%rd543, %rd542, %rd541;
	shf.r.wrap.b32 	%r369, %r366, %r365, 1;
	shf.r.wrap.b32 	%r370, %r365, %r366, 1;
	mov.b64 	%rd544, {%r370, %r369};
	xor.b64  	%rd545, %rd543, %rd544;
	add.s64 	%rd546, %rd545, %rd1064;
	add.s64 	%rd547, %rd546, %rd1057;
	add.s64 	%rd1064, %rd547, %rd540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r371,%dummy}, %rd1063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r372}, %rd1063;
	}
	shf.r.wrap.b32 	%r373, %r372, %r371, 19;
	shf.r.wrap.b32 	%r374, %r371, %r372, 19;
	mov.b64 	%rd548, {%r374, %r373};
	shf.l.wrap.b32 	%r375, %r371, %r372, 3;
	shf.l.wrap.b32 	%r376, %r372, %r371, 3;
	mov.b64 	%rd549, {%r376, %r375};
	shr.u64 	%rd550, %rd1063, 6;
	xor.b64  	%rd551, %rd549, %rd550;
	xor.b64  	%rd552, %rd551, %rd548;
	shr.u64 	%rd553, %rd1066, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r377,%dummy}, %rd1066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r378}, %rd1066;
	}
	shf.r.wrap.b32 	%r379, %r378, %r377, 8;
	shf.r.wrap.b32 	%r380, %r377, %r378, 8;
	mov.b64 	%rd554, {%r380, %r379};
	xor.b64  	%rd555, %rd554, %rd553;
	shf.r.wrap.b32 	%r381, %r378, %r377, 1;
	shf.r.wrap.b32 	%r382, %r377, %r378, 1;
	mov.b64 	%rd556, {%r382, %r381};
	xor.b64  	%rd557, %rd555, %rd556;
	add.s64 	%rd558, %rd557, %rd1065;
	add.s64 	%rd559, %rd558, %rd1058;
	add.s64 	%rd1065, %rd559, %rd552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r383,%dummy}, %rd1064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r384}, %rd1064;
	}
	shf.r.wrap.b32 	%r385, %r384, %r383, 19;
	shf.r.wrap.b32 	%r386, %r383, %r384, 19;
	mov.b64 	%rd560, {%r386, %r385};
	shf.l.wrap.b32 	%r387, %r383, %r384, 3;
	shf.l.wrap.b32 	%r388, %r384, %r383, 3;
	mov.b64 	%rd561, {%r388, %r387};
	shr.u64 	%rd562, %rd1064, 6;
	xor.b64  	%rd563, %rd561, %rd562;
	xor.b64  	%rd564, %rd563, %rd560;
	shr.u64 	%rd565, %rd1067, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r389,%dummy}, %rd1067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r390}, %rd1067;
	}
	shf.r.wrap.b32 	%r391, %r390, %r389, 8;
	shf.r.wrap.b32 	%r392, %r389, %r390, 8;
	mov.b64 	%rd566, {%r392, %r391};
	xor.b64  	%rd567, %rd566, %rd565;
	shf.r.wrap.b32 	%r393, %r390, %r389, 1;
	shf.r.wrap.b32 	%r394, %r389, %r390, 1;
	mov.b64 	%rd568, {%r394, %r393};
	xor.b64  	%rd569, %rd567, %rd568;
	add.s64 	%rd570, %rd569, %rd1066;
	add.s64 	%rd571, %rd570, %rd1059;
	add.s64 	%rd1066, %rd571, %rd564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r395,%dummy}, %rd1065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r396}, %rd1065;
	}
	shf.r.wrap.b32 	%r397, %r396, %r395, 19;
	shf.r.wrap.b32 	%r398, %r395, %r396, 19;
	mov.b64 	%rd572, {%r398, %r397};
	shf.l.wrap.b32 	%r399, %r395, %r396, 3;
	shf.l.wrap.b32 	%r400, %r396, %r395, 3;
	mov.b64 	%rd573, {%r400, %r399};
	shr.u64 	%rd574, %rd1065, 6;
	xor.b64  	%rd575, %rd573, %rd574;
	xor.b64  	%rd576, %rd575, %rd572;
	shr.u64 	%rd577, %rd1068, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r401,%dummy}, %rd1068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r402}, %rd1068;
	}
	shf.r.wrap.b32 	%r403, %r402, %r401, 8;
	shf.r.wrap.b32 	%r404, %r401, %r402, 8;
	mov.b64 	%rd578, {%r404, %r403};
	xor.b64  	%rd579, %rd578, %rd577;
	shf.r.wrap.b32 	%r405, %r402, %r401, 1;
	shf.r.wrap.b32 	%r406, %r401, %r402, 1;
	mov.b64 	%rd580, {%r406, %r405};
	xor.b64  	%rd581, %rd579, %rd580;
	add.s64 	%rd582, %rd581, %rd1067;
	add.s64 	%rd583, %rd582, %rd1060;
	add.s64 	%rd1067, %rd583, %rd576;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r407,%dummy}, %rd1066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r408}, %rd1066;
	}
	shf.r.wrap.b32 	%r409, %r408, %r407, 19;
	shf.r.wrap.b32 	%r410, %r407, %r408, 19;
	mov.b64 	%rd584, {%r410, %r409};
	shf.l.wrap.b32 	%r411, %r407, %r408, 3;
	shf.l.wrap.b32 	%r412, %r408, %r407, 3;
	mov.b64 	%rd585, {%r412, %r411};
	shr.u64 	%rd586, %rd1066, 6;
	xor.b64  	%rd587, %rd585, %rd586;
	xor.b64  	%rd588, %rd587, %rd584;
	shr.u64 	%rd589, %rd1069, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r413,%dummy}, %rd1069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r414}, %rd1069;
	}
	shf.r.wrap.b32 	%r415, %r414, %r413, 8;
	shf.r.wrap.b32 	%r416, %r413, %r414, 8;
	mov.b64 	%rd590, {%r416, %r415};
	xor.b64  	%rd591, %rd590, %rd589;
	shf.r.wrap.b32 	%r417, %r414, %r413, 1;
	shf.r.wrap.b32 	%r418, %r413, %r414, 1;
	mov.b64 	%rd592, {%r418, %r417};
	xor.b64  	%rd593, %rd591, %rd592;
	add.s64 	%rd594, %rd593, %rd1068;
	add.s64 	%rd595, %rd594, %rd1061;
	add.s64 	%rd1068, %rd595, %rd588;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r419,%dummy}, %rd1067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r420}, %rd1067;
	}
	shf.r.wrap.b32 	%r421, %r420, %r419, 19;
	shf.r.wrap.b32 	%r422, %r419, %r420, 19;
	mov.b64 	%rd596, {%r422, %r421};
	shf.l.wrap.b32 	%r423, %r419, %r420, 3;
	shf.l.wrap.b32 	%r424, %r420, %r419, 3;
	mov.b64 	%rd597, {%r424, %r423};
	shr.u64 	%rd598, %rd1067, 6;
	xor.b64  	%rd599, %rd597, %rd598;
	xor.b64  	%rd600, %rd599, %rd596;
	shr.u64 	%rd601, %rd1070, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r425,%dummy}, %rd1070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r426}, %rd1070;
	}
	shf.r.wrap.b32 	%r427, %r426, %r425, 8;
	shf.r.wrap.b32 	%r428, %r425, %r426, 8;
	mov.b64 	%rd602, {%r428, %r427};
	xor.b64  	%rd603, %rd602, %rd601;
	shf.r.wrap.b32 	%r429, %r426, %r425, 1;
	shf.r.wrap.b32 	%r430, %r425, %r426, 1;
	mov.b64 	%rd604, {%r430, %r429};
	xor.b64  	%rd605, %rd603, %rd604;
	add.s64 	%rd606, %rd605, %rd1069;
	add.s64 	%rd607, %rd606, %rd1062;
	add.s64 	%rd1069, %rd607, %rd600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r431,%dummy}, %rd1068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r432}, %rd1068;
	}
	shf.r.wrap.b32 	%r433, %r432, %r431, 19;
	shf.r.wrap.b32 	%r434, %r431, %r432, 19;
	mov.b64 	%rd608, {%r434, %r433};
	shf.l.wrap.b32 	%r435, %r431, %r432, 3;
	shf.l.wrap.b32 	%r436, %r432, %r431, 3;
	mov.b64 	%rd609, {%r436, %r435};
	shr.u64 	%rd610, %rd1068, 6;
	xor.b64  	%rd611, %rd609, %rd610;
	xor.b64  	%rd612, %rd611, %rd608;
	shr.u64 	%rd613, %rd1071, 7;
	shf.r.wrap.b32 	%r437, %r275, %r276, 8;
	shf.r.wrap.b32 	%r438, %r276, %r275, 8;
	mov.b64 	%rd614, {%r438, %r437};
	xor.b64  	%rd615, %rd614, %rd613;
	shf.r.wrap.b32 	%r439, %r275, %r276, 1;
	shf.r.wrap.b32 	%r440, %r276, %r275, 1;
	mov.b64 	%rd616, {%r440, %r439};
	xor.b64  	%rd617, %rd615, %rd616;
	add.s64 	%rd618, %rd617, %rd1070;
	add.s64 	%rd619, %rd618, %rd1063;
	add.s64 	%rd1070, %rd619, %rd612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r441,%dummy}, %rd1069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r442}, %rd1069;
	}
	shf.r.wrap.b32 	%r443, %r442, %r441, 19;
	shf.r.wrap.b32 	%r444, %r441, %r442, 19;
	mov.b64 	%rd620, {%r444, %r443};
	shf.l.wrap.b32 	%r445, %r441, %r442, 3;
	shf.l.wrap.b32 	%r446, %r442, %r441, 3;
	mov.b64 	%rd621, {%r446, %r445};
	shr.u64 	%rd622, %rd1069, 6;
	xor.b64  	%rd623, %rd621, %rd622;
	xor.b64  	%rd624, %rd623, %rd620;
	shr.u64 	%rd625, %rd1072, 7;
	shf.r.wrap.b32 	%r447, %r287, %r288, 8;
	shf.r.wrap.b32 	%r448, %r288, %r287, 8;
	mov.b64 	%rd626, {%r448, %r447};
	xor.b64  	%rd627, %rd626, %rd625;
	shf.r.wrap.b32 	%r449, %r287, %r288, 1;
	shf.r.wrap.b32 	%r450, %r288, %r287, 1;
	mov.b64 	%rd628, {%r450, %r449};
	xor.b64  	%rd629, %rd627, %rd628;
	add.s64 	%rd630, %rd629, %rd1071;
	add.s64 	%rd631, %rd630, %rd1064;
	add.s64 	%rd1071, %rd631, %rd624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r451,%dummy}, %rd1070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r452}, %rd1070;
	}
	shf.r.wrap.b32 	%r453, %r452, %r451, 19;
	shf.r.wrap.b32 	%r454, %r451, %r452, 19;
	mov.b64 	%rd632, {%r454, %r453};
	shf.l.wrap.b32 	%r455, %r451, %r452, 3;
	shf.l.wrap.b32 	%r456, %r452, %r451, 3;
	mov.b64 	%rd633, {%r456, %r455};
	shr.u64 	%rd634, %rd1070, 6;
	xor.b64  	%rd635, %rd633, %rd634;
	xor.b64  	%rd636, %rd635, %rd632;
	shf.r.wrap.b32 	%r457, %r300, %r299, 1;
	shf.r.wrap.b32 	%r458, %r299, %r300, 1;
	mov.b64 	%rd637, {%r458, %r457};
	shf.r.wrap.b32 	%r459, %r300, %r299, 8;
	shf.r.wrap.b32 	%r460, %r299, %r300, 8;
	mov.b64 	%rd638, {%r460, %r459};
	shr.u64 	%rd639, %rd1057, 7;
	xor.b64  	%rd640, %rd638, %rd639;
	xor.b64  	%rd641, %rd640, %rd637;
	add.s64 	%rd642, %rd641, %rd1072;
	add.s64 	%rd643, %rd642, %rd1065;
	add.s64 	%rd1072, %rd643, %rd636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r461,%dummy}, %rd1056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r462}, %rd1056;
	}
	shf.r.wrap.b32 	%r463, %r462, %r461, 18;
	shf.r.wrap.b32 	%r464, %r461, %r462, 18;
	mov.b64 	%rd644, {%r464, %r463};
	shf.r.wrap.b32 	%r465, %r462, %r461, 14;
	shf.r.wrap.b32 	%r466, %r461, %r462, 14;
	mov.b64 	%rd645, {%r466, %r465};
	xor.b64  	%rd646, %rd645, %rd644;
	shf.l.wrap.b32 	%r467, %r461, %r462, 23;
	shf.l.wrap.b32 	%r468, %r462, %r461, 23;
	mov.b64 	%rd647, {%r468, %r467};
	xor.b64  	%rd648, %rd646, %rd647;
	xor.b64  	%rd649, %rd1054, %rd1055;
	and.b64  	%rd650, %rd649, %rd1056;
	xor.b64  	%rd651, %rd650, %rd1054;
	add.s64 	%rd652, %rd1057, %rd1053;
	add.s64 	%rd653, %rd652, %rd648;
	add.s64 	%rd654, %rd653, %rd651;
	add.s64 	%rd81, %rd1052, 128;
	ld.const.u64 	%rd655, [%rd1052+128];
	add.s64 	%rd656, %rd654, %rd655;
	add.s64 	%rd657, %rd656, %rd1076;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r469}, %rd1073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r470,%dummy}, %rd1073;
	}
	shf.l.wrap.b32 	%r471, %r470, %r469, 30;
	shf.l.wrap.b32 	%r472, %r469, %r470, 30;
	mov.b64 	%rd658, {%r472, %r471};
	shf.r.wrap.b32 	%r473, %r469, %r470, 28;
	shf.r.wrap.b32 	%r474, %r470, %r469, 28;
	mov.b64 	%rd659, {%r474, %r473};
	xor.b64  	%rd660, %rd659, %rd658;
	shf.l.wrap.b32 	%r475, %r470, %r469, 25;
	shf.l.wrap.b32 	%r476, %r469, %r470, 25;
	mov.b64 	%rd661, {%r476, %r475};
	xor.b64  	%rd662, %rd660, %rd661;
	xor.b64  	%rd663, %rd1073, %rd1074;
	and.b64  	%rd664, %rd663, %rd1075;
	and.b64  	%rd665, %rd1073, %rd1074;
	or.b64  	%rd666, %rd664, %rd665;
	add.s64 	%rd667, %rd662, %rd666;
	add.s64 	%rd668, %rd667, %rd656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r477,%dummy}, %rd657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r478}, %rd657;
	}
	shf.r.wrap.b32 	%r479, %r478, %r477, 14;
	shf.r.wrap.b32 	%r480, %r477, %r478, 14;
	mov.b64 	%rd669, {%r480, %r479};
	shf.r.wrap.b32 	%r481, %r478, %r477, 18;
	shf.r.wrap.b32 	%r482, %r477, %r478, 18;
	mov.b64 	%rd670, {%r482, %r481};
	xor.b64  	%rd671, %rd669, %rd670;
	shf.l.wrap.b32 	%r483, %r477, %r478, 23;
	shf.l.wrap.b32 	%r484, %r478, %r477, 23;
	mov.b64 	%rd672, {%r484, %r483};
	xor.b64  	%rd673, %rd671, %rd672;
	xor.b64  	%rd674, %rd1055, %rd1056;
	and.b64  	%rd675, %rd657, %rd674;
	xor.b64  	%rd676, %rd675, %rd1055;
	add.s64 	%rd677, %rd1058, %rd1054;
	ld.const.u64 	%rd678, [%rd1052+136];
	add.s64 	%rd679, %rd677, %rd678;
	add.s64 	%rd680, %rd679, %rd676;
	add.s64 	%rd681, %rd680, %rd673;
	add.s64 	%rd682, %rd681, %rd1075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r485,%dummy}, %rd668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r486}, %rd668;
	}
	shf.r.wrap.b32 	%r487, %r486, %r485, 28;
	shf.r.wrap.b32 	%r488, %r485, %r486, 28;
	mov.b64 	%rd683, {%r488, %r487};
	shf.l.wrap.b32 	%r489, %r485, %r486, 30;
	shf.l.wrap.b32 	%r490, %r486, %r485, 30;
	mov.b64 	%rd684, {%r490, %r489};
	xor.b64  	%rd685, %rd683, %rd684;
	shf.l.wrap.b32 	%r491, %r485, %r486, 25;
	shf.l.wrap.b32 	%r492, %r486, %r485, 25;
	mov.b64 	%rd686, {%r492, %r491};
	xor.b64  	%rd687, %rd685, %rd686;
	and.b64  	%rd688, %rd668, %rd1073;
	xor.b64  	%rd689, %rd668, %rd1073;
	and.b64  	%rd690, %rd689, %rd1074;
	or.b64  	%rd691, %rd690, %rd688;
	add.s64 	%rd692, %rd687, %rd691;
	add.s64 	%rd693, %rd692, %rd681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r493,%dummy}, %rd682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r494}, %rd682;
	}
	shf.r.wrap.b32 	%r495, %r494, %r493, 14;
	shf.r.wrap.b32 	%r496, %r493, %r494, 14;
	mov.b64 	%rd694, {%r496, %r495};
	shf.r.wrap.b32 	%r497, %r494, %r493, 18;
	shf.r.wrap.b32 	%r498, %r493, %r494, 18;
	mov.b64 	%rd695, {%r498, %r497};
	xor.b64  	%rd696, %rd694, %rd695;
	shf.l.wrap.b32 	%r499, %r493, %r494, 23;
	shf.l.wrap.b32 	%r500, %r494, %r493, 23;
	mov.b64 	%rd697, {%r500, %r499};
	xor.b64  	%rd698, %rd696, %rd697;
	xor.b64  	%rd699, %rd657, %rd1056;
	and.b64  	%rd700, %rd682, %rd699;
	xor.b64  	%rd701, %rd700, %rd1056;
	add.s64 	%rd702, %rd1059, %rd1055;
	ld.const.u64 	%rd703, [%rd1052+144];
	add.s64 	%rd704, %rd702, %rd703;
	add.s64 	%rd705, %rd704, %rd701;
	add.s64 	%rd706, %rd705, %rd698;
	add.s64 	%rd707, %rd706, %rd1074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r501,%dummy}, %rd693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r502}, %rd693;
	}
	shf.r.wrap.b32 	%r503, %r502, %r501, 28;
	shf.r.wrap.b32 	%r504, %r501, %r502, 28;
	mov.b64 	%rd708, {%r504, %r503};
	shf.l.wrap.b32 	%r505, %r501, %r502, 30;
	shf.l.wrap.b32 	%r506, %r502, %r501, 30;
	mov.b64 	%rd709, {%r506, %r505};
	xor.b64  	%rd710, %rd708, %rd709;
	shf.l.wrap.b32 	%r507, %r501, %r502, 25;
	shf.l.wrap.b32 	%r508, %r502, %r501, 25;
	mov.b64 	%rd711, {%r508, %r507};
	xor.b64  	%rd712, %rd710, %rd711;
	and.b64  	%rd713, %rd693, %rd668;
	xor.b64  	%rd714, %rd693, %rd668;
	and.b64  	%rd715, %rd714, %rd1073;
	or.b64  	%rd716, %rd715, %rd713;
	add.s64 	%rd717, %rd712, %rd716;
	add.s64 	%rd718, %rd717, %rd706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r509,%dummy}, %rd707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r510}, %rd707;
	}
	shf.r.wrap.b32 	%r511, %r510, %r509, 14;
	shf.r.wrap.b32 	%r512, %r509, %r510, 14;
	mov.b64 	%rd719, {%r512, %r511};
	shf.r.wrap.b32 	%r513, %r510, %r509, 18;
	shf.r.wrap.b32 	%r514, %r509, %r510, 18;
	mov.b64 	%rd720, {%r514, %r513};
	xor.b64  	%rd721, %rd719, %rd720;
	shf.l.wrap.b32 	%r515, %r509, %r510, 23;
	shf.l.wrap.b32 	%r516, %r510, %r509, 23;
	mov.b64 	%rd722, {%r516, %r515};
	xor.b64  	%rd723, %rd721, %rd722;
	xor.b64  	%rd724, %rd682, %rd657;
	and.b64  	%rd725, %rd707, %rd724;
	xor.b64  	%rd726, %rd725, %rd657;
	add.s64 	%rd727, %rd1060, %rd1056;
	ld.const.u64 	%rd728, [%rd1052+152];
	add.s64 	%rd729, %rd727, %rd728;
	add.s64 	%rd730, %rd729, %rd726;
	add.s64 	%rd731, %rd730, %rd723;
	add.s64 	%rd732, %rd731, %rd1073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r517,%dummy}, %rd718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r518}, %rd718;
	}
	shf.r.wrap.b32 	%r519, %r518, %r517, 28;
	shf.r.wrap.b32 	%r520, %r517, %r518, 28;
	mov.b64 	%rd733, {%r520, %r519};
	shf.l.wrap.b32 	%r521, %r517, %r518, 30;
	shf.l.wrap.b32 	%r522, %r518, %r517, 30;
	mov.b64 	%rd734, {%r522, %r521};
	xor.b64  	%rd735, %rd733, %rd734;
	shf.l.wrap.b32 	%r523, %r517, %r518, 25;
	shf.l.wrap.b32 	%r524, %r518, %r517, 25;
	mov.b64 	%rd736, {%r524, %r523};
	xor.b64  	%rd737, %rd735, %rd736;
	and.b64  	%rd738, %rd718, %rd693;
	xor.b64  	%rd739, %rd718, %rd693;
	and.b64  	%rd740, %rd739, %rd668;
	or.b64  	%rd741, %rd740, %rd738;
	add.s64 	%rd742, %rd737, %rd741;
	add.s64 	%rd743, %rd742, %rd731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r525,%dummy}, %rd732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r526}, %rd732;
	}
	shf.r.wrap.b32 	%r527, %r526, %r525, 14;
	shf.r.wrap.b32 	%r528, %r525, %r526, 14;
	mov.b64 	%rd744, {%r528, %r527};
	shf.r.wrap.b32 	%r529, %r526, %r525, 18;
	shf.r.wrap.b32 	%r530, %r525, %r526, 18;
	mov.b64 	%rd745, {%r530, %r529};
	xor.b64  	%rd746, %rd744, %rd745;
	shf.l.wrap.b32 	%r531, %r525, %r526, 23;
	shf.l.wrap.b32 	%r532, %r526, %r525, 23;
	mov.b64 	%rd747, {%r532, %r531};
	xor.b64  	%rd748, %rd746, %rd747;
	xor.b64  	%rd749, %rd707, %rd682;
	and.b64  	%rd750, %rd732, %rd749;
	xor.b64  	%rd751, %rd750, %rd682;
	add.s64 	%rd752, %rd657, %rd1061;
	ld.const.u64 	%rd753, [%rd1052+160];
	add.s64 	%rd754, %rd752, %rd753;
	add.s64 	%rd755, %rd754, %rd751;
	add.s64 	%rd756, %rd755, %rd748;
	add.s64 	%rd757, %rd756, %rd668;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r533,%dummy}, %rd743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r534}, %rd743;
	}
	shf.r.wrap.b32 	%r535, %r534, %r533, 28;
	shf.r.wrap.b32 	%r536, %r533, %r534, 28;
	mov.b64 	%rd758, {%r536, %r535};
	shf.l.wrap.b32 	%r537, %r533, %r534, 30;
	shf.l.wrap.b32 	%r538, %r534, %r533, 30;
	mov.b64 	%rd759, {%r538, %r537};
	xor.b64  	%rd760, %rd758, %rd759;
	shf.l.wrap.b32 	%r539, %r533, %r534, 25;
	shf.l.wrap.b32 	%r540, %r534, %r533, 25;
	mov.b64 	%rd761, {%r540, %r539};
	xor.b64  	%rd762, %rd760, %rd761;
	and.b64  	%rd763, %rd743, %rd718;
	xor.b64  	%rd764, %rd743, %rd718;
	and.b64  	%rd765, %rd764, %rd693;
	or.b64  	%rd766, %rd765, %rd763;
	add.s64 	%rd767, %rd762, %rd766;
	add.s64 	%rd768, %rd767, %rd756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r541,%dummy}, %rd757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r542}, %rd757;
	}
	shf.r.wrap.b32 	%r543, %r542, %r541, 14;
	shf.r.wrap.b32 	%r544, %r541, %r542, 14;
	mov.b64 	%rd769, {%r544, %r543};
	shf.r.wrap.b32 	%r545, %r542, %r541, 18;
	shf.r.wrap.b32 	%r546, %r541, %r542, 18;
	mov.b64 	%rd770, {%r546, %r545};
	xor.b64  	%rd771, %rd769, %rd770;
	shf.l.wrap.b32 	%r547, %r541, %r542, 23;
	shf.l.wrap.b32 	%r548, %r542, %r541, 23;
	mov.b64 	%rd772, {%r548, %r547};
	xor.b64  	%rd773, %rd771, %rd772;
	xor.b64  	%rd774, %rd732, %rd707;
	and.b64  	%rd775, %rd757, %rd774;
	xor.b64  	%rd776, %rd775, %rd707;
	ld.const.u64 	%rd777, [%rd1052+168];
	add.s64 	%rd778, %rd777, %rd1062;
	add.s64 	%rd779, %rd778, %rd682;
	add.s64 	%rd780, %rd779, %rd776;
	add.s64 	%rd781, %rd780, %rd773;
	add.s64 	%rd782, %rd781, %rd693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r549,%dummy}, %rd768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r550}, %rd768;
	}
	shf.r.wrap.b32 	%r551, %r550, %r549, 28;
	shf.r.wrap.b32 	%r552, %r549, %r550, 28;
	mov.b64 	%rd783, {%r552, %r551};
	shf.l.wrap.b32 	%r553, %r549, %r550, 30;
	shf.l.wrap.b32 	%r554, %r550, %r549, 30;
	mov.b64 	%rd784, {%r554, %r553};
	xor.b64  	%rd785, %rd783, %rd784;
	shf.l.wrap.b32 	%r555, %r549, %r550, 25;
	shf.l.wrap.b32 	%r556, %r550, %r549, 25;
	mov.b64 	%rd786, {%r556, %r555};
	xor.b64  	%rd787, %rd785, %rd786;
	and.b64  	%rd788, %rd768, %rd743;
	xor.b64  	%rd789, %rd768, %rd743;
	and.b64  	%rd790, %rd789, %rd718;
	or.b64  	%rd791, %rd790, %rd788;
	add.s64 	%rd792, %rd787, %rd791;
	add.s64 	%rd793, %rd792, %rd781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r557,%dummy}, %rd782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r558}, %rd782;
	}
	shf.r.wrap.b32 	%r559, %r558, %r557, 14;
	shf.r.wrap.b32 	%r560, %r557, %r558, 14;
	mov.b64 	%rd794, {%r560, %r559};
	shf.r.wrap.b32 	%r561, %r558, %r557, 18;
	shf.r.wrap.b32 	%r562, %r557, %r558, 18;
	mov.b64 	%rd795, {%r562, %r561};
	xor.b64  	%rd796, %rd794, %rd795;
	shf.l.wrap.b32 	%r563, %r557, %r558, 23;
	shf.l.wrap.b32 	%r564, %r558, %r557, 23;
	mov.b64 	%rd797, {%r564, %r563};
	xor.b64  	%rd798, %rd796, %rd797;
	xor.b64  	%rd799, %rd757, %rd732;
	and.b64  	%rd800, %rd782, %rd799;
	xor.b64  	%rd801, %rd800, %rd732;
	ld.const.u64 	%rd802, [%rd1052+176];
	add.s64 	%rd803, %rd802, %rd1063;
	add.s64 	%rd804, %rd803, %rd707;
	add.s64 	%rd805, %rd804, %rd801;
	add.s64 	%rd806, %rd805, %rd798;
	add.s64 	%rd807, %rd806, %rd718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r565,%dummy}, %rd793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r566}, %rd793;
	}
	shf.r.wrap.b32 	%r567, %r566, %r565, 28;
	shf.r.wrap.b32 	%r568, %r565, %r566, 28;
	mov.b64 	%rd808, {%r568, %r567};
	shf.l.wrap.b32 	%r569, %r565, %r566, 30;
	shf.l.wrap.b32 	%r570, %r566, %r565, 30;
	mov.b64 	%rd809, {%r570, %r569};
	xor.b64  	%rd810, %rd808, %rd809;
	shf.l.wrap.b32 	%r571, %r565, %r566, 25;
	shf.l.wrap.b32 	%r572, %r566, %r565, 25;
	mov.b64 	%rd811, {%r572, %r571};
	xor.b64  	%rd812, %rd810, %rd811;
	and.b64  	%rd813, %rd793, %rd768;
	xor.b64  	%rd814, %rd793, %rd768;
	and.b64  	%rd815, %rd814, %rd743;
	or.b64  	%rd816, %rd815, %rd813;
	add.s64 	%rd817, %rd812, %rd816;
	add.s64 	%rd818, %rd817, %rd806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r573,%dummy}, %rd807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r574}, %rd807;
	}
	shf.r.wrap.b32 	%r575, %r574, %r573, 14;
	shf.r.wrap.b32 	%r576, %r573, %r574, 14;
	mov.b64 	%rd819, {%r576, %r575};
	shf.r.wrap.b32 	%r577, %r574, %r573, 18;
	shf.r.wrap.b32 	%r578, %r573, %r574, 18;
	mov.b64 	%rd820, {%r578, %r577};
	xor.b64  	%rd821, %rd819, %rd820;
	shf.l.wrap.b32 	%r579, %r573, %r574, 23;
	shf.l.wrap.b32 	%r580, %r574, %r573, 23;
	mov.b64 	%rd822, {%r580, %r579};
	xor.b64  	%rd823, %rd821, %rd822;
	xor.b64  	%rd824, %rd782, %rd757;
	and.b64  	%rd825, %rd807, %rd824;
	xor.b64  	%rd826, %rd825, %rd757;
	ld.const.u64 	%rd827, [%rd1052+184];
	add.s64 	%rd828, %rd827, %rd1064;
	add.s64 	%rd829, %rd828, %rd732;
	add.s64 	%rd830, %rd829, %rd826;
	add.s64 	%rd831, %rd830, %rd823;
	add.s64 	%rd832, %rd831, %rd743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r581,%dummy}, %rd818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r582}, %rd818;
	}
	shf.r.wrap.b32 	%r583, %r582, %r581, 28;
	shf.r.wrap.b32 	%r584, %r581, %r582, 28;
	mov.b64 	%rd833, {%r584, %r583};
	shf.l.wrap.b32 	%r585, %r581, %r582, 30;
	shf.l.wrap.b32 	%r586, %r582, %r581, 30;
	mov.b64 	%rd834, {%r586, %r585};
	xor.b64  	%rd835, %rd833, %rd834;
	shf.l.wrap.b32 	%r587, %r581, %r582, 25;
	shf.l.wrap.b32 	%r588, %r582, %r581, 25;
	mov.b64 	%rd836, {%r588, %r587};
	xor.b64  	%rd837, %rd835, %rd836;
	and.b64  	%rd838, %rd818, %rd793;
	xor.b64  	%rd839, %rd818, %rd793;
	and.b64  	%rd840, %rd839, %rd768;
	or.b64  	%rd841, %rd840, %rd838;
	add.s64 	%rd842, %rd837, %rd841;
	add.s64 	%rd843, %rd842, %rd831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r589,%dummy}, %rd832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r590}, %rd832;
	}
	shf.r.wrap.b32 	%r591, %r590, %r589, 14;
	shf.r.wrap.b32 	%r592, %r589, %r590, 14;
	mov.b64 	%rd844, {%r592, %r591};
	shf.r.wrap.b32 	%r593, %r590, %r589, 18;
	shf.r.wrap.b32 	%r594, %r589, %r590, 18;
	mov.b64 	%rd845, {%r594, %r593};
	xor.b64  	%rd846, %rd844, %rd845;
	shf.l.wrap.b32 	%r595, %r589, %r590, 23;
	shf.l.wrap.b32 	%r596, %r590, %r589, 23;
	mov.b64 	%rd847, {%r596, %r595};
	xor.b64  	%rd848, %rd846, %rd847;
	xor.b64  	%rd849, %rd807, %rd782;
	and.b64  	%rd850, %rd832, %rd849;
	xor.b64  	%rd851, %rd850, %rd782;
	ld.const.u64 	%rd852, [%rd1052+192];
	add.s64 	%rd853, %rd852, %rd1065;
	add.s64 	%rd854, %rd853, %rd757;
	add.s64 	%rd855, %rd854, %rd851;
	add.s64 	%rd856, %rd855, %rd848;
	add.s64 	%rd857, %rd856, %rd768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r597,%dummy}, %rd843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r598}, %rd843;
	}
	shf.r.wrap.b32 	%r599, %r598, %r597, 28;
	shf.r.wrap.b32 	%r600, %r597, %r598, 28;
	mov.b64 	%rd858, {%r600, %r599};
	shf.l.wrap.b32 	%r601, %r597, %r598, 30;
	shf.l.wrap.b32 	%r602, %r598, %r597, 30;
	mov.b64 	%rd859, {%r602, %r601};
	xor.b64  	%rd860, %rd858, %rd859;
	shf.l.wrap.b32 	%r603, %r597, %r598, 25;
	shf.l.wrap.b32 	%r604, %r598, %r597, 25;
	mov.b64 	%rd861, {%r604, %r603};
	xor.b64  	%rd862, %rd860, %rd861;
	and.b64  	%rd863, %rd843, %rd818;
	xor.b64  	%rd864, %rd843, %rd818;
	and.b64  	%rd865, %rd864, %rd793;
	or.b64  	%rd866, %rd865, %rd863;
	add.s64 	%rd867, %rd862, %rd866;
	add.s64 	%rd868, %rd867, %rd856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r605,%dummy}, %rd857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r606}, %rd857;
	}
	shf.r.wrap.b32 	%r607, %r606, %r605, 14;
	shf.r.wrap.b32 	%r608, %r605, %r606, 14;
	mov.b64 	%rd869, {%r608, %r607};
	shf.r.wrap.b32 	%r609, %r606, %r605, 18;
	shf.r.wrap.b32 	%r610, %r605, %r606, 18;
	mov.b64 	%rd870, {%r610, %r609};
	xor.b64  	%rd871, %rd869, %rd870;
	shf.l.wrap.b32 	%r611, %r605, %r606, 23;
	shf.l.wrap.b32 	%r612, %r606, %r605, 23;
	mov.b64 	%rd872, {%r612, %r611};
	xor.b64  	%rd873, %rd871, %rd872;
	xor.b64  	%rd874, %rd832, %rd807;
	and.b64  	%rd875, %rd857, %rd874;
	xor.b64  	%rd876, %rd875, %rd807;
	ld.const.u64 	%rd877, [%rd1052+200];
	add.s64 	%rd878, %rd877, %rd1066;
	add.s64 	%rd879, %rd878, %rd782;
	add.s64 	%rd880, %rd879, %rd876;
	add.s64 	%rd881, %rd880, %rd873;
	add.s64 	%rd882, %rd881, %rd793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r613,%dummy}, %rd868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r614}, %rd868;
	}
	shf.r.wrap.b32 	%r615, %r614, %r613, 28;
	shf.r.wrap.b32 	%r616, %r613, %r614, 28;
	mov.b64 	%rd883, {%r616, %r615};
	shf.l.wrap.b32 	%r617, %r613, %r614, 30;
	shf.l.wrap.b32 	%r618, %r614, %r613, 30;
	mov.b64 	%rd884, {%r618, %r617};
	xor.b64  	%rd885, %rd883, %rd884;
	shf.l.wrap.b32 	%r619, %r613, %r614, 25;
	shf.l.wrap.b32 	%r620, %r614, %r613, 25;
	mov.b64 	%rd886, {%r620, %r619};
	xor.b64  	%rd887, %rd885, %rd886;
	and.b64  	%rd888, %rd868, %rd843;
	xor.b64  	%rd889, %rd868, %rd843;
	and.b64  	%rd890, %rd889, %rd818;
	or.b64  	%rd891, %rd890, %rd888;
	add.s64 	%rd892, %rd887, %rd891;
	add.s64 	%rd893, %rd892, %rd881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r621,%dummy}, %rd882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r622}, %rd882;
	}
	shf.r.wrap.b32 	%r623, %r622, %r621, 14;
	shf.r.wrap.b32 	%r624, %r621, %r622, 14;
	mov.b64 	%rd894, {%r624, %r623};
	shf.r.wrap.b32 	%r625, %r622, %r621, 18;
	shf.r.wrap.b32 	%r626, %r621, %r622, 18;
	mov.b64 	%rd895, {%r626, %r625};
	xor.b64  	%rd896, %rd894, %rd895;
	shf.l.wrap.b32 	%r627, %r621, %r622, 23;
	shf.l.wrap.b32 	%r628, %r622, %r621, 23;
	mov.b64 	%rd897, {%r628, %r627};
	xor.b64  	%rd898, %rd896, %rd897;
	xor.b64  	%rd899, %rd857, %rd832;
	and.b64  	%rd900, %rd882, %rd899;
	xor.b64  	%rd901, %rd900, %rd832;
	ld.const.u64 	%rd902, [%rd1052+208];
	add.s64 	%rd903, %rd902, %rd1067;
	add.s64 	%rd904, %rd903, %rd807;
	add.s64 	%rd905, %rd904, %rd901;
	add.s64 	%rd906, %rd905, %rd898;
	add.s64 	%rd907, %rd906, %rd818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r629,%dummy}, %rd893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r630}, %rd893;
	}
	shf.r.wrap.b32 	%r631, %r630, %r629, 28;
	shf.r.wrap.b32 	%r632, %r629, %r630, 28;
	mov.b64 	%rd908, {%r632, %r631};
	shf.l.wrap.b32 	%r633, %r629, %r630, 30;
	shf.l.wrap.b32 	%r634, %r630, %r629, 30;
	mov.b64 	%rd909, {%r634, %r633};
	xor.b64  	%rd910, %rd908, %rd909;
	shf.l.wrap.b32 	%r635, %r629, %r630, 25;
	shf.l.wrap.b32 	%r636, %r630, %r629, 25;
	mov.b64 	%rd911, {%r636, %r635};
	xor.b64  	%rd912, %rd910, %rd911;
	and.b64  	%rd913, %rd893, %rd868;
	xor.b64  	%rd914, %rd893, %rd868;
	and.b64  	%rd915, %rd914, %rd843;
	or.b64  	%rd916, %rd915, %rd913;
	add.s64 	%rd917, %rd912, %rd916;
	add.s64 	%rd918, %rd917, %rd906;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r637,%dummy}, %rd907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r638}, %rd907;
	}
	shf.r.wrap.b32 	%r639, %r638, %r637, 14;
	shf.r.wrap.b32 	%r640, %r637, %r638, 14;
	mov.b64 	%rd919, {%r640, %r639};
	shf.r.wrap.b32 	%r641, %r638, %r637, 18;
	shf.r.wrap.b32 	%r642, %r637, %r638, 18;
	mov.b64 	%rd920, {%r642, %r641};
	xor.b64  	%rd921, %rd919, %rd920;
	shf.l.wrap.b32 	%r643, %r637, %r638, 23;
	shf.l.wrap.b32 	%r644, %r638, %r637, 23;
	mov.b64 	%rd922, {%r644, %r643};
	xor.b64  	%rd923, %rd921, %rd922;
	xor.b64  	%rd924, %rd882, %rd857;
	and.b64  	%rd925, %rd907, %rd924;
	xor.b64  	%rd926, %rd925, %rd857;
	ld.const.u64 	%rd927, [%rd1052+216];
	add.s64 	%rd928, %rd927, %rd1068;
	add.s64 	%rd929, %rd928, %rd832;
	add.s64 	%rd930, %rd929, %rd926;
	add.s64 	%rd931, %rd930, %rd923;
	add.s64 	%rd932, %rd931, %rd843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r645,%dummy}, %rd918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r646}, %rd918;
	}
	shf.r.wrap.b32 	%r647, %r646, %r645, 28;
	shf.r.wrap.b32 	%r648, %r645, %r646, 28;
	mov.b64 	%rd933, {%r648, %r647};
	shf.l.wrap.b32 	%r649, %r645, %r646, 30;
	shf.l.wrap.b32 	%r650, %r646, %r645, 30;
	mov.b64 	%rd934, {%r650, %r649};
	xor.b64  	%rd935, %rd933, %rd934;
	shf.l.wrap.b32 	%r651, %r645, %r646, 25;
	shf.l.wrap.b32 	%r652, %r646, %r645, 25;
	mov.b64 	%rd936, {%r652, %r651};
	xor.b64  	%rd937, %rd935, %rd936;
	and.b64  	%rd938, %rd918, %rd893;
	xor.b64  	%rd939, %rd918, %rd893;
	and.b64  	%rd940, %rd939, %rd868;
	or.b64  	%rd941, %rd940, %rd938;
	add.s64 	%rd942, %rd937, %rd941;
	add.s64 	%rd943, %rd942, %rd931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r653,%dummy}, %rd932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r654}, %rd932;
	}
	shf.r.wrap.b32 	%r655, %r654, %r653, 14;
	shf.r.wrap.b32 	%r656, %r653, %r654, 14;
	mov.b64 	%rd944, {%r656, %r655};
	shf.r.wrap.b32 	%r657, %r654, %r653, 18;
	shf.r.wrap.b32 	%r658, %r653, %r654, 18;
	mov.b64 	%rd945, {%r658, %r657};
	xor.b64  	%rd946, %rd944, %rd945;
	shf.l.wrap.b32 	%r659, %r653, %r654, 23;
	shf.l.wrap.b32 	%r660, %r654, %r653, 23;
	mov.b64 	%rd947, {%r660, %r659};
	xor.b64  	%rd948, %rd946, %rd947;
	xor.b64  	%rd949, %rd907, %rd882;
	and.b64  	%rd950, %rd932, %rd949;
	xor.b64  	%rd951, %rd950, %rd882;
	ld.const.u64 	%rd952, [%rd1052+224];
	add.s64 	%rd953, %rd952, %rd1069;
	add.s64 	%rd954, %rd953, %rd857;
	add.s64 	%rd955, %rd954, %rd951;
	add.s64 	%rd956, %rd955, %rd948;
	add.s64 	%rd1053, %rd956, %rd868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r661,%dummy}, %rd943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r662}, %rd943;
	}
	shf.r.wrap.b32 	%r663, %r662, %r661, 28;
	shf.r.wrap.b32 	%r664, %r661, %r662, 28;
	mov.b64 	%rd957, {%r664, %r663};
	shf.l.wrap.b32 	%r665, %r661, %r662, 30;
	shf.l.wrap.b32 	%r666, %r662, %r661, 30;
	mov.b64 	%rd958, {%r666, %r665};
	xor.b64  	%rd959, %rd957, %rd958;
	shf.l.wrap.b32 	%r667, %r661, %r662, 25;
	shf.l.wrap.b32 	%r668, %r662, %r661, 25;
	mov.b64 	%rd960, {%r668, %r667};
	xor.b64  	%rd961, %rd959, %rd960;
	and.b64  	%rd962, %rd943, %rd918;
	xor.b64  	%rd963, %rd943, %rd918;
	and.b64  	%rd964, %rd963, %rd893;
	or.b64  	%rd965, %rd964, %rd962;
	add.s64 	%rd966, %rd961, %rd965;
	add.s64 	%rd1076, %rd966, %rd956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r669,%dummy}, %rd1053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r670}, %rd1053;
	}
	shf.r.wrap.b32 	%r671, %r670, %r669, 14;
	shf.r.wrap.b32 	%r672, %r669, %r670, 14;
	mov.b64 	%rd967, {%r672, %r671};
	shf.r.wrap.b32 	%r673, %r670, %r669, 18;
	shf.r.wrap.b32 	%r674, %r669, %r670, 18;
	mov.b64 	%rd968, {%r674, %r673};
	xor.b64  	%rd969, %rd967, %rd968;
	shf.l.wrap.b32 	%r675, %r669, %r670, 23;
	shf.l.wrap.b32 	%r676, %r670, %r669, 23;
	mov.b64 	%rd970, {%r676, %r675};
	xor.b64  	%rd971, %rd969, %rd970;
	xor.b64  	%rd972, %rd932, %rd907;
	and.b64  	%rd973, %rd1053, %rd972;
	xor.b64  	%rd974, %rd973, %rd907;
	ld.const.u64 	%rd975, [%rd1052+232];
	add.s64 	%rd976, %rd975, %rd1070;
	add.s64 	%rd977, %rd976, %rd882;
	add.s64 	%rd978, %rd977, %rd974;
	add.s64 	%rd979, %rd978, %rd971;
	add.s64 	%rd1054, %rd979, %rd893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r677,%dummy}, %rd1076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r678}, %rd1076;
	}
	shf.r.wrap.b32 	%r679, %r678, %r677, 28;
	shf.r.wrap.b32 	%r680, %r677, %r678, 28;
	mov.b64 	%rd980, {%r680, %r679};
	shf.l.wrap.b32 	%r681, %r677, %r678, 30;
	shf.l.wrap.b32 	%r682, %r678, %r677, 30;
	mov.b64 	%rd981, {%r682, %r681};
	xor.b64  	%rd982, %rd980, %rd981;
	shf.l.wrap.b32 	%r683, %r677, %r678, 25;
	shf.l.wrap.b32 	%r684, %r678, %r677, 25;
	mov.b64 	%rd983, {%r684, %r683};
	xor.b64  	%rd984, %rd982, %rd983;
	and.b64  	%rd985, %rd1076, %rd943;
	xor.b64  	%rd986, %rd1076, %rd943;
	and.b64  	%rd987, %rd986, %rd918;
	or.b64  	%rd988, %rd987, %rd985;
	add.s64 	%rd989, %rd984, %rd988;
	add.s64 	%rd1075, %rd989, %rd979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r685,%dummy}, %rd1054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r686}, %rd1054;
	}
	shf.r.wrap.b32 	%r687, %r686, %r685, 14;
	shf.r.wrap.b32 	%r688, %r685, %r686, 14;
	mov.b64 	%rd990, {%r688, %r687};
	shf.r.wrap.b32 	%r689, %r686, %r685, 18;
	shf.r.wrap.b32 	%r690, %r685, %r686, 18;
	mov.b64 	%rd991, {%r690, %r689};
	xor.b64  	%rd992, %rd990, %rd991;
	shf.l.wrap.b32 	%r691, %r685, %r686, 23;
	shf.l.wrap.b32 	%r692, %r686, %r685, 23;
	mov.b64 	%rd993, {%r692, %r691};
	xor.b64  	%rd994, %rd992, %rd993;
	xor.b64  	%rd995, %rd1053, %rd932;
	and.b64  	%rd996, %rd1054, %rd995;
	xor.b64  	%rd997, %rd996, %rd932;
	ld.const.u64 	%rd998, [%rd1052+240];
	add.s64 	%rd999, %rd998, %rd1071;
	add.s64 	%rd1000, %rd999, %rd907;
	add.s64 	%rd1001, %rd1000, %rd997;
	add.s64 	%rd1002, %rd1001, %rd994;
	add.s64 	%rd1055, %rd1002, %rd918;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r693,%dummy}, %rd1075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r694}, %rd1075;
	}
	shf.r.wrap.b32 	%r695, %r694, %r693, 28;
	shf.r.wrap.b32 	%r696, %r693, %r694, 28;
	mov.b64 	%rd1003, {%r696, %r695};
	shf.l.wrap.b32 	%r697, %r693, %r694, 30;
	shf.l.wrap.b32 	%r698, %r694, %r693, 30;
	mov.b64 	%rd1004, {%r698, %r697};
	xor.b64  	%rd1005, %rd1003, %rd1004;
	shf.l.wrap.b32 	%r699, %r693, %r694, 25;
	shf.l.wrap.b32 	%r700, %r694, %r693, 25;
	mov.b64 	%rd1006, {%r700, %r699};
	xor.b64  	%rd1007, %rd1005, %rd1006;
	and.b64  	%rd1008, %rd1075, %rd1076;
	xor.b64  	%rd1009, %rd1075, %rd1076;
	and.b64  	%rd1010, %rd1009, %rd943;
	or.b64  	%rd1011, %rd1010, %rd1008;
	add.s64 	%rd1012, %rd1007, %rd1011;
	add.s64 	%rd1074, %rd1012, %rd1002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r701,%dummy}, %rd1055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r702}, %rd1055;
	}
	shf.r.wrap.b32 	%r703, %r702, %r701, 14;
	shf.r.wrap.b32 	%r704, %r701, %r702, 14;
	mov.b64 	%rd1013, {%r704, %r703};
	shf.r.wrap.b32 	%r705, %r702, %r701, 18;
	shf.r.wrap.b32 	%r706, %r701, %r702, 18;
	mov.b64 	%rd1014, {%r706, %r705};
	xor.b64  	%rd1015, %rd1013, %rd1014;
	shf.l.wrap.b32 	%r707, %r701, %r702, 23;
	shf.l.wrap.b32 	%r708, %r702, %r701, 23;
	mov.b64 	%rd1016, {%r708, %r707};
	xor.b64  	%rd1017, %rd1015, %rd1016;
	xor.b64  	%rd1018, %rd1054, %rd1053;
	and.b64  	%rd1019, %rd1055, %rd1018;
	xor.b64  	%rd1020, %rd1019, %rd1053;
	ld.const.u64 	%rd1021, [%rd1052+248];
	add.s64 	%rd1022, %rd1021, %rd1072;
	add.s64 	%rd1023, %rd1022, %rd932;
	add.s64 	%rd1024, %rd1023, %rd1020;
	add.s64 	%rd1025, %rd1024, %rd1017;
	add.s64 	%rd1056, %rd1025, %rd943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r709,%dummy}, %rd1074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r710}, %rd1074;
	}
	shf.r.wrap.b32 	%r711, %r710, %r709, 28;
	shf.r.wrap.b32 	%r712, %r709, %r710, 28;
	mov.b64 	%rd1026, {%r712, %r711};
	shf.l.wrap.b32 	%r713, %r709, %r710, 30;
	shf.l.wrap.b32 	%r714, %r710, %r709, 30;
	mov.b64 	%rd1027, {%r714, %r713};
	xor.b64  	%rd1028, %rd1026, %rd1027;
	shf.l.wrap.b32 	%r715, %r709, %r710, 25;
	shf.l.wrap.b32 	%r716, %r710, %r709, 25;
	mov.b64 	%rd1029, {%r716, %r715};
	xor.b64  	%rd1030, %rd1028, %rd1029;
	and.b64  	%rd1031, %rd1074, %rd1075;
	xor.b64  	%rd1032, %rd1074, %rd1075;
	and.b64  	%rd1033, %rd1032, %rd1076;
	or.b64  	%rd1034, %rd1033, %rd1031;
	add.s64 	%rd1035, %rd1030, %rd1034;
	add.s64 	%rd1073, %rd1035, %rd1025;
	add.s32 	%r728, %r728, 16;
	setp.lt.s32	%p3, %r728, 80;
	mov.u64 	%rd1052, %rd81;
	@%p3 bra 	BB4_4;

	mov.b64	{%r11, %r12}, %rd1053;
	setp.ne.s32	%p4, %r11, %r4;
	@%p4 bra 	BB4_11;

	mov.b64	{%r717, %r718}, %rd1076;
	setp.ne.s32	%p5, %r12, %r5;
	setp.ne.s32	%p6, %r717, %r6;
	or.pred  	%p7, %p5, %p6;
	setp.ne.s32	%p8, %r718, %r7;
	or.pred  	%p9, %p7, %p8;
	@%p9 bra 	BB4_11;

	atom.global.add.u32 	%r719, [%rd22], 1;
	setp.ne.s32	%p10, %r719, 0;
	@%p10 bra 	BB4_11;

	ld.param.u32 	%r725, [m01700_s08_param_31];
	atom.global.add.u32 	%r13, [%rd87], 1;
	setp.lt.u32	%p11, %r13, %r725;
	@%p11 bra 	BB4_10;
	bra.uni 	BB4_9;

BB4_10:
	ld.param.u32 	%r726, [m01700_s08_param_27];
	ld.param.u64 	%rd1051, [m01700_s08_param_14];
	ld.param.u32 	%r723, [m01700_s08_param_32];
	mul.wide.u32 	%rd1036, %r13, 32;
	add.s64 	%rd1037, %rd1051, %rd1036;
	st.global.u32 	[%rd1037+12], %r726;
	mov.u32 	%r721, 0;
	st.global.u32 	[%rd1037+16], %r721;
	st.global.u32 	[%rd1037+20], %r723;
	st.global.u64 	[%rd1037], %rd1;
	st.global.u32 	[%rd1037+8], %r727;
	st.global.u32 	[%rd1037+24], %r721;
	st.global.u32 	[%rd1037+28], %r721;
	bra.uni 	BB4_11;

BB4_9:
	atom.global.add.u32 	%r720, [%rd87], -1;

BB4_11:
	ld.param.u32 	%r722, [m01700_s08_param_30];
	add.s32 	%r727, %r727, 1;
	setp.lt.u32	%p12, %r727, %r722;
	@%p12 bra 	BB4_3;

BB4_12:
	ret;
}

	// .globl	m01700_s16
.entry m01700_s16(
	.param .u64 .ptr .global .align 4 m01700_s16_param_0,
	.param .u64 .ptr .global .align 4 m01700_s16_param_1,
	.param .u64 .ptr .global .align 4 m01700_s16_param_2,
	.param .u64 .ptr .const .align 4 m01700_s16_param_3,
	.param .u64 .ptr .global .align 1 m01700_s16_param_4,
	.param .u64 .ptr .global .align 1 m01700_s16_param_5,
	.param .u64 .ptr .global .align 4 m01700_s16_param_6,
	.param .u64 .ptr .global .align 4 m01700_s16_param_7,
	.param .u64 .ptr .global .align 4 m01700_s16_param_8,
	.param .u64 .ptr .global .align 4 m01700_s16_param_9,
	.param .u64 .ptr .global .align 4 m01700_s16_param_10,
	.param .u64 .ptr .global .align 4 m01700_s16_param_11,
	.param .u64 .ptr .global .align 4 m01700_s16_param_12,
	.param .u64 .ptr .global .align 4 m01700_s16_param_13,
	.param .u64 .ptr .global .align 8 m01700_s16_param_14,
	.param .u64 .ptr .global .align 4 m01700_s16_param_15,
	.param .u64 .ptr .global .align 4 m01700_s16_param_16,
	.param .u64 .ptr .global .align 4 m01700_s16_param_17,
	.param .u64 .ptr .global .align 1 m01700_s16_param_18,
	.param .u64 .ptr .global .align 4 m01700_s16_param_19,
	.param .u64 .ptr .global .align 1 m01700_s16_param_20,
	.param .u64 .ptr .global .align 1 m01700_s16_param_21,
	.param .u64 .ptr .global .align 1 m01700_s16_param_22,
	.param .u64 .ptr .global .align 1 m01700_s16_param_23,
	.param .u32 m01700_s16_param_24,
	.param .u32 m01700_s16_param_25,
	.param .u32 m01700_s16_param_26,
	.param .u32 m01700_s16_param_27,
	.param .u32 m01700_s16_param_28,
	.param .u32 m01700_s16_param_29,
	.param .u32 m01700_s16_param_30,
	.param .u32 m01700_s16_param_31,
	.param .u32 m01700_s16_param_32,
	.param .u32 m01700_s16_param_33,
	.param .u64 m01700_s16_param_34
)
{
	.reg .pred 	%p<13>;
	.reg .b32 	%r<735>;
	.reg .b64 	%rd<1076>;


	ld.param.u64 	%rd85, [m01700_s16_param_0];
	ld.param.u64 	%rd88, [m01700_s16_param_15];
	ld.param.u64 	%rd89, [m01700_s16_param_16];
	ld.param.u64 	%rd90, [m01700_s16_param_19];
	ld.param.u32 	%r16, [m01700_s16_param_30];
	ld.param.u32 	%r18, [m01700_s16_param_32];
	ld.param.u64 	%rd91, [m01700_s16_param_34];
	mov.b32	%r19, %envreg3;
	mov.u32 	%r20, %ctaid.x;
	mov.u32 	%r21, %ntid.x;
	mad.lo.s32 	%r22, %r20, %r21, %r19;
	mov.u32 	%r23, %tid.x;
	add.s32 	%r1, %r22, %r23;
	cvt.s64.s32	%rd1, %r1;
	setp.ge.u64	%p1, %rd1, %rd91;
	@%p1 bra 	BB5_12;

	setp.eq.s32	%p2, %r16, 0;
	@%p2 bra 	BB5_12;

	mul.wide.s32 	%rd92, %r1, 260;
	add.s64 	%rd93, %rd85, %rd92;
	ld.global.u32 	%r2, [%rd93];
	ld.global.u32 	%r3, [%rd93+4];
	mul.wide.u32 	%rd94, %r18, 64;
	add.s64 	%rd95, %rd88, %rd94;
	ld.global.u32 	%r4, [%rd95+56];
	ld.global.u32 	%r5, [%rd95+60];
	ld.global.u32 	%r6, [%rd95+24];
	ld.global.u32 	%r7, [%rd95+28];
	ld.global.u32 	%r25, [%rd93+8];
	ld.global.u32 	%r26, [%rd93+12];
	mov.u32 	%r733, 0;
	mov.b64	%rd2, {%r26, %r25};
	ld.global.u32 	%r27, [%rd93+16];
	ld.global.u32 	%r28, [%rd93+20];
	mov.b64	%rd3, {%r28, %r27};
	ld.global.u32 	%r29, [%rd93+24];
	ld.global.u32 	%r30, [%rd93+28];
	mov.b64	%rd4, {%r30, %r29};
	ld.global.u32 	%r31, [%rd93+32];
	ld.global.u32 	%r32, [%rd93+36];
	mov.b64	%rd5, {%r32, %r31};
	ld.global.u32 	%r33, [%rd93+40];
	ld.global.u32 	%r34, [%rd93+44];
	mov.b64	%rd6, {%r34, %r33};
	ld.global.u32 	%r35, [%rd93+48];
	ld.global.u32 	%r36, [%rd93+52];
	mov.b64	%rd7, {%r36, %r35};
	ld.global.u32 	%r37, [%rd93+56];
	ld.global.u32 	%r38, [%rd93+60];
	mov.b64	%rd8, {%r38, %r37};
	ld.const.u64 	%rd96, [k_sha512];
	add.s64 	%rd9, %rd96, -1150475826592481981;
	ld.const.u64 	%rd97, [k_sha512+8];
	add.s64 	%rd98, %rd2, %rd97;
	add.s64 	%rd10, %rd98, 2270897969802886507;
	ld.const.u64 	%rd99, [k_sha512+16];
	add.s64 	%rd100, %rd3, %rd99;
	add.s64 	%rd11, %rd100, -7276294671716946913;
	ld.const.u64 	%rd101, [k_sha512+24];
	add.s64 	%rd102, %rd4, %rd101;
	add.s64 	%rd12, %rd102, 5840696475078001361;
	ld.const.u64 	%rd103, [k_sha512+32];
	add.s64 	%rd13, %rd103, %rd5;
	ld.const.u64 	%rd104, [k_sha512+40];
	add.s64 	%rd14, %rd104, %rd6;
	ld.const.u64 	%rd105, [k_sha512+48];
	add.s64 	%rd15, %rd105, %rd7;
	ld.const.u64 	%rd106, [k_sha512+120];
	add.s64 	%rd24, %rd106, %rd8;
	mul.wide.u32 	%rd107, %r18, 4;
	add.s64 	%rd25, %rd89, %rd107;

BB5_3:
	ld.const.u64 	%rd1049, [k_sha512+112];
	ld.const.u64 	%rd1048, [k_sha512+104];
	ld.const.u64 	%rd1047, [k_sha512+96];
	ld.const.u64 	%rd1046, [k_sha512+88];
	ld.const.u64 	%rd1045, [k_sha512+80];
	ld.const.u64 	%rd1044, [k_sha512+72];
	ld.const.u64 	%rd1043, [k_sha512+64];
	ld.const.u64 	%rd1042, [k_sha512+56];
	ld.param.u64 	%rd1041, [m01700_s16_param_3];
	mul.wide.u32 	%rd117, %r733, 4;
	add.s64 	%rd118, %rd1041, %rd117;
	ld.const.u32 	%r40, [%rd118];
	or.b32  	%r41, %r40, %r2;
	mov.b64	%rd1056, {%r3, %r41};
	add.s64 	%rd119, %rd9, %rd1056;
	add.s64 	%rd120, %rd119, -4263291710961585108;
	add.s64 	%rd121, %rd119, 7114151716102877840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r42,%dummy}, %rd120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r43}, %rd120;
	}
	shf.r.wrap.b32 	%r44, %r43, %r42, 14;
	shf.r.wrap.b32 	%r45, %r42, %r43, 14;
	mov.b64 	%rd122, {%r45, %r44};
	shf.r.wrap.b32 	%r46, %r43, %r42, 18;
	shf.r.wrap.b32 	%r47, %r42, %r43, 18;
	mov.b64 	%rd123, {%r47, %r46};
	xor.b64  	%rd124, %rd122, %rd123;
	shf.l.wrap.b32 	%r48, %r42, %r43, 23;
	shf.l.wrap.b32 	%r49, %r43, %r42, 23;
	mov.b64 	%rd125, {%r49, %r48};
	xor.b64  	%rd126, %rd124, %rd125;
	and.b64  	%rd127, %rd120, -3887949035690463538;
	xor.b64  	%rd128, %rd127, -7276294671716946913;
	add.s64 	%rd129, %rd10, %rd128;
	add.s64 	%rd130, %rd129, %rd126;
	add.s64 	%rd131, %rd130, 4354685564936845355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r50,%dummy}, %rd121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r51}, %rd121;
	}
	shf.r.wrap.b32 	%r52, %r51, %r50, 28;
	shf.r.wrap.b32 	%r53, %r50, %r51, 28;
	mov.b64 	%rd132, {%r53, %r52};
	shf.l.wrap.b32 	%r54, %r50, %r51, 30;
	shf.l.wrap.b32 	%r55, %r51, %r50, 30;
	mov.b64 	%rd133, {%r55, %r54};
	xor.b64  	%rd134, %rd132, %rd133;
	shf.l.wrap.b32 	%r56, %r50, %r51, 25;
	shf.l.wrap.b32 	%r57, %r51, %r50, 25;
	mov.b64 	%rd135, {%r57, %r56};
	xor.b64  	%rd136, %rd134, %rd135;
	and.b64  	%rd137, %rd121, 7640891576956012808;
	and.b64  	%rd138, %rd121, -4942790177534073029;
	xor.b64  	%rd139, %rd138, 3026882967131160840;
	or.b64  	%rd140, %rd139, %rd137;
	add.s64 	%rd141, %rd136, %rd140;
	add.s64 	%rd142, %rd141, %rd130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r58,%dummy}, %rd131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r59}, %rd131;
	}
	shf.r.wrap.b32 	%r60, %r59, %r58, 14;
	shf.r.wrap.b32 	%r61, %r58, %r59, 14;
	mov.b64 	%rd143, {%r61, %r60};
	shf.r.wrap.b32 	%r62, %r59, %r58, 18;
	shf.r.wrap.b32 	%r63, %r58, %r59, 18;
	mov.b64 	%rd144, {%r63, %r62};
	xor.b64  	%rd145, %rd143, %rd144;
	shf.l.wrap.b32 	%r64, %r58, %r59, 23;
	shf.l.wrap.b32 	%r65, %r59, %r58, 23;
	mov.b64 	%rd146, {%r65, %r64};
	xor.b64  	%rd147, %rd145, %rd146;
	xor.b64  	%rd148, %rd120, 5840696475078001361;
	and.b64  	%rd149, %rd131, %rd148;
	xor.b64  	%rd150, %rd149, 5840696475078001361;
	add.s64 	%rd151, %rd11, %rd150;
	add.s64 	%rd152, %rd151, %rd147;
	add.s64 	%rd153, %rd152, -4942790177534073029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r66,%dummy}, %rd142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r67}, %rd142;
	}
	shf.r.wrap.b32 	%r68, %r67, %r66, 28;
	shf.r.wrap.b32 	%r69, %r66, %r67, 28;
	mov.b64 	%rd154, {%r69, %r68};
	shf.l.wrap.b32 	%r70, %r66, %r67, 30;
	shf.l.wrap.b32 	%r71, %r67, %r66, 30;
	mov.b64 	%rd155, {%r71, %r70};
	xor.b64  	%rd156, %rd154, %rd155;
	shf.l.wrap.b32 	%r72, %r66, %r67, 25;
	shf.l.wrap.b32 	%r73, %r67, %r66, 25;
	mov.b64 	%rd157, {%r73, %r72};
	xor.b64  	%rd158, %rd156, %rd157;
	and.b64  	%rd159, %rd142, %rd121;
	xor.b64  	%rd160, %rd142, %rd121;
	and.b64  	%rd161, %rd160, 7640891576956012808;
	or.b64  	%rd162, %rd161, %rd159;
	add.s64 	%rd163, %rd158, %rd162;
	add.s64 	%rd164, %rd163, %rd152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r74,%dummy}, %rd153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r75}, %rd153;
	}
	shf.r.wrap.b32 	%r76, %r75, %r74, 14;
	shf.r.wrap.b32 	%r77, %r74, %r75, 14;
	mov.b64 	%rd165, {%r77, %r76};
	shf.r.wrap.b32 	%r78, %r75, %r74, 18;
	shf.r.wrap.b32 	%r79, %r74, %r75, 18;
	mov.b64 	%rd166, {%r79, %r78};
	xor.b64  	%rd167, %rd165, %rd166;
	shf.l.wrap.b32 	%r80, %r74, %r75, 23;
	shf.l.wrap.b32 	%r81, %r75, %r74, 23;
	mov.b64 	%rd168, {%r81, %r80};
	xor.b64  	%rd169, %rd167, %rd168;
	xor.b64  	%rd170, %rd131, %rd120;
	and.b64  	%rd171, %rd153, %rd170;
	xor.b64  	%rd172, %rd171, %rd120;
	add.s64 	%rd173, %rd12, %rd172;
	add.s64 	%rd174, %rd173, %rd169;
	add.s64 	%rd175, %rd174, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r82,%dummy}, %rd164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r83}, %rd164;
	}
	shf.r.wrap.b32 	%r84, %r83, %r82, 28;
	shf.r.wrap.b32 	%r85, %r82, %r83, 28;
	mov.b64 	%rd176, {%r85, %r84};
	shf.l.wrap.b32 	%r86, %r82, %r83, 30;
	shf.l.wrap.b32 	%r87, %r83, %r82, 30;
	mov.b64 	%rd177, {%r87, %r86};
	xor.b64  	%rd178, %rd176, %rd177;
	shf.l.wrap.b32 	%r88, %r82, %r83, 25;
	shf.l.wrap.b32 	%r89, %r83, %r82, 25;
	mov.b64 	%rd179, {%r89, %r88};
	xor.b64  	%rd180, %rd178, %rd179;
	and.b64  	%rd181, %rd164, %rd142;
	xor.b64  	%rd182, %rd164, %rd142;
	and.b64  	%rd183, %rd182, %rd121;
	or.b64  	%rd184, %rd183, %rd181;
	add.s64 	%rd185, %rd180, %rd184;
	add.s64 	%rd186, %rd185, %rd174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r90,%dummy}, %rd175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r91}, %rd175;
	}
	shf.r.wrap.b32 	%r92, %r91, %r90, 14;
	shf.r.wrap.b32 	%r93, %r90, %r91, 14;
	mov.b64 	%rd187, {%r93, %r92};
	shf.r.wrap.b32 	%r94, %r91, %r90, 18;
	shf.r.wrap.b32 	%r95, %r90, %r91, 18;
	mov.b64 	%rd188, {%r95, %r94};
	xor.b64  	%rd189, %rd187, %rd188;
	shf.l.wrap.b32 	%r96, %r90, %r91, 23;
	shf.l.wrap.b32 	%r97, %r91, %r90, 23;
	mov.b64 	%rd190, {%r97, %r96};
	xor.b64  	%rd191, %rd189, %rd190;
	xor.b64  	%rd192, %rd153, %rd131;
	and.b64  	%rd193, %rd175, %rd192;
	xor.b64  	%rd194, %rd193, %rd131;
	add.s64 	%rd195, %rd13, %rd120;
	add.s64 	%rd196, %rd195, %rd194;
	add.s64 	%rd197, %rd196, %rd191;
	add.s64 	%rd198, %rd197, %rd121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r98,%dummy}, %rd186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r99}, %rd186;
	}
	shf.r.wrap.b32 	%r100, %r99, %r98, 28;
	shf.r.wrap.b32 	%r101, %r98, %r99, 28;
	mov.b64 	%rd199, {%r101, %r100};
	shf.l.wrap.b32 	%r102, %r98, %r99, 30;
	shf.l.wrap.b32 	%r103, %r99, %r98, 30;
	mov.b64 	%rd200, {%r103, %r102};
	xor.b64  	%rd201, %rd199, %rd200;
	shf.l.wrap.b32 	%r104, %r98, %r99, 25;
	shf.l.wrap.b32 	%r105, %r99, %r98, 25;
	mov.b64 	%rd202, {%r105, %r104};
	xor.b64  	%rd203, %rd201, %rd202;
	and.b64  	%rd204, %rd186, %rd164;
	xor.b64  	%rd205, %rd186, %rd164;
	and.b64  	%rd206, %rd205, %rd142;
	or.b64  	%rd207, %rd206, %rd204;
	add.s64 	%rd208, %rd203, %rd207;
	add.s64 	%rd209, %rd208, %rd197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r106,%dummy}, %rd198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r107}, %rd198;
	}
	shf.r.wrap.b32 	%r108, %r107, %r106, 14;
	shf.r.wrap.b32 	%r109, %r106, %r107, 14;
	mov.b64 	%rd210, {%r109, %r108};
	shf.r.wrap.b32 	%r110, %r107, %r106, 18;
	shf.r.wrap.b32 	%r111, %r106, %r107, 18;
	mov.b64 	%rd211, {%r111, %r110};
	xor.b64  	%rd212, %rd210, %rd211;
	shf.l.wrap.b32 	%r112, %r106, %r107, 23;
	shf.l.wrap.b32 	%r113, %r107, %r106, 23;
	mov.b64 	%rd213, {%r113, %r112};
	xor.b64  	%rd214, %rd212, %rd213;
	xor.b64  	%rd215, %rd175, %rd153;
	and.b64  	%rd216, %rd198, %rd215;
	xor.b64  	%rd217, %rd216, %rd153;
	add.s64 	%rd218, %rd14, %rd131;
	add.s64 	%rd219, %rd218, %rd217;
	add.s64 	%rd220, %rd219, %rd214;
	add.s64 	%rd221, %rd220, %rd142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r114,%dummy}, %rd209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r115}, %rd209;
	}
	shf.r.wrap.b32 	%r116, %r115, %r114, 28;
	shf.r.wrap.b32 	%r117, %r114, %r115, 28;
	mov.b64 	%rd222, {%r117, %r116};
	shf.l.wrap.b32 	%r118, %r114, %r115, 30;
	shf.l.wrap.b32 	%r119, %r115, %r114, 30;
	mov.b64 	%rd223, {%r119, %r118};
	xor.b64  	%rd224, %rd222, %rd223;
	shf.l.wrap.b32 	%r120, %r114, %r115, 25;
	shf.l.wrap.b32 	%r121, %r115, %r114, 25;
	mov.b64 	%rd225, {%r121, %r120};
	xor.b64  	%rd226, %rd224, %rd225;
	and.b64  	%rd227, %rd209, %rd186;
	xor.b64  	%rd228, %rd209, %rd186;
	and.b64  	%rd229, %rd228, %rd164;
	or.b64  	%rd230, %rd229, %rd227;
	add.s64 	%rd231, %rd226, %rd230;
	add.s64 	%rd232, %rd231, %rd220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r122,%dummy}, %rd221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r123}, %rd221;
	}
	shf.r.wrap.b32 	%r124, %r123, %r122, 14;
	shf.r.wrap.b32 	%r125, %r122, %r123, 14;
	mov.b64 	%rd233, {%r125, %r124};
	shf.r.wrap.b32 	%r126, %r123, %r122, 18;
	shf.r.wrap.b32 	%r127, %r122, %r123, 18;
	mov.b64 	%rd234, {%r127, %r126};
	xor.b64  	%rd235, %rd233, %rd234;
	shf.l.wrap.b32 	%r128, %r122, %r123, 23;
	shf.l.wrap.b32 	%r129, %r123, %r122, 23;
	mov.b64 	%rd236, {%r129, %r128};
	xor.b64  	%rd237, %rd235, %rd236;
	xor.b64  	%rd238, %rd198, %rd175;
	and.b64  	%rd239, %rd221, %rd238;
	xor.b64  	%rd240, %rd239, %rd175;
	add.s64 	%rd241, %rd15, %rd153;
	add.s64 	%rd242, %rd241, %rd240;
	add.s64 	%rd243, %rd242, %rd237;
	add.s64 	%rd244, %rd243, %rd164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r130,%dummy}, %rd232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r131}, %rd232;
	}
	shf.r.wrap.b32 	%r132, %r131, %r130, 28;
	shf.r.wrap.b32 	%r133, %r130, %r131, 28;
	mov.b64 	%rd245, {%r133, %r132};
	shf.l.wrap.b32 	%r134, %r130, %r131, 30;
	shf.l.wrap.b32 	%r135, %r131, %r130, 30;
	mov.b64 	%rd246, {%r135, %r134};
	xor.b64  	%rd247, %rd245, %rd246;
	shf.l.wrap.b32 	%r136, %r130, %r131, 25;
	shf.l.wrap.b32 	%r137, %r131, %r130, 25;
	mov.b64 	%rd248, {%r137, %r136};
	xor.b64  	%rd249, %rd247, %rd248;
	and.b64  	%rd250, %rd232, %rd209;
	xor.b64  	%rd251, %rd232, %rd209;
	and.b64  	%rd252, %rd251, %rd186;
	or.b64  	%rd253, %rd252, %rd250;
	add.s64 	%rd254, %rd249, %rd253;
	add.s64 	%rd255, %rd254, %rd243;
	add.s64 	%rd256, %rd175, %rd1042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r138,%dummy}, %rd244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r139}, %rd244;
	}
	shf.r.wrap.b32 	%r140, %r139, %r138, 14;
	shf.r.wrap.b32 	%r141, %r138, %r139, 14;
	mov.b64 	%rd257, {%r141, %r140};
	shf.r.wrap.b32 	%r142, %r139, %r138, 18;
	shf.r.wrap.b32 	%r143, %r138, %r139, 18;
	mov.b64 	%rd258, {%r143, %r142};
	xor.b64  	%rd259, %rd257, %rd258;
	shf.l.wrap.b32 	%r144, %r138, %r139, 23;
	shf.l.wrap.b32 	%r145, %r139, %r138, 23;
	mov.b64 	%rd260, {%r145, %r144};
	xor.b64  	%rd261, %rd259, %rd260;
	xor.b64  	%rd262, %rd221, %rd198;
	and.b64  	%rd263, %rd244, %rd262;
	xor.b64  	%rd264, %rd263, %rd198;
	add.s64 	%rd265, %rd256, %rd264;
	add.s64 	%rd266, %rd265, %rd261;
	add.s64 	%rd267, %rd266, %rd186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r146,%dummy}, %rd255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r147}, %rd255;
	}
	shf.r.wrap.b32 	%r148, %r147, %r146, 28;
	shf.r.wrap.b32 	%r149, %r146, %r147, 28;
	mov.b64 	%rd268, {%r149, %r148};
	shf.l.wrap.b32 	%r150, %r146, %r147, 30;
	shf.l.wrap.b32 	%r151, %r147, %r146, 30;
	mov.b64 	%rd269, {%r151, %r150};
	xor.b64  	%rd270, %rd268, %rd269;
	shf.l.wrap.b32 	%r152, %r146, %r147, 25;
	shf.l.wrap.b32 	%r153, %r147, %r146, 25;
	mov.b64 	%rd271, {%r153, %r152};
	xor.b64  	%rd272, %rd270, %rd271;
	and.b64  	%rd273, %rd255, %rd232;
	xor.b64  	%rd274, %rd255, %rd232;
	and.b64  	%rd275, %rd274, %rd209;
	or.b64  	%rd276, %rd275, %rd273;
	add.s64 	%rd277, %rd272, %rd276;
	add.s64 	%rd278, %rd277, %rd266;
	add.s64 	%rd279, %rd198, %rd1043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r154,%dummy}, %rd267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r155}, %rd267;
	}
	shf.r.wrap.b32 	%r156, %r155, %r154, 14;
	shf.r.wrap.b32 	%r157, %r154, %r155, 14;
	mov.b64 	%rd280, {%r157, %r156};
	shf.r.wrap.b32 	%r158, %r155, %r154, 18;
	shf.r.wrap.b32 	%r159, %r154, %r155, 18;
	mov.b64 	%rd281, {%r159, %r158};
	xor.b64  	%rd282, %rd280, %rd281;
	shf.l.wrap.b32 	%r160, %r154, %r155, 23;
	shf.l.wrap.b32 	%r161, %r155, %r154, 23;
	mov.b64 	%rd283, {%r161, %r160};
	xor.b64  	%rd284, %rd282, %rd283;
	xor.b64  	%rd285, %rd244, %rd221;
	and.b64  	%rd286, %rd267, %rd285;
	xor.b64  	%rd287, %rd286, %rd221;
	add.s64 	%rd288, %rd279, %rd287;
	add.s64 	%rd289, %rd288, %rd284;
	add.s64 	%rd290, %rd289, %rd209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r162,%dummy}, %rd278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r163}, %rd278;
	}
	shf.r.wrap.b32 	%r164, %r163, %r162, 28;
	shf.r.wrap.b32 	%r165, %r162, %r163, 28;
	mov.b64 	%rd291, {%r165, %r164};
	shf.l.wrap.b32 	%r166, %r162, %r163, 30;
	shf.l.wrap.b32 	%r167, %r163, %r162, 30;
	mov.b64 	%rd292, {%r167, %r166};
	xor.b64  	%rd293, %rd291, %rd292;
	shf.l.wrap.b32 	%r168, %r162, %r163, 25;
	shf.l.wrap.b32 	%r169, %r163, %r162, 25;
	mov.b64 	%rd294, {%r169, %r168};
	xor.b64  	%rd295, %rd293, %rd294;
	and.b64  	%rd296, %rd278, %rd255;
	xor.b64  	%rd297, %rd278, %rd255;
	and.b64  	%rd298, %rd297, %rd232;
	or.b64  	%rd299, %rd298, %rd296;
	add.s64 	%rd300, %rd295, %rd299;
	add.s64 	%rd301, %rd300, %rd289;
	add.s64 	%rd302, %rd221, %rd1044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r170,%dummy}, %rd290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r171}, %rd290;
	}
	shf.r.wrap.b32 	%r172, %r171, %r170, 14;
	shf.r.wrap.b32 	%r173, %r170, %r171, 14;
	mov.b64 	%rd303, {%r173, %r172};
	shf.r.wrap.b32 	%r174, %r171, %r170, 18;
	shf.r.wrap.b32 	%r175, %r170, %r171, 18;
	mov.b64 	%rd304, {%r175, %r174};
	xor.b64  	%rd305, %rd303, %rd304;
	shf.l.wrap.b32 	%r176, %r170, %r171, 23;
	shf.l.wrap.b32 	%r177, %r171, %r170, 23;
	mov.b64 	%rd306, {%r177, %r176};
	xor.b64  	%rd307, %rd305, %rd306;
	xor.b64  	%rd308, %rd267, %rd244;
	and.b64  	%rd309, %rd290, %rd308;
	xor.b64  	%rd310, %rd309, %rd244;
	add.s64 	%rd311, %rd302, %rd310;
	add.s64 	%rd312, %rd311, %rd307;
	add.s64 	%rd313, %rd312, %rd232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r178,%dummy}, %rd301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r179}, %rd301;
	}
	shf.r.wrap.b32 	%r180, %r179, %r178, 28;
	shf.r.wrap.b32 	%r181, %r178, %r179, 28;
	mov.b64 	%rd314, {%r181, %r180};
	shf.l.wrap.b32 	%r182, %r178, %r179, 30;
	shf.l.wrap.b32 	%r183, %r179, %r178, 30;
	mov.b64 	%rd315, {%r183, %r182};
	xor.b64  	%rd316, %rd314, %rd315;
	shf.l.wrap.b32 	%r184, %r178, %r179, 25;
	shf.l.wrap.b32 	%r185, %r179, %r178, 25;
	mov.b64 	%rd317, {%r185, %r184};
	xor.b64  	%rd318, %rd316, %rd317;
	and.b64  	%rd319, %rd301, %rd278;
	xor.b64  	%rd320, %rd301, %rd278;
	and.b64  	%rd321, %rd320, %rd255;
	or.b64  	%rd322, %rd321, %rd319;
	add.s64 	%rd323, %rd318, %rd322;
	add.s64 	%rd324, %rd323, %rd312;
	add.s64 	%rd325, %rd244, %rd1045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r186,%dummy}, %rd313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r187}, %rd313;
	}
	shf.r.wrap.b32 	%r188, %r187, %r186, 14;
	shf.r.wrap.b32 	%r189, %r186, %r187, 14;
	mov.b64 	%rd326, {%r189, %r188};
	shf.r.wrap.b32 	%r190, %r187, %r186, 18;
	shf.r.wrap.b32 	%r191, %r186, %r187, 18;
	mov.b64 	%rd327, {%r191, %r190};
	xor.b64  	%rd328, %rd326, %rd327;
	shf.l.wrap.b32 	%r192, %r186, %r187, 23;
	shf.l.wrap.b32 	%r193, %r187, %r186, 23;
	mov.b64 	%rd329, {%r193, %r192};
	xor.b64  	%rd330, %rd328, %rd329;
	xor.b64  	%rd331, %rd290, %rd267;
	and.b64  	%rd332, %rd313, %rd331;
	xor.b64  	%rd333, %rd332, %rd267;
	add.s64 	%rd334, %rd325, %rd333;
	add.s64 	%rd335, %rd334, %rd330;
	add.s64 	%rd336, %rd335, %rd255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r194,%dummy}, %rd324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r195}, %rd324;
	}
	shf.r.wrap.b32 	%r196, %r195, %r194, 28;
	shf.r.wrap.b32 	%r197, %r194, %r195, 28;
	mov.b64 	%rd337, {%r197, %r196};
	shf.l.wrap.b32 	%r198, %r194, %r195, 30;
	shf.l.wrap.b32 	%r199, %r195, %r194, 30;
	mov.b64 	%rd338, {%r199, %r198};
	xor.b64  	%rd339, %rd337, %rd338;
	shf.l.wrap.b32 	%r200, %r194, %r195, 25;
	shf.l.wrap.b32 	%r201, %r195, %r194, 25;
	mov.b64 	%rd340, {%r201, %r200};
	xor.b64  	%rd341, %rd339, %rd340;
	and.b64  	%rd342, %rd324, %rd301;
	xor.b64  	%rd343, %rd324, %rd301;
	and.b64  	%rd344, %rd343, %rd278;
	or.b64  	%rd345, %rd344, %rd342;
	add.s64 	%rd346, %rd341, %rd345;
	add.s64 	%rd347, %rd346, %rd335;
	add.s64 	%rd348, %rd267, %rd1046;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r202,%dummy}, %rd336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r203}, %rd336;
	}
	shf.r.wrap.b32 	%r204, %r203, %r202, 14;
	shf.r.wrap.b32 	%r205, %r202, %r203, 14;
	mov.b64 	%rd349, {%r205, %r204};
	shf.r.wrap.b32 	%r206, %r203, %r202, 18;
	shf.r.wrap.b32 	%r207, %r202, %r203, 18;
	mov.b64 	%rd350, {%r207, %r206};
	xor.b64  	%rd351, %rd349, %rd350;
	shf.l.wrap.b32 	%r208, %r202, %r203, 23;
	shf.l.wrap.b32 	%r209, %r203, %r202, 23;
	mov.b64 	%rd352, {%r209, %r208};
	xor.b64  	%rd353, %rd351, %rd352;
	xor.b64  	%rd354, %rd313, %rd290;
	and.b64  	%rd355, %rd336, %rd354;
	xor.b64  	%rd356, %rd355, %rd290;
	add.s64 	%rd357, %rd348, %rd356;
	add.s64 	%rd358, %rd357, %rd353;
	add.s64 	%rd359, %rd358, %rd278;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r210,%dummy}, %rd347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r211}, %rd347;
	}
	shf.r.wrap.b32 	%r212, %r211, %r210, 28;
	shf.r.wrap.b32 	%r213, %r210, %r211, 28;
	mov.b64 	%rd360, {%r213, %r212};
	shf.l.wrap.b32 	%r214, %r210, %r211, 30;
	shf.l.wrap.b32 	%r215, %r211, %r210, 30;
	mov.b64 	%rd361, {%r215, %r214};
	xor.b64  	%rd362, %rd360, %rd361;
	shf.l.wrap.b32 	%r216, %r210, %r211, 25;
	shf.l.wrap.b32 	%r217, %r211, %r210, 25;
	mov.b64 	%rd363, {%r217, %r216};
	xor.b64  	%rd364, %rd362, %rd363;
	and.b64  	%rd365, %rd347, %rd324;
	xor.b64  	%rd366, %rd347, %rd324;
	and.b64  	%rd367, %rd366, %rd301;
	or.b64  	%rd368, %rd367, %rd365;
	add.s64 	%rd369, %rd364, %rd368;
	add.s64 	%rd370, %rd369, %rd358;
	add.s64 	%rd371, %rd290, %rd1047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r218,%dummy}, %rd359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r219}, %rd359;
	}
	shf.r.wrap.b32 	%r220, %r219, %r218, 14;
	shf.r.wrap.b32 	%r221, %r218, %r219, 14;
	mov.b64 	%rd372, {%r221, %r220};
	shf.r.wrap.b32 	%r222, %r219, %r218, 18;
	shf.r.wrap.b32 	%r223, %r218, %r219, 18;
	mov.b64 	%rd373, {%r223, %r222};
	xor.b64  	%rd374, %rd372, %rd373;
	shf.l.wrap.b32 	%r224, %r218, %r219, 23;
	shf.l.wrap.b32 	%r225, %r219, %r218, 23;
	mov.b64 	%rd375, {%r225, %r224};
	xor.b64  	%rd376, %rd374, %rd375;
	xor.b64  	%rd377, %rd336, %rd313;
	and.b64  	%rd378, %rd359, %rd377;
	xor.b64  	%rd379, %rd378, %rd313;
	add.s64 	%rd380, %rd371, %rd379;
	add.s64 	%rd381, %rd380, %rd376;
	add.s64 	%rd1052, %rd381, %rd301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r226,%dummy}, %rd370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r227}, %rd370;
	}
	shf.r.wrap.b32 	%r228, %r227, %r226, 28;
	shf.r.wrap.b32 	%r229, %r226, %r227, 28;
	mov.b64 	%rd382, {%r229, %r228};
	shf.l.wrap.b32 	%r230, %r226, %r227, 30;
	shf.l.wrap.b32 	%r231, %r227, %r226, 30;
	mov.b64 	%rd383, {%r231, %r230};
	xor.b64  	%rd384, %rd382, %rd383;
	shf.l.wrap.b32 	%r232, %r226, %r227, 25;
	shf.l.wrap.b32 	%r233, %r227, %r226, 25;
	mov.b64 	%rd385, {%r233, %r232};
	xor.b64  	%rd386, %rd384, %rd385;
	and.b64  	%rd387, %rd370, %rd347;
	xor.b64  	%rd388, %rd370, %rd347;
	and.b64  	%rd389, %rd388, %rd324;
	or.b64  	%rd390, %rd389, %rd387;
	add.s64 	%rd391, %rd386, %rd390;
	add.s64 	%rd1075, %rd391, %rd381;
	add.s64 	%rd392, %rd313, %rd1048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r234,%dummy}, %rd1052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r235}, %rd1052;
	}
	shf.r.wrap.b32 	%r236, %r235, %r234, 14;
	shf.r.wrap.b32 	%r237, %r234, %r235, 14;
	mov.b64 	%rd393, {%r237, %r236};
	shf.r.wrap.b32 	%r238, %r235, %r234, 18;
	shf.r.wrap.b32 	%r239, %r234, %r235, 18;
	mov.b64 	%rd394, {%r239, %r238};
	xor.b64  	%rd395, %rd393, %rd394;
	shf.l.wrap.b32 	%r240, %r234, %r235, 23;
	shf.l.wrap.b32 	%r241, %r235, %r234, 23;
	mov.b64 	%rd396, {%r241, %r240};
	xor.b64  	%rd397, %rd395, %rd396;
	xor.b64  	%rd398, %rd359, %rd336;
	and.b64  	%rd399, %rd1052, %rd398;
	xor.b64  	%rd400, %rd399, %rd336;
	add.s64 	%rd401, %rd392, %rd400;
	add.s64 	%rd402, %rd401, %rd397;
	add.s64 	%rd1053, %rd402, %rd324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r242,%dummy}, %rd1075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r243}, %rd1075;
	}
	shf.r.wrap.b32 	%r244, %r243, %r242, 28;
	shf.r.wrap.b32 	%r245, %r242, %r243, 28;
	mov.b64 	%rd403, {%r245, %r244};
	shf.l.wrap.b32 	%r246, %r242, %r243, 30;
	shf.l.wrap.b32 	%r247, %r243, %r242, 30;
	mov.b64 	%rd404, {%r247, %r246};
	xor.b64  	%rd405, %rd403, %rd404;
	shf.l.wrap.b32 	%r248, %r242, %r243, 25;
	shf.l.wrap.b32 	%r249, %r243, %r242, 25;
	mov.b64 	%rd406, {%r249, %r248};
	xor.b64  	%rd407, %rd405, %rd406;
	and.b64  	%rd408, %rd1075, %rd370;
	xor.b64  	%rd409, %rd1075, %rd370;
	and.b64  	%rd410, %rd409, %rd347;
	or.b64  	%rd411, %rd410, %rd408;
	add.s64 	%rd412, %rd407, %rd411;
	add.s64 	%rd1074, %rd412, %rd402;
	add.s64 	%rd413, %rd336, %rd1049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r250,%dummy}, %rd1053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r251}, %rd1053;
	}
	shf.r.wrap.b32 	%r252, %r251, %r250, 14;
	shf.r.wrap.b32 	%r253, %r250, %r251, 14;
	mov.b64 	%rd414, {%r253, %r252};
	shf.r.wrap.b32 	%r254, %r251, %r250, 18;
	shf.r.wrap.b32 	%r255, %r250, %r251, 18;
	mov.b64 	%rd415, {%r255, %r254};
	xor.b64  	%rd416, %rd414, %rd415;
	shf.l.wrap.b32 	%r256, %r250, %r251, 23;
	shf.l.wrap.b32 	%r257, %r251, %r250, 23;
	mov.b64 	%rd417, {%r257, %r256};
	xor.b64  	%rd418, %rd416, %rd417;
	xor.b64  	%rd419, %rd1052, %rd359;
	and.b64  	%rd420, %rd1053, %rd419;
	xor.b64  	%rd421, %rd420, %rd359;
	add.s64 	%rd422, %rd413, %rd421;
	add.s64 	%rd423, %rd422, %rd418;
	add.s64 	%rd1054, %rd423, %rd347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r258,%dummy}, %rd1074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r259}, %rd1074;
	}
	shf.r.wrap.b32 	%r260, %r259, %r258, 28;
	shf.r.wrap.b32 	%r261, %r258, %r259, 28;
	mov.b64 	%rd424, {%r261, %r260};
	shf.l.wrap.b32 	%r262, %r258, %r259, 30;
	shf.l.wrap.b32 	%r263, %r259, %r258, 30;
	mov.b64 	%rd425, {%r263, %r262};
	xor.b64  	%rd426, %rd424, %rd425;
	shf.l.wrap.b32 	%r264, %r258, %r259, 25;
	shf.l.wrap.b32 	%r265, %r259, %r258, 25;
	mov.b64 	%rd427, {%r265, %r264};
	xor.b64  	%rd428, %rd426, %rd427;
	and.b64  	%rd429, %rd1074, %rd1075;
	xor.b64  	%rd430, %rd1074, %rd1075;
	and.b64  	%rd431, %rd430, %rd370;
	or.b64  	%rd432, %rd431, %rd429;
	add.s64 	%rd433, %rd428, %rd432;
	add.s64 	%rd1073, %rd433, %rd423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r266,%dummy}, %rd1054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r267}, %rd1054;
	}
	shf.r.wrap.b32 	%r268, %r267, %r266, 14;
	shf.r.wrap.b32 	%r269, %r266, %r267, 14;
	mov.b64 	%rd434, {%r269, %r268};
	shf.r.wrap.b32 	%r270, %r267, %r266, 18;
	shf.r.wrap.b32 	%r271, %r266, %r267, 18;
	mov.b64 	%rd435, {%r271, %r270};
	xor.b64  	%rd436, %rd434, %rd435;
	shf.l.wrap.b32 	%r272, %r266, %r267, 23;
	shf.l.wrap.b32 	%r273, %r267, %r266, 23;
	mov.b64 	%rd437, {%r273, %r272};
	xor.b64  	%rd438, %rd436, %rd437;
	xor.b64  	%rd439, %rd1053, %rd1052;
	and.b64  	%rd440, %rd1054, %rd439;
	xor.b64  	%rd441, %rd440, %rd1052;
	add.s64 	%rd442, %rd24, %rd359;
	add.s64 	%rd443, %rd442, %rd441;
	add.s64 	%rd444, %rd443, %rd438;
	add.s64 	%rd1055, %rd444, %rd370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r274,%dummy}, %rd1073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r275}, %rd1073;
	}
	shf.r.wrap.b32 	%r276, %r275, %r274, 28;
	shf.r.wrap.b32 	%r277, %r274, %r275, 28;
	mov.b64 	%rd445, {%r277, %r276};
	shf.l.wrap.b32 	%r278, %r274, %r275, 30;
	shf.l.wrap.b32 	%r279, %r275, %r274, 30;
	mov.b64 	%rd446, {%r279, %r278};
	xor.b64  	%rd447, %rd445, %rd446;
	shf.l.wrap.b32 	%r280, %r274, %r275, 25;
	shf.l.wrap.b32 	%r281, %r275, %r274, 25;
	mov.b64 	%rd448, {%r281, %r280};
	xor.b64  	%rd449, %rd447, %rd448;
	and.b64  	%rd450, %rd1073, %rd1074;
	xor.b64  	%rd451, %rd1073, %rd1074;
	and.b64  	%rd452, %rd451, %rd1075;
	or.b64  	%rd453, %rd452, %rd450;
	add.s64 	%rd454, %rd449, %rd453;
	add.s64 	%rd1072, %rd454, %rd444;
	mov.u64 	%rd1063, 0;
	mov.u32 	%r734, 16;
	mov.u64 	%rd1051, k_sha512;
	mov.u64 	%rd1057, %rd2;
	mov.u64 	%rd1058, %rd3;
	mov.u64 	%rd1059, %rd4;
	mov.u64 	%rd1060, %rd5;
	mov.u64 	%rd1061, %rd6;
	mov.u64 	%rd1062, %rd7;
	mov.u64 	%rd1064, %rd1063;
	mov.u64 	%rd1065, %rd1063;
	mov.u64 	%rd1066, %rd1063;
	mov.u64 	%rd1067, %rd1063;
	mov.u64 	%rd1068, %rd1063;
	mov.u64 	%rd1069, %rd1063;
	mov.u64 	%rd1070, %rd1063;
	mov.u64 	%rd1071, %rd8;

BB5_4:
	shr.u64 	%rd455, %rd1070, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r282}, %rd1070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r283,%dummy}, %rd1070;
	}
	shf.l.wrap.b32 	%r284, %r283, %r282, 3;
	shf.l.wrap.b32 	%r285, %r282, %r283, 3;
	mov.b64 	%rd456, {%r285, %r284};
	xor.b64  	%rd457, %rd456, %rd455;
	shf.r.wrap.b32 	%r286, %r282, %r283, 19;
	shf.r.wrap.b32 	%r287, %r283, %r282, 19;
	mov.b64 	%rd458, {%r287, %r286};
	xor.b64  	%rd459, %rd457, %rd458;
	add.s64 	%rd460, %rd1065, %rd459;
	shr.u64 	%rd461, %rd1057, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r288,%dummy}, %rd1057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r289}, %rd1057;
	}
	shf.r.wrap.b32 	%r290, %r289, %r288, 8;
	shf.r.wrap.b32 	%r291, %r288, %r289, 8;
	mov.b64 	%rd462, {%r291, %r290};
	xor.b64  	%rd463, %rd462, %rd461;
	shf.r.wrap.b32 	%r292, %r289, %r288, 1;
	shf.r.wrap.b32 	%r293, %r288, %r289, 1;
	mov.b64 	%rd464, {%r293, %r292};
	xor.b64  	%rd465, %rd463, %rd464;
	add.s64 	%rd466, %rd460, %rd1056;
	add.s64 	%rd1056, %rd466, %rd465;
	shr.u64 	%rd467, %rd1071, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r294}, %rd1071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r295,%dummy}, %rd1071;
	}
	shf.l.wrap.b32 	%r296, %r295, %r294, 3;
	shf.l.wrap.b32 	%r297, %r294, %r295, 3;
	mov.b64 	%rd468, {%r297, %r296};
	xor.b64  	%rd469, %rd468, %rd467;
	shf.r.wrap.b32 	%r298, %r294, %r295, 19;
	shf.r.wrap.b32 	%r299, %r295, %r294, 19;
	mov.b64 	%rd470, {%r299, %r298};
	xor.b64  	%rd471, %rd469, %rd470;
	add.s64 	%rd472, %rd1066, %rd471;
	shr.u64 	%rd473, %rd1058, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r300,%dummy}, %rd1058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r301}, %rd1058;
	}
	shf.r.wrap.b32 	%r302, %r301, %r300, 8;
	shf.r.wrap.b32 	%r303, %r300, %r301, 8;
	mov.b64 	%rd474, {%r303, %r302};
	xor.b64  	%rd475, %rd474, %rd473;
	shf.r.wrap.b32 	%r304, %r301, %r300, 1;
	shf.r.wrap.b32 	%r305, %r300, %r301, 1;
	mov.b64 	%rd476, {%r305, %r304};
	xor.b64  	%rd477, %rd475, %rd476;
	add.s64 	%rd478, %rd472, %rd1057;
	add.s64 	%rd1057, %rd478, %rd477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r306,%dummy}, %rd1056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r307}, %rd1056;
	}
	shf.r.wrap.b32 	%r308, %r307, %r306, 19;
	shf.r.wrap.b32 	%r309, %r306, %r307, 19;
	mov.b64 	%rd479, {%r309, %r308};
	shf.l.wrap.b32 	%r310, %r306, %r307, 3;
	shf.l.wrap.b32 	%r311, %r307, %r306, 3;
	mov.b64 	%rd480, {%r311, %r310};
	shr.u64 	%rd481, %rd1056, 6;
	xor.b64  	%rd482, %rd480, %rd481;
	xor.b64  	%rd483, %rd482, %rd479;
	shr.u64 	%rd484, %rd1059, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r312,%dummy}, %rd1059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r313}, %rd1059;
	}
	shf.r.wrap.b32 	%r314, %r313, %r312, 8;
	shf.r.wrap.b32 	%r315, %r312, %r313, 8;
	mov.b64 	%rd485, {%r315, %r314};
	xor.b64  	%rd486, %rd485, %rd484;
	shf.r.wrap.b32 	%r316, %r313, %r312, 1;
	shf.r.wrap.b32 	%r317, %r312, %r313, 1;
	mov.b64 	%rd487, {%r317, %r316};
	xor.b64  	%rd488, %rd486, %rd487;
	add.s64 	%rd489, %rd1058, %rd1067;
	add.s64 	%rd490, %rd489, %rd488;
	add.s64 	%rd1058, %rd490, %rd483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r318,%dummy}, %rd1057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r319}, %rd1057;
	}
	shf.r.wrap.b32 	%r320, %r319, %r318, 19;
	shf.r.wrap.b32 	%r321, %r318, %r319, 19;
	mov.b64 	%rd491, {%r321, %r320};
	shf.l.wrap.b32 	%r322, %r318, %r319, 3;
	shf.l.wrap.b32 	%r323, %r319, %r318, 3;
	mov.b64 	%rd492, {%r323, %r322};
	shr.u64 	%rd493, %rd1057, 6;
	xor.b64  	%rd494, %rd492, %rd493;
	xor.b64  	%rd495, %rd494, %rd491;
	shr.u64 	%rd496, %rd1060, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r324,%dummy}, %rd1060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r325}, %rd1060;
	}
	shf.r.wrap.b32 	%r326, %r325, %r324, 8;
	shf.r.wrap.b32 	%r327, %r324, %r325, 8;
	mov.b64 	%rd497, {%r327, %r326};
	xor.b64  	%rd498, %rd497, %rd496;
	shf.r.wrap.b32 	%r328, %r325, %r324, 1;
	shf.r.wrap.b32 	%r329, %r324, %r325, 1;
	mov.b64 	%rd499, {%r329, %r328};
	xor.b64  	%rd500, %rd498, %rd499;
	add.s64 	%rd501, %rd1059, %rd1068;
	add.s64 	%rd502, %rd501, %rd500;
	add.s64 	%rd1059, %rd502, %rd495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r330,%dummy}, %rd1058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r331}, %rd1058;
	}
	shf.r.wrap.b32 	%r332, %r331, %r330, 19;
	shf.r.wrap.b32 	%r333, %r330, %r331, 19;
	mov.b64 	%rd503, {%r333, %r332};
	shf.l.wrap.b32 	%r334, %r330, %r331, 3;
	shf.l.wrap.b32 	%r335, %r331, %r330, 3;
	mov.b64 	%rd504, {%r335, %r334};
	shr.u64 	%rd505, %rd1058, 6;
	xor.b64  	%rd506, %rd504, %rd505;
	xor.b64  	%rd507, %rd506, %rd503;
	shr.u64 	%rd508, %rd1061, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r336,%dummy}, %rd1061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r337}, %rd1061;
	}
	shf.r.wrap.b32 	%r338, %r337, %r336, 8;
	shf.r.wrap.b32 	%r339, %r336, %r337, 8;
	mov.b64 	%rd509, {%r339, %r338};
	xor.b64  	%rd510, %rd509, %rd508;
	shf.r.wrap.b32 	%r340, %r337, %r336, 1;
	shf.r.wrap.b32 	%r341, %r336, %r337, 1;
	mov.b64 	%rd511, {%r341, %r340};
	xor.b64  	%rd512, %rd510, %rd511;
	add.s64 	%rd513, %rd1060, %rd1069;
	add.s64 	%rd514, %rd513, %rd512;
	add.s64 	%rd1060, %rd514, %rd507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r342,%dummy}, %rd1059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r343}, %rd1059;
	}
	shf.r.wrap.b32 	%r344, %r343, %r342, 19;
	shf.r.wrap.b32 	%r345, %r342, %r343, 19;
	mov.b64 	%rd515, {%r345, %r344};
	shf.l.wrap.b32 	%r346, %r342, %r343, 3;
	shf.l.wrap.b32 	%r347, %r343, %r342, 3;
	mov.b64 	%rd516, {%r347, %r346};
	shr.u64 	%rd517, %rd1059, 6;
	xor.b64  	%rd518, %rd516, %rd517;
	xor.b64  	%rd519, %rd518, %rd515;
	shr.u64 	%rd520, %rd1062, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r348,%dummy}, %rd1062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r349}, %rd1062;
	}
	shf.r.wrap.b32 	%r350, %r349, %r348, 8;
	shf.r.wrap.b32 	%r351, %r348, %r349, 8;
	mov.b64 	%rd521, {%r351, %r350};
	xor.b64  	%rd522, %rd521, %rd520;
	shf.r.wrap.b32 	%r352, %r349, %r348, 1;
	shf.r.wrap.b32 	%r353, %r348, %r349, 1;
	mov.b64 	%rd523, {%r353, %r352};
	xor.b64  	%rd524, %rd522, %rd523;
	add.s64 	%rd525, %rd1061, %rd1070;
	add.s64 	%rd526, %rd525, %rd524;
	add.s64 	%rd1061, %rd526, %rd519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r354,%dummy}, %rd1060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r355}, %rd1060;
	}
	shf.r.wrap.b32 	%r356, %r355, %r354, 19;
	shf.r.wrap.b32 	%r357, %r354, %r355, 19;
	mov.b64 	%rd527, {%r357, %r356};
	shf.l.wrap.b32 	%r358, %r354, %r355, 3;
	shf.l.wrap.b32 	%r359, %r355, %r354, 3;
	mov.b64 	%rd528, {%r359, %r358};
	shr.u64 	%rd529, %rd1060, 6;
	xor.b64  	%rd530, %rd528, %rd529;
	xor.b64  	%rd531, %rd530, %rd527;
	shr.u64 	%rd532, %rd1063, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r360,%dummy}, %rd1063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r361}, %rd1063;
	}
	shf.r.wrap.b32 	%r362, %r361, %r360, 8;
	shf.r.wrap.b32 	%r363, %r360, %r361, 8;
	mov.b64 	%rd533, {%r363, %r362};
	xor.b64  	%rd534, %rd533, %rd532;
	shf.r.wrap.b32 	%r364, %r361, %r360, 1;
	shf.r.wrap.b32 	%r365, %r360, %r361, 1;
	mov.b64 	%rd535, {%r365, %r364};
	xor.b64  	%rd536, %rd534, %rd535;
	add.s64 	%rd537, %rd1062, %rd1071;
	add.s64 	%rd538, %rd537, %rd536;
	add.s64 	%rd1062, %rd538, %rd531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r366,%dummy}, %rd1061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r367}, %rd1061;
	}
	shf.r.wrap.b32 	%r368, %r367, %r366, 19;
	shf.r.wrap.b32 	%r369, %r366, %r367, 19;
	mov.b64 	%rd539, {%r369, %r368};
	shf.l.wrap.b32 	%r370, %r366, %r367, 3;
	shf.l.wrap.b32 	%r371, %r367, %r366, 3;
	mov.b64 	%rd540, {%r371, %r370};
	shr.u64 	%rd541, %rd1061, 6;
	xor.b64  	%rd542, %rd540, %rd541;
	xor.b64  	%rd543, %rd542, %rd539;
	shr.u64 	%rd544, %rd1064, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r372,%dummy}, %rd1064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r373}, %rd1064;
	}
	shf.r.wrap.b32 	%r374, %r373, %r372, 8;
	shf.r.wrap.b32 	%r375, %r372, %r373, 8;
	mov.b64 	%rd545, {%r375, %r374};
	xor.b64  	%rd546, %rd545, %rd544;
	shf.r.wrap.b32 	%r376, %r373, %r372, 1;
	shf.r.wrap.b32 	%r377, %r372, %r373, 1;
	mov.b64 	%rd547, {%r377, %r376};
	xor.b64  	%rd548, %rd546, %rd547;
	add.s64 	%rd549, %rd548, %rd1063;
	add.s64 	%rd550, %rd549, %rd1056;
	add.s64 	%rd1063, %rd550, %rd543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r378,%dummy}, %rd1062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r379}, %rd1062;
	}
	shf.r.wrap.b32 	%r380, %r379, %r378, 19;
	shf.r.wrap.b32 	%r381, %r378, %r379, 19;
	mov.b64 	%rd551, {%r381, %r380};
	shf.l.wrap.b32 	%r382, %r378, %r379, 3;
	shf.l.wrap.b32 	%r383, %r379, %r378, 3;
	mov.b64 	%rd552, {%r383, %r382};
	shr.u64 	%rd553, %rd1062, 6;
	xor.b64  	%rd554, %rd552, %rd553;
	xor.b64  	%rd555, %rd554, %rd551;
	shr.u64 	%rd556, %rd1065, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r384,%dummy}, %rd1065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r385}, %rd1065;
	}
	shf.r.wrap.b32 	%r386, %r385, %r384, 8;
	shf.r.wrap.b32 	%r387, %r384, %r385, 8;
	mov.b64 	%rd557, {%r387, %r386};
	xor.b64  	%rd558, %rd557, %rd556;
	shf.r.wrap.b32 	%r388, %r385, %r384, 1;
	shf.r.wrap.b32 	%r389, %r384, %r385, 1;
	mov.b64 	%rd559, {%r389, %r388};
	xor.b64  	%rd560, %rd558, %rd559;
	add.s64 	%rd561, %rd560, %rd1064;
	add.s64 	%rd562, %rd561, %rd1057;
	add.s64 	%rd1064, %rd562, %rd555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r390,%dummy}, %rd1063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r391}, %rd1063;
	}
	shf.r.wrap.b32 	%r392, %r391, %r390, 19;
	shf.r.wrap.b32 	%r393, %r390, %r391, 19;
	mov.b64 	%rd563, {%r393, %r392};
	shf.l.wrap.b32 	%r394, %r390, %r391, 3;
	shf.l.wrap.b32 	%r395, %r391, %r390, 3;
	mov.b64 	%rd564, {%r395, %r394};
	shr.u64 	%rd565, %rd1063, 6;
	xor.b64  	%rd566, %rd564, %rd565;
	xor.b64  	%rd567, %rd566, %rd563;
	shr.u64 	%rd568, %rd1066, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r396,%dummy}, %rd1066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r397}, %rd1066;
	}
	shf.r.wrap.b32 	%r398, %r397, %r396, 8;
	shf.r.wrap.b32 	%r399, %r396, %r397, 8;
	mov.b64 	%rd569, {%r399, %r398};
	xor.b64  	%rd570, %rd569, %rd568;
	shf.r.wrap.b32 	%r400, %r397, %r396, 1;
	shf.r.wrap.b32 	%r401, %r396, %r397, 1;
	mov.b64 	%rd571, {%r401, %r400};
	xor.b64  	%rd572, %rd570, %rd571;
	add.s64 	%rd573, %rd572, %rd1065;
	add.s64 	%rd574, %rd573, %rd1058;
	add.s64 	%rd1065, %rd574, %rd567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r402,%dummy}, %rd1064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r403}, %rd1064;
	}
	shf.r.wrap.b32 	%r404, %r403, %r402, 19;
	shf.r.wrap.b32 	%r405, %r402, %r403, 19;
	mov.b64 	%rd575, {%r405, %r404};
	shf.l.wrap.b32 	%r406, %r402, %r403, 3;
	shf.l.wrap.b32 	%r407, %r403, %r402, 3;
	mov.b64 	%rd576, {%r407, %r406};
	shr.u64 	%rd577, %rd1064, 6;
	xor.b64  	%rd578, %rd576, %rd577;
	xor.b64  	%rd579, %rd578, %rd575;
	shr.u64 	%rd580, %rd1067, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r408,%dummy}, %rd1067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r409}, %rd1067;
	}
	shf.r.wrap.b32 	%r410, %r409, %r408, 8;
	shf.r.wrap.b32 	%r411, %r408, %r409, 8;
	mov.b64 	%rd581, {%r411, %r410};
	xor.b64  	%rd582, %rd581, %rd580;
	shf.r.wrap.b32 	%r412, %r409, %r408, 1;
	shf.r.wrap.b32 	%r413, %r408, %r409, 1;
	mov.b64 	%rd583, {%r413, %r412};
	xor.b64  	%rd584, %rd582, %rd583;
	add.s64 	%rd585, %rd584, %rd1066;
	add.s64 	%rd586, %rd585, %rd1059;
	add.s64 	%rd1066, %rd586, %rd579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r414,%dummy}, %rd1065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r415}, %rd1065;
	}
	shf.r.wrap.b32 	%r416, %r415, %r414, 19;
	shf.r.wrap.b32 	%r417, %r414, %r415, 19;
	mov.b64 	%rd587, {%r417, %r416};
	shf.l.wrap.b32 	%r418, %r414, %r415, 3;
	shf.l.wrap.b32 	%r419, %r415, %r414, 3;
	mov.b64 	%rd588, {%r419, %r418};
	shr.u64 	%rd589, %rd1065, 6;
	xor.b64  	%rd590, %rd588, %rd589;
	xor.b64  	%rd591, %rd590, %rd587;
	shr.u64 	%rd592, %rd1068, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r420,%dummy}, %rd1068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r421}, %rd1068;
	}
	shf.r.wrap.b32 	%r422, %r421, %r420, 8;
	shf.r.wrap.b32 	%r423, %r420, %r421, 8;
	mov.b64 	%rd593, {%r423, %r422};
	xor.b64  	%rd594, %rd593, %rd592;
	shf.r.wrap.b32 	%r424, %r421, %r420, 1;
	shf.r.wrap.b32 	%r425, %r420, %r421, 1;
	mov.b64 	%rd595, {%r425, %r424};
	xor.b64  	%rd596, %rd594, %rd595;
	add.s64 	%rd597, %rd596, %rd1067;
	add.s64 	%rd598, %rd597, %rd1060;
	add.s64 	%rd1067, %rd598, %rd591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r426,%dummy}, %rd1066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r427}, %rd1066;
	}
	shf.r.wrap.b32 	%r428, %r427, %r426, 19;
	shf.r.wrap.b32 	%r429, %r426, %r427, 19;
	mov.b64 	%rd599, {%r429, %r428};
	shf.l.wrap.b32 	%r430, %r426, %r427, 3;
	shf.l.wrap.b32 	%r431, %r427, %r426, 3;
	mov.b64 	%rd600, {%r431, %r430};
	shr.u64 	%rd601, %rd1066, 6;
	xor.b64  	%rd602, %rd600, %rd601;
	xor.b64  	%rd603, %rd602, %rd599;
	shr.u64 	%rd604, %rd1069, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r432,%dummy}, %rd1069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r433}, %rd1069;
	}
	shf.r.wrap.b32 	%r434, %r433, %r432, 8;
	shf.r.wrap.b32 	%r435, %r432, %r433, 8;
	mov.b64 	%rd605, {%r435, %r434};
	xor.b64  	%rd606, %rd605, %rd604;
	shf.r.wrap.b32 	%r436, %r433, %r432, 1;
	shf.r.wrap.b32 	%r437, %r432, %r433, 1;
	mov.b64 	%rd607, {%r437, %r436};
	xor.b64  	%rd608, %rd606, %rd607;
	add.s64 	%rd609, %rd608, %rd1068;
	add.s64 	%rd610, %rd609, %rd1061;
	add.s64 	%rd1068, %rd610, %rd603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r438,%dummy}, %rd1067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r439}, %rd1067;
	}
	shf.r.wrap.b32 	%r440, %r439, %r438, 19;
	shf.r.wrap.b32 	%r441, %r438, %r439, 19;
	mov.b64 	%rd611, {%r441, %r440};
	shf.l.wrap.b32 	%r442, %r438, %r439, 3;
	shf.l.wrap.b32 	%r443, %r439, %r438, 3;
	mov.b64 	%rd612, {%r443, %r442};
	shr.u64 	%rd613, %rd1067, 6;
	xor.b64  	%rd614, %rd612, %rd613;
	xor.b64  	%rd615, %rd614, %rd611;
	shr.u64 	%rd616, %rd1070, 7;
	shf.r.wrap.b32 	%r444, %r282, %r283, 8;
	shf.r.wrap.b32 	%r445, %r283, %r282, 8;
	mov.b64 	%rd617, {%r445, %r444};
	xor.b64  	%rd618, %rd617, %rd616;
	shf.r.wrap.b32 	%r446, %r282, %r283, 1;
	shf.r.wrap.b32 	%r447, %r283, %r282, 1;
	mov.b64 	%rd619, {%r447, %r446};
	xor.b64  	%rd620, %rd618, %rd619;
	add.s64 	%rd621, %rd620, %rd1069;
	add.s64 	%rd622, %rd621, %rd1062;
	add.s64 	%rd1069, %rd622, %rd615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r448,%dummy}, %rd1068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r449}, %rd1068;
	}
	shf.r.wrap.b32 	%r450, %r449, %r448, 19;
	shf.r.wrap.b32 	%r451, %r448, %r449, 19;
	mov.b64 	%rd623, {%r451, %r450};
	shf.l.wrap.b32 	%r452, %r448, %r449, 3;
	shf.l.wrap.b32 	%r453, %r449, %r448, 3;
	mov.b64 	%rd624, {%r453, %r452};
	shr.u64 	%rd625, %rd1068, 6;
	xor.b64  	%rd626, %rd624, %rd625;
	xor.b64  	%rd627, %rd626, %rd623;
	shr.u64 	%rd628, %rd1071, 7;
	shf.r.wrap.b32 	%r454, %r294, %r295, 8;
	shf.r.wrap.b32 	%r455, %r295, %r294, 8;
	mov.b64 	%rd629, {%r455, %r454};
	xor.b64  	%rd630, %rd629, %rd628;
	shf.r.wrap.b32 	%r456, %r294, %r295, 1;
	shf.r.wrap.b32 	%r457, %r295, %r294, 1;
	mov.b64 	%rd631, {%r457, %r456};
	xor.b64  	%rd632, %rd630, %rd631;
	add.s64 	%rd633, %rd632, %rd1070;
	add.s64 	%rd634, %rd633, %rd1063;
	add.s64 	%rd1070, %rd634, %rd627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r458,%dummy}, %rd1069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r459}, %rd1069;
	}
	shf.r.wrap.b32 	%r460, %r459, %r458, 19;
	shf.r.wrap.b32 	%r461, %r458, %r459, 19;
	mov.b64 	%rd635, {%r461, %r460};
	shf.l.wrap.b32 	%r462, %r458, %r459, 3;
	shf.l.wrap.b32 	%r463, %r459, %r458, 3;
	mov.b64 	%rd636, {%r463, %r462};
	shr.u64 	%rd637, %rd1069, 6;
	xor.b64  	%rd638, %rd636, %rd637;
	xor.b64  	%rd639, %rd638, %rd635;
	shf.r.wrap.b32 	%r464, %r307, %r306, 1;
	shf.r.wrap.b32 	%r465, %r306, %r307, 1;
	mov.b64 	%rd640, {%r465, %r464};
	shf.r.wrap.b32 	%r466, %r307, %r306, 8;
	shf.r.wrap.b32 	%r467, %r306, %r307, 8;
	mov.b64 	%rd641, {%r467, %r466};
	shr.u64 	%rd642, %rd1056, 7;
	xor.b64  	%rd643, %rd641, %rd642;
	xor.b64  	%rd644, %rd643, %rd640;
	add.s64 	%rd645, %rd644, %rd1071;
	add.s64 	%rd646, %rd645, %rd1064;
	add.s64 	%rd1071, %rd646, %rd639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r468,%dummy}, %rd1055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r469}, %rd1055;
	}
	shf.r.wrap.b32 	%r470, %r469, %r468, 18;
	shf.r.wrap.b32 	%r471, %r468, %r469, 18;
	mov.b64 	%rd647, {%r471, %r470};
	shf.r.wrap.b32 	%r472, %r469, %r468, 14;
	shf.r.wrap.b32 	%r473, %r468, %r469, 14;
	mov.b64 	%rd648, {%r473, %r472};
	xor.b64  	%rd649, %rd648, %rd647;
	shf.l.wrap.b32 	%r474, %r468, %r469, 23;
	shf.l.wrap.b32 	%r475, %r469, %r468, 23;
	mov.b64 	%rd650, {%r475, %r474};
	xor.b64  	%rd651, %rd649, %rd650;
	xor.b64  	%rd652, %rd1053, %rd1054;
	and.b64  	%rd653, %rd652, %rd1055;
	xor.b64  	%rd654, %rd653, %rd1053;
	add.s64 	%rd655, %rd1056, %rd1052;
	add.s64 	%rd656, %rd655, %rd651;
	add.s64 	%rd657, %rd656, %rd654;
	add.s64 	%rd84, %rd1051, 128;
	ld.const.u64 	%rd658, [%rd1051+128];
	add.s64 	%rd659, %rd657, %rd658;
	add.s64 	%rd660, %rd659, %rd1075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r476}, %rd1072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r477,%dummy}, %rd1072;
	}
	shf.l.wrap.b32 	%r478, %r477, %r476, 30;
	shf.l.wrap.b32 	%r479, %r476, %r477, 30;
	mov.b64 	%rd661, {%r479, %r478};
	shf.r.wrap.b32 	%r480, %r476, %r477, 28;
	shf.r.wrap.b32 	%r481, %r477, %r476, 28;
	mov.b64 	%rd662, {%r481, %r480};
	xor.b64  	%rd663, %rd662, %rd661;
	shf.l.wrap.b32 	%r482, %r477, %r476, 25;
	shf.l.wrap.b32 	%r483, %r476, %r477, 25;
	mov.b64 	%rd664, {%r483, %r482};
	xor.b64  	%rd665, %rd663, %rd664;
	xor.b64  	%rd666, %rd1072, %rd1073;
	and.b64  	%rd667, %rd666, %rd1074;
	and.b64  	%rd668, %rd1072, %rd1073;
	or.b64  	%rd669, %rd667, %rd668;
	add.s64 	%rd670, %rd665, %rd669;
	add.s64 	%rd671, %rd670, %rd659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r484,%dummy}, %rd660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r485}, %rd660;
	}
	shf.r.wrap.b32 	%r486, %r485, %r484, 14;
	shf.r.wrap.b32 	%r487, %r484, %r485, 14;
	mov.b64 	%rd672, {%r487, %r486};
	shf.r.wrap.b32 	%r488, %r485, %r484, 18;
	shf.r.wrap.b32 	%r489, %r484, %r485, 18;
	mov.b64 	%rd673, {%r489, %r488};
	xor.b64  	%rd674, %rd672, %rd673;
	shf.l.wrap.b32 	%r490, %r484, %r485, 23;
	shf.l.wrap.b32 	%r491, %r485, %r484, 23;
	mov.b64 	%rd675, {%r491, %r490};
	xor.b64  	%rd676, %rd674, %rd675;
	xor.b64  	%rd677, %rd1054, %rd1055;
	and.b64  	%rd678, %rd660, %rd677;
	xor.b64  	%rd679, %rd678, %rd1054;
	add.s64 	%rd680, %rd1057, %rd1053;
	ld.const.u64 	%rd681, [%rd1051+136];
	add.s64 	%rd682, %rd680, %rd681;
	add.s64 	%rd683, %rd682, %rd679;
	add.s64 	%rd684, %rd683, %rd676;
	add.s64 	%rd685, %rd684, %rd1074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r492,%dummy}, %rd671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r493}, %rd671;
	}
	shf.r.wrap.b32 	%r494, %r493, %r492, 28;
	shf.r.wrap.b32 	%r495, %r492, %r493, 28;
	mov.b64 	%rd686, {%r495, %r494};
	shf.l.wrap.b32 	%r496, %r492, %r493, 30;
	shf.l.wrap.b32 	%r497, %r493, %r492, 30;
	mov.b64 	%rd687, {%r497, %r496};
	xor.b64  	%rd688, %rd686, %rd687;
	shf.l.wrap.b32 	%r498, %r492, %r493, 25;
	shf.l.wrap.b32 	%r499, %r493, %r492, 25;
	mov.b64 	%rd689, {%r499, %r498};
	xor.b64  	%rd690, %rd688, %rd689;
	and.b64  	%rd691, %rd671, %rd1072;
	xor.b64  	%rd692, %rd671, %rd1072;
	and.b64  	%rd693, %rd692, %rd1073;
	or.b64  	%rd694, %rd693, %rd691;
	add.s64 	%rd695, %rd690, %rd694;
	add.s64 	%rd696, %rd695, %rd684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r500,%dummy}, %rd685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r501}, %rd685;
	}
	shf.r.wrap.b32 	%r502, %r501, %r500, 14;
	shf.r.wrap.b32 	%r503, %r500, %r501, 14;
	mov.b64 	%rd697, {%r503, %r502};
	shf.r.wrap.b32 	%r504, %r501, %r500, 18;
	shf.r.wrap.b32 	%r505, %r500, %r501, 18;
	mov.b64 	%rd698, {%r505, %r504};
	xor.b64  	%rd699, %rd697, %rd698;
	shf.l.wrap.b32 	%r506, %r500, %r501, 23;
	shf.l.wrap.b32 	%r507, %r501, %r500, 23;
	mov.b64 	%rd700, {%r507, %r506};
	xor.b64  	%rd701, %rd699, %rd700;
	xor.b64  	%rd702, %rd660, %rd1055;
	and.b64  	%rd703, %rd685, %rd702;
	xor.b64  	%rd704, %rd703, %rd1055;
	add.s64 	%rd705, %rd1058, %rd1054;
	ld.const.u64 	%rd706, [%rd1051+144];
	add.s64 	%rd707, %rd705, %rd706;
	add.s64 	%rd708, %rd707, %rd704;
	add.s64 	%rd709, %rd708, %rd701;
	add.s64 	%rd710, %rd709, %rd1073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r508,%dummy}, %rd696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r509}, %rd696;
	}
	shf.r.wrap.b32 	%r510, %r509, %r508, 28;
	shf.r.wrap.b32 	%r511, %r508, %r509, 28;
	mov.b64 	%rd711, {%r511, %r510};
	shf.l.wrap.b32 	%r512, %r508, %r509, 30;
	shf.l.wrap.b32 	%r513, %r509, %r508, 30;
	mov.b64 	%rd712, {%r513, %r512};
	xor.b64  	%rd713, %rd711, %rd712;
	shf.l.wrap.b32 	%r514, %r508, %r509, 25;
	shf.l.wrap.b32 	%r515, %r509, %r508, 25;
	mov.b64 	%rd714, {%r515, %r514};
	xor.b64  	%rd715, %rd713, %rd714;
	and.b64  	%rd716, %rd696, %rd671;
	xor.b64  	%rd717, %rd696, %rd671;
	and.b64  	%rd718, %rd717, %rd1072;
	or.b64  	%rd719, %rd718, %rd716;
	add.s64 	%rd720, %rd715, %rd719;
	add.s64 	%rd721, %rd720, %rd709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r516,%dummy}, %rd710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r517}, %rd710;
	}
	shf.r.wrap.b32 	%r518, %r517, %r516, 14;
	shf.r.wrap.b32 	%r519, %r516, %r517, 14;
	mov.b64 	%rd722, {%r519, %r518};
	shf.r.wrap.b32 	%r520, %r517, %r516, 18;
	shf.r.wrap.b32 	%r521, %r516, %r517, 18;
	mov.b64 	%rd723, {%r521, %r520};
	xor.b64  	%rd724, %rd722, %rd723;
	shf.l.wrap.b32 	%r522, %r516, %r517, 23;
	shf.l.wrap.b32 	%r523, %r517, %r516, 23;
	mov.b64 	%rd725, {%r523, %r522};
	xor.b64  	%rd726, %rd724, %rd725;
	xor.b64  	%rd727, %rd685, %rd660;
	and.b64  	%rd728, %rd710, %rd727;
	xor.b64  	%rd729, %rd728, %rd660;
	add.s64 	%rd730, %rd1059, %rd1055;
	ld.const.u64 	%rd731, [%rd1051+152];
	add.s64 	%rd732, %rd730, %rd731;
	add.s64 	%rd733, %rd732, %rd729;
	add.s64 	%rd734, %rd733, %rd726;
	add.s64 	%rd735, %rd734, %rd1072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r524,%dummy}, %rd721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r525}, %rd721;
	}
	shf.r.wrap.b32 	%r526, %r525, %r524, 28;
	shf.r.wrap.b32 	%r527, %r524, %r525, 28;
	mov.b64 	%rd736, {%r527, %r526};
	shf.l.wrap.b32 	%r528, %r524, %r525, 30;
	shf.l.wrap.b32 	%r529, %r525, %r524, 30;
	mov.b64 	%rd737, {%r529, %r528};
	xor.b64  	%rd738, %rd736, %rd737;
	shf.l.wrap.b32 	%r530, %r524, %r525, 25;
	shf.l.wrap.b32 	%r531, %r525, %r524, 25;
	mov.b64 	%rd739, {%r531, %r530};
	xor.b64  	%rd740, %rd738, %rd739;
	and.b64  	%rd741, %rd721, %rd696;
	xor.b64  	%rd742, %rd721, %rd696;
	and.b64  	%rd743, %rd742, %rd671;
	or.b64  	%rd744, %rd743, %rd741;
	add.s64 	%rd745, %rd740, %rd744;
	add.s64 	%rd746, %rd745, %rd734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r532,%dummy}, %rd735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r533}, %rd735;
	}
	shf.r.wrap.b32 	%r534, %r533, %r532, 14;
	shf.r.wrap.b32 	%r535, %r532, %r533, 14;
	mov.b64 	%rd747, {%r535, %r534};
	shf.r.wrap.b32 	%r536, %r533, %r532, 18;
	shf.r.wrap.b32 	%r537, %r532, %r533, 18;
	mov.b64 	%rd748, {%r537, %r536};
	xor.b64  	%rd749, %rd747, %rd748;
	shf.l.wrap.b32 	%r538, %r532, %r533, 23;
	shf.l.wrap.b32 	%r539, %r533, %r532, 23;
	mov.b64 	%rd750, {%r539, %r538};
	xor.b64  	%rd751, %rd749, %rd750;
	xor.b64  	%rd752, %rd710, %rd685;
	and.b64  	%rd753, %rd735, %rd752;
	xor.b64  	%rd754, %rd753, %rd685;
	add.s64 	%rd755, %rd660, %rd1060;
	ld.const.u64 	%rd756, [%rd1051+160];
	add.s64 	%rd757, %rd755, %rd756;
	add.s64 	%rd758, %rd757, %rd754;
	add.s64 	%rd759, %rd758, %rd751;
	add.s64 	%rd760, %rd759, %rd671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r540,%dummy}, %rd746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r541}, %rd746;
	}
	shf.r.wrap.b32 	%r542, %r541, %r540, 28;
	shf.r.wrap.b32 	%r543, %r540, %r541, 28;
	mov.b64 	%rd761, {%r543, %r542};
	shf.l.wrap.b32 	%r544, %r540, %r541, 30;
	shf.l.wrap.b32 	%r545, %r541, %r540, 30;
	mov.b64 	%rd762, {%r545, %r544};
	xor.b64  	%rd763, %rd761, %rd762;
	shf.l.wrap.b32 	%r546, %r540, %r541, 25;
	shf.l.wrap.b32 	%r547, %r541, %r540, 25;
	mov.b64 	%rd764, {%r547, %r546};
	xor.b64  	%rd765, %rd763, %rd764;
	and.b64  	%rd766, %rd746, %rd721;
	xor.b64  	%rd767, %rd746, %rd721;
	and.b64  	%rd768, %rd767, %rd696;
	or.b64  	%rd769, %rd768, %rd766;
	add.s64 	%rd770, %rd765, %rd769;
	add.s64 	%rd771, %rd770, %rd759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r548,%dummy}, %rd760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r549}, %rd760;
	}
	shf.r.wrap.b32 	%r550, %r549, %r548, 14;
	shf.r.wrap.b32 	%r551, %r548, %r549, 14;
	mov.b64 	%rd772, {%r551, %r550};
	shf.r.wrap.b32 	%r552, %r549, %r548, 18;
	shf.r.wrap.b32 	%r553, %r548, %r549, 18;
	mov.b64 	%rd773, {%r553, %r552};
	xor.b64  	%rd774, %rd772, %rd773;
	shf.l.wrap.b32 	%r554, %r548, %r549, 23;
	shf.l.wrap.b32 	%r555, %r549, %r548, 23;
	mov.b64 	%rd775, {%r555, %r554};
	xor.b64  	%rd776, %rd774, %rd775;
	xor.b64  	%rd777, %rd735, %rd710;
	and.b64  	%rd778, %rd760, %rd777;
	xor.b64  	%rd779, %rd778, %rd710;
	ld.const.u64 	%rd780, [%rd1051+168];
	add.s64 	%rd781, %rd780, %rd1061;
	add.s64 	%rd782, %rd781, %rd685;
	add.s64 	%rd783, %rd782, %rd779;
	add.s64 	%rd784, %rd783, %rd776;
	add.s64 	%rd785, %rd784, %rd696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r556,%dummy}, %rd771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r557}, %rd771;
	}
	shf.r.wrap.b32 	%r558, %r557, %r556, 28;
	shf.r.wrap.b32 	%r559, %r556, %r557, 28;
	mov.b64 	%rd786, {%r559, %r558};
	shf.l.wrap.b32 	%r560, %r556, %r557, 30;
	shf.l.wrap.b32 	%r561, %r557, %r556, 30;
	mov.b64 	%rd787, {%r561, %r560};
	xor.b64  	%rd788, %rd786, %rd787;
	shf.l.wrap.b32 	%r562, %r556, %r557, 25;
	shf.l.wrap.b32 	%r563, %r557, %r556, 25;
	mov.b64 	%rd789, {%r563, %r562};
	xor.b64  	%rd790, %rd788, %rd789;
	and.b64  	%rd791, %rd771, %rd746;
	xor.b64  	%rd792, %rd771, %rd746;
	and.b64  	%rd793, %rd792, %rd721;
	or.b64  	%rd794, %rd793, %rd791;
	add.s64 	%rd795, %rd790, %rd794;
	add.s64 	%rd796, %rd795, %rd784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r564,%dummy}, %rd785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r565}, %rd785;
	}
	shf.r.wrap.b32 	%r566, %r565, %r564, 14;
	shf.r.wrap.b32 	%r567, %r564, %r565, 14;
	mov.b64 	%rd797, {%r567, %r566};
	shf.r.wrap.b32 	%r568, %r565, %r564, 18;
	shf.r.wrap.b32 	%r569, %r564, %r565, 18;
	mov.b64 	%rd798, {%r569, %r568};
	xor.b64  	%rd799, %rd797, %rd798;
	shf.l.wrap.b32 	%r570, %r564, %r565, 23;
	shf.l.wrap.b32 	%r571, %r565, %r564, 23;
	mov.b64 	%rd800, {%r571, %r570};
	xor.b64  	%rd801, %rd799, %rd800;
	xor.b64  	%rd802, %rd760, %rd735;
	and.b64  	%rd803, %rd785, %rd802;
	xor.b64  	%rd804, %rd803, %rd735;
	ld.const.u64 	%rd805, [%rd1051+176];
	add.s64 	%rd806, %rd805, %rd1062;
	add.s64 	%rd807, %rd806, %rd710;
	add.s64 	%rd808, %rd807, %rd804;
	add.s64 	%rd809, %rd808, %rd801;
	add.s64 	%rd810, %rd809, %rd721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r572,%dummy}, %rd796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r573}, %rd796;
	}
	shf.r.wrap.b32 	%r574, %r573, %r572, 28;
	shf.r.wrap.b32 	%r575, %r572, %r573, 28;
	mov.b64 	%rd811, {%r575, %r574};
	shf.l.wrap.b32 	%r576, %r572, %r573, 30;
	shf.l.wrap.b32 	%r577, %r573, %r572, 30;
	mov.b64 	%rd812, {%r577, %r576};
	xor.b64  	%rd813, %rd811, %rd812;
	shf.l.wrap.b32 	%r578, %r572, %r573, 25;
	shf.l.wrap.b32 	%r579, %r573, %r572, 25;
	mov.b64 	%rd814, {%r579, %r578};
	xor.b64  	%rd815, %rd813, %rd814;
	and.b64  	%rd816, %rd796, %rd771;
	xor.b64  	%rd817, %rd796, %rd771;
	and.b64  	%rd818, %rd817, %rd746;
	or.b64  	%rd819, %rd818, %rd816;
	add.s64 	%rd820, %rd815, %rd819;
	add.s64 	%rd821, %rd820, %rd809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r580,%dummy}, %rd810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r581}, %rd810;
	}
	shf.r.wrap.b32 	%r582, %r581, %r580, 14;
	shf.r.wrap.b32 	%r583, %r580, %r581, 14;
	mov.b64 	%rd822, {%r583, %r582};
	shf.r.wrap.b32 	%r584, %r581, %r580, 18;
	shf.r.wrap.b32 	%r585, %r580, %r581, 18;
	mov.b64 	%rd823, {%r585, %r584};
	xor.b64  	%rd824, %rd822, %rd823;
	shf.l.wrap.b32 	%r586, %r580, %r581, 23;
	shf.l.wrap.b32 	%r587, %r581, %r580, 23;
	mov.b64 	%rd825, {%r587, %r586};
	xor.b64  	%rd826, %rd824, %rd825;
	xor.b64  	%rd827, %rd785, %rd760;
	and.b64  	%rd828, %rd810, %rd827;
	xor.b64  	%rd829, %rd828, %rd760;
	ld.const.u64 	%rd830, [%rd1051+184];
	add.s64 	%rd831, %rd830, %rd1063;
	add.s64 	%rd832, %rd831, %rd735;
	add.s64 	%rd833, %rd832, %rd829;
	add.s64 	%rd834, %rd833, %rd826;
	add.s64 	%rd835, %rd834, %rd746;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r588,%dummy}, %rd821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r589}, %rd821;
	}
	shf.r.wrap.b32 	%r590, %r589, %r588, 28;
	shf.r.wrap.b32 	%r591, %r588, %r589, 28;
	mov.b64 	%rd836, {%r591, %r590};
	shf.l.wrap.b32 	%r592, %r588, %r589, 30;
	shf.l.wrap.b32 	%r593, %r589, %r588, 30;
	mov.b64 	%rd837, {%r593, %r592};
	xor.b64  	%rd838, %rd836, %rd837;
	shf.l.wrap.b32 	%r594, %r588, %r589, 25;
	shf.l.wrap.b32 	%r595, %r589, %r588, 25;
	mov.b64 	%rd839, {%r595, %r594};
	xor.b64  	%rd840, %rd838, %rd839;
	and.b64  	%rd841, %rd821, %rd796;
	xor.b64  	%rd842, %rd821, %rd796;
	and.b64  	%rd843, %rd842, %rd771;
	or.b64  	%rd844, %rd843, %rd841;
	add.s64 	%rd845, %rd840, %rd844;
	add.s64 	%rd846, %rd845, %rd834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r596,%dummy}, %rd835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r597}, %rd835;
	}
	shf.r.wrap.b32 	%r598, %r597, %r596, 14;
	shf.r.wrap.b32 	%r599, %r596, %r597, 14;
	mov.b64 	%rd847, {%r599, %r598};
	shf.r.wrap.b32 	%r600, %r597, %r596, 18;
	shf.r.wrap.b32 	%r601, %r596, %r597, 18;
	mov.b64 	%rd848, {%r601, %r600};
	xor.b64  	%rd849, %rd847, %rd848;
	shf.l.wrap.b32 	%r602, %r596, %r597, 23;
	shf.l.wrap.b32 	%r603, %r597, %r596, 23;
	mov.b64 	%rd850, {%r603, %r602};
	xor.b64  	%rd851, %rd849, %rd850;
	xor.b64  	%rd852, %rd810, %rd785;
	and.b64  	%rd853, %rd835, %rd852;
	xor.b64  	%rd854, %rd853, %rd785;
	ld.const.u64 	%rd855, [%rd1051+192];
	add.s64 	%rd856, %rd855, %rd1064;
	add.s64 	%rd857, %rd856, %rd760;
	add.s64 	%rd858, %rd857, %rd854;
	add.s64 	%rd859, %rd858, %rd851;
	add.s64 	%rd860, %rd859, %rd771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r604,%dummy}, %rd846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r605}, %rd846;
	}
	shf.r.wrap.b32 	%r606, %r605, %r604, 28;
	shf.r.wrap.b32 	%r607, %r604, %r605, 28;
	mov.b64 	%rd861, {%r607, %r606};
	shf.l.wrap.b32 	%r608, %r604, %r605, 30;
	shf.l.wrap.b32 	%r609, %r605, %r604, 30;
	mov.b64 	%rd862, {%r609, %r608};
	xor.b64  	%rd863, %rd861, %rd862;
	shf.l.wrap.b32 	%r610, %r604, %r605, 25;
	shf.l.wrap.b32 	%r611, %r605, %r604, 25;
	mov.b64 	%rd864, {%r611, %r610};
	xor.b64  	%rd865, %rd863, %rd864;
	and.b64  	%rd866, %rd846, %rd821;
	xor.b64  	%rd867, %rd846, %rd821;
	and.b64  	%rd868, %rd867, %rd796;
	or.b64  	%rd869, %rd868, %rd866;
	add.s64 	%rd870, %rd865, %rd869;
	add.s64 	%rd871, %rd870, %rd859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r612,%dummy}, %rd860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r613}, %rd860;
	}
	shf.r.wrap.b32 	%r614, %r613, %r612, 14;
	shf.r.wrap.b32 	%r615, %r612, %r613, 14;
	mov.b64 	%rd872, {%r615, %r614};
	shf.r.wrap.b32 	%r616, %r613, %r612, 18;
	shf.r.wrap.b32 	%r617, %r612, %r613, 18;
	mov.b64 	%rd873, {%r617, %r616};
	xor.b64  	%rd874, %rd872, %rd873;
	shf.l.wrap.b32 	%r618, %r612, %r613, 23;
	shf.l.wrap.b32 	%r619, %r613, %r612, 23;
	mov.b64 	%rd875, {%r619, %r618};
	xor.b64  	%rd876, %rd874, %rd875;
	xor.b64  	%rd877, %rd835, %rd810;
	and.b64  	%rd878, %rd860, %rd877;
	xor.b64  	%rd879, %rd878, %rd810;
	ld.const.u64 	%rd880, [%rd1051+200];
	add.s64 	%rd881, %rd880, %rd1065;
	add.s64 	%rd882, %rd881, %rd785;
	add.s64 	%rd883, %rd882, %rd879;
	add.s64 	%rd884, %rd883, %rd876;
	add.s64 	%rd885, %rd884, %rd796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r620,%dummy}, %rd871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r621}, %rd871;
	}
	shf.r.wrap.b32 	%r622, %r621, %r620, 28;
	shf.r.wrap.b32 	%r623, %r620, %r621, 28;
	mov.b64 	%rd886, {%r623, %r622};
	shf.l.wrap.b32 	%r624, %r620, %r621, 30;
	shf.l.wrap.b32 	%r625, %r621, %r620, 30;
	mov.b64 	%rd887, {%r625, %r624};
	xor.b64  	%rd888, %rd886, %rd887;
	shf.l.wrap.b32 	%r626, %r620, %r621, 25;
	shf.l.wrap.b32 	%r627, %r621, %r620, 25;
	mov.b64 	%rd889, {%r627, %r626};
	xor.b64  	%rd890, %rd888, %rd889;
	and.b64  	%rd891, %rd871, %rd846;
	xor.b64  	%rd892, %rd871, %rd846;
	and.b64  	%rd893, %rd892, %rd821;
	or.b64  	%rd894, %rd893, %rd891;
	add.s64 	%rd895, %rd890, %rd894;
	add.s64 	%rd896, %rd895, %rd884;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r628,%dummy}, %rd885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r629}, %rd885;
	}
	shf.r.wrap.b32 	%r630, %r629, %r628, 14;
	shf.r.wrap.b32 	%r631, %r628, %r629, 14;
	mov.b64 	%rd897, {%r631, %r630};
	shf.r.wrap.b32 	%r632, %r629, %r628, 18;
	shf.r.wrap.b32 	%r633, %r628, %r629, 18;
	mov.b64 	%rd898, {%r633, %r632};
	xor.b64  	%rd899, %rd897, %rd898;
	shf.l.wrap.b32 	%r634, %r628, %r629, 23;
	shf.l.wrap.b32 	%r635, %r629, %r628, 23;
	mov.b64 	%rd900, {%r635, %r634};
	xor.b64  	%rd901, %rd899, %rd900;
	xor.b64  	%rd902, %rd860, %rd835;
	and.b64  	%rd903, %rd885, %rd902;
	xor.b64  	%rd904, %rd903, %rd835;
	ld.const.u64 	%rd905, [%rd1051+208];
	add.s64 	%rd906, %rd905, %rd1066;
	add.s64 	%rd907, %rd906, %rd810;
	add.s64 	%rd908, %rd907, %rd904;
	add.s64 	%rd909, %rd908, %rd901;
	add.s64 	%rd910, %rd909, %rd821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r636,%dummy}, %rd896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r637}, %rd896;
	}
	shf.r.wrap.b32 	%r638, %r637, %r636, 28;
	shf.r.wrap.b32 	%r639, %r636, %r637, 28;
	mov.b64 	%rd911, {%r639, %r638};
	shf.l.wrap.b32 	%r640, %r636, %r637, 30;
	shf.l.wrap.b32 	%r641, %r637, %r636, 30;
	mov.b64 	%rd912, {%r641, %r640};
	xor.b64  	%rd913, %rd911, %rd912;
	shf.l.wrap.b32 	%r642, %r636, %r637, 25;
	shf.l.wrap.b32 	%r643, %r637, %r636, 25;
	mov.b64 	%rd914, {%r643, %r642};
	xor.b64  	%rd915, %rd913, %rd914;
	and.b64  	%rd916, %rd896, %rd871;
	xor.b64  	%rd917, %rd896, %rd871;
	and.b64  	%rd918, %rd917, %rd846;
	or.b64  	%rd919, %rd918, %rd916;
	add.s64 	%rd920, %rd915, %rd919;
	add.s64 	%rd921, %rd920, %rd909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r644,%dummy}, %rd910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r645}, %rd910;
	}
	shf.r.wrap.b32 	%r646, %r645, %r644, 14;
	shf.r.wrap.b32 	%r647, %r644, %r645, 14;
	mov.b64 	%rd922, {%r647, %r646};
	shf.r.wrap.b32 	%r648, %r645, %r644, 18;
	shf.r.wrap.b32 	%r649, %r644, %r645, 18;
	mov.b64 	%rd923, {%r649, %r648};
	xor.b64  	%rd924, %rd922, %rd923;
	shf.l.wrap.b32 	%r650, %r644, %r645, 23;
	shf.l.wrap.b32 	%r651, %r645, %r644, 23;
	mov.b64 	%rd925, {%r651, %r650};
	xor.b64  	%rd926, %rd924, %rd925;
	xor.b64  	%rd927, %rd885, %rd860;
	and.b64  	%rd928, %rd910, %rd927;
	xor.b64  	%rd929, %rd928, %rd860;
	ld.const.u64 	%rd930, [%rd1051+216];
	add.s64 	%rd931, %rd930, %rd1067;
	add.s64 	%rd932, %rd931, %rd835;
	add.s64 	%rd933, %rd932, %rd929;
	add.s64 	%rd934, %rd933, %rd926;
	add.s64 	%rd935, %rd934, %rd846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r652,%dummy}, %rd921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r653}, %rd921;
	}
	shf.r.wrap.b32 	%r654, %r653, %r652, 28;
	shf.r.wrap.b32 	%r655, %r652, %r653, 28;
	mov.b64 	%rd936, {%r655, %r654};
	shf.l.wrap.b32 	%r656, %r652, %r653, 30;
	shf.l.wrap.b32 	%r657, %r653, %r652, 30;
	mov.b64 	%rd937, {%r657, %r656};
	xor.b64  	%rd938, %rd936, %rd937;
	shf.l.wrap.b32 	%r658, %r652, %r653, 25;
	shf.l.wrap.b32 	%r659, %r653, %r652, 25;
	mov.b64 	%rd939, {%r659, %r658};
	xor.b64  	%rd940, %rd938, %rd939;
	and.b64  	%rd941, %rd921, %rd896;
	xor.b64  	%rd942, %rd921, %rd896;
	and.b64  	%rd943, %rd942, %rd871;
	or.b64  	%rd944, %rd943, %rd941;
	add.s64 	%rd945, %rd940, %rd944;
	add.s64 	%rd946, %rd945, %rd934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r660,%dummy}, %rd935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r661}, %rd935;
	}
	shf.r.wrap.b32 	%r662, %r661, %r660, 14;
	shf.r.wrap.b32 	%r663, %r660, %r661, 14;
	mov.b64 	%rd947, {%r663, %r662};
	shf.r.wrap.b32 	%r664, %r661, %r660, 18;
	shf.r.wrap.b32 	%r665, %r660, %r661, 18;
	mov.b64 	%rd948, {%r665, %r664};
	xor.b64  	%rd949, %rd947, %rd948;
	shf.l.wrap.b32 	%r666, %r660, %r661, 23;
	shf.l.wrap.b32 	%r667, %r661, %r660, 23;
	mov.b64 	%rd950, {%r667, %r666};
	xor.b64  	%rd951, %rd949, %rd950;
	xor.b64  	%rd952, %rd910, %rd885;
	and.b64  	%rd953, %rd935, %rd952;
	xor.b64  	%rd954, %rd953, %rd885;
	ld.const.u64 	%rd955, [%rd1051+224];
	add.s64 	%rd956, %rd955, %rd1068;
	add.s64 	%rd957, %rd956, %rd860;
	add.s64 	%rd958, %rd957, %rd954;
	add.s64 	%rd959, %rd958, %rd951;
	add.s64 	%rd1052, %rd959, %rd871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r668,%dummy}, %rd946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r669}, %rd946;
	}
	shf.r.wrap.b32 	%r670, %r669, %r668, 28;
	shf.r.wrap.b32 	%r671, %r668, %r669, 28;
	mov.b64 	%rd960, {%r671, %r670};
	shf.l.wrap.b32 	%r672, %r668, %r669, 30;
	shf.l.wrap.b32 	%r673, %r669, %r668, 30;
	mov.b64 	%rd961, {%r673, %r672};
	xor.b64  	%rd962, %rd960, %rd961;
	shf.l.wrap.b32 	%r674, %r668, %r669, 25;
	shf.l.wrap.b32 	%r675, %r669, %r668, 25;
	mov.b64 	%rd963, {%r675, %r674};
	xor.b64  	%rd964, %rd962, %rd963;
	and.b64  	%rd965, %rd946, %rd921;
	xor.b64  	%rd966, %rd946, %rd921;
	and.b64  	%rd967, %rd966, %rd896;
	or.b64  	%rd968, %rd967, %rd965;
	add.s64 	%rd969, %rd964, %rd968;
	add.s64 	%rd1075, %rd969, %rd959;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r676,%dummy}, %rd1052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r677}, %rd1052;
	}
	shf.r.wrap.b32 	%r678, %r677, %r676, 14;
	shf.r.wrap.b32 	%r679, %r676, %r677, 14;
	mov.b64 	%rd970, {%r679, %r678};
	shf.r.wrap.b32 	%r680, %r677, %r676, 18;
	shf.r.wrap.b32 	%r681, %r676, %r677, 18;
	mov.b64 	%rd971, {%r681, %r680};
	xor.b64  	%rd972, %rd970, %rd971;
	shf.l.wrap.b32 	%r682, %r676, %r677, 23;
	shf.l.wrap.b32 	%r683, %r677, %r676, 23;
	mov.b64 	%rd973, {%r683, %r682};
	xor.b64  	%rd974, %rd972, %rd973;
	xor.b64  	%rd975, %rd935, %rd910;
	and.b64  	%rd976, %rd1052, %rd975;
	xor.b64  	%rd977, %rd976, %rd910;
	ld.const.u64 	%rd978, [%rd1051+232];
	add.s64 	%rd979, %rd978, %rd1069;
	add.s64 	%rd980, %rd979, %rd885;
	add.s64 	%rd981, %rd980, %rd977;
	add.s64 	%rd982, %rd981, %rd974;
	add.s64 	%rd1053, %rd982, %rd896;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r684,%dummy}, %rd1075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r685}, %rd1075;
	}
	shf.r.wrap.b32 	%r686, %r685, %r684, 28;
	shf.r.wrap.b32 	%r687, %r684, %r685, 28;
	mov.b64 	%rd983, {%r687, %r686};
	shf.l.wrap.b32 	%r688, %r684, %r685, 30;
	shf.l.wrap.b32 	%r689, %r685, %r684, 30;
	mov.b64 	%rd984, {%r689, %r688};
	xor.b64  	%rd985, %rd983, %rd984;
	shf.l.wrap.b32 	%r690, %r684, %r685, 25;
	shf.l.wrap.b32 	%r691, %r685, %r684, 25;
	mov.b64 	%rd986, {%r691, %r690};
	xor.b64  	%rd987, %rd985, %rd986;
	and.b64  	%rd988, %rd1075, %rd946;
	xor.b64  	%rd989, %rd1075, %rd946;
	and.b64  	%rd990, %rd989, %rd921;
	or.b64  	%rd991, %rd990, %rd988;
	add.s64 	%rd992, %rd987, %rd991;
	add.s64 	%rd1074, %rd992, %rd982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r692,%dummy}, %rd1053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r693}, %rd1053;
	}
	shf.r.wrap.b32 	%r694, %r693, %r692, 14;
	shf.r.wrap.b32 	%r695, %r692, %r693, 14;
	mov.b64 	%rd993, {%r695, %r694};
	shf.r.wrap.b32 	%r696, %r693, %r692, 18;
	shf.r.wrap.b32 	%r697, %r692, %r693, 18;
	mov.b64 	%rd994, {%r697, %r696};
	xor.b64  	%rd995, %rd993, %rd994;
	shf.l.wrap.b32 	%r698, %r692, %r693, 23;
	shf.l.wrap.b32 	%r699, %r693, %r692, 23;
	mov.b64 	%rd996, {%r699, %r698};
	xor.b64  	%rd997, %rd995, %rd996;
	xor.b64  	%rd998, %rd1052, %rd935;
	and.b64  	%rd999, %rd1053, %rd998;
	xor.b64  	%rd1000, %rd999, %rd935;
	ld.const.u64 	%rd1001, [%rd1051+240];
	add.s64 	%rd1002, %rd1001, %rd1070;
	add.s64 	%rd1003, %rd1002, %rd910;
	add.s64 	%rd1004, %rd1003, %rd1000;
	add.s64 	%rd1005, %rd1004, %rd997;
	add.s64 	%rd1054, %rd1005, %rd921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r700,%dummy}, %rd1074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r701}, %rd1074;
	}
	shf.r.wrap.b32 	%r702, %r701, %r700, 28;
	shf.r.wrap.b32 	%r703, %r700, %r701, 28;
	mov.b64 	%rd1006, {%r703, %r702};
	shf.l.wrap.b32 	%r704, %r700, %r701, 30;
	shf.l.wrap.b32 	%r705, %r701, %r700, 30;
	mov.b64 	%rd1007, {%r705, %r704};
	xor.b64  	%rd1008, %rd1006, %rd1007;
	shf.l.wrap.b32 	%r706, %r700, %r701, 25;
	shf.l.wrap.b32 	%r707, %r701, %r700, 25;
	mov.b64 	%rd1009, {%r707, %r706};
	xor.b64  	%rd1010, %rd1008, %rd1009;
	and.b64  	%rd1011, %rd1074, %rd1075;
	xor.b64  	%rd1012, %rd1074, %rd1075;
	and.b64  	%rd1013, %rd1012, %rd946;
	or.b64  	%rd1014, %rd1013, %rd1011;
	add.s64 	%rd1015, %rd1010, %rd1014;
	add.s64 	%rd1073, %rd1015, %rd1005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r708,%dummy}, %rd1054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r709}, %rd1054;
	}
	shf.r.wrap.b32 	%r710, %r709, %r708, 14;
	shf.r.wrap.b32 	%r711, %r708, %r709, 14;
	mov.b64 	%rd1016, {%r711, %r710};
	shf.r.wrap.b32 	%r712, %r709, %r708, 18;
	shf.r.wrap.b32 	%r713, %r708, %r709, 18;
	mov.b64 	%rd1017, {%r713, %r712};
	xor.b64  	%rd1018, %rd1016, %rd1017;
	shf.l.wrap.b32 	%r714, %r708, %r709, 23;
	shf.l.wrap.b32 	%r715, %r709, %r708, 23;
	mov.b64 	%rd1019, {%r715, %r714};
	xor.b64  	%rd1020, %rd1018, %rd1019;
	xor.b64  	%rd1021, %rd1053, %rd1052;
	and.b64  	%rd1022, %rd1054, %rd1021;
	xor.b64  	%rd1023, %rd1022, %rd1052;
	ld.const.u64 	%rd1024, [%rd1051+248];
	add.s64 	%rd1025, %rd1024, %rd1071;
	add.s64 	%rd1026, %rd1025, %rd935;
	add.s64 	%rd1027, %rd1026, %rd1023;
	add.s64 	%rd1028, %rd1027, %rd1020;
	add.s64 	%rd1055, %rd1028, %rd946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r716,%dummy}, %rd1073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r717}, %rd1073;
	}
	shf.r.wrap.b32 	%r718, %r717, %r716, 28;
	shf.r.wrap.b32 	%r719, %r716, %r717, 28;
	mov.b64 	%rd1029, {%r719, %r718};
	shf.l.wrap.b32 	%r720, %r716, %r717, 30;
	shf.l.wrap.b32 	%r721, %r717, %r716, 30;
	mov.b64 	%rd1030, {%r721, %r720};
	xor.b64  	%rd1031, %rd1029, %rd1030;
	shf.l.wrap.b32 	%r722, %r716, %r717, 25;
	shf.l.wrap.b32 	%r723, %r717, %r716, 25;
	mov.b64 	%rd1032, {%r723, %r722};
	xor.b64  	%rd1033, %rd1031, %rd1032;
	and.b64  	%rd1034, %rd1073, %rd1074;
	xor.b64  	%rd1035, %rd1073, %rd1074;
	and.b64  	%rd1036, %rd1035, %rd1075;
	or.b64  	%rd1037, %rd1036, %rd1034;
	add.s64 	%rd1038, %rd1033, %rd1037;
	add.s64 	%rd1072, %rd1038, %rd1028;
	add.s32 	%r734, %r734, 16;
	setp.lt.s32	%p3, %r734, 80;
	mov.u64 	%rd1051, %rd84;
	@%p3 bra 	BB5_4;

	mov.b64	{%r11, %r12}, %rd1052;
	setp.ne.s32	%p4, %r11, %r4;
	@%p4 bra 	BB5_11;

	mov.b64	{%r724, %r725}, %rd1075;
	setp.ne.s32	%p5, %r12, %r5;
	setp.ne.s32	%p6, %r724, %r6;
	or.pred  	%p7, %p5, %p6;
	setp.ne.s32	%p8, %r725, %r7;
	or.pred  	%p9, %p7, %p8;
	@%p9 bra 	BB5_11;

	atom.global.add.u32 	%r726, [%rd25], 1;
	setp.ne.s32	%p10, %r726, 0;
	@%p10 bra 	BB5_11;

	ld.param.u32 	%r731, [m01700_s16_param_31];
	atom.global.add.u32 	%r13, [%rd90], 1;
	setp.lt.u32	%p11, %r13, %r731;
	@%p11 bra 	BB5_10;
	bra.uni 	BB5_9;

BB5_10:
	ld.param.u32 	%r732, [m01700_s16_param_27];
	ld.param.u64 	%rd1050, [m01700_s16_param_14];
	ld.param.u32 	%r730, [m01700_s16_param_32];
	mul.wide.u32 	%rd1039, %r13, 32;
	add.s64 	%rd1040, %rd1050, %rd1039;
	st.global.u32 	[%rd1040+12], %r732;
	mov.u32 	%r728, 0;
	st.global.u32 	[%rd1040+16], %r728;
	st.global.u32 	[%rd1040+20], %r730;
	st.global.u64 	[%rd1040], %rd1;
	st.global.u32 	[%rd1040+8], %r733;
	st.global.u32 	[%rd1040+24], %r728;
	st.global.u32 	[%rd1040+28], %r728;
	bra.uni 	BB5_11;

BB5_9:
	atom.global.add.u32 	%r727, [%rd90], -1;

BB5_11:
	ld.param.u32 	%r729, [m01700_s16_param_30];
	add.s32 	%r733, %r733, 1;
	setp.lt.u32	%p12, %r733, %r729;
	@%p12 bra 	BB5_3;

BB5_12:
	ret;
}


  