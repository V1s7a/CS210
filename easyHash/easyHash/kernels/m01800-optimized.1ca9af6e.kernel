//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Unknown Toolkit Version
// Based on LLVM 3.4svn
//

.version 6.5
.target sm_61, texmode_independent
.address_size 64

	// .globl	m01800_init
.const .align 8 .b8 k_sha512[640] = {34, 174, 40, 215, 152, 47, 138, 66, 205, 101, 239, 35, 145, 68, 55, 113, 47, 59, 77, 236, 207, 251, 192, 181, 188, 219, 137, 129, 165, 219, 181, 233, 56, 181, 72, 243, 91, 194, 86, 57, 25, 208, 5, 182, 241, 17, 241, 89, 155, 79, 25, 175, 164, 130, 63, 146, 24, 129, 109, 218, 213, 94, 28, 171, 66, 2, 3, 163, 152, 170, 7, 216, 190, 111, 112, 69, 1, 91, 131, 18, 140, 178, 228, 78, 190, 133, 49, 36, 226, 180, 255, 213, 195, 125, 12, 85, 111, 137, 123, 242, 116, 93, 190, 114, 177, 150, 22, 59, 254, 177, 222, 128, 53, 18, 199, 37, 167, 6, 220, 155, 148, 38, 105, 207, 116, 241, 155, 193, 210, 74, 241, 158, 193, 105, 155, 228, 227, 37, 79, 56, 134, 71, 190, 239, 181, 213, 140, 139, 198, 157, 193, 15, 101, 156, 172, 119, 204, 161, 12, 36, 117, 2, 43, 89, 111, 44, 233, 45, 131, 228, 166, 110, 170, 132, 116, 74, 212, 251, 65, 189, 220, 169, 176, 92, 181, 83, 17, 131, 218, 136, 249, 118, 171, 223, 102, 238, 82, 81, 62, 152, 16, 50, 180, 45, 109, 198, 49, 168, 63, 33, 251, 152, 200, 39, 3, 176, 228, 14, 239, 190, 199, 127, 89, 191, 194, 143, 168, 61, 243, 11, 224, 198, 37, 167, 10, 147, 71, 145, 167, 213, 111, 130, 3, 224, 81, 99, 202, 6, 112, 110, 14, 10, 103, 41, 41, 20, 252, 47, 210, 70, 133, 10, 183, 39, 38, 201, 38, 92, 56, 33, 27, 46, 237, 42, 196, 90, 252, 109, 44, 77, 223, 179, 149, 157, 19, 13, 56, 83, 222, 99, 175, 139, 84, 115, 10, 101, 168, 178, 119, 60, 187, 10, 106, 118, 230, 174, 237, 71, 46, 201, 194, 129, 59, 53, 130, 20, 133, 44, 114, 146, 100, 3, 241, 76, 161, 232, 191, 162, 1, 48, 66, 188, 75, 102, 26, 168, 145, 151, 248, 208, 112, 139, 75, 194, 48, 190, 84, 6, 163, 81, 108, 199, 24, 82, 239, 214, 25, 232, 146, 209, 16, 169, 101, 85, 36, 6, 153, 214, 42, 32, 113, 87, 133, 53, 14, 244, 184, 209, 187, 50, 112, 160, 106, 16, 200, 208, 210, 184, 22, 193, 164, 25, 83, 171, 65, 81, 8, 108, 55, 30, 153, 235, 142, 223, 76, 119, 72, 39, 168, 72, 155, 225, 181, 188, 176, 52, 99, 90, 201, 197, 179, 12, 28, 57, 203, 138, 65, 227, 74, 170, 216, 78, 115, 227, 99, 119, 79, 202, 156, 91, 163, 184, 178, 214, 243, 111, 46, 104, 252, 178, 239, 93, 238, 130, 143, 116, 96, 47, 23, 67, 111, 99, 165, 120, 114, 171, 240, 161, 20, 120, 200, 132, 236, 57, 100, 26, 8, 2, 199, 140, 40, 30, 99, 35, 250, 255, 190, 144, 233, 189, 130, 222, 235, 108, 80, 164, 21, 121, 198, 178, 247, 163, 249, 190, 43, 83, 114, 227, 242, 120, 113, 198, 156, 97, 38, 234, 206, 62, 39, 202, 7, 194, 192, 33, 199, 184, 134, 209, 30, 235, 224, 205, 214, 125, 218, 234, 120, 209, 110, 238, 127, 79, 125, 245, 186, 111, 23, 114, 170, 103, 240, 6, 166, 152, 200, 162, 197, 125, 99, 10, 174, 13, 249, 190, 4, 152, 63, 17, 27, 71, 28, 19, 53, 11, 113, 27, 132, 125, 4, 35, 245, 119, 219, 40, 147, 36, 199, 64, 123, 171, 202, 50, 188, 190, 201, 21, 10, 190, 158, 60, 76, 13, 16, 156, 196, 103, 29, 67, 182, 66, 62, 203, 190, 212, 197, 76, 42, 126, 101, 252, 156, 41, 127, 89, 236, 250, 214, 58, 171, 111, 203, 95, 23, 88, 71, 74, 140, 25, 68, 108};

.entry m01800_init(
	.param .u64 .ptr .global .align 4 m01800_init_param_0,
	.param .u64 .ptr .global .align 4 m01800_init_param_1,
	.param .u64 .ptr .global .align 4 m01800_init_param_2,
	.param .u64 .ptr .const .align 4 m01800_init_param_3,
	.param .u64 .ptr .global .align 8 m01800_init_param_4,
	.param .u64 .ptr .global .align 1 m01800_init_param_5,
	.param .u64 .ptr .global .align 4 m01800_init_param_6,
	.param .u64 .ptr .global .align 4 m01800_init_param_7,
	.param .u64 .ptr .global .align 4 m01800_init_param_8,
	.param .u64 .ptr .global .align 4 m01800_init_param_9,
	.param .u64 .ptr .global .align 4 m01800_init_param_10,
	.param .u64 .ptr .global .align 4 m01800_init_param_11,
	.param .u64 .ptr .global .align 4 m01800_init_param_12,
	.param .u64 .ptr .global .align 4 m01800_init_param_13,
	.param .u64 .ptr .global .align 8 m01800_init_param_14,
	.param .u64 .ptr .global .align 4 m01800_init_param_15,
	.param .u64 .ptr .global .align 4 m01800_init_param_16,
	.param .u64 .ptr .global .align 4 m01800_init_param_17,
	.param .u64 .ptr .global .align 1 m01800_init_param_18,
	.param .u64 .ptr .global .align 4 m01800_init_param_19,
	.param .u64 .ptr .global .align 1 m01800_init_param_20,
	.param .u64 .ptr .global .align 1 m01800_init_param_21,
	.param .u64 .ptr .global .align 1 m01800_init_param_22,
	.param .u64 .ptr .global .align 1 m01800_init_param_23,
	.param .u32 m01800_init_param_24,
	.param .u32 m01800_init_param_25,
	.param .u32 m01800_init_param_26,
	.param .u32 m01800_init_param_27,
	.param .u32 m01800_init_param_28,
	.param .u32 m01800_init_param_29,
	.param .u32 m01800_init_param_30,
	.param .u32 m01800_init_param_31,
	.param .u32 m01800_init_param_32,
	.param .u32 m01800_init_param_33,
	.param .u64 m01800_init_param_34
)
{
	.local .align 16 .b8 	__local_depot0[304];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<208>;
	.reg .b16 	%rs<281>;
	.reg .b32 	%r<13078>;
	.reg .b64 	%rd<19016>;


	mov.u64 	%SPL, __local_depot0;
	ld.param.u64 	%rd1444, [m01800_init_param_0];
	ld.param.u64 	%rd1446, [m01800_init_param_17];
	ld.param.u32 	%r485, [m01800_init_param_27];
	ld.param.u64 	%rd1447, [m01800_init_param_34];
	add.u64 	%rd1, %SPL, 96;
	mov.u32 	%r486, %ctaid.x;
	mov.u32 	%r487, %ntid.x;
	mov.b32	%r488, %envreg3;
	mad.lo.s32 	%r489, %r486, %r487, %r488;
	mov.u32 	%r490, %tid.x;
	add.s32 	%r1, %r489, %r490;
	cvt.s64.s32	%rd1449, %r1;
	setp.ge.u64	%p1, %rd1449, %rd1447;
	@%p1 bra 	BB0_337;

	mul.wide.s32 	%rd1458, %r1, 260;
	add.s64 	%rd1459, %rd1444, %rd1458;
	ld.global.u32 	%r523, [%rd1459+256];
	and.b32  	%r2, %r523, 63;
	mul.wide.u32 	%rd1460, %r485, 560;
	add.s64 	%rd1461, %rd1446, %rd1460;
	ld.global.u32 	%r3, [%rd1461+512];
	ld.global.u32 	%r524, [%rd1459+4];
	ld.global.u32 	%r525, [%rd1459];
	mov.b64	%rd1450, {%r525, %r524};
	ld.global.u32 	%r526, [%rd1459+12];
	ld.global.u32 	%r527, [%rd1459+8];
	ld.global.u32 	%r528, [%rd1461+4];
	ld.global.u32 	%r529, [%rd1461];
	ld.global.u32 	%r530, [%rd1461+12];
	ld.global.u32 	%r531, [%rd1461+8];
	// inline asm
	mov.b64 {%r491, %r492}, %rd1450;
	// inline asm
	// inline asm
	prmt.b32 %r493, %r491, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r495, %r492, 0, 0x0123;
	// inline asm
	// inline asm
	mov.b64 %rd1451, {%r495, %r493};
	// inline asm
	add.u64 	%rd1463, %SPL, 64;
	st.local.u64 	[%rd1463], %rd1451;
	mov.b64	%rd1452, {%r527, %r526};
	// inline asm
	mov.b64 {%r499, %r500}, %rd1452;
	// inline asm
	// inline asm
	prmt.b32 %r501, %r499, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r503, %r500, 0, 0x0123;
	// inline asm
	// inline asm
	mov.b64 %rd1453, {%r503, %r501};
	// inline asm
	st.local.u64 	[%rd1463+8], %rd1453;
	mov.b64	%rd1454, {%r529, %r528};
	// inline asm
	mov.b64 {%r507, %r508}, %rd1454;
	// inline asm
	// inline asm
	prmt.b32 %r509, %r507, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r511, %r508, 0, 0x0123;
	// inline asm
	// inline asm
	mov.b64 %rd1455, {%r511, %r509};
	// inline asm
	add.u64 	%rd1465, %SPL, 80;
	st.local.u64 	[%rd1465], %rd1455;
	mov.b64	%rd1456, {%r531, %r530};
	// inline asm
	mov.b64 {%r515, %r516}, %rd1456;
	// inline asm
	// inline asm
	prmt.b32 %r517, %r515, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r519, %r516, 0, 0x0123;
	// inline asm
	// inline asm
	mov.b64 %rd1457, {%r519, %r517};
	// inline asm
	st.local.u64 	[%rd1465+8], %rd1457;
	mov.u64 	%rd1466, 7640891576956012808;
	st.local.u64 	[%rd1], %rd1466;
	mov.u64 	%rd1467, -4942790177534073029;
	st.local.u64 	[%rd1+8], %rd1467;
	mov.u64 	%rd1468, 4354685564936845355;
	st.local.u64 	[%rd1+16], %rd1468;
	mov.u64 	%rd1469, -6534734903238641935;
	st.local.u64 	[%rd1+24], %rd1469;
	mov.u64 	%rd1470, 5840696475078001361;
	st.local.u64 	[%rd1+32], %rd1470;
	mov.u64 	%rd1471, -7276294671716946913;
	st.local.u64 	[%rd1+40], %rd1471;
	mov.u64 	%rd1472, 2270897969802886507;
	st.local.u64 	[%rd1+48], %rd1472;
	mov.u64 	%rd1473, 6620516959819538809;
	st.local.u64 	[%rd1+56], %rd1473;
	st.local.u32 	[%rd1+192], %r2;
	setp.eq.s32	%p2, %r2, 0;
	@%p2 bra 	BB0_11;

	add.s64 	%rd4, %rd1, 64;
	mov.u32 	%r534, 1;
	max.u32 	%r4, %r2, %r534;
	and.b32  	%r5, %r4, 3;
	setp.eq.s32	%p3, %r5, 0;
	mov.u32 	%r12875, 0;
	@%p3 bra 	BB0_8;

	setp.eq.s32	%p4, %r5, 1;
	mov.u32 	%r12873, 0;
	@%p4 bra 	BB0_7;

	setp.eq.s32	%p5, %r5, 2;
	mov.u32 	%r12872, 0;
	@%p5 bra 	BB0_6;

	ld.local.u8 	%rs9, [%rd1463+7];
	st.local.u8 	[%rd4+7], %rs9;
	mov.u32 	%r12872, %r534;

BB0_6:
	xor.b32  	%r538, %r12872, 7;
	cvt.u64.u32	%rd1475, %r538;
	add.s64 	%rd1476, %rd1463, %rd1475;
	ld.local.u8 	%rs10, [%rd1476];
	add.s64 	%rd1477, %rd4, %rd1475;
	st.local.u8 	[%rd1477], %rs10;
	add.s32 	%r12873, %r12872, 1;

BB0_7:
	xor.b32  	%r539, %r12873, 7;
	cvt.s64.s32	%rd1478, %r539;
	add.s64 	%rd1479, %rd1463, %rd1478;
	ld.local.u8 	%rs11, [%rd1479];
	add.s64 	%rd1480, %rd4, %rd1478;
	st.local.u8 	[%rd1480], %rs11;
	add.s32 	%r12875, %r12873, 1;

BB0_8:
	setp.lt.u32	%p6, %r4, 4;
	@%p6 bra 	BB0_11;

	mov.u32 	%r12876, %r12875;

BB0_10:
	xor.b32  	%r540, %r12876, 7;
	cvt.s64.s32	%rd1481, %r540;
	add.s64 	%rd1482, %rd1463, %rd1481;
	ld.local.u8 	%rs12, [%rd1482];
	xor.b32  	%r541, %r12875, 7;
	cvt.s64.s32	%rd1483, %r541;
	add.s64 	%rd1484, %rd4, %rd1483;
	st.local.u8 	[%rd1484], %rs12;
	add.s32 	%r542, %r12876, 1;
	xor.b32  	%r543, %r542, 7;
	cvt.s64.s32	%rd1485, %r543;
	add.s64 	%rd1486, %rd1463, %rd1485;
	ld.local.u8 	%rs13, [%rd1486];
	add.s32 	%r544, %r12875, 1;
	xor.b32  	%r545, %r544, 7;
	cvt.s64.s32	%rd1487, %r545;
	add.s64 	%rd1488, %rd4, %rd1487;
	st.local.u8 	[%rd1488], %rs13;
	add.s32 	%r546, %r12876, 2;
	xor.b32  	%r547, %r546, 7;
	cvt.s64.s32	%rd1489, %r547;
	add.s64 	%rd1490, %rd1463, %rd1489;
	ld.local.u8 	%rs14, [%rd1490];
	add.s32 	%r548, %r12875, 2;
	xor.b32  	%r549, %r548, 7;
	cvt.s64.s32	%rd1491, %r549;
	add.s64 	%rd1492, %rd4, %rd1491;
	st.local.u8 	[%rd1492], %rs14;
	add.s32 	%r550, %r12876, 3;
	xor.b32  	%r551, %r550, 7;
	cvt.s64.s32	%rd1493, %r551;
	add.s64 	%rd1494, %rd1463, %rd1493;
	ld.local.u8 	%rs15, [%rd1494];
	add.s32 	%r552, %r12875, 3;
	xor.b32  	%r553, %r552, 7;
	cvt.s64.s32	%rd1495, %r553;
	add.s64 	%rd1496, %rd4, %rd1495;
	st.local.u8 	[%rd1496], %rs15;
	add.s32 	%r12876, %r12876, 4;
	setp.lt.s32	%p7, %r12876, %r2;
	add.s32 	%r12875, %r12875, 4;
	@%p7 bra 	BB0_10;

BB0_11:
	ld.local.u32 	%r554, [%rd1+192];
	and.b32  	%r16, %r554, 127;
	add.s32 	%r555, %r554, %r3;
	st.local.u32 	[%rd1+192], %r555;
	add.s32 	%r17, %r16, %r3;
	setp.lt.s32	%p8, %r17, 128;
	@%p8 bra 	BB0_32;
	bra.uni 	BB0_12;

BB0_32:
	setp.lt.s32	%p21, %r3, 1;
	@%p21 bra 	BB0_41;

	add.s64 	%rd88, %rd1, 64;
	and.b32  	%r1324, %r3, 3;
	mov.u32 	%r12891, 0;
	setp.eq.s32	%p22, %r1324, 0;
	@%p22 bra 	BB0_39;

	setp.eq.s32	%p23, %r1324, 1;
	@%p23 bra 	BB0_38;

	setp.eq.s32	%p24, %r1324, 2;
	@%p24 bra 	BB0_37;

	ld.local.u8 	%rs30, [%rd1465+7];
	xor.b32  	%r1326, %r16, 7;
	cvt.u64.u32	%rd2568, %r1326;
	add.s64 	%rd2569, %rd88, %rd2568;
	st.local.u8 	[%rd2569], %rs30;
	add.s32 	%r16, %r16, 1;
	mov.u32 	%r12891, 1;

BB0_37:
	xor.b32  	%r1327, %r12891, 7;
	cvt.u64.u32	%rd2570, %r1327;
	add.s64 	%rd2571, %rd1465, %rd2570;
	ld.local.u8 	%rs31, [%rd2571];
	xor.b32  	%r1328, %r16, 7;
	cvt.s64.s32	%rd2572, %r1328;
	add.s64 	%rd2573, %rd88, %rd2572;
	st.local.u8 	[%rd2573], %rs31;
	add.s32 	%r16, %r16, 1;
	add.s32 	%r12891, %r12891, 1;

BB0_38:
	xor.b32  	%r1329, %r12891, 7;
	cvt.s64.s32	%rd2574, %r1329;
	add.s64 	%rd2575, %rd1465, %rd2574;
	ld.local.u8 	%rs32, [%rd2575];
	xor.b32  	%r1330, %r16, 7;
	cvt.s64.s32	%rd2576, %r1330;
	add.s64 	%rd2577, %rd88, %rd2576;
	st.local.u8 	[%rd2577], %rs32;
	add.s32 	%r16, %r16, 1;
	add.s32 	%r12891, %r12891, 1;

BB0_39:
	setp.lt.u32	%p25, %r3, 4;
	@%p25 bra 	BB0_41;

BB0_40:
	xor.b32  	%r1331, %r12891, 7;
	cvt.s64.s32	%rd2578, %r1331;
	add.s64 	%rd2579, %rd1465, %rd2578;
	ld.local.u8 	%rs33, [%rd2579];
	xor.b32  	%r1332, %r16, 7;
	cvt.s64.s32	%rd2580, %r1332;
	add.s64 	%rd2581, %rd88, %rd2580;
	st.local.u8 	[%rd2581], %rs33;
	add.s32 	%r1333, %r12891, 1;
	xor.b32  	%r1334, %r1333, 7;
	cvt.s64.s32	%rd2582, %r1334;
	add.s64 	%rd2583, %rd1465, %rd2582;
	ld.local.u8 	%rs34, [%rd2583];
	add.s32 	%r1335, %r16, 1;
	xor.b32  	%r1336, %r1335, 7;
	cvt.s64.s32	%rd2584, %r1336;
	add.s64 	%rd2585, %rd88, %rd2584;
	st.local.u8 	[%rd2585], %rs34;
	add.s32 	%r1337, %r12891, 2;
	xor.b32  	%r1338, %r1337, 7;
	cvt.s64.s32	%rd2586, %r1338;
	add.s64 	%rd2587, %rd1465, %rd2586;
	ld.local.u8 	%rs35, [%rd2587];
	add.s32 	%r1339, %r16, 2;
	xor.b32  	%r1340, %r1339, 7;
	cvt.s64.s32	%rd2588, %r1340;
	add.s64 	%rd2589, %rd88, %rd2588;
	st.local.u8 	[%rd2589], %rs35;
	add.s32 	%r1341, %r12891, 3;
	xor.b32  	%r1342, %r1341, 7;
	cvt.s64.s32	%rd2590, %r1342;
	add.s64 	%rd2591, %rd1465, %rd2590;
	ld.local.u8 	%rs36, [%rd2591];
	add.s32 	%r1343, %r16, 3;
	xor.b32  	%r1344, %r1343, 7;
	cvt.s64.s32	%rd2592, %r1344;
	add.s64 	%rd2593, %rd88, %rd2592;
	st.local.u8 	[%rd2593], %rs36;
	add.s32 	%r12891, %r12891, 4;
	setp.lt.s32	%p26, %r12891, %r3;
	add.s32 	%r16, %r16, 4;
	@%p26 bra 	BB0_40;
	bra.uni 	BB0_41;

BB0_12:
	mov.u32 	%r557, 128;
	sub.s32 	%r18, %r557, %r16;
	add.s64 	%rd5, %rd1, 64;
	mov.u32 	%r558, 1;
	max.u32 	%r19, %r18, %r558;
	and.b32  	%r20, %r19, 3;
	setp.eq.s32	%p9, %r20, 0;
	mov.u32 	%r12883, 0;
	@%p9 bra 	BB0_19;

	setp.eq.s32	%p10, %r20, 1;
	mov.u32 	%r12879, 0;
	@%p10 bra 	BB0_18;

	setp.eq.s32	%p11, %r20, 2;
	mov.u32 	%r560, 0;
	@%p11 bra 	BB0_15;
	bra.uni 	BB0_16;

BB0_15:
	mov.u32 	%r558, %r560;
	bra.uni 	BB0_17;

BB0_16:
	ld.local.u8 	%rs16, [%rd1465+7];
	xor.b32  	%r562, %r16, 7;
	cvt.u64.u32	%rd1498, %r562;
	add.s64 	%rd1499, %rd5, %rd1498;
	st.local.u8 	[%rd1499], %rs16;
	add.s32 	%r16, %r16, 1;

BB0_17:
	xor.b32  	%r563, %r558, 7;
	cvt.u64.u32	%rd1500, %r563;
	add.s64 	%rd1501, %rd1465, %rd1500;
	ld.local.u8 	%rs17, [%rd1501];
	xor.b32  	%r564, %r16, 7;
	cvt.s64.s32	%rd1502, %r564;
	add.s64 	%rd1503, %rd5, %rd1502;
	st.local.u8 	[%rd1503], %rs17;
	add.s32 	%r16, %r16, 1;
	add.s32 	%r12879, %r558, 1;

BB0_18:
	xor.b32  	%r565, %r12879, 7;
	cvt.s64.s32	%rd1504, %r565;
	add.s64 	%rd1505, %rd1465, %rd1504;
	ld.local.u8 	%rs18, [%rd1505];
	xor.b32  	%r566, %r16, 7;
	cvt.s64.s32	%rd1506, %r566;
	add.s64 	%rd1507, %rd5, %rd1506;
	st.local.u8 	[%rd1507], %rs18;
	add.s32 	%r16, %r16, 1;
	add.s32 	%r12883, %r12879, 1;

BB0_19:
	setp.lt.u32	%p12, %r19, 4;
	@%p12 bra 	BB0_21;

BB0_20:
	xor.b32  	%r567, %r12883, 7;
	cvt.s64.s32	%rd1508, %r567;
	add.s64 	%rd1509, %rd1465, %rd1508;
	ld.local.u8 	%rs19, [%rd1509];
	xor.b32  	%r568, %r16, 7;
	cvt.s64.s32	%rd1510, %r568;
	add.s64 	%rd1511, %rd5, %rd1510;
	st.local.u8 	[%rd1511], %rs19;
	add.s32 	%r569, %r12883, 1;
	xor.b32  	%r570, %r569, 7;
	cvt.s64.s32	%rd1512, %r570;
	add.s64 	%rd1513, %rd1465, %rd1512;
	ld.local.u8 	%rs20, [%rd1513];
	add.s32 	%r571, %r16, 1;
	xor.b32  	%r572, %r571, 7;
	cvt.s64.s32	%rd1514, %r572;
	add.s64 	%rd1515, %rd5, %rd1514;
	st.local.u8 	[%rd1515], %rs20;
	add.s32 	%r573, %r12883, 2;
	xor.b32  	%r574, %r573, 7;
	cvt.s64.s32	%rd1516, %r574;
	add.s64 	%rd1517, %rd1465, %rd1516;
	ld.local.u8 	%rs21, [%rd1517];
	add.s32 	%r575, %r16, 2;
	xor.b32  	%r576, %r575, 7;
	cvt.s64.s32	%rd1518, %r576;
	add.s64 	%rd1519, %rd5, %rd1518;
	st.local.u8 	[%rd1519], %rs21;
	add.s32 	%r577, %r12883, 3;
	xor.b32  	%r578, %r577, 7;
	cvt.s64.s32	%rd1520, %r578;
	add.s64 	%rd1521, %rd1465, %rd1520;
	ld.local.u8 	%rs22, [%rd1521];
	add.s32 	%r579, %r16, 3;
	xor.b32  	%r580, %r579, 7;
	cvt.s64.s32	%rd1522, %r580;
	add.s64 	%rd1523, %rd5, %rd1522;
	st.local.u8 	[%rd1523], %rs22;
	add.s32 	%r12883, %r12883, 4;
	setp.lt.s32	%p13, %r12883, %r18;
	add.s32 	%r16, %r16, 4;
	@%p13 bra 	BB0_20;

BB0_21:
	ld.local.u64 	%rd7, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r582,%dummy}, %rd7;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r583}, %rd7;
	}
	shf.r.wrap.b32 	%r584, %r583, %r582, 14;
	shf.r.wrap.b32 	%r585, %r582, %r583, 14;
	mov.b64 	%rd1524, {%r585, %r584};
	shf.r.wrap.b32 	%r586, %r583, %r582, 18;
	shf.r.wrap.b32 	%r587, %r582, %r583, 18;
	mov.b64 	%rd1525, {%r587, %r586};
	xor.b64  	%rd1526, %rd1525, %rd1524;
	shf.l.wrap.b32 	%r588, %r582, %r583, 23;
	shf.l.wrap.b32 	%r589, %r583, %r582, 23;
	mov.b64 	%rd1527, {%r589, %r588};
	xor.b64  	%rd1528, %rd1526, %rd1527;
	ld.local.u64 	%rd8, [%rd1+48];
	ld.local.u64 	%rd9, [%rd1+40];
	xor.b64  	%rd1529, %rd8, %rd9;
	and.b64  	%rd1530, %rd1529, %rd7;
	xor.b64  	%rd1531, %rd1530, %rd8;
	ld.local.u64 	%rd10, [%rd1+56];
	ld.local.u64 	%rd18539, [%rd5];
	add.s64 	%rd1532, %rd10, %rd18539;
	ld.const.u64 	%rd1533, [k_sha512];
	add.s64 	%rd1534, %rd1532, %rd1533;
	add.s64 	%rd1535, %rd1534, %rd1531;
	add.s64 	%rd1536, %rd1535, %rd1528;
	ld.local.u64 	%rd12, [%rd1+24];
	add.s64 	%rd1537, %rd1536, %rd12;
	ld.local.u64 	%rd13, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r590,%dummy}, %rd13;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r591}, %rd13;
	}
	shf.r.wrap.b32 	%r592, %r591, %r590, 28;
	shf.r.wrap.b32 	%r593, %r590, %r591, 28;
	mov.b64 	%rd1538, {%r593, %r592};
	shf.l.wrap.b32 	%r594, %r590, %r591, 30;
	shf.l.wrap.b32 	%r595, %r591, %r590, 30;
	mov.b64 	%rd1539, {%r595, %r594};
	xor.b64  	%rd1540, %rd1539, %rd1538;
	shf.l.wrap.b32 	%r596, %r590, %r591, 25;
	shf.l.wrap.b32 	%r597, %r591, %r590, 25;
	mov.b64 	%rd1541, {%r597, %r596};
	xor.b64  	%rd1542, %rd1540, %rd1541;
	ld.local.u64 	%rd14, [%rd1+8];
	and.b64  	%rd1543, %rd14, %rd13;
	xor.b64  	%rd1544, %rd14, %rd13;
	ld.local.u64 	%rd15, [%rd1+16];
	and.b64  	%rd1545, %rd15, %rd1544;
	or.b64  	%rd1546, %rd1545, %rd1543;
	add.s64 	%rd1547, %rd1536, %rd1546;
	add.s64 	%rd1548, %rd1547, %rd1542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r598,%dummy}, %rd1537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r599}, %rd1537;
	}
	shf.r.wrap.b32 	%r600, %r599, %r598, 14;
	shf.r.wrap.b32 	%r601, %r598, %r599, 14;
	mov.b64 	%rd1549, {%r601, %r600};
	shf.r.wrap.b32 	%r602, %r599, %r598, 18;
	shf.r.wrap.b32 	%r603, %r598, %r599, 18;
	mov.b64 	%rd1550, {%r603, %r602};
	xor.b64  	%rd1551, %rd1550, %rd1549;
	shf.l.wrap.b32 	%r604, %r598, %r599, 23;
	shf.l.wrap.b32 	%r605, %r599, %r598, 23;
	mov.b64 	%rd1552, {%r605, %r604};
	xor.b64  	%rd1553, %rd1551, %rd1552;
	xor.b64  	%rd1554, %rd9, %rd7;
	and.b64  	%rd1555, %rd1537, %rd1554;
	xor.b64  	%rd1556, %rd1555, %rd9;
	ld.local.u64 	%rd18540, [%rd1+72];
	add.s64 	%rd1557, %rd8, %rd18540;
	ld.const.u64 	%rd1558, [k_sha512+8];
	add.s64 	%rd1559, %rd1557, %rd1558;
	add.s64 	%rd1560, %rd1559, %rd1556;
	add.s64 	%rd1561, %rd1560, %rd1553;
	add.s64 	%rd1562, %rd1561, %rd15;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r606,%dummy}, %rd1548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r607}, %rd1548;
	}
	shf.r.wrap.b32 	%r608, %r607, %r606, 28;
	shf.r.wrap.b32 	%r609, %r606, %r607, 28;
	mov.b64 	%rd1563, {%r609, %r608};
	shf.l.wrap.b32 	%r610, %r606, %r607, 30;
	shf.l.wrap.b32 	%r611, %r607, %r606, 30;
	mov.b64 	%rd1564, {%r611, %r610};
	xor.b64  	%rd1565, %rd1564, %rd1563;
	shf.l.wrap.b32 	%r612, %r606, %r607, 25;
	shf.l.wrap.b32 	%r613, %r607, %r606, 25;
	mov.b64 	%rd1566, {%r613, %r612};
	xor.b64  	%rd1567, %rd1565, %rd1566;
	and.b64  	%rd1568, %rd1548, %rd13;
	xor.b64  	%rd1569, %rd1548, %rd13;
	and.b64  	%rd1570, %rd1569, %rd14;
	or.b64  	%rd1571, %rd1570, %rd1568;
	add.s64 	%rd1572, %rd1561, %rd1571;
	add.s64 	%rd1573, %rd1572, %rd1567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r614,%dummy}, %rd1562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r615}, %rd1562;
	}
	shf.r.wrap.b32 	%r616, %r615, %r614, 14;
	shf.r.wrap.b32 	%r617, %r614, %r615, 14;
	mov.b64 	%rd1574, {%r617, %r616};
	shf.r.wrap.b32 	%r618, %r615, %r614, 18;
	shf.r.wrap.b32 	%r619, %r614, %r615, 18;
	mov.b64 	%rd1575, {%r619, %r618};
	xor.b64  	%rd1576, %rd1575, %rd1574;
	shf.l.wrap.b32 	%r620, %r614, %r615, 23;
	shf.l.wrap.b32 	%r621, %r615, %r614, 23;
	mov.b64 	%rd1577, {%r621, %r620};
	xor.b64  	%rd1578, %rd1576, %rd1577;
	xor.b64  	%rd1579, %rd1537, %rd7;
	and.b64  	%rd1580, %rd1562, %rd1579;
	xor.b64  	%rd1581, %rd1580, %rd7;
	ld.local.u64 	%rd18541, [%rd1+80];
	add.s64 	%rd1582, %rd9, %rd18541;
	ld.const.u64 	%rd1583, [k_sha512+16];
	add.s64 	%rd1584, %rd1582, %rd1583;
	add.s64 	%rd1585, %rd1584, %rd1581;
	add.s64 	%rd1586, %rd1585, %rd1578;
	add.s64 	%rd1587, %rd1586, %rd14;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r622,%dummy}, %rd1573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r623}, %rd1573;
	}
	shf.r.wrap.b32 	%r624, %r623, %r622, 28;
	shf.r.wrap.b32 	%r625, %r622, %r623, 28;
	mov.b64 	%rd1588, {%r625, %r624};
	shf.l.wrap.b32 	%r626, %r622, %r623, 30;
	shf.l.wrap.b32 	%r627, %r623, %r622, 30;
	mov.b64 	%rd1589, {%r627, %r626};
	xor.b64  	%rd1590, %rd1589, %rd1588;
	shf.l.wrap.b32 	%r628, %r622, %r623, 25;
	shf.l.wrap.b32 	%r629, %r623, %r622, 25;
	mov.b64 	%rd1591, {%r629, %r628};
	xor.b64  	%rd1592, %rd1590, %rd1591;
	and.b64  	%rd1593, %rd1573, %rd1548;
	xor.b64  	%rd1594, %rd1573, %rd1548;
	and.b64  	%rd1595, %rd1594, %rd13;
	or.b64  	%rd1596, %rd1595, %rd1593;
	add.s64 	%rd1597, %rd1586, %rd1596;
	add.s64 	%rd1598, %rd1597, %rd1592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r630,%dummy}, %rd1587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r631}, %rd1587;
	}
	shf.r.wrap.b32 	%r632, %r631, %r630, 14;
	shf.r.wrap.b32 	%r633, %r630, %r631, 14;
	mov.b64 	%rd1599, {%r633, %r632};
	shf.r.wrap.b32 	%r634, %r631, %r630, 18;
	shf.r.wrap.b32 	%r635, %r630, %r631, 18;
	mov.b64 	%rd1600, {%r635, %r634};
	xor.b64  	%rd1601, %rd1600, %rd1599;
	shf.l.wrap.b32 	%r636, %r630, %r631, 23;
	shf.l.wrap.b32 	%r637, %r631, %r630, 23;
	mov.b64 	%rd1602, {%r637, %r636};
	xor.b64  	%rd1603, %rd1601, %rd1602;
	xor.b64  	%rd1604, %rd1562, %rd1537;
	and.b64  	%rd1605, %rd1587, %rd1604;
	xor.b64  	%rd1606, %rd1605, %rd1537;
	ld.local.u64 	%rd18542, [%rd1+88];
	add.s64 	%rd1607, %rd7, %rd18542;
	ld.const.u64 	%rd1608, [k_sha512+24];
	add.s64 	%rd1609, %rd1607, %rd1608;
	add.s64 	%rd1610, %rd1609, %rd1606;
	add.s64 	%rd1611, %rd1610, %rd1603;
	add.s64 	%rd1612, %rd1611, %rd13;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r638,%dummy}, %rd1598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r639}, %rd1598;
	}
	shf.r.wrap.b32 	%r640, %r639, %r638, 28;
	shf.r.wrap.b32 	%r641, %r638, %r639, 28;
	mov.b64 	%rd1613, {%r641, %r640};
	shf.l.wrap.b32 	%r642, %r638, %r639, 30;
	shf.l.wrap.b32 	%r643, %r639, %r638, 30;
	mov.b64 	%rd1614, {%r643, %r642};
	xor.b64  	%rd1615, %rd1614, %rd1613;
	shf.l.wrap.b32 	%r644, %r638, %r639, 25;
	shf.l.wrap.b32 	%r645, %r639, %r638, 25;
	mov.b64 	%rd1616, {%r645, %r644};
	xor.b64  	%rd1617, %rd1615, %rd1616;
	and.b64  	%rd1618, %rd1598, %rd1573;
	xor.b64  	%rd1619, %rd1598, %rd1573;
	and.b64  	%rd1620, %rd1619, %rd1548;
	or.b64  	%rd1621, %rd1620, %rd1618;
	add.s64 	%rd1622, %rd1611, %rd1621;
	add.s64 	%rd1623, %rd1622, %rd1617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r646,%dummy}, %rd1612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r647}, %rd1612;
	}
	shf.r.wrap.b32 	%r648, %r647, %r646, 14;
	shf.r.wrap.b32 	%r649, %r646, %r647, 14;
	mov.b64 	%rd1624, {%r649, %r648};
	shf.r.wrap.b32 	%r650, %r647, %r646, 18;
	shf.r.wrap.b32 	%r651, %r646, %r647, 18;
	mov.b64 	%rd1625, {%r651, %r650};
	xor.b64  	%rd1626, %rd1625, %rd1624;
	shf.l.wrap.b32 	%r652, %r646, %r647, 23;
	shf.l.wrap.b32 	%r653, %r647, %r646, 23;
	mov.b64 	%rd1627, {%r653, %r652};
	xor.b64  	%rd1628, %rd1626, %rd1627;
	xor.b64  	%rd1629, %rd1587, %rd1562;
	and.b64  	%rd1630, %rd1612, %rd1629;
	xor.b64  	%rd1631, %rd1630, %rd1562;
	ld.local.u64 	%rd18543, [%rd1+96];
	add.s64 	%rd1632, %rd1537, %rd18543;
	ld.const.u64 	%rd1633, [k_sha512+32];
	add.s64 	%rd1634, %rd1632, %rd1633;
	add.s64 	%rd1635, %rd1634, %rd1631;
	add.s64 	%rd1636, %rd1635, %rd1628;
	add.s64 	%rd1637, %rd1636, %rd1548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r654,%dummy}, %rd1623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r655}, %rd1623;
	}
	shf.r.wrap.b32 	%r656, %r655, %r654, 28;
	shf.r.wrap.b32 	%r657, %r654, %r655, 28;
	mov.b64 	%rd1638, {%r657, %r656};
	shf.l.wrap.b32 	%r658, %r654, %r655, 30;
	shf.l.wrap.b32 	%r659, %r655, %r654, 30;
	mov.b64 	%rd1639, {%r659, %r658};
	xor.b64  	%rd1640, %rd1639, %rd1638;
	shf.l.wrap.b32 	%r660, %r654, %r655, 25;
	shf.l.wrap.b32 	%r661, %r655, %r654, 25;
	mov.b64 	%rd1641, {%r661, %r660};
	xor.b64  	%rd1642, %rd1640, %rd1641;
	and.b64  	%rd1643, %rd1623, %rd1598;
	xor.b64  	%rd1644, %rd1623, %rd1598;
	and.b64  	%rd1645, %rd1644, %rd1573;
	or.b64  	%rd1646, %rd1645, %rd1643;
	add.s64 	%rd1647, %rd1636, %rd1646;
	add.s64 	%rd1648, %rd1647, %rd1642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r662,%dummy}, %rd1637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r663}, %rd1637;
	}
	shf.r.wrap.b32 	%r664, %r663, %r662, 14;
	shf.r.wrap.b32 	%r665, %r662, %r663, 14;
	mov.b64 	%rd1649, {%r665, %r664};
	shf.r.wrap.b32 	%r666, %r663, %r662, 18;
	shf.r.wrap.b32 	%r667, %r662, %r663, 18;
	mov.b64 	%rd1650, {%r667, %r666};
	xor.b64  	%rd1651, %rd1650, %rd1649;
	shf.l.wrap.b32 	%r668, %r662, %r663, 23;
	shf.l.wrap.b32 	%r669, %r663, %r662, 23;
	mov.b64 	%rd1652, {%r669, %r668};
	xor.b64  	%rd1653, %rd1651, %rd1652;
	xor.b64  	%rd1654, %rd1612, %rd1587;
	and.b64  	%rd1655, %rd1637, %rd1654;
	xor.b64  	%rd1656, %rd1655, %rd1587;
	ld.local.u64 	%rd18544, [%rd1+104];
	add.s64 	%rd1657, %rd1562, %rd18544;
	ld.const.u64 	%rd1658, [k_sha512+40];
	add.s64 	%rd1659, %rd1657, %rd1658;
	add.s64 	%rd1660, %rd1659, %rd1656;
	add.s64 	%rd1661, %rd1660, %rd1653;
	add.s64 	%rd1662, %rd1661, %rd1573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r670,%dummy}, %rd1648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r671}, %rd1648;
	}
	shf.r.wrap.b32 	%r672, %r671, %r670, 28;
	shf.r.wrap.b32 	%r673, %r670, %r671, 28;
	mov.b64 	%rd1663, {%r673, %r672};
	shf.l.wrap.b32 	%r674, %r670, %r671, 30;
	shf.l.wrap.b32 	%r675, %r671, %r670, 30;
	mov.b64 	%rd1664, {%r675, %r674};
	xor.b64  	%rd1665, %rd1664, %rd1663;
	shf.l.wrap.b32 	%r676, %r670, %r671, 25;
	shf.l.wrap.b32 	%r677, %r671, %r670, 25;
	mov.b64 	%rd1666, {%r677, %r676};
	xor.b64  	%rd1667, %rd1665, %rd1666;
	and.b64  	%rd1668, %rd1648, %rd1623;
	xor.b64  	%rd1669, %rd1648, %rd1623;
	and.b64  	%rd1670, %rd1669, %rd1598;
	or.b64  	%rd1671, %rd1670, %rd1668;
	add.s64 	%rd1672, %rd1661, %rd1671;
	add.s64 	%rd1673, %rd1672, %rd1667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r678,%dummy}, %rd1662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r679}, %rd1662;
	}
	shf.r.wrap.b32 	%r680, %r679, %r678, 14;
	shf.r.wrap.b32 	%r681, %r678, %r679, 14;
	mov.b64 	%rd1674, {%r681, %r680};
	shf.r.wrap.b32 	%r682, %r679, %r678, 18;
	shf.r.wrap.b32 	%r683, %r678, %r679, 18;
	mov.b64 	%rd1675, {%r683, %r682};
	xor.b64  	%rd1676, %rd1675, %rd1674;
	shf.l.wrap.b32 	%r684, %r678, %r679, 23;
	shf.l.wrap.b32 	%r685, %r679, %r678, 23;
	mov.b64 	%rd1677, {%r685, %r684};
	xor.b64  	%rd1678, %rd1676, %rd1677;
	xor.b64  	%rd1679, %rd1637, %rd1612;
	and.b64  	%rd1680, %rd1662, %rd1679;
	xor.b64  	%rd1681, %rd1680, %rd1612;
	ld.local.u64 	%rd18545, [%rd1+112];
	add.s64 	%rd1682, %rd1587, %rd18545;
	ld.const.u64 	%rd1683, [k_sha512+48];
	add.s64 	%rd1684, %rd1682, %rd1683;
	add.s64 	%rd1685, %rd1684, %rd1681;
	add.s64 	%rd1686, %rd1685, %rd1678;
	add.s64 	%rd1687, %rd1686, %rd1598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r686,%dummy}, %rd1673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r687}, %rd1673;
	}
	shf.r.wrap.b32 	%r688, %r687, %r686, 28;
	shf.r.wrap.b32 	%r689, %r686, %r687, 28;
	mov.b64 	%rd1688, {%r689, %r688};
	shf.l.wrap.b32 	%r690, %r686, %r687, 30;
	shf.l.wrap.b32 	%r691, %r687, %r686, 30;
	mov.b64 	%rd1689, {%r691, %r690};
	xor.b64  	%rd1690, %rd1689, %rd1688;
	shf.l.wrap.b32 	%r692, %r686, %r687, 25;
	shf.l.wrap.b32 	%r693, %r687, %r686, 25;
	mov.b64 	%rd1691, {%r693, %r692};
	xor.b64  	%rd1692, %rd1690, %rd1691;
	and.b64  	%rd1693, %rd1673, %rd1648;
	xor.b64  	%rd1694, %rd1673, %rd1648;
	and.b64  	%rd1695, %rd1694, %rd1623;
	or.b64  	%rd1696, %rd1695, %rd1693;
	add.s64 	%rd1697, %rd1686, %rd1696;
	add.s64 	%rd1698, %rd1697, %rd1692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r694,%dummy}, %rd1687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r695}, %rd1687;
	}
	shf.r.wrap.b32 	%r696, %r695, %r694, 14;
	shf.r.wrap.b32 	%r697, %r694, %r695, 14;
	mov.b64 	%rd1699, {%r697, %r696};
	shf.r.wrap.b32 	%r698, %r695, %r694, 18;
	shf.r.wrap.b32 	%r699, %r694, %r695, 18;
	mov.b64 	%rd1700, {%r699, %r698};
	xor.b64  	%rd1701, %rd1700, %rd1699;
	shf.l.wrap.b32 	%r700, %r694, %r695, 23;
	shf.l.wrap.b32 	%r701, %r695, %r694, 23;
	mov.b64 	%rd1702, {%r701, %r700};
	xor.b64  	%rd1703, %rd1701, %rd1702;
	xor.b64  	%rd1704, %rd1662, %rd1637;
	and.b64  	%rd1705, %rd1687, %rd1704;
	xor.b64  	%rd1706, %rd1705, %rd1637;
	ld.local.u64 	%rd18546, [%rd1+120];
	add.s64 	%rd1707, %rd1612, %rd18546;
	ld.const.u64 	%rd1708, [k_sha512+56];
	add.s64 	%rd1709, %rd1707, %rd1708;
	add.s64 	%rd1710, %rd1709, %rd1706;
	add.s64 	%rd1711, %rd1710, %rd1703;
	add.s64 	%rd1712, %rd1711, %rd1623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r702,%dummy}, %rd1698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r703}, %rd1698;
	}
	shf.r.wrap.b32 	%r704, %r703, %r702, 28;
	shf.r.wrap.b32 	%r705, %r702, %r703, 28;
	mov.b64 	%rd1713, {%r705, %r704};
	shf.l.wrap.b32 	%r706, %r702, %r703, 30;
	shf.l.wrap.b32 	%r707, %r703, %r702, 30;
	mov.b64 	%rd1714, {%r707, %r706};
	xor.b64  	%rd1715, %rd1714, %rd1713;
	shf.l.wrap.b32 	%r708, %r702, %r703, 25;
	shf.l.wrap.b32 	%r709, %r703, %r702, 25;
	mov.b64 	%rd1716, {%r709, %r708};
	xor.b64  	%rd1717, %rd1715, %rd1716;
	and.b64  	%rd1718, %rd1698, %rd1673;
	xor.b64  	%rd1719, %rd1698, %rd1673;
	and.b64  	%rd1720, %rd1719, %rd1648;
	or.b64  	%rd1721, %rd1720, %rd1718;
	add.s64 	%rd1722, %rd1711, %rd1721;
	add.s64 	%rd1723, %rd1722, %rd1717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r710,%dummy}, %rd1712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r711}, %rd1712;
	}
	shf.r.wrap.b32 	%r712, %r711, %r710, 14;
	shf.r.wrap.b32 	%r713, %r710, %r711, 14;
	mov.b64 	%rd1724, {%r713, %r712};
	shf.r.wrap.b32 	%r714, %r711, %r710, 18;
	shf.r.wrap.b32 	%r715, %r710, %r711, 18;
	mov.b64 	%rd1725, {%r715, %r714};
	xor.b64  	%rd1726, %rd1725, %rd1724;
	shf.l.wrap.b32 	%r716, %r710, %r711, 23;
	shf.l.wrap.b32 	%r717, %r711, %r710, 23;
	mov.b64 	%rd1727, {%r717, %r716};
	xor.b64  	%rd1728, %rd1726, %rd1727;
	xor.b64  	%rd1729, %rd1687, %rd1662;
	and.b64  	%rd1730, %rd1712, %rd1729;
	xor.b64  	%rd1731, %rd1730, %rd1662;
	ld.local.u64 	%rd18530, [%rd1+128];
	add.s64 	%rd1732, %rd1637, %rd18530;
	ld.const.u64 	%rd1733, [k_sha512+64];
	add.s64 	%rd1734, %rd1732, %rd1733;
	add.s64 	%rd1735, %rd1734, %rd1731;
	add.s64 	%rd1736, %rd1735, %rd1728;
	add.s64 	%rd1737, %rd1736, %rd1648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r718,%dummy}, %rd1723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r719}, %rd1723;
	}
	shf.r.wrap.b32 	%r720, %r719, %r718, 28;
	shf.r.wrap.b32 	%r721, %r718, %r719, 28;
	mov.b64 	%rd1738, {%r721, %r720};
	shf.l.wrap.b32 	%r722, %r718, %r719, 30;
	shf.l.wrap.b32 	%r723, %r719, %r718, 30;
	mov.b64 	%rd1739, {%r723, %r722};
	xor.b64  	%rd1740, %rd1739, %rd1738;
	shf.l.wrap.b32 	%r724, %r718, %r719, 25;
	shf.l.wrap.b32 	%r725, %r719, %r718, 25;
	mov.b64 	%rd1741, {%r725, %r724};
	xor.b64  	%rd1742, %rd1740, %rd1741;
	and.b64  	%rd1743, %rd1723, %rd1698;
	xor.b64  	%rd1744, %rd1723, %rd1698;
	and.b64  	%rd1745, %rd1744, %rd1673;
	or.b64  	%rd1746, %rd1745, %rd1743;
	add.s64 	%rd1747, %rd1736, %rd1746;
	add.s64 	%rd1748, %rd1747, %rd1742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r726,%dummy}, %rd1737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r727}, %rd1737;
	}
	shf.r.wrap.b32 	%r728, %r727, %r726, 14;
	shf.r.wrap.b32 	%r729, %r726, %r727, 14;
	mov.b64 	%rd1749, {%r729, %r728};
	shf.r.wrap.b32 	%r730, %r727, %r726, 18;
	shf.r.wrap.b32 	%r731, %r726, %r727, 18;
	mov.b64 	%rd1750, {%r731, %r730};
	xor.b64  	%rd1751, %rd1750, %rd1749;
	shf.l.wrap.b32 	%r732, %r726, %r727, 23;
	shf.l.wrap.b32 	%r733, %r727, %r726, 23;
	mov.b64 	%rd1752, {%r733, %r732};
	xor.b64  	%rd1753, %rd1751, %rd1752;
	xor.b64  	%rd1754, %rd1712, %rd1687;
	and.b64  	%rd1755, %rd1737, %rd1754;
	xor.b64  	%rd1756, %rd1755, %rd1687;
	ld.local.u64 	%rd18529, [%rd1+136];
	add.s64 	%rd1757, %rd1662, %rd18529;
	ld.const.u64 	%rd1758, [k_sha512+72];
	add.s64 	%rd1759, %rd1757, %rd1758;
	add.s64 	%rd1760, %rd1759, %rd1756;
	add.s64 	%rd1761, %rd1760, %rd1753;
	add.s64 	%rd1762, %rd1761, %rd1673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r734,%dummy}, %rd1748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r735}, %rd1748;
	}
	shf.r.wrap.b32 	%r736, %r735, %r734, 28;
	shf.r.wrap.b32 	%r737, %r734, %r735, 28;
	mov.b64 	%rd1763, {%r737, %r736};
	shf.l.wrap.b32 	%r738, %r734, %r735, 30;
	shf.l.wrap.b32 	%r739, %r735, %r734, 30;
	mov.b64 	%rd1764, {%r739, %r738};
	xor.b64  	%rd1765, %rd1764, %rd1763;
	shf.l.wrap.b32 	%r740, %r734, %r735, 25;
	shf.l.wrap.b32 	%r741, %r735, %r734, 25;
	mov.b64 	%rd1766, {%r741, %r740};
	xor.b64  	%rd1767, %rd1765, %rd1766;
	and.b64  	%rd1768, %rd1748, %rd1723;
	xor.b64  	%rd1769, %rd1748, %rd1723;
	and.b64  	%rd1770, %rd1769, %rd1698;
	or.b64  	%rd1771, %rd1770, %rd1768;
	add.s64 	%rd1772, %rd1761, %rd1771;
	add.s64 	%rd1773, %rd1772, %rd1767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r742,%dummy}, %rd1762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r743}, %rd1762;
	}
	shf.r.wrap.b32 	%r744, %r743, %r742, 14;
	shf.r.wrap.b32 	%r745, %r742, %r743, 14;
	mov.b64 	%rd1774, {%r745, %r744};
	shf.r.wrap.b32 	%r746, %r743, %r742, 18;
	shf.r.wrap.b32 	%r747, %r742, %r743, 18;
	mov.b64 	%rd1775, {%r747, %r746};
	xor.b64  	%rd1776, %rd1775, %rd1774;
	shf.l.wrap.b32 	%r748, %r742, %r743, 23;
	shf.l.wrap.b32 	%r749, %r743, %r742, 23;
	mov.b64 	%rd1777, {%r749, %r748};
	xor.b64  	%rd1778, %rd1776, %rd1777;
	xor.b64  	%rd1779, %rd1737, %rd1712;
	and.b64  	%rd1780, %rd1762, %rd1779;
	xor.b64  	%rd1781, %rd1780, %rd1712;
	ld.local.u64 	%rd18528, [%rd1+144];
	add.s64 	%rd1782, %rd1687, %rd18528;
	ld.const.u64 	%rd1783, [k_sha512+80];
	add.s64 	%rd1784, %rd1782, %rd1783;
	add.s64 	%rd1785, %rd1784, %rd1781;
	add.s64 	%rd1786, %rd1785, %rd1778;
	add.s64 	%rd1787, %rd1786, %rd1698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r750,%dummy}, %rd1773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r751}, %rd1773;
	}
	shf.r.wrap.b32 	%r752, %r751, %r750, 28;
	shf.r.wrap.b32 	%r753, %r750, %r751, 28;
	mov.b64 	%rd1788, {%r753, %r752};
	shf.l.wrap.b32 	%r754, %r750, %r751, 30;
	shf.l.wrap.b32 	%r755, %r751, %r750, 30;
	mov.b64 	%rd1789, {%r755, %r754};
	xor.b64  	%rd1790, %rd1789, %rd1788;
	shf.l.wrap.b32 	%r756, %r750, %r751, 25;
	shf.l.wrap.b32 	%r757, %r751, %r750, 25;
	mov.b64 	%rd1791, {%r757, %r756};
	xor.b64  	%rd1792, %rd1790, %rd1791;
	and.b64  	%rd1793, %rd1773, %rd1748;
	xor.b64  	%rd1794, %rd1773, %rd1748;
	and.b64  	%rd1795, %rd1794, %rd1723;
	or.b64  	%rd1796, %rd1795, %rd1793;
	add.s64 	%rd1797, %rd1786, %rd1796;
	add.s64 	%rd1798, %rd1797, %rd1792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r758,%dummy}, %rd1787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r759}, %rd1787;
	}
	shf.r.wrap.b32 	%r760, %r759, %r758, 14;
	shf.r.wrap.b32 	%r761, %r758, %r759, 14;
	mov.b64 	%rd1799, {%r761, %r760};
	shf.r.wrap.b32 	%r762, %r759, %r758, 18;
	shf.r.wrap.b32 	%r763, %r758, %r759, 18;
	mov.b64 	%rd1800, {%r763, %r762};
	xor.b64  	%rd1801, %rd1800, %rd1799;
	shf.l.wrap.b32 	%r764, %r758, %r759, 23;
	shf.l.wrap.b32 	%r765, %r759, %r758, 23;
	mov.b64 	%rd1802, {%r765, %r764};
	xor.b64  	%rd1803, %rd1801, %rd1802;
	xor.b64  	%rd1804, %rd1762, %rd1737;
	and.b64  	%rd1805, %rd1787, %rd1804;
	xor.b64  	%rd1806, %rd1805, %rd1737;
	ld.local.u64 	%rd18527, [%rd1+152];
	add.s64 	%rd1807, %rd1712, %rd18527;
	ld.const.u64 	%rd1808, [k_sha512+88];
	add.s64 	%rd1809, %rd1807, %rd1808;
	add.s64 	%rd1810, %rd1809, %rd1806;
	add.s64 	%rd1811, %rd1810, %rd1803;
	add.s64 	%rd1812, %rd1811, %rd1723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r766,%dummy}, %rd1798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r767}, %rd1798;
	}
	shf.r.wrap.b32 	%r768, %r767, %r766, 28;
	shf.r.wrap.b32 	%r769, %r766, %r767, 28;
	mov.b64 	%rd1813, {%r769, %r768};
	shf.l.wrap.b32 	%r770, %r766, %r767, 30;
	shf.l.wrap.b32 	%r771, %r767, %r766, 30;
	mov.b64 	%rd1814, {%r771, %r770};
	xor.b64  	%rd1815, %rd1814, %rd1813;
	shf.l.wrap.b32 	%r772, %r766, %r767, 25;
	shf.l.wrap.b32 	%r773, %r767, %r766, 25;
	mov.b64 	%rd1816, {%r773, %r772};
	xor.b64  	%rd1817, %rd1815, %rd1816;
	and.b64  	%rd1818, %rd1798, %rd1773;
	xor.b64  	%rd1819, %rd1798, %rd1773;
	and.b64  	%rd1820, %rd1819, %rd1748;
	or.b64  	%rd1821, %rd1820, %rd1818;
	add.s64 	%rd1822, %rd1811, %rd1821;
	add.s64 	%rd1823, %rd1822, %rd1817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r774,%dummy}, %rd1812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r775}, %rd1812;
	}
	shf.r.wrap.b32 	%r776, %r775, %r774, 14;
	shf.r.wrap.b32 	%r777, %r774, %r775, 14;
	mov.b64 	%rd1824, {%r777, %r776};
	shf.r.wrap.b32 	%r778, %r775, %r774, 18;
	shf.r.wrap.b32 	%r779, %r774, %r775, 18;
	mov.b64 	%rd1825, {%r779, %r778};
	xor.b64  	%rd1826, %rd1825, %rd1824;
	shf.l.wrap.b32 	%r780, %r774, %r775, 23;
	shf.l.wrap.b32 	%r781, %r775, %r774, 23;
	mov.b64 	%rd1827, {%r781, %r780};
	xor.b64  	%rd1828, %rd1826, %rd1827;
	xor.b64  	%rd1829, %rd1787, %rd1762;
	and.b64  	%rd1830, %rd1812, %rd1829;
	xor.b64  	%rd1831, %rd1830, %rd1762;
	ld.local.u64 	%rd18526, [%rd1+160];
	add.s64 	%rd1832, %rd1737, %rd18526;
	ld.const.u64 	%rd1833, [k_sha512+96];
	add.s64 	%rd1834, %rd1832, %rd1833;
	add.s64 	%rd1835, %rd1834, %rd1831;
	add.s64 	%rd1836, %rd1835, %rd1828;
	add.s64 	%rd18538, %rd1836, %rd1748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r782,%dummy}, %rd1823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r783}, %rd1823;
	}
	shf.r.wrap.b32 	%r784, %r783, %r782, 28;
	shf.r.wrap.b32 	%r785, %r782, %r783, 28;
	mov.b64 	%rd1837, {%r785, %r784};
	shf.l.wrap.b32 	%r786, %r782, %r783, 30;
	shf.l.wrap.b32 	%r787, %r783, %r782, 30;
	mov.b64 	%rd1838, {%r787, %r786};
	xor.b64  	%rd1839, %rd1838, %rd1837;
	shf.l.wrap.b32 	%r788, %r782, %r783, 25;
	shf.l.wrap.b32 	%r789, %r783, %r782, 25;
	mov.b64 	%rd1840, {%r789, %r788};
	xor.b64  	%rd1841, %rd1839, %rd1840;
	and.b64  	%rd1842, %rd1823, %rd1798;
	xor.b64  	%rd1843, %rd1823, %rd1798;
	and.b64  	%rd1844, %rd1843, %rd1773;
	or.b64  	%rd1845, %rd1844, %rd1842;
	add.s64 	%rd1846, %rd1836, %rd1845;
	add.s64 	%rd18534, %rd1846, %rd1841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r790,%dummy}, %rd18538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r791}, %rd18538;
	}
	shf.r.wrap.b32 	%r792, %r791, %r790, 14;
	shf.r.wrap.b32 	%r793, %r790, %r791, 14;
	mov.b64 	%rd1847, {%r793, %r792};
	shf.r.wrap.b32 	%r794, %r791, %r790, 18;
	shf.r.wrap.b32 	%r795, %r790, %r791, 18;
	mov.b64 	%rd1848, {%r795, %r794};
	xor.b64  	%rd1849, %rd1848, %rd1847;
	shf.l.wrap.b32 	%r796, %r790, %r791, 23;
	shf.l.wrap.b32 	%r797, %r791, %r790, 23;
	mov.b64 	%rd1850, {%r797, %r796};
	xor.b64  	%rd1851, %rd1849, %rd1850;
	xor.b64  	%rd1852, %rd1812, %rd1787;
	and.b64  	%rd1853, %rd18538, %rd1852;
	xor.b64  	%rd1854, %rd1853, %rd1787;
	ld.local.u64 	%rd18525, [%rd1+168];
	add.s64 	%rd1855, %rd1762, %rd18525;
	ld.const.u64 	%rd1856, [k_sha512+104];
	add.s64 	%rd1857, %rd1855, %rd1856;
	add.s64 	%rd1858, %rd1857, %rd1854;
	add.s64 	%rd1859, %rd1858, %rd1851;
	add.s64 	%rd18537, %rd1859, %rd1773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r798,%dummy}, %rd18534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r799}, %rd18534;
	}
	shf.r.wrap.b32 	%r800, %r799, %r798, 28;
	shf.r.wrap.b32 	%r801, %r798, %r799, 28;
	mov.b64 	%rd1860, {%r801, %r800};
	shf.l.wrap.b32 	%r802, %r798, %r799, 30;
	shf.l.wrap.b32 	%r803, %r799, %r798, 30;
	mov.b64 	%rd1861, {%r803, %r802};
	xor.b64  	%rd1862, %rd1861, %rd1860;
	shf.l.wrap.b32 	%r804, %r798, %r799, 25;
	shf.l.wrap.b32 	%r805, %r799, %r798, 25;
	mov.b64 	%rd1863, {%r805, %r804};
	xor.b64  	%rd1864, %rd1862, %rd1863;
	and.b64  	%rd1865, %rd18534, %rd1823;
	xor.b64  	%rd1866, %rd18534, %rd1823;
	and.b64  	%rd1867, %rd1866, %rd1798;
	or.b64  	%rd1868, %rd1867, %rd1865;
	add.s64 	%rd1869, %rd1859, %rd1868;
	add.s64 	%rd18533, %rd1869, %rd1864;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r806,%dummy}, %rd18537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r807}, %rd18537;
	}
	shf.r.wrap.b32 	%r808, %r807, %r806, 14;
	shf.r.wrap.b32 	%r809, %r806, %r807, 14;
	mov.b64 	%rd1870, {%r809, %r808};
	shf.r.wrap.b32 	%r810, %r807, %r806, 18;
	shf.r.wrap.b32 	%r811, %r806, %r807, 18;
	mov.b64 	%rd1871, {%r811, %r810};
	xor.b64  	%rd1872, %rd1871, %rd1870;
	shf.l.wrap.b32 	%r812, %r806, %r807, 23;
	shf.l.wrap.b32 	%r813, %r807, %r806, 23;
	mov.b64 	%rd1873, {%r813, %r812};
	xor.b64  	%rd1874, %rd1872, %rd1873;
	xor.b64  	%rd1875, %rd18538, %rd1812;
	and.b64  	%rd1876, %rd18537, %rd1875;
	xor.b64  	%rd1877, %rd1876, %rd1812;
	ld.local.u64 	%rd18524, [%rd1+176];
	add.s64 	%rd1878, %rd1787, %rd18524;
	ld.const.u64 	%rd1879, [k_sha512+112];
	add.s64 	%rd1880, %rd1878, %rd1879;
	add.s64 	%rd1881, %rd1880, %rd1877;
	add.s64 	%rd1882, %rd1881, %rd1874;
	add.s64 	%rd18536, %rd1882, %rd1798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r814,%dummy}, %rd18533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r815}, %rd18533;
	}
	shf.r.wrap.b32 	%r816, %r815, %r814, 28;
	shf.r.wrap.b32 	%r817, %r814, %r815, 28;
	mov.b64 	%rd1883, {%r817, %r816};
	shf.l.wrap.b32 	%r818, %r814, %r815, 30;
	shf.l.wrap.b32 	%r819, %r815, %r814, 30;
	mov.b64 	%rd1884, {%r819, %r818};
	xor.b64  	%rd1885, %rd1884, %rd1883;
	shf.l.wrap.b32 	%r820, %r814, %r815, 25;
	shf.l.wrap.b32 	%r821, %r815, %r814, 25;
	mov.b64 	%rd1886, {%r821, %r820};
	xor.b64  	%rd1887, %rd1885, %rd1886;
	and.b64  	%rd1888, %rd18533, %rd18534;
	xor.b64  	%rd1889, %rd18533, %rd18534;
	and.b64  	%rd1890, %rd1889, %rd1823;
	or.b64  	%rd1891, %rd1890, %rd1888;
	add.s64 	%rd1892, %rd1882, %rd1891;
	add.s64 	%rd18532, %rd1892, %rd1887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r822,%dummy}, %rd18536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r823}, %rd18536;
	}
	shf.r.wrap.b32 	%r824, %r823, %r822, 14;
	shf.r.wrap.b32 	%r825, %r822, %r823, 14;
	mov.b64 	%rd1893, {%r825, %r824};
	shf.r.wrap.b32 	%r826, %r823, %r822, 18;
	shf.r.wrap.b32 	%r827, %r822, %r823, 18;
	mov.b64 	%rd1894, {%r827, %r826};
	xor.b64  	%rd1895, %rd1894, %rd1893;
	shf.l.wrap.b32 	%r828, %r822, %r823, 23;
	shf.l.wrap.b32 	%r829, %r823, %r822, 23;
	mov.b64 	%rd1896, {%r829, %r828};
	xor.b64  	%rd1897, %rd1895, %rd1896;
	xor.b64  	%rd1898, %rd18537, %rd18538;
	and.b64  	%rd1899, %rd18536, %rd1898;
	xor.b64  	%rd1900, %rd1899, %rd18538;
	ld.local.u64 	%rd18523, [%rd1+184];
	add.s64 	%rd1901, %rd1812, %rd18523;
	ld.const.u64 	%rd1902, [k_sha512+120];
	add.s64 	%rd1903, %rd1901, %rd1902;
	add.s64 	%rd1904, %rd1903, %rd1900;
	add.s64 	%rd1905, %rd1904, %rd1897;
	add.s64 	%rd18535, %rd1905, %rd1823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r830,%dummy}, %rd18532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r831}, %rd18532;
	}
	shf.r.wrap.b32 	%r832, %r831, %r830, 28;
	shf.r.wrap.b32 	%r833, %r830, %r831, 28;
	mov.b64 	%rd1906, {%r833, %r832};
	shf.l.wrap.b32 	%r834, %r830, %r831, 30;
	shf.l.wrap.b32 	%r835, %r831, %r830, 30;
	mov.b64 	%rd1907, {%r835, %r834};
	xor.b64  	%rd1908, %rd1907, %rd1906;
	shf.l.wrap.b32 	%r836, %r830, %r831, 25;
	shf.l.wrap.b32 	%r837, %r831, %r830, 25;
	mov.b64 	%rd1909, {%r837, %r836};
	xor.b64  	%rd1910, %rd1908, %rd1909;
	and.b64  	%rd1911, %rd18532, %rd18533;
	xor.b64  	%rd1912, %rd18532, %rd18533;
	and.b64  	%rd1913, %rd1912, %rd18534;
	or.b64  	%rd1914, %rd1913, %rd1911;
	add.s64 	%rd1915, %rd1905, %rd1914;
	add.s64 	%rd18531, %rd1915, %rd1910;
	mov.u32 	%r12885, 16;

BB0_22:
	shr.u64 	%rd1916, %rd18524, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r838,%dummy}, %rd18524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r839}, %rd18524;
	}
	shf.r.wrap.b32 	%r840, %r839, %r838, 19;
	shf.r.wrap.b32 	%r841, %r838, %r839, 19;
	mov.b64 	%rd1917, {%r841, %r840};
	xor.b64  	%rd1918, %rd1917, %rd1916;
	shf.l.wrap.b32 	%r842, %r838, %r839, 3;
	shf.l.wrap.b32 	%r843, %r839, %r838, 3;
	mov.b64 	%rd1919, {%r843, %r842};
	xor.b64  	%rd1920, %rd1918, %rd1919;
	shr.u64 	%rd1921, %rd18540, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r844,%dummy}, %rd18540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r845}, %rd18540;
	}
	shf.r.wrap.b32 	%r846, %r845, %r844, 1;
	shf.r.wrap.b32 	%r847, %r844, %r845, 1;
	mov.b64 	%rd1922, {%r847, %r846};
	xor.b64  	%rd1923, %rd1922, %rd1921;
	shf.r.wrap.b32 	%r848, %r845, %r844, 8;
	shf.r.wrap.b32 	%r849, %r844, %r845, 8;
	mov.b64 	%rd1924, {%r849, %r848};
	xor.b64  	%rd1925, %rd1923, %rd1924;
	add.s64 	%rd1926, %rd18529, %rd18539;
	add.s64 	%rd1927, %rd1926, %rd1920;
	add.s64 	%rd18539, %rd1927, %rd1925;
	shr.u64 	%rd1928, %rd18523, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r850,%dummy}, %rd18523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r851}, %rd18523;
	}
	shf.r.wrap.b32 	%r852, %r851, %r850, 19;
	shf.r.wrap.b32 	%r853, %r850, %r851, 19;
	mov.b64 	%rd1929, {%r853, %r852};
	xor.b64  	%rd1930, %rd1929, %rd1928;
	shf.l.wrap.b32 	%r854, %r850, %r851, 3;
	shf.l.wrap.b32 	%r855, %r851, %r850, 3;
	mov.b64 	%rd1931, {%r855, %r854};
	xor.b64  	%rd1932, %rd1930, %rd1931;
	shr.u64 	%rd1933, %rd18541, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r856,%dummy}, %rd18541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r857}, %rd18541;
	}
	shf.r.wrap.b32 	%r858, %r857, %r856, 1;
	shf.r.wrap.b32 	%r859, %r856, %r857, 1;
	mov.b64 	%rd1934, {%r859, %r858};
	xor.b64  	%rd1935, %rd1934, %rd1933;
	shf.r.wrap.b32 	%r860, %r857, %r856, 8;
	shf.r.wrap.b32 	%r861, %r856, %r857, 8;
	mov.b64 	%rd1936, {%r861, %r860};
	xor.b64  	%rd1937, %rd1935, %rd1936;
	add.s64 	%rd1938, %rd18528, %rd18540;
	add.s64 	%rd1939, %rd1938, %rd1932;
	add.s64 	%rd18540, %rd1939, %rd1937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r862,%dummy}, %rd18539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r863}, %rd18539;
	}
	shf.r.wrap.b32 	%r864, %r863, %r862, 19;
	shf.r.wrap.b32 	%r865, %r862, %r863, 19;
	mov.b64 	%rd1940, {%r865, %r864};
	shf.l.wrap.b32 	%r866, %r862, %r863, 3;
	shf.l.wrap.b32 	%r867, %r863, %r862, 3;
	mov.b64 	%rd1941, {%r867, %r866};
	shr.u64 	%rd1942, %rd18539, 6;
	xor.b64  	%rd1943, %rd1940, %rd1942;
	xor.b64  	%rd1944, %rd1943, %rd1941;
	shr.u64 	%rd1945, %rd18542, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r868,%dummy}, %rd18542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r869}, %rd18542;
	}
	shf.r.wrap.b32 	%r870, %r869, %r868, 1;
	shf.r.wrap.b32 	%r871, %r868, %r869, 1;
	mov.b64 	%rd1946, {%r871, %r870};
	xor.b64  	%rd1947, %rd1946, %rd1945;
	shf.r.wrap.b32 	%r872, %r869, %r868, 8;
	shf.r.wrap.b32 	%r873, %r868, %r869, 8;
	mov.b64 	%rd1948, {%r873, %r872};
	xor.b64  	%rd1949, %rd1947, %rd1948;
	add.s64 	%rd1950, %rd18527, %rd18541;
	add.s64 	%rd1951, %rd1950, %rd1944;
	add.s64 	%rd18541, %rd1951, %rd1949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r874,%dummy}, %rd18540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r875}, %rd18540;
	}
	shf.r.wrap.b32 	%r876, %r875, %r874, 19;
	shf.r.wrap.b32 	%r877, %r874, %r875, 19;
	mov.b64 	%rd1952, {%r877, %r876};
	shf.l.wrap.b32 	%r878, %r874, %r875, 3;
	shf.l.wrap.b32 	%r879, %r875, %r874, 3;
	mov.b64 	%rd1953, {%r879, %r878};
	shr.u64 	%rd1954, %rd18540, 6;
	xor.b64  	%rd1955, %rd1952, %rd1954;
	xor.b64  	%rd1956, %rd1955, %rd1953;
	shr.u64 	%rd1957, %rd18543, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r880,%dummy}, %rd18543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r881}, %rd18543;
	}
	shf.r.wrap.b32 	%r882, %r881, %r880, 1;
	shf.r.wrap.b32 	%r883, %r880, %r881, 1;
	mov.b64 	%rd1958, {%r883, %r882};
	xor.b64  	%rd1959, %rd1958, %rd1957;
	shf.r.wrap.b32 	%r884, %r881, %r880, 8;
	shf.r.wrap.b32 	%r885, %r880, %r881, 8;
	mov.b64 	%rd1960, {%r885, %r884};
	xor.b64  	%rd1961, %rd1959, %rd1960;
	add.s64 	%rd1962, %rd18526, %rd18542;
	add.s64 	%rd1963, %rd1962, %rd1956;
	add.s64 	%rd18542, %rd1963, %rd1961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r886,%dummy}, %rd18541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r887}, %rd18541;
	}
	shf.r.wrap.b32 	%r888, %r887, %r886, 19;
	shf.r.wrap.b32 	%r889, %r886, %r887, 19;
	mov.b64 	%rd1964, {%r889, %r888};
	shf.l.wrap.b32 	%r890, %r886, %r887, 3;
	shf.l.wrap.b32 	%r891, %r887, %r886, 3;
	mov.b64 	%rd1965, {%r891, %r890};
	shr.u64 	%rd1966, %rd18541, 6;
	xor.b64  	%rd1967, %rd1964, %rd1966;
	xor.b64  	%rd1968, %rd1967, %rd1965;
	shr.u64 	%rd1969, %rd18544, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r892,%dummy}, %rd18544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r893}, %rd18544;
	}
	shf.r.wrap.b32 	%r894, %r893, %r892, 1;
	shf.r.wrap.b32 	%r895, %r892, %r893, 1;
	mov.b64 	%rd1970, {%r895, %r894};
	xor.b64  	%rd1971, %rd1970, %rd1969;
	shf.r.wrap.b32 	%r896, %r893, %r892, 8;
	shf.r.wrap.b32 	%r897, %r892, %r893, 8;
	mov.b64 	%rd1972, {%r897, %r896};
	xor.b64  	%rd1973, %rd1971, %rd1972;
	add.s64 	%rd1974, %rd18525, %rd18543;
	add.s64 	%rd1975, %rd1974, %rd1968;
	add.s64 	%rd18543, %rd1975, %rd1973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r898,%dummy}, %rd18542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r899}, %rd18542;
	}
	shf.r.wrap.b32 	%r900, %r899, %r898, 19;
	shf.r.wrap.b32 	%r901, %r898, %r899, 19;
	mov.b64 	%rd1976, {%r901, %r900};
	shf.l.wrap.b32 	%r902, %r898, %r899, 3;
	shf.l.wrap.b32 	%r903, %r899, %r898, 3;
	mov.b64 	%rd1977, {%r903, %r902};
	shr.u64 	%rd1978, %rd18542, 6;
	xor.b64  	%rd1979, %rd1976, %rd1978;
	xor.b64  	%rd1980, %rd1979, %rd1977;
	shr.u64 	%rd1981, %rd18545, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r904,%dummy}, %rd18545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r905}, %rd18545;
	}
	shf.r.wrap.b32 	%r906, %r905, %r904, 1;
	shf.r.wrap.b32 	%r907, %r904, %r905, 1;
	mov.b64 	%rd1982, {%r907, %r906};
	xor.b64  	%rd1983, %rd1982, %rd1981;
	shf.r.wrap.b32 	%r908, %r905, %r904, 8;
	shf.r.wrap.b32 	%r909, %r904, %r905, 8;
	mov.b64 	%rd1984, {%r909, %r908};
	xor.b64  	%rd1985, %rd1983, %rd1984;
	add.s64 	%rd1986, %rd18524, %rd18544;
	add.s64 	%rd1987, %rd1986, %rd1980;
	add.s64 	%rd18544, %rd1987, %rd1985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r910,%dummy}, %rd18543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r911}, %rd18543;
	}
	shf.r.wrap.b32 	%r912, %r911, %r910, 19;
	shf.r.wrap.b32 	%r913, %r910, %r911, 19;
	mov.b64 	%rd1988, {%r913, %r912};
	shf.l.wrap.b32 	%r914, %r910, %r911, 3;
	shf.l.wrap.b32 	%r915, %r911, %r910, 3;
	mov.b64 	%rd1989, {%r915, %r914};
	shr.u64 	%rd1990, %rd18543, 6;
	xor.b64  	%rd1991, %rd1988, %rd1990;
	xor.b64  	%rd1992, %rd1991, %rd1989;
	shr.u64 	%rd1993, %rd18546, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r916,%dummy}, %rd18546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r917}, %rd18546;
	}
	shf.r.wrap.b32 	%r918, %r917, %r916, 1;
	shf.r.wrap.b32 	%r919, %r916, %r917, 1;
	mov.b64 	%rd1994, {%r919, %r918};
	xor.b64  	%rd1995, %rd1994, %rd1993;
	shf.r.wrap.b32 	%r920, %r917, %r916, 8;
	shf.r.wrap.b32 	%r921, %r916, %r917, 8;
	mov.b64 	%rd1996, {%r921, %r920};
	xor.b64  	%rd1997, %rd1995, %rd1996;
	add.s64 	%rd1998, %rd18523, %rd18545;
	add.s64 	%rd1999, %rd1998, %rd1992;
	add.s64 	%rd18545, %rd1999, %rd1997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r922,%dummy}, %rd18544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r923}, %rd18544;
	}
	shf.r.wrap.b32 	%r924, %r923, %r922, 19;
	shf.r.wrap.b32 	%r925, %r922, %r923, 19;
	mov.b64 	%rd2000, {%r925, %r924};
	shf.l.wrap.b32 	%r926, %r922, %r923, 3;
	shf.l.wrap.b32 	%r927, %r923, %r922, 3;
	mov.b64 	%rd2001, {%r927, %r926};
	shr.u64 	%rd2002, %rd18544, 6;
	xor.b64  	%rd2003, %rd2000, %rd2002;
	xor.b64  	%rd2004, %rd2003, %rd2001;
	shr.u64 	%rd2005, %rd18530, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r928,%dummy}, %rd18530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r929}, %rd18530;
	}
	shf.r.wrap.b32 	%r930, %r929, %r928, 1;
	shf.r.wrap.b32 	%r931, %r928, %r929, 1;
	mov.b64 	%rd2006, {%r931, %r930};
	xor.b64  	%rd2007, %rd2006, %rd2005;
	shf.r.wrap.b32 	%r932, %r929, %r928, 8;
	shf.r.wrap.b32 	%r933, %r928, %r929, 8;
	mov.b64 	%rd2008, {%r933, %r932};
	xor.b64  	%rd2009, %rd2007, %rd2008;
	add.s64 	%rd2010, %rd18539, %rd18546;
	add.s64 	%rd2011, %rd2010, %rd2004;
	add.s64 	%rd18546, %rd2011, %rd2009;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r934,%dummy}, %rd18545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r935}, %rd18545;
	}
	shf.r.wrap.b32 	%r936, %r935, %r934, 19;
	shf.r.wrap.b32 	%r937, %r934, %r935, 19;
	mov.b64 	%rd2012, {%r937, %r936};
	shf.l.wrap.b32 	%r938, %r934, %r935, 3;
	shf.l.wrap.b32 	%r939, %r935, %r934, 3;
	mov.b64 	%rd2013, {%r939, %r938};
	shr.u64 	%rd2014, %rd18545, 6;
	xor.b64  	%rd2015, %rd2012, %rd2014;
	xor.b64  	%rd2016, %rd2015, %rd2013;
	shr.u64 	%rd2017, %rd18529, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r940,%dummy}, %rd18529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r941}, %rd18529;
	}
	shf.r.wrap.b32 	%r942, %r941, %r940, 1;
	shf.r.wrap.b32 	%r943, %r940, %r941, 1;
	mov.b64 	%rd2018, {%r943, %r942};
	xor.b64  	%rd2019, %rd2018, %rd2017;
	shf.r.wrap.b32 	%r944, %r941, %r940, 8;
	shf.r.wrap.b32 	%r945, %r940, %r941, 8;
	mov.b64 	%rd2020, {%r945, %r944};
	xor.b64  	%rd2021, %rd2019, %rd2020;
	add.s64 	%rd2022, %rd18540, %rd18530;
	add.s64 	%rd2023, %rd2022, %rd2016;
	add.s64 	%rd18530, %rd2023, %rd2021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r946,%dummy}, %rd18546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r947}, %rd18546;
	}
	shf.r.wrap.b32 	%r948, %r947, %r946, 19;
	shf.r.wrap.b32 	%r949, %r946, %r947, 19;
	mov.b64 	%rd2024, {%r949, %r948};
	shf.l.wrap.b32 	%r950, %r946, %r947, 3;
	shf.l.wrap.b32 	%r951, %r947, %r946, 3;
	mov.b64 	%rd2025, {%r951, %r950};
	shr.u64 	%rd2026, %rd18546, 6;
	xor.b64  	%rd2027, %rd2024, %rd2026;
	xor.b64  	%rd2028, %rd2027, %rd2025;
	shr.u64 	%rd2029, %rd18528, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r952,%dummy}, %rd18528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r953}, %rd18528;
	}
	shf.r.wrap.b32 	%r954, %r953, %r952, 1;
	shf.r.wrap.b32 	%r955, %r952, %r953, 1;
	mov.b64 	%rd2030, {%r955, %r954};
	xor.b64  	%rd2031, %rd2030, %rd2029;
	shf.r.wrap.b32 	%r956, %r953, %r952, 8;
	shf.r.wrap.b32 	%r957, %r952, %r953, 8;
	mov.b64 	%rd2032, {%r957, %r956};
	xor.b64  	%rd2033, %rd2031, %rd2032;
	add.s64 	%rd2034, %rd18541, %rd18529;
	add.s64 	%rd2035, %rd2034, %rd2028;
	add.s64 	%rd18529, %rd2035, %rd2033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r958,%dummy}, %rd18530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r959}, %rd18530;
	}
	shf.r.wrap.b32 	%r960, %r959, %r958, 19;
	shf.r.wrap.b32 	%r961, %r958, %r959, 19;
	mov.b64 	%rd2036, {%r961, %r960};
	shf.l.wrap.b32 	%r962, %r958, %r959, 3;
	shf.l.wrap.b32 	%r963, %r959, %r958, 3;
	mov.b64 	%rd2037, {%r963, %r962};
	shr.u64 	%rd2038, %rd18530, 6;
	xor.b64  	%rd2039, %rd2036, %rd2038;
	xor.b64  	%rd2040, %rd2039, %rd2037;
	shr.u64 	%rd2041, %rd18527, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r964,%dummy}, %rd18527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r965}, %rd18527;
	}
	shf.r.wrap.b32 	%r966, %r965, %r964, 1;
	shf.r.wrap.b32 	%r967, %r964, %r965, 1;
	mov.b64 	%rd2042, {%r967, %r966};
	xor.b64  	%rd2043, %rd2042, %rd2041;
	shf.r.wrap.b32 	%r968, %r965, %r964, 8;
	shf.r.wrap.b32 	%r969, %r964, %r965, 8;
	mov.b64 	%rd2044, {%r969, %r968};
	xor.b64  	%rd2045, %rd2043, %rd2044;
	add.s64 	%rd2046, %rd18542, %rd18528;
	add.s64 	%rd2047, %rd2046, %rd2040;
	add.s64 	%rd18528, %rd2047, %rd2045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r970,%dummy}, %rd18529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r971}, %rd18529;
	}
	shf.r.wrap.b32 	%r972, %r971, %r970, 19;
	shf.r.wrap.b32 	%r973, %r970, %r971, 19;
	mov.b64 	%rd2048, {%r973, %r972};
	shf.l.wrap.b32 	%r974, %r970, %r971, 3;
	shf.l.wrap.b32 	%r975, %r971, %r970, 3;
	mov.b64 	%rd2049, {%r975, %r974};
	shr.u64 	%rd2050, %rd18529, 6;
	xor.b64  	%rd2051, %rd2048, %rd2050;
	xor.b64  	%rd2052, %rd2051, %rd2049;
	shr.u64 	%rd2053, %rd18526, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r976,%dummy}, %rd18526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r977}, %rd18526;
	}
	shf.r.wrap.b32 	%r978, %r977, %r976, 1;
	shf.r.wrap.b32 	%r979, %r976, %r977, 1;
	mov.b64 	%rd2054, {%r979, %r978};
	xor.b64  	%rd2055, %rd2054, %rd2053;
	shf.r.wrap.b32 	%r980, %r977, %r976, 8;
	shf.r.wrap.b32 	%r981, %r976, %r977, 8;
	mov.b64 	%rd2056, {%r981, %r980};
	xor.b64  	%rd2057, %rd2055, %rd2056;
	add.s64 	%rd2058, %rd18543, %rd18527;
	add.s64 	%rd2059, %rd2058, %rd2052;
	add.s64 	%rd18527, %rd2059, %rd2057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r982,%dummy}, %rd18528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r983}, %rd18528;
	}
	shf.r.wrap.b32 	%r984, %r983, %r982, 19;
	shf.r.wrap.b32 	%r985, %r982, %r983, 19;
	mov.b64 	%rd2060, {%r985, %r984};
	shf.l.wrap.b32 	%r986, %r982, %r983, 3;
	shf.l.wrap.b32 	%r987, %r983, %r982, 3;
	mov.b64 	%rd2061, {%r987, %r986};
	shr.u64 	%rd2062, %rd18528, 6;
	xor.b64  	%rd2063, %rd2060, %rd2062;
	xor.b64  	%rd2064, %rd2063, %rd2061;
	shr.u64 	%rd2065, %rd18525, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r988,%dummy}, %rd18525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r989}, %rd18525;
	}
	shf.r.wrap.b32 	%r990, %r989, %r988, 1;
	shf.r.wrap.b32 	%r991, %r988, %r989, 1;
	mov.b64 	%rd2066, {%r991, %r990};
	xor.b64  	%rd2067, %rd2066, %rd2065;
	shf.r.wrap.b32 	%r992, %r989, %r988, 8;
	shf.r.wrap.b32 	%r993, %r988, %r989, 8;
	mov.b64 	%rd2068, {%r993, %r992};
	xor.b64  	%rd2069, %rd2067, %rd2068;
	add.s64 	%rd2070, %rd18544, %rd18526;
	add.s64 	%rd2071, %rd2070, %rd2064;
	add.s64 	%rd18526, %rd2071, %rd2069;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r994,%dummy}, %rd18527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r995}, %rd18527;
	}
	shf.r.wrap.b32 	%r996, %r995, %r994, 19;
	shf.r.wrap.b32 	%r997, %r994, %r995, 19;
	mov.b64 	%rd2072, {%r997, %r996};
	shf.l.wrap.b32 	%r998, %r994, %r995, 3;
	shf.l.wrap.b32 	%r999, %r995, %r994, 3;
	mov.b64 	%rd2073, {%r999, %r998};
	shr.u64 	%rd2074, %rd18527, 6;
	xor.b64  	%rd2075, %rd2072, %rd2074;
	xor.b64  	%rd2076, %rd2075, %rd2073;
	shr.u64 	%rd2077, %rd18524, 7;
	shf.r.wrap.b32 	%r1000, %r839, %r838, 1;
	shf.r.wrap.b32 	%r1001, %r838, %r839, 1;
	mov.b64 	%rd2078, {%r1001, %r1000};
	xor.b64  	%rd2079, %rd2078, %rd2077;
	shf.r.wrap.b32 	%r1002, %r839, %r838, 8;
	shf.r.wrap.b32 	%r1003, %r838, %r839, 8;
	mov.b64 	%rd2080, {%r1003, %r1002};
	xor.b64  	%rd2081, %rd2079, %rd2080;
	add.s64 	%rd2082, %rd18545, %rd18525;
	add.s64 	%rd2083, %rd2082, %rd2076;
	add.s64 	%rd18525, %rd2083, %rd2081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1004,%dummy}, %rd18526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1005}, %rd18526;
	}
	shf.r.wrap.b32 	%r1006, %r1005, %r1004, 19;
	shf.r.wrap.b32 	%r1007, %r1004, %r1005, 19;
	mov.b64 	%rd2084, {%r1007, %r1006};
	shf.l.wrap.b32 	%r1008, %r1004, %r1005, 3;
	shf.l.wrap.b32 	%r1009, %r1005, %r1004, 3;
	mov.b64 	%rd2085, {%r1009, %r1008};
	shr.u64 	%rd2086, %rd18526, 6;
	xor.b64  	%rd2087, %rd2084, %rd2086;
	xor.b64  	%rd2088, %rd2087, %rd2085;
	shr.u64 	%rd2089, %rd18523, 7;
	shf.r.wrap.b32 	%r1010, %r851, %r850, 1;
	shf.r.wrap.b32 	%r1011, %r850, %r851, 1;
	mov.b64 	%rd2090, {%r1011, %r1010};
	xor.b64  	%rd2091, %rd2090, %rd2089;
	shf.r.wrap.b32 	%r1012, %r851, %r850, 8;
	shf.r.wrap.b32 	%r1013, %r850, %r851, 8;
	mov.b64 	%rd2092, {%r1013, %r1012};
	xor.b64  	%rd2093, %rd2091, %rd2092;
	add.s64 	%rd2094, %rd18546, %rd18524;
	add.s64 	%rd2095, %rd2094, %rd2088;
	add.s64 	%rd18524, %rd2095, %rd2093;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1014,%dummy}, %rd18525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1015}, %rd18525;
	}
	shf.r.wrap.b32 	%r1016, %r1015, %r1014, 19;
	shf.r.wrap.b32 	%r1017, %r1014, %r1015, 19;
	mov.b64 	%rd2096, {%r1017, %r1016};
	shf.l.wrap.b32 	%r1018, %r1014, %r1015, 3;
	shf.l.wrap.b32 	%r1019, %r1015, %r1014, 3;
	mov.b64 	%rd2097, {%r1019, %r1018};
	shr.u64 	%rd2098, %rd18525, 6;
	xor.b64  	%rd2099, %rd2096, %rd2098;
	xor.b64  	%rd2100, %rd2099, %rd2097;
	shf.r.wrap.b32 	%r1020, %r863, %r862, 1;
	shf.r.wrap.b32 	%r1021, %r862, %r863, 1;
	mov.b64 	%rd2101, {%r1021, %r1020};
	shf.r.wrap.b32 	%r1022, %r863, %r862, 8;
	shf.r.wrap.b32 	%r1023, %r862, %r863, 8;
	mov.b64 	%rd2102, {%r1023, %r1022};
	shr.u64 	%rd2103, %rd18539, 7;
	xor.b64  	%rd2104, %rd2101, %rd2103;
	xor.b64  	%rd2105, %rd2104, %rd2102;
	add.s64 	%rd2106, %rd18530, %rd18523;
	add.s64 	%rd2107, %rd2106, %rd2100;
	add.s64 	%rd18523, %rd2107, %rd2105;
	mul.wide.s32 	%rd2108, %r12885, 8;
	mov.u64 	%rd2109, k_sha512;
	add.s64 	%rd2110, %rd2109, %rd2108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1024,%dummy}, %rd18535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1025}, %rd18535;
	}
	shf.r.wrap.b32 	%r1026, %r1025, %r1024, 18;
	shf.r.wrap.b32 	%r1027, %r1024, %r1025, 18;
	mov.b64 	%rd2111, {%r1027, %r1026};
	shf.r.wrap.b32 	%r1028, %r1025, %r1024, 14;
	shf.r.wrap.b32 	%r1029, %r1024, %r1025, 14;
	mov.b64 	%rd2112, {%r1029, %r1028};
	xor.b64  	%rd2113, %rd2111, %rd2112;
	shf.l.wrap.b32 	%r1030, %r1024, %r1025, 23;
	shf.l.wrap.b32 	%r1031, %r1025, %r1024, 23;
	mov.b64 	%rd2114, {%r1031, %r1030};
	xor.b64  	%rd2115, %rd2113, %rd2114;
	xor.b64  	%rd2116, %rd18536, %rd18537;
	and.b64  	%rd2117, %rd18535, %rd2116;
	xor.b64  	%rd2118, %rd2117, %rd18537;
	add.s64 	%rd2119, %rd2118, %rd18538;
	add.s64 	%rd2120, %rd2119, %rd18539;
	ld.const.u64 	%rd2121, [%rd2110];
	add.s64 	%rd2122, %rd2120, %rd2121;
	add.s64 	%rd2123, %rd2122, %rd2115;
	add.s64 	%rd2124, %rd2123, %rd18534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1032}, %rd18531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1033,%dummy}, %rd18531;
	}
	shf.l.wrap.b32 	%r1034, %r1033, %r1032, 30;
	shf.l.wrap.b32 	%r1035, %r1032, %r1033, 30;
	mov.b64 	%rd2125, {%r1035, %r1034};
	shf.r.wrap.b32 	%r1036, %r1032, %r1033, 28;
	shf.r.wrap.b32 	%r1037, %r1033, %r1032, 28;
	mov.b64 	%rd2126, {%r1037, %r1036};
	xor.b64  	%rd2127, %rd2125, %rd2126;
	shf.l.wrap.b32 	%r1038, %r1033, %r1032, 25;
	shf.l.wrap.b32 	%r1039, %r1032, %r1033, 25;
	mov.b64 	%rd2128, {%r1039, %r1038};
	xor.b64  	%rd2129, %rd2127, %rd2128;
	xor.b64  	%rd2130, %rd18531, %rd18532;
	and.b64  	%rd2131, %rd2130, %rd18533;
	and.b64  	%rd2132, %rd18531, %rd18532;
	or.b64  	%rd2133, %rd2131, %rd2132;
	add.s64 	%rd2134, %rd2123, %rd2133;
	add.s64 	%rd2135, %rd2134, %rd2129;
	add.s32 	%r1040, %r12885, 1;
	mul.wide.s32 	%rd2136, %r1040, 8;
	add.s64 	%rd2137, %rd2109, %rd2136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1041,%dummy}, %rd2124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1042}, %rd2124;
	}
	shf.r.wrap.b32 	%r1043, %r1042, %r1041, 14;
	shf.r.wrap.b32 	%r1044, %r1041, %r1042, 14;
	mov.b64 	%rd2138, {%r1044, %r1043};
	shf.r.wrap.b32 	%r1045, %r1042, %r1041, 18;
	shf.r.wrap.b32 	%r1046, %r1041, %r1042, 18;
	mov.b64 	%rd2139, {%r1046, %r1045};
	xor.b64  	%rd2140, %rd2139, %rd2138;
	shf.l.wrap.b32 	%r1047, %r1041, %r1042, 23;
	shf.l.wrap.b32 	%r1048, %r1042, %r1041, 23;
	mov.b64 	%rd2141, {%r1048, %r1047};
	xor.b64  	%rd2142, %rd2140, %rd2141;
	xor.b64  	%rd2143, %rd18535, %rd18536;
	and.b64  	%rd2144, %rd2124, %rd2143;
	xor.b64  	%rd2145, %rd2144, %rd18536;
	add.s64 	%rd2146, %rd18540, %rd18537;
	ld.const.u64 	%rd2147, [%rd2137];
	add.s64 	%rd2148, %rd2146, %rd2147;
	add.s64 	%rd2149, %rd2148, %rd2145;
	add.s64 	%rd2150, %rd2149, %rd2142;
	add.s64 	%rd2151, %rd2150, %rd18533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1049,%dummy}, %rd2135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1050}, %rd2135;
	}
	shf.r.wrap.b32 	%r1051, %r1050, %r1049, 28;
	shf.r.wrap.b32 	%r1052, %r1049, %r1050, 28;
	mov.b64 	%rd2152, {%r1052, %r1051};
	shf.l.wrap.b32 	%r1053, %r1049, %r1050, 30;
	shf.l.wrap.b32 	%r1054, %r1050, %r1049, 30;
	mov.b64 	%rd2153, {%r1054, %r1053};
	xor.b64  	%rd2154, %rd2153, %rd2152;
	shf.l.wrap.b32 	%r1055, %r1049, %r1050, 25;
	shf.l.wrap.b32 	%r1056, %r1050, %r1049, 25;
	mov.b64 	%rd2155, {%r1056, %r1055};
	xor.b64  	%rd2156, %rd2154, %rd2155;
	and.b64  	%rd2157, %rd2135, %rd18531;
	xor.b64  	%rd2158, %rd2135, %rd18531;
	and.b64  	%rd2159, %rd2158, %rd18532;
	or.b64  	%rd2160, %rd2159, %rd2157;
	add.s64 	%rd2161, %rd2150, %rd2160;
	add.s64 	%rd2162, %rd2161, %rd2156;
	add.s32 	%r1057, %r12885, 2;
	mul.wide.s32 	%rd2163, %r1057, 8;
	add.s64 	%rd2164, %rd2109, %rd2163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1058,%dummy}, %rd2151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1059}, %rd2151;
	}
	shf.r.wrap.b32 	%r1060, %r1059, %r1058, 14;
	shf.r.wrap.b32 	%r1061, %r1058, %r1059, 14;
	mov.b64 	%rd2165, {%r1061, %r1060};
	shf.r.wrap.b32 	%r1062, %r1059, %r1058, 18;
	shf.r.wrap.b32 	%r1063, %r1058, %r1059, 18;
	mov.b64 	%rd2166, {%r1063, %r1062};
	xor.b64  	%rd2167, %rd2166, %rd2165;
	shf.l.wrap.b32 	%r1064, %r1058, %r1059, 23;
	shf.l.wrap.b32 	%r1065, %r1059, %r1058, 23;
	mov.b64 	%rd2168, {%r1065, %r1064};
	xor.b64  	%rd2169, %rd2167, %rd2168;
	xor.b64  	%rd2170, %rd2124, %rd18535;
	and.b64  	%rd2171, %rd2151, %rd2170;
	xor.b64  	%rd2172, %rd2171, %rd18535;
	add.s64 	%rd2173, %rd18541, %rd18536;
	ld.const.u64 	%rd2174, [%rd2164];
	add.s64 	%rd2175, %rd2173, %rd2174;
	add.s64 	%rd2176, %rd2175, %rd2172;
	add.s64 	%rd2177, %rd2176, %rd2169;
	add.s64 	%rd2178, %rd2177, %rd18532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1066,%dummy}, %rd2162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1067}, %rd2162;
	}
	shf.r.wrap.b32 	%r1068, %r1067, %r1066, 28;
	shf.r.wrap.b32 	%r1069, %r1066, %r1067, 28;
	mov.b64 	%rd2179, {%r1069, %r1068};
	shf.l.wrap.b32 	%r1070, %r1066, %r1067, 30;
	shf.l.wrap.b32 	%r1071, %r1067, %r1066, 30;
	mov.b64 	%rd2180, {%r1071, %r1070};
	xor.b64  	%rd2181, %rd2180, %rd2179;
	shf.l.wrap.b32 	%r1072, %r1066, %r1067, 25;
	shf.l.wrap.b32 	%r1073, %r1067, %r1066, 25;
	mov.b64 	%rd2182, {%r1073, %r1072};
	xor.b64  	%rd2183, %rd2181, %rd2182;
	and.b64  	%rd2184, %rd2162, %rd2135;
	xor.b64  	%rd2185, %rd2162, %rd2135;
	and.b64  	%rd2186, %rd2185, %rd18531;
	or.b64  	%rd2187, %rd2186, %rd2184;
	add.s64 	%rd2188, %rd2177, %rd2187;
	add.s64 	%rd2189, %rd2188, %rd2183;
	add.s32 	%r1074, %r12885, 3;
	mul.wide.s32 	%rd2190, %r1074, 8;
	add.s64 	%rd2191, %rd2109, %rd2190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1075,%dummy}, %rd2178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1076}, %rd2178;
	}
	shf.r.wrap.b32 	%r1077, %r1076, %r1075, 14;
	shf.r.wrap.b32 	%r1078, %r1075, %r1076, 14;
	mov.b64 	%rd2192, {%r1078, %r1077};
	shf.r.wrap.b32 	%r1079, %r1076, %r1075, 18;
	shf.r.wrap.b32 	%r1080, %r1075, %r1076, 18;
	mov.b64 	%rd2193, {%r1080, %r1079};
	xor.b64  	%rd2194, %rd2193, %rd2192;
	shf.l.wrap.b32 	%r1081, %r1075, %r1076, 23;
	shf.l.wrap.b32 	%r1082, %r1076, %r1075, 23;
	mov.b64 	%rd2195, {%r1082, %r1081};
	xor.b64  	%rd2196, %rd2194, %rd2195;
	xor.b64  	%rd2197, %rd2151, %rd2124;
	and.b64  	%rd2198, %rd2178, %rd2197;
	xor.b64  	%rd2199, %rd2198, %rd2124;
	add.s64 	%rd2200, %rd18542, %rd18535;
	ld.const.u64 	%rd2201, [%rd2191];
	add.s64 	%rd2202, %rd2200, %rd2201;
	add.s64 	%rd2203, %rd2202, %rd2199;
	add.s64 	%rd2204, %rd2203, %rd2196;
	add.s64 	%rd2205, %rd2204, %rd18531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1083,%dummy}, %rd2189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1084}, %rd2189;
	}
	shf.r.wrap.b32 	%r1085, %r1084, %r1083, 28;
	shf.r.wrap.b32 	%r1086, %r1083, %r1084, 28;
	mov.b64 	%rd2206, {%r1086, %r1085};
	shf.l.wrap.b32 	%r1087, %r1083, %r1084, 30;
	shf.l.wrap.b32 	%r1088, %r1084, %r1083, 30;
	mov.b64 	%rd2207, {%r1088, %r1087};
	xor.b64  	%rd2208, %rd2207, %rd2206;
	shf.l.wrap.b32 	%r1089, %r1083, %r1084, 25;
	shf.l.wrap.b32 	%r1090, %r1084, %r1083, 25;
	mov.b64 	%rd2209, {%r1090, %r1089};
	xor.b64  	%rd2210, %rd2208, %rd2209;
	and.b64  	%rd2211, %rd2189, %rd2162;
	xor.b64  	%rd2212, %rd2189, %rd2162;
	and.b64  	%rd2213, %rd2212, %rd2135;
	or.b64  	%rd2214, %rd2213, %rd2211;
	add.s64 	%rd2215, %rd2204, %rd2214;
	add.s64 	%rd2216, %rd2215, %rd2210;
	add.s32 	%r1091, %r12885, 4;
	mul.wide.s32 	%rd2217, %r1091, 8;
	add.s64 	%rd2218, %rd2109, %rd2217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1092,%dummy}, %rd2205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1093}, %rd2205;
	}
	shf.r.wrap.b32 	%r1094, %r1093, %r1092, 14;
	shf.r.wrap.b32 	%r1095, %r1092, %r1093, 14;
	mov.b64 	%rd2219, {%r1095, %r1094};
	shf.r.wrap.b32 	%r1096, %r1093, %r1092, 18;
	shf.r.wrap.b32 	%r1097, %r1092, %r1093, 18;
	mov.b64 	%rd2220, {%r1097, %r1096};
	xor.b64  	%rd2221, %rd2220, %rd2219;
	shf.l.wrap.b32 	%r1098, %r1092, %r1093, 23;
	shf.l.wrap.b32 	%r1099, %r1093, %r1092, 23;
	mov.b64 	%rd2222, {%r1099, %r1098};
	xor.b64  	%rd2223, %rd2221, %rd2222;
	xor.b64  	%rd2224, %rd2178, %rd2151;
	and.b64  	%rd2225, %rd2205, %rd2224;
	xor.b64  	%rd2226, %rd2225, %rd2151;
	add.s64 	%rd2227, %rd2124, %rd18543;
	ld.const.u64 	%rd2228, [%rd2218];
	add.s64 	%rd2229, %rd2227, %rd2228;
	add.s64 	%rd2230, %rd2229, %rd2226;
	add.s64 	%rd2231, %rd2230, %rd2223;
	add.s64 	%rd2232, %rd2231, %rd2135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1100,%dummy}, %rd2216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1101}, %rd2216;
	}
	shf.r.wrap.b32 	%r1102, %r1101, %r1100, 28;
	shf.r.wrap.b32 	%r1103, %r1100, %r1101, 28;
	mov.b64 	%rd2233, {%r1103, %r1102};
	shf.l.wrap.b32 	%r1104, %r1100, %r1101, 30;
	shf.l.wrap.b32 	%r1105, %r1101, %r1100, 30;
	mov.b64 	%rd2234, {%r1105, %r1104};
	xor.b64  	%rd2235, %rd2234, %rd2233;
	shf.l.wrap.b32 	%r1106, %r1100, %r1101, 25;
	shf.l.wrap.b32 	%r1107, %r1101, %r1100, 25;
	mov.b64 	%rd2236, {%r1107, %r1106};
	xor.b64  	%rd2237, %rd2235, %rd2236;
	and.b64  	%rd2238, %rd2216, %rd2189;
	xor.b64  	%rd2239, %rd2216, %rd2189;
	and.b64  	%rd2240, %rd2239, %rd2162;
	or.b64  	%rd2241, %rd2240, %rd2238;
	add.s64 	%rd2242, %rd2231, %rd2241;
	add.s64 	%rd2243, %rd2242, %rd2237;
	add.s32 	%r1108, %r12885, 5;
	mul.wide.s32 	%rd2244, %r1108, 8;
	add.s64 	%rd2245, %rd2109, %rd2244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1109,%dummy}, %rd2232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1110}, %rd2232;
	}
	shf.r.wrap.b32 	%r1111, %r1110, %r1109, 14;
	shf.r.wrap.b32 	%r1112, %r1109, %r1110, 14;
	mov.b64 	%rd2246, {%r1112, %r1111};
	shf.r.wrap.b32 	%r1113, %r1110, %r1109, 18;
	shf.r.wrap.b32 	%r1114, %r1109, %r1110, 18;
	mov.b64 	%rd2247, {%r1114, %r1113};
	xor.b64  	%rd2248, %rd2247, %rd2246;
	shf.l.wrap.b32 	%r1115, %r1109, %r1110, 23;
	shf.l.wrap.b32 	%r1116, %r1110, %r1109, 23;
	mov.b64 	%rd2249, {%r1116, %r1115};
	xor.b64  	%rd2250, %rd2248, %rd2249;
	xor.b64  	%rd2251, %rd2205, %rd2178;
	and.b64  	%rd2252, %rd2232, %rd2251;
	xor.b64  	%rd2253, %rd2252, %rd2178;
	add.s64 	%rd2254, %rd2151, %rd18544;
	ld.const.u64 	%rd2255, [%rd2245];
	add.s64 	%rd2256, %rd2254, %rd2255;
	add.s64 	%rd2257, %rd2256, %rd2253;
	add.s64 	%rd2258, %rd2257, %rd2250;
	add.s64 	%rd2259, %rd2258, %rd2162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1117,%dummy}, %rd2243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1118}, %rd2243;
	}
	shf.r.wrap.b32 	%r1119, %r1118, %r1117, 28;
	shf.r.wrap.b32 	%r1120, %r1117, %r1118, 28;
	mov.b64 	%rd2260, {%r1120, %r1119};
	shf.l.wrap.b32 	%r1121, %r1117, %r1118, 30;
	shf.l.wrap.b32 	%r1122, %r1118, %r1117, 30;
	mov.b64 	%rd2261, {%r1122, %r1121};
	xor.b64  	%rd2262, %rd2261, %rd2260;
	shf.l.wrap.b32 	%r1123, %r1117, %r1118, 25;
	shf.l.wrap.b32 	%r1124, %r1118, %r1117, 25;
	mov.b64 	%rd2263, {%r1124, %r1123};
	xor.b64  	%rd2264, %rd2262, %rd2263;
	and.b64  	%rd2265, %rd2243, %rd2216;
	xor.b64  	%rd2266, %rd2243, %rd2216;
	and.b64  	%rd2267, %rd2266, %rd2189;
	or.b64  	%rd2268, %rd2267, %rd2265;
	add.s64 	%rd2269, %rd2258, %rd2268;
	add.s64 	%rd2270, %rd2269, %rd2264;
	add.s32 	%r1125, %r12885, 6;
	mul.wide.s32 	%rd2271, %r1125, 8;
	add.s64 	%rd2272, %rd2109, %rd2271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1126,%dummy}, %rd2259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1127}, %rd2259;
	}
	shf.r.wrap.b32 	%r1128, %r1127, %r1126, 14;
	shf.r.wrap.b32 	%r1129, %r1126, %r1127, 14;
	mov.b64 	%rd2273, {%r1129, %r1128};
	shf.r.wrap.b32 	%r1130, %r1127, %r1126, 18;
	shf.r.wrap.b32 	%r1131, %r1126, %r1127, 18;
	mov.b64 	%rd2274, {%r1131, %r1130};
	xor.b64  	%rd2275, %rd2274, %rd2273;
	shf.l.wrap.b32 	%r1132, %r1126, %r1127, 23;
	shf.l.wrap.b32 	%r1133, %r1127, %r1126, 23;
	mov.b64 	%rd2276, {%r1133, %r1132};
	xor.b64  	%rd2277, %rd2275, %rd2276;
	xor.b64  	%rd2278, %rd2232, %rd2205;
	and.b64  	%rd2279, %rd2259, %rd2278;
	xor.b64  	%rd2280, %rd2279, %rd2205;
	add.s64 	%rd2281, %rd2178, %rd18545;
	ld.const.u64 	%rd2282, [%rd2272];
	add.s64 	%rd2283, %rd2281, %rd2282;
	add.s64 	%rd2284, %rd2283, %rd2280;
	add.s64 	%rd2285, %rd2284, %rd2277;
	add.s64 	%rd2286, %rd2285, %rd2189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1134,%dummy}, %rd2270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1135}, %rd2270;
	}
	shf.r.wrap.b32 	%r1136, %r1135, %r1134, 28;
	shf.r.wrap.b32 	%r1137, %r1134, %r1135, 28;
	mov.b64 	%rd2287, {%r1137, %r1136};
	shf.l.wrap.b32 	%r1138, %r1134, %r1135, 30;
	shf.l.wrap.b32 	%r1139, %r1135, %r1134, 30;
	mov.b64 	%rd2288, {%r1139, %r1138};
	xor.b64  	%rd2289, %rd2288, %rd2287;
	shf.l.wrap.b32 	%r1140, %r1134, %r1135, 25;
	shf.l.wrap.b32 	%r1141, %r1135, %r1134, 25;
	mov.b64 	%rd2290, {%r1141, %r1140};
	xor.b64  	%rd2291, %rd2289, %rd2290;
	and.b64  	%rd2292, %rd2270, %rd2243;
	xor.b64  	%rd2293, %rd2270, %rd2243;
	and.b64  	%rd2294, %rd2293, %rd2216;
	or.b64  	%rd2295, %rd2294, %rd2292;
	add.s64 	%rd2296, %rd2285, %rd2295;
	add.s64 	%rd2297, %rd2296, %rd2291;
	add.s32 	%r1142, %r12885, 7;
	mul.wide.s32 	%rd2298, %r1142, 8;
	add.s64 	%rd2299, %rd2109, %rd2298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1143,%dummy}, %rd2286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1144}, %rd2286;
	}
	shf.r.wrap.b32 	%r1145, %r1144, %r1143, 14;
	shf.r.wrap.b32 	%r1146, %r1143, %r1144, 14;
	mov.b64 	%rd2300, {%r1146, %r1145};
	shf.r.wrap.b32 	%r1147, %r1144, %r1143, 18;
	shf.r.wrap.b32 	%r1148, %r1143, %r1144, 18;
	mov.b64 	%rd2301, {%r1148, %r1147};
	xor.b64  	%rd2302, %rd2301, %rd2300;
	shf.l.wrap.b32 	%r1149, %r1143, %r1144, 23;
	shf.l.wrap.b32 	%r1150, %r1144, %r1143, 23;
	mov.b64 	%rd2303, {%r1150, %r1149};
	xor.b64  	%rd2304, %rd2302, %rd2303;
	xor.b64  	%rd2305, %rd2259, %rd2232;
	and.b64  	%rd2306, %rd2286, %rd2305;
	xor.b64  	%rd2307, %rd2306, %rd2232;
	add.s64 	%rd2308, %rd2205, %rd18546;
	ld.const.u64 	%rd2309, [%rd2299];
	add.s64 	%rd2310, %rd2308, %rd2309;
	add.s64 	%rd2311, %rd2310, %rd2307;
	add.s64 	%rd2312, %rd2311, %rd2304;
	add.s64 	%rd2313, %rd2312, %rd2216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1151,%dummy}, %rd2297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1152}, %rd2297;
	}
	shf.r.wrap.b32 	%r1153, %r1152, %r1151, 28;
	shf.r.wrap.b32 	%r1154, %r1151, %r1152, 28;
	mov.b64 	%rd2314, {%r1154, %r1153};
	shf.l.wrap.b32 	%r1155, %r1151, %r1152, 30;
	shf.l.wrap.b32 	%r1156, %r1152, %r1151, 30;
	mov.b64 	%rd2315, {%r1156, %r1155};
	xor.b64  	%rd2316, %rd2315, %rd2314;
	shf.l.wrap.b32 	%r1157, %r1151, %r1152, 25;
	shf.l.wrap.b32 	%r1158, %r1152, %r1151, 25;
	mov.b64 	%rd2317, {%r1158, %r1157};
	xor.b64  	%rd2318, %rd2316, %rd2317;
	and.b64  	%rd2319, %rd2297, %rd2270;
	xor.b64  	%rd2320, %rd2297, %rd2270;
	and.b64  	%rd2321, %rd2320, %rd2243;
	or.b64  	%rd2322, %rd2321, %rd2319;
	add.s64 	%rd2323, %rd2312, %rd2322;
	add.s64 	%rd2324, %rd2323, %rd2318;
	add.s32 	%r1159, %r12885, 8;
	mul.wide.s32 	%rd2325, %r1159, 8;
	add.s64 	%rd2326, %rd2109, %rd2325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1160,%dummy}, %rd2313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1161}, %rd2313;
	}
	shf.r.wrap.b32 	%r1162, %r1161, %r1160, 14;
	shf.r.wrap.b32 	%r1163, %r1160, %r1161, 14;
	mov.b64 	%rd2327, {%r1163, %r1162};
	shf.r.wrap.b32 	%r1164, %r1161, %r1160, 18;
	shf.r.wrap.b32 	%r1165, %r1160, %r1161, 18;
	mov.b64 	%rd2328, {%r1165, %r1164};
	xor.b64  	%rd2329, %rd2328, %rd2327;
	shf.l.wrap.b32 	%r1166, %r1160, %r1161, 23;
	shf.l.wrap.b32 	%r1167, %r1161, %r1160, 23;
	mov.b64 	%rd2330, {%r1167, %r1166};
	xor.b64  	%rd2331, %rd2329, %rd2330;
	xor.b64  	%rd2332, %rd2286, %rd2259;
	and.b64  	%rd2333, %rd2313, %rd2332;
	xor.b64  	%rd2334, %rd2333, %rd2259;
	add.s64 	%rd2335, %rd2232, %rd18530;
	ld.const.u64 	%rd2336, [%rd2326];
	add.s64 	%rd2337, %rd2335, %rd2336;
	add.s64 	%rd2338, %rd2337, %rd2334;
	add.s64 	%rd2339, %rd2338, %rd2331;
	add.s64 	%rd2340, %rd2339, %rd2243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1168,%dummy}, %rd2324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1169}, %rd2324;
	}
	shf.r.wrap.b32 	%r1170, %r1169, %r1168, 28;
	shf.r.wrap.b32 	%r1171, %r1168, %r1169, 28;
	mov.b64 	%rd2341, {%r1171, %r1170};
	shf.l.wrap.b32 	%r1172, %r1168, %r1169, 30;
	shf.l.wrap.b32 	%r1173, %r1169, %r1168, 30;
	mov.b64 	%rd2342, {%r1173, %r1172};
	xor.b64  	%rd2343, %rd2342, %rd2341;
	shf.l.wrap.b32 	%r1174, %r1168, %r1169, 25;
	shf.l.wrap.b32 	%r1175, %r1169, %r1168, 25;
	mov.b64 	%rd2344, {%r1175, %r1174};
	xor.b64  	%rd2345, %rd2343, %rd2344;
	and.b64  	%rd2346, %rd2324, %rd2297;
	xor.b64  	%rd2347, %rd2324, %rd2297;
	and.b64  	%rd2348, %rd2347, %rd2270;
	or.b64  	%rd2349, %rd2348, %rd2346;
	add.s64 	%rd2350, %rd2339, %rd2349;
	add.s64 	%rd2351, %rd2350, %rd2345;
	add.s32 	%r1176, %r12885, 9;
	mul.wide.s32 	%rd2352, %r1176, 8;
	add.s64 	%rd2353, %rd2109, %rd2352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1177,%dummy}, %rd2340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1178}, %rd2340;
	}
	shf.r.wrap.b32 	%r1179, %r1178, %r1177, 14;
	shf.r.wrap.b32 	%r1180, %r1177, %r1178, 14;
	mov.b64 	%rd2354, {%r1180, %r1179};
	shf.r.wrap.b32 	%r1181, %r1178, %r1177, 18;
	shf.r.wrap.b32 	%r1182, %r1177, %r1178, 18;
	mov.b64 	%rd2355, {%r1182, %r1181};
	xor.b64  	%rd2356, %rd2355, %rd2354;
	shf.l.wrap.b32 	%r1183, %r1177, %r1178, 23;
	shf.l.wrap.b32 	%r1184, %r1178, %r1177, 23;
	mov.b64 	%rd2357, {%r1184, %r1183};
	xor.b64  	%rd2358, %rd2356, %rd2357;
	xor.b64  	%rd2359, %rd2313, %rd2286;
	and.b64  	%rd2360, %rd2340, %rd2359;
	xor.b64  	%rd2361, %rd2360, %rd2286;
	add.s64 	%rd2362, %rd2259, %rd18529;
	ld.const.u64 	%rd2363, [%rd2353];
	add.s64 	%rd2364, %rd2362, %rd2363;
	add.s64 	%rd2365, %rd2364, %rd2361;
	add.s64 	%rd2366, %rd2365, %rd2358;
	add.s64 	%rd2367, %rd2366, %rd2270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1185,%dummy}, %rd2351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1186}, %rd2351;
	}
	shf.r.wrap.b32 	%r1187, %r1186, %r1185, 28;
	shf.r.wrap.b32 	%r1188, %r1185, %r1186, 28;
	mov.b64 	%rd2368, {%r1188, %r1187};
	shf.l.wrap.b32 	%r1189, %r1185, %r1186, 30;
	shf.l.wrap.b32 	%r1190, %r1186, %r1185, 30;
	mov.b64 	%rd2369, {%r1190, %r1189};
	xor.b64  	%rd2370, %rd2369, %rd2368;
	shf.l.wrap.b32 	%r1191, %r1185, %r1186, 25;
	shf.l.wrap.b32 	%r1192, %r1186, %r1185, 25;
	mov.b64 	%rd2371, {%r1192, %r1191};
	xor.b64  	%rd2372, %rd2370, %rd2371;
	and.b64  	%rd2373, %rd2351, %rd2324;
	xor.b64  	%rd2374, %rd2351, %rd2324;
	and.b64  	%rd2375, %rd2374, %rd2297;
	or.b64  	%rd2376, %rd2375, %rd2373;
	add.s64 	%rd2377, %rd2366, %rd2376;
	add.s64 	%rd2378, %rd2377, %rd2372;
	add.s32 	%r1193, %r12885, 10;
	mul.wide.s32 	%rd2379, %r1193, 8;
	add.s64 	%rd2380, %rd2109, %rd2379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1194,%dummy}, %rd2367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1195}, %rd2367;
	}
	shf.r.wrap.b32 	%r1196, %r1195, %r1194, 14;
	shf.r.wrap.b32 	%r1197, %r1194, %r1195, 14;
	mov.b64 	%rd2381, {%r1197, %r1196};
	shf.r.wrap.b32 	%r1198, %r1195, %r1194, 18;
	shf.r.wrap.b32 	%r1199, %r1194, %r1195, 18;
	mov.b64 	%rd2382, {%r1199, %r1198};
	xor.b64  	%rd2383, %rd2382, %rd2381;
	shf.l.wrap.b32 	%r1200, %r1194, %r1195, 23;
	shf.l.wrap.b32 	%r1201, %r1195, %r1194, 23;
	mov.b64 	%rd2384, {%r1201, %r1200};
	xor.b64  	%rd2385, %rd2383, %rd2384;
	xor.b64  	%rd2386, %rd2340, %rd2313;
	and.b64  	%rd2387, %rd2367, %rd2386;
	xor.b64  	%rd2388, %rd2387, %rd2313;
	add.s64 	%rd2389, %rd2286, %rd18528;
	ld.const.u64 	%rd2390, [%rd2380];
	add.s64 	%rd2391, %rd2389, %rd2390;
	add.s64 	%rd2392, %rd2391, %rd2388;
	add.s64 	%rd2393, %rd2392, %rd2385;
	add.s64 	%rd2394, %rd2393, %rd2297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1202,%dummy}, %rd2378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1203}, %rd2378;
	}
	shf.r.wrap.b32 	%r1204, %r1203, %r1202, 28;
	shf.r.wrap.b32 	%r1205, %r1202, %r1203, 28;
	mov.b64 	%rd2395, {%r1205, %r1204};
	shf.l.wrap.b32 	%r1206, %r1202, %r1203, 30;
	shf.l.wrap.b32 	%r1207, %r1203, %r1202, 30;
	mov.b64 	%rd2396, {%r1207, %r1206};
	xor.b64  	%rd2397, %rd2396, %rd2395;
	shf.l.wrap.b32 	%r1208, %r1202, %r1203, 25;
	shf.l.wrap.b32 	%r1209, %r1203, %r1202, 25;
	mov.b64 	%rd2398, {%r1209, %r1208};
	xor.b64  	%rd2399, %rd2397, %rd2398;
	and.b64  	%rd2400, %rd2378, %rd2351;
	xor.b64  	%rd2401, %rd2378, %rd2351;
	and.b64  	%rd2402, %rd2401, %rd2324;
	or.b64  	%rd2403, %rd2402, %rd2400;
	add.s64 	%rd2404, %rd2393, %rd2403;
	add.s64 	%rd2405, %rd2404, %rd2399;
	add.s32 	%r1210, %r12885, 11;
	mul.wide.s32 	%rd2406, %r1210, 8;
	add.s64 	%rd2407, %rd2109, %rd2406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1211,%dummy}, %rd2394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1212}, %rd2394;
	}
	shf.r.wrap.b32 	%r1213, %r1212, %r1211, 14;
	shf.r.wrap.b32 	%r1214, %r1211, %r1212, 14;
	mov.b64 	%rd2408, {%r1214, %r1213};
	shf.r.wrap.b32 	%r1215, %r1212, %r1211, 18;
	shf.r.wrap.b32 	%r1216, %r1211, %r1212, 18;
	mov.b64 	%rd2409, {%r1216, %r1215};
	xor.b64  	%rd2410, %rd2409, %rd2408;
	shf.l.wrap.b32 	%r1217, %r1211, %r1212, 23;
	shf.l.wrap.b32 	%r1218, %r1212, %r1211, 23;
	mov.b64 	%rd2411, {%r1218, %r1217};
	xor.b64  	%rd2412, %rd2410, %rd2411;
	xor.b64  	%rd2413, %rd2367, %rd2340;
	and.b64  	%rd2414, %rd2394, %rd2413;
	xor.b64  	%rd2415, %rd2414, %rd2340;
	add.s64 	%rd2416, %rd2313, %rd18527;
	ld.const.u64 	%rd2417, [%rd2407];
	add.s64 	%rd2418, %rd2416, %rd2417;
	add.s64 	%rd2419, %rd2418, %rd2415;
	add.s64 	%rd2420, %rd2419, %rd2412;
	add.s64 	%rd2421, %rd2420, %rd2324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1219,%dummy}, %rd2405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1220}, %rd2405;
	}
	shf.r.wrap.b32 	%r1221, %r1220, %r1219, 28;
	shf.r.wrap.b32 	%r1222, %r1219, %r1220, 28;
	mov.b64 	%rd2422, {%r1222, %r1221};
	shf.l.wrap.b32 	%r1223, %r1219, %r1220, 30;
	shf.l.wrap.b32 	%r1224, %r1220, %r1219, 30;
	mov.b64 	%rd2423, {%r1224, %r1223};
	xor.b64  	%rd2424, %rd2423, %rd2422;
	shf.l.wrap.b32 	%r1225, %r1219, %r1220, 25;
	shf.l.wrap.b32 	%r1226, %r1220, %r1219, 25;
	mov.b64 	%rd2425, {%r1226, %r1225};
	xor.b64  	%rd2426, %rd2424, %rd2425;
	and.b64  	%rd2427, %rd2405, %rd2378;
	xor.b64  	%rd2428, %rd2405, %rd2378;
	and.b64  	%rd2429, %rd2428, %rd2351;
	or.b64  	%rd2430, %rd2429, %rd2427;
	add.s64 	%rd2431, %rd2420, %rd2430;
	add.s64 	%rd2432, %rd2431, %rd2426;
	add.s32 	%r1227, %r12885, 12;
	mul.wide.s32 	%rd2433, %r1227, 8;
	add.s64 	%rd2434, %rd2109, %rd2433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1228,%dummy}, %rd2421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1229}, %rd2421;
	}
	shf.r.wrap.b32 	%r1230, %r1229, %r1228, 14;
	shf.r.wrap.b32 	%r1231, %r1228, %r1229, 14;
	mov.b64 	%rd2435, {%r1231, %r1230};
	shf.r.wrap.b32 	%r1232, %r1229, %r1228, 18;
	shf.r.wrap.b32 	%r1233, %r1228, %r1229, 18;
	mov.b64 	%rd2436, {%r1233, %r1232};
	xor.b64  	%rd2437, %rd2436, %rd2435;
	shf.l.wrap.b32 	%r1234, %r1228, %r1229, 23;
	shf.l.wrap.b32 	%r1235, %r1229, %r1228, 23;
	mov.b64 	%rd2438, {%r1235, %r1234};
	xor.b64  	%rd2439, %rd2437, %rd2438;
	xor.b64  	%rd2440, %rd2394, %rd2367;
	and.b64  	%rd2441, %rd2421, %rd2440;
	xor.b64  	%rd2442, %rd2441, %rd2367;
	add.s64 	%rd2443, %rd2340, %rd18526;
	ld.const.u64 	%rd2444, [%rd2434];
	add.s64 	%rd2445, %rd2443, %rd2444;
	add.s64 	%rd2446, %rd2445, %rd2442;
	add.s64 	%rd2447, %rd2446, %rd2439;
	add.s64 	%rd18538, %rd2447, %rd2351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1236,%dummy}, %rd2432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1237}, %rd2432;
	}
	shf.r.wrap.b32 	%r1238, %r1237, %r1236, 28;
	shf.r.wrap.b32 	%r1239, %r1236, %r1237, 28;
	mov.b64 	%rd2448, {%r1239, %r1238};
	shf.l.wrap.b32 	%r1240, %r1236, %r1237, 30;
	shf.l.wrap.b32 	%r1241, %r1237, %r1236, 30;
	mov.b64 	%rd2449, {%r1241, %r1240};
	xor.b64  	%rd2450, %rd2449, %rd2448;
	shf.l.wrap.b32 	%r1242, %r1236, %r1237, 25;
	shf.l.wrap.b32 	%r1243, %r1237, %r1236, 25;
	mov.b64 	%rd2451, {%r1243, %r1242};
	xor.b64  	%rd2452, %rd2450, %rd2451;
	and.b64  	%rd2453, %rd2432, %rd2405;
	xor.b64  	%rd2454, %rd2432, %rd2405;
	and.b64  	%rd2455, %rd2454, %rd2378;
	or.b64  	%rd2456, %rd2455, %rd2453;
	add.s64 	%rd2457, %rd2447, %rd2456;
	add.s64 	%rd18534, %rd2457, %rd2452;
	add.s32 	%r1244, %r12885, 13;
	mul.wide.s32 	%rd2458, %r1244, 8;
	add.s64 	%rd2459, %rd2109, %rd2458;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1245,%dummy}, %rd18538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1246}, %rd18538;
	}
	shf.r.wrap.b32 	%r1247, %r1246, %r1245, 14;
	shf.r.wrap.b32 	%r1248, %r1245, %r1246, 14;
	mov.b64 	%rd2460, {%r1248, %r1247};
	shf.r.wrap.b32 	%r1249, %r1246, %r1245, 18;
	shf.r.wrap.b32 	%r1250, %r1245, %r1246, 18;
	mov.b64 	%rd2461, {%r1250, %r1249};
	xor.b64  	%rd2462, %rd2461, %rd2460;
	shf.l.wrap.b32 	%r1251, %r1245, %r1246, 23;
	shf.l.wrap.b32 	%r1252, %r1246, %r1245, 23;
	mov.b64 	%rd2463, {%r1252, %r1251};
	xor.b64  	%rd2464, %rd2462, %rd2463;
	xor.b64  	%rd2465, %rd2421, %rd2394;
	and.b64  	%rd2466, %rd18538, %rd2465;
	xor.b64  	%rd2467, %rd2466, %rd2394;
	add.s64 	%rd2468, %rd2367, %rd18525;
	ld.const.u64 	%rd2469, [%rd2459];
	add.s64 	%rd2470, %rd2468, %rd2469;
	add.s64 	%rd2471, %rd2470, %rd2467;
	add.s64 	%rd2472, %rd2471, %rd2464;
	add.s64 	%rd18537, %rd2472, %rd2378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1253,%dummy}, %rd18534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1254}, %rd18534;
	}
	shf.r.wrap.b32 	%r1255, %r1254, %r1253, 28;
	shf.r.wrap.b32 	%r1256, %r1253, %r1254, 28;
	mov.b64 	%rd2473, {%r1256, %r1255};
	shf.l.wrap.b32 	%r1257, %r1253, %r1254, 30;
	shf.l.wrap.b32 	%r1258, %r1254, %r1253, 30;
	mov.b64 	%rd2474, {%r1258, %r1257};
	xor.b64  	%rd2475, %rd2474, %rd2473;
	shf.l.wrap.b32 	%r1259, %r1253, %r1254, 25;
	shf.l.wrap.b32 	%r1260, %r1254, %r1253, 25;
	mov.b64 	%rd2476, {%r1260, %r1259};
	xor.b64  	%rd2477, %rd2475, %rd2476;
	and.b64  	%rd2478, %rd18534, %rd2432;
	xor.b64  	%rd2479, %rd18534, %rd2432;
	and.b64  	%rd2480, %rd2479, %rd2405;
	or.b64  	%rd2481, %rd2480, %rd2478;
	add.s64 	%rd2482, %rd2472, %rd2481;
	add.s64 	%rd18533, %rd2482, %rd2477;
	add.s32 	%r1261, %r12885, 14;
	mul.wide.s32 	%rd2483, %r1261, 8;
	add.s64 	%rd2484, %rd2109, %rd2483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1262,%dummy}, %rd18537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1263}, %rd18537;
	}
	shf.r.wrap.b32 	%r1264, %r1263, %r1262, 14;
	shf.r.wrap.b32 	%r1265, %r1262, %r1263, 14;
	mov.b64 	%rd2485, {%r1265, %r1264};
	shf.r.wrap.b32 	%r1266, %r1263, %r1262, 18;
	shf.r.wrap.b32 	%r1267, %r1262, %r1263, 18;
	mov.b64 	%rd2486, {%r1267, %r1266};
	xor.b64  	%rd2487, %rd2486, %rd2485;
	shf.l.wrap.b32 	%r1268, %r1262, %r1263, 23;
	shf.l.wrap.b32 	%r1269, %r1263, %r1262, 23;
	mov.b64 	%rd2488, {%r1269, %r1268};
	xor.b64  	%rd2489, %rd2487, %rd2488;
	xor.b64  	%rd2490, %rd18538, %rd2421;
	and.b64  	%rd2491, %rd18537, %rd2490;
	xor.b64  	%rd2492, %rd2491, %rd2421;
	add.s64 	%rd2493, %rd2394, %rd18524;
	ld.const.u64 	%rd2494, [%rd2484];
	add.s64 	%rd2495, %rd2493, %rd2494;
	add.s64 	%rd2496, %rd2495, %rd2492;
	add.s64 	%rd2497, %rd2496, %rd2489;
	add.s64 	%rd18536, %rd2497, %rd2405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1270,%dummy}, %rd18533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1271}, %rd18533;
	}
	shf.r.wrap.b32 	%r1272, %r1271, %r1270, 28;
	shf.r.wrap.b32 	%r1273, %r1270, %r1271, 28;
	mov.b64 	%rd2498, {%r1273, %r1272};
	shf.l.wrap.b32 	%r1274, %r1270, %r1271, 30;
	shf.l.wrap.b32 	%r1275, %r1271, %r1270, 30;
	mov.b64 	%rd2499, {%r1275, %r1274};
	xor.b64  	%rd2500, %rd2499, %rd2498;
	shf.l.wrap.b32 	%r1276, %r1270, %r1271, 25;
	shf.l.wrap.b32 	%r1277, %r1271, %r1270, 25;
	mov.b64 	%rd2501, {%r1277, %r1276};
	xor.b64  	%rd2502, %rd2500, %rd2501;
	and.b64  	%rd2503, %rd18533, %rd18534;
	xor.b64  	%rd2504, %rd18533, %rd18534;
	and.b64  	%rd2505, %rd2504, %rd2432;
	or.b64  	%rd2506, %rd2505, %rd2503;
	add.s64 	%rd2507, %rd2497, %rd2506;
	add.s64 	%rd18532, %rd2507, %rd2502;
	add.s32 	%r1278, %r12885, 15;
	mul.wide.s32 	%rd2508, %r1278, 8;
	add.s64 	%rd2509, %rd2109, %rd2508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1279,%dummy}, %rd18536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1280}, %rd18536;
	}
	shf.r.wrap.b32 	%r1281, %r1280, %r1279, 14;
	shf.r.wrap.b32 	%r1282, %r1279, %r1280, 14;
	mov.b64 	%rd2510, {%r1282, %r1281};
	shf.r.wrap.b32 	%r1283, %r1280, %r1279, 18;
	shf.r.wrap.b32 	%r1284, %r1279, %r1280, 18;
	mov.b64 	%rd2511, {%r1284, %r1283};
	xor.b64  	%rd2512, %rd2511, %rd2510;
	shf.l.wrap.b32 	%r1285, %r1279, %r1280, 23;
	shf.l.wrap.b32 	%r1286, %r1280, %r1279, 23;
	mov.b64 	%rd2513, {%r1286, %r1285};
	xor.b64  	%rd2514, %rd2512, %rd2513;
	xor.b64  	%rd2515, %rd18537, %rd18538;
	and.b64  	%rd2516, %rd18536, %rd2515;
	xor.b64  	%rd2517, %rd2516, %rd18538;
	add.s64 	%rd2518, %rd2421, %rd18523;
	ld.const.u64 	%rd2519, [%rd2509];
	add.s64 	%rd2520, %rd2518, %rd2519;
	add.s64 	%rd2521, %rd2520, %rd2517;
	add.s64 	%rd2522, %rd2521, %rd2514;
	add.s64 	%rd18535, %rd2522, %rd2432;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1287,%dummy}, %rd18532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1288}, %rd18532;
	}
	shf.r.wrap.b32 	%r1289, %r1288, %r1287, 28;
	shf.r.wrap.b32 	%r1290, %r1287, %r1288, 28;
	mov.b64 	%rd2523, {%r1290, %r1289};
	shf.l.wrap.b32 	%r1291, %r1287, %r1288, 30;
	shf.l.wrap.b32 	%r1292, %r1288, %r1287, 30;
	mov.b64 	%rd2524, {%r1292, %r1291};
	xor.b64  	%rd2525, %rd2524, %rd2523;
	shf.l.wrap.b32 	%r1293, %r1287, %r1288, 25;
	shf.l.wrap.b32 	%r1294, %r1288, %r1287, 25;
	mov.b64 	%rd2526, {%r1294, %r1293};
	xor.b64  	%rd2527, %rd2525, %rd2526;
	and.b64  	%rd2528, %rd18532, %rd18533;
	xor.b64  	%rd2529, %rd18532, %rd18533;
	and.b64  	%rd2530, %rd2529, %rd18534;
	or.b64  	%rd2531, %rd2530, %rd2528;
	add.s64 	%rd2532, %rd2522, %rd2531;
	add.s64 	%rd18531, %rd2532, %rd2527;
	add.s32 	%r12885, %r12885, 16;
	setp.lt.s32	%p14, %r12885, 80;
	@%p14 bra 	BB0_22;

	add.s64 	%rd2533, %rd13, %rd18531;
	st.local.u64 	[%rd1], %rd2533;
	add.s64 	%rd2534, %rd14, %rd18532;
	st.local.u64 	[%rd1+8], %rd2534;
	add.s64 	%rd2535, %rd15, %rd18533;
	st.local.u64 	[%rd1+16], %rd2535;
	add.s64 	%rd2536, %rd12, %rd18534;
	st.local.u64 	[%rd1+24], %rd2536;
	add.s64 	%rd2537, %rd7, %rd18535;
	st.local.u64 	[%rd1+32], %rd2537;
	add.s64 	%rd2538, %rd9, %rd18536;
	st.local.u64 	[%rd1+40], %rd2538;
	add.s64 	%rd2539, %rd8, %rd18537;
	st.local.u64 	[%rd1+48], %rd2539;
	add.s64 	%rd2540, %rd10, %rd18538;
	st.local.u64 	[%rd1+56], %rd2540;
	sub.s32 	%r38, %r3, %r18;
	setp.lt.s32	%p15, %r38, 1;
	@%p15 bra 	BB0_41;

	add.s32 	%r39, %r17, -128;
	and.b32  	%r40, %r39, 3;
	setp.eq.s32	%p16, %r40, 0;
	mov.u32 	%r12889, 0;
	@%p16 bra 	BB0_30;

	setp.eq.s32	%p17, %r40, 1;
	mov.u32 	%r12887, 0;
	@%p17 bra 	BB0_29;

	setp.eq.s32	%p18, %r40, 2;
	mov.u32 	%r12886, 0;
	@%p18 bra 	BB0_28;

	xor.b32  	%r1299, %r18, 7;
	cvt.u64.u32	%rd2541, %r1299;
	add.s64 	%rd2542, %rd1465, %rd2541;
	ld.local.u8 	%rs23, [%rd2542];
	st.local.u8 	[%rd5+7], %rs23;
	mov.u32 	%r12886, 1;

BB0_28:
	add.s32 	%r1300, %r12886, %r18;
	xor.b32  	%r1301, %r1300, 7;
	cvt.s64.s32	%rd2543, %r1301;
	add.s64 	%rd2544, %rd1465, %rd2543;
	ld.local.u8 	%rs24, [%rd2544];
	xor.b32  	%r1302, %r12886, 7;
	cvt.u64.u32	%rd2545, %r1302;
	add.s64 	%rd2546, %rd5, %rd2545;
	st.local.u8 	[%rd2546], %rs24;
	add.s32 	%r12887, %r12886, 1;

BB0_29:
	add.s32 	%r1303, %r12887, %r18;
	xor.b32  	%r1304, %r1303, 7;
	cvt.s64.s32	%rd2547, %r1304;
	add.s64 	%rd2548, %rd1465, %rd2547;
	ld.local.u8 	%rs25, [%rd2548];
	xor.b32  	%r1305, %r12887, 7;
	cvt.s64.s32	%rd2549, %r1305;
	add.s64 	%rd2550, %rd5, %rd2549;
	st.local.u8 	[%rd2550], %rs25;
	add.s32 	%r12889, %r12887, 1;

BB0_30:
	setp.lt.u32	%p19, %r39, 4;
	@%p19 bra 	BB0_41;

BB0_31:
	add.s32 	%r1306, %r12889, %r18;
	xor.b32  	%r1307, %r1306, 7;
	cvt.s64.s32	%rd2551, %r1307;
	add.s64 	%rd2552, %rd1465, %rd2551;
	ld.local.u8 	%rs26, [%rd2552];
	xor.b32  	%r1308, %r12889, 7;
	cvt.s64.s32	%rd2553, %r1308;
	add.s64 	%rd2554, %rd5, %rd2553;
	st.local.u8 	[%rd2554], %rs26;
	add.s32 	%r1309, %r12889, 1;
	add.s32 	%r1310, %r1309, %r18;
	xor.b32  	%r1311, %r1310, 7;
	cvt.s64.s32	%rd2555, %r1311;
	add.s64 	%rd2556, %rd1465, %rd2555;
	ld.local.u8 	%rs27, [%rd2556];
	xor.b32  	%r1312, %r1309, 7;
	cvt.s64.s32	%rd2557, %r1312;
	add.s64 	%rd2558, %rd5, %rd2557;
	st.local.u8 	[%rd2558], %rs27;
	add.s32 	%r1313, %r12889, 2;
	add.s32 	%r1314, %r1313, %r18;
	xor.b32  	%r1315, %r1314, 7;
	cvt.s64.s32	%rd2559, %r1315;
	add.s64 	%rd2560, %rd1465, %rd2559;
	ld.local.u8 	%rs28, [%rd2560];
	xor.b32  	%r1316, %r1313, 7;
	cvt.s64.s32	%rd2561, %r1316;
	add.s64 	%rd2562, %rd5, %rd2561;
	st.local.u8 	[%rd2562], %rs28;
	add.s32 	%r1317, %r12889, 3;
	add.s32 	%r1318, %r1317, %r18;
	xor.b32  	%r1319, %r1318, 7;
	cvt.s64.s32	%rd2563, %r1319;
	add.s64 	%rd2564, %rd1465, %rd2563;
	ld.local.u8 	%rs29, [%rd2564];
	xor.b32  	%r1320, %r1317, 7;
	cvt.s64.s32	%rd2565, %r1320;
	add.s64 	%rd2566, %rd5, %rd2565;
	st.local.u8 	[%rd2566], %rs29;
	add.s32 	%r12889, %r12889, 4;
	setp.lt.s32	%p20, %r12889, %r38;
	@%p20 bra 	BB0_31;

BB0_41:
	ld.local.u32 	%r1345, [%rd1+192];
	and.b32  	%r63, %r1345, 127;
	add.s32 	%r1346, %r1345, %r2;
	st.local.u32 	[%rd1+192], %r1346;
	add.s32 	%r64, %r63, %r2;
	setp.lt.s32	%p27, %r64, 128;
	add.s64 	%rd89, %rd1, 64;
	@%p27 bra 	BB0_62;
	bra.uni 	BB0_42;

BB0_62:
	@%p2 bra 	BB0_72;

	mov.u32 	%r2113, 1;
	max.u32 	%r95, %r2, %r2113;
	and.b32  	%r96, %r95, 3;
	setp.eq.s32	%p41, %r96, 0;
	mov.u32 	%r12918, 0;
	@%p41 bra 	BB0_70;

	setp.eq.s32	%p42, %r96, 1;
	mov.u32 	%r12914, 0;
	@%p42 bra 	BB0_69;

	setp.eq.s32	%p43, %r96, 2;
	mov.u32 	%r2115, 0;
	@%p43 bra 	BB0_66;
	bra.uni 	BB0_67;

BB0_66:
	mov.u32 	%r2113, %r2115;
	bra.uni 	BB0_68;

BB0_42:
	mov.u32 	%r1348, 128;
	sub.s32 	%r65, %r1348, %r63;
	mov.u32 	%r1349, 1;
	max.u32 	%r66, %r65, %r1349;
	and.b32  	%r67, %r66, 3;
	setp.eq.s32	%p28, %r67, 0;
	mov.u32 	%r12904, 0;
	@%p28 bra 	BB0_49;

	setp.eq.s32	%p29, %r67, 1;
	mov.u32 	%r12900, 0;
	@%p29 bra 	BB0_48;

	setp.eq.s32	%p30, %r67, 2;
	mov.u32 	%r1351, 0;
	@%p30 bra 	BB0_45;
	bra.uni 	BB0_46;

BB0_45:
	mov.u32 	%r1349, %r1351;
	bra.uni 	BB0_47;

BB0_46:
	ld.local.u8 	%rs37, [%rd1463+7];
	xor.b32  	%r1353, %r63, 7;
	cvt.u64.u32	%rd2595, %r1353;
	add.s64 	%rd2596, %rd89, %rd2595;
	st.local.u8 	[%rd2596], %rs37;
	add.s32 	%r63, %r63, 1;

BB0_47:
	xor.b32  	%r1354, %r1349, 7;
	cvt.u64.u32	%rd2597, %r1354;
	add.s64 	%rd2598, %rd1463, %rd2597;
	ld.local.u8 	%rs38, [%rd2598];
	xor.b32  	%r1355, %r63, 7;
	cvt.s64.s32	%rd2599, %r1355;
	add.s64 	%rd2600, %rd89, %rd2599;
	st.local.u8 	[%rd2600], %rs38;
	add.s32 	%r63, %r63, 1;
	add.s32 	%r12900, %r1349, 1;

BB0_48:
	xor.b32  	%r1356, %r12900, 7;
	cvt.s64.s32	%rd2601, %r1356;
	add.s64 	%rd2602, %rd1463, %rd2601;
	ld.local.u8 	%rs39, [%rd2602];
	xor.b32  	%r1357, %r63, 7;
	cvt.s64.s32	%rd2603, %r1357;
	add.s64 	%rd2604, %rd89, %rd2603;
	st.local.u8 	[%rd2604], %rs39;
	add.s32 	%r63, %r63, 1;
	add.s32 	%r12904, %r12900, 1;

BB0_49:
	setp.lt.u32	%p31, %r66, 4;
	@%p31 bra 	BB0_51;

BB0_50:
	xor.b32  	%r1358, %r12904, 7;
	cvt.s64.s32	%rd2605, %r1358;
	add.s64 	%rd2606, %rd1463, %rd2605;
	ld.local.u8 	%rs40, [%rd2606];
	xor.b32  	%r1359, %r63, 7;
	cvt.s64.s32	%rd2607, %r1359;
	add.s64 	%rd2608, %rd89, %rd2607;
	st.local.u8 	[%rd2608], %rs40;
	add.s32 	%r1360, %r12904, 1;
	xor.b32  	%r1361, %r1360, 7;
	cvt.s64.s32	%rd2609, %r1361;
	add.s64 	%rd2610, %rd1463, %rd2609;
	ld.local.u8 	%rs41, [%rd2610];
	add.s32 	%r1362, %r63, 1;
	xor.b32  	%r1363, %r1362, 7;
	cvt.s64.s32	%rd2611, %r1363;
	add.s64 	%rd2612, %rd89, %rd2611;
	st.local.u8 	[%rd2612], %rs41;
	add.s32 	%r1364, %r12904, 2;
	xor.b32  	%r1365, %r1364, 7;
	cvt.s64.s32	%rd2613, %r1365;
	add.s64 	%rd2614, %rd1463, %rd2613;
	ld.local.u8 	%rs42, [%rd2614];
	add.s32 	%r1366, %r63, 2;
	xor.b32  	%r1367, %r1366, 7;
	cvt.s64.s32	%rd2615, %r1367;
	add.s64 	%rd2616, %rd89, %rd2615;
	st.local.u8 	[%rd2616], %rs42;
	add.s32 	%r1368, %r12904, 3;
	xor.b32  	%r1369, %r1368, 7;
	cvt.s64.s32	%rd2617, %r1369;
	add.s64 	%rd2618, %rd1463, %rd2617;
	ld.local.u8 	%rs43, [%rd2618];
	add.s32 	%r1370, %r63, 3;
	xor.b32  	%r1371, %r1370, 7;
	cvt.s64.s32	%rd2619, %r1371;
	add.s64 	%rd2620, %rd89, %rd2619;
	st.local.u8 	[%rd2620], %rs43;
	add.s32 	%r12904, %r12904, 4;
	setp.lt.s32	%p32, %r12904, %r65;
	add.s32 	%r63, %r63, 4;
	@%p32 bra 	BB0_50;

BB0_51:
	ld.local.u64 	%rd91, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1373,%dummy}, %rd91;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1374}, %rd91;
	}
	shf.r.wrap.b32 	%r1375, %r1374, %r1373, 14;
	shf.r.wrap.b32 	%r1376, %r1373, %r1374, 14;
	mov.b64 	%rd2621, {%r1376, %r1375};
	shf.r.wrap.b32 	%r1377, %r1374, %r1373, 18;
	shf.r.wrap.b32 	%r1378, %r1373, %r1374, 18;
	mov.b64 	%rd2622, {%r1378, %r1377};
	xor.b64  	%rd2623, %rd2622, %rd2621;
	shf.l.wrap.b32 	%r1379, %r1373, %r1374, 23;
	shf.l.wrap.b32 	%r1380, %r1374, %r1373, 23;
	mov.b64 	%rd2624, {%r1380, %r1379};
	xor.b64  	%rd2625, %rd2623, %rd2624;
	ld.local.u64 	%rd92, [%rd1+48];
	ld.local.u64 	%rd93, [%rd1+40];
	xor.b64  	%rd2626, %rd92, %rd93;
	and.b64  	%rd2627, %rd2626, %rd91;
	xor.b64  	%rd2628, %rd2627, %rd92;
	ld.local.u64 	%rd94, [%rd1+56];
	ld.local.u64 	%rd18563, [%rd1+64];
	add.s64 	%rd2629, %rd94, %rd18563;
	ld.const.u64 	%rd2630, [k_sha512];
	add.s64 	%rd2631, %rd2629, %rd2630;
	add.s64 	%rd2632, %rd2631, %rd2628;
	add.s64 	%rd2633, %rd2632, %rd2625;
	ld.local.u64 	%rd96, [%rd1+24];
	add.s64 	%rd2634, %rd2633, %rd96;
	ld.local.u64 	%rd97, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1381,%dummy}, %rd97;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1382}, %rd97;
	}
	shf.r.wrap.b32 	%r1383, %r1382, %r1381, 28;
	shf.r.wrap.b32 	%r1384, %r1381, %r1382, 28;
	mov.b64 	%rd2635, {%r1384, %r1383};
	shf.l.wrap.b32 	%r1385, %r1381, %r1382, 30;
	shf.l.wrap.b32 	%r1386, %r1382, %r1381, 30;
	mov.b64 	%rd2636, {%r1386, %r1385};
	xor.b64  	%rd2637, %rd2636, %rd2635;
	shf.l.wrap.b32 	%r1387, %r1381, %r1382, 25;
	shf.l.wrap.b32 	%r1388, %r1382, %r1381, 25;
	mov.b64 	%rd2638, {%r1388, %r1387};
	xor.b64  	%rd2639, %rd2637, %rd2638;
	ld.local.u64 	%rd98, [%rd1+8];
	and.b64  	%rd2640, %rd98, %rd97;
	xor.b64  	%rd2641, %rd98, %rd97;
	ld.local.u64 	%rd99, [%rd1+16];
	and.b64  	%rd2642, %rd99, %rd2641;
	or.b64  	%rd2643, %rd2642, %rd2640;
	add.s64 	%rd2644, %rd2633, %rd2643;
	add.s64 	%rd2645, %rd2644, %rd2639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1389,%dummy}, %rd2634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1390}, %rd2634;
	}
	shf.r.wrap.b32 	%r1391, %r1390, %r1389, 14;
	shf.r.wrap.b32 	%r1392, %r1389, %r1390, 14;
	mov.b64 	%rd2646, {%r1392, %r1391};
	shf.r.wrap.b32 	%r1393, %r1390, %r1389, 18;
	shf.r.wrap.b32 	%r1394, %r1389, %r1390, 18;
	mov.b64 	%rd2647, {%r1394, %r1393};
	xor.b64  	%rd2648, %rd2647, %rd2646;
	shf.l.wrap.b32 	%r1395, %r1389, %r1390, 23;
	shf.l.wrap.b32 	%r1396, %r1390, %r1389, 23;
	mov.b64 	%rd2649, {%r1396, %r1395};
	xor.b64  	%rd2650, %rd2648, %rd2649;
	xor.b64  	%rd2651, %rd93, %rd91;
	and.b64  	%rd2652, %rd2634, %rd2651;
	xor.b64  	%rd2653, %rd2652, %rd93;
	ld.local.u64 	%rd18564, [%rd1+72];
	add.s64 	%rd2654, %rd92, %rd18564;
	ld.const.u64 	%rd2655, [k_sha512+8];
	add.s64 	%rd2656, %rd2654, %rd2655;
	add.s64 	%rd2657, %rd2656, %rd2653;
	add.s64 	%rd2658, %rd2657, %rd2650;
	add.s64 	%rd2659, %rd2658, %rd99;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1397,%dummy}, %rd2645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1398}, %rd2645;
	}
	shf.r.wrap.b32 	%r1399, %r1398, %r1397, 28;
	shf.r.wrap.b32 	%r1400, %r1397, %r1398, 28;
	mov.b64 	%rd2660, {%r1400, %r1399};
	shf.l.wrap.b32 	%r1401, %r1397, %r1398, 30;
	shf.l.wrap.b32 	%r1402, %r1398, %r1397, 30;
	mov.b64 	%rd2661, {%r1402, %r1401};
	xor.b64  	%rd2662, %rd2661, %rd2660;
	shf.l.wrap.b32 	%r1403, %r1397, %r1398, 25;
	shf.l.wrap.b32 	%r1404, %r1398, %r1397, 25;
	mov.b64 	%rd2663, {%r1404, %r1403};
	xor.b64  	%rd2664, %rd2662, %rd2663;
	and.b64  	%rd2665, %rd2645, %rd97;
	xor.b64  	%rd2666, %rd2645, %rd97;
	and.b64  	%rd2667, %rd2666, %rd98;
	or.b64  	%rd2668, %rd2667, %rd2665;
	add.s64 	%rd2669, %rd2658, %rd2668;
	add.s64 	%rd2670, %rd2669, %rd2664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1405,%dummy}, %rd2659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1406}, %rd2659;
	}
	shf.r.wrap.b32 	%r1407, %r1406, %r1405, 14;
	shf.r.wrap.b32 	%r1408, %r1405, %r1406, 14;
	mov.b64 	%rd2671, {%r1408, %r1407};
	shf.r.wrap.b32 	%r1409, %r1406, %r1405, 18;
	shf.r.wrap.b32 	%r1410, %r1405, %r1406, 18;
	mov.b64 	%rd2672, {%r1410, %r1409};
	xor.b64  	%rd2673, %rd2672, %rd2671;
	shf.l.wrap.b32 	%r1411, %r1405, %r1406, 23;
	shf.l.wrap.b32 	%r1412, %r1406, %r1405, 23;
	mov.b64 	%rd2674, {%r1412, %r1411};
	xor.b64  	%rd2675, %rd2673, %rd2674;
	xor.b64  	%rd2676, %rd2634, %rd91;
	and.b64  	%rd2677, %rd2659, %rd2676;
	xor.b64  	%rd2678, %rd2677, %rd91;
	ld.local.u64 	%rd18565, [%rd1+80];
	add.s64 	%rd2679, %rd93, %rd18565;
	ld.const.u64 	%rd2680, [k_sha512+16];
	add.s64 	%rd2681, %rd2679, %rd2680;
	add.s64 	%rd2682, %rd2681, %rd2678;
	add.s64 	%rd2683, %rd2682, %rd2675;
	add.s64 	%rd2684, %rd2683, %rd98;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1413,%dummy}, %rd2670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1414}, %rd2670;
	}
	shf.r.wrap.b32 	%r1415, %r1414, %r1413, 28;
	shf.r.wrap.b32 	%r1416, %r1413, %r1414, 28;
	mov.b64 	%rd2685, {%r1416, %r1415};
	shf.l.wrap.b32 	%r1417, %r1413, %r1414, 30;
	shf.l.wrap.b32 	%r1418, %r1414, %r1413, 30;
	mov.b64 	%rd2686, {%r1418, %r1417};
	xor.b64  	%rd2687, %rd2686, %rd2685;
	shf.l.wrap.b32 	%r1419, %r1413, %r1414, 25;
	shf.l.wrap.b32 	%r1420, %r1414, %r1413, 25;
	mov.b64 	%rd2688, {%r1420, %r1419};
	xor.b64  	%rd2689, %rd2687, %rd2688;
	and.b64  	%rd2690, %rd2670, %rd2645;
	xor.b64  	%rd2691, %rd2670, %rd2645;
	and.b64  	%rd2692, %rd2691, %rd97;
	or.b64  	%rd2693, %rd2692, %rd2690;
	add.s64 	%rd2694, %rd2683, %rd2693;
	add.s64 	%rd2695, %rd2694, %rd2689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1421,%dummy}, %rd2684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1422}, %rd2684;
	}
	shf.r.wrap.b32 	%r1423, %r1422, %r1421, 14;
	shf.r.wrap.b32 	%r1424, %r1421, %r1422, 14;
	mov.b64 	%rd2696, {%r1424, %r1423};
	shf.r.wrap.b32 	%r1425, %r1422, %r1421, 18;
	shf.r.wrap.b32 	%r1426, %r1421, %r1422, 18;
	mov.b64 	%rd2697, {%r1426, %r1425};
	xor.b64  	%rd2698, %rd2697, %rd2696;
	shf.l.wrap.b32 	%r1427, %r1421, %r1422, 23;
	shf.l.wrap.b32 	%r1428, %r1422, %r1421, 23;
	mov.b64 	%rd2699, {%r1428, %r1427};
	xor.b64  	%rd2700, %rd2698, %rd2699;
	xor.b64  	%rd2701, %rd2659, %rd2634;
	and.b64  	%rd2702, %rd2684, %rd2701;
	xor.b64  	%rd2703, %rd2702, %rd2634;
	ld.local.u64 	%rd18566, [%rd1+88];
	add.s64 	%rd2704, %rd91, %rd18566;
	ld.const.u64 	%rd2705, [k_sha512+24];
	add.s64 	%rd2706, %rd2704, %rd2705;
	add.s64 	%rd2707, %rd2706, %rd2703;
	add.s64 	%rd2708, %rd2707, %rd2700;
	add.s64 	%rd2709, %rd2708, %rd97;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1429,%dummy}, %rd2695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1430}, %rd2695;
	}
	shf.r.wrap.b32 	%r1431, %r1430, %r1429, 28;
	shf.r.wrap.b32 	%r1432, %r1429, %r1430, 28;
	mov.b64 	%rd2710, {%r1432, %r1431};
	shf.l.wrap.b32 	%r1433, %r1429, %r1430, 30;
	shf.l.wrap.b32 	%r1434, %r1430, %r1429, 30;
	mov.b64 	%rd2711, {%r1434, %r1433};
	xor.b64  	%rd2712, %rd2711, %rd2710;
	shf.l.wrap.b32 	%r1435, %r1429, %r1430, 25;
	shf.l.wrap.b32 	%r1436, %r1430, %r1429, 25;
	mov.b64 	%rd2713, {%r1436, %r1435};
	xor.b64  	%rd2714, %rd2712, %rd2713;
	and.b64  	%rd2715, %rd2695, %rd2670;
	xor.b64  	%rd2716, %rd2695, %rd2670;
	and.b64  	%rd2717, %rd2716, %rd2645;
	or.b64  	%rd2718, %rd2717, %rd2715;
	add.s64 	%rd2719, %rd2708, %rd2718;
	add.s64 	%rd2720, %rd2719, %rd2714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1437,%dummy}, %rd2709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1438}, %rd2709;
	}
	shf.r.wrap.b32 	%r1439, %r1438, %r1437, 14;
	shf.r.wrap.b32 	%r1440, %r1437, %r1438, 14;
	mov.b64 	%rd2721, {%r1440, %r1439};
	shf.r.wrap.b32 	%r1441, %r1438, %r1437, 18;
	shf.r.wrap.b32 	%r1442, %r1437, %r1438, 18;
	mov.b64 	%rd2722, {%r1442, %r1441};
	xor.b64  	%rd2723, %rd2722, %rd2721;
	shf.l.wrap.b32 	%r1443, %r1437, %r1438, 23;
	shf.l.wrap.b32 	%r1444, %r1438, %r1437, 23;
	mov.b64 	%rd2724, {%r1444, %r1443};
	xor.b64  	%rd2725, %rd2723, %rd2724;
	xor.b64  	%rd2726, %rd2684, %rd2659;
	and.b64  	%rd2727, %rd2709, %rd2726;
	xor.b64  	%rd2728, %rd2727, %rd2659;
	ld.local.u64 	%rd18567, [%rd1+96];
	add.s64 	%rd2729, %rd2634, %rd18567;
	ld.const.u64 	%rd2730, [k_sha512+32];
	add.s64 	%rd2731, %rd2729, %rd2730;
	add.s64 	%rd2732, %rd2731, %rd2728;
	add.s64 	%rd2733, %rd2732, %rd2725;
	add.s64 	%rd2734, %rd2733, %rd2645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1445,%dummy}, %rd2720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1446}, %rd2720;
	}
	shf.r.wrap.b32 	%r1447, %r1446, %r1445, 28;
	shf.r.wrap.b32 	%r1448, %r1445, %r1446, 28;
	mov.b64 	%rd2735, {%r1448, %r1447};
	shf.l.wrap.b32 	%r1449, %r1445, %r1446, 30;
	shf.l.wrap.b32 	%r1450, %r1446, %r1445, 30;
	mov.b64 	%rd2736, {%r1450, %r1449};
	xor.b64  	%rd2737, %rd2736, %rd2735;
	shf.l.wrap.b32 	%r1451, %r1445, %r1446, 25;
	shf.l.wrap.b32 	%r1452, %r1446, %r1445, 25;
	mov.b64 	%rd2738, {%r1452, %r1451};
	xor.b64  	%rd2739, %rd2737, %rd2738;
	and.b64  	%rd2740, %rd2720, %rd2695;
	xor.b64  	%rd2741, %rd2720, %rd2695;
	and.b64  	%rd2742, %rd2741, %rd2670;
	or.b64  	%rd2743, %rd2742, %rd2740;
	add.s64 	%rd2744, %rd2733, %rd2743;
	add.s64 	%rd2745, %rd2744, %rd2739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1453,%dummy}, %rd2734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1454}, %rd2734;
	}
	shf.r.wrap.b32 	%r1455, %r1454, %r1453, 14;
	shf.r.wrap.b32 	%r1456, %r1453, %r1454, 14;
	mov.b64 	%rd2746, {%r1456, %r1455};
	shf.r.wrap.b32 	%r1457, %r1454, %r1453, 18;
	shf.r.wrap.b32 	%r1458, %r1453, %r1454, 18;
	mov.b64 	%rd2747, {%r1458, %r1457};
	xor.b64  	%rd2748, %rd2747, %rd2746;
	shf.l.wrap.b32 	%r1459, %r1453, %r1454, 23;
	shf.l.wrap.b32 	%r1460, %r1454, %r1453, 23;
	mov.b64 	%rd2749, {%r1460, %r1459};
	xor.b64  	%rd2750, %rd2748, %rd2749;
	xor.b64  	%rd2751, %rd2709, %rd2684;
	and.b64  	%rd2752, %rd2734, %rd2751;
	xor.b64  	%rd2753, %rd2752, %rd2684;
	ld.local.u64 	%rd18568, [%rd1+104];
	add.s64 	%rd2754, %rd2659, %rd18568;
	ld.const.u64 	%rd2755, [k_sha512+40];
	add.s64 	%rd2756, %rd2754, %rd2755;
	add.s64 	%rd2757, %rd2756, %rd2753;
	add.s64 	%rd2758, %rd2757, %rd2750;
	add.s64 	%rd2759, %rd2758, %rd2670;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1461,%dummy}, %rd2745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1462}, %rd2745;
	}
	shf.r.wrap.b32 	%r1463, %r1462, %r1461, 28;
	shf.r.wrap.b32 	%r1464, %r1461, %r1462, 28;
	mov.b64 	%rd2760, {%r1464, %r1463};
	shf.l.wrap.b32 	%r1465, %r1461, %r1462, 30;
	shf.l.wrap.b32 	%r1466, %r1462, %r1461, 30;
	mov.b64 	%rd2761, {%r1466, %r1465};
	xor.b64  	%rd2762, %rd2761, %rd2760;
	shf.l.wrap.b32 	%r1467, %r1461, %r1462, 25;
	shf.l.wrap.b32 	%r1468, %r1462, %r1461, 25;
	mov.b64 	%rd2763, {%r1468, %r1467};
	xor.b64  	%rd2764, %rd2762, %rd2763;
	and.b64  	%rd2765, %rd2745, %rd2720;
	xor.b64  	%rd2766, %rd2745, %rd2720;
	and.b64  	%rd2767, %rd2766, %rd2695;
	or.b64  	%rd2768, %rd2767, %rd2765;
	add.s64 	%rd2769, %rd2758, %rd2768;
	add.s64 	%rd2770, %rd2769, %rd2764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1469,%dummy}, %rd2759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1470}, %rd2759;
	}
	shf.r.wrap.b32 	%r1471, %r1470, %r1469, 14;
	shf.r.wrap.b32 	%r1472, %r1469, %r1470, 14;
	mov.b64 	%rd2771, {%r1472, %r1471};
	shf.r.wrap.b32 	%r1473, %r1470, %r1469, 18;
	shf.r.wrap.b32 	%r1474, %r1469, %r1470, 18;
	mov.b64 	%rd2772, {%r1474, %r1473};
	xor.b64  	%rd2773, %rd2772, %rd2771;
	shf.l.wrap.b32 	%r1475, %r1469, %r1470, 23;
	shf.l.wrap.b32 	%r1476, %r1470, %r1469, 23;
	mov.b64 	%rd2774, {%r1476, %r1475};
	xor.b64  	%rd2775, %rd2773, %rd2774;
	xor.b64  	%rd2776, %rd2734, %rd2709;
	and.b64  	%rd2777, %rd2759, %rd2776;
	xor.b64  	%rd2778, %rd2777, %rd2709;
	ld.local.u64 	%rd18569, [%rd1+112];
	add.s64 	%rd2779, %rd2684, %rd18569;
	ld.const.u64 	%rd2780, [k_sha512+48];
	add.s64 	%rd2781, %rd2779, %rd2780;
	add.s64 	%rd2782, %rd2781, %rd2778;
	add.s64 	%rd2783, %rd2782, %rd2775;
	add.s64 	%rd2784, %rd2783, %rd2695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1477,%dummy}, %rd2770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1478}, %rd2770;
	}
	shf.r.wrap.b32 	%r1479, %r1478, %r1477, 28;
	shf.r.wrap.b32 	%r1480, %r1477, %r1478, 28;
	mov.b64 	%rd2785, {%r1480, %r1479};
	shf.l.wrap.b32 	%r1481, %r1477, %r1478, 30;
	shf.l.wrap.b32 	%r1482, %r1478, %r1477, 30;
	mov.b64 	%rd2786, {%r1482, %r1481};
	xor.b64  	%rd2787, %rd2786, %rd2785;
	shf.l.wrap.b32 	%r1483, %r1477, %r1478, 25;
	shf.l.wrap.b32 	%r1484, %r1478, %r1477, 25;
	mov.b64 	%rd2788, {%r1484, %r1483};
	xor.b64  	%rd2789, %rd2787, %rd2788;
	and.b64  	%rd2790, %rd2770, %rd2745;
	xor.b64  	%rd2791, %rd2770, %rd2745;
	and.b64  	%rd2792, %rd2791, %rd2720;
	or.b64  	%rd2793, %rd2792, %rd2790;
	add.s64 	%rd2794, %rd2783, %rd2793;
	add.s64 	%rd2795, %rd2794, %rd2789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1485,%dummy}, %rd2784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1486}, %rd2784;
	}
	shf.r.wrap.b32 	%r1487, %r1486, %r1485, 14;
	shf.r.wrap.b32 	%r1488, %r1485, %r1486, 14;
	mov.b64 	%rd2796, {%r1488, %r1487};
	shf.r.wrap.b32 	%r1489, %r1486, %r1485, 18;
	shf.r.wrap.b32 	%r1490, %r1485, %r1486, 18;
	mov.b64 	%rd2797, {%r1490, %r1489};
	xor.b64  	%rd2798, %rd2797, %rd2796;
	shf.l.wrap.b32 	%r1491, %r1485, %r1486, 23;
	shf.l.wrap.b32 	%r1492, %r1486, %r1485, 23;
	mov.b64 	%rd2799, {%r1492, %r1491};
	xor.b64  	%rd2800, %rd2798, %rd2799;
	xor.b64  	%rd2801, %rd2759, %rd2734;
	and.b64  	%rd2802, %rd2784, %rd2801;
	xor.b64  	%rd2803, %rd2802, %rd2734;
	ld.local.u64 	%rd18570, [%rd1+120];
	add.s64 	%rd2804, %rd2709, %rd18570;
	ld.const.u64 	%rd2805, [k_sha512+56];
	add.s64 	%rd2806, %rd2804, %rd2805;
	add.s64 	%rd2807, %rd2806, %rd2803;
	add.s64 	%rd2808, %rd2807, %rd2800;
	add.s64 	%rd2809, %rd2808, %rd2720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1493,%dummy}, %rd2795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1494}, %rd2795;
	}
	shf.r.wrap.b32 	%r1495, %r1494, %r1493, 28;
	shf.r.wrap.b32 	%r1496, %r1493, %r1494, 28;
	mov.b64 	%rd2810, {%r1496, %r1495};
	shf.l.wrap.b32 	%r1497, %r1493, %r1494, 30;
	shf.l.wrap.b32 	%r1498, %r1494, %r1493, 30;
	mov.b64 	%rd2811, {%r1498, %r1497};
	xor.b64  	%rd2812, %rd2811, %rd2810;
	shf.l.wrap.b32 	%r1499, %r1493, %r1494, 25;
	shf.l.wrap.b32 	%r1500, %r1494, %r1493, 25;
	mov.b64 	%rd2813, {%r1500, %r1499};
	xor.b64  	%rd2814, %rd2812, %rd2813;
	and.b64  	%rd2815, %rd2795, %rd2770;
	xor.b64  	%rd2816, %rd2795, %rd2770;
	and.b64  	%rd2817, %rd2816, %rd2745;
	or.b64  	%rd2818, %rd2817, %rd2815;
	add.s64 	%rd2819, %rd2808, %rd2818;
	add.s64 	%rd2820, %rd2819, %rd2814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1501,%dummy}, %rd2809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1502}, %rd2809;
	}
	shf.r.wrap.b32 	%r1503, %r1502, %r1501, 14;
	shf.r.wrap.b32 	%r1504, %r1501, %r1502, 14;
	mov.b64 	%rd2821, {%r1504, %r1503};
	shf.r.wrap.b32 	%r1505, %r1502, %r1501, 18;
	shf.r.wrap.b32 	%r1506, %r1501, %r1502, 18;
	mov.b64 	%rd2822, {%r1506, %r1505};
	xor.b64  	%rd2823, %rd2822, %rd2821;
	shf.l.wrap.b32 	%r1507, %r1501, %r1502, 23;
	shf.l.wrap.b32 	%r1508, %r1502, %r1501, 23;
	mov.b64 	%rd2824, {%r1508, %r1507};
	xor.b64  	%rd2825, %rd2823, %rd2824;
	xor.b64  	%rd2826, %rd2784, %rd2759;
	and.b64  	%rd2827, %rd2809, %rd2826;
	xor.b64  	%rd2828, %rd2827, %rd2759;
	ld.local.u64 	%rd18554, [%rd1+128];
	add.s64 	%rd2829, %rd2734, %rd18554;
	ld.const.u64 	%rd2830, [k_sha512+64];
	add.s64 	%rd2831, %rd2829, %rd2830;
	add.s64 	%rd2832, %rd2831, %rd2828;
	add.s64 	%rd2833, %rd2832, %rd2825;
	add.s64 	%rd2834, %rd2833, %rd2745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1509,%dummy}, %rd2820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1510}, %rd2820;
	}
	shf.r.wrap.b32 	%r1511, %r1510, %r1509, 28;
	shf.r.wrap.b32 	%r1512, %r1509, %r1510, 28;
	mov.b64 	%rd2835, {%r1512, %r1511};
	shf.l.wrap.b32 	%r1513, %r1509, %r1510, 30;
	shf.l.wrap.b32 	%r1514, %r1510, %r1509, 30;
	mov.b64 	%rd2836, {%r1514, %r1513};
	xor.b64  	%rd2837, %rd2836, %rd2835;
	shf.l.wrap.b32 	%r1515, %r1509, %r1510, 25;
	shf.l.wrap.b32 	%r1516, %r1510, %r1509, 25;
	mov.b64 	%rd2838, {%r1516, %r1515};
	xor.b64  	%rd2839, %rd2837, %rd2838;
	and.b64  	%rd2840, %rd2820, %rd2795;
	xor.b64  	%rd2841, %rd2820, %rd2795;
	and.b64  	%rd2842, %rd2841, %rd2770;
	or.b64  	%rd2843, %rd2842, %rd2840;
	add.s64 	%rd2844, %rd2833, %rd2843;
	add.s64 	%rd2845, %rd2844, %rd2839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1517,%dummy}, %rd2834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1518}, %rd2834;
	}
	shf.r.wrap.b32 	%r1519, %r1518, %r1517, 14;
	shf.r.wrap.b32 	%r1520, %r1517, %r1518, 14;
	mov.b64 	%rd2846, {%r1520, %r1519};
	shf.r.wrap.b32 	%r1521, %r1518, %r1517, 18;
	shf.r.wrap.b32 	%r1522, %r1517, %r1518, 18;
	mov.b64 	%rd2847, {%r1522, %r1521};
	xor.b64  	%rd2848, %rd2847, %rd2846;
	shf.l.wrap.b32 	%r1523, %r1517, %r1518, 23;
	shf.l.wrap.b32 	%r1524, %r1518, %r1517, 23;
	mov.b64 	%rd2849, {%r1524, %r1523};
	xor.b64  	%rd2850, %rd2848, %rd2849;
	xor.b64  	%rd2851, %rd2809, %rd2784;
	and.b64  	%rd2852, %rd2834, %rd2851;
	xor.b64  	%rd2853, %rd2852, %rd2784;
	ld.local.u64 	%rd18553, [%rd1+136];
	add.s64 	%rd2854, %rd2759, %rd18553;
	ld.const.u64 	%rd2855, [k_sha512+72];
	add.s64 	%rd2856, %rd2854, %rd2855;
	add.s64 	%rd2857, %rd2856, %rd2853;
	add.s64 	%rd2858, %rd2857, %rd2850;
	add.s64 	%rd2859, %rd2858, %rd2770;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1525,%dummy}, %rd2845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1526}, %rd2845;
	}
	shf.r.wrap.b32 	%r1527, %r1526, %r1525, 28;
	shf.r.wrap.b32 	%r1528, %r1525, %r1526, 28;
	mov.b64 	%rd2860, {%r1528, %r1527};
	shf.l.wrap.b32 	%r1529, %r1525, %r1526, 30;
	shf.l.wrap.b32 	%r1530, %r1526, %r1525, 30;
	mov.b64 	%rd2861, {%r1530, %r1529};
	xor.b64  	%rd2862, %rd2861, %rd2860;
	shf.l.wrap.b32 	%r1531, %r1525, %r1526, 25;
	shf.l.wrap.b32 	%r1532, %r1526, %r1525, 25;
	mov.b64 	%rd2863, {%r1532, %r1531};
	xor.b64  	%rd2864, %rd2862, %rd2863;
	and.b64  	%rd2865, %rd2845, %rd2820;
	xor.b64  	%rd2866, %rd2845, %rd2820;
	and.b64  	%rd2867, %rd2866, %rd2795;
	or.b64  	%rd2868, %rd2867, %rd2865;
	add.s64 	%rd2869, %rd2858, %rd2868;
	add.s64 	%rd2870, %rd2869, %rd2864;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1533,%dummy}, %rd2859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1534}, %rd2859;
	}
	shf.r.wrap.b32 	%r1535, %r1534, %r1533, 14;
	shf.r.wrap.b32 	%r1536, %r1533, %r1534, 14;
	mov.b64 	%rd2871, {%r1536, %r1535};
	shf.r.wrap.b32 	%r1537, %r1534, %r1533, 18;
	shf.r.wrap.b32 	%r1538, %r1533, %r1534, 18;
	mov.b64 	%rd2872, {%r1538, %r1537};
	xor.b64  	%rd2873, %rd2872, %rd2871;
	shf.l.wrap.b32 	%r1539, %r1533, %r1534, 23;
	shf.l.wrap.b32 	%r1540, %r1534, %r1533, 23;
	mov.b64 	%rd2874, {%r1540, %r1539};
	xor.b64  	%rd2875, %rd2873, %rd2874;
	xor.b64  	%rd2876, %rd2834, %rd2809;
	and.b64  	%rd2877, %rd2859, %rd2876;
	xor.b64  	%rd2878, %rd2877, %rd2809;
	ld.local.u64 	%rd18552, [%rd1+144];
	add.s64 	%rd2879, %rd2784, %rd18552;
	ld.const.u64 	%rd2880, [k_sha512+80];
	add.s64 	%rd2881, %rd2879, %rd2880;
	add.s64 	%rd2882, %rd2881, %rd2878;
	add.s64 	%rd2883, %rd2882, %rd2875;
	add.s64 	%rd2884, %rd2883, %rd2795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1541,%dummy}, %rd2870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1542}, %rd2870;
	}
	shf.r.wrap.b32 	%r1543, %r1542, %r1541, 28;
	shf.r.wrap.b32 	%r1544, %r1541, %r1542, 28;
	mov.b64 	%rd2885, {%r1544, %r1543};
	shf.l.wrap.b32 	%r1545, %r1541, %r1542, 30;
	shf.l.wrap.b32 	%r1546, %r1542, %r1541, 30;
	mov.b64 	%rd2886, {%r1546, %r1545};
	xor.b64  	%rd2887, %rd2886, %rd2885;
	shf.l.wrap.b32 	%r1547, %r1541, %r1542, 25;
	shf.l.wrap.b32 	%r1548, %r1542, %r1541, 25;
	mov.b64 	%rd2888, {%r1548, %r1547};
	xor.b64  	%rd2889, %rd2887, %rd2888;
	and.b64  	%rd2890, %rd2870, %rd2845;
	xor.b64  	%rd2891, %rd2870, %rd2845;
	and.b64  	%rd2892, %rd2891, %rd2820;
	or.b64  	%rd2893, %rd2892, %rd2890;
	add.s64 	%rd2894, %rd2883, %rd2893;
	add.s64 	%rd2895, %rd2894, %rd2889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1549,%dummy}, %rd2884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1550}, %rd2884;
	}
	shf.r.wrap.b32 	%r1551, %r1550, %r1549, 14;
	shf.r.wrap.b32 	%r1552, %r1549, %r1550, 14;
	mov.b64 	%rd2896, {%r1552, %r1551};
	shf.r.wrap.b32 	%r1553, %r1550, %r1549, 18;
	shf.r.wrap.b32 	%r1554, %r1549, %r1550, 18;
	mov.b64 	%rd2897, {%r1554, %r1553};
	xor.b64  	%rd2898, %rd2897, %rd2896;
	shf.l.wrap.b32 	%r1555, %r1549, %r1550, 23;
	shf.l.wrap.b32 	%r1556, %r1550, %r1549, 23;
	mov.b64 	%rd2899, {%r1556, %r1555};
	xor.b64  	%rd2900, %rd2898, %rd2899;
	xor.b64  	%rd2901, %rd2859, %rd2834;
	and.b64  	%rd2902, %rd2884, %rd2901;
	xor.b64  	%rd2903, %rd2902, %rd2834;
	ld.local.u64 	%rd18551, [%rd1+152];
	add.s64 	%rd2904, %rd2809, %rd18551;
	ld.const.u64 	%rd2905, [k_sha512+88];
	add.s64 	%rd2906, %rd2904, %rd2905;
	add.s64 	%rd2907, %rd2906, %rd2903;
	add.s64 	%rd2908, %rd2907, %rd2900;
	add.s64 	%rd2909, %rd2908, %rd2820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1557,%dummy}, %rd2895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1558}, %rd2895;
	}
	shf.r.wrap.b32 	%r1559, %r1558, %r1557, 28;
	shf.r.wrap.b32 	%r1560, %r1557, %r1558, 28;
	mov.b64 	%rd2910, {%r1560, %r1559};
	shf.l.wrap.b32 	%r1561, %r1557, %r1558, 30;
	shf.l.wrap.b32 	%r1562, %r1558, %r1557, 30;
	mov.b64 	%rd2911, {%r1562, %r1561};
	xor.b64  	%rd2912, %rd2911, %rd2910;
	shf.l.wrap.b32 	%r1563, %r1557, %r1558, 25;
	shf.l.wrap.b32 	%r1564, %r1558, %r1557, 25;
	mov.b64 	%rd2913, {%r1564, %r1563};
	xor.b64  	%rd2914, %rd2912, %rd2913;
	and.b64  	%rd2915, %rd2895, %rd2870;
	xor.b64  	%rd2916, %rd2895, %rd2870;
	and.b64  	%rd2917, %rd2916, %rd2845;
	or.b64  	%rd2918, %rd2917, %rd2915;
	add.s64 	%rd2919, %rd2908, %rd2918;
	add.s64 	%rd2920, %rd2919, %rd2914;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1565,%dummy}, %rd2909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1566}, %rd2909;
	}
	shf.r.wrap.b32 	%r1567, %r1566, %r1565, 14;
	shf.r.wrap.b32 	%r1568, %r1565, %r1566, 14;
	mov.b64 	%rd2921, {%r1568, %r1567};
	shf.r.wrap.b32 	%r1569, %r1566, %r1565, 18;
	shf.r.wrap.b32 	%r1570, %r1565, %r1566, 18;
	mov.b64 	%rd2922, {%r1570, %r1569};
	xor.b64  	%rd2923, %rd2922, %rd2921;
	shf.l.wrap.b32 	%r1571, %r1565, %r1566, 23;
	shf.l.wrap.b32 	%r1572, %r1566, %r1565, 23;
	mov.b64 	%rd2924, {%r1572, %r1571};
	xor.b64  	%rd2925, %rd2923, %rd2924;
	xor.b64  	%rd2926, %rd2884, %rd2859;
	and.b64  	%rd2927, %rd2909, %rd2926;
	xor.b64  	%rd2928, %rd2927, %rd2859;
	ld.local.u64 	%rd18550, [%rd1+160];
	add.s64 	%rd2929, %rd2834, %rd18550;
	ld.const.u64 	%rd2930, [k_sha512+96];
	add.s64 	%rd2931, %rd2929, %rd2930;
	add.s64 	%rd2932, %rd2931, %rd2928;
	add.s64 	%rd2933, %rd2932, %rd2925;
	add.s64 	%rd18562, %rd2933, %rd2845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1573,%dummy}, %rd2920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1574}, %rd2920;
	}
	shf.r.wrap.b32 	%r1575, %r1574, %r1573, 28;
	shf.r.wrap.b32 	%r1576, %r1573, %r1574, 28;
	mov.b64 	%rd2934, {%r1576, %r1575};
	shf.l.wrap.b32 	%r1577, %r1573, %r1574, 30;
	shf.l.wrap.b32 	%r1578, %r1574, %r1573, 30;
	mov.b64 	%rd2935, {%r1578, %r1577};
	xor.b64  	%rd2936, %rd2935, %rd2934;
	shf.l.wrap.b32 	%r1579, %r1573, %r1574, 25;
	shf.l.wrap.b32 	%r1580, %r1574, %r1573, 25;
	mov.b64 	%rd2937, {%r1580, %r1579};
	xor.b64  	%rd2938, %rd2936, %rd2937;
	and.b64  	%rd2939, %rd2920, %rd2895;
	xor.b64  	%rd2940, %rd2920, %rd2895;
	and.b64  	%rd2941, %rd2940, %rd2870;
	or.b64  	%rd2942, %rd2941, %rd2939;
	add.s64 	%rd2943, %rd2933, %rd2942;
	add.s64 	%rd18558, %rd2943, %rd2938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1581,%dummy}, %rd18562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1582}, %rd18562;
	}
	shf.r.wrap.b32 	%r1583, %r1582, %r1581, 14;
	shf.r.wrap.b32 	%r1584, %r1581, %r1582, 14;
	mov.b64 	%rd2944, {%r1584, %r1583};
	shf.r.wrap.b32 	%r1585, %r1582, %r1581, 18;
	shf.r.wrap.b32 	%r1586, %r1581, %r1582, 18;
	mov.b64 	%rd2945, {%r1586, %r1585};
	xor.b64  	%rd2946, %rd2945, %rd2944;
	shf.l.wrap.b32 	%r1587, %r1581, %r1582, 23;
	shf.l.wrap.b32 	%r1588, %r1582, %r1581, 23;
	mov.b64 	%rd2947, {%r1588, %r1587};
	xor.b64  	%rd2948, %rd2946, %rd2947;
	xor.b64  	%rd2949, %rd2909, %rd2884;
	and.b64  	%rd2950, %rd18562, %rd2949;
	xor.b64  	%rd2951, %rd2950, %rd2884;
	ld.local.u64 	%rd18549, [%rd1+168];
	add.s64 	%rd2952, %rd2859, %rd18549;
	ld.const.u64 	%rd2953, [k_sha512+104];
	add.s64 	%rd2954, %rd2952, %rd2953;
	add.s64 	%rd2955, %rd2954, %rd2951;
	add.s64 	%rd2956, %rd2955, %rd2948;
	add.s64 	%rd18561, %rd2956, %rd2870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1589,%dummy}, %rd18558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1590}, %rd18558;
	}
	shf.r.wrap.b32 	%r1591, %r1590, %r1589, 28;
	shf.r.wrap.b32 	%r1592, %r1589, %r1590, 28;
	mov.b64 	%rd2957, {%r1592, %r1591};
	shf.l.wrap.b32 	%r1593, %r1589, %r1590, 30;
	shf.l.wrap.b32 	%r1594, %r1590, %r1589, 30;
	mov.b64 	%rd2958, {%r1594, %r1593};
	xor.b64  	%rd2959, %rd2958, %rd2957;
	shf.l.wrap.b32 	%r1595, %r1589, %r1590, 25;
	shf.l.wrap.b32 	%r1596, %r1590, %r1589, 25;
	mov.b64 	%rd2960, {%r1596, %r1595};
	xor.b64  	%rd2961, %rd2959, %rd2960;
	and.b64  	%rd2962, %rd18558, %rd2920;
	xor.b64  	%rd2963, %rd18558, %rd2920;
	and.b64  	%rd2964, %rd2963, %rd2895;
	or.b64  	%rd2965, %rd2964, %rd2962;
	add.s64 	%rd2966, %rd2956, %rd2965;
	add.s64 	%rd18557, %rd2966, %rd2961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1597,%dummy}, %rd18561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1598}, %rd18561;
	}
	shf.r.wrap.b32 	%r1599, %r1598, %r1597, 14;
	shf.r.wrap.b32 	%r1600, %r1597, %r1598, 14;
	mov.b64 	%rd2967, {%r1600, %r1599};
	shf.r.wrap.b32 	%r1601, %r1598, %r1597, 18;
	shf.r.wrap.b32 	%r1602, %r1597, %r1598, 18;
	mov.b64 	%rd2968, {%r1602, %r1601};
	xor.b64  	%rd2969, %rd2968, %rd2967;
	shf.l.wrap.b32 	%r1603, %r1597, %r1598, 23;
	shf.l.wrap.b32 	%r1604, %r1598, %r1597, 23;
	mov.b64 	%rd2970, {%r1604, %r1603};
	xor.b64  	%rd2971, %rd2969, %rd2970;
	xor.b64  	%rd2972, %rd18562, %rd2909;
	and.b64  	%rd2973, %rd18561, %rd2972;
	xor.b64  	%rd2974, %rd2973, %rd2909;
	ld.local.u64 	%rd18548, [%rd1+176];
	add.s64 	%rd2975, %rd2884, %rd18548;
	ld.const.u64 	%rd2976, [k_sha512+112];
	add.s64 	%rd2977, %rd2975, %rd2976;
	add.s64 	%rd2978, %rd2977, %rd2974;
	add.s64 	%rd2979, %rd2978, %rd2971;
	add.s64 	%rd18560, %rd2979, %rd2895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1605,%dummy}, %rd18557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1606}, %rd18557;
	}
	shf.r.wrap.b32 	%r1607, %r1606, %r1605, 28;
	shf.r.wrap.b32 	%r1608, %r1605, %r1606, 28;
	mov.b64 	%rd2980, {%r1608, %r1607};
	shf.l.wrap.b32 	%r1609, %r1605, %r1606, 30;
	shf.l.wrap.b32 	%r1610, %r1606, %r1605, 30;
	mov.b64 	%rd2981, {%r1610, %r1609};
	xor.b64  	%rd2982, %rd2981, %rd2980;
	shf.l.wrap.b32 	%r1611, %r1605, %r1606, 25;
	shf.l.wrap.b32 	%r1612, %r1606, %r1605, 25;
	mov.b64 	%rd2983, {%r1612, %r1611};
	xor.b64  	%rd2984, %rd2982, %rd2983;
	and.b64  	%rd2985, %rd18557, %rd18558;
	xor.b64  	%rd2986, %rd18557, %rd18558;
	and.b64  	%rd2987, %rd2986, %rd2920;
	or.b64  	%rd2988, %rd2987, %rd2985;
	add.s64 	%rd2989, %rd2979, %rd2988;
	add.s64 	%rd18556, %rd2989, %rd2984;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1613,%dummy}, %rd18560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1614}, %rd18560;
	}
	shf.r.wrap.b32 	%r1615, %r1614, %r1613, 14;
	shf.r.wrap.b32 	%r1616, %r1613, %r1614, 14;
	mov.b64 	%rd2990, {%r1616, %r1615};
	shf.r.wrap.b32 	%r1617, %r1614, %r1613, 18;
	shf.r.wrap.b32 	%r1618, %r1613, %r1614, 18;
	mov.b64 	%rd2991, {%r1618, %r1617};
	xor.b64  	%rd2992, %rd2991, %rd2990;
	shf.l.wrap.b32 	%r1619, %r1613, %r1614, 23;
	shf.l.wrap.b32 	%r1620, %r1614, %r1613, 23;
	mov.b64 	%rd2993, {%r1620, %r1619};
	xor.b64  	%rd2994, %rd2992, %rd2993;
	xor.b64  	%rd2995, %rd18561, %rd18562;
	and.b64  	%rd2996, %rd18560, %rd2995;
	xor.b64  	%rd2997, %rd2996, %rd18562;
	ld.local.u64 	%rd18547, [%rd1+184];
	add.s64 	%rd2998, %rd2909, %rd18547;
	ld.const.u64 	%rd2999, [k_sha512+120];
	add.s64 	%rd3000, %rd2998, %rd2999;
	add.s64 	%rd3001, %rd3000, %rd2997;
	add.s64 	%rd3002, %rd3001, %rd2994;
	add.s64 	%rd18559, %rd3002, %rd2920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1621,%dummy}, %rd18556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1622}, %rd18556;
	}
	shf.r.wrap.b32 	%r1623, %r1622, %r1621, 28;
	shf.r.wrap.b32 	%r1624, %r1621, %r1622, 28;
	mov.b64 	%rd3003, {%r1624, %r1623};
	shf.l.wrap.b32 	%r1625, %r1621, %r1622, 30;
	shf.l.wrap.b32 	%r1626, %r1622, %r1621, 30;
	mov.b64 	%rd3004, {%r1626, %r1625};
	xor.b64  	%rd3005, %rd3004, %rd3003;
	shf.l.wrap.b32 	%r1627, %r1621, %r1622, 25;
	shf.l.wrap.b32 	%r1628, %r1622, %r1621, 25;
	mov.b64 	%rd3006, {%r1628, %r1627};
	xor.b64  	%rd3007, %rd3005, %rd3006;
	and.b64  	%rd3008, %rd18556, %rd18557;
	xor.b64  	%rd3009, %rd18556, %rd18557;
	and.b64  	%rd3010, %rd3009, %rd18558;
	or.b64  	%rd3011, %rd3010, %rd3008;
	add.s64 	%rd3012, %rd3002, %rd3011;
	add.s64 	%rd18555, %rd3012, %rd3007;
	mov.u32 	%r12906, 16;

BB0_52:
	shr.u64 	%rd3013, %rd18548, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1629,%dummy}, %rd18548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1630}, %rd18548;
	}
	shf.r.wrap.b32 	%r1631, %r1630, %r1629, 19;
	shf.r.wrap.b32 	%r1632, %r1629, %r1630, 19;
	mov.b64 	%rd3014, {%r1632, %r1631};
	xor.b64  	%rd3015, %rd3014, %rd3013;
	shf.l.wrap.b32 	%r1633, %r1629, %r1630, 3;
	shf.l.wrap.b32 	%r1634, %r1630, %r1629, 3;
	mov.b64 	%rd3016, {%r1634, %r1633};
	xor.b64  	%rd3017, %rd3015, %rd3016;
	shr.u64 	%rd3018, %rd18564, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1635,%dummy}, %rd18564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1636}, %rd18564;
	}
	shf.r.wrap.b32 	%r1637, %r1636, %r1635, 1;
	shf.r.wrap.b32 	%r1638, %r1635, %r1636, 1;
	mov.b64 	%rd3019, {%r1638, %r1637};
	xor.b64  	%rd3020, %rd3019, %rd3018;
	shf.r.wrap.b32 	%r1639, %r1636, %r1635, 8;
	shf.r.wrap.b32 	%r1640, %r1635, %r1636, 8;
	mov.b64 	%rd3021, {%r1640, %r1639};
	xor.b64  	%rd3022, %rd3020, %rd3021;
	add.s64 	%rd3023, %rd18553, %rd18563;
	add.s64 	%rd3024, %rd3023, %rd3017;
	add.s64 	%rd18563, %rd3024, %rd3022;
	shr.u64 	%rd3025, %rd18547, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1641,%dummy}, %rd18547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1642}, %rd18547;
	}
	shf.r.wrap.b32 	%r1643, %r1642, %r1641, 19;
	shf.r.wrap.b32 	%r1644, %r1641, %r1642, 19;
	mov.b64 	%rd3026, {%r1644, %r1643};
	xor.b64  	%rd3027, %rd3026, %rd3025;
	shf.l.wrap.b32 	%r1645, %r1641, %r1642, 3;
	shf.l.wrap.b32 	%r1646, %r1642, %r1641, 3;
	mov.b64 	%rd3028, {%r1646, %r1645};
	xor.b64  	%rd3029, %rd3027, %rd3028;
	shr.u64 	%rd3030, %rd18565, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1647,%dummy}, %rd18565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1648}, %rd18565;
	}
	shf.r.wrap.b32 	%r1649, %r1648, %r1647, 1;
	shf.r.wrap.b32 	%r1650, %r1647, %r1648, 1;
	mov.b64 	%rd3031, {%r1650, %r1649};
	xor.b64  	%rd3032, %rd3031, %rd3030;
	shf.r.wrap.b32 	%r1651, %r1648, %r1647, 8;
	shf.r.wrap.b32 	%r1652, %r1647, %r1648, 8;
	mov.b64 	%rd3033, {%r1652, %r1651};
	xor.b64  	%rd3034, %rd3032, %rd3033;
	add.s64 	%rd3035, %rd18552, %rd18564;
	add.s64 	%rd3036, %rd3035, %rd3029;
	add.s64 	%rd18564, %rd3036, %rd3034;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1653,%dummy}, %rd18563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1654}, %rd18563;
	}
	shf.r.wrap.b32 	%r1655, %r1654, %r1653, 19;
	shf.r.wrap.b32 	%r1656, %r1653, %r1654, 19;
	mov.b64 	%rd3037, {%r1656, %r1655};
	shf.l.wrap.b32 	%r1657, %r1653, %r1654, 3;
	shf.l.wrap.b32 	%r1658, %r1654, %r1653, 3;
	mov.b64 	%rd3038, {%r1658, %r1657};
	shr.u64 	%rd3039, %rd18563, 6;
	xor.b64  	%rd3040, %rd3037, %rd3039;
	xor.b64  	%rd3041, %rd3040, %rd3038;
	shr.u64 	%rd3042, %rd18566, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1659,%dummy}, %rd18566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1660}, %rd18566;
	}
	shf.r.wrap.b32 	%r1661, %r1660, %r1659, 1;
	shf.r.wrap.b32 	%r1662, %r1659, %r1660, 1;
	mov.b64 	%rd3043, {%r1662, %r1661};
	xor.b64  	%rd3044, %rd3043, %rd3042;
	shf.r.wrap.b32 	%r1663, %r1660, %r1659, 8;
	shf.r.wrap.b32 	%r1664, %r1659, %r1660, 8;
	mov.b64 	%rd3045, {%r1664, %r1663};
	xor.b64  	%rd3046, %rd3044, %rd3045;
	add.s64 	%rd3047, %rd18551, %rd18565;
	add.s64 	%rd3048, %rd3047, %rd3041;
	add.s64 	%rd18565, %rd3048, %rd3046;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1665,%dummy}, %rd18564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1666}, %rd18564;
	}
	shf.r.wrap.b32 	%r1667, %r1666, %r1665, 19;
	shf.r.wrap.b32 	%r1668, %r1665, %r1666, 19;
	mov.b64 	%rd3049, {%r1668, %r1667};
	shf.l.wrap.b32 	%r1669, %r1665, %r1666, 3;
	shf.l.wrap.b32 	%r1670, %r1666, %r1665, 3;
	mov.b64 	%rd3050, {%r1670, %r1669};
	shr.u64 	%rd3051, %rd18564, 6;
	xor.b64  	%rd3052, %rd3049, %rd3051;
	xor.b64  	%rd3053, %rd3052, %rd3050;
	shr.u64 	%rd3054, %rd18567, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1671,%dummy}, %rd18567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1672}, %rd18567;
	}
	shf.r.wrap.b32 	%r1673, %r1672, %r1671, 1;
	shf.r.wrap.b32 	%r1674, %r1671, %r1672, 1;
	mov.b64 	%rd3055, {%r1674, %r1673};
	xor.b64  	%rd3056, %rd3055, %rd3054;
	shf.r.wrap.b32 	%r1675, %r1672, %r1671, 8;
	shf.r.wrap.b32 	%r1676, %r1671, %r1672, 8;
	mov.b64 	%rd3057, {%r1676, %r1675};
	xor.b64  	%rd3058, %rd3056, %rd3057;
	add.s64 	%rd3059, %rd18550, %rd18566;
	add.s64 	%rd3060, %rd3059, %rd3053;
	add.s64 	%rd18566, %rd3060, %rd3058;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1677,%dummy}, %rd18565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1678}, %rd18565;
	}
	shf.r.wrap.b32 	%r1679, %r1678, %r1677, 19;
	shf.r.wrap.b32 	%r1680, %r1677, %r1678, 19;
	mov.b64 	%rd3061, {%r1680, %r1679};
	shf.l.wrap.b32 	%r1681, %r1677, %r1678, 3;
	shf.l.wrap.b32 	%r1682, %r1678, %r1677, 3;
	mov.b64 	%rd3062, {%r1682, %r1681};
	shr.u64 	%rd3063, %rd18565, 6;
	xor.b64  	%rd3064, %rd3061, %rd3063;
	xor.b64  	%rd3065, %rd3064, %rd3062;
	shr.u64 	%rd3066, %rd18568, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1683,%dummy}, %rd18568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1684}, %rd18568;
	}
	shf.r.wrap.b32 	%r1685, %r1684, %r1683, 1;
	shf.r.wrap.b32 	%r1686, %r1683, %r1684, 1;
	mov.b64 	%rd3067, {%r1686, %r1685};
	xor.b64  	%rd3068, %rd3067, %rd3066;
	shf.r.wrap.b32 	%r1687, %r1684, %r1683, 8;
	shf.r.wrap.b32 	%r1688, %r1683, %r1684, 8;
	mov.b64 	%rd3069, {%r1688, %r1687};
	xor.b64  	%rd3070, %rd3068, %rd3069;
	add.s64 	%rd3071, %rd18549, %rd18567;
	add.s64 	%rd3072, %rd3071, %rd3065;
	add.s64 	%rd18567, %rd3072, %rd3070;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1689,%dummy}, %rd18566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1690}, %rd18566;
	}
	shf.r.wrap.b32 	%r1691, %r1690, %r1689, 19;
	shf.r.wrap.b32 	%r1692, %r1689, %r1690, 19;
	mov.b64 	%rd3073, {%r1692, %r1691};
	shf.l.wrap.b32 	%r1693, %r1689, %r1690, 3;
	shf.l.wrap.b32 	%r1694, %r1690, %r1689, 3;
	mov.b64 	%rd3074, {%r1694, %r1693};
	shr.u64 	%rd3075, %rd18566, 6;
	xor.b64  	%rd3076, %rd3073, %rd3075;
	xor.b64  	%rd3077, %rd3076, %rd3074;
	shr.u64 	%rd3078, %rd18569, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1695,%dummy}, %rd18569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1696}, %rd18569;
	}
	shf.r.wrap.b32 	%r1697, %r1696, %r1695, 1;
	shf.r.wrap.b32 	%r1698, %r1695, %r1696, 1;
	mov.b64 	%rd3079, {%r1698, %r1697};
	xor.b64  	%rd3080, %rd3079, %rd3078;
	shf.r.wrap.b32 	%r1699, %r1696, %r1695, 8;
	shf.r.wrap.b32 	%r1700, %r1695, %r1696, 8;
	mov.b64 	%rd3081, {%r1700, %r1699};
	xor.b64  	%rd3082, %rd3080, %rd3081;
	add.s64 	%rd3083, %rd18548, %rd18568;
	add.s64 	%rd3084, %rd3083, %rd3077;
	add.s64 	%rd18568, %rd3084, %rd3082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1701,%dummy}, %rd18567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1702}, %rd18567;
	}
	shf.r.wrap.b32 	%r1703, %r1702, %r1701, 19;
	shf.r.wrap.b32 	%r1704, %r1701, %r1702, 19;
	mov.b64 	%rd3085, {%r1704, %r1703};
	shf.l.wrap.b32 	%r1705, %r1701, %r1702, 3;
	shf.l.wrap.b32 	%r1706, %r1702, %r1701, 3;
	mov.b64 	%rd3086, {%r1706, %r1705};
	shr.u64 	%rd3087, %rd18567, 6;
	xor.b64  	%rd3088, %rd3085, %rd3087;
	xor.b64  	%rd3089, %rd3088, %rd3086;
	shr.u64 	%rd3090, %rd18570, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1707,%dummy}, %rd18570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1708}, %rd18570;
	}
	shf.r.wrap.b32 	%r1709, %r1708, %r1707, 1;
	shf.r.wrap.b32 	%r1710, %r1707, %r1708, 1;
	mov.b64 	%rd3091, {%r1710, %r1709};
	xor.b64  	%rd3092, %rd3091, %rd3090;
	shf.r.wrap.b32 	%r1711, %r1708, %r1707, 8;
	shf.r.wrap.b32 	%r1712, %r1707, %r1708, 8;
	mov.b64 	%rd3093, {%r1712, %r1711};
	xor.b64  	%rd3094, %rd3092, %rd3093;
	add.s64 	%rd3095, %rd18547, %rd18569;
	add.s64 	%rd3096, %rd3095, %rd3089;
	add.s64 	%rd18569, %rd3096, %rd3094;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1713,%dummy}, %rd18568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1714}, %rd18568;
	}
	shf.r.wrap.b32 	%r1715, %r1714, %r1713, 19;
	shf.r.wrap.b32 	%r1716, %r1713, %r1714, 19;
	mov.b64 	%rd3097, {%r1716, %r1715};
	shf.l.wrap.b32 	%r1717, %r1713, %r1714, 3;
	shf.l.wrap.b32 	%r1718, %r1714, %r1713, 3;
	mov.b64 	%rd3098, {%r1718, %r1717};
	shr.u64 	%rd3099, %rd18568, 6;
	xor.b64  	%rd3100, %rd3097, %rd3099;
	xor.b64  	%rd3101, %rd3100, %rd3098;
	shr.u64 	%rd3102, %rd18554, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1719,%dummy}, %rd18554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1720}, %rd18554;
	}
	shf.r.wrap.b32 	%r1721, %r1720, %r1719, 1;
	shf.r.wrap.b32 	%r1722, %r1719, %r1720, 1;
	mov.b64 	%rd3103, {%r1722, %r1721};
	xor.b64  	%rd3104, %rd3103, %rd3102;
	shf.r.wrap.b32 	%r1723, %r1720, %r1719, 8;
	shf.r.wrap.b32 	%r1724, %r1719, %r1720, 8;
	mov.b64 	%rd3105, {%r1724, %r1723};
	xor.b64  	%rd3106, %rd3104, %rd3105;
	add.s64 	%rd3107, %rd18563, %rd18570;
	add.s64 	%rd3108, %rd3107, %rd3101;
	add.s64 	%rd18570, %rd3108, %rd3106;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1725,%dummy}, %rd18569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1726}, %rd18569;
	}
	shf.r.wrap.b32 	%r1727, %r1726, %r1725, 19;
	shf.r.wrap.b32 	%r1728, %r1725, %r1726, 19;
	mov.b64 	%rd3109, {%r1728, %r1727};
	shf.l.wrap.b32 	%r1729, %r1725, %r1726, 3;
	shf.l.wrap.b32 	%r1730, %r1726, %r1725, 3;
	mov.b64 	%rd3110, {%r1730, %r1729};
	shr.u64 	%rd3111, %rd18569, 6;
	xor.b64  	%rd3112, %rd3109, %rd3111;
	xor.b64  	%rd3113, %rd3112, %rd3110;
	shr.u64 	%rd3114, %rd18553, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1731,%dummy}, %rd18553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1732}, %rd18553;
	}
	shf.r.wrap.b32 	%r1733, %r1732, %r1731, 1;
	shf.r.wrap.b32 	%r1734, %r1731, %r1732, 1;
	mov.b64 	%rd3115, {%r1734, %r1733};
	xor.b64  	%rd3116, %rd3115, %rd3114;
	shf.r.wrap.b32 	%r1735, %r1732, %r1731, 8;
	shf.r.wrap.b32 	%r1736, %r1731, %r1732, 8;
	mov.b64 	%rd3117, {%r1736, %r1735};
	xor.b64  	%rd3118, %rd3116, %rd3117;
	add.s64 	%rd3119, %rd18564, %rd18554;
	add.s64 	%rd3120, %rd3119, %rd3113;
	add.s64 	%rd18554, %rd3120, %rd3118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1737,%dummy}, %rd18570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1738}, %rd18570;
	}
	shf.r.wrap.b32 	%r1739, %r1738, %r1737, 19;
	shf.r.wrap.b32 	%r1740, %r1737, %r1738, 19;
	mov.b64 	%rd3121, {%r1740, %r1739};
	shf.l.wrap.b32 	%r1741, %r1737, %r1738, 3;
	shf.l.wrap.b32 	%r1742, %r1738, %r1737, 3;
	mov.b64 	%rd3122, {%r1742, %r1741};
	shr.u64 	%rd3123, %rd18570, 6;
	xor.b64  	%rd3124, %rd3121, %rd3123;
	xor.b64  	%rd3125, %rd3124, %rd3122;
	shr.u64 	%rd3126, %rd18552, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1743,%dummy}, %rd18552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1744}, %rd18552;
	}
	shf.r.wrap.b32 	%r1745, %r1744, %r1743, 1;
	shf.r.wrap.b32 	%r1746, %r1743, %r1744, 1;
	mov.b64 	%rd3127, {%r1746, %r1745};
	xor.b64  	%rd3128, %rd3127, %rd3126;
	shf.r.wrap.b32 	%r1747, %r1744, %r1743, 8;
	shf.r.wrap.b32 	%r1748, %r1743, %r1744, 8;
	mov.b64 	%rd3129, {%r1748, %r1747};
	xor.b64  	%rd3130, %rd3128, %rd3129;
	add.s64 	%rd3131, %rd18565, %rd18553;
	add.s64 	%rd3132, %rd3131, %rd3125;
	add.s64 	%rd18553, %rd3132, %rd3130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1749,%dummy}, %rd18554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1750}, %rd18554;
	}
	shf.r.wrap.b32 	%r1751, %r1750, %r1749, 19;
	shf.r.wrap.b32 	%r1752, %r1749, %r1750, 19;
	mov.b64 	%rd3133, {%r1752, %r1751};
	shf.l.wrap.b32 	%r1753, %r1749, %r1750, 3;
	shf.l.wrap.b32 	%r1754, %r1750, %r1749, 3;
	mov.b64 	%rd3134, {%r1754, %r1753};
	shr.u64 	%rd3135, %rd18554, 6;
	xor.b64  	%rd3136, %rd3133, %rd3135;
	xor.b64  	%rd3137, %rd3136, %rd3134;
	shr.u64 	%rd3138, %rd18551, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1755,%dummy}, %rd18551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1756}, %rd18551;
	}
	shf.r.wrap.b32 	%r1757, %r1756, %r1755, 1;
	shf.r.wrap.b32 	%r1758, %r1755, %r1756, 1;
	mov.b64 	%rd3139, {%r1758, %r1757};
	xor.b64  	%rd3140, %rd3139, %rd3138;
	shf.r.wrap.b32 	%r1759, %r1756, %r1755, 8;
	shf.r.wrap.b32 	%r1760, %r1755, %r1756, 8;
	mov.b64 	%rd3141, {%r1760, %r1759};
	xor.b64  	%rd3142, %rd3140, %rd3141;
	add.s64 	%rd3143, %rd18566, %rd18552;
	add.s64 	%rd3144, %rd3143, %rd3137;
	add.s64 	%rd18552, %rd3144, %rd3142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1761,%dummy}, %rd18553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1762}, %rd18553;
	}
	shf.r.wrap.b32 	%r1763, %r1762, %r1761, 19;
	shf.r.wrap.b32 	%r1764, %r1761, %r1762, 19;
	mov.b64 	%rd3145, {%r1764, %r1763};
	shf.l.wrap.b32 	%r1765, %r1761, %r1762, 3;
	shf.l.wrap.b32 	%r1766, %r1762, %r1761, 3;
	mov.b64 	%rd3146, {%r1766, %r1765};
	shr.u64 	%rd3147, %rd18553, 6;
	xor.b64  	%rd3148, %rd3145, %rd3147;
	xor.b64  	%rd3149, %rd3148, %rd3146;
	shr.u64 	%rd3150, %rd18550, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1767,%dummy}, %rd18550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1768}, %rd18550;
	}
	shf.r.wrap.b32 	%r1769, %r1768, %r1767, 1;
	shf.r.wrap.b32 	%r1770, %r1767, %r1768, 1;
	mov.b64 	%rd3151, {%r1770, %r1769};
	xor.b64  	%rd3152, %rd3151, %rd3150;
	shf.r.wrap.b32 	%r1771, %r1768, %r1767, 8;
	shf.r.wrap.b32 	%r1772, %r1767, %r1768, 8;
	mov.b64 	%rd3153, {%r1772, %r1771};
	xor.b64  	%rd3154, %rd3152, %rd3153;
	add.s64 	%rd3155, %rd18567, %rd18551;
	add.s64 	%rd3156, %rd3155, %rd3149;
	add.s64 	%rd18551, %rd3156, %rd3154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1773,%dummy}, %rd18552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1774}, %rd18552;
	}
	shf.r.wrap.b32 	%r1775, %r1774, %r1773, 19;
	shf.r.wrap.b32 	%r1776, %r1773, %r1774, 19;
	mov.b64 	%rd3157, {%r1776, %r1775};
	shf.l.wrap.b32 	%r1777, %r1773, %r1774, 3;
	shf.l.wrap.b32 	%r1778, %r1774, %r1773, 3;
	mov.b64 	%rd3158, {%r1778, %r1777};
	shr.u64 	%rd3159, %rd18552, 6;
	xor.b64  	%rd3160, %rd3157, %rd3159;
	xor.b64  	%rd3161, %rd3160, %rd3158;
	shr.u64 	%rd3162, %rd18549, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1779,%dummy}, %rd18549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1780}, %rd18549;
	}
	shf.r.wrap.b32 	%r1781, %r1780, %r1779, 1;
	shf.r.wrap.b32 	%r1782, %r1779, %r1780, 1;
	mov.b64 	%rd3163, {%r1782, %r1781};
	xor.b64  	%rd3164, %rd3163, %rd3162;
	shf.r.wrap.b32 	%r1783, %r1780, %r1779, 8;
	shf.r.wrap.b32 	%r1784, %r1779, %r1780, 8;
	mov.b64 	%rd3165, {%r1784, %r1783};
	xor.b64  	%rd3166, %rd3164, %rd3165;
	add.s64 	%rd3167, %rd18568, %rd18550;
	add.s64 	%rd3168, %rd3167, %rd3161;
	add.s64 	%rd18550, %rd3168, %rd3166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1785,%dummy}, %rd18551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1786}, %rd18551;
	}
	shf.r.wrap.b32 	%r1787, %r1786, %r1785, 19;
	shf.r.wrap.b32 	%r1788, %r1785, %r1786, 19;
	mov.b64 	%rd3169, {%r1788, %r1787};
	shf.l.wrap.b32 	%r1789, %r1785, %r1786, 3;
	shf.l.wrap.b32 	%r1790, %r1786, %r1785, 3;
	mov.b64 	%rd3170, {%r1790, %r1789};
	shr.u64 	%rd3171, %rd18551, 6;
	xor.b64  	%rd3172, %rd3169, %rd3171;
	xor.b64  	%rd3173, %rd3172, %rd3170;
	shr.u64 	%rd3174, %rd18548, 7;
	shf.r.wrap.b32 	%r1791, %r1630, %r1629, 1;
	shf.r.wrap.b32 	%r1792, %r1629, %r1630, 1;
	mov.b64 	%rd3175, {%r1792, %r1791};
	xor.b64  	%rd3176, %rd3175, %rd3174;
	shf.r.wrap.b32 	%r1793, %r1630, %r1629, 8;
	shf.r.wrap.b32 	%r1794, %r1629, %r1630, 8;
	mov.b64 	%rd3177, {%r1794, %r1793};
	xor.b64  	%rd3178, %rd3176, %rd3177;
	add.s64 	%rd3179, %rd18569, %rd18549;
	add.s64 	%rd3180, %rd3179, %rd3173;
	add.s64 	%rd18549, %rd3180, %rd3178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1795,%dummy}, %rd18550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1796}, %rd18550;
	}
	shf.r.wrap.b32 	%r1797, %r1796, %r1795, 19;
	shf.r.wrap.b32 	%r1798, %r1795, %r1796, 19;
	mov.b64 	%rd3181, {%r1798, %r1797};
	shf.l.wrap.b32 	%r1799, %r1795, %r1796, 3;
	shf.l.wrap.b32 	%r1800, %r1796, %r1795, 3;
	mov.b64 	%rd3182, {%r1800, %r1799};
	shr.u64 	%rd3183, %rd18550, 6;
	xor.b64  	%rd3184, %rd3181, %rd3183;
	xor.b64  	%rd3185, %rd3184, %rd3182;
	shr.u64 	%rd3186, %rd18547, 7;
	shf.r.wrap.b32 	%r1801, %r1642, %r1641, 1;
	shf.r.wrap.b32 	%r1802, %r1641, %r1642, 1;
	mov.b64 	%rd3187, {%r1802, %r1801};
	xor.b64  	%rd3188, %rd3187, %rd3186;
	shf.r.wrap.b32 	%r1803, %r1642, %r1641, 8;
	shf.r.wrap.b32 	%r1804, %r1641, %r1642, 8;
	mov.b64 	%rd3189, {%r1804, %r1803};
	xor.b64  	%rd3190, %rd3188, %rd3189;
	add.s64 	%rd3191, %rd18570, %rd18548;
	add.s64 	%rd3192, %rd3191, %rd3185;
	add.s64 	%rd18548, %rd3192, %rd3190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1805,%dummy}, %rd18549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1806}, %rd18549;
	}
	shf.r.wrap.b32 	%r1807, %r1806, %r1805, 19;
	shf.r.wrap.b32 	%r1808, %r1805, %r1806, 19;
	mov.b64 	%rd3193, {%r1808, %r1807};
	shf.l.wrap.b32 	%r1809, %r1805, %r1806, 3;
	shf.l.wrap.b32 	%r1810, %r1806, %r1805, 3;
	mov.b64 	%rd3194, {%r1810, %r1809};
	shr.u64 	%rd3195, %rd18549, 6;
	xor.b64  	%rd3196, %rd3193, %rd3195;
	xor.b64  	%rd3197, %rd3196, %rd3194;
	shf.r.wrap.b32 	%r1811, %r1654, %r1653, 1;
	shf.r.wrap.b32 	%r1812, %r1653, %r1654, 1;
	mov.b64 	%rd3198, {%r1812, %r1811};
	shf.r.wrap.b32 	%r1813, %r1654, %r1653, 8;
	shf.r.wrap.b32 	%r1814, %r1653, %r1654, 8;
	mov.b64 	%rd3199, {%r1814, %r1813};
	shr.u64 	%rd3200, %rd18563, 7;
	xor.b64  	%rd3201, %rd3198, %rd3200;
	xor.b64  	%rd3202, %rd3201, %rd3199;
	add.s64 	%rd3203, %rd18554, %rd18547;
	add.s64 	%rd3204, %rd3203, %rd3197;
	add.s64 	%rd18547, %rd3204, %rd3202;
	mul.wide.s32 	%rd3205, %r12906, 8;
	mov.u64 	%rd3206, k_sha512;
	add.s64 	%rd3207, %rd3206, %rd3205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1815,%dummy}, %rd18559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1816}, %rd18559;
	}
	shf.r.wrap.b32 	%r1817, %r1816, %r1815, 18;
	shf.r.wrap.b32 	%r1818, %r1815, %r1816, 18;
	mov.b64 	%rd3208, {%r1818, %r1817};
	shf.r.wrap.b32 	%r1819, %r1816, %r1815, 14;
	shf.r.wrap.b32 	%r1820, %r1815, %r1816, 14;
	mov.b64 	%rd3209, {%r1820, %r1819};
	xor.b64  	%rd3210, %rd3208, %rd3209;
	shf.l.wrap.b32 	%r1821, %r1815, %r1816, 23;
	shf.l.wrap.b32 	%r1822, %r1816, %r1815, 23;
	mov.b64 	%rd3211, {%r1822, %r1821};
	xor.b64  	%rd3212, %rd3210, %rd3211;
	xor.b64  	%rd3213, %rd18560, %rd18561;
	and.b64  	%rd3214, %rd18559, %rd3213;
	xor.b64  	%rd3215, %rd3214, %rd18561;
	add.s64 	%rd3216, %rd3215, %rd18562;
	add.s64 	%rd3217, %rd3216, %rd18563;
	ld.const.u64 	%rd3218, [%rd3207];
	add.s64 	%rd3219, %rd3217, %rd3218;
	add.s64 	%rd3220, %rd3219, %rd3212;
	add.s64 	%rd3221, %rd3220, %rd18558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1823}, %rd18555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1824,%dummy}, %rd18555;
	}
	shf.l.wrap.b32 	%r1825, %r1824, %r1823, 30;
	shf.l.wrap.b32 	%r1826, %r1823, %r1824, 30;
	mov.b64 	%rd3222, {%r1826, %r1825};
	shf.r.wrap.b32 	%r1827, %r1823, %r1824, 28;
	shf.r.wrap.b32 	%r1828, %r1824, %r1823, 28;
	mov.b64 	%rd3223, {%r1828, %r1827};
	xor.b64  	%rd3224, %rd3222, %rd3223;
	shf.l.wrap.b32 	%r1829, %r1824, %r1823, 25;
	shf.l.wrap.b32 	%r1830, %r1823, %r1824, 25;
	mov.b64 	%rd3225, {%r1830, %r1829};
	xor.b64  	%rd3226, %rd3224, %rd3225;
	xor.b64  	%rd3227, %rd18555, %rd18556;
	and.b64  	%rd3228, %rd3227, %rd18557;
	and.b64  	%rd3229, %rd18555, %rd18556;
	or.b64  	%rd3230, %rd3228, %rd3229;
	add.s64 	%rd3231, %rd3220, %rd3230;
	add.s64 	%rd3232, %rd3231, %rd3226;
	add.s32 	%r1831, %r12906, 1;
	mul.wide.s32 	%rd3233, %r1831, 8;
	add.s64 	%rd3234, %rd3206, %rd3233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1832,%dummy}, %rd3221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1833}, %rd3221;
	}
	shf.r.wrap.b32 	%r1834, %r1833, %r1832, 14;
	shf.r.wrap.b32 	%r1835, %r1832, %r1833, 14;
	mov.b64 	%rd3235, {%r1835, %r1834};
	shf.r.wrap.b32 	%r1836, %r1833, %r1832, 18;
	shf.r.wrap.b32 	%r1837, %r1832, %r1833, 18;
	mov.b64 	%rd3236, {%r1837, %r1836};
	xor.b64  	%rd3237, %rd3236, %rd3235;
	shf.l.wrap.b32 	%r1838, %r1832, %r1833, 23;
	shf.l.wrap.b32 	%r1839, %r1833, %r1832, 23;
	mov.b64 	%rd3238, {%r1839, %r1838};
	xor.b64  	%rd3239, %rd3237, %rd3238;
	xor.b64  	%rd3240, %rd18559, %rd18560;
	and.b64  	%rd3241, %rd3221, %rd3240;
	xor.b64  	%rd3242, %rd3241, %rd18560;
	add.s64 	%rd3243, %rd18564, %rd18561;
	ld.const.u64 	%rd3244, [%rd3234];
	add.s64 	%rd3245, %rd3243, %rd3244;
	add.s64 	%rd3246, %rd3245, %rd3242;
	add.s64 	%rd3247, %rd3246, %rd3239;
	add.s64 	%rd3248, %rd3247, %rd18557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1840,%dummy}, %rd3232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1841}, %rd3232;
	}
	shf.r.wrap.b32 	%r1842, %r1841, %r1840, 28;
	shf.r.wrap.b32 	%r1843, %r1840, %r1841, 28;
	mov.b64 	%rd3249, {%r1843, %r1842};
	shf.l.wrap.b32 	%r1844, %r1840, %r1841, 30;
	shf.l.wrap.b32 	%r1845, %r1841, %r1840, 30;
	mov.b64 	%rd3250, {%r1845, %r1844};
	xor.b64  	%rd3251, %rd3250, %rd3249;
	shf.l.wrap.b32 	%r1846, %r1840, %r1841, 25;
	shf.l.wrap.b32 	%r1847, %r1841, %r1840, 25;
	mov.b64 	%rd3252, {%r1847, %r1846};
	xor.b64  	%rd3253, %rd3251, %rd3252;
	and.b64  	%rd3254, %rd3232, %rd18555;
	xor.b64  	%rd3255, %rd3232, %rd18555;
	and.b64  	%rd3256, %rd3255, %rd18556;
	or.b64  	%rd3257, %rd3256, %rd3254;
	add.s64 	%rd3258, %rd3247, %rd3257;
	add.s64 	%rd3259, %rd3258, %rd3253;
	add.s32 	%r1848, %r12906, 2;
	mul.wide.s32 	%rd3260, %r1848, 8;
	add.s64 	%rd3261, %rd3206, %rd3260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1849,%dummy}, %rd3248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1850}, %rd3248;
	}
	shf.r.wrap.b32 	%r1851, %r1850, %r1849, 14;
	shf.r.wrap.b32 	%r1852, %r1849, %r1850, 14;
	mov.b64 	%rd3262, {%r1852, %r1851};
	shf.r.wrap.b32 	%r1853, %r1850, %r1849, 18;
	shf.r.wrap.b32 	%r1854, %r1849, %r1850, 18;
	mov.b64 	%rd3263, {%r1854, %r1853};
	xor.b64  	%rd3264, %rd3263, %rd3262;
	shf.l.wrap.b32 	%r1855, %r1849, %r1850, 23;
	shf.l.wrap.b32 	%r1856, %r1850, %r1849, 23;
	mov.b64 	%rd3265, {%r1856, %r1855};
	xor.b64  	%rd3266, %rd3264, %rd3265;
	xor.b64  	%rd3267, %rd3221, %rd18559;
	and.b64  	%rd3268, %rd3248, %rd3267;
	xor.b64  	%rd3269, %rd3268, %rd18559;
	add.s64 	%rd3270, %rd18565, %rd18560;
	ld.const.u64 	%rd3271, [%rd3261];
	add.s64 	%rd3272, %rd3270, %rd3271;
	add.s64 	%rd3273, %rd3272, %rd3269;
	add.s64 	%rd3274, %rd3273, %rd3266;
	add.s64 	%rd3275, %rd3274, %rd18556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1857,%dummy}, %rd3259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1858}, %rd3259;
	}
	shf.r.wrap.b32 	%r1859, %r1858, %r1857, 28;
	shf.r.wrap.b32 	%r1860, %r1857, %r1858, 28;
	mov.b64 	%rd3276, {%r1860, %r1859};
	shf.l.wrap.b32 	%r1861, %r1857, %r1858, 30;
	shf.l.wrap.b32 	%r1862, %r1858, %r1857, 30;
	mov.b64 	%rd3277, {%r1862, %r1861};
	xor.b64  	%rd3278, %rd3277, %rd3276;
	shf.l.wrap.b32 	%r1863, %r1857, %r1858, 25;
	shf.l.wrap.b32 	%r1864, %r1858, %r1857, 25;
	mov.b64 	%rd3279, {%r1864, %r1863};
	xor.b64  	%rd3280, %rd3278, %rd3279;
	and.b64  	%rd3281, %rd3259, %rd3232;
	xor.b64  	%rd3282, %rd3259, %rd3232;
	and.b64  	%rd3283, %rd3282, %rd18555;
	or.b64  	%rd3284, %rd3283, %rd3281;
	add.s64 	%rd3285, %rd3274, %rd3284;
	add.s64 	%rd3286, %rd3285, %rd3280;
	add.s32 	%r1865, %r12906, 3;
	mul.wide.s32 	%rd3287, %r1865, 8;
	add.s64 	%rd3288, %rd3206, %rd3287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1866,%dummy}, %rd3275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1867}, %rd3275;
	}
	shf.r.wrap.b32 	%r1868, %r1867, %r1866, 14;
	shf.r.wrap.b32 	%r1869, %r1866, %r1867, 14;
	mov.b64 	%rd3289, {%r1869, %r1868};
	shf.r.wrap.b32 	%r1870, %r1867, %r1866, 18;
	shf.r.wrap.b32 	%r1871, %r1866, %r1867, 18;
	mov.b64 	%rd3290, {%r1871, %r1870};
	xor.b64  	%rd3291, %rd3290, %rd3289;
	shf.l.wrap.b32 	%r1872, %r1866, %r1867, 23;
	shf.l.wrap.b32 	%r1873, %r1867, %r1866, 23;
	mov.b64 	%rd3292, {%r1873, %r1872};
	xor.b64  	%rd3293, %rd3291, %rd3292;
	xor.b64  	%rd3294, %rd3248, %rd3221;
	and.b64  	%rd3295, %rd3275, %rd3294;
	xor.b64  	%rd3296, %rd3295, %rd3221;
	add.s64 	%rd3297, %rd18566, %rd18559;
	ld.const.u64 	%rd3298, [%rd3288];
	add.s64 	%rd3299, %rd3297, %rd3298;
	add.s64 	%rd3300, %rd3299, %rd3296;
	add.s64 	%rd3301, %rd3300, %rd3293;
	add.s64 	%rd3302, %rd3301, %rd18555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1874,%dummy}, %rd3286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1875}, %rd3286;
	}
	shf.r.wrap.b32 	%r1876, %r1875, %r1874, 28;
	shf.r.wrap.b32 	%r1877, %r1874, %r1875, 28;
	mov.b64 	%rd3303, {%r1877, %r1876};
	shf.l.wrap.b32 	%r1878, %r1874, %r1875, 30;
	shf.l.wrap.b32 	%r1879, %r1875, %r1874, 30;
	mov.b64 	%rd3304, {%r1879, %r1878};
	xor.b64  	%rd3305, %rd3304, %rd3303;
	shf.l.wrap.b32 	%r1880, %r1874, %r1875, 25;
	shf.l.wrap.b32 	%r1881, %r1875, %r1874, 25;
	mov.b64 	%rd3306, {%r1881, %r1880};
	xor.b64  	%rd3307, %rd3305, %rd3306;
	and.b64  	%rd3308, %rd3286, %rd3259;
	xor.b64  	%rd3309, %rd3286, %rd3259;
	and.b64  	%rd3310, %rd3309, %rd3232;
	or.b64  	%rd3311, %rd3310, %rd3308;
	add.s64 	%rd3312, %rd3301, %rd3311;
	add.s64 	%rd3313, %rd3312, %rd3307;
	add.s32 	%r1882, %r12906, 4;
	mul.wide.s32 	%rd3314, %r1882, 8;
	add.s64 	%rd3315, %rd3206, %rd3314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1883,%dummy}, %rd3302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1884}, %rd3302;
	}
	shf.r.wrap.b32 	%r1885, %r1884, %r1883, 14;
	shf.r.wrap.b32 	%r1886, %r1883, %r1884, 14;
	mov.b64 	%rd3316, {%r1886, %r1885};
	shf.r.wrap.b32 	%r1887, %r1884, %r1883, 18;
	shf.r.wrap.b32 	%r1888, %r1883, %r1884, 18;
	mov.b64 	%rd3317, {%r1888, %r1887};
	xor.b64  	%rd3318, %rd3317, %rd3316;
	shf.l.wrap.b32 	%r1889, %r1883, %r1884, 23;
	shf.l.wrap.b32 	%r1890, %r1884, %r1883, 23;
	mov.b64 	%rd3319, {%r1890, %r1889};
	xor.b64  	%rd3320, %rd3318, %rd3319;
	xor.b64  	%rd3321, %rd3275, %rd3248;
	and.b64  	%rd3322, %rd3302, %rd3321;
	xor.b64  	%rd3323, %rd3322, %rd3248;
	add.s64 	%rd3324, %rd3221, %rd18567;
	ld.const.u64 	%rd3325, [%rd3315];
	add.s64 	%rd3326, %rd3324, %rd3325;
	add.s64 	%rd3327, %rd3326, %rd3323;
	add.s64 	%rd3328, %rd3327, %rd3320;
	add.s64 	%rd3329, %rd3328, %rd3232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1891,%dummy}, %rd3313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1892}, %rd3313;
	}
	shf.r.wrap.b32 	%r1893, %r1892, %r1891, 28;
	shf.r.wrap.b32 	%r1894, %r1891, %r1892, 28;
	mov.b64 	%rd3330, {%r1894, %r1893};
	shf.l.wrap.b32 	%r1895, %r1891, %r1892, 30;
	shf.l.wrap.b32 	%r1896, %r1892, %r1891, 30;
	mov.b64 	%rd3331, {%r1896, %r1895};
	xor.b64  	%rd3332, %rd3331, %rd3330;
	shf.l.wrap.b32 	%r1897, %r1891, %r1892, 25;
	shf.l.wrap.b32 	%r1898, %r1892, %r1891, 25;
	mov.b64 	%rd3333, {%r1898, %r1897};
	xor.b64  	%rd3334, %rd3332, %rd3333;
	and.b64  	%rd3335, %rd3313, %rd3286;
	xor.b64  	%rd3336, %rd3313, %rd3286;
	and.b64  	%rd3337, %rd3336, %rd3259;
	or.b64  	%rd3338, %rd3337, %rd3335;
	add.s64 	%rd3339, %rd3328, %rd3338;
	add.s64 	%rd3340, %rd3339, %rd3334;
	add.s32 	%r1899, %r12906, 5;
	mul.wide.s32 	%rd3341, %r1899, 8;
	add.s64 	%rd3342, %rd3206, %rd3341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1900,%dummy}, %rd3329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1901}, %rd3329;
	}
	shf.r.wrap.b32 	%r1902, %r1901, %r1900, 14;
	shf.r.wrap.b32 	%r1903, %r1900, %r1901, 14;
	mov.b64 	%rd3343, {%r1903, %r1902};
	shf.r.wrap.b32 	%r1904, %r1901, %r1900, 18;
	shf.r.wrap.b32 	%r1905, %r1900, %r1901, 18;
	mov.b64 	%rd3344, {%r1905, %r1904};
	xor.b64  	%rd3345, %rd3344, %rd3343;
	shf.l.wrap.b32 	%r1906, %r1900, %r1901, 23;
	shf.l.wrap.b32 	%r1907, %r1901, %r1900, 23;
	mov.b64 	%rd3346, {%r1907, %r1906};
	xor.b64  	%rd3347, %rd3345, %rd3346;
	xor.b64  	%rd3348, %rd3302, %rd3275;
	and.b64  	%rd3349, %rd3329, %rd3348;
	xor.b64  	%rd3350, %rd3349, %rd3275;
	add.s64 	%rd3351, %rd3248, %rd18568;
	ld.const.u64 	%rd3352, [%rd3342];
	add.s64 	%rd3353, %rd3351, %rd3352;
	add.s64 	%rd3354, %rd3353, %rd3350;
	add.s64 	%rd3355, %rd3354, %rd3347;
	add.s64 	%rd3356, %rd3355, %rd3259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1908,%dummy}, %rd3340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1909}, %rd3340;
	}
	shf.r.wrap.b32 	%r1910, %r1909, %r1908, 28;
	shf.r.wrap.b32 	%r1911, %r1908, %r1909, 28;
	mov.b64 	%rd3357, {%r1911, %r1910};
	shf.l.wrap.b32 	%r1912, %r1908, %r1909, 30;
	shf.l.wrap.b32 	%r1913, %r1909, %r1908, 30;
	mov.b64 	%rd3358, {%r1913, %r1912};
	xor.b64  	%rd3359, %rd3358, %rd3357;
	shf.l.wrap.b32 	%r1914, %r1908, %r1909, 25;
	shf.l.wrap.b32 	%r1915, %r1909, %r1908, 25;
	mov.b64 	%rd3360, {%r1915, %r1914};
	xor.b64  	%rd3361, %rd3359, %rd3360;
	and.b64  	%rd3362, %rd3340, %rd3313;
	xor.b64  	%rd3363, %rd3340, %rd3313;
	and.b64  	%rd3364, %rd3363, %rd3286;
	or.b64  	%rd3365, %rd3364, %rd3362;
	add.s64 	%rd3366, %rd3355, %rd3365;
	add.s64 	%rd3367, %rd3366, %rd3361;
	add.s32 	%r1916, %r12906, 6;
	mul.wide.s32 	%rd3368, %r1916, 8;
	add.s64 	%rd3369, %rd3206, %rd3368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1917,%dummy}, %rd3356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1918}, %rd3356;
	}
	shf.r.wrap.b32 	%r1919, %r1918, %r1917, 14;
	shf.r.wrap.b32 	%r1920, %r1917, %r1918, 14;
	mov.b64 	%rd3370, {%r1920, %r1919};
	shf.r.wrap.b32 	%r1921, %r1918, %r1917, 18;
	shf.r.wrap.b32 	%r1922, %r1917, %r1918, 18;
	mov.b64 	%rd3371, {%r1922, %r1921};
	xor.b64  	%rd3372, %rd3371, %rd3370;
	shf.l.wrap.b32 	%r1923, %r1917, %r1918, 23;
	shf.l.wrap.b32 	%r1924, %r1918, %r1917, 23;
	mov.b64 	%rd3373, {%r1924, %r1923};
	xor.b64  	%rd3374, %rd3372, %rd3373;
	xor.b64  	%rd3375, %rd3329, %rd3302;
	and.b64  	%rd3376, %rd3356, %rd3375;
	xor.b64  	%rd3377, %rd3376, %rd3302;
	add.s64 	%rd3378, %rd3275, %rd18569;
	ld.const.u64 	%rd3379, [%rd3369];
	add.s64 	%rd3380, %rd3378, %rd3379;
	add.s64 	%rd3381, %rd3380, %rd3377;
	add.s64 	%rd3382, %rd3381, %rd3374;
	add.s64 	%rd3383, %rd3382, %rd3286;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1925,%dummy}, %rd3367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1926}, %rd3367;
	}
	shf.r.wrap.b32 	%r1927, %r1926, %r1925, 28;
	shf.r.wrap.b32 	%r1928, %r1925, %r1926, 28;
	mov.b64 	%rd3384, {%r1928, %r1927};
	shf.l.wrap.b32 	%r1929, %r1925, %r1926, 30;
	shf.l.wrap.b32 	%r1930, %r1926, %r1925, 30;
	mov.b64 	%rd3385, {%r1930, %r1929};
	xor.b64  	%rd3386, %rd3385, %rd3384;
	shf.l.wrap.b32 	%r1931, %r1925, %r1926, 25;
	shf.l.wrap.b32 	%r1932, %r1926, %r1925, 25;
	mov.b64 	%rd3387, {%r1932, %r1931};
	xor.b64  	%rd3388, %rd3386, %rd3387;
	and.b64  	%rd3389, %rd3367, %rd3340;
	xor.b64  	%rd3390, %rd3367, %rd3340;
	and.b64  	%rd3391, %rd3390, %rd3313;
	or.b64  	%rd3392, %rd3391, %rd3389;
	add.s64 	%rd3393, %rd3382, %rd3392;
	add.s64 	%rd3394, %rd3393, %rd3388;
	add.s32 	%r1933, %r12906, 7;
	mul.wide.s32 	%rd3395, %r1933, 8;
	add.s64 	%rd3396, %rd3206, %rd3395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1934,%dummy}, %rd3383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1935}, %rd3383;
	}
	shf.r.wrap.b32 	%r1936, %r1935, %r1934, 14;
	shf.r.wrap.b32 	%r1937, %r1934, %r1935, 14;
	mov.b64 	%rd3397, {%r1937, %r1936};
	shf.r.wrap.b32 	%r1938, %r1935, %r1934, 18;
	shf.r.wrap.b32 	%r1939, %r1934, %r1935, 18;
	mov.b64 	%rd3398, {%r1939, %r1938};
	xor.b64  	%rd3399, %rd3398, %rd3397;
	shf.l.wrap.b32 	%r1940, %r1934, %r1935, 23;
	shf.l.wrap.b32 	%r1941, %r1935, %r1934, 23;
	mov.b64 	%rd3400, {%r1941, %r1940};
	xor.b64  	%rd3401, %rd3399, %rd3400;
	xor.b64  	%rd3402, %rd3356, %rd3329;
	and.b64  	%rd3403, %rd3383, %rd3402;
	xor.b64  	%rd3404, %rd3403, %rd3329;
	add.s64 	%rd3405, %rd3302, %rd18570;
	ld.const.u64 	%rd3406, [%rd3396];
	add.s64 	%rd3407, %rd3405, %rd3406;
	add.s64 	%rd3408, %rd3407, %rd3404;
	add.s64 	%rd3409, %rd3408, %rd3401;
	add.s64 	%rd3410, %rd3409, %rd3313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1942,%dummy}, %rd3394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1943}, %rd3394;
	}
	shf.r.wrap.b32 	%r1944, %r1943, %r1942, 28;
	shf.r.wrap.b32 	%r1945, %r1942, %r1943, 28;
	mov.b64 	%rd3411, {%r1945, %r1944};
	shf.l.wrap.b32 	%r1946, %r1942, %r1943, 30;
	shf.l.wrap.b32 	%r1947, %r1943, %r1942, 30;
	mov.b64 	%rd3412, {%r1947, %r1946};
	xor.b64  	%rd3413, %rd3412, %rd3411;
	shf.l.wrap.b32 	%r1948, %r1942, %r1943, 25;
	shf.l.wrap.b32 	%r1949, %r1943, %r1942, 25;
	mov.b64 	%rd3414, {%r1949, %r1948};
	xor.b64  	%rd3415, %rd3413, %rd3414;
	and.b64  	%rd3416, %rd3394, %rd3367;
	xor.b64  	%rd3417, %rd3394, %rd3367;
	and.b64  	%rd3418, %rd3417, %rd3340;
	or.b64  	%rd3419, %rd3418, %rd3416;
	add.s64 	%rd3420, %rd3409, %rd3419;
	add.s64 	%rd3421, %rd3420, %rd3415;
	add.s32 	%r1950, %r12906, 8;
	mul.wide.s32 	%rd3422, %r1950, 8;
	add.s64 	%rd3423, %rd3206, %rd3422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1951,%dummy}, %rd3410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1952}, %rd3410;
	}
	shf.r.wrap.b32 	%r1953, %r1952, %r1951, 14;
	shf.r.wrap.b32 	%r1954, %r1951, %r1952, 14;
	mov.b64 	%rd3424, {%r1954, %r1953};
	shf.r.wrap.b32 	%r1955, %r1952, %r1951, 18;
	shf.r.wrap.b32 	%r1956, %r1951, %r1952, 18;
	mov.b64 	%rd3425, {%r1956, %r1955};
	xor.b64  	%rd3426, %rd3425, %rd3424;
	shf.l.wrap.b32 	%r1957, %r1951, %r1952, 23;
	shf.l.wrap.b32 	%r1958, %r1952, %r1951, 23;
	mov.b64 	%rd3427, {%r1958, %r1957};
	xor.b64  	%rd3428, %rd3426, %rd3427;
	xor.b64  	%rd3429, %rd3383, %rd3356;
	and.b64  	%rd3430, %rd3410, %rd3429;
	xor.b64  	%rd3431, %rd3430, %rd3356;
	add.s64 	%rd3432, %rd3329, %rd18554;
	ld.const.u64 	%rd3433, [%rd3423];
	add.s64 	%rd3434, %rd3432, %rd3433;
	add.s64 	%rd3435, %rd3434, %rd3431;
	add.s64 	%rd3436, %rd3435, %rd3428;
	add.s64 	%rd3437, %rd3436, %rd3340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1959,%dummy}, %rd3421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1960}, %rd3421;
	}
	shf.r.wrap.b32 	%r1961, %r1960, %r1959, 28;
	shf.r.wrap.b32 	%r1962, %r1959, %r1960, 28;
	mov.b64 	%rd3438, {%r1962, %r1961};
	shf.l.wrap.b32 	%r1963, %r1959, %r1960, 30;
	shf.l.wrap.b32 	%r1964, %r1960, %r1959, 30;
	mov.b64 	%rd3439, {%r1964, %r1963};
	xor.b64  	%rd3440, %rd3439, %rd3438;
	shf.l.wrap.b32 	%r1965, %r1959, %r1960, 25;
	shf.l.wrap.b32 	%r1966, %r1960, %r1959, 25;
	mov.b64 	%rd3441, {%r1966, %r1965};
	xor.b64  	%rd3442, %rd3440, %rd3441;
	and.b64  	%rd3443, %rd3421, %rd3394;
	xor.b64  	%rd3444, %rd3421, %rd3394;
	and.b64  	%rd3445, %rd3444, %rd3367;
	or.b64  	%rd3446, %rd3445, %rd3443;
	add.s64 	%rd3447, %rd3436, %rd3446;
	add.s64 	%rd3448, %rd3447, %rd3442;
	add.s32 	%r1967, %r12906, 9;
	mul.wide.s32 	%rd3449, %r1967, 8;
	add.s64 	%rd3450, %rd3206, %rd3449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1968,%dummy}, %rd3437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1969}, %rd3437;
	}
	shf.r.wrap.b32 	%r1970, %r1969, %r1968, 14;
	shf.r.wrap.b32 	%r1971, %r1968, %r1969, 14;
	mov.b64 	%rd3451, {%r1971, %r1970};
	shf.r.wrap.b32 	%r1972, %r1969, %r1968, 18;
	shf.r.wrap.b32 	%r1973, %r1968, %r1969, 18;
	mov.b64 	%rd3452, {%r1973, %r1972};
	xor.b64  	%rd3453, %rd3452, %rd3451;
	shf.l.wrap.b32 	%r1974, %r1968, %r1969, 23;
	shf.l.wrap.b32 	%r1975, %r1969, %r1968, 23;
	mov.b64 	%rd3454, {%r1975, %r1974};
	xor.b64  	%rd3455, %rd3453, %rd3454;
	xor.b64  	%rd3456, %rd3410, %rd3383;
	and.b64  	%rd3457, %rd3437, %rd3456;
	xor.b64  	%rd3458, %rd3457, %rd3383;
	add.s64 	%rd3459, %rd3356, %rd18553;
	ld.const.u64 	%rd3460, [%rd3450];
	add.s64 	%rd3461, %rd3459, %rd3460;
	add.s64 	%rd3462, %rd3461, %rd3458;
	add.s64 	%rd3463, %rd3462, %rd3455;
	add.s64 	%rd3464, %rd3463, %rd3367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1976,%dummy}, %rd3448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1977}, %rd3448;
	}
	shf.r.wrap.b32 	%r1978, %r1977, %r1976, 28;
	shf.r.wrap.b32 	%r1979, %r1976, %r1977, 28;
	mov.b64 	%rd3465, {%r1979, %r1978};
	shf.l.wrap.b32 	%r1980, %r1976, %r1977, 30;
	shf.l.wrap.b32 	%r1981, %r1977, %r1976, 30;
	mov.b64 	%rd3466, {%r1981, %r1980};
	xor.b64  	%rd3467, %rd3466, %rd3465;
	shf.l.wrap.b32 	%r1982, %r1976, %r1977, 25;
	shf.l.wrap.b32 	%r1983, %r1977, %r1976, 25;
	mov.b64 	%rd3468, {%r1983, %r1982};
	xor.b64  	%rd3469, %rd3467, %rd3468;
	and.b64  	%rd3470, %rd3448, %rd3421;
	xor.b64  	%rd3471, %rd3448, %rd3421;
	and.b64  	%rd3472, %rd3471, %rd3394;
	or.b64  	%rd3473, %rd3472, %rd3470;
	add.s64 	%rd3474, %rd3463, %rd3473;
	add.s64 	%rd3475, %rd3474, %rd3469;
	add.s32 	%r1984, %r12906, 10;
	mul.wide.s32 	%rd3476, %r1984, 8;
	add.s64 	%rd3477, %rd3206, %rd3476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1985,%dummy}, %rd3464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1986}, %rd3464;
	}
	shf.r.wrap.b32 	%r1987, %r1986, %r1985, 14;
	shf.r.wrap.b32 	%r1988, %r1985, %r1986, 14;
	mov.b64 	%rd3478, {%r1988, %r1987};
	shf.r.wrap.b32 	%r1989, %r1986, %r1985, 18;
	shf.r.wrap.b32 	%r1990, %r1985, %r1986, 18;
	mov.b64 	%rd3479, {%r1990, %r1989};
	xor.b64  	%rd3480, %rd3479, %rd3478;
	shf.l.wrap.b32 	%r1991, %r1985, %r1986, 23;
	shf.l.wrap.b32 	%r1992, %r1986, %r1985, 23;
	mov.b64 	%rd3481, {%r1992, %r1991};
	xor.b64  	%rd3482, %rd3480, %rd3481;
	xor.b64  	%rd3483, %rd3437, %rd3410;
	and.b64  	%rd3484, %rd3464, %rd3483;
	xor.b64  	%rd3485, %rd3484, %rd3410;
	add.s64 	%rd3486, %rd3383, %rd18552;
	ld.const.u64 	%rd3487, [%rd3477];
	add.s64 	%rd3488, %rd3486, %rd3487;
	add.s64 	%rd3489, %rd3488, %rd3485;
	add.s64 	%rd3490, %rd3489, %rd3482;
	add.s64 	%rd3491, %rd3490, %rd3394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1993,%dummy}, %rd3475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1994}, %rd3475;
	}
	shf.r.wrap.b32 	%r1995, %r1994, %r1993, 28;
	shf.r.wrap.b32 	%r1996, %r1993, %r1994, 28;
	mov.b64 	%rd3492, {%r1996, %r1995};
	shf.l.wrap.b32 	%r1997, %r1993, %r1994, 30;
	shf.l.wrap.b32 	%r1998, %r1994, %r1993, 30;
	mov.b64 	%rd3493, {%r1998, %r1997};
	xor.b64  	%rd3494, %rd3493, %rd3492;
	shf.l.wrap.b32 	%r1999, %r1993, %r1994, 25;
	shf.l.wrap.b32 	%r2000, %r1994, %r1993, 25;
	mov.b64 	%rd3495, {%r2000, %r1999};
	xor.b64  	%rd3496, %rd3494, %rd3495;
	and.b64  	%rd3497, %rd3475, %rd3448;
	xor.b64  	%rd3498, %rd3475, %rd3448;
	and.b64  	%rd3499, %rd3498, %rd3421;
	or.b64  	%rd3500, %rd3499, %rd3497;
	add.s64 	%rd3501, %rd3490, %rd3500;
	add.s64 	%rd3502, %rd3501, %rd3496;
	add.s32 	%r2001, %r12906, 11;
	mul.wide.s32 	%rd3503, %r2001, 8;
	add.s64 	%rd3504, %rd3206, %rd3503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2002,%dummy}, %rd3491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2003}, %rd3491;
	}
	shf.r.wrap.b32 	%r2004, %r2003, %r2002, 14;
	shf.r.wrap.b32 	%r2005, %r2002, %r2003, 14;
	mov.b64 	%rd3505, {%r2005, %r2004};
	shf.r.wrap.b32 	%r2006, %r2003, %r2002, 18;
	shf.r.wrap.b32 	%r2007, %r2002, %r2003, 18;
	mov.b64 	%rd3506, {%r2007, %r2006};
	xor.b64  	%rd3507, %rd3506, %rd3505;
	shf.l.wrap.b32 	%r2008, %r2002, %r2003, 23;
	shf.l.wrap.b32 	%r2009, %r2003, %r2002, 23;
	mov.b64 	%rd3508, {%r2009, %r2008};
	xor.b64  	%rd3509, %rd3507, %rd3508;
	xor.b64  	%rd3510, %rd3464, %rd3437;
	and.b64  	%rd3511, %rd3491, %rd3510;
	xor.b64  	%rd3512, %rd3511, %rd3437;
	add.s64 	%rd3513, %rd3410, %rd18551;
	ld.const.u64 	%rd3514, [%rd3504];
	add.s64 	%rd3515, %rd3513, %rd3514;
	add.s64 	%rd3516, %rd3515, %rd3512;
	add.s64 	%rd3517, %rd3516, %rd3509;
	add.s64 	%rd3518, %rd3517, %rd3421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2010,%dummy}, %rd3502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2011}, %rd3502;
	}
	shf.r.wrap.b32 	%r2012, %r2011, %r2010, 28;
	shf.r.wrap.b32 	%r2013, %r2010, %r2011, 28;
	mov.b64 	%rd3519, {%r2013, %r2012};
	shf.l.wrap.b32 	%r2014, %r2010, %r2011, 30;
	shf.l.wrap.b32 	%r2015, %r2011, %r2010, 30;
	mov.b64 	%rd3520, {%r2015, %r2014};
	xor.b64  	%rd3521, %rd3520, %rd3519;
	shf.l.wrap.b32 	%r2016, %r2010, %r2011, 25;
	shf.l.wrap.b32 	%r2017, %r2011, %r2010, 25;
	mov.b64 	%rd3522, {%r2017, %r2016};
	xor.b64  	%rd3523, %rd3521, %rd3522;
	and.b64  	%rd3524, %rd3502, %rd3475;
	xor.b64  	%rd3525, %rd3502, %rd3475;
	and.b64  	%rd3526, %rd3525, %rd3448;
	or.b64  	%rd3527, %rd3526, %rd3524;
	add.s64 	%rd3528, %rd3517, %rd3527;
	add.s64 	%rd3529, %rd3528, %rd3523;
	add.s32 	%r2018, %r12906, 12;
	mul.wide.s32 	%rd3530, %r2018, 8;
	add.s64 	%rd3531, %rd3206, %rd3530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2019,%dummy}, %rd3518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2020}, %rd3518;
	}
	shf.r.wrap.b32 	%r2021, %r2020, %r2019, 14;
	shf.r.wrap.b32 	%r2022, %r2019, %r2020, 14;
	mov.b64 	%rd3532, {%r2022, %r2021};
	shf.r.wrap.b32 	%r2023, %r2020, %r2019, 18;
	shf.r.wrap.b32 	%r2024, %r2019, %r2020, 18;
	mov.b64 	%rd3533, {%r2024, %r2023};
	xor.b64  	%rd3534, %rd3533, %rd3532;
	shf.l.wrap.b32 	%r2025, %r2019, %r2020, 23;
	shf.l.wrap.b32 	%r2026, %r2020, %r2019, 23;
	mov.b64 	%rd3535, {%r2026, %r2025};
	xor.b64  	%rd3536, %rd3534, %rd3535;
	xor.b64  	%rd3537, %rd3491, %rd3464;
	and.b64  	%rd3538, %rd3518, %rd3537;
	xor.b64  	%rd3539, %rd3538, %rd3464;
	add.s64 	%rd3540, %rd3437, %rd18550;
	ld.const.u64 	%rd3541, [%rd3531];
	add.s64 	%rd3542, %rd3540, %rd3541;
	add.s64 	%rd3543, %rd3542, %rd3539;
	add.s64 	%rd3544, %rd3543, %rd3536;
	add.s64 	%rd18562, %rd3544, %rd3448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2027,%dummy}, %rd3529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2028}, %rd3529;
	}
	shf.r.wrap.b32 	%r2029, %r2028, %r2027, 28;
	shf.r.wrap.b32 	%r2030, %r2027, %r2028, 28;
	mov.b64 	%rd3545, {%r2030, %r2029};
	shf.l.wrap.b32 	%r2031, %r2027, %r2028, 30;
	shf.l.wrap.b32 	%r2032, %r2028, %r2027, 30;
	mov.b64 	%rd3546, {%r2032, %r2031};
	xor.b64  	%rd3547, %rd3546, %rd3545;
	shf.l.wrap.b32 	%r2033, %r2027, %r2028, 25;
	shf.l.wrap.b32 	%r2034, %r2028, %r2027, 25;
	mov.b64 	%rd3548, {%r2034, %r2033};
	xor.b64  	%rd3549, %rd3547, %rd3548;
	and.b64  	%rd3550, %rd3529, %rd3502;
	xor.b64  	%rd3551, %rd3529, %rd3502;
	and.b64  	%rd3552, %rd3551, %rd3475;
	or.b64  	%rd3553, %rd3552, %rd3550;
	add.s64 	%rd3554, %rd3544, %rd3553;
	add.s64 	%rd18558, %rd3554, %rd3549;
	add.s32 	%r2035, %r12906, 13;
	mul.wide.s32 	%rd3555, %r2035, 8;
	add.s64 	%rd3556, %rd3206, %rd3555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2036,%dummy}, %rd18562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2037}, %rd18562;
	}
	shf.r.wrap.b32 	%r2038, %r2037, %r2036, 14;
	shf.r.wrap.b32 	%r2039, %r2036, %r2037, 14;
	mov.b64 	%rd3557, {%r2039, %r2038};
	shf.r.wrap.b32 	%r2040, %r2037, %r2036, 18;
	shf.r.wrap.b32 	%r2041, %r2036, %r2037, 18;
	mov.b64 	%rd3558, {%r2041, %r2040};
	xor.b64  	%rd3559, %rd3558, %rd3557;
	shf.l.wrap.b32 	%r2042, %r2036, %r2037, 23;
	shf.l.wrap.b32 	%r2043, %r2037, %r2036, 23;
	mov.b64 	%rd3560, {%r2043, %r2042};
	xor.b64  	%rd3561, %rd3559, %rd3560;
	xor.b64  	%rd3562, %rd3518, %rd3491;
	and.b64  	%rd3563, %rd18562, %rd3562;
	xor.b64  	%rd3564, %rd3563, %rd3491;
	add.s64 	%rd3565, %rd3464, %rd18549;
	ld.const.u64 	%rd3566, [%rd3556];
	add.s64 	%rd3567, %rd3565, %rd3566;
	add.s64 	%rd3568, %rd3567, %rd3564;
	add.s64 	%rd3569, %rd3568, %rd3561;
	add.s64 	%rd18561, %rd3569, %rd3475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2044,%dummy}, %rd18558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2045}, %rd18558;
	}
	shf.r.wrap.b32 	%r2046, %r2045, %r2044, 28;
	shf.r.wrap.b32 	%r2047, %r2044, %r2045, 28;
	mov.b64 	%rd3570, {%r2047, %r2046};
	shf.l.wrap.b32 	%r2048, %r2044, %r2045, 30;
	shf.l.wrap.b32 	%r2049, %r2045, %r2044, 30;
	mov.b64 	%rd3571, {%r2049, %r2048};
	xor.b64  	%rd3572, %rd3571, %rd3570;
	shf.l.wrap.b32 	%r2050, %r2044, %r2045, 25;
	shf.l.wrap.b32 	%r2051, %r2045, %r2044, 25;
	mov.b64 	%rd3573, {%r2051, %r2050};
	xor.b64  	%rd3574, %rd3572, %rd3573;
	and.b64  	%rd3575, %rd18558, %rd3529;
	xor.b64  	%rd3576, %rd18558, %rd3529;
	and.b64  	%rd3577, %rd3576, %rd3502;
	or.b64  	%rd3578, %rd3577, %rd3575;
	add.s64 	%rd3579, %rd3569, %rd3578;
	add.s64 	%rd18557, %rd3579, %rd3574;
	add.s32 	%r2052, %r12906, 14;
	mul.wide.s32 	%rd3580, %r2052, 8;
	add.s64 	%rd3581, %rd3206, %rd3580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2053,%dummy}, %rd18561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2054}, %rd18561;
	}
	shf.r.wrap.b32 	%r2055, %r2054, %r2053, 14;
	shf.r.wrap.b32 	%r2056, %r2053, %r2054, 14;
	mov.b64 	%rd3582, {%r2056, %r2055};
	shf.r.wrap.b32 	%r2057, %r2054, %r2053, 18;
	shf.r.wrap.b32 	%r2058, %r2053, %r2054, 18;
	mov.b64 	%rd3583, {%r2058, %r2057};
	xor.b64  	%rd3584, %rd3583, %rd3582;
	shf.l.wrap.b32 	%r2059, %r2053, %r2054, 23;
	shf.l.wrap.b32 	%r2060, %r2054, %r2053, 23;
	mov.b64 	%rd3585, {%r2060, %r2059};
	xor.b64  	%rd3586, %rd3584, %rd3585;
	xor.b64  	%rd3587, %rd18562, %rd3518;
	and.b64  	%rd3588, %rd18561, %rd3587;
	xor.b64  	%rd3589, %rd3588, %rd3518;
	add.s64 	%rd3590, %rd3491, %rd18548;
	ld.const.u64 	%rd3591, [%rd3581];
	add.s64 	%rd3592, %rd3590, %rd3591;
	add.s64 	%rd3593, %rd3592, %rd3589;
	add.s64 	%rd3594, %rd3593, %rd3586;
	add.s64 	%rd18560, %rd3594, %rd3502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2061,%dummy}, %rd18557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2062}, %rd18557;
	}
	shf.r.wrap.b32 	%r2063, %r2062, %r2061, 28;
	shf.r.wrap.b32 	%r2064, %r2061, %r2062, 28;
	mov.b64 	%rd3595, {%r2064, %r2063};
	shf.l.wrap.b32 	%r2065, %r2061, %r2062, 30;
	shf.l.wrap.b32 	%r2066, %r2062, %r2061, 30;
	mov.b64 	%rd3596, {%r2066, %r2065};
	xor.b64  	%rd3597, %rd3596, %rd3595;
	shf.l.wrap.b32 	%r2067, %r2061, %r2062, 25;
	shf.l.wrap.b32 	%r2068, %r2062, %r2061, 25;
	mov.b64 	%rd3598, {%r2068, %r2067};
	xor.b64  	%rd3599, %rd3597, %rd3598;
	and.b64  	%rd3600, %rd18557, %rd18558;
	xor.b64  	%rd3601, %rd18557, %rd18558;
	and.b64  	%rd3602, %rd3601, %rd3529;
	or.b64  	%rd3603, %rd3602, %rd3600;
	add.s64 	%rd3604, %rd3594, %rd3603;
	add.s64 	%rd18556, %rd3604, %rd3599;
	add.s32 	%r2069, %r12906, 15;
	mul.wide.s32 	%rd3605, %r2069, 8;
	add.s64 	%rd3606, %rd3206, %rd3605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2070,%dummy}, %rd18560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2071}, %rd18560;
	}
	shf.r.wrap.b32 	%r2072, %r2071, %r2070, 14;
	shf.r.wrap.b32 	%r2073, %r2070, %r2071, 14;
	mov.b64 	%rd3607, {%r2073, %r2072};
	shf.r.wrap.b32 	%r2074, %r2071, %r2070, 18;
	shf.r.wrap.b32 	%r2075, %r2070, %r2071, 18;
	mov.b64 	%rd3608, {%r2075, %r2074};
	xor.b64  	%rd3609, %rd3608, %rd3607;
	shf.l.wrap.b32 	%r2076, %r2070, %r2071, 23;
	shf.l.wrap.b32 	%r2077, %r2071, %r2070, 23;
	mov.b64 	%rd3610, {%r2077, %r2076};
	xor.b64  	%rd3611, %rd3609, %rd3610;
	xor.b64  	%rd3612, %rd18561, %rd18562;
	and.b64  	%rd3613, %rd18560, %rd3612;
	xor.b64  	%rd3614, %rd3613, %rd18562;
	add.s64 	%rd3615, %rd3518, %rd18547;
	ld.const.u64 	%rd3616, [%rd3606];
	add.s64 	%rd3617, %rd3615, %rd3616;
	add.s64 	%rd3618, %rd3617, %rd3614;
	add.s64 	%rd3619, %rd3618, %rd3611;
	add.s64 	%rd18559, %rd3619, %rd3529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2078,%dummy}, %rd18556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2079}, %rd18556;
	}
	shf.r.wrap.b32 	%r2080, %r2079, %r2078, 28;
	shf.r.wrap.b32 	%r2081, %r2078, %r2079, 28;
	mov.b64 	%rd3620, {%r2081, %r2080};
	shf.l.wrap.b32 	%r2082, %r2078, %r2079, 30;
	shf.l.wrap.b32 	%r2083, %r2079, %r2078, 30;
	mov.b64 	%rd3621, {%r2083, %r2082};
	xor.b64  	%rd3622, %rd3621, %rd3620;
	shf.l.wrap.b32 	%r2084, %r2078, %r2079, 25;
	shf.l.wrap.b32 	%r2085, %r2079, %r2078, 25;
	mov.b64 	%rd3623, {%r2085, %r2084};
	xor.b64  	%rd3624, %rd3622, %rd3623;
	and.b64  	%rd3625, %rd18556, %rd18557;
	xor.b64  	%rd3626, %rd18556, %rd18557;
	and.b64  	%rd3627, %rd3626, %rd18558;
	or.b64  	%rd3628, %rd3627, %rd3625;
	add.s64 	%rd3629, %rd3619, %rd3628;
	add.s64 	%rd18555, %rd3629, %rd3624;
	add.s32 	%r12906, %r12906, 16;
	setp.lt.s32	%p33, %r12906, 80;
	@%p33 bra 	BB0_52;

	add.s64 	%rd3630, %rd97, %rd18555;
	st.local.u64 	[%rd1], %rd3630;
	add.s64 	%rd3631, %rd98, %rd18556;
	st.local.u64 	[%rd1+8], %rd3631;
	add.s64 	%rd3632, %rd99, %rd18557;
	st.local.u64 	[%rd1+16], %rd3632;
	add.s64 	%rd3633, %rd96, %rd18558;
	st.local.u64 	[%rd1+24], %rd3633;
	add.s64 	%rd3634, %rd91, %rd18559;
	st.local.u64 	[%rd1+32], %rd3634;
	add.s64 	%rd3635, %rd93, %rd18560;
	st.local.u64 	[%rd1+40], %rd3635;
	add.s64 	%rd3636, %rd92, %rd18561;
	st.local.u64 	[%rd1+48], %rd3636;
	add.s64 	%rd3637, %rd94, %rd18562;
	st.local.u64 	[%rd1+56], %rd3637;
	sub.s32 	%r85, %r2, %r65;
	setp.lt.s32	%p34, %r85, 1;
	@%p34 bra 	BB0_72;

	add.s32 	%r86, %r64, -128;
	and.b32  	%r87, %r86, 3;
	setp.eq.s32	%p35, %r87, 0;
	mov.u32 	%r12910, 0;
	@%p35 bra 	BB0_60;

	setp.eq.s32	%p36, %r87, 1;
	mov.u32 	%r12908, 0;
	@%p36 bra 	BB0_59;

	setp.eq.s32	%p37, %r87, 2;
	mov.u32 	%r12907, 0;
	@%p37 bra 	BB0_58;

	xor.b32  	%r2090, %r65, 7;
	cvt.u64.u32	%rd3638, %r2090;
	add.s64 	%rd3639, %rd1463, %rd3638;
	ld.local.u8 	%rs44, [%rd3639];
	st.local.u8 	[%rd89+7], %rs44;
	mov.u32 	%r12907, 1;

BB0_58:
	add.s32 	%r2091, %r12907, %r65;
	xor.b32  	%r2092, %r2091, 7;
	cvt.s64.s32	%rd3640, %r2092;
	add.s64 	%rd3641, %rd1463, %rd3640;
	ld.local.u8 	%rs45, [%rd3641];
	xor.b32  	%r2093, %r12907, 7;
	cvt.u64.u32	%rd3642, %r2093;
	add.s64 	%rd3643, %rd89, %rd3642;
	st.local.u8 	[%rd3643], %rs45;
	add.s32 	%r12908, %r12907, 1;

BB0_59:
	add.s32 	%r2094, %r12908, %r65;
	xor.b32  	%r2095, %r2094, 7;
	cvt.s64.s32	%rd3644, %r2095;
	add.s64 	%rd3645, %rd1463, %rd3644;
	ld.local.u8 	%rs46, [%rd3645];
	xor.b32  	%r2096, %r12908, 7;
	cvt.s64.s32	%rd3646, %r2096;
	add.s64 	%rd3647, %rd89, %rd3646;
	st.local.u8 	[%rd3647], %rs46;
	add.s32 	%r12910, %r12908, 1;

BB0_60:
	setp.lt.u32	%p38, %r86, 4;
	@%p38 bra 	BB0_72;

BB0_61:
	add.s32 	%r2097, %r12910, %r65;
	xor.b32  	%r2098, %r2097, 7;
	cvt.s64.s32	%rd3648, %r2098;
	add.s64 	%rd3649, %rd1463, %rd3648;
	ld.local.u8 	%rs47, [%rd3649];
	xor.b32  	%r2099, %r12910, 7;
	cvt.s64.s32	%rd3650, %r2099;
	add.s64 	%rd3651, %rd89, %rd3650;
	st.local.u8 	[%rd3651], %rs47;
	add.s32 	%r2100, %r12910, 1;
	add.s32 	%r2101, %r2100, %r65;
	xor.b32  	%r2102, %r2101, 7;
	cvt.s64.s32	%rd3652, %r2102;
	add.s64 	%rd3653, %rd1463, %rd3652;
	ld.local.u8 	%rs48, [%rd3653];
	xor.b32  	%r2103, %r2100, 7;
	cvt.s64.s32	%rd3654, %r2103;
	add.s64 	%rd3655, %rd89, %rd3654;
	st.local.u8 	[%rd3655], %rs48;
	add.s32 	%r2104, %r12910, 2;
	add.s32 	%r2105, %r2104, %r65;
	xor.b32  	%r2106, %r2105, 7;
	cvt.s64.s32	%rd3656, %r2106;
	add.s64 	%rd3657, %rd1463, %rd3656;
	ld.local.u8 	%rs49, [%rd3657];
	xor.b32  	%r2107, %r2104, 7;
	cvt.s64.s32	%rd3658, %r2107;
	add.s64 	%rd3659, %rd89, %rd3658;
	st.local.u8 	[%rd3659], %rs49;
	add.s32 	%r2108, %r12910, 3;
	add.s32 	%r2109, %r2108, %r65;
	xor.b32  	%r2110, %r2109, 7;
	cvt.s64.s32	%rd3660, %r2110;
	add.s64 	%rd3661, %rd1463, %rd3660;
	ld.local.u8 	%rs50, [%rd3661];
	xor.b32  	%r2111, %r2108, 7;
	cvt.s64.s32	%rd3662, %r2111;
	add.s64 	%rd3663, %rd89, %rd3662;
	st.local.u8 	[%rd3663], %rs50;
	add.s32 	%r12910, %r12910, 4;
	setp.lt.s32	%p39, %r12910, %r85;
	@%p39 bra 	BB0_61;
	bra.uni 	BB0_72;

BB0_67:
	ld.local.u8 	%rs51, [%rd1463+7];
	xor.b32  	%r2117, %r63, 7;
	cvt.u64.u32	%rd3665, %r2117;
	add.s64 	%rd3666, %rd89, %rd3665;
	st.local.u8 	[%rd3666], %rs51;
	add.s32 	%r63, %r63, 1;

BB0_68:
	xor.b32  	%r2118, %r2113, 7;
	cvt.u64.u32	%rd3667, %r2118;
	add.s64 	%rd3668, %rd1463, %rd3667;
	ld.local.u8 	%rs52, [%rd3668];
	xor.b32  	%r2119, %r63, 7;
	cvt.s64.s32	%rd3669, %r2119;
	add.s64 	%rd3670, %rd89, %rd3669;
	st.local.u8 	[%rd3670], %rs52;
	add.s32 	%r63, %r63, 1;
	add.s32 	%r12914, %r2113, 1;

BB0_69:
	xor.b32  	%r2120, %r12914, 7;
	cvt.s64.s32	%rd3671, %r2120;
	add.s64 	%rd3672, %rd1463, %rd3671;
	ld.local.u8 	%rs53, [%rd3672];
	xor.b32  	%r2121, %r63, 7;
	cvt.s64.s32	%rd3673, %r2121;
	add.s64 	%rd3674, %rd89, %rd3673;
	st.local.u8 	[%rd3674], %rs53;
	add.s32 	%r63, %r63, 1;
	add.s32 	%r12918, %r12914, 1;

BB0_70:
	setp.lt.u32	%p44, %r95, 4;
	@%p44 bra 	BB0_72;

BB0_71:
	xor.b32  	%r2122, %r12918, 7;
	cvt.s64.s32	%rd3675, %r2122;
	add.s64 	%rd3676, %rd1463, %rd3675;
	ld.local.u8 	%rs54, [%rd3676];
	xor.b32  	%r2123, %r63, 7;
	cvt.s64.s32	%rd3677, %r2123;
	add.s64 	%rd3678, %rd89, %rd3677;
	st.local.u8 	[%rd3678], %rs54;
	add.s32 	%r2124, %r12918, 1;
	xor.b32  	%r2125, %r2124, 7;
	cvt.s64.s32	%rd3679, %r2125;
	add.s64 	%rd3680, %rd1463, %rd3679;
	ld.local.u8 	%rs55, [%rd3680];
	add.s32 	%r2126, %r63, 1;
	xor.b32  	%r2127, %r2126, 7;
	cvt.s64.s32	%rd3681, %r2127;
	add.s64 	%rd3682, %rd89, %rd3681;
	st.local.u8 	[%rd3682], %rs55;
	add.s32 	%r2128, %r12918, 2;
	xor.b32  	%r2129, %r2128, 7;
	cvt.s64.s32	%rd3683, %r2129;
	add.s64 	%rd3684, %rd1463, %rd3683;
	ld.local.u8 	%rs56, [%rd3684];
	add.s32 	%r2130, %r63, 2;
	xor.b32  	%r2131, %r2130, 7;
	cvt.s64.s32	%rd3685, %r2131;
	add.s64 	%rd3686, %rd89, %rd3685;
	st.local.u8 	[%rd3686], %rs56;
	add.s32 	%r2132, %r12918, 3;
	xor.b32  	%r2133, %r2132, 7;
	cvt.s64.s32	%rd3687, %r2133;
	add.s64 	%rd3688, %rd1463, %rd3687;
	ld.local.u8 	%rs57, [%rd3688];
	add.s32 	%r2134, %r63, 3;
	xor.b32  	%r2135, %r2134, 7;
	cvt.s64.s32	%rd3689, %r2135;
	add.s64 	%rd3690, %rd89, %rd3689;
	st.local.u8 	[%rd3690], %rs57;
	add.s32 	%r12918, %r12918, 4;
	setp.lt.s32	%p45, %r12918, %r2;
	add.s32 	%r63, %r63, 4;
	@%p45 bra 	BB0_71;

BB0_72:
	ld.local.u32 	%r2136, [%rd1+192];
	and.b32  	%r112, %r2136, 127;
	mov.u32 	%r2137, 128;
	sub.s32 	%r113, %r2137, %r112;
	and.b32  	%r114, %r113, 3;
	setp.eq.s32	%p46, %r114, 0;
	mov.u32 	%r12922, %r112;
	@%p46 bra 	BB0_78;

	setp.eq.s32	%p47, %r114, 1;
	mov.u32 	%r12920, %r112;
	@%p47 bra 	BB0_77;

	setp.eq.s32	%p48, %r114, 2;
	mov.u32 	%r12919, %r112;
	@%p48 bra 	BB0_76;

	xor.b32  	%r2138, %r112, 7;
	cvt.u64.u32	%rd3691, %r2138;
	add.s64 	%rd3692, %rd89, %rd3691;
	mov.u16 	%rs58, 0;
	st.local.u8 	[%rd3692], %rs58;
	add.s32 	%r12919, %r112, 1;

BB0_76:
	xor.b32  	%r2139, %r12919, 7;
	cvt.s64.s32	%rd3693, %r2139;
	add.s64 	%rd3694, %rd89, %rd3693;
	mov.u16 	%rs59, 0;
	st.local.u8 	[%rd3694], %rs59;
	add.s32 	%r12920, %r12919, 1;

BB0_77:
	xor.b32  	%r2140, %r12920, 7;
	cvt.s64.s32	%rd3695, %r2140;
	add.s64 	%rd3696, %rd89, %rd3695;
	mov.u16 	%rs60, 0;
	st.local.u8 	[%rd3696], %rs60;
	add.s32 	%r12922, %r12920, 1;

BB0_78:
	setp.lt.u32	%p49, %r113, 4;
	@%p49 bra 	BB0_80;

BB0_79:
	xor.b32  	%r2141, %r12922, 7;
	cvt.s64.s32	%rd3697, %r2141;
	add.s64 	%rd3698, %rd89, %rd3697;
	mov.u16 	%rs61, 0;
	st.local.u8 	[%rd3698], %rs61;
	add.s32 	%r2142, %r12922, 1;
	xor.b32  	%r2143, %r2142, 7;
	cvt.s64.s32	%rd3699, %r2143;
	add.s64 	%rd3700, %rd89, %rd3699;
	st.local.u8 	[%rd3700], %rs61;
	add.s32 	%r2144, %r12922, 2;
	xor.b32  	%r2145, %r2144, 7;
	cvt.s64.s32	%rd3701, %r2145;
	add.s64 	%rd3702, %rd89, %rd3701;
	st.local.u8 	[%rd3702], %rs61;
	add.s32 	%r2146, %r12922, 3;
	xor.b32  	%r2147, %r2146, 7;
	cvt.s64.s32	%rd3703, %r2147;
	add.s64 	%rd3704, %rd89, %rd3703;
	st.local.u8 	[%rd3704], %rs61;
	add.s32 	%r12922, %r12922, 4;
	setp.lt.s32	%p50, %r12922, 128;
	@%p50 bra 	BB0_79;

BB0_80:
	xor.b32  	%r2148, %r112, 7;
	cvt.u64.u32	%rd3705, %r2148;
	add.s64 	%rd3706, %rd89, %rd3705;
	mov.u16 	%rs62, 128;
	st.local.u8 	[%rd3706], %rs62;
	ld.local.u64 	%rd18650, [%rd1+64];
	ld.local.u64 	%rd18651, [%rd1+72];
	ld.local.u64 	%rd18652, [%rd1+80];
	ld.local.u64 	%rd18653, [%rd1+88];
	ld.local.u64 	%rd18654, [%rd1+96];
	ld.local.u64 	%rd18655, [%rd1+104];
	ld.local.u64 	%rd18656, [%rd1+112];
	ld.local.u64 	%rd18657, [%rd1+120];
	ld.local.u64 	%rd18641, [%rd1+128];
	ld.local.u64 	%rd18640, [%rd1+136];
	ld.local.u64 	%rd18639, [%rd1+144];
	ld.local.u64 	%rd18638, [%rd1+152];
	ld.local.u64 	%rd18637, [%rd1+160];
	ld.local.u64 	%rd18636, [%rd1+168];
	ld.local.u64 	%rd18635, [%rd1+176];
	setp.gt.u32	%p51, %r112, 111;
	@%p51 bra 	BB0_82;
	bra.uni 	BB0_81;

BB0_82:
	ld.local.u64 	%rd211, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2150,%dummy}, %rd211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2151}, %rd211;
	}
	shf.r.wrap.b32 	%r2152, %r2151, %r2150, 14;
	shf.r.wrap.b32 	%r2153, %r2150, %r2151, 14;
	mov.b64 	%rd3707, {%r2153, %r2152};
	shf.r.wrap.b32 	%r2154, %r2151, %r2150, 18;
	shf.r.wrap.b32 	%r2155, %r2150, %r2151, 18;
	mov.b64 	%rd3708, {%r2155, %r2154};
	xor.b64  	%rd3709, %rd3708, %rd3707;
	shf.l.wrap.b32 	%r2156, %r2150, %r2151, 23;
	shf.l.wrap.b32 	%r2157, %r2151, %r2150, 23;
	mov.b64 	%rd3710, {%r2157, %r2156};
	xor.b64  	%rd3711, %rd3709, %rd3710;
	ld.local.u64 	%rd212, [%rd1+48];
	ld.local.u64 	%rd213, [%rd1+40];
	xor.b64  	%rd3712, %rd212, %rd213;
	and.b64  	%rd3713, %rd3712, %rd211;
	xor.b64  	%rd3714, %rd3713, %rd212;
	ld.local.u64 	%rd214, [%rd1+56];
	add.s64 	%rd3715, %rd214, %rd18650;
	ld.const.u64 	%rd18610, [k_sha512];
	add.s64 	%rd3716, %rd3715, %rd18610;
	add.s64 	%rd3717, %rd3716, %rd3714;
	add.s64 	%rd3718, %rd3717, %rd3711;
	ld.local.u64 	%rd216, [%rd1+24];
	add.s64 	%rd3719, %rd3718, %rd216;
	ld.local.u64 	%rd217, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2158,%dummy}, %rd217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2159}, %rd217;
	}
	shf.r.wrap.b32 	%r2160, %r2159, %r2158, 28;
	shf.r.wrap.b32 	%r2161, %r2158, %r2159, 28;
	mov.b64 	%rd3720, {%r2161, %r2160};
	shf.l.wrap.b32 	%r2162, %r2158, %r2159, 30;
	shf.l.wrap.b32 	%r2163, %r2159, %r2158, 30;
	mov.b64 	%rd3721, {%r2163, %r2162};
	xor.b64  	%rd3722, %rd3721, %rd3720;
	shf.l.wrap.b32 	%r2164, %r2158, %r2159, 25;
	shf.l.wrap.b32 	%r2165, %r2159, %r2158, 25;
	mov.b64 	%rd3723, {%r2165, %r2164};
	xor.b64  	%rd3724, %rd3722, %rd3723;
	ld.local.u64 	%rd218, [%rd1+8];
	and.b64  	%rd3725, %rd218, %rd217;
	xor.b64  	%rd3726, %rd218, %rd217;
	ld.local.u64 	%rd219, [%rd1+16];
	and.b64  	%rd3727, %rd219, %rd3726;
	or.b64  	%rd3728, %rd3727, %rd3725;
	add.s64 	%rd3729, %rd3718, %rd3728;
	add.s64 	%rd3730, %rd3729, %rd3724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2166,%dummy}, %rd3719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2167}, %rd3719;
	}
	shf.r.wrap.b32 	%r2168, %r2167, %r2166, 14;
	shf.r.wrap.b32 	%r2169, %r2166, %r2167, 14;
	mov.b64 	%rd3731, {%r2169, %r2168};
	shf.r.wrap.b32 	%r2170, %r2167, %r2166, 18;
	shf.r.wrap.b32 	%r2171, %r2166, %r2167, 18;
	mov.b64 	%rd3732, {%r2171, %r2170};
	xor.b64  	%rd3733, %rd3732, %rd3731;
	shf.l.wrap.b32 	%r2172, %r2166, %r2167, 23;
	shf.l.wrap.b32 	%r2173, %r2167, %r2166, 23;
	mov.b64 	%rd3734, {%r2173, %r2172};
	xor.b64  	%rd3735, %rd3733, %rd3734;
	xor.b64  	%rd3736, %rd213, %rd211;
	and.b64  	%rd3737, %rd3719, %rd3736;
	xor.b64  	%rd3738, %rd3737, %rd213;
	add.s64 	%rd3739, %rd212, %rd18651;
	ld.const.u64 	%rd18609, [k_sha512+8];
	add.s64 	%rd3740, %rd3739, %rd18609;
	add.s64 	%rd3741, %rd3740, %rd3738;
	add.s64 	%rd3742, %rd3741, %rd3735;
	add.s64 	%rd3743, %rd3742, %rd219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2174,%dummy}, %rd3730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2175}, %rd3730;
	}
	shf.r.wrap.b32 	%r2176, %r2175, %r2174, 28;
	shf.r.wrap.b32 	%r2177, %r2174, %r2175, 28;
	mov.b64 	%rd3744, {%r2177, %r2176};
	shf.l.wrap.b32 	%r2178, %r2174, %r2175, 30;
	shf.l.wrap.b32 	%r2179, %r2175, %r2174, 30;
	mov.b64 	%rd3745, {%r2179, %r2178};
	xor.b64  	%rd3746, %rd3745, %rd3744;
	shf.l.wrap.b32 	%r2180, %r2174, %r2175, 25;
	shf.l.wrap.b32 	%r2181, %r2175, %r2174, 25;
	mov.b64 	%rd3747, {%r2181, %r2180};
	xor.b64  	%rd3748, %rd3746, %rd3747;
	and.b64  	%rd3749, %rd3730, %rd217;
	xor.b64  	%rd3750, %rd3730, %rd217;
	and.b64  	%rd3751, %rd3750, %rd218;
	or.b64  	%rd3752, %rd3751, %rd3749;
	add.s64 	%rd3753, %rd3742, %rd3752;
	add.s64 	%rd3754, %rd3753, %rd3748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2182,%dummy}, %rd3743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2183}, %rd3743;
	}
	shf.r.wrap.b32 	%r2184, %r2183, %r2182, 14;
	shf.r.wrap.b32 	%r2185, %r2182, %r2183, 14;
	mov.b64 	%rd3755, {%r2185, %r2184};
	shf.r.wrap.b32 	%r2186, %r2183, %r2182, 18;
	shf.r.wrap.b32 	%r2187, %r2182, %r2183, 18;
	mov.b64 	%rd3756, {%r2187, %r2186};
	xor.b64  	%rd3757, %rd3756, %rd3755;
	shf.l.wrap.b32 	%r2188, %r2182, %r2183, 23;
	shf.l.wrap.b32 	%r2189, %r2183, %r2182, 23;
	mov.b64 	%rd3758, {%r2189, %r2188};
	xor.b64  	%rd3759, %rd3757, %rd3758;
	xor.b64  	%rd3760, %rd3719, %rd211;
	and.b64  	%rd3761, %rd3743, %rd3760;
	xor.b64  	%rd3762, %rd3761, %rd211;
	add.s64 	%rd3763, %rd213, %rd18652;
	ld.const.u64 	%rd221, [k_sha512+16];
	add.s64 	%rd3764, %rd3763, %rd221;
	add.s64 	%rd3765, %rd3764, %rd3762;
	add.s64 	%rd3766, %rd3765, %rd3759;
	add.s64 	%rd3767, %rd3766, %rd218;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2190,%dummy}, %rd3754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2191}, %rd3754;
	}
	shf.r.wrap.b32 	%r2192, %r2191, %r2190, 28;
	shf.r.wrap.b32 	%r2193, %r2190, %r2191, 28;
	mov.b64 	%rd3768, {%r2193, %r2192};
	shf.l.wrap.b32 	%r2194, %r2190, %r2191, 30;
	shf.l.wrap.b32 	%r2195, %r2191, %r2190, 30;
	mov.b64 	%rd3769, {%r2195, %r2194};
	xor.b64  	%rd3770, %rd3769, %rd3768;
	shf.l.wrap.b32 	%r2196, %r2190, %r2191, 25;
	shf.l.wrap.b32 	%r2197, %r2191, %r2190, 25;
	mov.b64 	%rd3771, {%r2197, %r2196};
	xor.b64  	%rd3772, %rd3770, %rd3771;
	and.b64  	%rd3773, %rd3754, %rd3730;
	xor.b64  	%rd3774, %rd3754, %rd3730;
	and.b64  	%rd3775, %rd3774, %rd217;
	or.b64  	%rd3776, %rd3775, %rd3773;
	add.s64 	%rd3777, %rd3766, %rd3776;
	add.s64 	%rd3778, %rd3777, %rd3772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2198,%dummy}, %rd3767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2199}, %rd3767;
	}
	shf.r.wrap.b32 	%r2200, %r2199, %r2198, 14;
	shf.r.wrap.b32 	%r2201, %r2198, %r2199, 14;
	mov.b64 	%rd3779, {%r2201, %r2200};
	shf.r.wrap.b32 	%r2202, %r2199, %r2198, 18;
	shf.r.wrap.b32 	%r2203, %r2198, %r2199, 18;
	mov.b64 	%rd3780, {%r2203, %r2202};
	xor.b64  	%rd3781, %rd3780, %rd3779;
	shf.l.wrap.b32 	%r2204, %r2198, %r2199, 23;
	shf.l.wrap.b32 	%r2205, %r2199, %r2198, 23;
	mov.b64 	%rd3782, {%r2205, %r2204};
	xor.b64  	%rd3783, %rd3781, %rd3782;
	xor.b64  	%rd3784, %rd3743, %rd3719;
	and.b64  	%rd3785, %rd3767, %rd3784;
	xor.b64  	%rd3786, %rd3785, %rd3719;
	add.s64 	%rd3787, %rd211, %rd18653;
	ld.const.u64 	%rd222, [k_sha512+24];
	add.s64 	%rd3788, %rd3787, %rd222;
	add.s64 	%rd3789, %rd3788, %rd3786;
	add.s64 	%rd3790, %rd3789, %rd3783;
	add.s64 	%rd3791, %rd3790, %rd217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2206,%dummy}, %rd3778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2207}, %rd3778;
	}
	shf.r.wrap.b32 	%r2208, %r2207, %r2206, 28;
	shf.r.wrap.b32 	%r2209, %r2206, %r2207, 28;
	mov.b64 	%rd3792, {%r2209, %r2208};
	shf.l.wrap.b32 	%r2210, %r2206, %r2207, 30;
	shf.l.wrap.b32 	%r2211, %r2207, %r2206, 30;
	mov.b64 	%rd3793, {%r2211, %r2210};
	xor.b64  	%rd3794, %rd3793, %rd3792;
	shf.l.wrap.b32 	%r2212, %r2206, %r2207, 25;
	shf.l.wrap.b32 	%r2213, %r2207, %r2206, 25;
	mov.b64 	%rd3795, {%r2213, %r2212};
	xor.b64  	%rd3796, %rd3794, %rd3795;
	and.b64  	%rd3797, %rd3778, %rd3754;
	xor.b64  	%rd3798, %rd3778, %rd3754;
	and.b64  	%rd3799, %rd3798, %rd3730;
	or.b64  	%rd3800, %rd3799, %rd3797;
	add.s64 	%rd3801, %rd3790, %rd3800;
	add.s64 	%rd3802, %rd3801, %rd3796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2214,%dummy}, %rd3791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2215}, %rd3791;
	}
	shf.r.wrap.b32 	%r2216, %r2215, %r2214, 14;
	shf.r.wrap.b32 	%r2217, %r2214, %r2215, 14;
	mov.b64 	%rd3803, {%r2217, %r2216};
	shf.r.wrap.b32 	%r2218, %r2215, %r2214, 18;
	shf.r.wrap.b32 	%r2219, %r2214, %r2215, 18;
	mov.b64 	%rd3804, {%r2219, %r2218};
	xor.b64  	%rd3805, %rd3804, %rd3803;
	shf.l.wrap.b32 	%r2220, %r2214, %r2215, 23;
	shf.l.wrap.b32 	%r2221, %r2215, %r2214, 23;
	mov.b64 	%rd3806, {%r2221, %r2220};
	xor.b64  	%rd3807, %rd3805, %rd3806;
	xor.b64  	%rd3808, %rd3767, %rd3743;
	and.b64  	%rd3809, %rd3791, %rd3808;
	xor.b64  	%rd3810, %rd3809, %rd3743;
	add.s64 	%rd3811, %rd3719, %rd18654;
	ld.const.u64 	%rd223, [k_sha512+32];
	add.s64 	%rd3812, %rd3811, %rd223;
	add.s64 	%rd3813, %rd3812, %rd3810;
	add.s64 	%rd3814, %rd3813, %rd3807;
	add.s64 	%rd3815, %rd3814, %rd3730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2222,%dummy}, %rd3802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2223}, %rd3802;
	}
	shf.r.wrap.b32 	%r2224, %r2223, %r2222, 28;
	shf.r.wrap.b32 	%r2225, %r2222, %r2223, 28;
	mov.b64 	%rd3816, {%r2225, %r2224};
	shf.l.wrap.b32 	%r2226, %r2222, %r2223, 30;
	shf.l.wrap.b32 	%r2227, %r2223, %r2222, 30;
	mov.b64 	%rd3817, {%r2227, %r2226};
	xor.b64  	%rd3818, %rd3817, %rd3816;
	shf.l.wrap.b32 	%r2228, %r2222, %r2223, 25;
	shf.l.wrap.b32 	%r2229, %r2223, %r2222, 25;
	mov.b64 	%rd3819, {%r2229, %r2228};
	xor.b64  	%rd3820, %rd3818, %rd3819;
	and.b64  	%rd3821, %rd3802, %rd3778;
	xor.b64  	%rd3822, %rd3802, %rd3778;
	and.b64  	%rd3823, %rd3822, %rd3754;
	or.b64  	%rd3824, %rd3823, %rd3821;
	add.s64 	%rd3825, %rd3814, %rd3824;
	add.s64 	%rd3826, %rd3825, %rd3820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2230,%dummy}, %rd3815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2231}, %rd3815;
	}
	shf.r.wrap.b32 	%r2232, %r2231, %r2230, 14;
	shf.r.wrap.b32 	%r2233, %r2230, %r2231, 14;
	mov.b64 	%rd3827, {%r2233, %r2232};
	shf.r.wrap.b32 	%r2234, %r2231, %r2230, 18;
	shf.r.wrap.b32 	%r2235, %r2230, %r2231, 18;
	mov.b64 	%rd3828, {%r2235, %r2234};
	xor.b64  	%rd3829, %rd3828, %rd3827;
	shf.l.wrap.b32 	%r2236, %r2230, %r2231, 23;
	shf.l.wrap.b32 	%r2237, %r2231, %r2230, 23;
	mov.b64 	%rd3830, {%r2237, %r2236};
	xor.b64  	%rd3831, %rd3829, %rd3830;
	xor.b64  	%rd3832, %rd3791, %rd3767;
	and.b64  	%rd3833, %rd3815, %rd3832;
	xor.b64  	%rd3834, %rd3833, %rd3767;
	add.s64 	%rd3835, %rd3743, %rd18655;
	ld.const.u64 	%rd224, [k_sha512+40];
	add.s64 	%rd3836, %rd3835, %rd224;
	add.s64 	%rd3837, %rd3836, %rd3834;
	add.s64 	%rd3838, %rd3837, %rd3831;
	add.s64 	%rd3839, %rd3838, %rd3754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2238,%dummy}, %rd3826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2239}, %rd3826;
	}
	shf.r.wrap.b32 	%r2240, %r2239, %r2238, 28;
	shf.r.wrap.b32 	%r2241, %r2238, %r2239, 28;
	mov.b64 	%rd3840, {%r2241, %r2240};
	shf.l.wrap.b32 	%r2242, %r2238, %r2239, 30;
	shf.l.wrap.b32 	%r2243, %r2239, %r2238, 30;
	mov.b64 	%rd3841, {%r2243, %r2242};
	xor.b64  	%rd3842, %rd3841, %rd3840;
	shf.l.wrap.b32 	%r2244, %r2238, %r2239, 25;
	shf.l.wrap.b32 	%r2245, %r2239, %r2238, 25;
	mov.b64 	%rd3843, {%r2245, %r2244};
	xor.b64  	%rd3844, %rd3842, %rd3843;
	and.b64  	%rd3845, %rd3826, %rd3802;
	xor.b64  	%rd3846, %rd3826, %rd3802;
	and.b64  	%rd3847, %rd3846, %rd3778;
	or.b64  	%rd3848, %rd3847, %rd3845;
	add.s64 	%rd3849, %rd3838, %rd3848;
	add.s64 	%rd3850, %rd3849, %rd3844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2246,%dummy}, %rd3839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2247}, %rd3839;
	}
	shf.r.wrap.b32 	%r2248, %r2247, %r2246, 14;
	shf.r.wrap.b32 	%r2249, %r2246, %r2247, 14;
	mov.b64 	%rd3851, {%r2249, %r2248};
	shf.r.wrap.b32 	%r2250, %r2247, %r2246, 18;
	shf.r.wrap.b32 	%r2251, %r2246, %r2247, 18;
	mov.b64 	%rd3852, {%r2251, %r2250};
	xor.b64  	%rd3853, %rd3852, %rd3851;
	shf.l.wrap.b32 	%r2252, %r2246, %r2247, 23;
	shf.l.wrap.b32 	%r2253, %r2247, %r2246, 23;
	mov.b64 	%rd3854, {%r2253, %r2252};
	xor.b64  	%rd3855, %rd3853, %rd3854;
	xor.b64  	%rd3856, %rd3815, %rd3791;
	and.b64  	%rd3857, %rd3839, %rd3856;
	xor.b64  	%rd3858, %rd3857, %rd3791;
	add.s64 	%rd3859, %rd3767, %rd18656;
	ld.const.u64 	%rd225, [k_sha512+48];
	add.s64 	%rd3860, %rd3859, %rd225;
	add.s64 	%rd3861, %rd3860, %rd3858;
	add.s64 	%rd3862, %rd3861, %rd3855;
	add.s64 	%rd3863, %rd3862, %rd3778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2254,%dummy}, %rd3850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2255}, %rd3850;
	}
	shf.r.wrap.b32 	%r2256, %r2255, %r2254, 28;
	shf.r.wrap.b32 	%r2257, %r2254, %r2255, 28;
	mov.b64 	%rd3864, {%r2257, %r2256};
	shf.l.wrap.b32 	%r2258, %r2254, %r2255, 30;
	shf.l.wrap.b32 	%r2259, %r2255, %r2254, 30;
	mov.b64 	%rd3865, {%r2259, %r2258};
	xor.b64  	%rd3866, %rd3865, %rd3864;
	shf.l.wrap.b32 	%r2260, %r2254, %r2255, 25;
	shf.l.wrap.b32 	%r2261, %r2255, %r2254, 25;
	mov.b64 	%rd3867, {%r2261, %r2260};
	xor.b64  	%rd3868, %rd3866, %rd3867;
	and.b64  	%rd3869, %rd3850, %rd3826;
	xor.b64  	%rd3870, %rd3850, %rd3826;
	and.b64  	%rd3871, %rd3870, %rd3802;
	or.b64  	%rd3872, %rd3871, %rd3869;
	add.s64 	%rd3873, %rd3862, %rd3872;
	add.s64 	%rd3874, %rd3873, %rd3868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2262,%dummy}, %rd3863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2263}, %rd3863;
	}
	shf.r.wrap.b32 	%r2264, %r2263, %r2262, 14;
	shf.r.wrap.b32 	%r2265, %r2262, %r2263, 14;
	mov.b64 	%rd3875, {%r2265, %r2264};
	shf.r.wrap.b32 	%r2266, %r2263, %r2262, 18;
	shf.r.wrap.b32 	%r2267, %r2262, %r2263, 18;
	mov.b64 	%rd3876, {%r2267, %r2266};
	xor.b64  	%rd3877, %rd3876, %rd3875;
	shf.l.wrap.b32 	%r2268, %r2262, %r2263, 23;
	shf.l.wrap.b32 	%r2269, %r2263, %r2262, 23;
	mov.b64 	%rd3878, {%r2269, %r2268};
	xor.b64  	%rd3879, %rd3877, %rd3878;
	xor.b64  	%rd3880, %rd3839, %rd3815;
	and.b64  	%rd3881, %rd3863, %rd3880;
	xor.b64  	%rd3882, %rd3881, %rd3815;
	add.s64 	%rd3883, %rd3791, %rd18657;
	ld.const.u64 	%rd226, [k_sha512+56];
	add.s64 	%rd3884, %rd3883, %rd226;
	add.s64 	%rd3885, %rd3884, %rd3882;
	add.s64 	%rd3886, %rd3885, %rd3879;
	add.s64 	%rd3887, %rd3886, %rd3802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2270,%dummy}, %rd3874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2271}, %rd3874;
	}
	shf.r.wrap.b32 	%r2272, %r2271, %r2270, 28;
	shf.r.wrap.b32 	%r2273, %r2270, %r2271, 28;
	mov.b64 	%rd3888, {%r2273, %r2272};
	shf.l.wrap.b32 	%r2274, %r2270, %r2271, 30;
	shf.l.wrap.b32 	%r2275, %r2271, %r2270, 30;
	mov.b64 	%rd3889, {%r2275, %r2274};
	xor.b64  	%rd3890, %rd3889, %rd3888;
	shf.l.wrap.b32 	%r2276, %r2270, %r2271, 25;
	shf.l.wrap.b32 	%r2277, %r2271, %r2270, 25;
	mov.b64 	%rd3891, {%r2277, %r2276};
	xor.b64  	%rd3892, %rd3890, %rd3891;
	and.b64  	%rd3893, %rd3874, %rd3850;
	xor.b64  	%rd3894, %rd3874, %rd3850;
	and.b64  	%rd3895, %rd3894, %rd3826;
	or.b64  	%rd3896, %rd3895, %rd3893;
	add.s64 	%rd3897, %rd3886, %rd3896;
	add.s64 	%rd3898, %rd3897, %rd3892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2278,%dummy}, %rd3887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2279}, %rd3887;
	}
	shf.r.wrap.b32 	%r2280, %r2279, %r2278, 14;
	shf.r.wrap.b32 	%r2281, %r2278, %r2279, 14;
	mov.b64 	%rd3899, {%r2281, %r2280};
	shf.r.wrap.b32 	%r2282, %r2279, %r2278, 18;
	shf.r.wrap.b32 	%r2283, %r2278, %r2279, 18;
	mov.b64 	%rd3900, {%r2283, %r2282};
	xor.b64  	%rd3901, %rd3900, %rd3899;
	shf.l.wrap.b32 	%r2284, %r2278, %r2279, 23;
	shf.l.wrap.b32 	%r2285, %r2279, %r2278, 23;
	mov.b64 	%rd3902, {%r2285, %r2284};
	xor.b64  	%rd3903, %rd3901, %rd3902;
	xor.b64  	%rd3904, %rd3863, %rd3839;
	and.b64  	%rd3905, %rd3887, %rd3904;
	xor.b64  	%rd3906, %rd3905, %rd3839;
	add.s64 	%rd3907, %rd3815, %rd18641;
	ld.const.u64 	%rd227, [k_sha512+64];
	add.s64 	%rd3908, %rd3907, %rd227;
	add.s64 	%rd3909, %rd3908, %rd3906;
	add.s64 	%rd3910, %rd3909, %rd3903;
	add.s64 	%rd3911, %rd3910, %rd3826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2286,%dummy}, %rd3898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2287}, %rd3898;
	}
	shf.r.wrap.b32 	%r2288, %r2287, %r2286, 28;
	shf.r.wrap.b32 	%r2289, %r2286, %r2287, 28;
	mov.b64 	%rd3912, {%r2289, %r2288};
	shf.l.wrap.b32 	%r2290, %r2286, %r2287, 30;
	shf.l.wrap.b32 	%r2291, %r2287, %r2286, 30;
	mov.b64 	%rd3913, {%r2291, %r2290};
	xor.b64  	%rd3914, %rd3913, %rd3912;
	shf.l.wrap.b32 	%r2292, %r2286, %r2287, 25;
	shf.l.wrap.b32 	%r2293, %r2287, %r2286, 25;
	mov.b64 	%rd3915, {%r2293, %r2292};
	xor.b64  	%rd3916, %rd3914, %rd3915;
	and.b64  	%rd3917, %rd3898, %rd3874;
	xor.b64  	%rd3918, %rd3898, %rd3874;
	and.b64  	%rd3919, %rd3918, %rd3850;
	or.b64  	%rd3920, %rd3919, %rd3917;
	add.s64 	%rd3921, %rd3910, %rd3920;
	add.s64 	%rd3922, %rd3921, %rd3916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2294,%dummy}, %rd3911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2295}, %rd3911;
	}
	shf.r.wrap.b32 	%r2296, %r2295, %r2294, 14;
	shf.r.wrap.b32 	%r2297, %r2294, %r2295, 14;
	mov.b64 	%rd3923, {%r2297, %r2296};
	shf.r.wrap.b32 	%r2298, %r2295, %r2294, 18;
	shf.r.wrap.b32 	%r2299, %r2294, %r2295, 18;
	mov.b64 	%rd3924, {%r2299, %r2298};
	xor.b64  	%rd3925, %rd3924, %rd3923;
	shf.l.wrap.b32 	%r2300, %r2294, %r2295, 23;
	shf.l.wrap.b32 	%r2301, %r2295, %r2294, 23;
	mov.b64 	%rd3926, {%r2301, %r2300};
	xor.b64  	%rd3927, %rd3925, %rd3926;
	xor.b64  	%rd3928, %rd3887, %rd3863;
	and.b64  	%rd3929, %rd3911, %rd3928;
	xor.b64  	%rd3930, %rd3929, %rd3863;
	add.s64 	%rd3931, %rd3839, %rd18640;
	ld.const.u64 	%rd18601, [k_sha512+72];
	add.s64 	%rd3932, %rd3931, %rd18601;
	add.s64 	%rd3933, %rd3932, %rd3930;
	add.s64 	%rd3934, %rd3933, %rd3927;
	add.s64 	%rd3935, %rd3934, %rd3850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2302,%dummy}, %rd3922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2303}, %rd3922;
	}
	shf.r.wrap.b32 	%r2304, %r2303, %r2302, 28;
	shf.r.wrap.b32 	%r2305, %r2302, %r2303, 28;
	mov.b64 	%rd3936, {%r2305, %r2304};
	shf.l.wrap.b32 	%r2306, %r2302, %r2303, 30;
	shf.l.wrap.b32 	%r2307, %r2303, %r2302, 30;
	mov.b64 	%rd3937, {%r2307, %r2306};
	xor.b64  	%rd3938, %rd3937, %rd3936;
	shf.l.wrap.b32 	%r2308, %r2302, %r2303, 25;
	shf.l.wrap.b32 	%r2309, %r2303, %r2302, 25;
	mov.b64 	%rd3939, {%r2309, %r2308};
	xor.b64  	%rd3940, %rd3938, %rd3939;
	and.b64  	%rd3941, %rd3922, %rd3898;
	xor.b64  	%rd3942, %rd3922, %rd3898;
	and.b64  	%rd3943, %rd3942, %rd3874;
	or.b64  	%rd3944, %rd3943, %rd3941;
	add.s64 	%rd3945, %rd3934, %rd3944;
	add.s64 	%rd3946, %rd3945, %rd3940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2310,%dummy}, %rd3935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2311}, %rd3935;
	}
	shf.r.wrap.b32 	%r2312, %r2311, %r2310, 14;
	shf.r.wrap.b32 	%r2313, %r2310, %r2311, 14;
	mov.b64 	%rd3947, {%r2313, %r2312};
	shf.r.wrap.b32 	%r2314, %r2311, %r2310, 18;
	shf.r.wrap.b32 	%r2315, %r2310, %r2311, 18;
	mov.b64 	%rd3948, {%r2315, %r2314};
	xor.b64  	%rd3949, %rd3948, %rd3947;
	shf.l.wrap.b32 	%r2316, %r2310, %r2311, 23;
	shf.l.wrap.b32 	%r2317, %r2311, %r2310, 23;
	mov.b64 	%rd3950, {%r2317, %r2316};
	xor.b64  	%rd3951, %rd3949, %rd3950;
	xor.b64  	%rd3952, %rd3911, %rd3887;
	and.b64  	%rd3953, %rd3935, %rd3952;
	xor.b64  	%rd3954, %rd3953, %rd3887;
	add.s64 	%rd3955, %rd3863, %rd18639;
	ld.const.u64 	%rd18600, [k_sha512+80];
	add.s64 	%rd3956, %rd3955, %rd18600;
	add.s64 	%rd3957, %rd3956, %rd3954;
	add.s64 	%rd3958, %rd3957, %rd3951;
	add.s64 	%rd3959, %rd3958, %rd3874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2318,%dummy}, %rd3946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2319}, %rd3946;
	}
	shf.r.wrap.b32 	%r2320, %r2319, %r2318, 28;
	shf.r.wrap.b32 	%r2321, %r2318, %r2319, 28;
	mov.b64 	%rd3960, {%r2321, %r2320};
	shf.l.wrap.b32 	%r2322, %r2318, %r2319, 30;
	shf.l.wrap.b32 	%r2323, %r2319, %r2318, 30;
	mov.b64 	%rd3961, {%r2323, %r2322};
	xor.b64  	%rd3962, %rd3961, %rd3960;
	shf.l.wrap.b32 	%r2324, %r2318, %r2319, 25;
	shf.l.wrap.b32 	%r2325, %r2319, %r2318, 25;
	mov.b64 	%rd3963, {%r2325, %r2324};
	xor.b64  	%rd3964, %rd3962, %rd3963;
	and.b64  	%rd3965, %rd3946, %rd3922;
	xor.b64  	%rd3966, %rd3946, %rd3922;
	and.b64  	%rd3967, %rd3966, %rd3898;
	or.b64  	%rd3968, %rd3967, %rd3965;
	add.s64 	%rd3969, %rd3958, %rd3968;
	add.s64 	%rd3970, %rd3969, %rd3964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2326,%dummy}, %rd3959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2327}, %rd3959;
	}
	shf.r.wrap.b32 	%r2328, %r2327, %r2326, 14;
	shf.r.wrap.b32 	%r2329, %r2326, %r2327, 14;
	mov.b64 	%rd3971, {%r2329, %r2328};
	shf.r.wrap.b32 	%r2330, %r2327, %r2326, 18;
	shf.r.wrap.b32 	%r2331, %r2326, %r2327, 18;
	mov.b64 	%rd3972, {%r2331, %r2330};
	xor.b64  	%rd3973, %rd3972, %rd3971;
	shf.l.wrap.b32 	%r2332, %r2326, %r2327, 23;
	shf.l.wrap.b32 	%r2333, %r2327, %r2326, 23;
	mov.b64 	%rd3974, {%r2333, %r2332};
	xor.b64  	%rd3975, %rd3973, %rd3974;
	xor.b64  	%rd3976, %rd3935, %rd3911;
	and.b64  	%rd3977, %rd3959, %rd3976;
	xor.b64  	%rd3978, %rd3977, %rd3911;
	add.s64 	%rd3979, %rd3887, %rd18638;
	ld.const.u64 	%rd18599, [k_sha512+88];
	add.s64 	%rd3980, %rd3979, %rd18599;
	add.s64 	%rd3981, %rd3980, %rd3978;
	add.s64 	%rd3982, %rd3981, %rd3975;
	add.s64 	%rd3983, %rd3982, %rd3898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2334,%dummy}, %rd3970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2335}, %rd3970;
	}
	shf.r.wrap.b32 	%r2336, %r2335, %r2334, 28;
	shf.r.wrap.b32 	%r2337, %r2334, %r2335, 28;
	mov.b64 	%rd3984, {%r2337, %r2336};
	shf.l.wrap.b32 	%r2338, %r2334, %r2335, 30;
	shf.l.wrap.b32 	%r2339, %r2335, %r2334, 30;
	mov.b64 	%rd3985, {%r2339, %r2338};
	xor.b64  	%rd3986, %rd3985, %rd3984;
	shf.l.wrap.b32 	%r2340, %r2334, %r2335, 25;
	shf.l.wrap.b32 	%r2341, %r2335, %r2334, 25;
	mov.b64 	%rd3987, {%r2341, %r2340};
	xor.b64  	%rd3988, %rd3986, %rd3987;
	and.b64  	%rd3989, %rd3970, %rd3946;
	xor.b64  	%rd3990, %rd3970, %rd3946;
	and.b64  	%rd3991, %rd3990, %rd3922;
	or.b64  	%rd3992, %rd3991, %rd3989;
	add.s64 	%rd3993, %rd3982, %rd3992;
	add.s64 	%rd3994, %rd3993, %rd3988;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2342,%dummy}, %rd3983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2343}, %rd3983;
	}
	shf.r.wrap.b32 	%r2344, %r2343, %r2342, 14;
	shf.r.wrap.b32 	%r2345, %r2342, %r2343, 14;
	mov.b64 	%rd3995, {%r2345, %r2344};
	shf.r.wrap.b32 	%r2346, %r2343, %r2342, 18;
	shf.r.wrap.b32 	%r2347, %r2342, %r2343, 18;
	mov.b64 	%rd3996, {%r2347, %r2346};
	xor.b64  	%rd3997, %rd3996, %rd3995;
	shf.l.wrap.b32 	%r2348, %r2342, %r2343, 23;
	shf.l.wrap.b32 	%r2349, %r2343, %r2342, 23;
	mov.b64 	%rd3998, {%r2349, %r2348};
	xor.b64  	%rd3999, %rd3997, %rd3998;
	xor.b64  	%rd4000, %rd3959, %rd3935;
	and.b64  	%rd4001, %rd3983, %rd4000;
	xor.b64  	%rd4002, %rd4001, %rd3935;
	add.s64 	%rd4003, %rd3911, %rd18637;
	ld.const.u64 	%rd18598, [k_sha512+96];
	add.s64 	%rd4004, %rd4003, %rd18598;
	add.s64 	%rd4005, %rd4004, %rd4002;
	add.s64 	%rd4006, %rd4005, %rd3999;
	add.s64 	%rd18586, %rd4006, %rd3922;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2350,%dummy}, %rd3994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2351}, %rd3994;
	}
	shf.r.wrap.b32 	%r2352, %r2351, %r2350, 28;
	shf.r.wrap.b32 	%r2353, %r2350, %r2351, 28;
	mov.b64 	%rd4007, {%r2353, %r2352};
	shf.l.wrap.b32 	%r2354, %r2350, %r2351, 30;
	shf.l.wrap.b32 	%r2355, %r2351, %r2350, 30;
	mov.b64 	%rd4008, {%r2355, %r2354};
	xor.b64  	%rd4009, %rd4008, %rd4007;
	shf.l.wrap.b32 	%r2356, %r2350, %r2351, 25;
	shf.l.wrap.b32 	%r2357, %r2351, %r2350, 25;
	mov.b64 	%rd4010, {%r2357, %r2356};
	xor.b64  	%rd4011, %rd4009, %rd4010;
	and.b64  	%rd4012, %rd3994, %rd3970;
	xor.b64  	%rd4013, %rd3994, %rd3970;
	and.b64  	%rd4014, %rd4013, %rd3946;
	or.b64  	%rd4015, %rd4014, %rd4012;
	add.s64 	%rd4016, %rd4006, %rd4015;
	add.s64 	%rd18582, %rd4016, %rd4011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2358,%dummy}, %rd18586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2359}, %rd18586;
	}
	shf.r.wrap.b32 	%r2360, %r2359, %r2358, 14;
	shf.r.wrap.b32 	%r2361, %r2358, %r2359, 14;
	mov.b64 	%rd4017, {%r2361, %r2360};
	shf.r.wrap.b32 	%r2362, %r2359, %r2358, 18;
	shf.r.wrap.b32 	%r2363, %r2358, %r2359, 18;
	mov.b64 	%rd4018, {%r2363, %r2362};
	xor.b64  	%rd4019, %rd4018, %rd4017;
	shf.l.wrap.b32 	%r2364, %r2358, %r2359, 23;
	shf.l.wrap.b32 	%r2365, %r2359, %r2358, 23;
	mov.b64 	%rd4020, {%r2365, %r2364};
	xor.b64  	%rd4021, %rd4019, %rd4020;
	xor.b64  	%rd4022, %rd3983, %rd3959;
	and.b64  	%rd4023, %rd18586, %rd4022;
	xor.b64  	%rd4024, %rd4023, %rd3959;
	add.s64 	%rd4025, %rd3935, %rd18636;
	ld.const.u64 	%rd18597, [k_sha512+104];
	add.s64 	%rd4026, %rd4025, %rd18597;
	add.s64 	%rd4027, %rd4026, %rd4024;
	add.s64 	%rd4028, %rd4027, %rd4021;
	add.s64 	%rd18585, %rd4028, %rd3946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2366,%dummy}, %rd18582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2367}, %rd18582;
	}
	shf.r.wrap.b32 	%r2368, %r2367, %r2366, 28;
	shf.r.wrap.b32 	%r2369, %r2366, %r2367, 28;
	mov.b64 	%rd4029, {%r2369, %r2368};
	shf.l.wrap.b32 	%r2370, %r2366, %r2367, 30;
	shf.l.wrap.b32 	%r2371, %r2367, %r2366, 30;
	mov.b64 	%rd4030, {%r2371, %r2370};
	xor.b64  	%rd4031, %rd4030, %rd4029;
	shf.l.wrap.b32 	%r2372, %r2366, %r2367, 25;
	shf.l.wrap.b32 	%r2373, %r2367, %r2366, 25;
	mov.b64 	%rd4032, {%r2373, %r2372};
	xor.b64  	%rd4033, %rd4031, %rd4032;
	and.b64  	%rd4034, %rd18582, %rd3994;
	xor.b64  	%rd4035, %rd18582, %rd3994;
	and.b64  	%rd4036, %rd4035, %rd3970;
	or.b64  	%rd4037, %rd4036, %rd4034;
	add.s64 	%rd4038, %rd4028, %rd4037;
	add.s64 	%rd18581, %rd4038, %rd4033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2374,%dummy}, %rd18585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2375}, %rd18585;
	}
	shf.r.wrap.b32 	%r2376, %r2375, %r2374, 14;
	shf.r.wrap.b32 	%r2377, %r2374, %r2375, 14;
	mov.b64 	%rd4039, {%r2377, %r2376};
	shf.r.wrap.b32 	%r2378, %r2375, %r2374, 18;
	shf.r.wrap.b32 	%r2379, %r2374, %r2375, 18;
	mov.b64 	%rd4040, {%r2379, %r2378};
	xor.b64  	%rd4041, %rd4040, %rd4039;
	shf.l.wrap.b32 	%r2380, %r2374, %r2375, 23;
	shf.l.wrap.b32 	%r2381, %r2375, %r2374, 23;
	mov.b64 	%rd4042, {%r2381, %r2380};
	xor.b64  	%rd4043, %rd4041, %rd4042;
	xor.b64  	%rd4044, %rd18586, %rd3983;
	and.b64  	%rd4045, %rd18585, %rd4044;
	xor.b64  	%rd4046, %rd4045, %rd3983;
	add.s64 	%rd4047, %rd3959, %rd18635;
	ld.const.u64 	%rd18596, [k_sha512+112];
	add.s64 	%rd4048, %rd4047, %rd18596;
	add.s64 	%rd4049, %rd4048, %rd4046;
	add.s64 	%rd4050, %rd4049, %rd4043;
	add.s64 	%rd18584, %rd4050, %rd3970;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2382,%dummy}, %rd18581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2383}, %rd18581;
	}
	shf.r.wrap.b32 	%r2384, %r2383, %r2382, 28;
	shf.r.wrap.b32 	%r2385, %r2382, %r2383, 28;
	mov.b64 	%rd4051, {%r2385, %r2384};
	shf.l.wrap.b32 	%r2386, %r2382, %r2383, 30;
	shf.l.wrap.b32 	%r2387, %r2383, %r2382, 30;
	mov.b64 	%rd4052, {%r2387, %r2386};
	xor.b64  	%rd4053, %rd4052, %rd4051;
	shf.l.wrap.b32 	%r2388, %r2382, %r2383, 25;
	shf.l.wrap.b32 	%r2389, %r2383, %r2382, 25;
	mov.b64 	%rd4054, {%r2389, %r2388};
	xor.b64  	%rd4055, %rd4053, %rd4054;
	and.b64  	%rd4056, %rd18581, %rd18582;
	xor.b64  	%rd4057, %rd18581, %rd18582;
	and.b64  	%rd4058, %rd4057, %rd3994;
	or.b64  	%rd4059, %rd4058, %rd4056;
	add.s64 	%rd4060, %rd4050, %rd4059;
	add.s64 	%rd18580, %rd4060, %rd4055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2390,%dummy}, %rd18584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2391}, %rd18584;
	}
	shf.r.wrap.b32 	%r2392, %r2391, %r2390, 14;
	shf.r.wrap.b32 	%r2393, %r2390, %r2391, 14;
	mov.b64 	%rd4061, {%r2393, %r2392};
	shf.r.wrap.b32 	%r2394, %r2391, %r2390, 18;
	shf.r.wrap.b32 	%r2395, %r2390, %r2391, 18;
	mov.b64 	%rd4062, {%r2395, %r2394};
	xor.b64  	%rd4063, %rd4062, %rd4061;
	shf.l.wrap.b32 	%r2396, %r2390, %r2391, 23;
	shf.l.wrap.b32 	%r2397, %r2391, %r2390, 23;
	mov.b64 	%rd4064, {%r2397, %r2396};
	xor.b64  	%rd4065, %rd4063, %rd4064;
	xor.b64  	%rd4066, %rd18585, %rd18586;
	and.b64  	%rd4067, %rd18584, %rd4066;
	xor.b64  	%rd4068, %rd4067, %rd18586;
	ld.local.u64 	%rd18571, [%rd1+184];
	add.s64 	%rd4069, %rd3983, %rd18571;
	ld.const.u64 	%rd18595, [k_sha512+120];
	add.s64 	%rd4070, %rd4069, %rd18595;
	add.s64 	%rd4071, %rd4070, %rd4068;
	add.s64 	%rd4072, %rd4071, %rd4065;
	add.s64 	%rd18583, %rd4072, %rd3994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2398,%dummy}, %rd18580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2399}, %rd18580;
	}
	shf.r.wrap.b32 	%r2400, %r2399, %r2398, 28;
	shf.r.wrap.b32 	%r2401, %r2398, %r2399, 28;
	mov.b64 	%rd4073, {%r2401, %r2400};
	shf.l.wrap.b32 	%r2402, %r2398, %r2399, 30;
	shf.l.wrap.b32 	%r2403, %r2399, %r2398, 30;
	mov.b64 	%rd4074, {%r2403, %r2402};
	xor.b64  	%rd4075, %rd4074, %rd4073;
	shf.l.wrap.b32 	%r2404, %r2398, %r2399, 25;
	shf.l.wrap.b32 	%r2405, %r2399, %r2398, 25;
	mov.b64 	%rd4076, {%r2405, %r2404};
	xor.b64  	%rd4077, %rd4075, %rd4076;
	and.b64  	%rd4078, %rd18580, %rd18581;
	xor.b64  	%rd4079, %rd18580, %rd18581;
	and.b64  	%rd4080, %rd4079, %rd18582;
	or.b64  	%rd4081, %rd4080, %rd4078;
	add.s64 	%rd4082, %rd4072, %rd4081;
	add.s64 	%rd18579, %rd4082, %rd4077;
	mov.u32 	%r12923, 16;

BB0_83:
	shr.u64 	%rd4083, %rd18635, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2406,%dummy}, %rd18635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2407}, %rd18635;
	}
	shf.r.wrap.b32 	%r2408, %r2407, %r2406, 19;
	shf.r.wrap.b32 	%r2409, %r2406, %r2407, 19;
	mov.b64 	%rd4084, {%r2409, %r2408};
	xor.b64  	%rd4085, %rd4084, %rd4083;
	shf.l.wrap.b32 	%r2410, %r2406, %r2407, 3;
	shf.l.wrap.b32 	%r2411, %r2407, %r2406, 3;
	mov.b64 	%rd4086, {%r2411, %r2410};
	xor.b64  	%rd4087, %rd4085, %rd4086;
	shr.u64 	%rd4088, %rd18651, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2412,%dummy}, %rd18651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2413}, %rd18651;
	}
	shf.r.wrap.b32 	%r2414, %r2413, %r2412, 1;
	shf.r.wrap.b32 	%r2415, %r2412, %r2413, 1;
	mov.b64 	%rd4089, {%r2415, %r2414};
	xor.b64  	%rd4090, %rd4089, %rd4088;
	shf.r.wrap.b32 	%r2416, %r2413, %r2412, 8;
	shf.r.wrap.b32 	%r2417, %r2412, %r2413, 8;
	mov.b64 	%rd4091, {%r2417, %r2416};
	xor.b64  	%rd4092, %rd4090, %rd4091;
	add.s64 	%rd4093, %rd18640, %rd18650;
	add.s64 	%rd4094, %rd4093, %rd4087;
	add.s64 	%rd18650, %rd4094, %rd4092;
	shr.u64 	%rd4095, %rd18571, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2418,%dummy}, %rd18571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2419}, %rd18571;
	}
	shf.r.wrap.b32 	%r2420, %r2419, %r2418, 19;
	shf.r.wrap.b32 	%r2421, %r2418, %r2419, 19;
	mov.b64 	%rd4096, {%r2421, %r2420};
	xor.b64  	%rd4097, %rd4096, %rd4095;
	shf.l.wrap.b32 	%r2422, %r2418, %r2419, 3;
	shf.l.wrap.b32 	%r2423, %r2419, %r2418, 3;
	mov.b64 	%rd4098, {%r2423, %r2422};
	xor.b64  	%rd4099, %rd4097, %rd4098;
	shr.u64 	%rd4100, %rd18652, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2424,%dummy}, %rd18652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2425}, %rd18652;
	}
	shf.r.wrap.b32 	%r2426, %r2425, %r2424, 1;
	shf.r.wrap.b32 	%r2427, %r2424, %r2425, 1;
	mov.b64 	%rd4101, {%r2427, %r2426};
	xor.b64  	%rd4102, %rd4101, %rd4100;
	shf.r.wrap.b32 	%r2428, %r2425, %r2424, 8;
	shf.r.wrap.b32 	%r2429, %r2424, %r2425, 8;
	mov.b64 	%rd4103, {%r2429, %r2428};
	xor.b64  	%rd4104, %rd4102, %rd4103;
	add.s64 	%rd4105, %rd18639, %rd18651;
	add.s64 	%rd4106, %rd4105, %rd4099;
	add.s64 	%rd18651, %rd4106, %rd4104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2430,%dummy}, %rd18650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2431}, %rd18650;
	}
	shf.r.wrap.b32 	%r2432, %r2431, %r2430, 19;
	shf.r.wrap.b32 	%r2433, %r2430, %r2431, 19;
	mov.b64 	%rd4107, {%r2433, %r2432};
	shf.l.wrap.b32 	%r2434, %r2430, %r2431, 3;
	shf.l.wrap.b32 	%r2435, %r2431, %r2430, 3;
	mov.b64 	%rd4108, {%r2435, %r2434};
	shr.u64 	%rd4109, %rd18650, 6;
	xor.b64  	%rd4110, %rd4107, %rd4109;
	xor.b64  	%rd4111, %rd4110, %rd4108;
	shr.u64 	%rd4112, %rd18653, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2436,%dummy}, %rd18653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2437}, %rd18653;
	}
	shf.r.wrap.b32 	%r2438, %r2437, %r2436, 1;
	shf.r.wrap.b32 	%r2439, %r2436, %r2437, 1;
	mov.b64 	%rd4113, {%r2439, %r2438};
	xor.b64  	%rd4114, %rd4113, %rd4112;
	shf.r.wrap.b32 	%r2440, %r2437, %r2436, 8;
	shf.r.wrap.b32 	%r2441, %r2436, %r2437, 8;
	mov.b64 	%rd4115, {%r2441, %r2440};
	xor.b64  	%rd4116, %rd4114, %rd4115;
	add.s64 	%rd4117, %rd18638, %rd18652;
	add.s64 	%rd4118, %rd4117, %rd4111;
	add.s64 	%rd18652, %rd4118, %rd4116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2442,%dummy}, %rd18651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2443}, %rd18651;
	}
	shf.r.wrap.b32 	%r2444, %r2443, %r2442, 19;
	shf.r.wrap.b32 	%r2445, %r2442, %r2443, 19;
	mov.b64 	%rd4119, {%r2445, %r2444};
	shf.l.wrap.b32 	%r2446, %r2442, %r2443, 3;
	shf.l.wrap.b32 	%r2447, %r2443, %r2442, 3;
	mov.b64 	%rd4120, {%r2447, %r2446};
	shr.u64 	%rd4121, %rd18651, 6;
	xor.b64  	%rd4122, %rd4119, %rd4121;
	xor.b64  	%rd4123, %rd4122, %rd4120;
	shr.u64 	%rd4124, %rd18654, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2448,%dummy}, %rd18654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2449}, %rd18654;
	}
	shf.r.wrap.b32 	%r2450, %r2449, %r2448, 1;
	shf.r.wrap.b32 	%r2451, %r2448, %r2449, 1;
	mov.b64 	%rd4125, {%r2451, %r2450};
	xor.b64  	%rd4126, %rd4125, %rd4124;
	shf.r.wrap.b32 	%r2452, %r2449, %r2448, 8;
	shf.r.wrap.b32 	%r2453, %r2448, %r2449, 8;
	mov.b64 	%rd4127, {%r2453, %r2452};
	xor.b64  	%rd4128, %rd4126, %rd4127;
	add.s64 	%rd4129, %rd18637, %rd18653;
	add.s64 	%rd4130, %rd4129, %rd4123;
	add.s64 	%rd18653, %rd4130, %rd4128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2454,%dummy}, %rd18652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2455}, %rd18652;
	}
	shf.r.wrap.b32 	%r2456, %r2455, %r2454, 19;
	shf.r.wrap.b32 	%r2457, %r2454, %r2455, 19;
	mov.b64 	%rd4131, {%r2457, %r2456};
	shf.l.wrap.b32 	%r2458, %r2454, %r2455, 3;
	shf.l.wrap.b32 	%r2459, %r2455, %r2454, 3;
	mov.b64 	%rd4132, {%r2459, %r2458};
	shr.u64 	%rd4133, %rd18652, 6;
	xor.b64  	%rd4134, %rd4131, %rd4133;
	xor.b64  	%rd4135, %rd4134, %rd4132;
	shr.u64 	%rd4136, %rd18655, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2460,%dummy}, %rd18655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2461}, %rd18655;
	}
	shf.r.wrap.b32 	%r2462, %r2461, %r2460, 1;
	shf.r.wrap.b32 	%r2463, %r2460, %r2461, 1;
	mov.b64 	%rd4137, {%r2463, %r2462};
	xor.b64  	%rd4138, %rd4137, %rd4136;
	shf.r.wrap.b32 	%r2464, %r2461, %r2460, 8;
	shf.r.wrap.b32 	%r2465, %r2460, %r2461, 8;
	mov.b64 	%rd4139, {%r2465, %r2464};
	xor.b64  	%rd4140, %rd4138, %rd4139;
	add.s64 	%rd4141, %rd18636, %rd18654;
	add.s64 	%rd4142, %rd4141, %rd4135;
	add.s64 	%rd18654, %rd4142, %rd4140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2466,%dummy}, %rd18653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2467}, %rd18653;
	}
	shf.r.wrap.b32 	%r2468, %r2467, %r2466, 19;
	shf.r.wrap.b32 	%r2469, %r2466, %r2467, 19;
	mov.b64 	%rd4143, {%r2469, %r2468};
	shf.l.wrap.b32 	%r2470, %r2466, %r2467, 3;
	shf.l.wrap.b32 	%r2471, %r2467, %r2466, 3;
	mov.b64 	%rd4144, {%r2471, %r2470};
	shr.u64 	%rd4145, %rd18653, 6;
	xor.b64  	%rd4146, %rd4143, %rd4145;
	xor.b64  	%rd4147, %rd4146, %rd4144;
	shr.u64 	%rd4148, %rd18656, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2472,%dummy}, %rd18656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2473}, %rd18656;
	}
	shf.r.wrap.b32 	%r2474, %r2473, %r2472, 1;
	shf.r.wrap.b32 	%r2475, %r2472, %r2473, 1;
	mov.b64 	%rd4149, {%r2475, %r2474};
	xor.b64  	%rd4150, %rd4149, %rd4148;
	shf.r.wrap.b32 	%r2476, %r2473, %r2472, 8;
	shf.r.wrap.b32 	%r2477, %r2472, %r2473, 8;
	mov.b64 	%rd4151, {%r2477, %r2476};
	xor.b64  	%rd4152, %rd4150, %rd4151;
	add.s64 	%rd4153, %rd18635, %rd18655;
	add.s64 	%rd4154, %rd4153, %rd4147;
	add.s64 	%rd18655, %rd4154, %rd4152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2478,%dummy}, %rd18654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2479}, %rd18654;
	}
	shf.r.wrap.b32 	%r2480, %r2479, %r2478, 19;
	shf.r.wrap.b32 	%r2481, %r2478, %r2479, 19;
	mov.b64 	%rd4155, {%r2481, %r2480};
	shf.l.wrap.b32 	%r2482, %r2478, %r2479, 3;
	shf.l.wrap.b32 	%r2483, %r2479, %r2478, 3;
	mov.b64 	%rd4156, {%r2483, %r2482};
	shr.u64 	%rd4157, %rd18654, 6;
	xor.b64  	%rd4158, %rd4155, %rd4157;
	xor.b64  	%rd4159, %rd4158, %rd4156;
	shr.u64 	%rd4160, %rd18657, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2484,%dummy}, %rd18657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2485}, %rd18657;
	}
	shf.r.wrap.b32 	%r2486, %r2485, %r2484, 1;
	shf.r.wrap.b32 	%r2487, %r2484, %r2485, 1;
	mov.b64 	%rd4161, {%r2487, %r2486};
	xor.b64  	%rd4162, %rd4161, %rd4160;
	shf.r.wrap.b32 	%r2488, %r2485, %r2484, 8;
	shf.r.wrap.b32 	%r2489, %r2484, %r2485, 8;
	mov.b64 	%rd4163, {%r2489, %r2488};
	xor.b64  	%rd4164, %rd4162, %rd4163;
	add.s64 	%rd4165, %rd18571, %rd18656;
	add.s64 	%rd4166, %rd4165, %rd4159;
	add.s64 	%rd18656, %rd4166, %rd4164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2490,%dummy}, %rd18655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2491}, %rd18655;
	}
	shf.r.wrap.b32 	%r2492, %r2491, %r2490, 19;
	shf.r.wrap.b32 	%r2493, %r2490, %r2491, 19;
	mov.b64 	%rd4167, {%r2493, %r2492};
	shf.l.wrap.b32 	%r2494, %r2490, %r2491, 3;
	shf.l.wrap.b32 	%r2495, %r2491, %r2490, 3;
	mov.b64 	%rd4168, {%r2495, %r2494};
	shr.u64 	%rd4169, %rd18655, 6;
	xor.b64  	%rd4170, %rd4167, %rd4169;
	xor.b64  	%rd4171, %rd4170, %rd4168;
	shr.u64 	%rd4172, %rd18641, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2496,%dummy}, %rd18641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2497}, %rd18641;
	}
	shf.r.wrap.b32 	%r2498, %r2497, %r2496, 1;
	shf.r.wrap.b32 	%r2499, %r2496, %r2497, 1;
	mov.b64 	%rd4173, {%r2499, %r2498};
	xor.b64  	%rd4174, %rd4173, %rd4172;
	shf.r.wrap.b32 	%r2500, %r2497, %r2496, 8;
	shf.r.wrap.b32 	%r2501, %r2496, %r2497, 8;
	mov.b64 	%rd4175, {%r2501, %r2500};
	xor.b64  	%rd4176, %rd4174, %rd4175;
	add.s64 	%rd4177, %rd18650, %rd18657;
	add.s64 	%rd4178, %rd4177, %rd4171;
	add.s64 	%rd18657, %rd4178, %rd4176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2502,%dummy}, %rd18656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2503}, %rd18656;
	}
	shf.r.wrap.b32 	%r2504, %r2503, %r2502, 19;
	shf.r.wrap.b32 	%r2505, %r2502, %r2503, 19;
	mov.b64 	%rd4179, {%r2505, %r2504};
	shf.l.wrap.b32 	%r2506, %r2502, %r2503, 3;
	shf.l.wrap.b32 	%r2507, %r2503, %r2502, 3;
	mov.b64 	%rd4180, {%r2507, %r2506};
	shr.u64 	%rd4181, %rd18656, 6;
	xor.b64  	%rd4182, %rd4179, %rd4181;
	xor.b64  	%rd4183, %rd4182, %rd4180;
	shr.u64 	%rd4184, %rd18640, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2508,%dummy}, %rd18640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2509}, %rd18640;
	}
	shf.r.wrap.b32 	%r2510, %r2509, %r2508, 1;
	shf.r.wrap.b32 	%r2511, %r2508, %r2509, 1;
	mov.b64 	%rd4185, {%r2511, %r2510};
	xor.b64  	%rd4186, %rd4185, %rd4184;
	shf.r.wrap.b32 	%r2512, %r2509, %r2508, 8;
	shf.r.wrap.b32 	%r2513, %r2508, %r2509, 8;
	mov.b64 	%rd4187, {%r2513, %r2512};
	xor.b64  	%rd4188, %rd4186, %rd4187;
	add.s64 	%rd4189, %rd18651, %rd18641;
	add.s64 	%rd4190, %rd4189, %rd4183;
	add.s64 	%rd18641, %rd4190, %rd4188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2514,%dummy}, %rd18657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2515}, %rd18657;
	}
	shf.r.wrap.b32 	%r2516, %r2515, %r2514, 19;
	shf.r.wrap.b32 	%r2517, %r2514, %r2515, 19;
	mov.b64 	%rd4191, {%r2517, %r2516};
	shf.l.wrap.b32 	%r2518, %r2514, %r2515, 3;
	shf.l.wrap.b32 	%r2519, %r2515, %r2514, 3;
	mov.b64 	%rd4192, {%r2519, %r2518};
	shr.u64 	%rd4193, %rd18657, 6;
	xor.b64  	%rd4194, %rd4191, %rd4193;
	xor.b64  	%rd4195, %rd4194, %rd4192;
	shr.u64 	%rd4196, %rd18639, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2520,%dummy}, %rd18639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2521}, %rd18639;
	}
	shf.r.wrap.b32 	%r2522, %r2521, %r2520, 1;
	shf.r.wrap.b32 	%r2523, %r2520, %r2521, 1;
	mov.b64 	%rd4197, {%r2523, %r2522};
	xor.b64  	%rd4198, %rd4197, %rd4196;
	shf.r.wrap.b32 	%r2524, %r2521, %r2520, 8;
	shf.r.wrap.b32 	%r2525, %r2520, %r2521, 8;
	mov.b64 	%rd4199, {%r2525, %r2524};
	xor.b64  	%rd4200, %rd4198, %rd4199;
	add.s64 	%rd4201, %rd18652, %rd18640;
	add.s64 	%rd4202, %rd4201, %rd4195;
	add.s64 	%rd18640, %rd4202, %rd4200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2526,%dummy}, %rd18641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2527}, %rd18641;
	}
	shf.r.wrap.b32 	%r2528, %r2527, %r2526, 19;
	shf.r.wrap.b32 	%r2529, %r2526, %r2527, 19;
	mov.b64 	%rd4203, {%r2529, %r2528};
	shf.l.wrap.b32 	%r2530, %r2526, %r2527, 3;
	shf.l.wrap.b32 	%r2531, %r2527, %r2526, 3;
	mov.b64 	%rd4204, {%r2531, %r2530};
	shr.u64 	%rd4205, %rd18641, 6;
	xor.b64  	%rd4206, %rd4203, %rd4205;
	xor.b64  	%rd4207, %rd4206, %rd4204;
	shr.u64 	%rd4208, %rd18638, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2532,%dummy}, %rd18638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2533}, %rd18638;
	}
	shf.r.wrap.b32 	%r2534, %r2533, %r2532, 1;
	shf.r.wrap.b32 	%r2535, %r2532, %r2533, 1;
	mov.b64 	%rd4209, {%r2535, %r2534};
	xor.b64  	%rd4210, %rd4209, %rd4208;
	shf.r.wrap.b32 	%r2536, %r2533, %r2532, 8;
	shf.r.wrap.b32 	%r2537, %r2532, %r2533, 8;
	mov.b64 	%rd4211, {%r2537, %r2536};
	xor.b64  	%rd4212, %rd4210, %rd4211;
	add.s64 	%rd4213, %rd18653, %rd18639;
	add.s64 	%rd4214, %rd4213, %rd4207;
	add.s64 	%rd18639, %rd4214, %rd4212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2538,%dummy}, %rd18640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2539}, %rd18640;
	}
	shf.r.wrap.b32 	%r2540, %r2539, %r2538, 19;
	shf.r.wrap.b32 	%r2541, %r2538, %r2539, 19;
	mov.b64 	%rd4215, {%r2541, %r2540};
	shf.l.wrap.b32 	%r2542, %r2538, %r2539, 3;
	shf.l.wrap.b32 	%r2543, %r2539, %r2538, 3;
	mov.b64 	%rd4216, {%r2543, %r2542};
	shr.u64 	%rd4217, %rd18640, 6;
	xor.b64  	%rd4218, %rd4215, %rd4217;
	xor.b64  	%rd4219, %rd4218, %rd4216;
	shr.u64 	%rd4220, %rd18637, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2544,%dummy}, %rd18637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2545}, %rd18637;
	}
	shf.r.wrap.b32 	%r2546, %r2545, %r2544, 1;
	shf.r.wrap.b32 	%r2547, %r2544, %r2545, 1;
	mov.b64 	%rd4221, {%r2547, %r2546};
	xor.b64  	%rd4222, %rd4221, %rd4220;
	shf.r.wrap.b32 	%r2548, %r2545, %r2544, 8;
	shf.r.wrap.b32 	%r2549, %r2544, %r2545, 8;
	mov.b64 	%rd4223, {%r2549, %r2548};
	xor.b64  	%rd4224, %rd4222, %rd4223;
	add.s64 	%rd4225, %rd18654, %rd18638;
	add.s64 	%rd4226, %rd4225, %rd4219;
	add.s64 	%rd18638, %rd4226, %rd4224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2550,%dummy}, %rd18639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2551}, %rd18639;
	}
	shf.r.wrap.b32 	%r2552, %r2551, %r2550, 19;
	shf.r.wrap.b32 	%r2553, %r2550, %r2551, 19;
	mov.b64 	%rd4227, {%r2553, %r2552};
	shf.l.wrap.b32 	%r2554, %r2550, %r2551, 3;
	shf.l.wrap.b32 	%r2555, %r2551, %r2550, 3;
	mov.b64 	%rd4228, {%r2555, %r2554};
	shr.u64 	%rd4229, %rd18639, 6;
	xor.b64  	%rd4230, %rd4227, %rd4229;
	xor.b64  	%rd4231, %rd4230, %rd4228;
	shr.u64 	%rd4232, %rd18636, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2556,%dummy}, %rd18636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2557}, %rd18636;
	}
	shf.r.wrap.b32 	%r2558, %r2557, %r2556, 1;
	shf.r.wrap.b32 	%r2559, %r2556, %r2557, 1;
	mov.b64 	%rd4233, {%r2559, %r2558};
	xor.b64  	%rd4234, %rd4233, %rd4232;
	shf.r.wrap.b32 	%r2560, %r2557, %r2556, 8;
	shf.r.wrap.b32 	%r2561, %r2556, %r2557, 8;
	mov.b64 	%rd4235, {%r2561, %r2560};
	xor.b64  	%rd4236, %rd4234, %rd4235;
	add.s64 	%rd4237, %rd18655, %rd18637;
	add.s64 	%rd4238, %rd4237, %rd4231;
	add.s64 	%rd18637, %rd4238, %rd4236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2562,%dummy}, %rd18638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2563}, %rd18638;
	}
	shf.r.wrap.b32 	%r2564, %r2563, %r2562, 19;
	shf.r.wrap.b32 	%r2565, %r2562, %r2563, 19;
	mov.b64 	%rd4239, {%r2565, %r2564};
	shf.l.wrap.b32 	%r2566, %r2562, %r2563, 3;
	shf.l.wrap.b32 	%r2567, %r2563, %r2562, 3;
	mov.b64 	%rd4240, {%r2567, %r2566};
	shr.u64 	%rd4241, %rd18638, 6;
	xor.b64  	%rd4242, %rd4239, %rd4241;
	xor.b64  	%rd4243, %rd4242, %rd4240;
	shr.u64 	%rd4244, %rd18635, 7;
	shf.r.wrap.b32 	%r2568, %r2407, %r2406, 1;
	shf.r.wrap.b32 	%r2569, %r2406, %r2407, 1;
	mov.b64 	%rd4245, {%r2569, %r2568};
	xor.b64  	%rd4246, %rd4245, %rd4244;
	shf.r.wrap.b32 	%r2570, %r2407, %r2406, 8;
	shf.r.wrap.b32 	%r2571, %r2406, %r2407, 8;
	mov.b64 	%rd4247, {%r2571, %r2570};
	xor.b64  	%rd4248, %rd4246, %rd4247;
	add.s64 	%rd4249, %rd18656, %rd18636;
	add.s64 	%rd4250, %rd4249, %rd4243;
	add.s64 	%rd18636, %rd4250, %rd4248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2572,%dummy}, %rd18637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2573}, %rd18637;
	}
	shf.r.wrap.b32 	%r2574, %r2573, %r2572, 19;
	shf.r.wrap.b32 	%r2575, %r2572, %r2573, 19;
	mov.b64 	%rd4251, {%r2575, %r2574};
	shf.l.wrap.b32 	%r2576, %r2572, %r2573, 3;
	shf.l.wrap.b32 	%r2577, %r2573, %r2572, 3;
	mov.b64 	%rd4252, {%r2577, %r2576};
	shr.u64 	%rd4253, %rd18637, 6;
	xor.b64  	%rd4254, %rd4251, %rd4253;
	xor.b64  	%rd4255, %rd4254, %rd4252;
	shr.u64 	%rd4256, %rd18571, 7;
	shf.r.wrap.b32 	%r2578, %r2419, %r2418, 1;
	shf.r.wrap.b32 	%r2579, %r2418, %r2419, 1;
	mov.b64 	%rd4257, {%r2579, %r2578};
	xor.b64  	%rd4258, %rd4257, %rd4256;
	shf.r.wrap.b32 	%r2580, %r2419, %r2418, 8;
	shf.r.wrap.b32 	%r2581, %r2418, %r2419, 8;
	mov.b64 	%rd4259, {%r2581, %r2580};
	xor.b64  	%rd4260, %rd4258, %rd4259;
	add.s64 	%rd4261, %rd18657, %rd18635;
	add.s64 	%rd4262, %rd4261, %rd4255;
	add.s64 	%rd18635, %rd4262, %rd4260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2582,%dummy}, %rd18636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2583}, %rd18636;
	}
	shf.r.wrap.b32 	%r2584, %r2583, %r2582, 19;
	shf.r.wrap.b32 	%r2585, %r2582, %r2583, 19;
	mov.b64 	%rd4263, {%r2585, %r2584};
	shf.l.wrap.b32 	%r2586, %r2582, %r2583, 3;
	shf.l.wrap.b32 	%r2587, %r2583, %r2582, 3;
	mov.b64 	%rd4264, {%r2587, %r2586};
	shr.u64 	%rd4265, %rd18636, 6;
	xor.b64  	%rd4266, %rd4263, %rd4265;
	xor.b64  	%rd4267, %rd4266, %rd4264;
	shf.r.wrap.b32 	%r2588, %r2431, %r2430, 1;
	shf.r.wrap.b32 	%r2589, %r2430, %r2431, 1;
	mov.b64 	%rd4268, {%r2589, %r2588};
	shf.r.wrap.b32 	%r2590, %r2431, %r2430, 8;
	shf.r.wrap.b32 	%r2591, %r2430, %r2431, 8;
	mov.b64 	%rd4269, {%r2591, %r2590};
	shr.u64 	%rd4270, %rd18650, 7;
	xor.b64  	%rd4271, %rd4268, %rd4270;
	xor.b64  	%rd4272, %rd4271, %rd4269;
	add.s64 	%rd4273, %rd18641, %rd18571;
	add.s64 	%rd4274, %rd4273, %rd4267;
	add.s64 	%rd18571, %rd4274, %rd4272;
	mul.wide.s32 	%rd4275, %r12923, 8;
	mov.u64 	%rd4276, k_sha512;
	add.s64 	%rd4277, %rd4276, %rd4275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2592,%dummy}, %rd18583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2593}, %rd18583;
	}
	shf.r.wrap.b32 	%r2594, %r2593, %r2592, 18;
	shf.r.wrap.b32 	%r2595, %r2592, %r2593, 18;
	mov.b64 	%rd4278, {%r2595, %r2594};
	shf.r.wrap.b32 	%r2596, %r2593, %r2592, 14;
	shf.r.wrap.b32 	%r2597, %r2592, %r2593, 14;
	mov.b64 	%rd4279, {%r2597, %r2596};
	xor.b64  	%rd4280, %rd4278, %rd4279;
	shf.l.wrap.b32 	%r2598, %r2592, %r2593, 23;
	shf.l.wrap.b32 	%r2599, %r2593, %r2592, 23;
	mov.b64 	%rd4281, {%r2599, %r2598};
	xor.b64  	%rd4282, %rd4280, %rd4281;
	xor.b64  	%rd4283, %rd18584, %rd18585;
	and.b64  	%rd4284, %rd18583, %rd4283;
	xor.b64  	%rd4285, %rd4284, %rd18585;
	add.s64 	%rd4286, %rd4285, %rd18586;
	add.s64 	%rd4287, %rd4286, %rd18650;
	ld.const.u64 	%rd4288, [%rd4277];
	add.s64 	%rd4289, %rd4287, %rd4288;
	add.s64 	%rd4290, %rd4289, %rd4282;
	add.s64 	%rd4291, %rd4290, %rd18582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2600}, %rd18579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2601,%dummy}, %rd18579;
	}
	shf.l.wrap.b32 	%r2602, %r2601, %r2600, 30;
	shf.l.wrap.b32 	%r2603, %r2600, %r2601, 30;
	mov.b64 	%rd4292, {%r2603, %r2602};
	shf.r.wrap.b32 	%r2604, %r2600, %r2601, 28;
	shf.r.wrap.b32 	%r2605, %r2601, %r2600, 28;
	mov.b64 	%rd4293, {%r2605, %r2604};
	xor.b64  	%rd4294, %rd4292, %rd4293;
	shf.l.wrap.b32 	%r2606, %r2601, %r2600, 25;
	shf.l.wrap.b32 	%r2607, %r2600, %r2601, 25;
	mov.b64 	%rd4295, {%r2607, %r2606};
	xor.b64  	%rd4296, %rd4294, %rd4295;
	xor.b64  	%rd4297, %rd18579, %rd18580;
	and.b64  	%rd4298, %rd4297, %rd18581;
	and.b64  	%rd4299, %rd18579, %rd18580;
	or.b64  	%rd4300, %rd4298, %rd4299;
	add.s64 	%rd4301, %rd4290, %rd4300;
	add.s64 	%rd4302, %rd4301, %rd4296;
	add.s32 	%r2608, %r12923, 1;
	mul.wide.s32 	%rd4303, %r2608, 8;
	add.s64 	%rd4304, %rd4276, %rd4303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2609,%dummy}, %rd4291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2610}, %rd4291;
	}
	shf.r.wrap.b32 	%r2611, %r2610, %r2609, 14;
	shf.r.wrap.b32 	%r2612, %r2609, %r2610, 14;
	mov.b64 	%rd4305, {%r2612, %r2611};
	shf.r.wrap.b32 	%r2613, %r2610, %r2609, 18;
	shf.r.wrap.b32 	%r2614, %r2609, %r2610, 18;
	mov.b64 	%rd4306, {%r2614, %r2613};
	xor.b64  	%rd4307, %rd4306, %rd4305;
	shf.l.wrap.b32 	%r2615, %r2609, %r2610, 23;
	shf.l.wrap.b32 	%r2616, %r2610, %r2609, 23;
	mov.b64 	%rd4308, {%r2616, %r2615};
	xor.b64  	%rd4309, %rd4307, %rd4308;
	xor.b64  	%rd4310, %rd18583, %rd18584;
	and.b64  	%rd4311, %rd4291, %rd4310;
	xor.b64  	%rd4312, %rd4311, %rd18584;
	add.s64 	%rd4313, %rd18651, %rd18585;
	ld.const.u64 	%rd4314, [%rd4304];
	add.s64 	%rd4315, %rd4313, %rd4314;
	add.s64 	%rd4316, %rd4315, %rd4312;
	add.s64 	%rd4317, %rd4316, %rd4309;
	add.s64 	%rd4318, %rd4317, %rd18581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2617,%dummy}, %rd4302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2618}, %rd4302;
	}
	shf.r.wrap.b32 	%r2619, %r2618, %r2617, 28;
	shf.r.wrap.b32 	%r2620, %r2617, %r2618, 28;
	mov.b64 	%rd4319, {%r2620, %r2619};
	shf.l.wrap.b32 	%r2621, %r2617, %r2618, 30;
	shf.l.wrap.b32 	%r2622, %r2618, %r2617, 30;
	mov.b64 	%rd4320, {%r2622, %r2621};
	xor.b64  	%rd4321, %rd4320, %rd4319;
	shf.l.wrap.b32 	%r2623, %r2617, %r2618, 25;
	shf.l.wrap.b32 	%r2624, %r2618, %r2617, 25;
	mov.b64 	%rd4322, {%r2624, %r2623};
	xor.b64  	%rd4323, %rd4321, %rd4322;
	and.b64  	%rd4324, %rd4302, %rd18579;
	xor.b64  	%rd4325, %rd4302, %rd18579;
	and.b64  	%rd4326, %rd4325, %rd18580;
	or.b64  	%rd4327, %rd4326, %rd4324;
	add.s64 	%rd4328, %rd4317, %rd4327;
	add.s64 	%rd4329, %rd4328, %rd4323;
	add.s32 	%r2625, %r12923, 2;
	mul.wide.s32 	%rd4330, %r2625, 8;
	add.s64 	%rd4331, %rd4276, %rd4330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2626,%dummy}, %rd4318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2627}, %rd4318;
	}
	shf.r.wrap.b32 	%r2628, %r2627, %r2626, 14;
	shf.r.wrap.b32 	%r2629, %r2626, %r2627, 14;
	mov.b64 	%rd4332, {%r2629, %r2628};
	shf.r.wrap.b32 	%r2630, %r2627, %r2626, 18;
	shf.r.wrap.b32 	%r2631, %r2626, %r2627, 18;
	mov.b64 	%rd4333, {%r2631, %r2630};
	xor.b64  	%rd4334, %rd4333, %rd4332;
	shf.l.wrap.b32 	%r2632, %r2626, %r2627, 23;
	shf.l.wrap.b32 	%r2633, %r2627, %r2626, 23;
	mov.b64 	%rd4335, {%r2633, %r2632};
	xor.b64  	%rd4336, %rd4334, %rd4335;
	xor.b64  	%rd4337, %rd4291, %rd18583;
	and.b64  	%rd4338, %rd4318, %rd4337;
	xor.b64  	%rd4339, %rd4338, %rd18583;
	add.s64 	%rd4340, %rd18652, %rd18584;
	ld.const.u64 	%rd4341, [%rd4331];
	add.s64 	%rd4342, %rd4340, %rd4341;
	add.s64 	%rd4343, %rd4342, %rd4339;
	add.s64 	%rd4344, %rd4343, %rd4336;
	add.s64 	%rd4345, %rd4344, %rd18580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2634,%dummy}, %rd4329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2635}, %rd4329;
	}
	shf.r.wrap.b32 	%r2636, %r2635, %r2634, 28;
	shf.r.wrap.b32 	%r2637, %r2634, %r2635, 28;
	mov.b64 	%rd4346, {%r2637, %r2636};
	shf.l.wrap.b32 	%r2638, %r2634, %r2635, 30;
	shf.l.wrap.b32 	%r2639, %r2635, %r2634, 30;
	mov.b64 	%rd4347, {%r2639, %r2638};
	xor.b64  	%rd4348, %rd4347, %rd4346;
	shf.l.wrap.b32 	%r2640, %r2634, %r2635, 25;
	shf.l.wrap.b32 	%r2641, %r2635, %r2634, 25;
	mov.b64 	%rd4349, {%r2641, %r2640};
	xor.b64  	%rd4350, %rd4348, %rd4349;
	and.b64  	%rd4351, %rd4329, %rd4302;
	xor.b64  	%rd4352, %rd4329, %rd4302;
	and.b64  	%rd4353, %rd4352, %rd18579;
	or.b64  	%rd4354, %rd4353, %rd4351;
	add.s64 	%rd4355, %rd4344, %rd4354;
	add.s64 	%rd4356, %rd4355, %rd4350;
	add.s32 	%r2642, %r12923, 3;
	mul.wide.s32 	%rd4357, %r2642, 8;
	add.s64 	%rd4358, %rd4276, %rd4357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2643,%dummy}, %rd4345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2644}, %rd4345;
	}
	shf.r.wrap.b32 	%r2645, %r2644, %r2643, 14;
	shf.r.wrap.b32 	%r2646, %r2643, %r2644, 14;
	mov.b64 	%rd4359, {%r2646, %r2645};
	shf.r.wrap.b32 	%r2647, %r2644, %r2643, 18;
	shf.r.wrap.b32 	%r2648, %r2643, %r2644, 18;
	mov.b64 	%rd4360, {%r2648, %r2647};
	xor.b64  	%rd4361, %rd4360, %rd4359;
	shf.l.wrap.b32 	%r2649, %r2643, %r2644, 23;
	shf.l.wrap.b32 	%r2650, %r2644, %r2643, 23;
	mov.b64 	%rd4362, {%r2650, %r2649};
	xor.b64  	%rd4363, %rd4361, %rd4362;
	xor.b64  	%rd4364, %rd4318, %rd4291;
	and.b64  	%rd4365, %rd4345, %rd4364;
	xor.b64  	%rd4366, %rd4365, %rd4291;
	add.s64 	%rd4367, %rd18653, %rd18583;
	ld.const.u64 	%rd4368, [%rd4358];
	add.s64 	%rd4369, %rd4367, %rd4368;
	add.s64 	%rd4370, %rd4369, %rd4366;
	add.s64 	%rd4371, %rd4370, %rd4363;
	add.s64 	%rd4372, %rd4371, %rd18579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2651,%dummy}, %rd4356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2652}, %rd4356;
	}
	shf.r.wrap.b32 	%r2653, %r2652, %r2651, 28;
	shf.r.wrap.b32 	%r2654, %r2651, %r2652, 28;
	mov.b64 	%rd4373, {%r2654, %r2653};
	shf.l.wrap.b32 	%r2655, %r2651, %r2652, 30;
	shf.l.wrap.b32 	%r2656, %r2652, %r2651, 30;
	mov.b64 	%rd4374, {%r2656, %r2655};
	xor.b64  	%rd4375, %rd4374, %rd4373;
	shf.l.wrap.b32 	%r2657, %r2651, %r2652, 25;
	shf.l.wrap.b32 	%r2658, %r2652, %r2651, 25;
	mov.b64 	%rd4376, {%r2658, %r2657};
	xor.b64  	%rd4377, %rd4375, %rd4376;
	and.b64  	%rd4378, %rd4356, %rd4329;
	xor.b64  	%rd4379, %rd4356, %rd4329;
	and.b64  	%rd4380, %rd4379, %rd4302;
	or.b64  	%rd4381, %rd4380, %rd4378;
	add.s64 	%rd4382, %rd4371, %rd4381;
	add.s64 	%rd4383, %rd4382, %rd4377;
	add.s32 	%r2659, %r12923, 4;
	mul.wide.s32 	%rd4384, %r2659, 8;
	add.s64 	%rd4385, %rd4276, %rd4384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2660,%dummy}, %rd4372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2661}, %rd4372;
	}
	shf.r.wrap.b32 	%r2662, %r2661, %r2660, 14;
	shf.r.wrap.b32 	%r2663, %r2660, %r2661, 14;
	mov.b64 	%rd4386, {%r2663, %r2662};
	shf.r.wrap.b32 	%r2664, %r2661, %r2660, 18;
	shf.r.wrap.b32 	%r2665, %r2660, %r2661, 18;
	mov.b64 	%rd4387, {%r2665, %r2664};
	xor.b64  	%rd4388, %rd4387, %rd4386;
	shf.l.wrap.b32 	%r2666, %r2660, %r2661, 23;
	shf.l.wrap.b32 	%r2667, %r2661, %r2660, 23;
	mov.b64 	%rd4389, {%r2667, %r2666};
	xor.b64  	%rd4390, %rd4388, %rd4389;
	xor.b64  	%rd4391, %rd4345, %rd4318;
	and.b64  	%rd4392, %rd4372, %rd4391;
	xor.b64  	%rd4393, %rd4392, %rd4318;
	add.s64 	%rd4394, %rd4291, %rd18654;
	ld.const.u64 	%rd4395, [%rd4385];
	add.s64 	%rd4396, %rd4394, %rd4395;
	add.s64 	%rd4397, %rd4396, %rd4393;
	add.s64 	%rd4398, %rd4397, %rd4390;
	add.s64 	%rd4399, %rd4398, %rd4302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2668,%dummy}, %rd4383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2669}, %rd4383;
	}
	shf.r.wrap.b32 	%r2670, %r2669, %r2668, 28;
	shf.r.wrap.b32 	%r2671, %r2668, %r2669, 28;
	mov.b64 	%rd4400, {%r2671, %r2670};
	shf.l.wrap.b32 	%r2672, %r2668, %r2669, 30;
	shf.l.wrap.b32 	%r2673, %r2669, %r2668, 30;
	mov.b64 	%rd4401, {%r2673, %r2672};
	xor.b64  	%rd4402, %rd4401, %rd4400;
	shf.l.wrap.b32 	%r2674, %r2668, %r2669, 25;
	shf.l.wrap.b32 	%r2675, %r2669, %r2668, 25;
	mov.b64 	%rd4403, {%r2675, %r2674};
	xor.b64  	%rd4404, %rd4402, %rd4403;
	and.b64  	%rd4405, %rd4383, %rd4356;
	xor.b64  	%rd4406, %rd4383, %rd4356;
	and.b64  	%rd4407, %rd4406, %rd4329;
	or.b64  	%rd4408, %rd4407, %rd4405;
	add.s64 	%rd4409, %rd4398, %rd4408;
	add.s64 	%rd4410, %rd4409, %rd4404;
	add.s32 	%r2676, %r12923, 5;
	mul.wide.s32 	%rd4411, %r2676, 8;
	add.s64 	%rd4412, %rd4276, %rd4411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2677,%dummy}, %rd4399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2678}, %rd4399;
	}
	shf.r.wrap.b32 	%r2679, %r2678, %r2677, 14;
	shf.r.wrap.b32 	%r2680, %r2677, %r2678, 14;
	mov.b64 	%rd4413, {%r2680, %r2679};
	shf.r.wrap.b32 	%r2681, %r2678, %r2677, 18;
	shf.r.wrap.b32 	%r2682, %r2677, %r2678, 18;
	mov.b64 	%rd4414, {%r2682, %r2681};
	xor.b64  	%rd4415, %rd4414, %rd4413;
	shf.l.wrap.b32 	%r2683, %r2677, %r2678, 23;
	shf.l.wrap.b32 	%r2684, %r2678, %r2677, 23;
	mov.b64 	%rd4416, {%r2684, %r2683};
	xor.b64  	%rd4417, %rd4415, %rd4416;
	xor.b64  	%rd4418, %rd4372, %rd4345;
	and.b64  	%rd4419, %rd4399, %rd4418;
	xor.b64  	%rd4420, %rd4419, %rd4345;
	add.s64 	%rd4421, %rd4318, %rd18655;
	ld.const.u64 	%rd4422, [%rd4412];
	add.s64 	%rd4423, %rd4421, %rd4422;
	add.s64 	%rd4424, %rd4423, %rd4420;
	add.s64 	%rd4425, %rd4424, %rd4417;
	add.s64 	%rd4426, %rd4425, %rd4329;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2685,%dummy}, %rd4410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2686}, %rd4410;
	}
	shf.r.wrap.b32 	%r2687, %r2686, %r2685, 28;
	shf.r.wrap.b32 	%r2688, %r2685, %r2686, 28;
	mov.b64 	%rd4427, {%r2688, %r2687};
	shf.l.wrap.b32 	%r2689, %r2685, %r2686, 30;
	shf.l.wrap.b32 	%r2690, %r2686, %r2685, 30;
	mov.b64 	%rd4428, {%r2690, %r2689};
	xor.b64  	%rd4429, %rd4428, %rd4427;
	shf.l.wrap.b32 	%r2691, %r2685, %r2686, 25;
	shf.l.wrap.b32 	%r2692, %r2686, %r2685, 25;
	mov.b64 	%rd4430, {%r2692, %r2691};
	xor.b64  	%rd4431, %rd4429, %rd4430;
	and.b64  	%rd4432, %rd4410, %rd4383;
	xor.b64  	%rd4433, %rd4410, %rd4383;
	and.b64  	%rd4434, %rd4433, %rd4356;
	or.b64  	%rd4435, %rd4434, %rd4432;
	add.s64 	%rd4436, %rd4425, %rd4435;
	add.s64 	%rd4437, %rd4436, %rd4431;
	add.s32 	%r2693, %r12923, 6;
	mul.wide.s32 	%rd4438, %r2693, 8;
	add.s64 	%rd4439, %rd4276, %rd4438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2694,%dummy}, %rd4426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2695}, %rd4426;
	}
	shf.r.wrap.b32 	%r2696, %r2695, %r2694, 14;
	shf.r.wrap.b32 	%r2697, %r2694, %r2695, 14;
	mov.b64 	%rd4440, {%r2697, %r2696};
	shf.r.wrap.b32 	%r2698, %r2695, %r2694, 18;
	shf.r.wrap.b32 	%r2699, %r2694, %r2695, 18;
	mov.b64 	%rd4441, {%r2699, %r2698};
	xor.b64  	%rd4442, %rd4441, %rd4440;
	shf.l.wrap.b32 	%r2700, %r2694, %r2695, 23;
	shf.l.wrap.b32 	%r2701, %r2695, %r2694, 23;
	mov.b64 	%rd4443, {%r2701, %r2700};
	xor.b64  	%rd4444, %rd4442, %rd4443;
	xor.b64  	%rd4445, %rd4399, %rd4372;
	and.b64  	%rd4446, %rd4426, %rd4445;
	xor.b64  	%rd4447, %rd4446, %rd4372;
	add.s64 	%rd4448, %rd4345, %rd18656;
	ld.const.u64 	%rd4449, [%rd4439];
	add.s64 	%rd4450, %rd4448, %rd4449;
	add.s64 	%rd4451, %rd4450, %rd4447;
	add.s64 	%rd4452, %rd4451, %rd4444;
	add.s64 	%rd4453, %rd4452, %rd4356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2702,%dummy}, %rd4437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2703}, %rd4437;
	}
	shf.r.wrap.b32 	%r2704, %r2703, %r2702, 28;
	shf.r.wrap.b32 	%r2705, %r2702, %r2703, 28;
	mov.b64 	%rd4454, {%r2705, %r2704};
	shf.l.wrap.b32 	%r2706, %r2702, %r2703, 30;
	shf.l.wrap.b32 	%r2707, %r2703, %r2702, 30;
	mov.b64 	%rd4455, {%r2707, %r2706};
	xor.b64  	%rd4456, %rd4455, %rd4454;
	shf.l.wrap.b32 	%r2708, %r2702, %r2703, 25;
	shf.l.wrap.b32 	%r2709, %r2703, %r2702, 25;
	mov.b64 	%rd4457, {%r2709, %r2708};
	xor.b64  	%rd4458, %rd4456, %rd4457;
	and.b64  	%rd4459, %rd4437, %rd4410;
	xor.b64  	%rd4460, %rd4437, %rd4410;
	and.b64  	%rd4461, %rd4460, %rd4383;
	or.b64  	%rd4462, %rd4461, %rd4459;
	add.s64 	%rd4463, %rd4452, %rd4462;
	add.s64 	%rd4464, %rd4463, %rd4458;
	add.s32 	%r2710, %r12923, 7;
	mul.wide.s32 	%rd4465, %r2710, 8;
	add.s64 	%rd4466, %rd4276, %rd4465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2711,%dummy}, %rd4453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2712}, %rd4453;
	}
	shf.r.wrap.b32 	%r2713, %r2712, %r2711, 14;
	shf.r.wrap.b32 	%r2714, %r2711, %r2712, 14;
	mov.b64 	%rd4467, {%r2714, %r2713};
	shf.r.wrap.b32 	%r2715, %r2712, %r2711, 18;
	shf.r.wrap.b32 	%r2716, %r2711, %r2712, 18;
	mov.b64 	%rd4468, {%r2716, %r2715};
	xor.b64  	%rd4469, %rd4468, %rd4467;
	shf.l.wrap.b32 	%r2717, %r2711, %r2712, 23;
	shf.l.wrap.b32 	%r2718, %r2712, %r2711, 23;
	mov.b64 	%rd4470, {%r2718, %r2717};
	xor.b64  	%rd4471, %rd4469, %rd4470;
	xor.b64  	%rd4472, %rd4426, %rd4399;
	and.b64  	%rd4473, %rd4453, %rd4472;
	xor.b64  	%rd4474, %rd4473, %rd4399;
	add.s64 	%rd4475, %rd4372, %rd18657;
	ld.const.u64 	%rd4476, [%rd4466];
	add.s64 	%rd4477, %rd4475, %rd4476;
	add.s64 	%rd4478, %rd4477, %rd4474;
	add.s64 	%rd4479, %rd4478, %rd4471;
	add.s64 	%rd4480, %rd4479, %rd4383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2719,%dummy}, %rd4464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2720}, %rd4464;
	}
	shf.r.wrap.b32 	%r2721, %r2720, %r2719, 28;
	shf.r.wrap.b32 	%r2722, %r2719, %r2720, 28;
	mov.b64 	%rd4481, {%r2722, %r2721};
	shf.l.wrap.b32 	%r2723, %r2719, %r2720, 30;
	shf.l.wrap.b32 	%r2724, %r2720, %r2719, 30;
	mov.b64 	%rd4482, {%r2724, %r2723};
	xor.b64  	%rd4483, %rd4482, %rd4481;
	shf.l.wrap.b32 	%r2725, %r2719, %r2720, 25;
	shf.l.wrap.b32 	%r2726, %r2720, %r2719, 25;
	mov.b64 	%rd4484, {%r2726, %r2725};
	xor.b64  	%rd4485, %rd4483, %rd4484;
	and.b64  	%rd4486, %rd4464, %rd4437;
	xor.b64  	%rd4487, %rd4464, %rd4437;
	and.b64  	%rd4488, %rd4487, %rd4410;
	or.b64  	%rd4489, %rd4488, %rd4486;
	add.s64 	%rd4490, %rd4479, %rd4489;
	add.s64 	%rd4491, %rd4490, %rd4485;
	add.s32 	%r2727, %r12923, 8;
	mul.wide.s32 	%rd4492, %r2727, 8;
	add.s64 	%rd4493, %rd4276, %rd4492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2728,%dummy}, %rd4480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2729}, %rd4480;
	}
	shf.r.wrap.b32 	%r2730, %r2729, %r2728, 14;
	shf.r.wrap.b32 	%r2731, %r2728, %r2729, 14;
	mov.b64 	%rd4494, {%r2731, %r2730};
	shf.r.wrap.b32 	%r2732, %r2729, %r2728, 18;
	shf.r.wrap.b32 	%r2733, %r2728, %r2729, 18;
	mov.b64 	%rd4495, {%r2733, %r2732};
	xor.b64  	%rd4496, %rd4495, %rd4494;
	shf.l.wrap.b32 	%r2734, %r2728, %r2729, 23;
	shf.l.wrap.b32 	%r2735, %r2729, %r2728, 23;
	mov.b64 	%rd4497, {%r2735, %r2734};
	xor.b64  	%rd4498, %rd4496, %rd4497;
	xor.b64  	%rd4499, %rd4453, %rd4426;
	and.b64  	%rd4500, %rd4480, %rd4499;
	xor.b64  	%rd4501, %rd4500, %rd4426;
	add.s64 	%rd4502, %rd4399, %rd18641;
	ld.const.u64 	%rd4503, [%rd4493];
	add.s64 	%rd4504, %rd4502, %rd4503;
	add.s64 	%rd4505, %rd4504, %rd4501;
	add.s64 	%rd4506, %rd4505, %rd4498;
	add.s64 	%rd4507, %rd4506, %rd4410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2736,%dummy}, %rd4491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2737}, %rd4491;
	}
	shf.r.wrap.b32 	%r2738, %r2737, %r2736, 28;
	shf.r.wrap.b32 	%r2739, %r2736, %r2737, 28;
	mov.b64 	%rd4508, {%r2739, %r2738};
	shf.l.wrap.b32 	%r2740, %r2736, %r2737, 30;
	shf.l.wrap.b32 	%r2741, %r2737, %r2736, 30;
	mov.b64 	%rd4509, {%r2741, %r2740};
	xor.b64  	%rd4510, %rd4509, %rd4508;
	shf.l.wrap.b32 	%r2742, %r2736, %r2737, 25;
	shf.l.wrap.b32 	%r2743, %r2737, %r2736, 25;
	mov.b64 	%rd4511, {%r2743, %r2742};
	xor.b64  	%rd4512, %rd4510, %rd4511;
	and.b64  	%rd4513, %rd4491, %rd4464;
	xor.b64  	%rd4514, %rd4491, %rd4464;
	and.b64  	%rd4515, %rd4514, %rd4437;
	or.b64  	%rd4516, %rd4515, %rd4513;
	add.s64 	%rd4517, %rd4506, %rd4516;
	add.s64 	%rd4518, %rd4517, %rd4512;
	add.s32 	%r2744, %r12923, 9;
	mul.wide.s32 	%rd4519, %r2744, 8;
	add.s64 	%rd4520, %rd4276, %rd4519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2745,%dummy}, %rd4507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2746}, %rd4507;
	}
	shf.r.wrap.b32 	%r2747, %r2746, %r2745, 14;
	shf.r.wrap.b32 	%r2748, %r2745, %r2746, 14;
	mov.b64 	%rd4521, {%r2748, %r2747};
	shf.r.wrap.b32 	%r2749, %r2746, %r2745, 18;
	shf.r.wrap.b32 	%r2750, %r2745, %r2746, 18;
	mov.b64 	%rd4522, {%r2750, %r2749};
	xor.b64  	%rd4523, %rd4522, %rd4521;
	shf.l.wrap.b32 	%r2751, %r2745, %r2746, 23;
	shf.l.wrap.b32 	%r2752, %r2746, %r2745, 23;
	mov.b64 	%rd4524, {%r2752, %r2751};
	xor.b64  	%rd4525, %rd4523, %rd4524;
	xor.b64  	%rd4526, %rd4480, %rd4453;
	and.b64  	%rd4527, %rd4507, %rd4526;
	xor.b64  	%rd4528, %rd4527, %rd4453;
	add.s64 	%rd4529, %rd4426, %rd18640;
	ld.const.u64 	%rd4530, [%rd4520];
	add.s64 	%rd4531, %rd4529, %rd4530;
	add.s64 	%rd4532, %rd4531, %rd4528;
	add.s64 	%rd4533, %rd4532, %rd4525;
	add.s64 	%rd4534, %rd4533, %rd4437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2753,%dummy}, %rd4518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2754}, %rd4518;
	}
	shf.r.wrap.b32 	%r2755, %r2754, %r2753, 28;
	shf.r.wrap.b32 	%r2756, %r2753, %r2754, 28;
	mov.b64 	%rd4535, {%r2756, %r2755};
	shf.l.wrap.b32 	%r2757, %r2753, %r2754, 30;
	shf.l.wrap.b32 	%r2758, %r2754, %r2753, 30;
	mov.b64 	%rd4536, {%r2758, %r2757};
	xor.b64  	%rd4537, %rd4536, %rd4535;
	shf.l.wrap.b32 	%r2759, %r2753, %r2754, 25;
	shf.l.wrap.b32 	%r2760, %r2754, %r2753, 25;
	mov.b64 	%rd4538, {%r2760, %r2759};
	xor.b64  	%rd4539, %rd4537, %rd4538;
	and.b64  	%rd4540, %rd4518, %rd4491;
	xor.b64  	%rd4541, %rd4518, %rd4491;
	and.b64  	%rd4542, %rd4541, %rd4464;
	or.b64  	%rd4543, %rd4542, %rd4540;
	add.s64 	%rd4544, %rd4533, %rd4543;
	add.s64 	%rd4545, %rd4544, %rd4539;
	add.s32 	%r2761, %r12923, 10;
	mul.wide.s32 	%rd4546, %r2761, 8;
	add.s64 	%rd4547, %rd4276, %rd4546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2762,%dummy}, %rd4534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2763}, %rd4534;
	}
	shf.r.wrap.b32 	%r2764, %r2763, %r2762, 14;
	shf.r.wrap.b32 	%r2765, %r2762, %r2763, 14;
	mov.b64 	%rd4548, {%r2765, %r2764};
	shf.r.wrap.b32 	%r2766, %r2763, %r2762, 18;
	shf.r.wrap.b32 	%r2767, %r2762, %r2763, 18;
	mov.b64 	%rd4549, {%r2767, %r2766};
	xor.b64  	%rd4550, %rd4549, %rd4548;
	shf.l.wrap.b32 	%r2768, %r2762, %r2763, 23;
	shf.l.wrap.b32 	%r2769, %r2763, %r2762, 23;
	mov.b64 	%rd4551, {%r2769, %r2768};
	xor.b64  	%rd4552, %rd4550, %rd4551;
	xor.b64  	%rd4553, %rd4507, %rd4480;
	and.b64  	%rd4554, %rd4534, %rd4553;
	xor.b64  	%rd4555, %rd4554, %rd4480;
	add.s64 	%rd4556, %rd4453, %rd18639;
	ld.const.u64 	%rd4557, [%rd4547];
	add.s64 	%rd4558, %rd4556, %rd4557;
	add.s64 	%rd4559, %rd4558, %rd4555;
	add.s64 	%rd4560, %rd4559, %rd4552;
	add.s64 	%rd4561, %rd4560, %rd4464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2770,%dummy}, %rd4545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2771}, %rd4545;
	}
	shf.r.wrap.b32 	%r2772, %r2771, %r2770, 28;
	shf.r.wrap.b32 	%r2773, %r2770, %r2771, 28;
	mov.b64 	%rd4562, {%r2773, %r2772};
	shf.l.wrap.b32 	%r2774, %r2770, %r2771, 30;
	shf.l.wrap.b32 	%r2775, %r2771, %r2770, 30;
	mov.b64 	%rd4563, {%r2775, %r2774};
	xor.b64  	%rd4564, %rd4563, %rd4562;
	shf.l.wrap.b32 	%r2776, %r2770, %r2771, 25;
	shf.l.wrap.b32 	%r2777, %r2771, %r2770, 25;
	mov.b64 	%rd4565, {%r2777, %r2776};
	xor.b64  	%rd4566, %rd4564, %rd4565;
	and.b64  	%rd4567, %rd4545, %rd4518;
	xor.b64  	%rd4568, %rd4545, %rd4518;
	and.b64  	%rd4569, %rd4568, %rd4491;
	or.b64  	%rd4570, %rd4569, %rd4567;
	add.s64 	%rd4571, %rd4560, %rd4570;
	add.s64 	%rd4572, %rd4571, %rd4566;
	add.s32 	%r2778, %r12923, 11;
	mul.wide.s32 	%rd4573, %r2778, 8;
	add.s64 	%rd4574, %rd4276, %rd4573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2779,%dummy}, %rd4561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2780}, %rd4561;
	}
	shf.r.wrap.b32 	%r2781, %r2780, %r2779, 14;
	shf.r.wrap.b32 	%r2782, %r2779, %r2780, 14;
	mov.b64 	%rd4575, {%r2782, %r2781};
	shf.r.wrap.b32 	%r2783, %r2780, %r2779, 18;
	shf.r.wrap.b32 	%r2784, %r2779, %r2780, 18;
	mov.b64 	%rd4576, {%r2784, %r2783};
	xor.b64  	%rd4577, %rd4576, %rd4575;
	shf.l.wrap.b32 	%r2785, %r2779, %r2780, 23;
	shf.l.wrap.b32 	%r2786, %r2780, %r2779, 23;
	mov.b64 	%rd4578, {%r2786, %r2785};
	xor.b64  	%rd4579, %rd4577, %rd4578;
	xor.b64  	%rd4580, %rd4534, %rd4507;
	and.b64  	%rd4581, %rd4561, %rd4580;
	xor.b64  	%rd4582, %rd4581, %rd4507;
	add.s64 	%rd4583, %rd4480, %rd18638;
	ld.const.u64 	%rd4584, [%rd4574];
	add.s64 	%rd4585, %rd4583, %rd4584;
	add.s64 	%rd4586, %rd4585, %rd4582;
	add.s64 	%rd4587, %rd4586, %rd4579;
	add.s64 	%rd4588, %rd4587, %rd4491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2787,%dummy}, %rd4572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2788}, %rd4572;
	}
	shf.r.wrap.b32 	%r2789, %r2788, %r2787, 28;
	shf.r.wrap.b32 	%r2790, %r2787, %r2788, 28;
	mov.b64 	%rd4589, {%r2790, %r2789};
	shf.l.wrap.b32 	%r2791, %r2787, %r2788, 30;
	shf.l.wrap.b32 	%r2792, %r2788, %r2787, 30;
	mov.b64 	%rd4590, {%r2792, %r2791};
	xor.b64  	%rd4591, %rd4590, %rd4589;
	shf.l.wrap.b32 	%r2793, %r2787, %r2788, 25;
	shf.l.wrap.b32 	%r2794, %r2788, %r2787, 25;
	mov.b64 	%rd4592, {%r2794, %r2793};
	xor.b64  	%rd4593, %rd4591, %rd4592;
	and.b64  	%rd4594, %rd4572, %rd4545;
	xor.b64  	%rd4595, %rd4572, %rd4545;
	and.b64  	%rd4596, %rd4595, %rd4518;
	or.b64  	%rd4597, %rd4596, %rd4594;
	add.s64 	%rd4598, %rd4587, %rd4597;
	add.s64 	%rd4599, %rd4598, %rd4593;
	add.s32 	%r2795, %r12923, 12;
	mul.wide.s32 	%rd4600, %r2795, 8;
	add.s64 	%rd4601, %rd4276, %rd4600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2796,%dummy}, %rd4588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2797}, %rd4588;
	}
	shf.r.wrap.b32 	%r2798, %r2797, %r2796, 14;
	shf.r.wrap.b32 	%r2799, %r2796, %r2797, 14;
	mov.b64 	%rd4602, {%r2799, %r2798};
	shf.r.wrap.b32 	%r2800, %r2797, %r2796, 18;
	shf.r.wrap.b32 	%r2801, %r2796, %r2797, 18;
	mov.b64 	%rd4603, {%r2801, %r2800};
	xor.b64  	%rd4604, %rd4603, %rd4602;
	shf.l.wrap.b32 	%r2802, %r2796, %r2797, 23;
	shf.l.wrap.b32 	%r2803, %r2797, %r2796, 23;
	mov.b64 	%rd4605, {%r2803, %r2802};
	xor.b64  	%rd4606, %rd4604, %rd4605;
	xor.b64  	%rd4607, %rd4561, %rd4534;
	and.b64  	%rd4608, %rd4588, %rd4607;
	xor.b64  	%rd4609, %rd4608, %rd4534;
	add.s64 	%rd4610, %rd4507, %rd18637;
	ld.const.u64 	%rd4611, [%rd4601];
	add.s64 	%rd4612, %rd4610, %rd4611;
	add.s64 	%rd4613, %rd4612, %rd4609;
	add.s64 	%rd4614, %rd4613, %rd4606;
	add.s64 	%rd18586, %rd4614, %rd4518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2804,%dummy}, %rd4599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2805}, %rd4599;
	}
	shf.r.wrap.b32 	%r2806, %r2805, %r2804, 28;
	shf.r.wrap.b32 	%r2807, %r2804, %r2805, 28;
	mov.b64 	%rd4615, {%r2807, %r2806};
	shf.l.wrap.b32 	%r2808, %r2804, %r2805, 30;
	shf.l.wrap.b32 	%r2809, %r2805, %r2804, 30;
	mov.b64 	%rd4616, {%r2809, %r2808};
	xor.b64  	%rd4617, %rd4616, %rd4615;
	shf.l.wrap.b32 	%r2810, %r2804, %r2805, 25;
	shf.l.wrap.b32 	%r2811, %r2805, %r2804, 25;
	mov.b64 	%rd4618, {%r2811, %r2810};
	xor.b64  	%rd4619, %rd4617, %rd4618;
	and.b64  	%rd4620, %rd4599, %rd4572;
	xor.b64  	%rd4621, %rd4599, %rd4572;
	and.b64  	%rd4622, %rd4621, %rd4545;
	or.b64  	%rd4623, %rd4622, %rd4620;
	add.s64 	%rd4624, %rd4614, %rd4623;
	add.s64 	%rd18582, %rd4624, %rd4619;
	add.s32 	%r2812, %r12923, 13;
	mul.wide.s32 	%rd4625, %r2812, 8;
	add.s64 	%rd4626, %rd4276, %rd4625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2813,%dummy}, %rd18586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2814}, %rd18586;
	}
	shf.r.wrap.b32 	%r2815, %r2814, %r2813, 14;
	shf.r.wrap.b32 	%r2816, %r2813, %r2814, 14;
	mov.b64 	%rd4627, {%r2816, %r2815};
	shf.r.wrap.b32 	%r2817, %r2814, %r2813, 18;
	shf.r.wrap.b32 	%r2818, %r2813, %r2814, 18;
	mov.b64 	%rd4628, {%r2818, %r2817};
	xor.b64  	%rd4629, %rd4628, %rd4627;
	shf.l.wrap.b32 	%r2819, %r2813, %r2814, 23;
	shf.l.wrap.b32 	%r2820, %r2814, %r2813, 23;
	mov.b64 	%rd4630, {%r2820, %r2819};
	xor.b64  	%rd4631, %rd4629, %rd4630;
	xor.b64  	%rd4632, %rd4588, %rd4561;
	and.b64  	%rd4633, %rd18586, %rd4632;
	xor.b64  	%rd4634, %rd4633, %rd4561;
	add.s64 	%rd4635, %rd4534, %rd18636;
	ld.const.u64 	%rd4636, [%rd4626];
	add.s64 	%rd4637, %rd4635, %rd4636;
	add.s64 	%rd4638, %rd4637, %rd4634;
	add.s64 	%rd4639, %rd4638, %rd4631;
	add.s64 	%rd18585, %rd4639, %rd4545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2821,%dummy}, %rd18582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2822}, %rd18582;
	}
	shf.r.wrap.b32 	%r2823, %r2822, %r2821, 28;
	shf.r.wrap.b32 	%r2824, %r2821, %r2822, 28;
	mov.b64 	%rd4640, {%r2824, %r2823};
	shf.l.wrap.b32 	%r2825, %r2821, %r2822, 30;
	shf.l.wrap.b32 	%r2826, %r2822, %r2821, 30;
	mov.b64 	%rd4641, {%r2826, %r2825};
	xor.b64  	%rd4642, %rd4641, %rd4640;
	shf.l.wrap.b32 	%r2827, %r2821, %r2822, 25;
	shf.l.wrap.b32 	%r2828, %r2822, %r2821, 25;
	mov.b64 	%rd4643, {%r2828, %r2827};
	xor.b64  	%rd4644, %rd4642, %rd4643;
	and.b64  	%rd4645, %rd18582, %rd4599;
	xor.b64  	%rd4646, %rd18582, %rd4599;
	and.b64  	%rd4647, %rd4646, %rd4572;
	or.b64  	%rd4648, %rd4647, %rd4645;
	add.s64 	%rd4649, %rd4639, %rd4648;
	add.s64 	%rd18581, %rd4649, %rd4644;
	add.s32 	%r2829, %r12923, 14;
	mul.wide.s32 	%rd4650, %r2829, 8;
	add.s64 	%rd4651, %rd4276, %rd4650;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2830,%dummy}, %rd18585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2831}, %rd18585;
	}
	shf.r.wrap.b32 	%r2832, %r2831, %r2830, 14;
	shf.r.wrap.b32 	%r2833, %r2830, %r2831, 14;
	mov.b64 	%rd4652, {%r2833, %r2832};
	shf.r.wrap.b32 	%r2834, %r2831, %r2830, 18;
	shf.r.wrap.b32 	%r2835, %r2830, %r2831, 18;
	mov.b64 	%rd4653, {%r2835, %r2834};
	xor.b64  	%rd4654, %rd4653, %rd4652;
	shf.l.wrap.b32 	%r2836, %r2830, %r2831, 23;
	shf.l.wrap.b32 	%r2837, %r2831, %r2830, 23;
	mov.b64 	%rd4655, {%r2837, %r2836};
	xor.b64  	%rd4656, %rd4654, %rd4655;
	xor.b64  	%rd4657, %rd18586, %rd4588;
	and.b64  	%rd4658, %rd18585, %rd4657;
	xor.b64  	%rd4659, %rd4658, %rd4588;
	add.s64 	%rd4660, %rd4561, %rd18635;
	ld.const.u64 	%rd4661, [%rd4651];
	add.s64 	%rd4662, %rd4660, %rd4661;
	add.s64 	%rd4663, %rd4662, %rd4659;
	add.s64 	%rd4664, %rd4663, %rd4656;
	add.s64 	%rd18584, %rd4664, %rd4572;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2838,%dummy}, %rd18581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2839}, %rd18581;
	}
	shf.r.wrap.b32 	%r2840, %r2839, %r2838, 28;
	shf.r.wrap.b32 	%r2841, %r2838, %r2839, 28;
	mov.b64 	%rd4665, {%r2841, %r2840};
	shf.l.wrap.b32 	%r2842, %r2838, %r2839, 30;
	shf.l.wrap.b32 	%r2843, %r2839, %r2838, 30;
	mov.b64 	%rd4666, {%r2843, %r2842};
	xor.b64  	%rd4667, %rd4666, %rd4665;
	shf.l.wrap.b32 	%r2844, %r2838, %r2839, 25;
	shf.l.wrap.b32 	%r2845, %r2839, %r2838, 25;
	mov.b64 	%rd4668, {%r2845, %r2844};
	xor.b64  	%rd4669, %rd4667, %rd4668;
	and.b64  	%rd4670, %rd18581, %rd18582;
	xor.b64  	%rd4671, %rd18581, %rd18582;
	and.b64  	%rd4672, %rd4671, %rd4599;
	or.b64  	%rd4673, %rd4672, %rd4670;
	add.s64 	%rd4674, %rd4664, %rd4673;
	add.s64 	%rd18580, %rd4674, %rd4669;
	add.s32 	%r2846, %r12923, 15;
	mul.wide.s32 	%rd4675, %r2846, 8;
	add.s64 	%rd4676, %rd4276, %rd4675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2847,%dummy}, %rd18584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2848}, %rd18584;
	}
	shf.r.wrap.b32 	%r2849, %r2848, %r2847, 14;
	shf.r.wrap.b32 	%r2850, %r2847, %r2848, 14;
	mov.b64 	%rd4677, {%r2850, %r2849};
	shf.r.wrap.b32 	%r2851, %r2848, %r2847, 18;
	shf.r.wrap.b32 	%r2852, %r2847, %r2848, 18;
	mov.b64 	%rd4678, {%r2852, %r2851};
	xor.b64  	%rd4679, %rd4678, %rd4677;
	shf.l.wrap.b32 	%r2853, %r2847, %r2848, 23;
	shf.l.wrap.b32 	%r2854, %r2848, %r2847, 23;
	mov.b64 	%rd4680, {%r2854, %r2853};
	xor.b64  	%rd4681, %rd4679, %rd4680;
	xor.b64  	%rd4682, %rd18585, %rd18586;
	and.b64  	%rd4683, %rd18584, %rd4682;
	xor.b64  	%rd4684, %rd4683, %rd18586;
	add.s64 	%rd4685, %rd4588, %rd18571;
	ld.const.u64 	%rd4686, [%rd4676];
	add.s64 	%rd4687, %rd4685, %rd4686;
	add.s64 	%rd4688, %rd4687, %rd4684;
	add.s64 	%rd4689, %rd4688, %rd4681;
	add.s64 	%rd18583, %rd4689, %rd4599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2855,%dummy}, %rd18580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2856}, %rd18580;
	}
	shf.r.wrap.b32 	%r2857, %r2856, %r2855, 28;
	shf.r.wrap.b32 	%r2858, %r2855, %r2856, 28;
	mov.b64 	%rd4690, {%r2858, %r2857};
	shf.l.wrap.b32 	%r2859, %r2855, %r2856, 30;
	shf.l.wrap.b32 	%r2860, %r2856, %r2855, 30;
	mov.b64 	%rd4691, {%r2860, %r2859};
	xor.b64  	%rd4692, %rd4691, %rd4690;
	shf.l.wrap.b32 	%r2861, %r2855, %r2856, 25;
	shf.l.wrap.b32 	%r2862, %r2856, %r2855, 25;
	mov.b64 	%rd4693, {%r2862, %r2861};
	xor.b64  	%rd4694, %rd4692, %rd4693;
	and.b64  	%rd4695, %rd18580, %rd18581;
	xor.b64  	%rd4696, %rd18580, %rd18581;
	and.b64  	%rd4697, %rd4696, %rd18582;
	or.b64  	%rd4698, %rd4697, %rd4695;
	add.s64 	%rd4699, %rd4689, %rd4698;
	add.s64 	%rd18579, %rd4699, %rd4694;
	add.s32 	%r12923, %r12923, 16;
	setp.lt.s32	%p52, %r12923, 80;
	@%p52 bra 	BB0_83;

	ld.const.u64 	%rd18608, [k_sha512+16];
	ld.const.u64 	%rd18607, [k_sha512+24];
	ld.const.u64 	%rd18606, [k_sha512+32];
	ld.const.u64 	%rd18605, [k_sha512+40];
	ld.const.u64 	%rd18604, [k_sha512+48];
	ld.const.u64 	%rd18603, [k_sha512+56];
	ld.const.u64 	%rd18602, [k_sha512+64];
	add.s64 	%rd18618, %rd217, %rd18579;
	st.local.u64 	[%rd1], %rd18618;
	add.s64 	%rd18617, %rd218, %rd18580;
	st.local.u64 	[%rd1+8], %rd18617;
	add.s64 	%rd18616, %rd219, %rd18581;
	st.local.u64 	[%rd1+16], %rd18616;
	add.s64 	%rd18615, %rd216, %rd18582;
	st.local.u64 	[%rd1+24], %rd18615;
	add.s64 	%rd18614, %rd211, %rd18583;
	st.local.u64 	[%rd1+32], %rd18614;
	add.s64 	%rd18613, %rd213, %rd18584;
	st.local.u64 	[%rd1+40], %rd18613;
	add.s64 	%rd18612, %rd212, %rd18585;
	st.local.u64 	[%rd1+48], %rd18612;
	add.s64 	%rd18611, %rd214, %rd18586;
	st.local.u64 	[%rd1+56], %rd18611;
	mov.u64 	%rd18635, 0;
	st.local.u64 	[%rd1+64], %rd18635;
	st.local.u64 	[%rd1+72], %rd18635;
	st.local.u64 	[%rd1+80], %rd18635;
	st.local.u64 	[%rd1+88], %rd18635;
	st.local.u64 	[%rd1+96], %rd18635;
	st.local.u64 	[%rd1+104], %rd18635;
	st.local.u64 	[%rd1+112], %rd18635;
	st.local.u64 	[%rd1+120], %rd18635;
	st.local.u64 	[%rd1+128], %rd18635;
	st.local.u64 	[%rd1+136], %rd18635;
	st.local.u64 	[%rd1+144], %rd18635;
	st.local.u64 	[%rd1+152], %rd18635;
	st.local.u64 	[%rd1+160], %rd18635;
	st.local.u64 	[%rd1+168], %rd18635;
	st.local.u64 	[%rd1+176], %rd18635;
	st.local.u64 	[%rd1+184], %rd18635;
	mov.u64 	%rd18636, %rd18635;
	mov.u64 	%rd18637, %rd18635;
	mov.u64 	%rd18638, %rd18635;
	mov.u64 	%rd18639, %rd18635;
	mov.u64 	%rd18640, %rd18635;
	mov.u64 	%rd18641, %rd18635;
	mov.u64 	%rd18657, %rd18635;
	mov.u64 	%rd18656, %rd18635;
	mov.u64 	%rd18655, %rd18635;
	mov.u64 	%rd18654, %rd18635;
	mov.u64 	%rd18653, %rd18635;
	mov.u64 	%rd18652, %rd18635;
	mov.u64 	%rd18651, %rd18635;
	mov.u64 	%rd18650, %rd18635;
	bra.uni 	BB0_85;

BB0_81:
	ld.local.u64 	%rd18618, [%rd1];
	ld.local.u64 	%rd18617, [%rd1+8];
	ld.local.u64 	%rd18616, [%rd1+16];
	ld.local.u64 	%rd18615, [%rd1+24];
	ld.local.u64 	%rd18614, [%rd1+32];
	ld.local.u64 	%rd18613, [%rd1+40];
	ld.local.u64 	%rd18612, [%rd1+48];
	ld.local.u64 	%rd18611, [%rd1+56];
	ld.const.u64 	%rd18610, [k_sha512];
	ld.const.u64 	%rd18609, [k_sha512+8];
	ld.const.u64 	%rd18608, [k_sha512+16];
	ld.const.u64 	%rd18607, [k_sha512+24];
	ld.const.u64 	%rd18606, [k_sha512+32];
	ld.const.u64 	%rd18605, [k_sha512+40];
	ld.const.u64 	%rd18604, [k_sha512+48];
	ld.const.u64 	%rd18603, [k_sha512+56];
	ld.const.u64 	%rd18602, [k_sha512+64];
	ld.const.u64 	%rd18601, [k_sha512+72];
	ld.const.u64 	%rd18600, [k_sha512+80];
	ld.const.u64 	%rd18599, [k_sha512+88];
	ld.const.u64 	%rd18598, [k_sha512+96];
	ld.const.u64 	%rd18597, [k_sha512+104];
	ld.const.u64 	%rd18596, [k_sha512+112];
	ld.const.u64 	%rd18595, [k_sha512+120];

BB0_85:
	add.u64 	%rd339, %SPL, 0;
	ld.local.u32 	%r2864, [%rd1+192];
	shl.b32 	%r2865, %r2864, 3;
	cvt.s64.s32	%rd18634, %r2865;
	st.local.u64 	[%rd1+184], %rd18634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2866,%dummy}, %rd18614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2867}, %rd18614;
	}
	shf.r.wrap.b32 	%r2868, %r2867, %r2866, 18;
	shf.r.wrap.b32 	%r2869, %r2866, %r2867, 18;
	mov.b64 	%rd4716, {%r2869, %r2868};
	shf.r.wrap.b32 	%r2870, %r2867, %r2866, 14;
	shf.r.wrap.b32 	%r2871, %r2866, %r2867, 14;
	mov.b64 	%rd4717, {%r2871, %r2870};
	xor.b64  	%rd4718, %rd4716, %rd4717;
	shf.l.wrap.b32 	%r2872, %r2866, %r2867, 23;
	shf.l.wrap.b32 	%r2873, %r2867, %r2866, 23;
	mov.b64 	%rd4719, {%r2873, %r2872};
	xor.b64  	%rd4720, %rd4718, %rd4719;
	xor.b64  	%rd4721, %rd18612, %rd18613;
	and.b64  	%rd4722, %rd4721, %rd18614;
	xor.b64  	%rd4723, %rd4722, %rd18612;
	add.s64 	%rd4724, %rd18611, %rd18650;
	add.s64 	%rd4725, %rd4724, %rd18610;
	add.s64 	%rd4726, %rd4725, %rd4723;
	add.s64 	%rd4727, %rd4726, %rd4720;
	add.s64 	%rd4728, %rd4727, %rd18615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2874}, %rd18618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2875,%dummy}, %rd18618;
	}
	shf.l.wrap.b32 	%r2876, %r2875, %r2874, 30;
	shf.l.wrap.b32 	%r2877, %r2874, %r2875, 30;
	mov.b64 	%rd4729, {%r2877, %r2876};
	shf.r.wrap.b32 	%r2878, %r2874, %r2875, 28;
	shf.r.wrap.b32 	%r2879, %r2875, %r2874, 28;
	mov.b64 	%rd4730, {%r2879, %r2878};
	xor.b64  	%rd4731, %rd4729, %rd4730;
	shf.l.wrap.b32 	%r2880, %r2875, %r2874, 25;
	shf.l.wrap.b32 	%r2881, %r2874, %r2875, 25;
	mov.b64 	%rd4732, {%r2881, %r2880};
	xor.b64  	%rd4733, %rd4731, %rd4732;
	xor.b64  	%rd4734, %rd18617, %rd18618;
	and.b64  	%rd4735, %rd18616, %rd4734;
	and.b64  	%rd4736, %rd18617, %rd18618;
	or.b64  	%rd4737, %rd4735, %rd4736;
	add.s64 	%rd4738, %rd4727, %rd4737;
	add.s64 	%rd4739, %rd4738, %rd4733;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2882,%dummy}, %rd4728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2883}, %rd4728;
	}
	shf.r.wrap.b32 	%r2884, %r2883, %r2882, 14;
	shf.r.wrap.b32 	%r2885, %r2882, %r2883, 14;
	mov.b64 	%rd4740, {%r2885, %r2884};
	shf.r.wrap.b32 	%r2886, %r2883, %r2882, 18;
	shf.r.wrap.b32 	%r2887, %r2882, %r2883, 18;
	mov.b64 	%rd4741, {%r2887, %r2886};
	xor.b64  	%rd4742, %rd4741, %rd4740;
	shf.l.wrap.b32 	%r2888, %r2882, %r2883, 23;
	shf.l.wrap.b32 	%r2889, %r2883, %r2882, 23;
	mov.b64 	%rd4743, {%r2889, %r2888};
	xor.b64  	%rd4744, %rd4742, %rd4743;
	xor.b64  	%rd4745, %rd18613, %rd18614;
	and.b64  	%rd4746, %rd4728, %rd4745;
	xor.b64  	%rd4747, %rd4746, %rd18613;
	add.s64 	%rd4748, %rd18612, %rd18651;
	add.s64 	%rd4749, %rd4748, %rd18609;
	add.s64 	%rd4750, %rd4749, %rd4747;
	add.s64 	%rd4751, %rd4750, %rd4744;
	add.s64 	%rd4752, %rd4751, %rd18616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2890,%dummy}, %rd4739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2891}, %rd4739;
	}
	shf.r.wrap.b32 	%r2892, %r2891, %r2890, 28;
	shf.r.wrap.b32 	%r2893, %r2890, %r2891, 28;
	mov.b64 	%rd4753, {%r2893, %r2892};
	shf.l.wrap.b32 	%r2894, %r2890, %r2891, 30;
	shf.l.wrap.b32 	%r2895, %r2891, %r2890, 30;
	mov.b64 	%rd4754, {%r2895, %r2894};
	xor.b64  	%rd4755, %rd4754, %rd4753;
	shf.l.wrap.b32 	%r2896, %r2890, %r2891, 25;
	shf.l.wrap.b32 	%r2897, %r2891, %r2890, 25;
	mov.b64 	%rd4756, {%r2897, %r2896};
	xor.b64  	%rd4757, %rd4755, %rd4756;
	and.b64  	%rd4758, %rd4739, %rd18618;
	xor.b64  	%rd4759, %rd4739, %rd18618;
	and.b64  	%rd4760, %rd4759, %rd18617;
	or.b64  	%rd4761, %rd4760, %rd4758;
	add.s64 	%rd4762, %rd4751, %rd4761;
	add.s64 	%rd4763, %rd4762, %rd4757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2898,%dummy}, %rd4752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2899}, %rd4752;
	}
	shf.r.wrap.b32 	%r2900, %r2899, %r2898, 14;
	shf.r.wrap.b32 	%r2901, %r2898, %r2899, 14;
	mov.b64 	%rd4764, {%r2901, %r2900};
	shf.r.wrap.b32 	%r2902, %r2899, %r2898, 18;
	shf.r.wrap.b32 	%r2903, %r2898, %r2899, 18;
	mov.b64 	%rd4765, {%r2903, %r2902};
	xor.b64  	%rd4766, %rd4765, %rd4764;
	shf.l.wrap.b32 	%r2904, %r2898, %r2899, 23;
	shf.l.wrap.b32 	%r2905, %r2899, %r2898, 23;
	mov.b64 	%rd4767, {%r2905, %r2904};
	xor.b64  	%rd4768, %rd4766, %rd4767;
	xor.b64  	%rd4769, %rd4728, %rd18614;
	and.b64  	%rd4770, %rd4752, %rd4769;
	xor.b64  	%rd4771, %rd4770, %rd18614;
	add.s64 	%rd4772, %rd18613, %rd18652;
	add.s64 	%rd4773, %rd4772, %rd18608;
	add.s64 	%rd4774, %rd4773, %rd4771;
	add.s64 	%rd4775, %rd4774, %rd4768;
	add.s64 	%rd4776, %rd4775, %rd18617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2906,%dummy}, %rd4763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2907}, %rd4763;
	}
	shf.r.wrap.b32 	%r2908, %r2907, %r2906, 28;
	shf.r.wrap.b32 	%r2909, %r2906, %r2907, 28;
	mov.b64 	%rd4777, {%r2909, %r2908};
	shf.l.wrap.b32 	%r2910, %r2906, %r2907, 30;
	shf.l.wrap.b32 	%r2911, %r2907, %r2906, 30;
	mov.b64 	%rd4778, {%r2911, %r2910};
	xor.b64  	%rd4779, %rd4778, %rd4777;
	shf.l.wrap.b32 	%r2912, %r2906, %r2907, 25;
	shf.l.wrap.b32 	%r2913, %r2907, %r2906, 25;
	mov.b64 	%rd4780, {%r2913, %r2912};
	xor.b64  	%rd4781, %rd4779, %rd4780;
	and.b64  	%rd4782, %rd4763, %rd4739;
	xor.b64  	%rd4783, %rd4763, %rd4739;
	and.b64  	%rd4784, %rd4783, %rd18618;
	or.b64  	%rd4785, %rd4784, %rd4782;
	add.s64 	%rd4786, %rd4775, %rd4785;
	add.s64 	%rd4787, %rd4786, %rd4781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2914,%dummy}, %rd4776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2915}, %rd4776;
	}
	shf.r.wrap.b32 	%r2916, %r2915, %r2914, 14;
	shf.r.wrap.b32 	%r2917, %r2914, %r2915, 14;
	mov.b64 	%rd4788, {%r2917, %r2916};
	shf.r.wrap.b32 	%r2918, %r2915, %r2914, 18;
	shf.r.wrap.b32 	%r2919, %r2914, %r2915, 18;
	mov.b64 	%rd4789, {%r2919, %r2918};
	xor.b64  	%rd4790, %rd4789, %rd4788;
	shf.l.wrap.b32 	%r2920, %r2914, %r2915, 23;
	shf.l.wrap.b32 	%r2921, %r2915, %r2914, 23;
	mov.b64 	%rd4791, {%r2921, %r2920};
	xor.b64  	%rd4792, %rd4790, %rd4791;
	xor.b64  	%rd4793, %rd4752, %rd4728;
	and.b64  	%rd4794, %rd4776, %rd4793;
	xor.b64  	%rd4795, %rd4794, %rd4728;
	add.s64 	%rd4796, %rd18614, %rd18653;
	add.s64 	%rd4797, %rd4796, %rd18607;
	add.s64 	%rd4798, %rd4797, %rd4795;
	add.s64 	%rd4799, %rd4798, %rd4792;
	add.s64 	%rd4800, %rd4799, %rd18618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2922,%dummy}, %rd4787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2923}, %rd4787;
	}
	shf.r.wrap.b32 	%r2924, %r2923, %r2922, 28;
	shf.r.wrap.b32 	%r2925, %r2922, %r2923, 28;
	mov.b64 	%rd4801, {%r2925, %r2924};
	shf.l.wrap.b32 	%r2926, %r2922, %r2923, 30;
	shf.l.wrap.b32 	%r2927, %r2923, %r2922, 30;
	mov.b64 	%rd4802, {%r2927, %r2926};
	xor.b64  	%rd4803, %rd4802, %rd4801;
	shf.l.wrap.b32 	%r2928, %r2922, %r2923, 25;
	shf.l.wrap.b32 	%r2929, %r2923, %r2922, 25;
	mov.b64 	%rd4804, {%r2929, %r2928};
	xor.b64  	%rd4805, %rd4803, %rd4804;
	and.b64  	%rd4806, %rd4787, %rd4763;
	xor.b64  	%rd4807, %rd4787, %rd4763;
	and.b64  	%rd4808, %rd4807, %rd4739;
	or.b64  	%rd4809, %rd4808, %rd4806;
	add.s64 	%rd4810, %rd4799, %rd4809;
	add.s64 	%rd4811, %rd4810, %rd4805;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2930,%dummy}, %rd4800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2931}, %rd4800;
	}
	shf.r.wrap.b32 	%r2932, %r2931, %r2930, 14;
	shf.r.wrap.b32 	%r2933, %r2930, %r2931, 14;
	mov.b64 	%rd4812, {%r2933, %r2932};
	shf.r.wrap.b32 	%r2934, %r2931, %r2930, 18;
	shf.r.wrap.b32 	%r2935, %r2930, %r2931, 18;
	mov.b64 	%rd4813, {%r2935, %r2934};
	xor.b64  	%rd4814, %rd4813, %rd4812;
	shf.l.wrap.b32 	%r2936, %r2930, %r2931, 23;
	shf.l.wrap.b32 	%r2937, %r2931, %r2930, 23;
	mov.b64 	%rd4815, {%r2937, %r2936};
	xor.b64  	%rd4816, %rd4814, %rd4815;
	xor.b64  	%rd4817, %rd4776, %rd4752;
	and.b64  	%rd4818, %rd4800, %rd4817;
	xor.b64  	%rd4819, %rd4818, %rd4752;
	add.s64 	%rd4820, %rd4728, %rd18654;
	add.s64 	%rd4821, %rd4820, %rd18606;
	add.s64 	%rd4822, %rd4821, %rd4819;
	add.s64 	%rd4823, %rd4822, %rd4816;
	add.s64 	%rd4824, %rd4823, %rd4739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2938,%dummy}, %rd4811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2939}, %rd4811;
	}
	shf.r.wrap.b32 	%r2940, %r2939, %r2938, 28;
	shf.r.wrap.b32 	%r2941, %r2938, %r2939, 28;
	mov.b64 	%rd4825, {%r2941, %r2940};
	shf.l.wrap.b32 	%r2942, %r2938, %r2939, 30;
	shf.l.wrap.b32 	%r2943, %r2939, %r2938, 30;
	mov.b64 	%rd4826, {%r2943, %r2942};
	xor.b64  	%rd4827, %rd4826, %rd4825;
	shf.l.wrap.b32 	%r2944, %r2938, %r2939, 25;
	shf.l.wrap.b32 	%r2945, %r2939, %r2938, 25;
	mov.b64 	%rd4828, {%r2945, %r2944};
	xor.b64  	%rd4829, %rd4827, %rd4828;
	and.b64  	%rd4830, %rd4811, %rd4787;
	xor.b64  	%rd4831, %rd4811, %rd4787;
	and.b64  	%rd4832, %rd4831, %rd4763;
	or.b64  	%rd4833, %rd4832, %rd4830;
	add.s64 	%rd4834, %rd4823, %rd4833;
	add.s64 	%rd4835, %rd4834, %rd4829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2946,%dummy}, %rd4824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2947}, %rd4824;
	}
	shf.r.wrap.b32 	%r2948, %r2947, %r2946, 14;
	shf.r.wrap.b32 	%r2949, %r2946, %r2947, 14;
	mov.b64 	%rd4836, {%r2949, %r2948};
	shf.r.wrap.b32 	%r2950, %r2947, %r2946, 18;
	shf.r.wrap.b32 	%r2951, %r2946, %r2947, 18;
	mov.b64 	%rd4837, {%r2951, %r2950};
	xor.b64  	%rd4838, %rd4837, %rd4836;
	shf.l.wrap.b32 	%r2952, %r2946, %r2947, 23;
	shf.l.wrap.b32 	%r2953, %r2947, %r2946, 23;
	mov.b64 	%rd4839, {%r2953, %r2952};
	xor.b64  	%rd4840, %rd4838, %rd4839;
	xor.b64  	%rd4841, %rd4800, %rd4776;
	and.b64  	%rd4842, %rd4824, %rd4841;
	xor.b64  	%rd4843, %rd4842, %rd4776;
	add.s64 	%rd4844, %rd4752, %rd18655;
	add.s64 	%rd4845, %rd4844, %rd18605;
	add.s64 	%rd4846, %rd4845, %rd4843;
	add.s64 	%rd4847, %rd4846, %rd4840;
	add.s64 	%rd4848, %rd4847, %rd4763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2954,%dummy}, %rd4835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2955}, %rd4835;
	}
	shf.r.wrap.b32 	%r2956, %r2955, %r2954, 28;
	shf.r.wrap.b32 	%r2957, %r2954, %r2955, 28;
	mov.b64 	%rd4849, {%r2957, %r2956};
	shf.l.wrap.b32 	%r2958, %r2954, %r2955, 30;
	shf.l.wrap.b32 	%r2959, %r2955, %r2954, 30;
	mov.b64 	%rd4850, {%r2959, %r2958};
	xor.b64  	%rd4851, %rd4850, %rd4849;
	shf.l.wrap.b32 	%r2960, %r2954, %r2955, 25;
	shf.l.wrap.b32 	%r2961, %r2955, %r2954, 25;
	mov.b64 	%rd4852, {%r2961, %r2960};
	xor.b64  	%rd4853, %rd4851, %rd4852;
	and.b64  	%rd4854, %rd4835, %rd4811;
	xor.b64  	%rd4855, %rd4835, %rd4811;
	and.b64  	%rd4856, %rd4855, %rd4787;
	or.b64  	%rd4857, %rd4856, %rd4854;
	add.s64 	%rd4858, %rd4847, %rd4857;
	add.s64 	%rd4859, %rd4858, %rd4853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2962,%dummy}, %rd4848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2963}, %rd4848;
	}
	shf.r.wrap.b32 	%r2964, %r2963, %r2962, 14;
	shf.r.wrap.b32 	%r2965, %r2962, %r2963, 14;
	mov.b64 	%rd4860, {%r2965, %r2964};
	shf.r.wrap.b32 	%r2966, %r2963, %r2962, 18;
	shf.r.wrap.b32 	%r2967, %r2962, %r2963, 18;
	mov.b64 	%rd4861, {%r2967, %r2966};
	xor.b64  	%rd4862, %rd4861, %rd4860;
	shf.l.wrap.b32 	%r2968, %r2962, %r2963, 23;
	shf.l.wrap.b32 	%r2969, %r2963, %r2962, 23;
	mov.b64 	%rd4863, {%r2969, %r2968};
	xor.b64  	%rd4864, %rd4862, %rd4863;
	xor.b64  	%rd4865, %rd4824, %rd4800;
	and.b64  	%rd4866, %rd4848, %rd4865;
	xor.b64  	%rd4867, %rd4866, %rd4800;
	add.s64 	%rd4868, %rd4776, %rd18656;
	add.s64 	%rd4869, %rd4868, %rd18604;
	add.s64 	%rd4870, %rd4869, %rd4867;
	add.s64 	%rd4871, %rd4870, %rd4864;
	add.s64 	%rd4872, %rd4871, %rd4787;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2970,%dummy}, %rd4859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2971}, %rd4859;
	}
	shf.r.wrap.b32 	%r2972, %r2971, %r2970, 28;
	shf.r.wrap.b32 	%r2973, %r2970, %r2971, 28;
	mov.b64 	%rd4873, {%r2973, %r2972};
	shf.l.wrap.b32 	%r2974, %r2970, %r2971, 30;
	shf.l.wrap.b32 	%r2975, %r2971, %r2970, 30;
	mov.b64 	%rd4874, {%r2975, %r2974};
	xor.b64  	%rd4875, %rd4874, %rd4873;
	shf.l.wrap.b32 	%r2976, %r2970, %r2971, 25;
	shf.l.wrap.b32 	%r2977, %r2971, %r2970, 25;
	mov.b64 	%rd4876, {%r2977, %r2976};
	xor.b64  	%rd4877, %rd4875, %rd4876;
	and.b64  	%rd4878, %rd4859, %rd4835;
	xor.b64  	%rd4879, %rd4859, %rd4835;
	and.b64  	%rd4880, %rd4879, %rd4811;
	or.b64  	%rd4881, %rd4880, %rd4878;
	add.s64 	%rd4882, %rd4871, %rd4881;
	add.s64 	%rd4883, %rd4882, %rd4877;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2978,%dummy}, %rd4872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2979}, %rd4872;
	}
	shf.r.wrap.b32 	%r2980, %r2979, %r2978, 14;
	shf.r.wrap.b32 	%r2981, %r2978, %r2979, 14;
	mov.b64 	%rd4884, {%r2981, %r2980};
	shf.r.wrap.b32 	%r2982, %r2979, %r2978, 18;
	shf.r.wrap.b32 	%r2983, %r2978, %r2979, 18;
	mov.b64 	%rd4885, {%r2983, %r2982};
	xor.b64  	%rd4886, %rd4885, %rd4884;
	shf.l.wrap.b32 	%r2984, %r2978, %r2979, 23;
	shf.l.wrap.b32 	%r2985, %r2979, %r2978, 23;
	mov.b64 	%rd4887, {%r2985, %r2984};
	xor.b64  	%rd4888, %rd4886, %rd4887;
	xor.b64  	%rd4889, %rd4848, %rd4824;
	and.b64  	%rd4890, %rd4872, %rd4889;
	xor.b64  	%rd4891, %rd4890, %rd4824;
	add.s64 	%rd4892, %rd4800, %rd18657;
	add.s64 	%rd4893, %rd4892, %rd18603;
	add.s64 	%rd4894, %rd4893, %rd4891;
	add.s64 	%rd4895, %rd4894, %rd4888;
	add.s64 	%rd4896, %rd4895, %rd4811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2986,%dummy}, %rd4883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2987}, %rd4883;
	}
	shf.r.wrap.b32 	%r2988, %r2987, %r2986, 28;
	shf.r.wrap.b32 	%r2989, %r2986, %r2987, 28;
	mov.b64 	%rd4897, {%r2989, %r2988};
	shf.l.wrap.b32 	%r2990, %r2986, %r2987, 30;
	shf.l.wrap.b32 	%r2991, %r2987, %r2986, 30;
	mov.b64 	%rd4898, {%r2991, %r2990};
	xor.b64  	%rd4899, %rd4898, %rd4897;
	shf.l.wrap.b32 	%r2992, %r2986, %r2987, 25;
	shf.l.wrap.b32 	%r2993, %r2987, %r2986, 25;
	mov.b64 	%rd4900, {%r2993, %r2992};
	xor.b64  	%rd4901, %rd4899, %rd4900;
	and.b64  	%rd4902, %rd4883, %rd4859;
	xor.b64  	%rd4903, %rd4883, %rd4859;
	and.b64  	%rd4904, %rd4903, %rd4835;
	or.b64  	%rd4905, %rd4904, %rd4902;
	add.s64 	%rd4906, %rd4895, %rd4905;
	add.s64 	%rd4907, %rd4906, %rd4901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2994,%dummy}, %rd4896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2995}, %rd4896;
	}
	shf.r.wrap.b32 	%r2996, %r2995, %r2994, 14;
	shf.r.wrap.b32 	%r2997, %r2994, %r2995, 14;
	mov.b64 	%rd4908, {%r2997, %r2996};
	shf.r.wrap.b32 	%r2998, %r2995, %r2994, 18;
	shf.r.wrap.b32 	%r2999, %r2994, %r2995, 18;
	mov.b64 	%rd4909, {%r2999, %r2998};
	xor.b64  	%rd4910, %rd4909, %rd4908;
	shf.l.wrap.b32 	%r3000, %r2994, %r2995, 23;
	shf.l.wrap.b32 	%r3001, %r2995, %r2994, 23;
	mov.b64 	%rd4911, {%r3001, %r3000};
	xor.b64  	%rd4912, %rd4910, %rd4911;
	xor.b64  	%rd4913, %rd4872, %rd4848;
	and.b64  	%rd4914, %rd4896, %rd4913;
	xor.b64  	%rd4915, %rd4914, %rd4848;
	add.s64 	%rd4916, %rd4824, %rd18641;
	add.s64 	%rd4917, %rd4916, %rd18602;
	add.s64 	%rd4918, %rd4917, %rd4915;
	add.s64 	%rd4919, %rd4918, %rd4912;
	add.s64 	%rd4920, %rd4919, %rd4835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3002,%dummy}, %rd4907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3003}, %rd4907;
	}
	shf.r.wrap.b32 	%r3004, %r3003, %r3002, 28;
	shf.r.wrap.b32 	%r3005, %r3002, %r3003, 28;
	mov.b64 	%rd4921, {%r3005, %r3004};
	shf.l.wrap.b32 	%r3006, %r3002, %r3003, 30;
	shf.l.wrap.b32 	%r3007, %r3003, %r3002, 30;
	mov.b64 	%rd4922, {%r3007, %r3006};
	xor.b64  	%rd4923, %rd4922, %rd4921;
	shf.l.wrap.b32 	%r3008, %r3002, %r3003, 25;
	shf.l.wrap.b32 	%r3009, %r3003, %r3002, 25;
	mov.b64 	%rd4924, {%r3009, %r3008};
	xor.b64  	%rd4925, %rd4923, %rd4924;
	and.b64  	%rd4926, %rd4907, %rd4883;
	xor.b64  	%rd4927, %rd4907, %rd4883;
	and.b64  	%rd4928, %rd4927, %rd4859;
	or.b64  	%rd4929, %rd4928, %rd4926;
	add.s64 	%rd4930, %rd4919, %rd4929;
	add.s64 	%rd4931, %rd4930, %rd4925;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3010,%dummy}, %rd4920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3011}, %rd4920;
	}
	shf.r.wrap.b32 	%r3012, %r3011, %r3010, 14;
	shf.r.wrap.b32 	%r3013, %r3010, %r3011, 14;
	mov.b64 	%rd4932, {%r3013, %r3012};
	shf.r.wrap.b32 	%r3014, %r3011, %r3010, 18;
	shf.r.wrap.b32 	%r3015, %r3010, %r3011, 18;
	mov.b64 	%rd4933, {%r3015, %r3014};
	xor.b64  	%rd4934, %rd4933, %rd4932;
	shf.l.wrap.b32 	%r3016, %r3010, %r3011, 23;
	shf.l.wrap.b32 	%r3017, %r3011, %r3010, 23;
	mov.b64 	%rd4935, {%r3017, %r3016};
	xor.b64  	%rd4936, %rd4934, %rd4935;
	xor.b64  	%rd4937, %rd4896, %rd4872;
	and.b64  	%rd4938, %rd4920, %rd4937;
	xor.b64  	%rd4939, %rd4938, %rd4872;
	add.s64 	%rd4940, %rd4848, %rd18640;
	add.s64 	%rd4941, %rd4940, %rd18601;
	add.s64 	%rd4942, %rd4941, %rd4939;
	add.s64 	%rd4943, %rd4942, %rd4936;
	add.s64 	%rd4944, %rd4943, %rd4859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3018,%dummy}, %rd4931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3019}, %rd4931;
	}
	shf.r.wrap.b32 	%r3020, %r3019, %r3018, 28;
	shf.r.wrap.b32 	%r3021, %r3018, %r3019, 28;
	mov.b64 	%rd4945, {%r3021, %r3020};
	shf.l.wrap.b32 	%r3022, %r3018, %r3019, 30;
	shf.l.wrap.b32 	%r3023, %r3019, %r3018, 30;
	mov.b64 	%rd4946, {%r3023, %r3022};
	xor.b64  	%rd4947, %rd4946, %rd4945;
	shf.l.wrap.b32 	%r3024, %r3018, %r3019, 25;
	shf.l.wrap.b32 	%r3025, %r3019, %r3018, 25;
	mov.b64 	%rd4948, {%r3025, %r3024};
	xor.b64  	%rd4949, %rd4947, %rd4948;
	and.b64  	%rd4950, %rd4931, %rd4907;
	xor.b64  	%rd4951, %rd4931, %rd4907;
	and.b64  	%rd4952, %rd4951, %rd4883;
	or.b64  	%rd4953, %rd4952, %rd4950;
	add.s64 	%rd4954, %rd4943, %rd4953;
	add.s64 	%rd4955, %rd4954, %rd4949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3026,%dummy}, %rd4944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3027}, %rd4944;
	}
	shf.r.wrap.b32 	%r3028, %r3027, %r3026, 14;
	shf.r.wrap.b32 	%r3029, %r3026, %r3027, 14;
	mov.b64 	%rd4956, {%r3029, %r3028};
	shf.r.wrap.b32 	%r3030, %r3027, %r3026, 18;
	shf.r.wrap.b32 	%r3031, %r3026, %r3027, 18;
	mov.b64 	%rd4957, {%r3031, %r3030};
	xor.b64  	%rd4958, %rd4957, %rd4956;
	shf.l.wrap.b32 	%r3032, %r3026, %r3027, 23;
	shf.l.wrap.b32 	%r3033, %r3027, %r3026, 23;
	mov.b64 	%rd4959, {%r3033, %r3032};
	xor.b64  	%rd4960, %rd4958, %rd4959;
	xor.b64  	%rd4961, %rd4920, %rd4896;
	and.b64  	%rd4962, %rd4944, %rd4961;
	xor.b64  	%rd4963, %rd4962, %rd4896;
	add.s64 	%rd4964, %rd4872, %rd18639;
	add.s64 	%rd4965, %rd4964, %rd18600;
	add.s64 	%rd4966, %rd4965, %rd4963;
	add.s64 	%rd4967, %rd4966, %rd4960;
	add.s64 	%rd4968, %rd4967, %rd4883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3034,%dummy}, %rd4955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3035}, %rd4955;
	}
	shf.r.wrap.b32 	%r3036, %r3035, %r3034, 28;
	shf.r.wrap.b32 	%r3037, %r3034, %r3035, 28;
	mov.b64 	%rd4969, {%r3037, %r3036};
	shf.l.wrap.b32 	%r3038, %r3034, %r3035, 30;
	shf.l.wrap.b32 	%r3039, %r3035, %r3034, 30;
	mov.b64 	%rd4970, {%r3039, %r3038};
	xor.b64  	%rd4971, %rd4970, %rd4969;
	shf.l.wrap.b32 	%r3040, %r3034, %r3035, 25;
	shf.l.wrap.b32 	%r3041, %r3035, %r3034, 25;
	mov.b64 	%rd4972, {%r3041, %r3040};
	xor.b64  	%rd4973, %rd4971, %rd4972;
	and.b64  	%rd4974, %rd4955, %rd4931;
	xor.b64  	%rd4975, %rd4955, %rd4931;
	and.b64  	%rd4976, %rd4975, %rd4907;
	or.b64  	%rd4977, %rd4976, %rd4974;
	add.s64 	%rd4978, %rd4967, %rd4977;
	add.s64 	%rd4979, %rd4978, %rd4973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3042,%dummy}, %rd4968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3043}, %rd4968;
	}
	shf.r.wrap.b32 	%r3044, %r3043, %r3042, 14;
	shf.r.wrap.b32 	%r3045, %r3042, %r3043, 14;
	mov.b64 	%rd4980, {%r3045, %r3044};
	shf.r.wrap.b32 	%r3046, %r3043, %r3042, 18;
	shf.r.wrap.b32 	%r3047, %r3042, %r3043, 18;
	mov.b64 	%rd4981, {%r3047, %r3046};
	xor.b64  	%rd4982, %rd4981, %rd4980;
	shf.l.wrap.b32 	%r3048, %r3042, %r3043, 23;
	shf.l.wrap.b32 	%r3049, %r3043, %r3042, 23;
	mov.b64 	%rd4983, {%r3049, %r3048};
	xor.b64  	%rd4984, %rd4982, %rd4983;
	xor.b64  	%rd4985, %rd4944, %rd4920;
	and.b64  	%rd4986, %rd4968, %rd4985;
	xor.b64  	%rd4987, %rd4986, %rd4920;
	add.s64 	%rd4988, %rd4896, %rd18638;
	add.s64 	%rd4989, %rd4988, %rd18599;
	add.s64 	%rd4990, %rd4989, %rd4987;
	add.s64 	%rd4991, %rd4990, %rd4984;
	add.s64 	%rd4992, %rd4991, %rd4907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3050,%dummy}, %rd4979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3051}, %rd4979;
	}
	shf.r.wrap.b32 	%r3052, %r3051, %r3050, 28;
	shf.r.wrap.b32 	%r3053, %r3050, %r3051, 28;
	mov.b64 	%rd4993, {%r3053, %r3052};
	shf.l.wrap.b32 	%r3054, %r3050, %r3051, 30;
	shf.l.wrap.b32 	%r3055, %r3051, %r3050, 30;
	mov.b64 	%rd4994, {%r3055, %r3054};
	xor.b64  	%rd4995, %rd4994, %rd4993;
	shf.l.wrap.b32 	%r3056, %r3050, %r3051, 25;
	shf.l.wrap.b32 	%r3057, %r3051, %r3050, 25;
	mov.b64 	%rd4996, {%r3057, %r3056};
	xor.b64  	%rd4997, %rd4995, %rd4996;
	and.b64  	%rd4998, %rd4979, %rd4955;
	xor.b64  	%rd4999, %rd4979, %rd4955;
	and.b64  	%rd5000, %rd4999, %rd4931;
	or.b64  	%rd5001, %rd5000, %rd4998;
	add.s64 	%rd5002, %rd4991, %rd5001;
	add.s64 	%rd5003, %rd5002, %rd4997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3058,%dummy}, %rd4992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3059}, %rd4992;
	}
	shf.r.wrap.b32 	%r3060, %r3059, %r3058, 14;
	shf.r.wrap.b32 	%r3061, %r3058, %r3059, 14;
	mov.b64 	%rd5004, {%r3061, %r3060};
	shf.r.wrap.b32 	%r3062, %r3059, %r3058, 18;
	shf.r.wrap.b32 	%r3063, %r3058, %r3059, 18;
	mov.b64 	%rd5005, {%r3063, %r3062};
	xor.b64  	%rd5006, %rd5005, %rd5004;
	shf.l.wrap.b32 	%r3064, %r3058, %r3059, 23;
	shf.l.wrap.b32 	%r3065, %r3059, %r3058, 23;
	mov.b64 	%rd5007, {%r3065, %r3064};
	xor.b64  	%rd5008, %rd5006, %rd5007;
	xor.b64  	%rd5009, %rd4968, %rd4944;
	and.b64  	%rd5010, %rd4992, %rd5009;
	xor.b64  	%rd5011, %rd5010, %rd4944;
	add.s64 	%rd5012, %rd4920, %rd18637;
	add.s64 	%rd5013, %rd5012, %rd18598;
	add.s64 	%rd5014, %rd5013, %rd5011;
	add.s64 	%rd5015, %rd5014, %rd5008;
	add.s64 	%rd18649, %rd5015, %rd4931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3066,%dummy}, %rd5003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3067}, %rd5003;
	}
	shf.r.wrap.b32 	%r3068, %r3067, %r3066, 28;
	shf.r.wrap.b32 	%r3069, %r3066, %r3067, 28;
	mov.b64 	%rd5016, {%r3069, %r3068};
	shf.l.wrap.b32 	%r3070, %r3066, %r3067, 30;
	shf.l.wrap.b32 	%r3071, %r3067, %r3066, 30;
	mov.b64 	%rd5017, {%r3071, %r3070};
	xor.b64  	%rd5018, %rd5017, %rd5016;
	shf.l.wrap.b32 	%r3072, %r3066, %r3067, 25;
	shf.l.wrap.b32 	%r3073, %r3067, %r3066, 25;
	mov.b64 	%rd5019, {%r3073, %r3072};
	xor.b64  	%rd5020, %rd5018, %rd5019;
	and.b64  	%rd5021, %rd5003, %rd4979;
	xor.b64  	%rd5022, %rd5003, %rd4979;
	and.b64  	%rd5023, %rd5022, %rd4955;
	or.b64  	%rd5024, %rd5023, %rd5021;
	add.s64 	%rd5025, %rd5015, %rd5024;
	add.s64 	%rd18645, %rd5025, %rd5020;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3074,%dummy}, %rd18649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3075}, %rd18649;
	}
	shf.r.wrap.b32 	%r3076, %r3075, %r3074, 14;
	shf.r.wrap.b32 	%r3077, %r3074, %r3075, 14;
	mov.b64 	%rd5026, {%r3077, %r3076};
	shf.r.wrap.b32 	%r3078, %r3075, %r3074, 18;
	shf.r.wrap.b32 	%r3079, %r3074, %r3075, 18;
	mov.b64 	%rd5027, {%r3079, %r3078};
	xor.b64  	%rd5028, %rd5027, %rd5026;
	shf.l.wrap.b32 	%r3080, %r3074, %r3075, 23;
	shf.l.wrap.b32 	%r3081, %r3075, %r3074, 23;
	mov.b64 	%rd5029, {%r3081, %r3080};
	xor.b64  	%rd5030, %rd5028, %rd5029;
	xor.b64  	%rd5031, %rd4992, %rd4968;
	and.b64  	%rd5032, %rd18649, %rd5031;
	xor.b64  	%rd5033, %rd5032, %rd4968;
	add.s64 	%rd5034, %rd4944, %rd18636;
	add.s64 	%rd5035, %rd5034, %rd18597;
	add.s64 	%rd5036, %rd5035, %rd5033;
	add.s64 	%rd5037, %rd5036, %rd5030;
	add.s64 	%rd18648, %rd5037, %rd4955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3082,%dummy}, %rd18645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3083}, %rd18645;
	}
	shf.r.wrap.b32 	%r3084, %r3083, %r3082, 28;
	shf.r.wrap.b32 	%r3085, %r3082, %r3083, 28;
	mov.b64 	%rd5038, {%r3085, %r3084};
	shf.l.wrap.b32 	%r3086, %r3082, %r3083, 30;
	shf.l.wrap.b32 	%r3087, %r3083, %r3082, 30;
	mov.b64 	%rd5039, {%r3087, %r3086};
	xor.b64  	%rd5040, %rd5039, %rd5038;
	shf.l.wrap.b32 	%r3088, %r3082, %r3083, 25;
	shf.l.wrap.b32 	%r3089, %r3083, %r3082, 25;
	mov.b64 	%rd5041, {%r3089, %r3088};
	xor.b64  	%rd5042, %rd5040, %rd5041;
	and.b64  	%rd5043, %rd18645, %rd5003;
	xor.b64  	%rd5044, %rd18645, %rd5003;
	and.b64  	%rd5045, %rd5044, %rd4979;
	or.b64  	%rd5046, %rd5045, %rd5043;
	add.s64 	%rd5047, %rd5037, %rd5046;
	add.s64 	%rd18644, %rd5047, %rd5042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3090,%dummy}, %rd18648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3091}, %rd18648;
	}
	shf.r.wrap.b32 	%r3092, %r3091, %r3090, 14;
	shf.r.wrap.b32 	%r3093, %r3090, %r3091, 14;
	mov.b64 	%rd5048, {%r3093, %r3092};
	shf.r.wrap.b32 	%r3094, %r3091, %r3090, 18;
	shf.r.wrap.b32 	%r3095, %r3090, %r3091, 18;
	mov.b64 	%rd5049, {%r3095, %r3094};
	xor.b64  	%rd5050, %rd5049, %rd5048;
	shf.l.wrap.b32 	%r3096, %r3090, %r3091, 23;
	shf.l.wrap.b32 	%r3097, %r3091, %r3090, 23;
	mov.b64 	%rd5051, {%r3097, %r3096};
	xor.b64  	%rd5052, %rd5050, %rd5051;
	xor.b64  	%rd5053, %rd18649, %rd4992;
	and.b64  	%rd5054, %rd18648, %rd5053;
	xor.b64  	%rd5055, %rd5054, %rd4992;
	add.s64 	%rd5056, %rd4968, %rd18635;
	add.s64 	%rd5057, %rd5056, %rd18596;
	add.s64 	%rd5058, %rd5057, %rd5055;
	add.s64 	%rd5059, %rd5058, %rd5052;
	add.s64 	%rd18647, %rd5059, %rd4979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3098,%dummy}, %rd18644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3099}, %rd18644;
	}
	shf.r.wrap.b32 	%r3100, %r3099, %r3098, 28;
	shf.r.wrap.b32 	%r3101, %r3098, %r3099, 28;
	mov.b64 	%rd5060, {%r3101, %r3100};
	shf.l.wrap.b32 	%r3102, %r3098, %r3099, 30;
	shf.l.wrap.b32 	%r3103, %r3099, %r3098, 30;
	mov.b64 	%rd5061, {%r3103, %r3102};
	xor.b64  	%rd5062, %rd5061, %rd5060;
	shf.l.wrap.b32 	%r3104, %r3098, %r3099, 25;
	shf.l.wrap.b32 	%r3105, %r3099, %r3098, 25;
	mov.b64 	%rd5063, {%r3105, %r3104};
	xor.b64  	%rd5064, %rd5062, %rd5063;
	and.b64  	%rd5065, %rd18644, %rd18645;
	xor.b64  	%rd5066, %rd18644, %rd18645;
	and.b64  	%rd5067, %rd5066, %rd5003;
	or.b64  	%rd5068, %rd5067, %rd5065;
	add.s64 	%rd5069, %rd5059, %rd5068;
	add.s64 	%rd18643, %rd5069, %rd5064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3106,%dummy}, %rd18647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3107}, %rd18647;
	}
	shf.r.wrap.b32 	%r3108, %r3107, %r3106, 14;
	shf.r.wrap.b32 	%r3109, %r3106, %r3107, 14;
	mov.b64 	%rd5070, {%r3109, %r3108};
	shf.r.wrap.b32 	%r3110, %r3107, %r3106, 18;
	shf.r.wrap.b32 	%r3111, %r3106, %r3107, 18;
	mov.b64 	%rd5071, {%r3111, %r3110};
	xor.b64  	%rd5072, %rd5071, %rd5070;
	shf.l.wrap.b32 	%r3112, %r3106, %r3107, 23;
	shf.l.wrap.b32 	%r3113, %r3107, %r3106, 23;
	mov.b64 	%rd5073, {%r3113, %r3112};
	xor.b64  	%rd5074, %rd5072, %rd5073;
	xor.b64  	%rd5075, %rd18648, %rd18649;
	and.b64  	%rd5076, %rd18647, %rd5075;
	xor.b64  	%rd5077, %rd5076, %rd18649;
	add.s64 	%rd5078, %rd4992, %rd18634;
	add.s64 	%rd5079, %rd5078, %rd18595;
	add.s64 	%rd5080, %rd5079, %rd5077;
	add.s64 	%rd5081, %rd5080, %rd5074;
	add.s64 	%rd18646, %rd5081, %rd5003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3114,%dummy}, %rd18643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3115}, %rd18643;
	}
	shf.r.wrap.b32 	%r3116, %r3115, %r3114, 28;
	shf.r.wrap.b32 	%r3117, %r3114, %r3115, 28;
	mov.b64 	%rd5082, {%r3117, %r3116};
	shf.l.wrap.b32 	%r3118, %r3114, %r3115, 30;
	shf.l.wrap.b32 	%r3119, %r3115, %r3114, 30;
	mov.b64 	%rd5083, {%r3119, %r3118};
	xor.b64  	%rd5084, %rd5083, %rd5082;
	shf.l.wrap.b32 	%r3120, %r3114, %r3115, 25;
	shf.l.wrap.b32 	%r3121, %r3115, %r3114, 25;
	mov.b64 	%rd5085, {%r3121, %r3120};
	xor.b64  	%rd5086, %rd5084, %rd5085;
	and.b64  	%rd5087, %rd18643, %rd18644;
	xor.b64  	%rd5088, %rd18643, %rd18644;
	and.b64  	%rd5089, %rd5088, %rd18645;
	or.b64  	%rd5090, %rd5089, %rd5087;
	add.s64 	%rd5091, %rd5081, %rd5090;
	add.s64 	%rd18642, %rd5091, %rd5086;
	mov.u32 	%r12924, 16;

BB0_86:
	shr.u64 	%rd5092, %rd18635, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3122,%dummy}, %rd18635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3123}, %rd18635;
	}
	shf.r.wrap.b32 	%r3124, %r3123, %r3122, 19;
	shf.r.wrap.b32 	%r3125, %r3122, %r3123, 19;
	mov.b64 	%rd5093, {%r3125, %r3124};
	xor.b64  	%rd5094, %rd5093, %rd5092;
	shf.l.wrap.b32 	%r3126, %r3122, %r3123, 3;
	shf.l.wrap.b32 	%r3127, %r3123, %r3122, 3;
	mov.b64 	%rd5095, {%r3127, %r3126};
	xor.b64  	%rd5096, %rd5094, %rd5095;
	shr.u64 	%rd5097, %rd18651, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3128,%dummy}, %rd18651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3129}, %rd18651;
	}
	shf.r.wrap.b32 	%r3130, %r3129, %r3128, 1;
	shf.r.wrap.b32 	%r3131, %r3128, %r3129, 1;
	mov.b64 	%rd5098, {%r3131, %r3130};
	xor.b64  	%rd5099, %rd5098, %rd5097;
	shf.r.wrap.b32 	%r3132, %r3129, %r3128, 8;
	shf.r.wrap.b32 	%r3133, %r3128, %r3129, 8;
	mov.b64 	%rd5100, {%r3133, %r3132};
	xor.b64  	%rd5101, %rd5099, %rd5100;
	add.s64 	%rd5102, %rd18640, %rd18650;
	add.s64 	%rd5103, %rd5102, %rd5096;
	add.s64 	%rd18650, %rd5103, %rd5101;
	shr.u64 	%rd5104, %rd18634, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3134,%dummy}, %rd18634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3135}, %rd18634;
	}
	shf.r.wrap.b32 	%r3136, %r3135, %r3134, 19;
	shf.r.wrap.b32 	%r3137, %r3134, %r3135, 19;
	mov.b64 	%rd5105, {%r3137, %r3136};
	xor.b64  	%rd5106, %rd5105, %rd5104;
	shf.l.wrap.b32 	%r3138, %r3134, %r3135, 3;
	shf.l.wrap.b32 	%r3139, %r3135, %r3134, 3;
	mov.b64 	%rd5107, {%r3139, %r3138};
	xor.b64  	%rd5108, %rd5106, %rd5107;
	shr.u64 	%rd5109, %rd18652, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3140,%dummy}, %rd18652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3141}, %rd18652;
	}
	shf.r.wrap.b32 	%r3142, %r3141, %r3140, 1;
	shf.r.wrap.b32 	%r3143, %r3140, %r3141, 1;
	mov.b64 	%rd5110, {%r3143, %r3142};
	xor.b64  	%rd5111, %rd5110, %rd5109;
	shf.r.wrap.b32 	%r3144, %r3141, %r3140, 8;
	shf.r.wrap.b32 	%r3145, %r3140, %r3141, 8;
	mov.b64 	%rd5112, {%r3145, %r3144};
	xor.b64  	%rd5113, %rd5111, %rd5112;
	add.s64 	%rd5114, %rd18639, %rd18651;
	add.s64 	%rd5115, %rd5114, %rd5108;
	add.s64 	%rd18651, %rd5115, %rd5113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3146,%dummy}, %rd18650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3147}, %rd18650;
	}
	shf.r.wrap.b32 	%r3148, %r3147, %r3146, 19;
	shf.r.wrap.b32 	%r3149, %r3146, %r3147, 19;
	mov.b64 	%rd5116, {%r3149, %r3148};
	shf.l.wrap.b32 	%r3150, %r3146, %r3147, 3;
	shf.l.wrap.b32 	%r3151, %r3147, %r3146, 3;
	mov.b64 	%rd5117, {%r3151, %r3150};
	shr.u64 	%rd5118, %rd18650, 6;
	xor.b64  	%rd5119, %rd5116, %rd5118;
	xor.b64  	%rd5120, %rd5119, %rd5117;
	shr.u64 	%rd5121, %rd18653, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3152,%dummy}, %rd18653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3153}, %rd18653;
	}
	shf.r.wrap.b32 	%r3154, %r3153, %r3152, 1;
	shf.r.wrap.b32 	%r3155, %r3152, %r3153, 1;
	mov.b64 	%rd5122, {%r3155, %r3154};
	xor.b64  	%rd5123, %rd5122, %rd5121;
	shf.r.wrap.b32 	%r3156, %r3153, %r3152, 8;
	shf.r.wrap.b32 	%r3157, %r3152, %r3153, 8;
	mov.b64 	%rd5124, {%r3157, %r3156};
	xor.b64  	%rd5125, %rd5123, %rd5124;
	add.s64 	%rd5126, %rd18638, %rd18652;
	add.s64 	%rd5127, %rd5126, %rd5120;
	add.s64 	%rd18652, %rd5127, %rd5125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3158,%dummy}, %rd18651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3159}, %rd18651;
	}
	shf.r.wrap.b32 	%r3160, %r3159, %r3158, 19;
	shf.r.wrap.b32 	%r3161, %r3158, %r3159, 19;
	mov.b64 	%rd5128, {%r3161, %r3160};
	shf.l.wrap.b32 	%r3162, %r3158, %r3159, 3;
	shf.l.wrap.b32 	%r3163, %r3159, %r3158, 3;
	mov.b64 	%rd5129, {%r3163, %r3162};
	shr.u64 	%rd5130, %rd18651, 6;
	xor.b64  	%rd5131, %rd5128, %rd5130;
	xor.b64  	%rd5132, %rd5131, %rd5129;
	shr.u64 	%rd5133, %rd18654, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3164,%dummy}, %rd18654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3165}, %rd18654;
	}
	shf.r.wrap.b32 	%r3166, %r3165, %r3164, 1;
	shf.r.wrap.b32 	%r3167, %r3164, %r3165, 1;
	mov.b64 	%rd5134, {%r3167, %r3166};
	xor.b64  	%rd5135, %rd5134, %rd5133;
	shf.r.wrap.b32 	%r3168, %r3165, %r3164, 8;
	shf.r.wrap.b32 	%r3169, %r3164, %r3165, 8;
	mov.b64 	%rd5136, {%r3169, %r3168};
	xor.b64  	%rd5137, %rd5135, %rd5136;
	add.s64 	%rd5138, %rd18637, %rd18653;
	add.s64 	%rd5139, %rd5138, %rd5132;
	add.s64 	%rd18653, %rd5139, %rd5137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3170,%dummy}, %rd18652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3171}, %rd18652;
	}
	shf.r.wrap.b32 	%r3172, %r3171, %r3170, 19;
	shf.r.wrap.b32 	%r3173, %r3170, %r3171, 19;
	mov.b64 	%rd5140, {%r3173, %r3172};
	shf.l.wrap.b32 	%r3174, %r3170, %r3171, 3;
	shf.l.wrap.b32 	%r3175, %r3171, %r3170, 3;
	mov.b64 	%rd5141, {%r3175, %r3174};
	shr.u64 	%rd5142, %rd18652, 6;
	xor.b64  	%rd5143, %rd5140, %rd5142;
	xor.b64  	%rd5144, %rd5143, %rd5141;
	shr.u64 	%rd5145, %rd18655, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3176,%dummy}, %rd18655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3177}, %rd18655;
	}
	shf.r.wrap.b32 	%r3178, %r3177, %r3176, 1;
	shf.r.wrap.b32 	%r3179, %r3176, %r3177, 1;
	mov.b64 	%rd5146, {%r3179, %r3178};
	xor.b64  	%rd5147, %rd5146, %rd5145;
	shf.r.wrap.b32 	%r3180, %r3177, %r3176, 8;
	shf.r.wrap.b32 	%r3181, %r3176, %r3177, 8;
	mov.b64 	%rd5148, {%r3181, %r3180};
	xor.b64  	%rd5149, %rd5147, %rd5148;
	add.s64 	%rd5150, %rd18636, %rd18654;
	add.s64 	%rd5151, %rd5150, %rd5144;
	add.s64 	%rd18654, %rd5151, %rd5149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3182,%dummy}, %rd18653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3183}, %rd18653;
	}
	shf.r.wrap.b32 	%r3184, %r3183, %r3182, 19;
	shf.r.wrap.b32 	%r3185, %r3182, %r3183, 19;
	mov.b64 	%rd5152, {%r3185, %r3184};
	shf.l.wrap.b32 	%r3186, %r3182, %r3183, 3;
	shf.l.wrap.b32 	%r3187, %r3183, %r3182, 3;
	mov.b64 	%rd5153, {%r3187, %r3186};
	shr.u64 	%rd5154, %rd18653, 6;
	xor.b64  	%rd5155, %rd5152, %rd5154;
	xor.b64  	%rd5156, %rd5155, %rd5153;
	shr.u64 	%rd5157, %rd18656, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3188,%dummy}, %rd18656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3189}, %rd18656;
	}
	shf.r.wrap.b32 	%r3190, %r3189, %r3188, 1;
	shf.r.wrap.b32 	%r3191, %r3188, %r3189, 1;
	mov.b64 	%rd5158, {%r3191, %r3190};
	xor.b64  	%rd5159, %rd5158, %rd5157;
	shf.r.wrap.b32 	%r3192, %r3189, %r3188, 8;
	shf.r.wrap.b32 	%r3193, %r3188, %r3189, 8;
	mov.b64 	%rd5160, {%r3193, %r3192};
	xor.b64  	%rd5161, %rd5159, %rd5160;
	add.s64 	%rd5162, %rd18635, %rd18655;
	add.s64 	%rd5163, %rd5162, %rd5156;
	add.s64 	%rd18655, %rd5163, %rd5161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3194,%dummy}, %rd18654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3195}, %rd18654;
	}
	shf.r.wrap.b32 	%r3196, %r3195, %r3194, 19;
	shf.r.wrap.b32 	%r3197, %r3194, %r3195, 19;
	mov.b64 	%rd5164, {%r3197, %r3196};
	shf.l.wrap.b32 	%r3198, %r3194, %r3195, 3;
	shf.l.wrap.b32 	%r3199, %r3195, %r3194, 3;
	mov.b64 	%rd5165, {%r3199, %r3198};
	shr.u64 	%rd5166, %rd18654, 6;
	xor.b64  	%rd5167, %rd5164, %rd5166;
	xor.b64  	%rd5168, %rd5167, %rd5165;
	shr.u64 	%rd5169, %rd18657, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3200,%dummy}, %rd18657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3201}, %rd18657;
	}
	shf.r.wrap.b32 	%r3202, %r3201, %r3200, 1;
	shf.r.wrap.b32 	%r3203, %r3200, %r3201, 1;
	mov.b64 	%rd5170, {%r3203, %r3202};
	xor.b64  	%rd5171, %rd5170, %rd5169;
	shf.r.wrap.b32 	%r3204, %r3201, %r3200, 8;
	shf.r.wrap.b32 	%r3205, %r3200, %r3201, 8;
	mov.b64 	%rd5172, {%r3205, %r3204};
	xor.b64  	%rd5173, %rd5171, %rd5172;
	add.s64 	%rd5174, %rd18634, %rd18656;
	add.s64 	%rd5175, %rd5174, %rd5168;
	add.s64 	%rd18656, %rd5175, %rd5173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3206,%dummy}, %rd18655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3207}, %rd18655;
	}
	shf.r.wrap.b32 	%r3208, %r3207, %r3206, 19;
	shf.r.wrap.b32 	%r3209, %r3206, %r3207, 19;
	mov.b64 	%rd5176, {%r3209, %r3208};
	shf.l.wrap.b32 	%r3210, %r3206, %r3207, 3;
	shf.l.wrap.b32 	%r3211, %r3207, %r3206, 3;
	mov.b64 	%rd5177, {%r3211, %r3210};
	shr.u64 	%rd5178, %rd18655, 6;
	xor.b64  	%rd5179, %rd5176, %rd5178;
	xor.b64  	%rd5180, %rd5179, %rd5177;
	shr.u64 	%rd5181, %rd18641, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3212,%dummy}, %rd18641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3213}, %rd18641;
	}
	shf.r.wrap.b32 	%r3214, %r3213, %r3212, 1;
	shf.r.wrap.b32 	%r3215, %r3212, %r3213, 1;
	mov.b64 	%rd5182, {%r3215, %r3214};
	xor.b64  	%rd5183, %rd5182, %rd5181;
	shf.r.wrap.b32 	%r3216, %r3213, %r3212, 8;
	shf.r.wrap.b32 	%r3217, %r3212, %r3213, 8;
	mov.b64 	%rd5184, {%r3217, %r3216};
	xor.b64  	%rd5185, %rd5183, %rd5184;
	add.s64 	%rd5186, %rd18650, %rd18657;
	add.s64 	%rd5187, %rd5186, %rd5180;
	add.s64 	%rd18657, %rd5187, %rd5185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3218,%dummy}, %rd18656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3219}, %rd18656;
	}
	shf.r.wrap.b32 	%r3220, %r3219, %r3218, 19;
	shf.r.wrap.b32 	%r3221, %r3218, %r3219, 19;
	mov.b64 	%rd5188, {%r3221, %r3220};
	shf.l.wrap.b32 	%r3222, %r3218, %r3219, 3;
	shf.l.wrap.b32 	%r3223, %r3219, %r3218, 3;
	mov.b64 	%rd5189, {%r3223, %r3222};
	shr.u64 	%rd5190, %rd18656, 6;
	xor.b64  	%rd5191, %rd5188, %rd5190;
	xor.b64  	%rd5192, %rd5191, %rd5189;
	shr.u64 	%rd5193, %rd18640, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3224,%dummy}, %rd18640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3225}, %rd18640;
	}
	shf.r.wrap.b32 	%r3226, %r3225, %r3224, 1;
	shf.r.wrap.b32 	%r3227, %r3224, %r3225, 1;
	mov.b64 	%rd5194, {%r3227, %r3226};
	xor.b64  	%rd5195, %rd5194, %rd5193;
	shf.r.wrap.b32 	%r3228, %r3225, %r3224, 8;
	shf.r.wrap.b32 	%r3229, %r3224, %r3225, 8;
	mov.b64 	%rd5196, {%r3229, %r3228};
	xor.b64  	%rd5197, %rd5195, %rd5196;
	add.s64 	%rd5198, %rd18651, %rd18641;
	add.s64 	%rd5199, %rd5198, %rd5192;
	add.s64 	%rd18641, %rd5199, %rd5197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3230,%dummy}, %rd18657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3231}, %rd18657;
	}
	shf.r.wrap.b32 	%r3232, %r3231, %r3230, 19;
	shf.r.wrap.b32 	%r3233, %r3230, %r3231, 19;
	mov.b64 	%rd5200, {%r3233, %r3232};
	shf.l.wrap.b32 	%r3234, %r3230, %r3231, 3;
	shf.l.wrap.b32 	%r3235, %r3231, %r3230, 3;
	mov.b64 	%rd5201, {%r3235, %r3234};
	shr.u64 	%rd5202, %rd18657, 6;
	xor.b64  	%rd5203, %rd5200, %rd5202;
	xor.b64  	%rd5204, %rd5203, %rd5201;
	shr.u64 	%rd5205, %rd18639, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3236,%dummy}, %rd18639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3237}, %rd18639;
	}
	shf.r.wrap.b32 	%r3238, %r3237, %r3236, 1;
	shf.r.wrap.b32 	%r3239, %r3236, %r3237, 1;
	mov.b64 	%rd5206, {%r3239, %r3238};
	xor.b64  	%rd5207, %rd5206, %rd5205;
	shf.r.wrap.b32 	%r3240, %r3237, %r3236, 8;
	shf.r.wrap.b32 	%r3241, %r3236, %r3237, 8;
	mov.b64 	%rd5208, {%r3241, %r3240};
	xor.b64  	%rd5209, %rd5207, %rd5208;
	add.s64 	%rd5210, %rd18652, %rd18640;
	add.s64 	%rd5211, %rd5210, %rd5204;
	add.s64 	%rd18640, %rd5211, %rd5209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3242,%dummy}, %rd18641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3243}, %rd18641;
	}
	shf.r.wrap.b32 	%r3244, %r3243, %r3242, 19;
	shf.r.wrap.b32 	%r3245, %r3242, %r3243, 19;
	mov.b64 	%rd5212, {%r3245, %r3244};
	shf.l.wrap.b32 	%r3246, %r3242, %r3243, 3;
	shf.l.wrap.b32 	%r3247, %r3243, %r3242, 3;
	mov.b64 	%rd5213, {%r3247, %r3246};
	shr.u64 	%rd5214, %rd18641, 6;
	xor.b64  	%rd5215, %rd5212, %rd5214;
	xor.b64  	%rd5216, %rd5215, %rd5213;
	shr.u64 	%rd5217, %rd18638, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3248,%dummy}, %rd18638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3249}, %rd18638;
	}
	shf.r.wrap.b32 	%r3250, %r3249, %r3248, 1;
	shf.r.wrap.b32 	%r3251, %r3248, %r3249, 1;
	mov.b64 	%rd5218, {%r3251, %r3250};
	xor.b64  	%rd5219, %rd5218, %rd5217;
	shf.r.wrap.b32 	%r3252, %r3249, %r3248, 8;
	shf.r.wrap.b32 	%r3253, %r3248, %r3249, 8;
	mov.b64 	%rd5220, {%r3253, %r3252};
	xor.b64  	%rd5221, %rd5219, %rd5220;
	add.s64 	%rd5222, %rd18653, %rd18639;
	add.s64 	%rd5223, %rd5222, %rd5216;
	add.s64 	%rd18639, %rd5223, %rd5221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3254,%dummy}, %rd18640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3255}, %rd18640;
	}
	shf.r.wrap.b32 	%r3256, %r3255, %r3254, 19;
	shf.r.wrap.b32 	%r3257, %r3254, %r3255, 19;
	mov.b64 	%rd5224, {%r3257, %r3256};
	shf.l.wrap.b32 	%r3258, %r3254, %r3255, 3;
	shf.l.wrap.b32 	%r3259, %r3255, %r3254, 3;
	mov.b64 	%rd5225, {%r3259, %r3258};
	shr.u64 	%rd5226, %rd18640, 6;
	xor.b64  	%rd5227, %rd5224, %rd5226;
	xor.b64  	%rd5228, %rd5227, %rd5225;
	shr.u64 	%rd5229, %rd18637, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3260,%dummy}, %rd18637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3261}, %rd18637;
	}
	shf.r.wrap.b32 	%r3262, %r3261, %r3260, 1;
	shf.r.wrap.b32 	%r3263, %r3260, %r3261, 1;
	mov.b64 	%rd5230, {%r3263, %r3262};
	xor.b64  	%rd5231, %rd5230, %rd5229;
	shf.r.wrap.b32 	%r3264, %r3261, %r3260, 8;
	shf.r.wrap.b32 	%r3265, %r3260, %r3261, 8;
	mov.b64 	%rd5232, {%r3265, %r3264};
	xor.b64  	%rd5233, %rd5231, %rd5232;
	add.s64 	%rd5234, %rd18654, %rd18638;
	add.s64 	%rd5235, %rd5234, %rd5228;
	add.s64 	%rd18638, %rd5235, %rd5233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3266,%dummy}, %rd18639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3267}, %rd18639;
	}
	shf.r.wrap.b32 	%r3268, %r3267, %r3266, 19;
	shf.r.wrap.b32 	%r3269, %r3266, %r3267, 19;
	mov.b64 	%rd5236, {%r3269, %r3268};
	shf.l.wrap.b32 	%r3270, %r3266, %r3267, 3;
	shf.l.wrap.b32 	%r3271, %r3267, %r3266, 3;
	mov.b64 	%rd5237, {%r3271, %r3270};
	shr.u64 	%rd5238, %rd18639, 6;
	xor.b64  	%rd5239, %rd5236, %rd5238;
	xor.b64  	%rd5240, %rd5239, %rd5237;
	shr.u64 	%rd5241, %rd18636, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3272,%dummy}, %rd18636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3273}, %rd18636;
	}
	shf.r.wrap.b32 	%r3274, %r3273, %r3272, 1;
	shf.r.wrap.b32 	%r3275, %r3272, %r3273, 1;
	mov.b64 	%rd5242, {%r3275, %r3274};
	xor.b64  	%rd5243, %rd5242, %rd5241;
	shf.r.wrap.b32 	%r3276, %r3273, %r3272, 8;
	shf.r.wrap.b32 	%r3277, %r3272, %r3273, 8;
	mov.b64 	%rd5244, {%r3277, %r3276};
	xor.b64  	%rd5245, %rd5243, %rd5244;
	add.s64 	%rd5246, %rd18655, %rd18637;
	add.s64 	%rd5247, %rd5246, %rd5240;
	add.s64 	%rd18637, %rd5247, %rd5245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3278,%dummy}, %rd18638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3279}, %rd18638;
	}
	shf.r.wrap.b32 	%r3280, %r3279, %r3278, 19;
	shf.r.wrap.b32 	%r3281, %r3278, %r3279, 19;
	mov.b64 	%rd5248, {%r3281, %r3280};
	shf.l.wrap.b32 	%r3282, %r3278, %r3279, 3;
	shf.l.wrap.b32 	%r3283, %r3279, %r3278, 3;
	mov.b64 	%rd5249, {%r3283, %r3282};
	shr.u64 	%rd5250, %rd18638, 6;
	xor.b64  	%rd5251, %rd5248, %rd5250;
	xor.b64  	%rd5252, %rd5251, %rd5249;
	shr.u64 	%rd5253, %rd18635, 7;
	shf.r.wrap.b32 	%r3284, %r3123, %r3122, 1;
	shf.r.wrap.b32 	%r3285, %r3122, %r3123, 1;
	mov.b64 	%rd5254, {%r3285, %r3284};
	xor.b64  	%rd5255, %rd5254, %rd5253;
	shf.r.wrap.b32 	%r3286, %r3123, %r3122, 8;
	shf.r.wrap.b32 	%r3287, %r3122, %r3123, 8;
	mov.b64 	%rd5256, {%r3287, %r3286};
	xor.b64  	%rd5257, %rd5255, %rd5256;
	add.s64 	%rd5258, %rd18656, %rd18636;
	add.s64 	%rd5259, %rd5258, %rd5252;
	add.s64 	%rd18636, %rd5259, %rd5257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3288,%dummy}, %rd18637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3289}, %rd18637;
	}
	shf.r.wrap.b32 	%r3290, %r3289, %r3288, 19;
	shf.r.wrap.b32 	%r3291, %r3288, %r3289, 19;
	mov.b64 	%rd5260, {%r3291, %r3290};
	shf.l.wrap.b32 	%r3292, %r3288, %r3289, 3;
	shf.l.wrap.b32 	%r3293, %r3289, %r3288, 3;
	mov.b64 	%rd5261, {%r3293, %r3292};
	shr.u64 	%rd5262, %rd18637, 6;
	xor.b64  	%rd5263, %rd5260, %rd5262;
	xor.b64  	%rd5264, %rd5263, %rd5261;
	shr.u64 	%rd5265, %rd18634, 7;
	shf.r.wrap.b32 	%r3294, %r3135, %r3134, 1;
	shf.r.wrap.b32 	%r3295, %r3134, %r3135, 1;
	mov.b64 	%rd5266, {%r3295, %r3294};
	xor.b64  	%rd5267, %rd5266, %rd5265;
	shf.r.wrap.b32 	%r3296, %r3135, %r3134, 8;
	shf.r.wrap.b32 	%r3297, %r3134, %r3135, 8;
	mov.b64 	%rd5268, {%r3297, %r3296};
	xor.b64  	%rd5269, %rd5267, %rd5268;
	add.s64 	%rd5270, %rd18657, %rd18635;
	add.s64 	%rd5271, %rd5270, %rd5264;
	add.s64 	%rd18635, %rd5271, %rd5269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3298,%dummy}, %rd18636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3299}, %rd18636;
	}
	shf.r.wrap.b32 	%r3300, %r3299, %r3298, 19;
	shf.r.wrap.b32 	%r3301, %r3298, %r3299, 19;
	mov.b64 	%rd5272, {%r3301, %r3300};
	shf.l.wrap.b32 	%r3302, %r3298, %r3299, 3;
	shf.l.wrap.b32 	%r3303, %r3299, %r3298, 3;
	mov.b64 	%rd5273, {%r3303, %r3302};
	shr.u64 	%rd5274, %rd18636, 6;
	xor.b64  	%rd5275, %rd5272, %rd5274;
	xor.b64  	%rd5276, %rd5275, %rd5273;
	shf.r.wrap.b32 	%r3304, %r3147, %r3146, 1;
	shf.r.wrap.b32 	%r3305, %r3146, %r3147, 1;
	mov.b64 	%rd5277, {%r3305, %r3304};
	shf.r.wrap.b32 	%r3306, %r3147, %r3146, 8;
	shf.r.wrap.b32 	%r3307, %r3146, %r3147, 8;
	mov.b64 	%rd5278, {%r3307, %r3306};
	shr.u64 	%rd5279, %rd18650, 7;
	xor.b64  	%rd5280, %rd5277, %rd5279;
	xor.b64  	%rd5281, %rd5280, %rd5278;
	add.s64 	%rd5282, %rd18641, %rd18634;
	add.s64 	%rd5283, %rd5282, %rd5276;
	add.s64 	%rd18634, %rd5283, %rd5281;
	mul.wide.s32 	%rd5284, %r12924, 8;
	mov.u64 	%rd5285, k_sha512;
	add.s64 	%rd5286, %rd5285, %rd5284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3308,%dummy}, %rd18646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3309}, %rd18646;
	}
	shf.r.wrap.b32 	%r3310, %r3309, %r3308, 18;
	shf.r.wrap.b32 	%r3311, %r3308, %r3309, 18;
	mov.b64 	%rd5287, {%r3311, %r3310};
	shf.r.wrap.b32 	%r3312, %r3309, %r3308, 14;
	shf.r.wrap.b32 	%r3313, %r3308, %r3309, 14;
	mov.b64 	%rd5288, {%r3313, %r3312};
	xor.b64  	%rd5289, %rd5287, %rd5288;
	shf.l.wrap.b32 	%r3314, %r3308, %r3309, 23;
	shf.l.wrap.b32 	%r3315, %r3309, %r3308, 23;
	mov.b64 	%rd5290, {%r3315, %r3314};
	xor.b64  	%rd5291, %rd5289, %rd5290;
	xor.b64  	%rd5292, %rd18647, %rd18648;
	and.b64  	%rd5293, %rd18646, %rd5292;
	xor.b64  	%rd5294, %rd5293, %rd18648;
	add.s64 	%rd5295, %rd5294, %rd18649;
	add.s64 	%rd5296, %rd5295, %rd18650;
	ld.const.u64 	%rd5297, [%rd5286];
	add.s64 	%rd5298, %rd5296, %rd5297;
	add.s64 	%rd5299, %rd5298, %rd5291;
	add.s64 	%rd5300, %rd5299, %rd18645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3316}, %rd18642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3317,%dummy}, %rd18642;
	}
	shf.l.wrap.b32 	%r3318, %r3317, %r3316, 30;
	shf.l.wrap.b32 	%r3319, %r3316, %r3317, 30;
	mov.b64 	%rd5301, {%r3319, %r3318};
	shf.r.wrap.b32 	%r3320, %r3316, %r3317, 28;
	shf.r.wrap.b32 	%r3321, %r3317, %r3316, 28;
	mov.b64 	%rd5302, {%r3321, %r3320};
	xor.b64  	%rd5303, %rd5301, %rd5302;
	shf.l.wrap.b32 	%r3322, %r3317, %r3316, 25;
	shf.l.wrap.b32 	%r3323, %r3316, %r3317, 25;
	mov.b64 	%rd5304, {%r3323, %r3322};
	xor.b64  	%rd5305, %rd5303, %rd5304;
	xor.b64  	%rd5306, %rd18642, %rd18643;
	and.b64  	%rd5307, %rd5306, %rd18644;
	and.b64  	%rd5308, %rd18642, %rd18643;
	or.b64  	%rd5309, %rd5307, %rd5308;
	add.s64 	%rd5310, %rd5299, %rd5309;
	add.s64 	%rd5311, %rd5310, %rd5305;
	add.s32 	%r3324, %r12924, 1;
	mul.wide.s32 	%rd5312, %r3324, 8;
	add.s64 	%rd5313, %rd5285, %rd5312;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3325,%dummy}, %rd5300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3326}, %rd5300;
	}
	shf.r.wrap.b32 	%r3327, %r3326, %r3325, 14;
	shf.r.wrap.b32 	%r3328, %r3325, %r3326, 14;
	mov.b64 	%rd5314, {%r3328, %r3327};
	shf.r.wrap.b32 	%r3329, %r3326, %r3325, 18;
	shf.r.wrap.b32 	%r3330, %r3325, %r3326, 18;
	mov.b64 	%rd5315, {%r3330, %r3329};
	xor.b64  	%rd5316, %rd5315, %rd5314;
	shf.l.wrap.b32 	%r3331, %r3325, %r3326, 23;
	shf.l.wrap.b32 	%r3332, %r3326, %r3325, 23;
	mov.b64 	%rd5317, {%r3332, %r3331};
	xor.b64  	%rd5318, %rd5316, %rd5317;
	xor.b64  	%rd5319, %rd18646, %rd18647;
	and.b64  	%rd5320, %rd5300, %rd5319;
	xor.b64  	%rd5321, %rd5320, %rd18647;
	add.s64 	%rd5322, %rd18651, %rd18648;
	ld.const.u64 	%rd5323, [%rd5313];
	add.s64 	%rd5324, %rd5322, %rd5323;
	add.s64 	%rd5325, %rd5324, %rd5321;
	add.s64 	%rd5326, %rd5325, %rd5318;
	add.s64 	%rd5327, %rd5326, %rd18644;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3333,%dummy}, %rd5311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3334}, %rd5311;
	}
	shf.r.wrap.b32 	%r3335, %r3334, %r3333, 28;
	shf.r.wrap.b32 	%r3336, %r3333, %r3334, 28;
	mov.b64 	%rd5328, {%r3336, %r3335};
	shf.l.wrap.b32 	%r3337, %r3333, %r3334, 30;
	shf.l.wrap.b32 	%r3338, %r3334, %r3333, 30;
	mov.b64 	%rd5329, {%r3338, %r3337};
	xor.b64  	%rd5330, %rd5329, %rd5328;
	shf.l.wrap.b32 	%r3339, %r3333, %r3334, 25;
	shf.l.wrap.b32 	%r3340, %r3334, %r3333, 25;
	mov.b64 	%rd5331, {%r3340, %r3339};
	xor.b64  	%rd5332, %rd5330, %rd5331;
	and.b64  	%rd5333, %rd5311, %rd18642;
	xor.b64  	%rd5334, %rd5311, %rd18642;
	and.b64  	%rd5335, %rd5334, %rd18643;
	or.b64  	%rd5336, %rd5335, %rd5333;
	add.s64 	%rd5337, %rd5326, %rd5336;
	add.s64 	%rd5338, %rd5337, %rd5332;
	add.s32 	%r3341, %r12924, 2;
	mul.wide.s32 	%rd5339, %r3341, 8;
	add.s64 	%rd5340, %rd5285, %rd5339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3342,%dummy}, %rd5327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3343}, %rd5327;
	}
	shf.r.wrap.b32 	%r3344, %r3343, %r3342, 14;
	shf.r.wrap.b32 	%r3345, %r3342, %r3343, 14;
	mov.b64 	%rd5341, {%r3345, %r3344};
	shf.r.wrap.b32 	%r3346, %r3343, %r3342, 18;
	shf.r.wrap.b32 	%r3347, %r3342, %r3343, 18;
	mov.b64 	%rd5342, {%r3347, %r3346};
	xor.b64  	%rd5343, %rd5342, %rd5341;
	shf.l.wrap.b32 	%r3348, %r3342, %r3343, 23;
	shf.l.wrap.b32 	%r3349, %r3343, %r3342, 23;
	mov.b64 	%rd5344, {%r3349, %r3348};
	xor.b64  	%rd5345, %rd5343, %rd5344;
	xor.b64  	%rd5346, %rd5300, %rd18646;
	and.b64  	%rd5347, %rd5327, %rd5346;
	xor.b64  	%rd5348, %rd5347, %rd18646;
	add.s64 	%rd5349, %rd18652, %rd18647;
	ld.const.u64 	%rd5350, [%rd5340];
	add.s64 	%rd5351, %rd5349, %rd5350;
	add.s64 	%rd5352, %rd5351, %rd5348;
	add.s64 	%rd5353, %rd5352, %rd5345;
	add.s64 	%rd5354, %rd5353, %rd18643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3350,%dummy}, %rd5338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3351}, %rd5338;
	}
	shf.r.wrap.b32 	%r3352, %r3351, %r3350, 28;
	shf.r.wrap.b32 	%r3353, %r3350, %r3351, 28;
	mov.b64 	%rd5355, {%r3353, %r3352};
	shf.l.wrap.b32 	%r3354, %r3350, %r3351, 30;
	shf.l.wrap.b32 	%r3355, %r3351, %r3350, 30;
	mov.b64 	%rd5356, {%r3355, %r3354};
	xor.b64  	%rd5357, %rd5356, %rd5355;
	shf.l.wrap.b32 	%r3356, %r3350, %r3351, 25;
	shf.l.wrap.b32 	%r3357, %r3351, %r3350, 25;
	mov.b64 	%rd5358, {%r3357, %r3356};
	xor.b64  	%rd5359, %rd5357, %rd5358;
	and.b64  	%rd5360, %rd5338, %rd5311;
	xor.b64  	%rd5361, %rd5338, %rd5311;
	and.b64  	%rd5362, %rd5361, %rd18642;
	or.b64  	%rd5363, %rd5362, %rd5360;
	add.s64 	%rd5364, %rd5353, %rd5363;
	add.s64 	%rd5365, %rd5364, %rd5359;
	add.s32 	%r3358, %r12924, 3;
	mul.wide.s32 	%rd5366, %r3358, 8;
	add.s64 	%rd5367, %rd5285, %rd5366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3359,%dummy}, %rd5354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3360}, %rd5354;
	}
	shf.r.wrap.b32 	%r3361, %r3360, %r3359, 14;
	shf.r.wrap.b32 	%r3362, %r3359, %r3360, 14;
	mov.b64 	%rd5368, {%r3362, %r3361};
	shf.r.wrap.b32 	%r3363, %r3360, %r3359, 18;
	shf.r.wrap.b32 	%r3364, %r3359, %r3360, 18;
	mov.b64 	%rd5369, {%r3364, %r3363};
	xor.b64  	%rd5370, %rd5369, %rd5368;
	shf.l.wrap.b32 	%r3365, %r3359, %r3360, 23;
	shf.l.wrap.b32 	%r3366, %r3360, %r3359, 23;
	mov.b64 	%rd5371, {%r3366, %r3365};
	xor.b64  	%rd5372, %rd5370, %rd5371;
	xor.b64  	%rd5373, %rd5327, %rd5300;
	and.b64  	%rd5374, %rd5354, %rd5373;
	xor.b64  	%rd5375, %rd5374, %rd5300;
	add.s64 	%rd5376, %rd18653, %rd18646;
	ld.const.u64 	%rd5377, [%rd5367];
	add.s64 	%rd5378, %rd5376, %rd5377;
	add.s64 	%rd5379, %rd5378, %rd5375;
	add.s64 	%rd5380, %rd5379, %rd5372;
	add.s64 	%rd5381, %rd5380, %rd18642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3367,%dummy}, %rd5365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3368}, %rd5365;
	}
	shf.r.wrap.b32 	%r3369, %r3368, %r3367, 28;
	shf.r.wrap.b32 	%r3370, %r3367, %r3368, 28;
	mov.b64 	%rd5382, {%r3370, %r3369};
	shf.l.wrap.b32 	%r3371, %r3367, %r3368, 30;
	shf.l.wrap.b32 	%r3372, %r3368, %r3367, 30;
	mov.b64 	%rd5383, {%r3372, %r3371};
	xor.b64  	%rd5384, %rd5383, %rd5382;
	shf.l.wrap.b32 	%r3373, %r3367, %r3368, 25;
	shf.l.wrap.b32 	%r3374, %r3368, %r3367, 25;
	mov.b64 	%rd5385, {%r3374, %r3373};
	xor.b64  	%rd5386, %rd5384, %rd5385;
	and.b64  	%rd5387, %rd5365, %rd5338;
	xor.b64  	%rd5388, %rd5365, %rd5338;
	and.b64  	%rd5389, %rd5388, %rd5311;
	or.b64  	%rd5390, %rd5389, %rd5387;
	add.s64 	%rd5391, %rd5380, %rd5390;
	add.s64 	%rd5392, %rd5391, %rd5386;
	add.s32 	%r3375, %r12924, 4;
	mul.wide.s32 	%rd5393, %r3375, 8;
	add.s64 	%rd5394, %rd5285, %rd5393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3376,%dummy}, %rd5381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3377}, %rd5381;
	}
	shf.r.wrap.b32 	%r3378, %r3377, %r3376, 14;
	shf.r.wrap.b32 	%r3379, %r3376, %r3377, 14;
	mov.b64 	%rd5395, {%r3379, %r3378};
	shf.r.wrap.b32 	%r3380, %r3377, %r3376, 18;
	shf.r.wrap.b32 	%r3381, %r3376, %r3377, 18;
	mov.b64 	%rd5396, {%r3381, %r3380};
	xor.b64  	%rd5397, %rd5396, %rd5395;
	shf.l.wrap.b32 	%r3382, %r3376, %r3377, 23;
	shf.l.wrap.b32 	%r3383, %r3377, %r3376, 23;
	mov.b64 	%rd5398, {%r3383, %r3382};
	xor.b64  	%rd5399, %rd5397, %rd5398;
	xor.b64  	%rd5400, %rd5354, %rd5327;
	and.b64  	%rd5401, %rd5381, %rd5400;
	xor.b64  	%rd5402, %rd5401, %rd5327;
	add.s64 	%rd5403, %rd5300, %rd18654;
	ld.const.u64 	%rd5404, [%rd5394];
	add.s64 	%rd5405, %rd5403, %rd5404;
	add.s64 	%rd5406, %rd5405, %rd5402;
	add.s64 	%rd5407, %rd5406, %rd5399;
	add.s64 	%rd5408, %rd5407, %rd5311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3384,%dummy}, %rd5392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3385}, %rd5392;
	}
	shf.r.wrap.b32 	%r3386, %r3385, %r3384, 28;
	shf.r.wrap.b32 	%r3387, %r3384, %r3385, 28;
	mov.b64 	%rd5409, {%r3387, %r3386};
	shf.l.wrap.b32 	%r3388, %r3384, %r3385, 30;
	shf.l.wrap.b32 	%r3389, %r3385, %r3384, 30;
	mov.b64 	%rd5410, {%r3389, %r3388};
	xor.b64  	%rd5411, %rd5410, %rd5409;
	shf.l.wrap.b32 	%r3390, %r3384, %r3385, 25;
	shf.l.wrap.b32 	%r3391, %r3385, %r3384, 25;
	mov.b64 	%rd5412, {%r3391, %r3390};
	xor.b64  	%rd5413, %rd5411, %rd5412;
	and.b64  	%rd5414, %rd5392, %rd5365;
	xor.b64  	%rd5415, %rd5392, %rd5365;
	and.b64  	%rd5416, %rd5415, %rd5338;
	or.b64  	%rd5417, %rd5416, %rd5414;
	add.s64 	%rd5418, %rd5407, %rd5417;
	add.s64 	%rd5419, %rd5418, %rd5413;
	add.s32 	%r3392, %r12924, 5;
	mul.wide.s32 	%rd5420, %r3392, 8;
	add.s64 	%rd5421, %rd5285, %rd5420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3393,%dummy}, %rd5408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3394}, %rd5408;
	}
	shf.r.wrap.b32 	%r3395, %r3394, %r3393, 14;
	shf.r.wrap.b32 	%r3396, %r3393, %r3394, 14;
	mov.b64 	%rd5422, {%r3396, %r3395};
	shf.r.wrap.b32 	%r3397, %r3394, %r3393, 18;
	shf.r.wrap.b32 	%r3398, %r3393, %r3394, 18;
	mov.b64 	%rd5423, {%r3398, %r3397};
	xor.b64  	%rd5424, %rd5423, %rd5422;
	shf.l.wrap.b32 	%r3399, %r3393, %r3394, 23;
	shf.l.wrap.b32 	%r3400, %r3394, %r3393, 23;
	mov.b64 	%rd5425, {%r3400, %r3399};
	xor.b64  	%rd5426, %rd5424, %rd5425;
	xor.b64  	%rd5427, %rd5381, %rd5354;
	and.b64  	%rd5428, %rd5408, %rd5427;
	xor.b64  	%rd5429, %rd5428, %rd5354;
	add.s64 	%rd5430, %rd5327, %rd18655;
	ld.const.u64 	%rd5431, [%rd5421];
	add.s64 	%rd5432, %rd5430, %rd5431;
	add.s64 	%rd5433, %rd5432, %rd5429;
	add.s64 	%rd5434, %rd5433, %rd5426;
	add.s64 	%rd5435, %rd5434, %rd5338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3401,%dummy}, %rd5419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3402}, %rd5419;
	}
	shf.r.wrap.b32 	%r3403, %r3402, %r3401, 28;
	shf.r.wrap.b32 	%r3404, %r3401, %r3402, 28;
	mov.b64 	%rd5436, {%r3404, %r3403};
	shf.l.wrap.b32 	%r3405, %r3401, %r3402, 30;
	shf.l.wrap.b32 	%r3406, %r3402, %r3401, 30;
	mov.b64 	%rd5437, {%r3406, %r3405};
	xor.b64  	%rd5438, %rd5437, %rd5436;
	shf.l.wrap.b32 	%r3407, %r3401, %r3402, 25;
	shf.l.wrap.b32 	%r3408, %r3402, %r3401, 25;
	mov.b64 	%rd5439, {%r3408, %r3407};
	xor.b64  	%rd5440, %rd5438, %rd5439;
	and.b64  	%rd5441, %rd5419, %rd5392;
	xor.b64  	%rd5442, %rd5419, %rd5392;
	and.b64  	%rd5443, %rd5442, %rd5365;
	or.b64  	%rd5444, %rd5443, %rd5441;
	add.s64 	%rd5445, %rd5434, %rd5444;
	add.s64 	%rd5446, %rd5445, %rd5440;
	add.s32 	%r3409, %r12924, 6;
	mul.wide.s32 	%rd5447, %r3409, 8;
	add.s64 	%rd5448, %rd5285, %rd5447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3410,%dummy}, %rd5435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3411}, %rd5435;
	}
	shf.r.wrap.b32 	%r3412, %r3411, %r3410, 14;
	shf.r.wrap.b32 	%r3413, %r3410, %r3411, 14;
	mov.b64 	%rd5449, {%r3413, %r3412};
	shf.r.wrap.b32 	%r3414, %r3411, %r3410, 18;
	shf.r.wrap.b32 	%r3415, %r3410, %r3411, 18;
	mov.b64 	%rd5450, {%r3415, %r3414};
	xor.b64  	%rd5451, %rd5450, %rd5449;
	shf.l.wrap.b32 	%r3416, %r3410, %r3411, 23;
	shf.l.wrap.b32 	%r3417, %r3411, %r3410, 23;
	mov.b64 	%rd5452, {%r3417, %r3416};
	xor.b64  	%rd5453, %rd5451, %rd5452;
	xor.b64  	%rd5454, %rd5408, %rd5381;
	and.b64  	%rd5455, %rd5435, %rd5454;
	xor.b64  	%rd5456, %rd5455, %rd5381;
	add.s64 	%rd5457, %rd5354, %rd18656;
	ld.const.u64 	%rd5458, [%rd5448];
	add.s64 	%rd5459, %rd5457, %rd5458;
	add.s64 	%rd5460, %rd5459, %rd5456;
	add.s64 	%rd5461, %rd5460, %rd5453;
	add.s64 	%rd5462, %rd5461, %rd5365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3418,%dummy}, %rd5446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3419}, %rd5446;
	}
	shf.r.wrap.b32 	%r3420, %r3419, %r3418, 28;
	shf.r.wrap.b32 	%r3421, %r3418, %r3419, 28;
	mov.b64 	%rd5463, {%r3421, %r3420};
	shf.l.wrap.b32 	%r3422, %r3418, %r3419, 30;
	shf.l.wrap.b32 	%r3423, %r3419, %r3418, 30;
	mov.b64 	%rd5464, {%r3423, %r3422};
	xor.b64  	%rd5465, %rd5464, %rd5463;
	shf.l.wrap.b32 	%r3424, %r3418, %r3419, 25;
	shf.l.wrap.b32 	%r3425, %r3419, %r3418, 25;
	mov.b64 	%rd5466, {%r3425, %r3424};
	xor.b64  	%rd5467, %rd5465, %rd5466;
	and.b64  	%rd5468, %rd5446, %rd5419;
	xor.b64  	%rd5469, %rd5446, %rd5419;
	and.b64  	%rd5470, %rd5469, %rd5392;
	or.b64  	%rd5471, %rd5470, %rd5468;
	add.s64 	%rd5472, %rd5461, %rd5471;
	add.s64 	%rd5473, %rd5472, %rd5467;
	add.s32 	%r3426, %r12924, 7;
	mul.wide.s32 	%rd5474, %r3426, 8;
	add.s64 	%rd5475, %rd5285, %rd5474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3427,%dummy}, %rd5462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3428}, %rd5462;
	}
	shf.r.wrap.b32 	%r3429, %r3428, %r3427, 14;
	shf.r.wrap.b32 	%r3430, %r3427, %r3428, 14;
	mov.b64 	%rd5476, {%r3430, %r3429};
	shf.r.wrap.b32 	%r3431, %r3428, %r3427, 18;
	shf.r.wrap.b32 	%r3432, %r3427, %r3428, 18;
	mov.b64 	%rd5477, {%r3432, %r3431};
	xor.b64  	%rd5478, %rd5477, %rd5476;
	shf.l.wrap.b32 	%r3433, %r3427, %r3428, 23;
	shf.l.wrap.b32 	%r3434, %r3428, %r3427, 23;
	mov.b64 	%rd5479, {%r3434, %r3433};
	xor.b64  	%rd5480, %rd5478, %rd5479;
	xor.b64  	%rd5481, %rd5435, %rd5408;
	and.b64  	%rd5482, %rd5462, %rd5481;
	xor.b64  	%rd5483, %rd5482, %rd5408;
	add.s64 	%rd5484, %rd5381, %rd18657;
	ld.const.u64 	%rd5485, [%rd5475];
	add.s64 	%rd5486, %rd5484, %rd5485;
	add.s64 	%rd5487, %rd5486, %rd5483;
	add.s64 	%rd5488, %rd5487, %rd5480;
	add.s64 	%rd5489, %rd5488, %rd5392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3435,%dummy}, %rd5473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3436}, %rd5473;
	}
	shf.r.wrap.b32 	%r3437, %r3436, %r3435, 28;
	shf.r.wrap.b32 	%r3438, %r3435, %r3436, 28;
	mov.b64 	%rd5490, {%r3438, %r3437};
	shf.l.wrap.b32 	%r3439, %r3435, %r3436, 30;
	shf.l.wrap.b32 	%r3440, %r3436, %r3435, 30;
	mov.b64 	%rd5491, {%r3440, %r3439};
	xor.b64  	%rd5492, %rd5491, %rd5490;
	shf.l.wrap.b32 	%r3441, %r3435, %r3436, 25;
	shf.l.wrap.b32 	%r3442, %r3436, %r3435, 25;
	mov.b64 	%rd5493, {%r3442, %r3441};
	xor.b64  	%rd5494, %rd5492, %rd5493;
	and.b64  	%rd5495, %rd5473, %rd5446;
	xor.b64  	%rd5496, %rd5473, %rd5446;
	and.b64  	%rd5497, %rd5496, %rd5419;
	or.b64  	%rd5498, %rd5497, %rd5495;
	add.s64 	%rd5499, %rd5488, %rd5498;
	add.s64 	%rd5500, %rd5499, %rd5494;
	add.s32 	%r3443, %r12924, 8;
	mul.wide.s32 	%rd5501, %r3443, 8;
	add.s64 	%rd5502, %rd5285, %rd5501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3444,%dummy}, %rd5489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3445}, %rd5489;
	}
	shf.r.wrap.b32 	%r3446, %r3445, %r3444, 14;
	shf.r.wrap.b32 	%r3447, %r3444, %r3445, 14;
	mov.b64 	%rd5503, {%r3447, %r3446};
	shf.r.wrap.b32 	%r3448, %r3445, %r3444, 18;
	shf.r.wrap.b32 	%r3449, %r3444, %r3445, 18;
	mov.b64 	%rd5504, {%r3449, %r3448};
	xor.b64  	%rd5505, %rd5504, %rd5503;
	shf.l.wrap.b32 	%r3450, %r3444, %r3445, 23;
	shf.l.wrap.b32 	%r3451, %r3445, %r3444, 23;
	mov.b64 	%rd5506, {%r3451, %r3450};
	xor.b64  	%rd5507, %rd5505, %rd5506;
	xor.b64  	%rd5508, %rd5462, %rd5435;
	and.b64  	%rd5509, %rd5489, %rd5508;
	xor.b64  	%rd5510, %rd5509, %rd5435;
	add.s64 	%rd5511, %rd5408, %rd18641;
	ld.const.u64 	%rd5512, [%rd5502];
	add.s64 	%rd5513, %rd5511, %rd5512;
	add.s64 	%rd5514, %rd5513, %rd5510;
	add.s64 	%rd5515, %rd5514, %rd5507;
	add.s64 	%rd5516, %rd5515, %rd5419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3452,%dummy}, %rd5500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3453}, %rd5500;
	}
	shf.r.wrap.b32 	%r3454, %r3453, %r3452, 28;
	shf.r.wrap.b32 	%r3455, %r3452, %r3453, 28;
	mov.b64 	%rd5517, {%r3455, %r3454};
	shf.l.wrap.b32 	%r3456, %r3452, %r3453, 30;
	shf.l.wrap.b32 	%r3457, %r3453, %r3452, 30;
	mov.b64 	%rd5518, {%r3457, %r3456};
	xor.b64  	%rd5519, %rd5518, %rd5517;
	shf.l.wrap.b32 	%r3458, %r3452, %r3453, 25;
	shf.l.wrap.b32 	%r3459, %r3453, %r3452, 25;
	mov.b64 	%rd5520, {%r3459, %r3458};
	xor.b64  	%rd5521, %rd5519, %rd5520;
	and.b64  	%rd5522, %rd5500, %rd5473;
	xor.b64  	%rd5523, %rd5500, %rd5473;
	and.b64  	%rd5524, %rd5523, %rd5446;
	or.b64  	%rd5525, %rd5524, %rd5522;
	add.s64 	%rd5526, %rd5515, %rd5525;
	add.s64 	%rd5527, %rd5526, %rd5521;
	add.s32 	%r3460, %r12924, 9;
	mul.wide.s32 	%rd5528, %r3460, 8;
	add.s64 	%rd5529, %rd5285, %rd5528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3461,%dummy}, %rd5516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3462}, %rd5516;
	}
	shf.r.wrap.b32 	%r3463, %r3462, %r3461, 14;
	shf.r.wrap.b32 	%r3464, %r3461, %r3462, 14;
	mov.b64 	%rd5530, {%r3464, %r3463};
	shf.r.wrap.b32 	%r3465, %r3462, %r3461, 18;
	shf.r.wrap.b32 	%r3466, %r3461, %r3462, 18;
	mov.b64 	%rd5531, {%r3466, %r3465};
	xor.b64  	%rd5532, %rd5531, %rd5530;
	shf.l.wrap.b32 	%r3467, %r3461, %r3462, 23;
	shf.l.wrap.b32 	%r3468, %r3462, %r3461, 23;
	mov.b64 	%rd5533, {%r3468, %r3467};
	xor.b64  	%rd5534, %rd5532, %rd5533;
	xor.b64  	%rd5535, %rd5489, %rd5462;
	and.b64  	%rd5536, %rd5516, %rd5535;
	xor.b64  	%rd5537, %rd5536, %rd5462;
	add.s64 	%rd5538, %rd5435, %rd18640;
	ld.const.u64 	%rd5539, [%rd5529];
	add.s64 	%rd5540, %rd5538, %rd5539;
	add.s64 	%rd5541, %rd5540, %rd5537;
	add.s64 	%rd5542, %rd5541, %rd5534;
	add.s64 	%rd5543, %rd5542, %rd5446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3469,%dummy}, %rd5527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3470}, %rd5527;
	}
	shf.r.wrap.b32 	%r3471, %r3470, %r3469, 28;
	shf.r.wrap.b32 	%r3472, %r3469, %r3470, 28;
	mov.b64 	%rd5544, {%r3472, %r3471};
	shf.l.wrap.b32 	%r3473, %r3469, %r3470, 30;
	shf.l.wrap.b32 	%r3474, %r3470, %r3469, 30;
	mov.b64 	%rd5545, {%r3474, %r3473};
	xor.b64  	%rd5546, %rd5545, %rd5544;
	shf.l.wrap.b32 	%r3475, %r3469, %r3470, 25;
	shf.l.wrap.b32 	%r3476, %r3470, %r3469, 25;
	mov.b64 	%rd5547, {%r3476, %r3475};
	xor.b64  	%rd5548, %rd5546, %rd5547;
	and.b64  	%rd5549, %rd5527, %rd5500;
	xor.b64  	%rd5550, %rd5527, %rd5500;
	and.b64  	%rd5551, %rd5550, %rd5473;
	or.b64  	%rd5552, %rd5551, %rd5549;
	add.s64 	%rd5553, %rd5542, %rd5552;
	add.s64 	%rd5554, %rd5553, %rd5548;
	add.s32 	%r3477, %r12924, 10;
	mul.wide.s32 	%rd5555, %r3477, 8;
	add.s64 	%rd5556, %rd5285, %rd5555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3478,%dummy}, %rd5543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3479}, %rd5543;
	}
	shf.r.wrap.b32 	%r3480, %r3479, %r3478, 14;
	shf.r.wrap.b32 	%r3481, %r3478, %r3479, 14;
	mov.b64 	%rd5557, {%r3481, %r3480};
	shf.r.wrap.b32 	%r3482, %r3479, %r3478, 18;
	shf.r.wrap.b32 	%r3483, %r3478, %r3479, 18;
	mov.b64 	%rd5558, {%r3483, %r3482};
	xor.b64  	%rd5559, %rd5558, %rd5557;
	shf.l.wrap.b32 	%r3484, %r3478, %r3479, 23;
	shf.l.wrap.b32 	%r3485, %r3479, %r3478, 23;
	mov.b64 	%rd5560, {%r3485, %r3484};
	xor.b64  	%rd5561, %rd5559, %rd5560;
	xor.b64  	%rd5562, %rd5516, %rd5489;
	and.b64  	%rd5563, %rd5543, %rd5562;
	xor.b64  	%rd5564, %rd5563, %rd5489;
	add.s64 	%rd5565, %rd5462, %rd18639;
	ld.const.u64 	%rd5566, [%rd5556];
	add.s64 	%rd5567, %rd5565, %rd5566;
	add.s64 	%rd5568, %rd5567, %rd5564;
	add.s64 	%rd5569, %rd5568, %rd5561;
	add.s64 	%rd5570, %rd5569, %rd5473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3486,%dummy}, %rd5554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3487}, %rd5554;
	}
	shf.r.wrap.b32 	%r3488, %r3487, %r3486, 28;
	shf.r.wrap.b32 	%r3489, %r3486, %r3487, 28;
	mov.b64 	%rd5571, {%r3489, %r3488};
	shf.l.wrap.b32 	%r3490, %r3486, %r3487, 30;
	shf.l.wrap.b32 	%r3491, %r3487, %r3486, 30;
	mov.b64 	%rd5572, {%r3491, %r3490};
	xor.b64  	%rd5573, %rd5572, %rd5571;
	shf.l.wrap.b32 	%r3492, %r3486, %r3487, 25;
	shf.l.wrap.b32 	%r3493, %r3487, %r3486, 25;
	mov.b64 	%rd5574, {%r3493, %r3492};
	xor.b64  	%rd5575, %rd5573, %rd5574;
	and.b64  	%rd5576, %rd5554, %rd5527;
	xor.b64  	%rd5577, %rd5554, %rd5527;
	and.b64  	%rd5578, %rd5577, %rd5500;
	or.b64  	%rd5579, %rd5578, %rd5576;
	add.s64 	%rd5580, %rd5569, %rd5579;
	add.s64 	%rd5581, %rd5580, %rd5575;
	add.s32 	%r3494, %r12924, 11;
	mul.wide.s32 	%rd5582, %r3494, 8;
	add.s64 	%rd5583, %rd5285, %rd5582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3495,%dummy}, %rd5570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3496}, %rd5570;
	}
	shf.r.wrap.b32 	%r3497, %r3496, %r3495, 14;
	shf.r.wrap.b32 	%r3498, %r3495, %r3496, 14;
	mov.b64 	%rd5584, {%r3498, %r3497};
	shf.r.wrap.b32 	%r3499, %r3496, %r3495, 18;
	shf.r.wrap.b32 	%r3500, %r3495, %r3496, 18;
	mov.b64 	%rd5585, {%r3500, %r3499};
	xor.b64  	%rd5586, %rd5585, %rd5584;
	shf.l.wrap.b32 	%r3501, %r3495, %r3496, 23;
	shf.l.wrap.b32 	%r3502, %r3496, %r3495, 23;
	mov.b64 	%rd5587, {%r3502, %r3501};
	xor.b64  	%rd5588, %rd5586, %rd5587;
	xor.b64  	%rd5589, %rd5543, %rd5516;
	and.b64  	%rd5590, %rd5570, %rd5589;
	xor.b64  	%rd5591, %rd5590, %rd5516;
	add.s64 	%rd5592, %rd5489, %rd18638;
	ld.const.u64 	%rd5593, [%rd5583];
	add.s64 	%rd5594, %rd5592, %rd5593;
	add.s64 	%rd5595, %rd5594, %rd5591;
	add.s64 	%rd5596, %rd5595, %rd5588;
	add.s64 	%rd5597, %rd5596, %rd5500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3503,%dummy}, %rd5581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3504}, %rd5581;
	}
	shf.r.wrap.b32 	%r3505, %r3504, %r3503, 28;
	shf.r.wrap.b32 	%r3506, %r3503, %r3504, 28;
	mov.b64 	%rd5598, {%r3506, %r3505};
	shf.l.wrap.b32 	%r3507, %r3503, %r3504, 30;
	shf.l.wrap.b32 	%r3508, %r3504, %r3503, 30;
	mov.b64 	%rd5599, {%r3508, %r3507};
	xor.b64  	%rd5600, %rd5599, %rd5598;
	shf.l.wrap.b32 	%r3509, %r3503, %r3504, 25;
	shf.l.wrap.b32 	%r3510, %r3504, %r3503, 25;
	mov.b64 	%rd5601, {%r3510, %r3509};
	xor.b64  	%rd5602, %rd5600, %rd5601;
	and.b64  	%rd5603, %rd5581, %rd5554;
	xor.b64  	%rd5604, %rd5581, %rd5554;
	and.b64  	%rd5605, %rd5604, %rd5527;
	or.b64  	%rd5606, %rd5605, %rd5603;
	add.s64 	%rd5607, %rd5596, %rd5606;
	add.s64 	%rd5608, %rd5607, %rd5602;
	add.s32 	%r3511, %r12924, 12;
	mul.wide.s32 	%rd5609, %r3511, 8;
	add.s64 	%rd5610, %rd5285, %rd5609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3512,%dummy}, %rd5597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3513}, %rd5597;
	}
	shf.r.wrap.b32 	%r3514, %r3513, %r3512, 14;
	shf.r.wrap.b32 	%r3515, %r3512, %r3513, 14;
	mov.b64 	%rd5611, {%r3515, %r3514};
	shf.r.wrap.b32 	%r3516, %r3513, %r3512, 18;
	shf.r.wrap.b32 	%r3517, %r3512, %r3513, 18;
	mov.b64 	%rd5612, {%r3517, %r3516};
	xor.b64  	%rd5613, %rd5612, %rd5611;
	shf.l.wrap.b32 	%r3518, %r3512, %r3513, 23;
	shf.l.wrap.b32 	%r3519, %r3513, %r3512, 23;
	mov.b64 	%rd5614, {%r3519, %r3518};
	xor.b64  	%rd5615, %rd5613, %rd5614;
	xor.b64  	%rd5616, %rd5570, %rd5543;
	and.b64  	%rd5617, %rd5597, %rd5616;
	xor.b64  	%rd5618, %rd5617, %rd5543;
	add.s64 	%rd5619, %rd5516, %rd18637;
	ld.const.u64 	%rd5620, [%rd5610];
	add.s64 	%rd5621, %rd5619, %rd5620;
	add.s64 	%rd5622, %rd5621, %rd5618;
	add.s64 	%rd5623, %rd5622, %rd5615;
	add.s64 	%rd18649, %rd5623, %rd5527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3520,%dummy}, %rd5608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3521}, %rd5608;
	}
	shf.r.wrap.b32 	%r3522, %r3521, %r3520, 28;
	shf.r.wrap.b32 	%r3523, %r3520, %r3521, 28;
	mov.b64 	%rd5624, {%r3523, %r3522};
	shf.l.wrap.b32 	%r3524, %r3520, %r3521, 30;
	shf.l.wrap.b32 	%r3525, %r3521, %r3520, 30;
	mov.b64 	%rd5625, {%r3525, %r3524};
	xor.b64  	%rd5626, %rd5625, %rd5624;
	shf.l.wrap.b32 	%r3526, %r3520, %r3521, 25;
	shf.l.wrap.b32 	%r3527, %r3521, %r3520, 25;
	mov.b64 	%rd5627, {%r3527, %r3526};
	xor.b64  	%rd5628, %rd5626, %rd5627;
	and.b64  	%rd5629, %rd5608, %rd5581;
	xor.b64  	%rd5630, %rd5608, %rd5581;
	and.b64  	%rd5631, %rd5630, %rd5554;
	or.b64  	%rd5632, %rd5631, %rd5629;
	add.s64 	%rd5633, %rd5623, %rd5632;
	add.s64 	%rd18645, %rd5633, %rd5628;
	add.s32 	%r3528, %r12924, 13;
	mul.wide.s32 	%rd5634, %r3528, 8;
	add.s64 	%rd5635, %rd5285, %rd5634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3529,%dummy}, %rd18649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3530}, %rd18649;
	}
	shf.r.wrap.b32 	%r3531, %r3530, %r3529, 14;
	shf.r.wrap.b32 	%r3532, %r3529, %r3530, 14;
	mov.b64 	%rd5636, {%r3532, %r3531};
	shf.r.wrap.b32 	%r3533, %r3530, %r3529, 18;
	shf.r.wrap.b32 	%r3534, %r3529, %r3530, 18;
	mov.b64 	%rd5637, {%r3534, %r3533};
	xor.b64  	%rd5638, %rd5637, %rd5636;
	shf.l.wrap.b32 	%r3535, %r3529, %r3530, 23;
	shf.l.wrap.b32 	%r3536, %r3530, %r3529, 23;
	mov.b64 	%rd5639, {%r3536, %r3535};
	xor.b64  	%rd5640, %rd5638, %rd5639;
	xor.b64  	%rd5641, %rd5597, %rd5570;
	and.b64  	%rd5642, %rd18649, %rd5641;
	xor.b64  	%rd5643, %rd5642, %rd5570;
	add.s64 	%rd5644, %rd5543, %rd18636;
	ld.const.u64 	%rd5645, [%rd5635];
	add.s64 	%rd5646, %rd5644, %rd5645;
	add.s64 	%rd5647, %rd5646, %rd5643;
	add.s64 	%rd5648, %rd5647, %rd5640;
	add.s64 	%rd18648, %rd5648, %rd5554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3537,%dummy}, %rd18645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3538}, %rd18645;
	}
	shf.r.wrap.b32 	%r3539, %r3538, %r3537, 28;
	shf.r.wrap.b32 	%r3540, %r3537, %r3538, 28;
	mov.b64 	%rd5649, {%r3540, %r3539};
	shf.l.wrap.b32 	%r3541, %r3537, %r3538, 30;
	shf.l.wrap.b32 	%r3542, %r3538, %r3537, 30;
	mov.b64 	%rd5650, {%r3542, %r3541};
	xor.b64  	%rd5651, %rd5650, %rd5649;
	shf.l.wrap.b32 	%r3543, %r3537, %r3538, 25;
	shf.l.wrap.b32 	%r3544, %r3538, %r3537, 25;
	mov.b64 	%rd5652, {%r3544, %r3543};
	xor.b64  	%rd5653, %rd5651, %rd5652;
	and.b64  	%rd5654, %rd18645, %rd5608;
	xor.b64  	%rd5655, %rd18645, %rd5608;
	and.b64  	%rd5656, %rd5655, %rd5581;
	or.b64  	%rd5657, %rd5656, %rd5654;
	add.s64 	%rd5658, %rd5648, %rd5657;
	add.s64 	%rd18644, %rd5658, %rd5653;
	add.s32 	%r3545, %r12924, 14;
	mul.wide.s32 	%rd5659, %r3545, 8;
	add.s64 	%rd5660, %rd5285, %rd5659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3546,%dummy}, %rd18648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3547}, %rd18648;
	}
	shf.r.wrap.b32 	%r3548, %r3547, %r3546, 14;
	shf.r.wrap.b32 	%r3549, %r3546, %r3547, 14;
	mov.b64 	%rd5661, {%r3549, %r3548};
	shf.r.wrap.b32 	%r3550, %r3547, %r3546, 18;
	shf.r.wrap.b32 	%r3551, %r3546, %r3547, 18;
	mov.b64 	%rd5662, {%r3551, %r3550};
	xor.b64  	%rd5663, %rd5662, %rd5661;
	shf.l.wrap.b32 	%r3552, %r3546, %r3547, 23;
	shf.l.wrap.b32 	%r3553, %r3547, %r3546, 23;
	mov.b64 	%rd5664, {%r3553, %r3552};
	xor.b64  	%rd5665, %rd5663, %rd5664;
	xor.b64  	%rd5666, %rd18649, %rd5597;
	and.b64  	%rd5667, %rd18648, %rd5666;
	xor.b64  	%rd5668, %rd5667, %rd5597;
	add.s64 	%rd5669, %rd5570, %rd18635;
	ld.const.u64 	%rd5670, [%rd5660];
	add.s64 	%rd5671, %rd5669, %rd5670;
	add.s64 	%rd5672, %rd5671, %rd5668;
	add.s64 	%rd5673, %rd5672, %rd5665;
	add.s64 	%rd18647, %rd5673, %rd5581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3554,%dummy}, %rd18644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3555}, %rd18644;
	}
	shf.r.wrap.b32 	%r3556, %r3555, %r3554, 28;
	shf.r.wrap.b32 	%r3557, %r3554, %r3555, 28;
	mov.b64 	%rd5674, {%r3557, %r3556};
	shf.l.wrap.b32 	%r3558, %r3554, %r3555, 30;
	shf.l.wrap.b32 	%r3559, %r3555, %r3554, 30;
	mov.b64 	%rd5675, {%r3559, %r3558};
	xor.b64  	%rd5676, %rd5675, %rd5674;
	shf.l.wrap.b32 	%r3560, %r3554, %r3555, 25;
	shf.l.wrap.b32 	%r3561, %r3555, %r3554, 25;
	mov.b64 	%rd5677, {%r3561, %r3560};
	xor.b64  	%rd5678, %rd5676, %rd5677;
	and.b64  	%rd5679, %rd18644, %rd18645;
	xor.b64  	%rd5680, %rd18644, %rd18645;
	and.b64  	%rd5681, %rd5680, %rd5608;
	or.b64  	%rd5682, %rd5681, %rd5679;
	add.s64 	%rd5683, %rd5673, %rd5682;
	add.s64 	%rd18643, %rd5683, %rd5678;
	add.s32 	%r3562, %r12924, 15;
	mul.wide.s32 	%rd5684, %r3562, 8;
	add.s64 	%rd5685, %rd5285, %rd5684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3563,%dummy}, %rd18647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3564}, %rd18647;
	}
	shf.r.wrap.b32 	%r3565, %r3564, %r3563, 14;
	shf.r.wrap.b32 	%r3566, %r3563, %r3564, 14;
	mov.b64 	%rd5686, {%r3566, %r3565};
	shf.r.wrap.b32 	%r3567, %r3564, %r3563, 18;
	shf.r.wrap.b32 	%r3568, %r3563, %r3564, 18;
	mov.b64 	%rd5687, {%r3568, %r3567};
	xor.b64  	%rd5688, %rd5687, %rd5686;
	shf.l.wrap.b32 	%r3569, %r3563, %r3564, 23;
	shf.l.wrap.b32 	%r3570, %r3564, %r3563, 23;
	mov.b64 	%rd5689, {%r3570, %r3569};
	xor.b64  	%rd5690, %rd5688, %rd5689;
	xor.b64  	%rd5691, %rd18648, %rd18649;
	and.b64  	%rd5692, %rd18647, %rd5691;
	xor.b64  	%rd5693, %rd5692, %rd18649;
	add.s64 	%rd5694, %rd5597, %rd18634;
	ld.const.u64 	%rd5695, [%rd5685];
	add.s64 	%rd5696, %rd5694, %rd5695;
	add.s64 	%rd5697, %rd5696, %rd5693;
	add.s64 	%rd5698, %rd5697, %rd5690;
	add.s64 	%rd18646, %rd5698, %rd5608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3571,%dummy}, %rd18643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3572}, %rd18643;
	}
	shf.r.wrap.b32 	%r3573, %r3572, %r3571, 28;
	shf.r.wrap.b32 	%r3574, %r3571, %r3572, 28;
	mov.b64 	%rd5699, {%r3574, %r3573};
	shf.l.wrap.b32 	%r3575, %r3571, %r3572, 30;
	shf.l.wrap.b32 	%r3576, %r3572, %r3571, 30;
	mov.b64 	%rd5700, {%r3576, %r3575};
	xor.b64  	%rd5701, %rd5700, %rd5699;
	shf.l.wrap.b32 	%r3577, %r3571, %r3572, 25;
	shf.l.wrap.b32 	%r3578, %r3572, %r3571, 25;
	mov.b64 	%rd5702, {%r3578, %r3577};
	xor.b64  	%rd5703, %rd5701, %rd5702;
	and.b64  	%rd5704, %rd18643, %rd18644;
	xor.b64  	%rd5705, %rd18643, %rd18644;
	and.b64  	%rd5706, %rd5705, %rd18645;
	or.b64  	%rd5707, %rd5706, %rd5704;
	add.s64 	%rd5708, %rd5698, %rd5707;
	add.s64 	%rd18642, %rd5708, %rd5703;
	add.s32 	%r12924, %r12924, 16;
	setp.lt.s32	%p53, %r12924, 80;
	@%p53 bra 	BB0_86;

	mov.u64 	%rd18520, 6620516959819538809;
	mov.u64 	%rd18509, 2270897969802886507;
	mov.u64 	%rd18508, -7276294671716946913;
	mov.u64 	%rd18507, 5840696475078001361;
	mov.u64 	%rd18506, -6534734903238641935;
	mov.u64 	%rd18505, 4354685564936845355;
	mov.u64 	%rd18504, -4942790177534073029;
	mov.u64 	%rd18503, 7640891576956012808;
	add.s64 	%rd397, %rd18618, %rd18642;
	add.s64 	%rd398, %rd18617, %rd18643;
	st.local.v2.u64 	[%rd339], {%rd397, %rd398};
	add.s64 	%rd399, %rd18616, %rd18644;
	add.s64 	%rd400, %rd18615, %rd18645;
	st.local.v2.u64 	[%rd339+16], {%rd399, %rd400};
	add.s64 	%rd401, %rd18614, %rd18646;
	add.s64 	%rd402, %rd18613, %rd18647;
	st.local.v2.u64 	[%rd339+32], {%rd401, %rd402};
	add.s64 	%rd403, %rd18612, %rd18648;
	add.s64 	%rd404, %rd18611, %rd18649;
	st.local.v2.u64 	[%rd339+48], {%rd403, %rd404};
	st.local.u64 	[%rd1], %rd18503;
	st.local.u64 	[%rd1+8], %rd18504;
	st.local.u64 	[%rd1+16], %rd18505;
	st.local.u64 	[%rd1+24], %rd18506;
	st.local.u64 	[%rd1+32], %rd18507;
	st.local.u64 	[%rd1+40], %rd18508;
	st.local.u64 	[%rd1+48], %rd18509;
	st.local.u64 	[%rd1+56], %rd18520;
	st.local.u32 	[%rd1+192], %r2;
	@%p2 bra 	BB0_97;

	mov.u32 	%r3581, 1;
	max.u32 	%r127, %r2, %r3581;
	and.b32  	%r128, %r127, 3;
	setp.eq.s32	%p55, %r128, 0;
	mov.u32 	%r12928, 0;
	@%p55 bra 	BB0_94;

	setp.eq.s32	%p56, %r128, 1;
	mov.u32 	%r12926, 0;
	@%p56 bra 	BB0_93;

	setp.eq.s32	%p57, %r128, 2;
	mov.u32 	%r12925, 0;
	@%p57 bra 	BB0_92;

	ld.local.u8 	%rs63, [%rd1463+7];
	st.local.u8 	[%rd89+7], %rs63;
	mov.u32 	%r12925, %r3581;

BB0_92:
	xor.b32  	%r3585, %r12925, 7;
	cvt.u64.u32	%rd5720, %r3585;
	add.s64 	%rd5721, %rd1463, %rd5720;
	ld.local.u8 	%rs64, [%rd5721];
	add.s64 	%rd5722, %rd89, %rd5720;
	st.local.u8 	[%rd5722], %rs64;
	add.s32 	%r12926, %r12925, 1;

BB0_93:
	xor.b32  	%r3586, %r12926, 7;
	cvt.s64.s32	%rd5723, %r3586;
	add.s64 	%rd5724, %rd1463, %rd5723;
	ld.local.u8 	%rs65, [%rd5724];
	add.s64 	%rd5725, %rd89, %rd5723;
	st.local.u8 	[%rd5725], %rs65;
	add.s32 	%r12928, %r12926, 1;

BB0_94:
	setp.lt.u32	%p58, %r127, 4;
	@%p58 bra 	BB0_97;

	mov.u32 	%r12929, %r12928;

BB0_96:
	xor.b32  	%r3587, %r12929, 7;
	cvt.s64.s32	%rd5726, %r3587;
	add.s64 	%rd5727, %rd1463, %rd5726;
	ld.local.u8 	%rs66, [%rd5727];
	xor.b32  	%r3588, %r12928, 7;
	cvt.s64.s32	%rd5728, %r3588;
	add.s64 	%rd5729, %rd89, %rd5728;
	st.local.u8 	[%rd5729], %rs66;
	add.s32 	%r3589, %r12929, 1;
	xor.b32  	%r3590, %r3589, 7;
	cvt.s64.s32	%rd5730, %r3590;
	add.s64 	%rd5731, %rd1463, %rd5730;
	ld.local.u8 	%rs67, [%rd5731];
	add.s32 	%r3591, %r12928, 1;
	xor.b32  	%r3592, %r3591, 7;
	cvt.s64.s32	%rd5732, %r3592;
	add.s64 	%rd5733, %rd89, %rd5732;
	st.local.u8 	[%rd5733], %rs67;
	add.s32 	%r3593, %r12929, 2;
	xor.b32  	%r3594, %r3593, 7;
	cvt.s64.s32	%rd5734, %r3594;
	add.s64 	%rd5735, %rd1463, %rd5734;
	ld.local.u8 	%rs68, [%rd5735];
	add.s32 	%r3595, %r12928, 2;
	xor.b32  	%r3596, %r3595, 7;
	cvt.s64.s32	%rd5736, %r3596;
	add.s64 	%rd5737, %rd89, %rd5736;
	st.local.u8 	[%rd5737], %rs68;
	add.s32 	%r3597, %r12929, 3;
	xor.b32  	%r3598, %r3597, 7;
	cvt.s64.s32	%rd5738, %r3598;
	add.s64 	%rd5739, %rd1463, %rd5738;
	ld.local.u8 	%rs69, [%rd5739];
	add.s32 	%r3599, %r12928, 3;
	xor.b32  	%r3600, %r3599, 7;
	cvt.s64.s32	%rd5740, %r3600;
	add.s64 	%rd5741, %rd89, %rd5740;
	st.local.u8 	[%rd5741], %rs69;
	add.s32 	%r12929, %r12929, 4;
	setp.lt.s32	%p59, %r12929, %r2;
	add.s32 	%r12928, %r12928, 4;
	@%p59 bra 	BB0_96;

BB0_97:
	ld.local.u32 	%r3601, [%rd1+192];
	and.b32  	%r140, %r3601, 127;
	add.s32 	%r3602, %r3601, %r3;
	st.local.u32 	[%rd1+192], %r3602;
	add.s32 	%r141, %r140, %r3;
	setp.lt.s32	%p60, %r141, 128;
	@%p60 bra 	BB0_118;
	bra.uni 	BB0_98;

BB0_118:
	setp.lt.s32	%p73, %r3, 1;
	@%p73 bra 	BB0_127;

	and.b32  	%r4371, %r3, 3;
	mov.u32 	%r12944, 0;
	setp.eq.s32	%p74, %r4371, 0;
	@%p74 bra 	BB0_125;

	setp.eq.s32	%p75, %r4371, 1;
	@%p75 bra 	BB0_124;

	setp.eq.s32	%p76, %r4371, 2;
	@%p76 bra 	BB0_123;

	ld.local.u8 	%rs84, [%rd1465+7];
	xor.b32  	%r4373, %r140, 7;
	cvt.u64.u32	%rd6797, %r4373;
	add.s64 	%rd6798, %rd89, %rd6797;
	st.local.u8 	[%rd6798], %rs84;
	add.s32 	%r140, %r140, 1;
	mov.u32 	%r12944, 1;

BB0_123:
	xor.b32  	%r4374, %r12944, 7;
	cvt.u64.u32	%rd6799, %r4374;
	add.s64 	%rd6800, %rd1465, %rd6799;
	ld.local.u8 	%rs85, [%rd6800];
	xor.b32  	%r4375, %r140, 7;
	cvt.s64.s32	%rd6801, %r4375;
	add.s64 	%rd6802, %rd89, %rd6801;
	st.local.u8 	[%rd6802], %rs85;
	add.s32 	%r140, %r140, 1;
	add.s32 	%r12944, %r12944, 1;

BB0_124:
	xor.b32  	%r4376, %r12944, 7;
	cvt.s64.s32	%rd6803, %r4376;
	add.s64 	%rd6804, %rd1465, %rd6803;
	ld.local.u8 	%rs86, [%rd6804];
	xor.b32  	%r4377, %r140, 7;
	cvt.s64.s32	%rd6805, %r4377;
	add.s64 	%rd6806, %rd89, %rd6805;
	st.local.u8 	[%rd6806], %rs86;
	add.s32 	%r140, %r140, 1;
	add.s32 	%r12944, %r12944, 1;

BB0_125:
	setp.lt.u32	%p77, %r3, 4;
	@%p77 bra 	BB0_127;

BB0_126:
	xor.b32  	%r4378, %r12944, 7;
	cvt.s64.s32	%rd6807, %r4378;
	add.s64 	%rd6808, %rd1465, %rd6807;
	ld.local.u8 	%rs87, [%rd6808];
	xor.b32  	%r4379, %r140, 7;
	cvt.s64.s32	%rd6809, %r4379;
	add.s64 	%rd6810, %rd89, %rd6809;
	st.local.u8 	[%rd6810], %rs87;
	add.s32 	%r4380, %r12944, 1;
	xor.b32  	%r4381, %r4380, 7;
	cvt.s64.s32	%rd6811, %r4381;
	add.s64 	%rd6812, %rd1465, %rd6811;
	ld.local.u8 	%rs88, [%rd6812];
	add.s32 	%r4382, %r140, 1;
	xor.b32  	%r4383, %r4382, 7;
	cvt.s64.s32	%rd6813, %r4383;
	add.s64 	%rd6814, %rd89, %rd6813;
	st.local.u8 	[%rd6814], %rs88;
	add.s32 	%r4384, %r12944, 2;
	xor.b32  	%r4385, %r4384, 7;
	cvt.s64.s32	%rd6815, %r4385;
	add.s64 	%rd6816, %rd1465, %rd6815;
	ld.local.u8 	%rs89, [%rd6816];
	add.s32 	%r4386, %r140, 2;
	xor.b32  	%r4387, %r4386, 7;
	cvt.s64.s32	%rd6817, %r4387;
	add.s64 	%rd6818, %rd89, %rd6817;
	st.local.u8 	[%rd6818], %rs89;
	add.s32 	%r4388, %r12944, 3;
	xor.b32  	%r4389, %r4388, 7;
	cvt.s64.s32	%rd6819, %r4389;
	add.s64 	%rd6820, %rd1465, %rd6819;
	ld.local.u8 	%rs90, [%rd6820];
	add.s32 	%r4390, %r140, 3;
	xor.b32  	%r4391, %r4390, 7;
	cvt.s64.s32	%rd6821, %r4391;
	add.s64 	%rd6822, %rd89, %rd6821;
	st.local.u8 	[%rd6822], %rs90;
	add.s32 	%r12944, %r12944, 4;
	setp.lt.s32	%p78, %r12944, %r3;
	add.s32 	%r140, %r140, 4;
	@%p78 bra 	BB0_126;
	bra.uni 	BB0_127;

BB0_98:
	sub.s32 	%r142, %r2137, %r140;
	mov.u32 	%r3605, 1;
	max.u32 	%r143, %r142, %r3605;
	and.b32  	%r144, %r143, 3;
	setp.eq.s32	%p61, %r144, 0;
	mov.u32 	%r12936, 0;
	@%p61 bra 	BB0_105;

	setp.eq.s32	%p62, %r144, 1;
	mov.u32 	%r12932, 0;
	@%p62 bra 	BB0_104;

	setp.eq.s32	%p63, %r144, 2;
	mov.u32 	%r3607, 0;
	@%p63 bra 	BB0_101;
	bra.uni 	BB0_102;

BB0_101:
	mov.u32 	%r3605, %r3607;
	bra.uni 	BB0_103;

BB0_102:
	ld.local.u8 	%rs70, [%rd1465+7];
	xor.b32  	%r3609, %r140, 7;
	cvt.u64.u32	%rd5743, %r3609;
	add.s64 	%rd5744, %rd89, %rd5743;
	st.local.u8 	[%rd5744], %rs70;
	add.s32 	%r140, %r140, 1;

BB0_103:
	xor.b32  	%r3610, %r3605, 7;
	cvt.u64.u32	%rd5745, %r3610;
	add.s64 	%rd5746, %rd1465, %rd5745;
	ld.local.u8 	%rs71, [%rd5746];
	xor.b32  	%r3611, %r140, 7;
	cvt.s64.s32	%rd5747, %r3611;
	add.s64 	%rd5748, %rd89, %rd5747;
	st.local.u8 	[%rd5748], %rs71;
	add.s32 	%r140, %r140, 1;
	add.s32 	%r12932, %r3605, 1;

BB0_104:
	xor.b32  	%r3612, %r12932, 7;
	cvt.s64.s32	%rd5749, %r3612;
	add.s64 	%rd5750, %rd1465, %rd5749;
	ld.local.u8 	%rs72, [%rd5750];
	xor.b32  	%r3613, %r140, 7;
	cvt.s64.s32	%rd5751, %r3613;
	add.s64 	%rd5752, %rd89, %rd5751;
	st.local.u8 	[%rd5752], %rs72;
	add.s32 	%r140, %r140, 1;
	add.s32 	%r12936, %r12932, 1;

BB0_105:
	setp.lt.u32	%p64, %r143, 4;
	@%p64 bra 	BB0_107;

BB0_106:
	xor.b32  	%r3614, %r12936, 7;
	cvt.s64.s32	%rd5753, %r3614;
	add.s64 	%rd5754, %rd1465, %rd5753;
	ld.local.u8 	%rs73, [%rd5754];
	xor.b32  	%r3615, %r140, 7;
	cvt.s64.s32	%rd5755, %r3615;
	add.s64 	%rd5756, %rd89, %rd5755;
	st.local.u8 	[%rd5756], %rs73;
	add.s32 	%r3616, %r12936, 1;
	xor.b32  	%r3617, %r3616, 7;
	cvt.s64.s32	%rd5757, %r3617;
	add.s64 	%rd5758, %rd1465, %rd5757;
	ld.local.u8 	%rs74, [%rd5758];
	add.s32 	%r3618, %r140, 1;
	xor.b32  	%r3619, %r3618, 7;
	cvt.s64.s32	%rd5759, %r3619;
	add.s64 	%rd5760, %rd89, %rd5759;
	st.local.u8 	[%rd5760], %rs74;
	add.s32 	%r3620, %r12936, 2;
	xor.b32  	%r3621, %r3620, 7;
	cvt.s64.s32	%rd5761, %r3621;
	add.s64 	%rd5762, %rd1465, %rd5761;
	ld.local.u8 	%rs75, [%rd5762];
	add.s32 	%r3622, %r140, 2;
	xor.b32  	%r3623, %r3622, 7;
	cvt.s64.s32	%rd5763, %r3623;
	add.s64 	%rd5764, %rd89, %rd5763;
	st.local.u8 	[%rd5764], %rs75;
	add.s32 	%r3624, %r12936, 3;
	xor.b32  	%r3625, %r3624, 7;
	cvt.s64.s32	%rd5765, %r3625;
	add.s64 	%rd5766, %rd1465, %rd5765;
	ld.local.u8 	%rs76, [%rd5766];
	add.s32 	%r3626, %r140, 3;
	xor.b32  	%r3627, %r3626, 7;
	cvt.s64.s32	%rd5767, %r3627;
	add.s64 	%rd5768, %rd89, %rd5767;
	st.local.u8 	[%rd5768], %rs76;
	add.s32 	%r12936, %r12936, 4;
	setp.lt.s32	%p65, %r12936, %r142;
	add.s32 	%r140, %r140, 4;
	@%p65 bra 	BB0_106;

BB0_107:
	ld.local.u64 	%rd407, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3629,%dummy}, %rd407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3630}, %rd407;
	}
	shf.r.wrap.b32 	%r3631, %r3630, %r3629, 14;
	shf.r.wrap.b32 	%r3632, %r3629, %r3630, 14;
	mov.b64 	%rd5769, {%r3632, %r3631};
	shf.r.wrap.b32 	%r3633, %r3630, %r3629, 18;
	shf.r.wrap.b32 	%r3634, %r3629, %r3630, 18;
	mov.b64 	%rd5770, {%r3634, %r3633};
	xor.b64  	%rd5771, %rd5770, %rd5769;
	shf.l.wrap.b32 	%r3635, %r3629, %r3630, 23;
	shf.l.wrap.b32 	%r3636, %r3630, %r3629, 23;
	mov.b64 	%rd5772, {%r3636, %r3635};
	xor.b64  	%rd5773, %rd5771, %rd5772;
	ld.local.u64 	%rd408, [%rd1+48];
	ld.local.u64 	%rd409, [%rd1+40];
	xor.b64  	%rd5774, %rd408, %rd409;
	and.b64  	%rd5775, %rd5774, %rd407;
	xor.b64  	%rd5776, %rd5775, %rd408;
	ld.local.u64 	%rd410, [%rd1+56];
	ld.local.u64 	%rd18674, [%rd1+64];
	add.s64 	%rd5777, %rd410, %rd18674;
	add.s64 	%rd5778, %rd5777, %rd18610;
	add.s64 	%rd5779, %rd5778, %rd5776;
	add.s64 	%rd5780, %rd5779, %rd5773;
	ld.local.u64 	%rd412, [%rd1+24];
	add.s64 	%rd5781, %rd5780, %rd412;
	ld.local.u64 	%rd413, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3637,%dummy}, %rd413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3638}, %rd413;
	}
	shf.r.wrap.b32 	%r3639, %r3638, %r3637, 28;
	shf.r.wrap.b32 	%r3640, %r3637, %r3638, 28;
	mov.b64 	%rd5782, {%r3640, %r3639};
	shf.l.wrap.b32 	%r3641, %r3637, %r3638, 30;
	shf.l.wrap.b32 	%r3642, %r3638, %r3637, 30;
	mov.b64 	%rd5783, {%r3642, %r3641};
	xor.b64  	%rd5784, %rd5783, %rd5782;
	shf.l.wrap.b32 	%r3643, %r3637, %r3638, 25;
	shf.l.wrap.b32 	%r3644, %r3638, %r3637, 25;
	mov.b64 	%rd5785, {%r3644, %r3643};
	xor.b64  	%rd5786, %rd5784, %rd5785;
	ld.local.u64 	%rd414, [%rd1+8];
	and.b64  	%rd5787, %rd414, %rd413;
	xor.b64  	%rd5788, %rd414, %rd413;
	ld.local.u64 	%rd415, [%rd1+16];
	and.b64  	%rd5789, %rd415, %rd5788;
	or.b64  	%rd5790, %rd5789, %rd5787;
	add.s64 	%rd5791, %rd5780, %rd5790;
	add.s64 	%rd5792, %rd5791, %rd5786;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3645,%dummy}, %rd5781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3646}, %rd5781;
	}
	shf.r.wrap.b32 	%r3647, %r3646, %r3645, 14;
	shf.r.wrap.b32 	%r3648, %r3645, %r3646, 14;
	mov.b64 	%rd5793, {%r3648, %r3647};
	shf.r.wrap.b32 	%r3649, %r3646, %r3645, 18;
	shf.r.wrap.b32 	%r3650, %r3645, %r3646, 18;
	mov.b64 	%rd5794, {%r3650, %r3649};
	xor.b64  	%rd5795, %rd5794, %rd5793;
	shf.l.wrap.b32 	%r3651, %r3645, %r3646, 23;
	shf.l.wrap.b32 	%r3652, %r3646, %r3645, 23;
	mov.b64 	%rd5796, {%r3652, %r3651};
	xor.b64  	%rd5797, %rd5795, %rd5796;
	xor.b64  	%rd5798, %rd409, %rd407;
	and.b64  	%rd5799, %rd5781, %rd5798;
	xor.b64  	%rd5800, %rd5799, %rd409;
	ld.local.u64 	%rd18675, [%rd1+72];
	add.s64 	%rd5801, %rd408, %rd18675;
	add.s64 	%rd5802, %rd5801, %rd18609;
	add.s64 	%rd5803, %rd5802, %rd5800;
	add.s64 	%rd5804, %rd5803, %rd5797;
	add.s64 	%rd5805, %rd5804, %rd415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3653,%dummy}, %rd5792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3654}, %rd5792;
	}
	shf.r.wrap.b32 	%r3655, %r3654, %r3653, 28;
	shf.r.wrap.b32 	%r3656, %r3653, %r3654, 28;
	mov.b64 	%rd5806, {%r3656, %r3655};
	shf.l.wrap.b32 	%r3657, %r3653, %r3654, 30;
	shf.l.wrap.b32 	%r3658, %r3654, %r3653, 30;
	mov.b64 	%rd5807, {%r3658, %r3657};
	xor.b64  	%rd5808, %rd5807, %rd5806;
	shf.l.wrap.b32 	%r3659, %r3653, %r3654, 25;
	shf.l.wrap.b32 	%r3660, %r3654, %r3653, 25;
	mov.b64 	%rd5809, {%r3660, %r3659};
	xor.b64  	%rd5810, %rd5808, %rd5809;
	and.b64  	%rd5811, %rd5792, %rd413;
	xor.b64  	%rd5812, %rd5792, %rd413;
	and.b64  	%rd5813, %rd5812, %rd414;
	or.b64  	%rd5814, %rd5813, %rd5811;
	add.s64 	%rd5815, %rd5804, %rd5814;
	add.s64 	%rd5816, %rd5815, %rd5810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3661,%dummy}, %rd5805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3662}, %rd5805;
	}
	shf.r.wrap.b32 	%r3663, %r3662, %r3661, 14;
	shf.r.wrap.b32 	%r3664, %r3661, %r3662, 14;
	mov.b64 	%rd5817, {%r3664, %r3663};
	shf.r.wrap.b32 	%r3665, %r3662, %r3661, 18;
	shf.r.wrap.b32 	%r3666, %r3661, %r3662, 18;
	mov.b64 	%rd5818, {%r3666, %r3665};
	xor.b64  	%rd5819, %rd5818, %rd5817;
	shf.l.wrap.b32 	%r3667, %r3661, %r3662, 23;
	shf.l.wrap.b32 	%r3668, %r3662, %r3661, 23;
	mov.b64 	%rd5820, {%r3668, %r3667};
	xor.b64  	%rd5821, %rd5819, %rd5820;
	xor.b64  	%rd5822, %rd5781, %rd407;
	and.b64  	%rd5823, %rd5805, %rd5822;
	xor.b64  	%rd5824, %rd5823, %rd407;
	ld.local.u64 	%rd18676, [%rd1+80];
	add.s64 	%rd5825, %rd409, %rd18676;
	add.s64 	%rd5826, %rd5825, %rd18608;
	add.s64 	%rd5827, %rd5826, %rd5824;
	add.s64 	%rd5828, %rd5827, %rd5821;
	add.s64 	%rd5829, %rd5828, %rd414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3669,%dummy}, %rd5816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3670}, %rd5816;
	}
	shf.r.wrap.b32 	%r3671, %r3670, %r3669, 28;
	shf.r.wrap.b32 	%r3672, %r3669, %r3670, 28;
	mov.b64 	%rd5830, {%r3672, %r3671};
	shf.l.wrap.b32 	%r3673, %r3669, %r3670, 30;
	shf.l.wrap.b32 	%r3674, %r3670, %r3669, 30;
	mov.b64 	%rd5831, {%r3674, %r3673};
	xor.b64  	%rd5832, %rd5831, %rd5830;
	shf.l.wrap.b32 	%r3675, %r3669, %r3670, 25;
	shf.l.wrap.b32 	%r3676, %r3670, %r3669, 25;
	mov.b64 	%rd5833, {%r3676, %r3675};
	xor.b64  	%rd5834, %rd5832, %rd5833;
	and.b64  	%rd5835, %rd5816, %rd5792;
	xor.b64  	%rd5836, %rd5816, %rd5792;
	and.b64  	%rd5837, %rd5836, %rd413;
	or.b64  	%rd5838, %rd5837, %rd5835;
	add.s64 	%rd5839, %rd5828, %rd5838;
	add.s64 	%rd5840, %rd5839, %rd5834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3677,%dummy}, %rd5829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3678}, %rd5829;
	}
	shf.r.wrap.b32 	%r3679, %r3678, %r3677, 14;
	shf.r.wrap.b32 	%r3680, %r3677, %r3678, 14;
	mov.b64 	%rd5841, {%r3680, %r3679};
	shf.r.wrap.b32 	%r3681, %r3678, %r3677, 18;
	shf.r.wrap.b32 	%r3682, %r3677, %r3678, 18;
	mov.b64 	%rd5842, {%r3682, %r3681};
	xor.b64  	%rd5843, %rd5842, %rd5841;
	shf.l.wrap.b32 	%r3683, %r3677, %r3678, 23;
	shf.l.wrap.b32 	%r3684, %r3678, %r3677, 23;
	mov.b64 	%rd5844, {%r3684, %r3683};
	xor.b64  	%rd5845, %rd5843, %rd5844;
	xor.b64  	%rd5846, %rd5805, %rd5781;
	and.b64  	%rd5847, %rd5829, %rd5846;
	xor.b64  	%rd5848, %rd5847, %rd5781;
	ld.local.u64 	%rd18677, [%rd1+88];
	add.s64 	%rd5849, %rd407, %rd18677;
	add.s64 	%rd5850, %rd5849, %rd18607;
	add.s64 	%rd5851, %rd5850, %rd5848;
	add.s64 	%rd5852, %rd5851, %rd5845;
	add.s64 	%rd5853, %rd5852, %rd413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3685,%dummy}, %rd5840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3686}, %rd5840;
	}
	shf.r.wrap.b32 	%r3687, %r3686, %r3685, 28;
	shf.r.wrap.b32 	%r3688, %r3685, %r3686, 28;
	mov.b64 	%rd5854, {%r3688, %r3687};
	shf.l.wrap.b32 	%r3689, %r3685, %r3686, 30;
	shf.l.wrap.b32 	%r3690, %r3686, %r3685, 30;
	mov.b64 	%rd5855, {%r3690, %r3689};
	xor.b64  	%rd5856, %rd5855, %rd5854;
	shf.l.wrap.b32 	%r3691, %r3685, %r3686, 25;
	shf.l.wrap.b32 	%r3692, %r3686, %r3685, 25;
	mov.b64 	%rd5857, {%r3692, %r3691};
	xor.b64  	%rd5858, %rd5856, %rd5857;
	and.b64  	%rd5859, %rd5840, %rd5816;
	xor.b64  	%rd5860, %rd5840, %rd5816;
	and.b64  	%rd5861, %rd5860, %rd5792;
	or.b64  	%rd5862, %rd5861, %rd5859;
	add.s64 	%rd5863, %rd5852, %rd5862;
	add.s64 	%rd5864, %rd5863, %rd5858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3693,%dummy}, %rd5853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3694}, %rd5853;
	}
	shf.r.wrap.b32 	%r3695, %r3694, %r3693, 14;
	shf.r.wrap.b32 	%r3696, %r3693, %r3694, 14;
	mov.b64 	%rd5865, {%r3696, %r3695};
	shf.r.wrap.b32 	%r3697, %r3694, %r3693, 18;
	shf.r.wrap.b32 	%r3698, %r3693, %r3694, 18;
	mov.b64 	%rd5866, {%r3698, %r3697};
	xor.b64  	%rd5867, %rd5866, %rd5865;
	shf.l.wrap.b32 	%r3699, %r3693, %r3694, 23;
	shf.l.wrap.b32 	%r3700, %r3694, %r3693, 23;
	mov.b64 	%rd5868, {%r3700, %r3699};
	xor.b64  	%rd5869, %rd5867, %rd5868;
	xor.b64  	%rd5870, %rd5829, %rd5805;
	and.b64  	%rd5871, %rd5853, %rd5870;
	xor.b64  	%rd5872, %rd5871, %rd5805;
	ld.local.u64 	%rd18678, [%rd1+96];
	add.s64 	%rd5873, %rd5781, %rd18678;
	add.s64 	%rd5874, %rd5873, %rd18606;
	add.s64 	%rd5875, %rd5874, %rd5872;
	add.s64 	%rd5876, %rd5875, %rd5869;
	add.s64 	%rd5877, %rd5876, %rd5792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3701,%dummy}, %rd5864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3702}, %rd5864;
	}
	shf.r.wrap.b32 	%r3703, %r3702, %r3701, 28;
	shf.r.wrap.b32 	%r3704, %r3701, %r3702, 28;
	mov.b64 	%rd5878, {%r3704, %r3703};
	shf.l.wrap.b32 	%r3705, %r3701, %r3702, 30;
	shf.l.wrap.b32 	%r3706, %r3702, %r3701, 30;
	mov.b64 	%rd5879, {%r3706, %r3705};
	xor.b64  	%rd5880, %rd5879, %rd5878;
	shf.l.wrap.b32 	%r3707, %r3701, %r3702, 25;
	shf.l.wrap.b32 	%r3708, %r3702, %r3701, 25;
	mov.b64 	%rd5881, {%r3708, %r3707};
	xor.b64  	%rd5882, %rd5880, %rd5881;
	and.b64  	%rd5883, %rd5864, %rd5840;
	xor.b64  	%rd5884, %rd5864, %rd5840;
	and.b64  	%rd5885, %rd5884, %rd5816;
	or.b64  	%rd5886, %rd5885, %rd5883;
	add.s64 	%rd5887, %rd5876, %rd5886;
	add.s64 	%rd5888, %rd5887, %rd5882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3709,%dummy}, %rd5877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3710}, %rd5877;
	}
	shf.r.wrap.b32 	%r3711, %r3710, %r3709, 14;
	shf.r.wrap.b32 	%r3712, %r3709, %r3710, 14;
	mov.b64 	%rd5889, {%r3712, %r3711};
	shf.r.wrap.b32 	%r3713, %r3710, %r3709, 18;
	shf.r.wrap.b32 	%r3714, %r3709, %r3710, 18;
	mov.b64 	%rd5890, {%r3714, %r3713};
	xor.b64  	%rd5891, %rd5890, %rd5889;
	shf.l.wrap.b32 	%r3715, %r3709, %r3710, 23;
	shf.l.wrap.b32 	%r3716, %r3710, %r3709, 23;
	mov.b64 	%rd5892, {%r3716, %r3715};
	xor.b64  	%rd5893, %rd5891, %rd5892;
	xor.b64  	%rd5894, %rd5853, %rd5829;
	and.b64  	%rd5895, %rd5877, %rd5894;
	xor.b64  	%rd5896, %rd5895, %rd5829;
	ld.local.u64 	%rd18679, [%rd1+104];
	add.s64 	%rd5897, %rd5805, %rd18679;
	add.s64 	%rd5898, %rd5897, %rd18605;
	add.s64 	%rd5899, %rd5898, %rd5896;
	add.s64 	%rd5900, %rd5899, %rd5893;
	add.s64 	%rd5901, %rd5900, %rd5816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3717,%dummy}, %rd5888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3718}, %rd5888;
	}
	shf.r.wrap.b32 	%r3719, %r3718, %r3717, 28;
	shf.r.wrap.b32 	%r3720, %r3717, %r3718, 28;
	mov.b64 	%rd5902, {%r3720, %r3719};
	shf.l.wrap.b32 	%r3721, %r3717, %r3718, 30;
	shf.l.wrap.b32 	%r3722, %r3718, %r3717, 30;
	mov.b64 	%rd5903, {%r3722, %r3721};
	xor.b64  	%rd5904, %rd5903, %rd5902;
	shf.l.wrap.b32 	%r3723, %r3717, %r3718, 25;
	shf.l.wrap.b32 	%r3724, %r3718, %r3717, 25;
	mov.b64 	%rd5905, {%r3724, %r3723};
	xor.b64  	%rd5906, %rd5904, %rd5905;
	and.b64  	%rd5907, %rd5888, %rd5864;
	xor.b64  	%rd5908, %rd5888, %rd5864;
	and.b64  	%rd5909, %rd5908, %rd5840;
	or.b64  	%rd5910, %rd5909, %rd5907;
	add.s64 	%rd5911, %rd5900, %rd5910;
	add.s64 	%rd5912, %rd5911, %rd5906;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3725,%dummy}, %rd5901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3726}, %rd5901;
	}
	shf.r.wrap.b32 	%r3727, %r3726, %r3725, 14;
	shf.r.wrap.b32 	%r3728, %r3725, %r3726, 14;
	mov.b64 	%rd5913, {%r3728, %r3727};
	shf.r.wrap.b32 	%r3729, %r3726, %r3725, 18;
	shf.r.wrap.b32 	%r3730, %r3725, %r3726, 18;
	mov.b64 	%rd5914, {%r3730, %r3729};
	xor.b64  	%rd5915, %rd5914, %rd5913;
	shf.l.wrap.b32 	%r3731, %r3725, %r3726, 23;
	shf.l.wrap.b32 	%r3732, %r3726, %r3725, 23;
	mov.b64 	%rd5916, {%r3732, %r3731};
	xor.b64  	%rd5917, %rd5915, %rd5916;
	xor.b64  	%rd5918, %rd5877, %rd5853;
	and.b64  	%rd5919, %rd5901, %rd5918;
	xor.b64  	%rd5920, %rd5919, %rd5853;
	ld.local.u64 	%rd18680, [%rd1+112];
	add.s64 	%rd5921, %rd5829, %rd18680;
	add.s64 	%rd5922, %rd5921, %rd18604;
	add.s64 	%rd5923, %rd5922, %rd5920;
	add.s64 	%rd5924, %rd5923, %rd5917;
	add.s64 	%rd5925, %rd5924, %rd5840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3733,%dummy}, %rd5912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3734}, %rd5912;
	}
	shf.r.wrap.b32 	%r3735, %r3734, %r3733, 28;
	shf.r.wrap.b32 	%r3736, %r3733, %r3734, 28;
	mov.b64 	%rd5926, {%r3736, %r3735};
	shf.l.wrap.b32 	%r3737, %r3733, %r3734, 30;
	shf.l.wrap.b32 	%r3738, %r3734, %r3733, 30;
	mov.b64 	%rd5927, {%r3738, %r3737};
	xor.b64  	%rd5928, %rd5927, %rd5926;
	shf.l.wrap.b32 	%r3739, %r3733, %r3734, 25;
	shf.l.wrap.b32 	%r3740, %r3734, %r3733, 25;
	mov.b64 	%rd5929, {%r3740, %r3739};
	xor.b64  	%rd5930, %rd5928, %rd5929;
	and.b64  	%rd5931, %rd5912, %rd5888;
	xor.b64  	%rd5932, %rd5912, %rd5888;
	and.b64  	%rd5933, %rd5932, %rd5864;
	or.b64  	%rd5934, %rd5933, %rd5931;
	add.s64 	%rd5935, %rd5924, %rd5934;
	add.s64 	%rd5936, %rd5935, %rd5930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3741,%dummy}, %rd5925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3742}, %rd5925;
	}
	shf.r.wrap.b32 	%r3743, %r3742, %r3741, 14;
	shf.r.wrap.b32 	%r3744, %r3741, %r3742, 14;
	mov.b64 	%rd5937, {%r3744, %r3743};
	shf.r.wrap.b32 	%r3745, %r3742, %r3741, 18;
	shf.r.wrap.b32 	%r3746, %r3741, %r3742, 18;
	mov.b64 	%rd5938, {%r3746, %r3745};
	xor.b64  	%rd5939, %rd5938, %rd5937;
	shf.l.wrap.b32 	%r3747, %r3741, %r3742, 23;
	shf.l.wrap.b32 	%r3748, %r3742, %r3741, 23;
	mov.b64 	%rd5940, {%r3748, %r3747};
	xor.b64  	%rd5941, %rd5939, %rd5940;
	xor.b64  	%rd5942, %rd5901, %rd5877;
	and.b64  	%rd5943, %rd5925, %rd5942;
	xor.b64  	%rd5944, %rd5943, %rd5877;
	ld.local.u64 	%rd18681, [%rd1+120];
	add.s64 	%rd5945, %rd5853, %rd18681;
	add.s64 	%rd5946, %rd5945, %rd18603;
	add.s64 	%rd5947, %rd5946, %rd5944;
	add.s64 	%rd5948, %rd5947, %rd5941;
	add.s64 	%rd5949, %rd5948, %rd5864;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3749,%dummy}, %rd5936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3750}, %rd5936;
	}
	shf.r.wrap.b32 	%r3751, %r3750, %r3749, 28;
	shf.r.wrap.b32 	%r3752, %r3749, %r3750, 28;
	mov.b64 	%rd5950, {%r3752, %r3751};
	shf.l.wrap.b32 	%r3753, %r3749, %r3750, 30;
	shf.l.wrap.b32 	%r3754, %r3750, %r3749, 30;
	mov.b64 	%rd5951, {%r3754, %r3753};
	xor.b64  	%rd5952, %rd5951, %rd5950;
	shf.l.wrap.b32 	%r3755, %r3749, %r3750, 25;
	shf.l.wrap.b32 	%r3756, %r3750, %r3749, 25;
	mov.b64 	%rd5953, {%r3756, %r3755};
	xor.b64  	%rd5954, %rd5952, %rd5953;
	and.b64  	%rd5955, %rd5936, %rd5912;
	xor.b64  	%rd5956, %rd5936, %rd5912;
	and.b64  	%rd5957, %rd5956, %rd5888;
	or.b64  	%rd5958, %rd5957, %rd5955;
	add.s64 	%rd5959, %rd5948, %rd5958;
	add.s64 	%rd5960, %rd5959, %rd5954;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3757,%dummy}, %rd5949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3758}, %rd5949;
	}
	shf.r.wrap.b32 	%r3759, %r3758, %r3757, 14;
	shf.r.wrap.b32 	%r3760, %r3757, %r3758, 14;
	mov.b64 	%rd5961, {%r3760, %r3759};
	shf.r.wrap.b32 	%r3761, %r3758, %r3757, 18;
	shf.r.wrap.b32 	%r3762, %r3757, %r3758, 18;
	mov.b64 	%rd5962, {%r3762, %r3761};
	xor.b64  	%rd5963, %rd5962, %rd5961;
	shf.l.wrap.b32 	%r3763, %r3757, %r3758, 23;
	shf.l.wrap.b32 	%r3764, %r3758, %r3757, 23;
	mov.b64 	%rd5964, {%r3764, %r3763};
	xor.b64  	%rd5965, %rd5963, %rd5964;
	xor.b64  	%rd5966, %rd5925, %rd5901;
	and.b64  	%rd5967, %rd5949, %rd5966;
	xor.b64  	%rd5968, %rd5967, %rd5901;
	ld.local.u64 	%rd18665, [%rd1+128];
	add.s64 	%rd5969, %rd5877, %rd18665;
	add.s64 	%rd5970, %rd5969, %rd18602;
	add.s64 	%rd5971, %rd5970, %rd5968;
	add.s64 	%rd5972, %rd5971, %rd5965;
	add.s64 	%rd5973, %rd5972, %rd5888;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3765,%dummy}, %rd5960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3766}, %rd5960;
	}
	shf.r.wrap.b32 	%r3767, %r3766, %r3765, 28;
	shf.r.wrap.b32 	%r3768, %r3765, %r3766, 28;
	mov.b64 	%rd5974, {%r3768, %r3767};
	shf.l.wrap.b32 	%r3769, %r3765, %r3766, 30;
	shf.l.wrap.b32 	%r3770, %r3766, %r3765, 30;
	mov.b64 	%rd5975, {%r3770, %r3769};
	xor.b64  	%rd5976, %rd5975, %rd5974;
	shf.l.wrap.b32 	%r3771, %r3765, %r3766, 25;
	shf.l.wrap.b32 	%r3772, %r3766, %r3765, 25;
	mov.b64 	%rd5977, {%r3772, %r3771};
	xor.b64  	%rd5978, %rd5976, %rd5977;
	and.b64  	%rd5979, %rd5960, %rd5936;
	xor.b64  	%rd5980, %rd5960, %rd5936;
	and.b64  	%rd5981, %rd5980, %rd5912;
	or.b64  	%rd5982, %rd5981, %rd5979;
	add.s64 	%rd5983, %rd5972, %rd5982;
	add.s64 	%rd5984, %rd5983, %rd5978;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3773,%dummy}, %rd5973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3774}, %rd5973;
	}
	shf.r.wrap.b32 	%r3775, %r3774, %r3773, 14;
	shf.r.wrap.b32 	%r3776, %r3773, %r3774, 14;
	mov.b64 	%rd5985, {%r3776, %r3775};
	shf.r.wrap.b32 	%r3777, %r3774, %r3773, 18;
	shf.r.wrap.b32 	%r3778, %r3773, %r3774, 18;
	mov.b64 	%rd5986, {%r3778, %r3777};
	xor.b64  	%rd5987, %rd5986, %rd5985;
	shf.l.wrap.b32 	%r3779, %r3773, %r3774, 23;
	shf.l.wrap.b32 	%r3780, %r3774, %r3773, 23;
	mov.b64 	%rd5988, {%r3780, %r3779};
	xor.b64  	%rd5989, %rd5987, %rd5988;
	xor.b64  	%rd5990, %rd5949, %rd5925;
	and.b64  	%rd5991, %rd5973, %rd5990;
	xor.b64  	%rd5992, %rd5991, %rd5925;
	ld.local.u64 	%rd18664, [%rd1+136];
	add.s64 	%rd5993, %rd5901, %rd18664;
	add.s64 	%rd5994, %rd5993, %rd18601;
	add.s64 	%rd5995, %rd5994, %rd5992;
	add.s64 	%rd5996, %rd5995, %rd5989;
	add.s64 	%rd5997, %rd5996, %rd5912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3781,%dummy}, %rd5984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3782}, %rd5984;
	}
	shf.r.wrap.b32 	%r3783, %r3782, %r3781, 28;
	shf.r.wrap.b32 	%r3784, %r3781, %r3782, 28;
	mov.b64 	%rd5998, {%r3784, %r3783};
	shf.l.wrap.b32 	%r3785, %r3781, %r3782, 30;
	shf.l.wrap.b32 	%r3786, %r3782, %r3781, 30;
	mov.b64 	%rd5999, {%r3786, %r3785};
	xor.b64  	%rd6000, %rd5999, %rd5998;
	shf.l.wrap.b32 	%r3787, %r3781, %r3782, 25;
	shf.l.wrap.b32 	%r3788, %r3782, %r3781, 25;
	mov.b64 	%rd6001, {%r3788, %r3787};
	xor.b64  	%rd6002, %rd6000, %rd6001;
	and.b64  	%rd6003, %rd5984, %rd5960;
	xor.b64  	%rd6004, %rd5984, %rd5960;
	and.b64  	%rd6005, %rd6004, %rd5936;
	or.b64  	%rd6006, %rd6005, %rd6003;
	add.s64 	%rd6007, %rd5996, %rd6006;
	add.s64 	%rd6008, %rd6007, %rd6002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3789,%dummy}, %rd5997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3790}, %rd5997;
	}
	shf.r.wrap.b32 	%r3791, %r3790, %r3789, 14;
	shf.r.wrap.b32 	%r3792, %r3789, %r3790, 14;
	mov.b64 	%rd6009, {%r3792, %r3791};
	shf.r.wrap.b32 	%r3793, %r3790, %r3789, 18;
	shf.r.wrap.b32 	%r3794, %r3789, %r3790, 18;
	mov.b64 	%rd6010, {%r3794, %r3793};
	xor.b64  	%rd6011, %rd6010, %rd6009;
	shf.l.wrap.b32 	%r3795, %r3789, %r3790, 23;
	shf.l.wrap.b32 	%r3796, %r3790, %r3789, 23;
	mov.b64 	%rd6012, {%r3796, %r3795};
	xor.b64  	%rd6013, %rd6011, %rd6012;
	xor.b64  	%rd6014, %rd5973, %rd5949;
	and.b64  	%rd6015, %rd5997, %rd6014;
	xor.b64  	%rd6016, %rd6015, %rd5949;
	ld.local.u64 	%rd18663, [%rd1+144];
	add.s64 	%rd6017, %rd5925, %rd18663;
	add.s64 	%rd6018, %rd6017, %rd18600;
	add.s64 	%rd6019, %rd6018, %rd6016;
	add.s64 	%rd6020, %rd6019, %rd6013;
	add.s64 	%rd6021, %rd6020, %rd5936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3797,%dummy}, %rd6008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3798}, %rd6008;
	}
	shf.r.wrap.b32 	%r3799, %r3798, %r3797, 28;
	shf.r.wrap.b32 	%r3800, %r3797, %r3798, 28;
	mov.b64 	%rd6022, {%r3800, %r3799};
	shf.l.wrap.b32 	%r3801, %r3797, %r3798, 30;
	shf.l.wrap.b32 	%r3802, %r3798, %r3797, 30;
	mov.b64 	%rd6023, {%r3802, %r3801};
	xor.b64  	%rd6024, %rd6023, %rd6022;
	shf.l.wrap.b32 	%r3803, %r3797, %r3798, 25;
	shf.l.wrap.b32 	%r3804, %r3798, %r3797, 25;
	mov.b64 	%rd6025, {%r3804, %r3803};
	xor.b64  	%rd6026, %rd6024, %rd6025;
	and.b64  	%rd6027, %rd6008, %rd5984;
	xor.b64  	%rd6028, %rd6008, %rd5984;
	and.b64  	%rd6029, %rd6028, %rd5960;
	or.b64  	%rd6030, %rd6029, %rd6027;
	add.s64 	%rd6031, %rd6020, %rd6030;
	add.s64 	%rd6032, %rd6031, %rd6026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3805,%dummy}, %rd6021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3806}, %rd6021;
	}
	shf.r.wrap.b32 	%r3807, %r3806, %r3805, 14;
	shf.r.wrap.b32 	%r3808, %r3805, %r3806, 14;
	mov.b64 	%rd6033, {%r3808, %r3807};
	shf.r.wrap.b32 	%r3809, %r3806, %r3805, 18;
	shf.r.wrap.b32 	%r3810, %r3805, %r3806, 18;
	mov.b64 	%rd6034, {%r3810, %r3809};
	xor.b64  	%rd6035, %rd6034, %rd6033;
	shf.l.wrap.b32 	%r3811, %r3805, %r3806, 23;
	shf.l.wrap.b32 	%r3812, %r3806, %r3805, 23;
	mov.b64 	%rd6036, {%r3812, %r3811};
	xor.b64  	%rd6037, %rd6035, %rd6036;
	xor.b64  	%rd6038, %rd5997, %rd5973;
	and.b64  	%rd6039, %rd6021, %rd6038;
	xor.b64  	%rd6040, %rd6039, %rd5973;
	ld.local.u64 	%rd18662, [%rd1+152];
	add.s64 	%rd6041, %rd5949, %rd18662;
	add.s64 	%rd6042, %rd6041, %rd18599;
	add.s64 	%rd6043, %rd6042, %rd6040;
	add.s64 	%rd6044, %rd6043, %rd6037;
	add.s64 	%rd6045, %rd6044, %rd5960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3813,%dummy}, %rd6032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3814}, %rd6032;
	}
	shf.r.wrap.b32 	%r3815, %r3814, %r3813, 28;
	shf.r.wrap.b32 	%r3816, %r3813, %r3814, 28;
	mov.b64 	%rd6046, {%r3816, %r3815};
	shf.l.wrap.b32 	%r3817, %r3813, %r3814, 30;
	shf.l.wrap.b32 	%r3818, %r3814, %r3813, 30;
	mov.b64 	%rd6047, {%r3818, %r3817};
	xor.b64  	%rd6048, %rd6047, %rd6046;
	shf.l.wrap.b32 	%r3819, %r3813, %r3814, 25;
	shf.l.wrap.b32 	%r3820, %r3814, %r3813, 25;
	mov.b64 	%rd6049, {%r3820, %r3819};
	xor.b64  	%rd6050, %rd6048, %rd6049;
	and.b64  	%rd6051, %rd6032, %rd6008;
	xor.b64  	%rd6052, %rd6032, %rd6008;
	and.b64  	%rd6053, %rd6052, %rd5984;
	or.b64  	%rd6054, %rd6053, %rd6051;
	add.s64 	%rd6055, %rd6044, %rd6054;
	add.s64 	%rd6056, %rd6055, %rd6050;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3821,%dummy}, %rd6045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3822}, %rd6045;
	}
	shf.r.wrap.b32 	%r3823, %r3822, %r3821, 14;
	shf.r.wrap.b32 	%r3824, %r3821, %r3822, 14;
	mov.b64 	%rd6057, {%r3824, %r3823};
	shf.r.wrap.b32 	%r3825, %r3822, %r3821, 18;
	shf.r.wrap.b32 	%r3826, %r3821, %r3822, 18;
	mov.b64 	%rd6058, {%r3826, %r3825};
	xor.b64  	%rd6059, %rd6058, %rd6057;
	shf.l.wrap.b32 	%r3827, %r3821, %r3822, 23;
	shf.l.wrap.b32 	%r3828, %r3822, %r3821, 23;
	mov.b64 	%rd6060, {%r3828, %r3827};
	xor.b64  	%rd6061, %rd6059, %rd6060;
	xor.b64  	%rd6062, %rd6021, %rd5997;
	and.b64  	%rd6063, %rd6045, %rd6062;
	xor.b64  	%rd6064, %rd6063, %rd5997;
	ld.local.u64 	%rd18661, [%rd1+160];
	add.s64 	%rd6065, %rd5973, %rd18661;
	add.s64 	%rd6066, %rd6065, %rd18598;
	add.s64 	%rd6067, %rd6066, %rd6064;
	add.s64 	%rd6068, %rd6067, %rd6061;
	add.s64 	%rd18673, %rd6068, %rd5984;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3829,%dummy}, %rd6056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3830}, %rd6056;
	}
	shf.r.wrap.b32 	%r3831, %r3830, %r3829, 28;
	shf.r.wrap.b32 	%r3832, %r3829, %r3830, 28;
	mov.b64 	%rd6069, {%r3832, %r3831};
	shf.l.wrap.b32 	%r3833, %r3829, %r3830, 30;
	shf.l.wrap.b32 	%r3834, %r3830, %r3829, 30;
	mov.b64 	%rd6070, {%r3834, %r3833};
	xor.b64  	%rd6071, %rd6070, %rd6069;
	shf.l.wrap.b32 	%r3835, %r3829, %r3830, 25;
	shf.l.wrap.b32 	%r3836, %r3830, %r3829, 25;
	mov.b64 	%rd6072, {%r3836, %r3835};
	xor.b64  	%rd6073, %rd6071, %rd6072;
	and.b64  	%rd6074, %rd6056, %rd6032;
	xor.b64  	%rd6075, %rd6056, %rd6032;
	and.b64  	%rd6076, %rd6075, %rd6008;
	or.b64  	%rd6077, %rd6076, %rd6074;
	add.s64 	%rd6078, %rd6068, %rd6077;
	add.s64 	%rd18669, %rd6078, %rd6073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3837,%dummy}, %rd18673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3838}, %rd18673;
	}
	shf.r.wrap.b32 	%r3839, %r3838, %r3837, 14;
	shf.r.wrap.b32 	%r3840, %r3837, %r3838, 14;
	mov.b64 	%rd6079, {%r3840, %r3839};
	shf.r.wrap.b32 	%r3841, %r3838, %r3837, 18;
	shf.r.wrap.b32 	%r3842, %r3837, %r3838, 18;
	mov.b64 	%rd6080, {%r3842, %r3841};
	xor.b64  	%rd6081, %rd6080, %rd6079;
	shf.l.wrap.b32 	%r3843, %r3837, %r3838, 23;
	shf.l.wrap.b32 	%r3844, %r3838, %r3837, 23;
	mov.b64 	%rd6082, {%r3844, %r3843};
	xor.b64  	%rd6083, %rd6081, %rd6082;
	xor.b64  	%rd6084, %rd6045, %rd6021;
	and.b64  	%rd6085, %rd18673, %rd6084;
	xor.b64  	%rd6086, %rd6085, %rd6021;
	ld.local.u64 	%rd18660, [%rd1+168];
	add.s64 	%rd6087, %rd5997, %rd18660;
	add.s64 	%rd6088, %rd6087, %rd18597;
	add.s64 	%rd6089, %rd6088, %rd6086;
	add.s64 	%rd6090, %rd6089, %rd6083;
	add.s64 	%rd18672, %rd6090, %rd6008;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3845,%dummy}, %rd18669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3846}, %rd18669;
	}
	shf.r.wrap.b32 	%r3847, %r3846, %r3845, 28;
	shf.r.wrap.b32 	%r3848, %r3845, %r3846, 28;
	mov.b64 	%rd6091, {%r3848, %r3847};
	shf.l.wrap.b32 	%r3849, %r3845, %r3846, 30;
	shf.l.wrap.b32 	%r3850, %r3846, %r3845, 30;
	mov.b64 	%rd6092, {%r3850, %r3849};
	xor.b64  	%rd6093, %rd6092, %rd6091;
	shf.l.wrap.b32 	%r3851, %r3845, %r3846, 25;
	shf.l.wrap.b32 	%r3852, %r3846, %r3845, 25;
	mov.b64 	%rd6094, {%r3852, %r3851};
	xor.b64  	%rd6095, %rd6093, %rd6094;
	and.b64  	%rd6096, %rd18669, %rd6056;
	xor.b64  	%rd6097, %rd18669, %rd6056;
	and.b64  	%rd6098, %rd6097, %rd6032;
	or.b64  	%rd6099, %rd6098, %rd6096;
	add.s64 	%rd6100, %rd6090, %rd6099;
	add.s64 	%rd18668, %rd6100, %rd6095;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3853,%dummy}, %rd18672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3854}, %rd18672;
	}
	shf.r.wrap.b32 	%r3855, %r3854, %r3853, 14;
	shf.r.wrap.b32 	%r3856, %r3853, %r3854, 14;
	mov.b64 	%rd6101, {%r3856, %r3855};
	shf.r.wrap.b32 	%r3857, %r3854, %r3853, 18;
	shf.r.wrap.b32 	%r3858, %r3853, %r3854, 18;
	mov.b64 	%rd6102, {%r3858, %r3857};
	xor.b64  	%rd6103, %rd6102, %rd6101;
	shf.l.wrap.b32 	%r3859, %r3853, %r3854, 23;
	shf.l.wrap.b32 	%r3860, %r3854, %r3853, 23;
	mov.b64 	%rd6104, {%r3860, %r3859};
	xor.b64  	%rd6105, %rd6103, %rd6104;
	xor.b64  	%rd6106, %rd18673, %rd6045;
	and.b64  	%rd6107, %rd18672, %rd6106;
	xor.b64  	%rd6108, %rd6107, %rd6045;
	ld.local.u64 	%rd18659, [%rd1+176];
	add.s64 	%rd6109, %rd6021, %rd18659;
	add.s64 	%rd6110, %rd6109, %rd18596;
	add.s64 	%rd6111, %rd6110, %rd6108;
	add.s64 	%rd6112, %rd6111, %rd6105;
	add.s64 	%rd18671, %rd6112, %rd6032;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3861,%dummy}, %rd18668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3862}, %rd18668;
	}
	shf.r.wrap.b32 	%r3863, %r3862, %r3861, 28;
	shf.r.wrap.b32 	%r3864, %r3861, %r3862, 28;
	mov.b64 	%rd6113, {%r3864, %r3863};
	shf.l.wrap.b32 	%r3865, %r3861, %r3862, 30;
	shf.l.wrap.b32 	%r3866, %r3862, %r3861, 30;
	mov.b64 	%rd6114, {%r3866, %r3865};
	xor.b64  	%rd6115, %rd6114, %rd6113;
	shf.l.wrap.b32 	%r3867, %r3861, %r3862, 25;
	shf.l.wrap.b32 	%r3868, %r3862, %r3861, 25;
	mov.b64 	%rd6116, {%r3868, %r3867};
	xor.b64  	%rd6117, %rd6115, %rd6116;
	and.b64  	%rd6118, %rd18668, %rd18669;
	xor.b64  	%rd6119, %rd18668, %rd18669;
	and.b64  	%rd6120, %rd6119, %rd6056;
	or.b64  	%rd6121, %rd6120, %rd6118;
	add.s64 	%rd6122, %rd6112, %rd6121;
	add.s64 	%rd18667, %rd6122, %rd6117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3869,%dummy}, %rd18671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3870}, %rd18671;
	}
	shf.r.wrap.b32 	%r3871, %r3870, %r3869, 14;
	shf.r.wrap.b32 	%r3872, %r3869, %r3870, 14;
	mov.b64 	%rd6123, {%r3872, %r3871};
	shf.r.wrap.b32 	%r3873, %r3870, %r3869, 18;
	shf.r.wrap.b32 	%r3874, %r3869, %r3870, 18;
	mov.b64 	%rd6124, {%r3874, %r3873};
	xor.b64  	%rd6125, %rd6124, %rd6123;
	shf.l.wrap.b32 	%r3875, %r3869, %r3870, 23;
	shf.l.wrap.b32 	%r3876, %r3870, %r3869, 23;
	mov.b64 	%rd6126, {%r3876, %r3875};
	xor.b64  	%rd6127, %rd6125, %rd6126;
	xor.b64  	%rd6128, %rd18672, %rd18673;
	and.b64  	%rd6129, %rd18671, %rd6128;
	xor.b64  	%rd6130, %rd6129, %rd18673;
	ld.local.u64 	%rd18658, [%rd1+184];
	add.s64 	%rd6131, %rd6045, %rd18658;
	add.s64 	%rd6132, %rd6131, %rd18595;
	add.s64 	%rd6133, %rd6132, %rd6130;
	add.s64 	%rd6134, %rd6133, %rd6127;
	add.s64 	%rd18670, %rd6134, %rd6056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3877,%dummy}, %rd18667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3878}, %rd18667;
	}
	shf.r.wrap.b32 	%r3879, %r3878, %r3877, 28;
	shf.r.wrap.b32 	%r3880, %r3877, %r3878, 28;
	mov.b64 	%rd6135, {%r3880, %r3879};
	shf.l.wrap.b32 	%r3881, %r3877, %r3878, 30;
	shf.l.wrap.b32 	%r3882, %r3878, %r3877, 30;
	mov.b64 	%rd6136, {%r3882, %r3881};
	xor.b64  	%rd6137, %rd6136, %rd6135;
	shf.l.wrap.b32 	%r3883, %r3877, %r3878, 25;
	shf.l.wrap.b32 	%r3884, %r3878, %r3877, 25;
	mov.b64 	%rd6138, {%r3884, %r3883};
	xor.b64  	%rd6139, %rd6137, %rd6138;
	and.b64  	%rd6140, %rd18667, %rd18668;
	xor.b64  	%rd6141, %rd18667, %rd18668;
	and.b64  	%rd6142, %rd6141, %rd18669;
	or.b64  	%rd6143, %rd6142, %rd6140;
	add.s64 	%rd6144, %rd6134, %rd6143;
	add.s64 	%rd18666, %rd6144, %rd6139;
	mov.u32 	%r12938, 16;

BB0_108:
	mov.u64 	%rd18522, k_sha512;
	shr.u64 	%rd6145, %rd18659, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3885,%dummy}, %rd18659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3886}, %rd18659;
	}
	shf.r.wrap.b32 	%r3887, %r3886, %r3885, 19;
	shf.r.wrap.b32 	%r3888, %r3885, %r3886, 19;
	mov.b64 	%rd6146, {%r3888, %r3887};
	xor.b64  	%rd6147, %rd6146, %rd6145;
	shf.l.wrap.b32 	%r3889, %r3885, %r3886, 3;
	shf.l.wrap.b32 	%r3890, %r3886, %r3885, 3;
	mov.b64 	%rd6148, {%r3890, %r3889};
	xor.b64  	%rd6149, %rd6147, %rd6148;
	shr.u64 	%rd6150, %rd18675, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3891,%dummy}, %rd18675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3892}, %rd18675;
	}
	shf.r.wrap.b32 	%r3893, %r3892, %r3891, 1;
	shf.r.wrap.b32 	%r3894, %r3891, %r3892, 1;
	mov.b64 	%rd6151, {%r3894, %r3893};
	xor.b64  	%rd6152, %rd6151, %rd6150;
	shf.r.wrap.b32 	%r3895, %r3892, %r3891, 8;
	shf.r.wrap.b32 	%r3896, %r3891, %r3892, 8;
	mov.b64 	%rd6153, {%r3896, %r3895};
	xor.b64  	%rd6154, %rd6152, %rd6153;
	add.s64 	%rd6155, %rd18664, %rd18674;
	add.s64 	%rd6156, %rd6155, %rd6149;
	add.s64 	%rd18674, %rd6156, %rd6154;
	shr.u64 	%rd6157, %rd18658, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3897,%dummy}, %rd18658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3898}, %rd18658;
	}
	shf.r.wrap.b32 	%r3899, %r3898, %r3897, 19;
	shf.r.wrap.b32 	%r3900, %r3897, %r3898, 19;
	mov.b64 	%rd6158, {%r3900, %r3899};
	xor.b64  	%rd6159, %rd6158, %rd6157;
	shf.l.wrap.b32 	%r3901, %r3897, %r3898, 3;
	shf.l.wrap.b32 	%r3902, %r3898, %r3897, 3;
	mov.b64 	%rd6160, {%r3902, %r3901};
	xor.b64  	%rd6161, %rd6159, %rd6160;
	shr.u64 	%rd6162, %rd18676, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3903,%dummy}, %rd18676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3904}, %rd18676;
	}
	shf.r.wrap.b32 	%r3905, %r3904, %r3903, 1;
	shf.r.wrap.b32 	%r3906, %r3903, %r3904, 1;
	mov.b64 	%rd6163, {%r3906, %r3905};
	xor.b64  	%rd6164, %rd6163, %rd6162;
	shf.r.wrap.b32 	%r3907, %r3904, %r3903, 8;
	shf.r.wrap.b32 	%r3908, %r3903, %r3904, 8;
	mov.b64 	%rd6165, {%r3908, %r3907};
	xor.b64  	%rd6166, %rd6164, %rd6165;
	add.s64 	%rd6167, %rd18663, %rd18675;
	add.s64 	%rd6168, %rd6167, %rd6161;
	add.s64 	%rd18675, %rd6168, %rd6166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3909,%dummy}, %rd18674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3910}, %rd18674;
	}
	shf.r.wrap.b32 	%r3911, %r3910, %r3909, 19;
	shf.r.wrap.b32 	%r3912, %r3909, %r3910, 19;
	mov.b64 	%rd6169, {%r3912, %r3911};
	shf.l.wrap.b32 	%r3913, %r3909, %r3910, 3;
	shf.l.wrap.b32 	%r3914, %r3910, %r3909, 3;
	mov.b64 	%rd6170, {%r3914, %r3913};
	shr.u64 	%rd6171, %rd18674, 6;
	xor.b64  	%rd6172, %rd6169, %rd6171;
	xor.b64  	%rd6173, %rd6172, %rd6170;
	shr.u64 	%rd6174, %rd18677, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3915,%dummy}, %rd18677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3916}, %rd18677;
	}
	shf.r.wrap.b32 	%r3917, %r3916, %r3915, 1;
	shf.r.wrap.b32 	%r3918, %r3915, %r3916, 1;
	mov.b64 	%rd6175, {%r3918, %r3917};
	xor.b64  	%rd6176, %rd6175, %rd6174;
	shf.r.wrap.b32 	%r3919, %r3916, %r3915, 8;
	shf.r.wrap.b32 	%r3920, %r3915, %r3916, 8;
	mov.b64 	%rd6177, {%r3920, %r3919};
	xor.b64  	%rd6178, %rd6176, %rd6177;
	add.s64 	%rd6179, %rd18662, %rd18676;
	add.s64 	%rd6180, %rd6179, %rd6173;
	add.s64 	%rd18676, %rd6180, %rd6178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3921,%dummy}, %rd18675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3922}, %rd18675;
	}
	shf.r.wrap.b32 	%r3923, %r3922, %r3921, 19;
	shf.r.wrap.b32 	%r3924, %r3921, %r3922, 19;
	mov.b64 	%rd6181, {%r3924, %r3923};
	shf.l.wrap.b32 	%r3925, %r3921, %r3922, 3;
	shf.l.wrap.b32 	%r3926, %r3922, %r3921, 3;
	mov.b64 	%rd6182, {%r3926, %r3925};
	shr.u64 	%rd6183, %rd18675, 6;
	xor.b64  	%rd6184, %rd6181, %rd6183;
	xor.b64  	%rd6185, %rd6184, %rd6182;
	shr.u64 	%rd6186, %rd18678, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3927,%dummy}, %rd18678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3928}, %rd18678;
	}
	shf.r.wrap.b32 	%r3929, %r3928, %r3927, 1;
	shf.r.wrap.b32 	%r3930, %r3927, %r3928, 1;
	mov.b64 	%rd6187, {%r3930, %r3929};
	xor.b64  	%rd6188, %rd6187, %rd6186;
	shf.r.wrap.b32 	%r3931, %r3928, %r3927, 8;
	shf.r.wrap.b32 	%r3932, %r3927, %r3928, 8;
	mov.b64 	%rd6189, {%r3932, %r3931};
	xor.b64  	%rd6190, %rd6188, %rd6189;
	add.s64 	%rd6191, %rd18661, %rd18677;
	add.s64 	%rd6192, %rd6191, %rd6185;
	add.s64 	%rd18677, %rd6192, %rd6190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3933,%dummy}, %rd18676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3934}, %rd18676;
	}
	shf.r.wrap.b32 	%r3935, %r3934, %r3933, 19;
	shf.r.wrap.b32 	%r3936, %r3933, %r3934, 19;
	mov.b64 	%rd6193, {%r3936, %r3935};
	shf.l.wrap.b32 	%r3937, %r3933, %r3934, 3;
	shf.l.wrap.b32 	%r3938, %r3934, %r3933, 3;
	mov.b64 	%rd6194, {%r3938, %r3937};
	shr.u64 	%rd6195, %rd18676, 6;
	xor.b64  	%rd6196, %rd6193, %rd6195;
	xor.b64  	%rd6197, %rd6196, %rd6194;
	shr.u64 	%rd6198, %rd18679, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3939,%dummy}, %rd18679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3940}, %rd18679;
	}
	shf.r.wrap.b32 	%r3941, %r3940, %r3939, 1;
	shf.r.wrap.b32 	%r3942, %r3939, %r3940, 1;
	mov.b64 	%rd6199, {%r3942, %r3941};
	xor.b64  	%rd6200, %rd6199, %rd6198;
	shf.r.wrap.b32 	%r3943, %r3940, %r3939, 8;
	shf.r.wrap.b32 	%r3944, %r3939, %r3940, 8;
	mov.b64 	%rd6201, {%r3944, %r3943};
	xor.b64  	%rd6202, %rd6200, %rd6201;
	add.s64 	%rd6203, %rd18660, %rd18678;
	add.s64 	%rd6204, %rd6203, %rd6197;
	add.s64 	%rd18678, %rd6204, %rd6202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3945,%dummy}, %rd18677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3946}, %rd18677;
	}
	shf.r.wrap.b32 	%r3947, %r3946, %r3945, 19;
	shf.r.wrap.b32 	%r3948, %r3945, %r3946, 19;
	mov.b64 	%rd6205, {%r3948, %r3947};
	shf.l.wrap.b32 	%r3949, %r3945, %r3946, 3;
	shf.l.wrap.b32 	%r3950, %r3946, %r3945, 3;
	mov.b64 	%rd6206, {%r3950, %r3949};
	shr.u64 	%rd6207, %rd18677, 6;
	xor.b64  	%rd6208, %rd6205, %rd6207;
	xor.b64  	%rd6209, %rd6208, %rd6206;
	shr.u64 	%rd6210, %rd18680, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3951,%dummy}, %rd18680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3952}, %rd18680;
	}
	shf.r.wrap.b32 	%r3953, %r3952, %r3951, 1;
	shf.r.wrap.b32 	%r3954, %r3951, %r3952, 1;
	mov.b64 	%rd6211, {%r3954, %r3953};
	xor.b64  	%rd6212, %rd6211, %rd6210;
	shf.r.wrap.b32 	%r3955, %r3952, %r3951, 8;
	shf.r.wrap.b32 	%r3956, %r3951, %r3952, 8;
	mov.b64 	%rd6213, {%r3956, %r3955};
	xor.b64  	%rd6214, %rd6212, %rd6213;
	add.s64 	%rd6215, %rd18659, %rd18679;
	add.s64 	%rd6216, %rd6215, %rd6209;
	add.s64 	%rd18679, %rd6216, %rd6214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3957,%dummy}, %rd18678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3958}, %rd18678;
	}
	shf.r.wrap.b32 	%r3959, %r3958, %r3957, 19;
	shf.r.wrap.b32 	%r3960, %r3957, %r3958, 19;
	mov.b64 	%rd6217, {%r3960, %r3959};
	shf.l.wrap.b32 	%r3961, %r3957, %r3958, 3;
	shf.l.wrap.b32 	%r3962, %r3958, %r3957, 3;
	mov.b64 	%rd6218, {%r3962, %r3961};
	shr.u64 	%rd6219, %rd18678, 6;
	xor.b64  	%rd6220, %rd6217, %rd6219;
	xor.b64  	%rd6221, %rd6220, %rd6218;
	shr.u64 	%rd6222, %rd18681, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3963,%dummy}, %rd18681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3964}, %rd18681;
	}
	shf.r.wrap.b32 	%r3965, %r3964, %r3963, 1;
	shf.r.wrap.b32 	%r3966, %r3963, %r3964, 1;
	mov.b64 	%rd6223, {%r3966, %r3965};
	xor.b64  	%rd6224, %rd6223, %rd6222;
	shf.r.wrap.b32 	%r3967, %r3964, %r3963, 8;
	shf.r.wrap.b32 	%r3968, %r3963, %r3964, 8;
	mov.b64 	%rd6225, {%r3968, %r3967};
	xor.b64  	%rd6226, %rd6224, %rd6225;
	add.s64 	%rd6227, %rd18658, %rd18680;
	add.s64 	%rd6228, %rd6227, %rd6221;
	add.s64 	%rd18680, %rd6228, %rd6226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3969,%dummy}, %rd18679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3970}, %rd18679;
	}
	shf.r.wrap.b32 	%r3971, %r3970, %r3969, 19;
	shf.r.wrap.b32 	%r3972, %r3969, %r3970, 19;
	mov.b64 	%rd6229, {%r3972, %r3971};
	shf.l.wrap.b32 	%r3973, %r3969, %r3970, 3;
	shf.l.wrap.b32 	%r3974, %r3970, %r3969, 3;
	mov.b64 	%rd6230, {%r3974, %r3973};
	shr.u64 	%rd6231, %rd18679, 6;
	xor.b64  	%rd6232, %rd6229, %rd6231;
	xor.b64  	%rd6233, %rd6232, %rd6230;
	shr.u64 	%rd6234, %rd18665, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3975,%dummy}, %rd18665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3976}, %rd18665;
	}
	shf.r.wrap.b32 	%r3977, %r3976, %r3975, 1;
	shf.r.wrap.b32 	%r3978, %r3975, %r3976, 1;
	mov.b64 	%rd6235, {%r3978, %r3977};
	xor.b64  	%rd6236, %rd6235, %rd6234;
	shf.r.wrap.b32 	%r3979, %r3976, %r3975, 8;
	shf.r.wrap.b32 	%r3980, %r3975, %r3976, 8;
	mov.b64 	%rd6237, {%r3980, %r3979};
	xor.b64  	%rd6238, %rd6236, %rd6237;
	add.s64 	%rd6239, %rd18674, %rd18681;
	add.s64 	%rd6240, %rd6239, %rd6233;
	add.s64 	%rd18681, %rd6240, %rd6238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3981,%dummy}, %rd18680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3982}, %rd18680;
	}
	shf.r.wrap.b32 	%r3983, %r3982, %r3981, 19;
	shf.r.wrap.b32 	%r3984, %r3981, %r3982, 19;
	mov.b64 	%rd6241, {%r3984, %r3983};
	shf.l.wrap.b32 	%r3985, %r3981, %r3982, 3;
	shf.l.wrap.b32 	%r3986, %r3982, %r3981, 3;
	mov.b64 	%rd6242, {%r3986, %r3985};
	shr.u64 	%rd6243, %rd18680, 6;
	xor.b64  	%rd6244, %rd6241, %rd6243;
	xor.b64  	%rd6245, %rd6244, %rd6242;
	shr.u64 	%rd6246, %rd18664, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3987,%dummy}, %rd18664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3988}, %rd18664;
	}
	shf.r.wrap.b32 	%r3989, %r3988, %r3987, 1;
	shf.r.wrap.b32 	%r3990, %r3987, %r3988, 1;
	mov.b64 	%rd6247, {%r3990, %r3989};
	xor.b64  	%rd6248, %rd6247, %rd6246;
	shf.r.wrap.b32 	%r3991, %r3988, %r3987, 8;
	shf.r.wrap.b32 	%r3992, %r3987, %r3988, 8;
	mov.b64 	%rd6249, {%r3992, %r3991};
	xor.b64  	%rd6250, %rd6248, %rd6249;
	add.s64 	%rd6251, %rd18675, %rd18665;
	add.s64 	%rd6252, %rd6251, %rd6245;
	add.s64 	%rd18665, %rd6252, %rd6250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3993,%dummy}, %rd18681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3994}, %rd18681;
	}
	shf.r.wrap.b32 	%r3995, %r3994, %r3993, 19;
	shf.r.wrap.b32 	%r3996, %r3993, %r3994, 19;
	mov.b64 	%rd6253, {%r3996, %r3995};
	shf.l.wrap.b32 	%r3997, %r3993, %r3994, 3;
	shf.l.wrap.b32 	%r3998, %r3994, %r3993, 3;
	mov.b64 	%rd6254, {%r3998, %r3997};
	shr.u64 	%rd6255, %rd18681, 6;
	xor.b64  	%rd6256, %rd6253, %rd6255;
	xor.b64  	%rd6257, %rd6256, %rd6254;
	shr.u64 	%rd6258, %rd18663, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3999,%dummy}, %rd18663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4000}, %rd18663;
	}
	shf.r.wrap.b32 	%r4001, %r4000, %r3999, 1;
	shf.r.wrap.b32 	%r4002, %r3999, %r4000, 1;
	mov.b64 	%rd6259, {%r4002, %r4001};
	xor.b64  	%rd6260, %rd6259, %rd6258;
	shf.r.wrap.b32 	%r4003, %r4000, %r3999, 8;
	shf.r.wrap.b32 	%r4004, %r3999, %r4000, 8;
	mov.b64 	%rd6261, {%r4004, %r4003};
	xor.b64  	%rd6262, %rd6260, %rd6261;
	add.s64 	%rd6263, %rd18676, %rd18664;
	add.s64 	%rd6264, %rd6263, %rd6257;
	add.s64 	%rd18664, %rd6264, %rd6262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4005,%dummy}, %rd18665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4006}, %rd18665;
	}
	shf.r.wrap.b32 	%r4007, %r4006, %r4005, 19;
	shf.r.wrap.b32 	%r4008, %r4005, %r4006, 19;
	mov.b64 	%rd6265, {%r4008, %r4007};
	shf.l.wrap.b32 	%r4009, %r4005, %r4006, 3;
	shf.l.wrap.b32 	%r4010, %r4006, %r4005, 3;
	mov.b64 	%rd6266, {%r4010, %r4009};
	shr.u64 	%rd6267, %rd18665, 6;
	xor.b64  	%rd6268, %rd6265, %rd6267;
	xor.b64  	%rd6269, %rd6268, %rd6266;
	shr.u64 	%rd6270, %rd18662, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4011,%dummy}, %rd18662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4012}, %rd18662;
	}
	shf.r.wrap.b32 	%r4013, %r4012, %r4011, 1;
	shf.r.wrap.b32 	%r4014, %r4011, %r4012, 1;
	mov.b64 	%rd6271, {%r4014, %r4013};
	xor.b64  	%rd6272, %rd6271, %rd6270;
	shf.r.wrap.b32 	%r4015, %r4012, %r4011, 8;
	shf.r.wrap.b32 	%r4016, %r4011, %r4012, 8;
	mov.b64 	%rd6273, {%r4016, %r4015};
	xor.b64  	%rd6274, %rd6272, %rd6273;
	add.s64 	%rd6275, %rd18677, %rd18663;
	add.s64 	%rd6276, %rd6275, %rd6269;
	add.s64 	%rd18663, %rd6276, %rd6274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4017,%dummy}, %rd18664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4018}, %rd18664;
	}
	shf.r.wrap.b32 	%r4019, %r4018, %r4017, 19;
	shf.r.wrap.b32 	%r4020, %r4017, %r4018, 19;
	mov.b64 	%rd6277, {%r4020, %r4019};
	shf.l.wrap.b32 	%r4021, %r4017, %r4018, 3;
	shf.l.wrap.b32 	%r4022, %r4018, %r4017, 3;
	mov.b64 	%rd6278, {%r4022, %r4021};
	shr.u64 	%rd6279, %rd18664, 6;
	xor.b64  	%rd6280, %rd6277, %rd6279;
	xor.b64  	%rd6281, %rd6280, %rd6278;
	shr.u64 	%rd6282, %rd18661, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4023,%dummy}, %rd18661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4024}, %rd18661;
	}
	shf.r.wrap.b32 	%r4025, %r4024, %r4023, 1;
	shf.r.wrap.b32 	%r4026, %r4023, %r4024, 1;
	mov.b64 	%rd6283, {%r4026, %r4025};
	xor.b64  	%rd6284, %rd6283, %rd6282;
	shf.r.wrap.b32 	%r4027, %r4024, %r4023, 8;
	shf.r.wrap.b32 	%r4028, %r4023, %r4024, 8;
	mov.b64 	%rd6285, {%r4028, %r4027};
	xor.b64  	%rd6286, %rd6284, %rd6285;
	add.s64 	%rd6287, %rd18678, %rd18662;
	add.s64 	%rd6288, %rd6287, %rd6281;
	add.s64 	%rd18662, %rd6288, %rd6286;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4029,%dummy}, %rd18663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4030}, %rd18663;
	}
	shf.r.wrap.b32 	%r4031, %r4030, %r4029, 19;
	shf.r.wrap.b32 	%r4032, %r4029, %r4030, 19;
	mov.b64 	%rd6289, {%r4032, %r4031};
	shf.l.wrap.b32 	%r4033, %r4029, %r4030, 3;
	shf.l.wrap.b32 	%r4034, %r4030, %r4029, 3;
	mov.b64 	%rd6290, {%r4034, %r4033};
	shr.u64 	%rd6291, %rd18663, 6;
	xor.b64  	%rd6292, %rd6289, %rd6291;
	xor.b64  	%rd6293, %rd6292, %rd6290;
	shr.u64 	%rd6294, %rd18660, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4035,%dummy}, %rd18660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4036}, %rd18660;
	}
	shf.r.wrap.b32 	%r4037, %r4036, %r4035, 1;
	shf.r.wrap.b32 	%r4038, %r4035, %r4036, 1;
	mov.b64 	%rd6295, {%r4038, %r4037};
	xor.b64  	%rd6296, %rd6295, %rd6294;
	shf.r.wrap.b32 	%r4039, %r4036, %r4035, 8;
	shf.r.wrap.b32 	%r4040, %r4035, %r4036, 8;
	mov.b64 	%rd6297, {%r4040, %r4039};
	xor.b64  	%rd6298, %rd6296, %rd6297;
	add.s64 	%rd6299, %rd18679, %rd18661;
	add.s64 	%rd6300, %rd6299, %rd6293;
	add.s64 	%rd18661, %rd6300, %rd6298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4041,%dummy}, %rd18662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4042}, %rd18662;
	}
	shf.r.wrap.b32 	%r4043, %r4042, %r4041, 19;
	shf.r.wrap.b32 	%r4044, %r4041, %r4042, 19;
	mov.b64 	%rd6301, {%r4044, %r4043};
	shf.l.wrap.b32 	%r4045, %r4041, %r4042, 3;
	shf.l.wrap.b32 	%r4046, %r4042, %r4041, 3;
	mov.b64 	%rd6302, {%r4046, %r4045};
	shr.u64 	%rd6303, %rd18662, 6;
	xor.b64  	%rd6304, %rd6301, %rd6303;
	xor.b64  	%rd6305, %rd6304, %rd6302;
	shr.u64 	%rd6306, %rd18659, 7;
	shf.r.wrap.b32 	%r4047, %r3886, %r3885, 1;
	shf.r.wrap.b32 	%r4048, %r3885, %r3886, 1;
	mov.b64 	%rd6307, {%r4048, %r4047};
	xor.b64  	%rd6308, %rd6307, %rd6306;
	shf.r.wrap.b32 	%r4049, %r3886, %r3885, 8;
	shf.r.wrap.b32 	%r4050, %r3885, %r3886, 8;
	mov.b64 	%rd6309, {%r4050, %r4049};
	xor.b64  	%rd6310, %rd6308, %rd6309;
	add.s64 	%rd6311, %rd18680, %rd18660;
	add.s64 	%rd6312, %rd6311, %rd6305;
	add.s64 	%rd18660, %rd6312, %rd6310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4051,%dummy}, %rd18661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4052}, %rd18661;
	}
	shf.r.wrap.b32 	%r4053, %r4052, %r4051, 19;
	shf.r.wrap.b32 	%r4054, %r4051, %r4052, 19;
	mov.b64 	%rd6313, {%r4054, %r4053};
	shf.l.wrap.b32 	%r4055, %r4051, %r4052, 3;
	shf.l.wrap.b32 	%r4056, %r4052, %r4051, 3;
	mov.b64 	%rd6314, {%r4056, %r4055};
	shr.u64 	%rd6315, %rd18661, 6;
	xor.b64  	%rd6316, %rd6313, %rd6315;
	xor.b64  	%rd6317, %rd6316, %rd6314;
	shr.u64 	%rd6318, %rd18658, 7;
	shf.r.wrap.b32 	%r4057, %r3898, %r3897, 1;
	shf.r.wrap.b32 	%r4058, %r3897, %r3898, 1;
	mov.b64 	%rd6319, {%r4058, %r4057};
	xor.b64  	%rd6320, %rd6319, %rd6318;
	shf.r.wrap.b32 	%r4059, %r3898, %r3897, 8;
	shf.r.wrap.b32 	%r4060, %r3897, %r3898, 8;
	mov.b64 	%rd6321, {%r4060, %r4059};
	xor.b64  	%rd6322, %rd6320, %rd6321;
	add.s64 	%rd6323, %rd18681, %rd18659;
	add.s64 	%rd6324, %rd6323, %rd6317;
	add.s64 	%rd18659, %rd6324, %rd6322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4061,%dummy}, %rd18660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4062}, %rd18660;
	}
	shf.r.wrap.b32 	%r4063, %r4062, %r4061, 19;
	shf.r.wrap.b32 	%r4064, %r4061, %r4062, 19;
	mov.b64 	%rd6325, {%r4064, %r4063};
	shf.l.wrap.b32 	%r4065, %r4061, %r4062, 3;
	shf.l.wrap.b32 	%r4066, %r4062, %r4061, 3;
	mov.b64 	%rd6326, {%r4066, %r4065};
	shr.u64 	%rd6327, %rd18660, 6;
	xor.b64  	%rd6328, %rd6325, %rd6327;
	xor.b64  	%rd6329, %rd6328, %rd6326;
	shf.r.wrap.b32 	%r4067, %r3910, %r3909, 1;
	shf.r.wrap.b32 	%r4068, %r3909, %r3910, 1;
	mov.b64 	%rd6330, {%r4068, %r4067};
	shf.r.wrap.b32 	%r4069, %r3910, %r3909, 8;
	shf.r.wrap.b32 	%r4070, %r3909, %r3910, 8;
	mov.b64 	%rd6331, {%r4070, %r4069};
	shr.u64 	%rd6332, %rd18674, 7;
	xor.b64  	%rd6333, %rd6330, %rd6332;
	xor.b64  	%rd6334, %rd6333, %rd6331;
	add.s64 	%rd6335, %rd18665, %rd18658;
	add.s64 	%rd6336, %rd6335, %rd6329;
	add.s64 	%rd18658, %rd6336, %rd6334;
	mul.wide.s32 	%rd6337, %r12938, 8;
	add.s64 	%rd6339, %rd18522, %rd6337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4071,%dummy}, %rd18670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4072}, %rd18670;
	}
	shf.r.wrap.b32 	%r4073, %r4072, %r4071, 18;
	shf.r.wrap.b32 	%r4074, %r4071, %r4072, 18;
	mov.b64 	%rd6340, {%r4074, %r4073};
	shf.r.wrap.b32 	%r4075, %r4072, %r4071, 14;
	shf.r.wrap.b32 	%r4076, %r4071, %r4072, 14;
	mov.b64 	%rd6341, {%r4076, %r4075};
	xor.b64  	%rd6342, %rd6340, %rd6341;
	shf.l.wrap.b32 	%r4077, %r4071, %r4072, 23;
	shf.l.wrap.b32 	%r4078, %r4072, %r4071, 23;
	mov.b64 	%rd6343, {%r4078, %r4077};
	xor.b64  	%rd6344, %rd6342, %rd6343;
	xor.b64  	%rd6345, %rd18671, %rd18672;
	and.b64  	%rd6346, %rd18670, %rd6345;
	xor.b64  	%rd6347, %rd6346, %rd18672;
	add.s64 	%rd6348, %rd6347, %rd18673;
	add.s64 	%rd6349, %rd6348, %rd18674;
	ld.const.u64 	%rd6350, [%rd6339];
	add.s64 	%rd6351, %rd6349, %rd6350;
	add.s64 	%rd6352, %rd6351, %rd6344;
	add.s64 	%rd6353, %rd6352, %rd18669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4079}, %rd18666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4080,%dummy}, %rd18666;
	}
	shf.l.wrap.b32 	%r4081, %r4080, %r4079, 30;
	shf.l.wrap.b32 	%r4082, %r4079, %r4080, 30;
	mov.b64 	%rd6354, {%r4082, %r4081};
	shf.r.wrap.b32 	%r4083, %r4079, %r4080, 28;
	shf.r.wrap.b32 	%r4084, %r4080, %r4079, 28;
	mov.b64 	%rd6355, {%r4084, %r4083};
	xor.b64  	%rd6356, %rd6354, %rd6355;
	shf.l.wrap.b32 	%r4085, %r4080, %r4079, 25;
	shf.l.wrap.b32 	%r4086, %r4079, %r4080, 25;
	mov.b64 	%rd6357, {%r4086, %r4085};
	xor.b64  	%rd6358, %rd6356, %rd6357;
	xor.b64  	%rd6359, %rd18666, %rd18667;
	and.b64  	%rd6360, %rd6359, %rd18668;
	and.b64  	%rd6361, %rd18666, %rd18667;
	or.b64  	%rd6362, %rd6360, %rd6361;
	add.s64 	%rd6363, %rd6352, %rd6362;
	add.s64 	%rd6364, %rd6363, %rd6358;
	add.s32 	%r4087, %r12938, 1;
	mul.wide.s32 	%rd6365, %r4087, 8;
	add.s64 	%rd6366, %rd18522, %rd6365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4088,%dummy}, %rd6353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4089}, %rd6353;
	}
	shf.r.wrap.b32 	%r4090, %r4089, %r4088, 14;
	shf.r.wrap.b32 	%r4091, %r4088, %r4089, 14;
	mov.b64 	%rd6367, {%r4091, %r4090};
	shf.r.wrap.b32 	%r4092, %r4089, %r4088, 18;
	shf.r.wrap.b32 	%r4093, %r4088, %r4089, 18;
	mov.b64 	%rd6368, {%r4093, %r4092};
	xor.b64  	%rd6369, %rd6368, %rd6367;
	shf.l.wrap.b32 	%r4094, %r4088, %r4089, 23;
	shf.l.wrap.b32 	%r4095, %r4089, %r4088, 23;
	mov.b64 	%rd6370, {%r4095, %r4094};
	xor.b64  	%rd6371, %rd6369, %rd6370;
	xor.b64  	%rd6372, %rd18670, %rd18671;
	and.b64  	%rd6373, %rd6353, %rd6372;
	xor.b64  	%rd6374, %rd6373, %rd18671;
	add.s64 	%rd6375, %rd18675, %rd18672;
	ld.const.u64 	%rd6376, [%rd6366];
	add.s64 	%rd6377, %rd6375, %rd6376;
	add.s64 	%rd6378, %rd6377, %rd6374;
	add.s64 	%rd6379, %rd6378, %rd6371;
	add.s64 	%rd6380, %rd6379, %rd18668;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4096,%dummy}, %rd6364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4097}, %rd6364;
	}
	shf.r.wrap.b32 	%r4098, %r4097, %r4096, 28;
	shf.r.wrap.b32 	%r4099, %r4096, %r4097, 28;
	mov.b64 	%rd6381, {%r4099, %r4098};
	shf.l.wrap.b32 	%r4100, %r4096, %r4097, 30;
	shf.l.wrap.b32 	%r4101, %r4097, %r4096, 30;
	mov.b64 	%rd6382, {%r4101, %r4100};
	xor.b64  	%rd6383, %rd6382, %rd6381;
	shf.l.wrap.b32 	%r4102, %r4096, %r4097, 25;
	shf.l.wrap.b32 	%r4103, %r4097, %r4096, 25;
	mov.b64 	%rd6384, {%r4103, %r4102};
	xor.b64  	%rd6385, %rd6383, %rd6384;
	and.b64  	%rd6386, %rd6364, %rd18666;
	xor.b64  	%rd6387, %rd6364, %rd18666;
	and.b64  	%rd6388, %rd6387, %rd18667;
	or.b64  	%rd6389, %rd6388, %rd6386;
	add.s64 	%rd6390, %rd6379, %rd6389;
	add.s64 	%rd6391, %rd6390, %rd6385;
	add.s32 	%r4104, %r12938, 2;
	mul.wide.s32 	%rd6392, %r4104, 8;
	add.s64 	%rd6393, %rd18522, %rd6392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4105,%dummy}, %rd6380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4106}, %rd6380;
	}
	shf.r.wrap.b32 	%r4107, %r4106, %r4105, 14;
	shf.r.wrap.b32 	%r4108, %r4105, %r4106, 14;
	mov.b64 	%rd6394, {%r4108, %r4107};
	shf.r.wrap.b32 	%r4109, %r4106, %r4105, 18;
	shf.r.wrap.b32 	%r4110, %r4105, %r4106, 18;
	mov.b64 	%rd6395, {%r4110, %r4109};
	xor.b64  	%rd6396, %rd6395, %rd6394;
	shf.l.wrap.b32 	%r4111, %r4105, %r4106, 23;
	shf.l.wrap.b32 	%r4112, %r4106, %r4105, 23;
	mov.b64 	%rd6397, {%r4112, %r4111};
	xor.b64  	%rd6398, %rd6396, %rd6397;
	xor.b64  	%rd6399, %rd6353, %rd18670;
	and.b64  	%rd6400, %rd6380, %rd6399;
	xor.b64  	%rd6401, %rd6400, %rd18670;
	add.s64 	%rd6402, %rd18676, %rd18671;
	ld.const.u64 	%rd6403, [%rd6393];
	add.s64 	%rd6404, %rd6402, %rd6403;
	add.s64 	%rd6405, %rd6404, %rd6401;
	add.s64 	%rd6406, %rd6405, %rd6398;
	add.s64 	%rd6407, %rd6406, %rd18667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4113,%dummy}, %rd6391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4114}, %rd6391;
	}
	shf.r.wrap.b32 	%r4115, %r4114, %r4113, 28;
	shf.r.wrap.b32 	%r4116, %r4113, %r4114, 28;
	mov.b64 	%rd6408, {%r4116, %r4115};
	shf.l.wrap.b32 	%r4117, %r4113, %r4114, 30;
	shf.l.wrap.b32 	%r4118, %r4114, %r4113, 30;
	mov.b64 	%rd6409, {%r4118, %r4117};
	xor.b64  	%rd6410, %rd6409, %rd6408;
	shf.l.wrap.b32 	%r4119, %r4113, %r4114, 25;
	shf.l.wrap.b32 	%r4120, %r4114, %r4113, 25;
	mov.b64 	%rd6411, {%r4120, %r4119};
	xor.b64  	%rd6412, %rd6410, %rd6411;
	and.b64  	%rd6413, %rd6391, %rd6364;
	xor.b64  	%rd6414, %rd6391, %rd6364;
	and.b64  	%rd6415, %rd6414, %rd18666;
	or.b64  	%rd6416, %rd6415, %rd6413;
	add.s64 	%rd6417, %rd6406, %rd6416;
	add.s64 	%rd6418, %rd6417, %rd6412;
	add.s32 	%r4121, %r12938, 3;
	mul.wide.s32 	%rd6419, %r4121, 8;
	add.s64 	%rd6420, %rd18522, %rd6419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4122,%dummy}, %rd6407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4123}, %rd6407;
	}
	shf.r.wrap.b32 	%r4124, %r4123, %r4122, 14;
	shf.r.wrap.b32 	%r4125, %r4122, %r4123, 14;
	mov.b64 	%rd6421, {%r4125, %r4124};
	shf.r.wrap.b32 	%r4126, %r4123, %r4122, 18;
	shf.r.wrap.b32 	%r4127, %r4122, %r4123, 18;
	mov.b64 	%rd6422, {%r4127, %r4126};
	xor.b64  	%rd6423, %rd6422, %rd6421;
	shf.l.wrap.b32 	%r4128, %r4122, %r4123, 23;
	shf.l.wrap.b32 	%r4129, %r4123, %r4122, 23;
	mov.b64 	%rd6424, {%r4129, %r4128};
	xor.b64  	%rd6425, %rd6423, %rd6424;
	xor.b64  	%rd6426, %rd6380, %rd6353;
	and.b64  	%rd6427, %rd6407, %rd6426;
	xor.b64  	%rd6428, %rd6427, %rd6353;
	add.s64 	%rd6429, %rd18677, %rd18670;
	ld.const.u64 	%rd6430, [%rd6420];
	add.s64 	%rd6431, %rd6429, %rd6430;
	add.s64 	%rd6432, %rd6431, %rd6428;
	add.s64 	%rd6433, %rd6432, %rd6425;
	add.s64 	%rd6434, %rd6433, %rd18666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4130,%dummy}, %rd6418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4131}, %rd6418;
	}
	shf.r.wrap.b32 	%r4132, %r4131, %r4130, 28;
	shf.r.wrap.b32 	%r4133, %r4130, %r4131, 28;
	mov.b64 	%rd6435, {%r4133, %r4132};
	shf.l.wrap.b32 	%r4134, %r4130, %r4131, 30;
	shf.l.wrap.b32 	%r4135, %r4131, %r4130, 30;
	mov.b64 	%rd6436, {%r4135, %r4134};
	xor.b64  	%rd6437, %rd6436, %rd6435;
	shf.l.wrap.b32 	%r4136, %r4130, %r4131, 25;
	shf.l.wrap.b32 	%r4137, %r4131, %r4130, 25;
	mov.b64 	%rd6438, {%r4137, %r4136};
	xor.b64  	%rd6439, %rd6437, %rd6438;
	and.b64  	%rd6440, %rd6418, %rd6391;
	xor.b64  	%rd6441, %rd6418, %rd6391;
	and.b64  	%rd6442, %rd6441, %rd6364;
	or.b64  	%rd6443, %rd6442, %rd6440;
	add.s64 	%rd6444, %rd6433, %rd6443;
	add.s64 	%rd6445, %rd6444, %rd6439;
	add.s32 	%r4138, %r12938, 4;
	mul.wide.s32 	%rd6446, %r4138, 8;
	add.s64 	%rd6447, %rd18522, %rd6446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4139,%dummy}, %rd6434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4140}, %rd6434;
	}
	shf.r.wrap.b32 	%r4141, %r4140, %r4139, 14;
	shf.r.wrap.b32 	%r4142, %r4139, %r4140, 14;
	mov.b64 	%rd6448, {%r4142, %r4141};
	shf.r.wrap.b32 	%r4143, %r4140, %r4139, 18;
	shf.r.wrap.b32 	%r4144, %r4139, %r4140, 18;
	mov.b64 	%rd6449, {%r4144, %r4143};
	xor.b64  	%rd6450, %rd6449, %rd6448;
	shf.l.wrap.b32 	%r4145, %r4139, %r4140, 23;
	shf.l.wrap.b32 	%r4146, %r4140, %r4139, 23;
	mov.b64 	%rd6451, {%r4146, %r4145};
	xor.b64  	%rd6452, %rd6450, %rd6451;
	xor.b64  	%rd6453, %rd6407, %rd6380;
	and.b64  	%rd6454, %rd6434, %rd6453;
	xor.b64  	%rd6455, %rd6454, %rd6380;
	add.s64 	%rd6456, %rd6353, %rd18678;
	ld.const.u64 	%rd6457, [%rd6447];
	add.s64 	%rd6458, %rd6456, %rd6457;
	add.s64 	%rd6459, %rd6458, %rd6455;
	add.s64 	%rd6460, %rd6459, %rd6452;
	add.s64 	%rd6461, %rd6460, %rd6364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4147,%dummy}, %rd6445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4148}, %rd6445;
	}
	shf.r.wrap.b32 	%r4149, %r4148, %r4147, 28;
	shf.r.wrap.b32 	%r4150, %r4147, %r4148, 28;
	mov.b64 	%rd6462, {%r4150, %r4149};
	shf.l.wrap.b32 	%r4151, %r4147, %r4148, 30;
	shf.l.wrap.b32 	%r4152, %r4148, %r4147, 30;
	mov.b64 	%rd6463, {%r4152, %r4151};
	xor.b64  	%rd6464, %rd6463, %rd6462;
	shf.l.wrap.b32 	%r4153, %r4147, %r4148, 25;
	shf.l.wrap.b32 	%r4154, %r4148, %r4147, 25;
	mov.b64 	%rd6465, {%r4154, %r4153};
	xor.b64  	%rd6466, %rd6464, %rd6465;
	and.b64  	%rd6467, %rd6445, %rd6418;
	xor.b64  	%rd6468, %rd6445, %rd6418;
	and.b64  	%rd6469, %rd6468, %rd6391;
	or.b64  	%rd6470, %rd6469, %rd6467;
	add.s64 	%rd6471, %rd6460, %rd6470;
	add.s64 	%rd6472, %rd6471, %rd6466;
	add.s32 	%r4155, %r12938, 5;
	mul.wide.s32 	%rd6473, %r4155, 8;
	add.s64 	%rd6474, %rd18522, %rd6473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4156,%dummy}, %rd6461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4157}, %rd6461;
	}
	shf.r.wrap.b32 	%r4158, %r4157, %r4156, 14;
	shf.r.wrap.b32 	%r4159, %r4156, %r4157, 14;
	mov.b64 	%rd6475, {%r4159, %r4158};
	shf.r.wrap.b32 	%r4160, %r4157, %r4156, 18;
	shf.r.wrap.b32 	%r4161, %r4156, %r4157, 18;
	mov.b64 	%rd6476, {%r4161, %r4160};
	xor.b64  	%rd6477, %rd6476, %rd6475;
	shf.l.wrap.b32 	%r4162, %r4156, %r4157, 23;
	shf.l.wrap.b32 	%r4163, %r4157, %r4156, 23;
	mov.b64 	%rd6478, {%r4163, %r4162};
	xor.b64  	%rd6479, %rd6477, %rd6478;
	xor.b64  	%rd6480, %rd6434, %rd6407;
	and.b64  	%rd6481, %rd6461, %rd6480;
	xor.b64  	%rd6482, %rd6481, %rd6407;
	add.s64 	%rd6483, %rd6380, %rd18679;
	ld.const.u64 	%rd6484, [%rd6474];
	add.s64 	%rd6485, %rd6483, %rd6484;
	add.s64 	%rd6486, %rd6485, %rd6482;
	add.s64 	%rd6487, %rd6486, %rd6479;
	add.s64 	%rd6488, %rd6487, %rd6391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4164,%dummy}, %rd6472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4165}, %rd6472;
	}
	shf.r.wrap.b32 	%r4166, %r4165, %r4164, 28;
	shf.r.wrap.b32 	%r4167, %r4164, %r4165, 28;
	mov.b64 	%rd6489, {%r4167, %r4166};
	shf.l.wrap.b32 	%r4168, %r4164, %r4165, 30;
	shf.l.wrap.b32 	%r4169, %r4165, %r4164, 30;
	mov.b64 	%rd6490, {%r4169, %r4168};
	xor.b64  	%rd6491, %rd6490, %rd6489;
	shf.l.wrap.b32 	%r4170, %r4164, %r4165, 25;
	shf.l.wrap.b32 	%r4171, %r4165, %r4164, 25;
	mov.b64 	%rd6492, {%r4171, %r4170};
	xor.b64  	%rd6493, %rd6491, %rd6492;
	and.b64  	%rd6494, %rd6472, %rd6445;
	xor.b64  	%rd6495, %rd6472, %rd6445;
	and.b64  	%rd6496, %rd6495, %rd6418;
	or.b64  	%rd6497, %rd6496, %rd6494;
	add.s64 	%rd6498, %rd6487, %rd6497;
	add.s64 	%rd6499, %rd6498, %rd6493;
	add.s32 	%r4172, %r12938, 6;
	mul.wide.s32 	%rd6500, %r4172, 8;
	add.s64 	%rd6501, %rd18522, %rd6500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4173,%dummy}, %rd6488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4174}, %rd6488;
	}
	shf.r.wrap.b32 	%r4175, %r4174, %r4173, 14;
	shf.r.wrap.b32 	%r4176, %r4173, %r4174, 14;
	mov.b64 	%rd6502, {%r4176, %r4175};
	shf.r.wrap.b32 	%r4177, %r4174, %r4173, 18;
	shf.r.wrap.b32 	%r4178, %r4173, %r4174, 18;
	mov.b64 	%rd6503, {%r4178, %r4177};
	xor.b64  	%rd6504, %rd6503, %rd6502;
	shf.l.wrap.b32 	%r4179, %r4173, %r4174, 23;
	shf.l.wrap.b32 	%r4180, %r4174, %r4173, 23;
	mov.b64 	%rd6505, {%r4180, %r4179};
	xor.b64  	%rd6506, %rd6504, %rd6505;
	xor.b64  	%rd6507, %rd6461, %rd6434;
	and.b64  	%rd6508, %rd6488, %rd6507;
	xor.b64  	%rd6509, %rd6508, %rd6434;
	add.s64 	%rd6510, %rd6407, %rd18680;
	ld.const.u64 	%rd6511, [%rd6501];
	add.s64 	%rd6512, %rd6510, %rd6511;
	add.s64 	%rd6513, %rd6512, %rd6509;
	add.s64 	%rd6514, %rd6513, %rd6506;
	add.s64 	%rd6515, %rd6514, %rd6418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4181,%dummy}, %rd6499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4182}, %rd6499;
	}
	shf.r.wrap.b32 	%r4183, %r4182, %r4181, 28;
	shf.r.wrap.b32 	%r4184, %r4181, %r4182, 28;
	mov.b64 	%rd6516, {%r4184, %r4183};
	shf.l.wrap.b32 	%r4185, %r4181, %r4182, 30;
	shf.l.wrap.b32 	%r4186, %r4182, %r4181, 30;
	mov.b64 	%rd6517, {%r4186, %r4185};
	xor.b64  	%rd6518, %rd6517, %rd6516;
	shf.l.wrap.b32 	%r4187, %r4181, %r4182, 25;
	shf.l.wrap.b32 	%r4188, %r4182, %r4181, 25;
	mov.b64 	%rd6519, {%r4188, %r4187};
	xor.b64  	%rd6520, %rd6518, %rd6519;
	and.b64  	%rd6521, %rd6499, %rd6472;
	xor.b64  	%rd6522, %rd6499, %rd6472;
	and.b64  	%rd6523, %rd6522, %rd6445;
	or.b64  	%rd6524, %rd6523, %rd6521;
	add.s64 	%rd6525, %rd6514, %rd6524;
	add.s64 	%rd6526, %rd6525, %rd6520;
	add.s32 	%r4189, %r12938, 7;
	mul.wide.s32 	%rd6527, %r4189, 8;
	add.s64 	%rd6528, %rd18522, %rd6527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4190,%dummy}, %rd6515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4191}, %rd6515;
	}
	shf.r.wrap.b32 	%r4192, %r4191, %r4190, 14;
	shf.r.wrap.b32 	%r4193, %r4190, %r4191, 14;
	mov.b64 	%rd6529, {%r4193, %r4192};
	shf.r.wrap.b32 	%r4194, %r4191, %r4190, 18;
	shf.r.wrap.b32 	%r4195, %r4190, %r4191, 18;
	mov.b64 	%rd6530, {%r4195, %r4194};
	xor.b64  	%rd6531, %rd6530, %rd6529;
	shf.l.wrap.b32 	%r4196, %r4190, %r4191, 23;
	shf.l.wrap.b32 	%r4197, %r4191, %r4190, 23;
	mov.b64 	%rd6532, {%r4197, %r4196};
	xor.b64  	%rd6533, %rd6531, %rd6532;
	xor.b64  	%rd6534, %rd6488, %rd6461;
	and.b64  	%rd6535, %rd6515, %rd6534;
	xor.b64  	%rd6536, %rd6535, %rd6461;
	add.s64 	%rd6537, %rd6434, %rd18681;
	ld.const.u64 	%rd6538, [%rd6528];
	add.s64 	%rd6539, %rd6537, %rd6538;
	add.s64 	%rd6540, %rd6539, %rd6536;
	add.s64 	%rd6541, %rd6540, %rd6533;
	add.s64 	%rd6542, %rd6541, %rd6445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4198,%dummy}, %rd6526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4199}, %rd6526;
	}
	shf.r.wrap.b32 	%r4200, %r4199, %r4198, 28;
	shf.r.wrap.b32 	%r4201, %r4198, %r4199, 28;
	mov.b64 	%rd6543, {%r4201, %r4200};
	shf.l.wrap.b32 	%r4202, %r4198, %r4199, 30;
	shf.l.wrap.b32 	%r4203, %r4199, %r4198, 30;
	mov.b64 	%rd6544, {%r4203, %r4202};
	xor.b64  	%rd6545, %rd6544, %rd6543;
	shf.l.wrap.b32 	%r4204, %r4198, %r4199, 25;
	shf.l.wrap.b32 	%r4205, %r4199, %r4198, 25;
	mov.b64 	%rd6546, {%r4205, %r4204};
	xor.b64  	%rd6547, %rd6545, %rd6546;
	and.b64  	%rd6548, %rd6526, %rd6499;
	xor.b64  	%rd6549, %rd6526, %rd6499;
	and.b64  	%rd6550, %rd6549, %rd6472;
	or.b64  	%rd6551, %rd6550, %rd6548;
	add.s64 	%rd6552, %rd6541, %rd6551;
	add.s64 	%rd6553, %rd6552, %rd6547;
	add.s32 	%r4206, %r12938, 8;
	mul.wide.s32 	%rd6554, %r4206, 8;
	add.s64 	%rd6555, %rd18522, %rd6554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4207,%dummy}, %rd6542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4208}, %rd6542;
	}
	shf.r.wrap.b32 	%r4209, %r4208, %r4207, 14;
	shf.r.wrap.b32 	%r4210, %r4207, %r4208, 14;
	mov.b64 	%rd6556, {%r4210, %r4209};
	shf.r.wrap.b32 	%r4211, %r4208, %r4207, 18;
	shf.r.wrap.b32 	%r4212, %r4207, %r4208, 18;
	mov.b64 	%rd6557, {%r4212, %r4211};
	xor.b64  	%rd6558, %rd6557, %rd6556;
	shf.l.wrap.b32 	%r4213, %r4207, %r4208, 23;
	shf.l.wrap.b32 	%r4214, %r4208, %r4207, 23;
	mov.b64 	%rd6559, {%r4214, %r4213};
	xor.b64  	%rd6560, %rd6558, %rd6559;
	xor.b64  	%rd6561, %rd6515, %rd6488;
	and.b64  	%rd6562, %rd6542, %rd6561;
	xor.b64  	%rd6563, %rd6562, %rd6488;
	add.s64 	%rd6564, %rd6461, %rd18665;
	ld.const.u64 	%rd6565, [%rd6555];
	add.s64 	%rd6566, %rd6564, %rd6565;
	add.s64 	%rd6567, %rd6566, %rd6563;
	add.s64 	%rd6568, %rd6567, %rd6560;
	add.s64 	%rd6569, %rd6568, %rd6472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4215,%dummy}, %rd6553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4216}, %rd6553;
	}
	shf.r.wrap.b32 	%r4217, %r4216, %r4215, 28;
	shf.r.wrap.b32 	%r4218, %r4215, %r4216, 28;
	mov.b64 	%rd6570, {%r4218, %r4217};
	shf.l.wrap.b32 	%r4219, %r4215, %r4216, 30;
	shf.l.wrap.b32 	%r4220, %r4216, %r4215, 30;
	mov.b64 	%rd6571, {%r4220, %r4219};
	xor.b64  	%rd6572, %rd6571, %rd6570;
	shf.l.wrap.b32 	%r4221, %r4215, %r4216, 25;
	shf.l.wrap.b32 	%r4222, %r4216, %r4215, 25;
	mov.b64 	%rd6573, {%r4222, %r4221};
	xor.b64  	%rd6574, %rd6572, %rd6573;
	and.b64  	%rd6575, %rd6553, %rd6526;
	xor.b64  	%rd6576, %rd6553, %rd6526;
	and.b64  	%rd6577, %rd6576, %rd6499;
	or.b64  	%rd6578, %rd6577, %rd6575;
	add.s64 	%rd6579, %rd6568, %rd6578;
	add.s64 	%rd6580, %rd6579, %rd6574;
	add.s32 	%r4223, %r12938, 9;
	mul.wide.s32 	%rd6581, %r4223, 8;
	add.s64 	%rd6582, %rd18522, %rd6581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4224,%dummy}, %rd6569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4225}, %rd6569;
	}
	shf.r.wrap.b32 	%r4226, %r4225, %r4224, 14;
	shf.r.wrap.b32 	%r4227, %r4224, %r4225, 14;
	mov.b64 	%rd6583, {%r4227, %r4226};
	shf.r.wrap.b32 	%r4228, %r4225, %r4224, 18;
	shf.r.wrap.b32 	%r4229, %r4224, %r4225, 18;
	mov.b64 	%rd6584, {%r4229, %r4228};
	xor.b64  	%rd6585, %rd6584, %rd6583;
	shf.l.wrap.b32 	%r4230, %r4224, %r4225, 23;
	shf.l.wrap.b32 	%r4231, %r4225, %r4224, 23;
	mov.b64 	%rd6586, {%r4231, %r4230};
	xor.b64  	%rd6587, %rd6585, %rd6586;
	xor.b64  	%rd6588, %rd6542, %rd6515;
	and.b64  	%rd6589, %rd6569, %rd6588;
	xor.b64  	%rd6590, %rd6589, %rd6515;
	add.s64 	%rd6591, %rd6488, %rd18664;
	ld.const.u64 	%rd6592, [%rd6582];
	add.s64 	%rd6593, %rd6591, %rd6592;
	add.s64 	%rd6594, %rd6593, %rd6590;
	add.s64 	%rd6595, %rd6594, %rd6587;
	add.s64 	%rd6596, %rd6595, %rd6499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4232,%dummy}, %rd6580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4233}, %rd6580;
	}
	shf.r.wrap.b32 	%r4234, %r4233, %r4232, 28;
	shf.r.wrap.b32 	%r4235, %r4232, %r4233, 28;
	mov.b64 	%rd6597, {%r4235, %r4234};
	shf.l.wrap.b32 	%r4236, %r4232, %r4233, 30;
	shf.l.wrap.b32 	%r4237, %r4233, %r4232, 30;
	mov.b64 	%rd6598, {%r4237, %r4236};
	xor.b64  	%rd6599, %rd6598, %rd6597;
	shf.l.wrap.b32 	%r4238, %r4232, %r4233, 25;
	shf.l.wrap.b32 	%r4239, %r4233, %r4232, 25;
	mov.b64 	%rd6600, {%r4239, %r4238};
	xor.b64  	%rd6601, %rd6599, %rd6600;
	and.b64  	%rd6602, %rd6580, %rd6553;
	xor.b64  	%rd6603, %rd6580, %rd6553;
	and.b64  	%rd6604, %rd6603, %rd6526;
	or.b64  	%rd6605, %rd6604, %rd6602;
	add.s64 	%rd6606, %rd6595, %rd6605;
	add.s64 	%rd6607, %rd6606, %rd6601;
	add.s32 	%r4240, %r12938, 10;
	mul.wide.s32 	%rd6608, %r4240, 8;
	add.s64 	%rd6609, %rd18522, %rd6608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4241,%dummy}, %rd6596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4242}, %rd6596;
	}
	shf.r.wrap.b32 	%r4243, %r4242, %r4241, 14;
	shf.r.wrap.b32 	%r4244, %r4241, %r4242, 14;
	mov.b64 	%rd6610, {%r4244, %r4243};
	shf.r.wrap.b32 	%r4245, %r4242, %r4241, 18;
	shf.r.wrap.b32 	%r4246, %r4241, %r4242, 18;
	mov.b64 	%rd6611, {%r4246, %r4245};
	xor.b64  	%rd6612, %rd6611, %rd6610;
	shf.l.wrap.b32 	%r4247, %r4241, %r4242, 23;
	shf.l.wrap.b32 	%r4248, %r4242, %r4241, 23;
	mov.b64 	%rd6613, {%r4248, %r4247};
	xor.b64  	%rd6614, %rd6612, %rd6613;
	xor.b64  	%rd6615, %rd6569, %rd6542;
	and.b64  	%rd6616, %rd6596, %rd6615;
	xor.b64  	%rd6617, %rd6616, %rd6542;
	add.s64 	%rd6618, %rd6515, %rd18663;
	ld.const.u64 	%rd6619, [%rd6609];
	add.s64 	%rd6620, %rd6618, %rd6619;
	add.s64 	%rd6621, %rd6620, %rd6617;
	add.s64 	%rd6622, %rd6621, %rd6614;
	add.s64 	%rd6623, %rd6622, %rd6526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4249,%dummy}, %rd6607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4250}, %rd6607;
	}
	shf.r.wrap.b32 	%r4251, %r4250, %r4249, 28;
	shf.r.wrap.b32 	%r4252, %r4249, %r4250, 28;
	mov.b64 	%rd6624, {%r4252, %r4251};
	shf.l.wrap.b32 	%r4253, %r4249, %r4250, 30;
	shf.l.wrap.b32 	%r4254, %r4250, %r4249, 30;
	mov.b64 	%rd6625, {%r4254, %r4253};
	xor.b64  	%rd6626, %rd6625, %rd6624;
	shf.l.wrap.b32 	%r4255, %r4249, %r4250, 25;
	shf.l.wrap.b32 	%r4256, %r4250, %r4249, 25;
	mov.b64 	%rd6627, {%r4256, %r4255};
	xor.b64  	%rd6628, %rd6626, %rd6627;
	and.b64  	%rd6629, %rd6607, %rd6580;
	xor.b64  	%rd6630, %rd6607, %rd6580;
	and.b64  	%rd6631, %rd6630, %rd6553;
	or.b64  	%rd6632, %rd6631, %rd6629;
	add.s64 	%rd6633, %rd6622, %rd6632;
	add.s64 	%rd6634, %rd6633, %rd6628;
	add.s32 	%r4257, %r12938, 11;
	mul.wide.s32 	%rd6635, %r4257, 8;
	add.s64 	%rd6636, %rd18522, %rd6635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4258,%dummy}, %rd6623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4259}, %rd6623;
	}
	shf.r.wrap.b32 	%r4260, %r4259, %r4258, 14;
	shf.r.wrap.b32 	%r4261, %r4258, %r4259, 14;
	mov.b64 	%rd6637, {%r4261, %r4260};
	shf.r.wrap.b32 	%r4262, %r4259, %r4258, 18;
	shf.r.wrap.b32 	%r4263, %r4258, %r4259, 18;
	mov.b64 	%rd6638, {%r4263, %r4262};
	xor.b64  	%rd6639, %rd6638, %rd6637;
	shf.l.wrap.b32 	%r4264, %r4258, %r4259, 23;
	shf.l.wrap.b32 	%r4265, %r4259, %r4258, 23;
	mov.b64 	%rd6640, {%r4265, %r4264};
	xor.b64  	%rd6641, %rd6639, %rd6640;
	xor.b64  	%rd6642, %rd6596, %rd6569;
	and.b64  	%rd6643, %rd6623, %rd6642;
	xor.b64  	%rd6644, %rd6643, %rd6569;
	add.s64 	%rd6645, %rd6542, %rd18662;
	ld.const.u64 	%rd6646, [%rd6636];
	add.s64 	%rd6647, %rd6645, %rd6646;
	add.s64 	%rd6648, %rd6647, %rd6644;
	add.s64 	%rd6649, %rd6648, %rd6641;
	add.s64 	%rd6650, %rd6649, %rd6553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4266,%dummy}, %rd6634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4267}, %rd6634;
	}
	shf.r.wrap.b32 	%r4268, %r4267, %r4266, 28;
	shf.r.wrap.b32 	%r4269, %r4266, %r4267, 28;
	mov.b64 	%rd6651, {%r4269, %r4268};
	shf.l.wrap.b32 	%r4270, %r4266, %r4267, 30;
	shf.l.wrap.b32 	%r4271, %r4267, %r4266, 30;
	mov.b64 	%rd6652, {%r4271, %r4270};
	xor.b64  	%rd6653, %rd6652, %rd6651;
	shf.l.wrap.b32 	%r4272, %r4266, %r4267, 25;
	shf.l.wrap.b32 	%r4273, %r4267, %r4266, 25;
	mov.b64 	%rd6654, {%r4273, %r4272};
	xor.b64  	%rd6655, %rd6653, %rd6654;
	and.b64  	%rd6656, %rd6634, %rd6607;
	xor.b64  	%rd6657, %rd6634, %rd6607;
	and.b64  	%rd6658, %rd6657, %rd6580;
	or.b64  	%rd6659, %rd6658, %rd6656;
	add.s64 	%rd6660, %rd6649, %rd6659;
	add.s64 	%rd6661, %rd6660, %rd6655;
	add.s32 	%r4274, %r12938, 12;
	mul.wide.s32 	%rd6662, %r4274, 8;
	add.s64 	%rd6663, %rd18522, %rd6662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4275,%dummy}, %rd6650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4276}, %rd6650;
	}
	shf.r.wrap.b32 	%r4277, %r4276, %r4275, 14;
	shf.r.wrap.b32 	%r4278, %r4275, %r4276, 14;
	mov.b64 	%rd6664, {%r4278, %r4277};
	shf.r.wrap.b32 	%r4279, %r4276, %r4275, 18;
	shf.r.wrap.b32 	%r4280, %r4275, %r4276, 18;
	mov.b64 	%rd6665, {%r4280, %r4279};
	xor.b64  	%rd6666, %rd6665, %rd6664;
	shf.l.wrap.b32 	%r4281, %r4275, %r4276, 23;
	shf.l.wrap.b32 	%r4282, %r4276, %r4275, 23;
	mov.b64 	%rd6667, {%r4282, %r4281};
	xor.b64  	%rd6668, %rd6666, %rd6667;
	xor.b64  	%rd6669, %rd6623, %rd6596;
	and.b64  	%rd6670, %rd6650, %rd6669;
	xor.b64  	%rd6671, %rd6670, %rd6596;
	add.s64 	%rd6672, %rd6569, %rd18661;
	ld.const.u64 	%rd6673, [%rd6663];
	add.s64 	%rd6674, %rd6672, %rd6673;
	add.s64 	%rd6675, %rd6674, %rd6671;
	add.s64 	%rd6676, %rd6675, %rd6668;
	add.s64 	%rd18673, %rd6676, %rd6580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4283,%dummy}, %rd6661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4284}, %rd6661;
	}
	shf.r.wrap.b32 	%r4285, %r4284, %r4283, 28;
	shf.r.wrap.b32 	%r4286, %r4283, %r4284, 28;
	mov.b64 	%rd6677, {%r4286, %r4285};
	shf.l.wrap.b32 	%r4287, %r4283, %r4284, 30;
	shf.l.wrap.b32 	%r4288, %r4284, %r4283, 30;
	mov.b64 	%rd6678, {%r4288, %r4287};
	xor.b64  	%rd6679, %rd6678, %rd6677;
	shf.l.wrap.b32 	%r4289, %r4283, %r4284, 25;
	shf.l.wrap.b32 	%r4290, %r4284, %r4283, 25;
	mov.b64 	%rd6680, {%r4290, %r4289};
	xor.b64  	%rd6681, %rd6679, %rd6680;
	and.b64  	%rd6682, %rd6661, %rd6634;
	xor.b64  	%rd6683, %rd6661, %rd6634;
	and.b64  	%rd6684, %rd6683, %rd6607;
	or.b64  	%rd6685, %rd6684, %rd6682;
	add.s64 	%rd6686, %rd6676, %rd6685;
	add.s64 	%rd18669, %rd6686, %rd6681;
	add.s32 	%r4291, %r12938, 13;
	mul.wide.s32 	%rd6687, %r4291, 8;
	add.s64 	%rd6688, %rd18522, %rd6687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4292,%dummy}, %rd18673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4293}, %rd18673;
	}
	shf.r.wrap.b32 	%r4294, %r4293, %r4292, 14;
	shf.r.wrap.b32 	%r4295, %r4292, %r4293, 14;
	mov.b64 	%rd6689, {%r4295, %r4294};
	shf.r.wrap.b32 	%r4296, %r4293, %r4292, 18;
	shf.r.wrap.b32 	%r4297, %r4292, %r4293, 18;
	mov.b64 	%rd6690, {%r4297, %r4296};
	xor.b64  	%rd6691, %rd6690, %rd6689;
	shf.l.wrap.b32 	%r4298, %r4292, %r4293, 23;
	shf.l.wrap.b32 	%r4299, %r4293, %r4292, 23;
	mov.b64 	%rd6692, {%r4299, %r4298};
	xor.b64  	%rd6693, %rd6691, %rd6692;
	xor.b64  	%rd6694, %rd6650, %rd6623;
	and.b64  	%rd6695, %rd18673, %rd6694;
	xor.b64  	%rd6696, %rd6695, %rd6623;
	add.s64 	%rd6697, %rd6596, %rd18660;
	ld.const.u64 	%rd6698, [%rd6688];
	add.s64 	%rd6699, %rd6697, %rd6698;
	add.s64 	%rd6700, %rd6699, %rd6696;
	add.s64 	%rd6701, %rd6700, %rd6693;
	add.s64 	%rd18672, %rd6701, %rd6607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4300,%dummy}, %rd18669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4301}, %rd18669;
	}
	shf.r.wrap.b32 	%r4302, %r4301, %r4300, 28;
	shf.r.wrap.b32 	%r4303, %r4300, %r4301, 28;
	mov.b64 	%rd6702, {%r4303, %r4302};
	shf.l.wrap.b32 	%r4304, %r4300, %r4301, 30;
	shf.l.wrap.b32 	%r4305, %r4301, %r4300, 30;
	mov.b64 	%rd6703, {%r4305, %r4304};
	xor.b64  	%rd6704, %rd6703, %rd6702;
	shf.l.wrap.b32 	%r4306, %r4300, %r4301, 25;
	shf.l.wrap.b32 	%r4307, %r4301, %r4300, 25;
	mov.b64 	%rd6705, {%r4307, %r4306};
	xor.b64  	%rd6706, %rd6704, %rd6705;
	and.b64  	%rd6707, %rd18669, %rd6661;
	xor.b64  	%rd6708, %rd18669, %rd6661;
	and.b64  	%rd6709, %rd6708, %rd6634;
	or.b64  	%rd6710, %rd6709, %rd6707;
	add.s64 	%rd6711, %rd6701, %rd6710;
	add.s64 	%rd18668, %rd6711, %rd6706;
	add.s32 	%r4308, %r12938, 14;
	mul.wide.s32 	%rd6712, %r4308, 8;
	add.s64 	%rd6713, %rd18522, %rd6712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4309,%dummy}, %rd18672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4310}, %rd18672;
	}
	shf.r.wrap.b32 	%r4311, %r4310, %r4309, 14;
	shf.r.wrap.b32 	%r4312, %r4309, %r4310, 14;
	mov.b64 	%rd6714, {%r4312, %r4311};
	shf.r.wrap.b32 	%r4313, %r4310, %r4309, 18;
	shf.r.wrap.b32 	%r4314, %r4309, %r4310, 18;
	mov.b64 	%rd6715, {%r4314, %r4313};
	xor.b64  	%rd6716, %rd6715, %rd6714;
	shf.l.wrap.b32 	%r4315, %r4309, %r4310, 23;
	shf.l.wrap.b32 	%r4316, %r4310, %r4309, 23;
	mov.b64 	%rd6717, {%r4316, %r4315};
	xor.b64  	%rd6718, %rd6716, %rd6717;
	xor.b64  	%rd6719, %rd18673, %rd6650;
	and.b64  	%rd6720, %rd18672, %rd6719;
	xor.b64  	%rd6721, %rd6720, %rd6650;
	add.s64 	%rd6722, %rd6623, %rd18659;
	ld.const.u64 	%rd6723, [%rd6713];
	add.s64 	%rd6724, %rd6722, %rd6723;
	add.s64 	%rd6725, %rd6724, %rd6721;
	add.s64 	%rd6726, %rd6725, %rd6718;
	add.s64 	%rd18671, %rd6726, %rd6634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4317,%dummy}, %rd18668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4318}, %rd18668;
	}
	shf.r.wrap.b32 	%r4319, %r4318, %r4317, 28;
	shf.r.wrap.b32 	%r4320, %r4317, %r4318, 28;
	mov.b64 	%rd6727, {%r4320, %r4319};
	shf.l.wrap.b32 	%r4321, %r4317, %r4318, 30;
	shf.l.wrap.b32 	%r4322, %r4318, %r4317, 30;
	mov.b64 	%rd6728, {%r4322, %r4321};
	xor.b64  	%rd6729, %rd6728, %rd6727;
	shf.l.wrap.b32 	%r4323, %r4317, %r4318, 25;
	shf.l.wrap.b32 	%r4324, %r4318, %r4317, 25;
	mov.b64 	%rd6730, {%r4324, %r4323};
	xor.b64  	%rd6731, %rd6729, %rd6730;
	and.b64  	%rd6732, %rd18668, %rd18669;
	xor.b64  	%rd6733, %rd18668, %rd18669;
	and.b64  	%rd6734, %rd6733, %rd6661;
	or.b64  	%rd6735, %rd6734, %rd6732;
	add.s64 	%rd6736, %rd6726, %rd6735;
	add.s64 	%rd18667, %rd6736, %rd6731;
	add.s32 	%r4325, %r12938, 15;
	mul.wide.s32 	%rd6737, %r4325, 8;
	add.s64 	%rd6738, %rd18522, %rd6737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4326,%dummy}, %rd18671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4327}, %rd18671;
	}
	shf.r.wrap.b32 	%r4328, %r4327, %r4326, 14;
	shf.r.wrap.b32 	%r4329, %r4326, %r4327, 14;
	mov.b64 	%rd6739, {%r4329, %r4328};
	shf.r.wrap.b32 	%r4330, %r4327, %r4326, 18;
	shf.r.wrap.b32 	%r4331, %r4326, %r4327, 18;
	mov.b64 	%rd6740, {%r4331, %r4330};
	xor.b64  	%rd6741, %rd6740, %rd6739;
	shf.l.wrap.b32 	%r4332, %r4326, %r4327, 23;
	shf.l.wrap.b32 	%r4333, %r4327, %r4326, 23;
	mov.b64 	%rd6742, {%r4333, %r4332};
	xor.b64  	%rd6743, %rd6741, %rd6742;
	xor.b64  	%rd6744, %rd18672, %rd18673;
	and.b64  	%rd6745, %rd18671, %rd6744;
	xor.b64  	%rd6746, %rd6745, %rd18673;
	add.s64 	%rd6747, %rd6650, %rd18658;
	ld.const.u64 	%rd6748, [%rd6738];
	add.s64 	%rd6749, %rd6747, %rd6748;
	add.s64 	%rd6750, %rd6749, %rd6746;
	add.s64 	%rd6751, %rd6750, %rd6743;
	add.s64 	%rd18670, %rd6751, %rd6661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4334,%dummy}, %rd18667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4335}, %rd18667;
	}
	shf.r.wrap.b32 	%r4336, %r4335, %r4334, 28;
	shf.r.wrap.b32 	%r4337, %r4334, %r4335, 28;
	mov.b64 	%rd6752, {%r4337, %r4336};
	shf.l.wrap.b32 	%r4338, %r4334, %r4335, 30;
	shf.l.wrap.b32 	%r4339, %r4335, %r4334, 30;
	mov.b64 	%rd6753, {%r4339, %r4338};
	xor.b64  	%rd6754, %rd6753, %rd6752;
	shf.l.wrap.b32 	%r4340, %r4334, %r4335, 25;
	shf.l.wrap.b32 	%r4341, %r4335, %r4334, 25;
	mov.b64 	%rd6755, {%r4341, %r4340};
	xor.b64  	%rd6756, %rd6754, %rd6755;
	and.b64  	%rd6757, %rd18667, %rd18668;
	xor.b64  	%rd6758, %rd18667, %rd18668;
	and.b64  	%rd6759, %rd6758, %rd18669;
	or.b64  	%rd6760, %rd6759, %rd6757;
	add.s64 	%rd6761, %rd6751, %rd6760;
	add.s64 	%rd18666, %rd6761, %rd6756;
	add.s32 	%r12938, %r12938, 16;
	setp.lt.s32	%p66, %r12938, 80;
	@%p66 bra 	BB0_108;

	add.s64 	%rd6762, %rd413, %rd18666;
	st.local.u64 	[%rd1], %rd6762;
	add.s64 	%rd6763, %rd414, %rd18667;
	st.local.u64 	[%rd1+8], %rd6763;
	add.s64 	%rd6764, %rd415, %rd18668;
	st.local.u64 	[%rd1+16], %rd6764;
	add.s64 	%rd6765, %rd412, %rd18669;
	st.local.u64 	[%rd1+24], %rd6765;
	add.s64 	%rd6766, %rd407, %rd18670;
	st.local.u64 	[%rd1+32], %rd6766;
	add.s64 	%rd6767, %rd409, %rd18671;
	st.local.u64 	[%rd1+40], %rd6767;
	add.s64 	%rd6768, %rd408, %rd18672;
	st.local.u64 	[%rd1+48], %rd6768;
	add.s64 	%rd6769, %rd410, %rd18673;
	st.local.u64 	[%rd1+56], %rd6769;
	sub.s32 	%r162, %r3, %r142;
	setp.lt.s32	%p67, %r162, 1;
	@%p67 bra 	BB0_127;

	add.s32 	%r163, %r141, -128;
	and.b32  	%r164, %r163, 3;
	setp.eq.s32	%p68, %r164, 0;
	mov.u32 	%r12942, 0;
	@%p68 bra 	BB0_116;

	setp.eq.s32	%p69, %r164, 1;
	mov.u32 	%r12940, 0;
	@%p69 bra 	BB0_115;

	setp.eq.s32	%p70, %r164, 2;
	mov.u32 	%r12939, 0;
	@%p70 bra 	BB0_114;

	xor.b32  	%r4346, %r142, 7;
	cvt.u64.u32	%rd6770, %r4346;
	add.s64 	%rd6771, %rd1465, %rd6770;
	ld.local.u8 	%rs77, [%rd6771];
	st.local.u8 	[%rd89+7], %rs77;
	mov.u32 	%r12939, 1;

BB0_114:
	add.s32 	%r4347, %r12939, %r142;
	xor.b32  	%r4348, %r4347, 7;
	cvt.s64.s32	%rd6772, %r4348;
	add.s64 	%rd6773, %rd1465, %rd6772;
	ld.local.u8 	%rs78, [%rd6773];
	xor.b32  	%r4349, %r12939, 7;
	cvt.u64.u32	%rd6774, %r4349;
	add.s64 	%rd6775, %rd89, %rd6774;
	st.local.u8 	[%rd6775], %rs78;
	add.s32 	%r12940, %r12939, 1;

BB0_115:
	add.s32 	%r4350, %r12940, %r142;
	xor.b32  	%r4351, %r4350, 7;
	cvt.s64.s32	%rd6776, %r4351;
	add.s64 	%rd6777, %rd1465, %rd6776;
	ld.local.u8 	%rs79, [%rd6777];
	xor.b32  	%r4352, %r12940, 7;
	cvt.s64.s32	%rd6778, %r4352;
	add.s64 	%rd6779, %rd89, %rd6778;
	st.local.u8 	[%rd6779], %rs79;
	add.s32 	%r12942, %r12940, 1;

BB0_116:
	setp.lt.u32	%p71, %r163, 4;
	@%p71 bra 	BB0_127;

BB0_117:
	add.s32 	%r4353, %r12942, %r142;
	xor.b32  	%r4354, %r4353, 7;
	cvt.s64.s32	%rd6780, %r4354;
	add.s64 	%rd6781, %rd1465, %rd6780;
	ld.local.u8 	%rs80, [%rd6781];
	xor.b32  	%r4355, %r12942, 7;
	cvt.s64.s32	%rd6782, %r4355;
	add.s64 	%rd6783, %rd89, %rd6782;
	st.local.u8 	[%rd6783], %rs80;
	add.s32 	%r4356, %r12942, 1;
	add.s32 	%r4357, %r4356, %r142;
	xor.b32  	%r4358, %r4357, 7;
	cvt.s64.s32	%rd6784, %r4358;
	add.s64 	%rd6785, %rd1465, %rd6784;
	ld.local.u8 	%rs81, [%rd6785];
	xor.b32  	%r4359, %r4356, 7;
	cvt.s64.s32	%rd6786, %r4359;
	add.s64 	%rd6787, %rd89, %rd6786;
	st.local.u8 	[%rd6787], %rs81;
	add.s32 	%r4360, %r12942, 2;
	add.s32 	%r4361, %r4360, %r142;
	xor.b32  	%r4362, %r4361, 7;
	cvt.s64.s32	%rd6788, %r4362;
	add.s64 	%rd6789, %rd1465, %rd6788;
	ld.local.u8 	%rs82, [%rd6789];
	xor.b32  	%r4363, %r4360, 7;
	cvt.s64.s32	%rd6790, %r4363;
	add.s64 	%rd6791, %rd89, %rd6790;
	st.local.u8 	[%rd6791], %rs82;
	add.s32 	%r4364, %r12942, 3;
	add.s32 	%r4365, %r4364, %r142;
	xor.b32  	%r4366, %r4365, 7;
	cvt.s64.s32	%rd6792, %r4366;
	add.s64 	%rd6793, %rd1465, %rd6792;
	ld.local.u8 	%rs83, [%rd6793];
	xor.b32  	%r4367, %r4364, 7;
	cvt.s64.s32	%rd6794, %r4367;
	add.s64 	%rd6795, %rd89, %rd6794;
	st.local.u8 	[%rd6795], %rs83;
	add.s32 	%r12942, %r12942, 4;
	setp.lt.s32	%p72, %r12942, %r162;
	@%p72 bra 	BB0_117;

BB0_127:
	ld.local.u32 	%r4392, [%rd1+192];
	and.b32  	%r187, %r4392, 127;
	add.s32 	%r4393, %r4392, %r2;
	st.local.u32 	[%rd1+192], %r4393;
	add.s32 	%r188, %r187, %r2;
	setp.lt.s32	%p79, %r188, 128;
	@%p79 bra 	BB0_148;
	bra.uni 	BB0_128;

BB0_148:
	@%p2 bra 	BB0_158;

	mov.u32 	%r5160, 1;
	max.u32 	%r219, %r2, %r5160;
	and.b32  	%r220, %r219, 3;
	setp.eq.s32	%p93, %r220, 0;
	mov.u32 	%r12971, 0;
	@%p93 bra 	BB0_156;

	setp.eq.s32	%p94, %r220, 1;
	mov.u32 	%r12967, 0;
	@%p94 bra 	BB0_155;

	setp.eq.s32	%p95, %r220, 2;
	mov.u32 	%r5162, 0;
	@%p95 bra 	BB0_152;
	bra.uni 	BB0_153;

BB0_152:
	mov.u32 	%r5160, %r5162;
	bra.uni 	BB0_154;

BB0_128:
	sub.s32 	%r189, %r2137, %r187;
	mov.u32 	%r4396, 1;
	max.u32 	%r190, %r189, %r4396;
	and.b32  	%r191, %r190, 3;
	setp.eq.s32	%p80, %r191, 0;
	mov.u32 	%r12957, 0;
	@%p80 bra 	BB0_135;

	setp.eq.s32	%p81, %r191, 1;
	mov.u32 	%r12953, 0;
	@%p81 bra 	BB0_134;

	setp.eq.s32	%p82, %r191, 2;
	mov.u32 	%r4398, 0;
	@%p82 bra 	BB0_131;
	bra.uni 	BB0_132;

BB0_131:
	mov.u32 	%r4396, %r4398;
	bra.uni 	BB0_133;

BB0_132:
	ld.local.u8 	%rs91, [%rd339+7];
	xor.b32  	%r4400, %r187, 7;
	cvt.u64.u32	%rd6824, %r4400;
	add.s64 	%rd6825, %rd89, %rd6824;
	st.local.u8 	[%rd6825], %rs91;
	add.s32 	%r187, %r187, 1;

BB0_133:
	xor.b32  	%r4401, %r4396, 7;
	cvt.u64.u32	%rd6826, %r4401;
	add.s64 	%rd6827, %rd339, %rd6826;
	ld.local.u8 	%rs92, [%rd6827];
	xor.b32  	%r4402, %r187, 7;
	cvt.s64.s32	%rd6828, %r4402;
	add.s64 	%rd6829, %rd89, %rd6828;
	st.local.u8 	[%rd6829], %rs92;
	add.s32 	%r187, %r187, 1;
	add.s32 	%r12953, %r4396, 1;

BB0_134:
	xor.b32  	%r4403, %r12953, 7;
	cvt.s64.s32	%rd6830, %r4403;
	add.s64 	%rd6831, %rd339, %rd6830;
	ld.local.u8 	%rs93, [%rd6831];
	xor.b32  	%r4404, %r187, 7;
	cvt.s64.s32	%rd6832, %r4404;
	add.s64 	%rd6833, %rd89, %rd6832;
	st.local.u8 	[%rd6833], %rs93;
	add.s32 	%r187, %r187, 1;
	add.s32 	%r12957, %r12953, 1;

BB0_135:
	setp.lt.u32	%p83, %r190, 4;
	@%p83 bra 	BB0_137;

BB0_136:
	xor.b32  	%r4405, %r12957, 7;
	cvt.s64.s32	%rd6834, %r4405;
	add.s64 	%rd6835, %rd339, %rd6834;
	ld.local.u8 	%rs94, [%rd6835];
	xor.b32  	%r4406, %r187, 7;
	cvt.s64.s32	%rd6836, %r4406;
	add.s64 	%rd6837, %rd89, %rd6836;
	st.local.u8 	[%rd6837], %rs94;
	add.s32 	%r4407, %r12957, 1;
	xor.b32  	%r4408, %r4407, 7;
	cvt.s64.s32	%rd6838, %r4408;
	add.s64 	%rd6839, %rd339, %rd6838;
	ld.local.u8 	%rs95, [%rd6839];
	add.s32 	%r4409, %r187, 1;
	xor.b32  	%r4410, %r4409, 7;
	cvt.s64.s32	%rd6840, %r4410;
	add.s64 	%rd6841, %rd89, %rd6840;
	st.local.u8 	[%rd6841], %rs95;
	add.s32 	%r4411, %r12957, 2;
	xor.b32  	%r4412, %r4411, 7;
	cvt.s64.s32	%rd6842, %r4412;
	add.s64 	%rd6843, %rd339, %rd6842;
	ld.local.u8 	%rs96, [%rd6843];
	add.s32 	%r4413, %r187, 2;
	xor.b32  	%r4414, %r4413, 7;
	cvt.s64.s32	%rd6844, %r4414;
	add.s64 	%rd6845, %rd89, %rd6844;
	st.local.u8 	[%rd6845], %rs96;
	add.s32 	%r4415, %r12957, 3;
	xor.b32  	%r4416, %r4415, 7;
	cvt.s64.s32	%rd6846, %r4416;
	add.s64 	%rd6847, %rd339, %rd6846;
	ld.local.u8 	%rs97, [%rd6847];
	add.s32 	%r4417, %r187, 3;
	xor.b32  	%r4418, %r4417, 7;
	cvt.s64.s32	%rd6848, %r4418;
	add.s64 	%rd6849, %rd89, %rd6848;
	st.local.u8 	[%rd6849], %rs97;
	add.s32 	%r12957, %r12957, 4;
	setp.lt.s32	%p84, %r12957, %r189;
	add.s32 	%r187, %r187, 4;
	@%p84 bra 	BB0_136;

BB0_137:
	ld.local.u64 	%rd489, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4420,%dummy}, %rd489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4421}, %rd489;
	}
	shf.r.wrap.b32 	%r4422, %r4421, %r4420, 14;
	shf.r.wrap.b32 	%r4423, %r4420, %r4421, 14;
	mov.b64 	%rd6850, {%r4423, %r4422};
	shf.r.wrap.b32 	%r4424, %r4421, %r4420, 18;
	shf.r.wrap.b32 	%r4425, %r4420, %r4421, 18;
	mov.b64 	%rd6851, {%r4425, %r4424};
	xor.b64  	%rd6852, %rd6851, %rd6850;
	shf.l.wrap.b32 	%r4426, %r4420, %r4421, 23;
	shf.l.wrap.b32 	%r4427, %r4421, %r4420, 23;
	mov.b64 	%rd6853, {%r4427, %r4426};
	xor.b64  	%rd6854, %rd6852, %rd6853;
	ld.local.u64 	%rd490, [%rd1+48];
	ld.local.u64 	%rd491, [%rd1+40];
	xor.b64  	%rd6855, %rd490, %rd491;
	and.b64  	%rd6856, %rd6855, %rd489;
	xor.b64  	%rd6857, %rd6856, %rd490;
	ld.local.u64 	%rd492, [%rd1+56];
	ld.local.u64 	%rd18698, [%rd1+64];
	add.s64 	%rd6858, %rd492, %rd18698;
	add.s64 	%rd6859, %rd6858, %rd18610;
	add.s64 	%rd6860, %rd6859, %rd6857;
	add.s64 	%rd6861, %rd6860, %rd6854;
	ld.local.u64 	%rd494, [%rd1+24];
	add.s64 	%rd6862, %rd6861, %rd494;
	ld.local.u64 	%rd495, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4428,%dummy}, %rd495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4429}, %rd495;
	}
	shf.r.wrap.b32 	%r4430, %r4429, %r4428, 28;
	shf.r.wrap.b32 	%r4431, %r4428, %r4429, 28;
	mov.b64 	%rd6863, {%r4431, %r4430};
	shf.l.wrap.b32 	%r4432, %r4428, %r4429, 30;
	shf.l.wrap.b32 	%r4433, %r4429, %r4428, 30;
	mov.b64 	%rd6864, {%r4433, %r4432};
	xor.b64  	%rd6865, %rd6864, %rd6863;
	shf.l.wrap.b32 	%r4434, %r4428, %r4429, 25;
	shf.l.wrap.b32 	%r4435, %r4429, %r4428, 25;
	mov.b64 	%rd6866, {%r4435, %r4434};
	xor.b64  	%rd6867, %rd6865, %rd6866;
	ld.local.u64 	%rd496, [%rd1+8];
	and.b64  	%rd6868, %rd496, %rd495;
	xor.b64  	%rd6869, %rd496, %rd495;
	ld.local.u64 	%rd497, [%rd1+16];
	and.b64  	%rd6870, %rd497, %rd6869;
	or.b64  	%rd6871, %rd6870, %rd6868;
	add.s64 	%rd6872, %rd6861, %rd6871;
	add.s64 	%rd6873, %rd6872, %rd6867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4436,%dummy}, %rd6862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4437}, %rd6862;
	}
	shf.r.wrap.b32 	%r4438, %r4437, %r4436, 14;
	shf.r.wrap.b32 	%r4439, %r4436, %r4437, 14;
	mov.b64 	%rd6874, {%r4439, %r4438};
	shf.r.wrap.b32 	%r4440, %r4437, %r4436, 18;
	shf.r.wrap.b32 	%r4441, %r4436, %r4437, 18;
	mov.b64 	%rd6875, {%r4441, %r4440};
	xor.b64  	%rd6876, %rd6875, %rd6874;
	shf.l.wrap.b32 	%r4442, %r4436, %r4437, 23;
	shf.l.wrap.b32 	%r4443, %r4437, %r4436, 23;
	mov.b64 	%rd6877, {%r4443, %r4442};
	xor.b64  	%rd6878, %rd6876, %rd6877;
	xor.b64  	%rd6879, %rd491, %rd489;
	and.b64  	%rd6880, %rd6862, %rd6879;
	xor.b64  	%rd6881, %rd6880, %rd491;
	ld.local.u64 	%rd18699, [%rd1+72];
	add.s64 	%rd6882, %rd490, %rd18699;
	add.s64 	%rd6883, %rd6882, %rd18609;
	add.s64 	%rd6884, %rd6883, %rd6881;
	add.s64 	%rd6885, %rd6884, %rd6878;
	add.s64 	%rd6886, %rd6885, %rd497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4444,%dummy}, %rd6873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4445}, %rd6873;
	}
	shf.r.wrap.b32 	%r4446, %r4445, %r4444, 28;
	shf.r.wrap.b32 	%r4447, %r4444, %r4445, 28;
	mov.b64 	%rd6887, {%r4447, %r4446};
	shf.l.wrap.b32 	%r4448, %r4444, %r4445, 30;
	shf.l.wrap.b32 	%r4449, %r4445, %r4444, 30;
	mov.b64 	%rd6888, {%r4449, %r4448};
	xor.b64  	%rd6889, %rd6888, %rd6887;
	shf.l.wrap.b32 	%r4450, %r4444, %r4445, 25;
	shf.l.wrap.b32 	%r4451, %r4445, %r4444, 25;
	mov.b64 	%rd6890, {%r4451, %r4450};
	xor.b64  	%rd6891, %rd6889, %rd6890;
	and.b64  	%rd6892, %rd6873, %rd495;
	xor.b64  	%rd6893, %rd6873, %rd495;
	and.b64  	%rd6894, %rd6893, %rd496;
	or.b64  	%rd6895, %rd6894, %rd6892;
	add.s64 	%rd6896, %rd6885, %rd6895;
	add.s64 	%rd6897, %rd6896, %rd6891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4452,%dummy}, %rd6886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4453}, %rd6886;
	}
	shf.r.wrap.b32 	%r4454, %r4453, %r4452, 14;
	shf.r.wrap.b32 	%r4455, %r4452, %r4453, 14;
	mov.b64 	%rd6898, {%r4455, %r4454};
	shf.r.wrap.b32 	%r4456, %r4453, %r4452, 18;
	shf.r.wrap.b32 	%r4457, %r4452, %r4453, 18;
	mov.b64 	%rd6899, {%r4457, %r4456};
	xor.b64  	%rd6900, %rd6899, %rd6898;
	shf.l.wrap.b32 	%r4458, %r4452, %r4453, 23;
	shf.l.wrap.b32 	%r4459, %r4453, %r4452, 23;
	mov.b64 	%rd6901, {%r4459, %r4458};
	xor.b64  	%rd6902, %rd6900, %rd6901;
	xor.b64  	%rd6903, %rd6862, %rd489;
	and.b64  	%rd6904, %rd6886, %rd6903;
	xor.b64  	%rd6905, %rd6904, %rd489;
	ld.local.u64 	%rd18700, [%rd1+80];
	add.s64 	%rd6906, %rd491, %rd18700;
	add.s64 	%rd6907, %rd6906, %rd18608;
	add.s64 	%rd6908, %rd6907, %rd6905;
	add.s64 	%rd6909, %rd6908, %rd6902;
	add.s64 	%rd6910, %rd6909, %rd496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4460,%dummy}, %rd6897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4461}, %rd6897;
	}
	shf.r.wrap.b32 	%r4462, %r4461, %r4460, 28;
	shf.r.wrap.b32 	%r4463, %r4460, %r4461, 28;
	mov.b64 	%rd6911, {%r4463, %r4462};
	shf.l.wrap.b32 	%r4464, %r4460, %r4461, 30;
	shf.l.wrap.b32 	%r4465, %r4461, %r4460, 30;
	mov.b64 	%rd6912, {%r4465, %r4464};
	xor.b64  	%rd6913, %rd6912, %rd6911;
	shf.l.wrap.b32 	%r4466, %r4460, %r4461, 25;
	shf.l.wrap.b32 	%r4467, %r4461, %r4460, 25;
	mov.b64 	%rd6914, {%r4467, %r4466};
	xor.b64  	%rd6915, %rd6913, %rd6914;
	and.b64  	%rd6916, %rd6897, %rd6873;
	xor.b64  	%rd6917, %rd6897, %rd6873;
	and.b64  	%rd6918, %rd6917, %rd495;
	or.b64  	%rd6919, %rd6918, %rd6916;
	add.s64 	%rd6920, %rd6909, %rd6919;
	add.s64 	%rd6921, %rd6920, %rd6915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4468,%dummy}, %rd6910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4469}, %rd6910;
	}
	shf.r.wrap.b32 	%r4470, %r4469, %r4468, 14;
	shf.r.wrap.b32 	%r4471, %r4468, %r4469, 14;
	mov.b64 	%rd6922, {%r4471, %r4470};
	shf.r.wrap.b32 	%r4472, %r4469, %r4468, 18;
	shf.r.wrap.b32 	%r4473, %r4468, %r4469, 18;
	mov.b64 	%rd6923, {%r4473, %r4472};
	xor.b64  	%rd6924, %rd6923, %rd6922;
	shf.l.wrap.b32 	%r4474, %r4468, %r4469, 23;
	shf.l.wrap.b32 	%r4475, %r4469, %r4468, 23;
	mov.b64 	%rd6925, {%r4475, %r4474};
	xor.b64  	%rd6926, %rd6924, %rd6925;
	xor.b64  	%rd6927, %rd6886, %rd6862;
	and.b64  	%rd6928, %rd6910, %rd6927;
	xor.b64  	%rd6929, %rd6928, %rd6862;
	ld.local.u64 	%rd18701, [%rd1+88];
	add.s64 	%rd6930, %rd489, %rd18701;
	add.s64 	%rd6931, %rd6930, %rd18607;
	add.s64 	%rd6932, %rd6931, %rd6929;
	add.s64 	%rd6933, %rd6932, %rd6926;
	add.s64 	%rd6934, %rd6933, %rd495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4476,%dummy}, %rd6921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4477}, %rd6921;
	}
	shf.r.wrap.b32 	%r4478, %r4477, %r4476, 28;
	shf.r.wrap.b32 	%r4479, %r4476, %r4477, 28;
	mov.b64 	%rd6935, {%r4479, %r4478};
	shf.l.wrap.b32 	%r4480, %r4476, %r4477, 30;
	shf.l.wrap.b32 	%r4481, %r4477, %r4476, 30;
	mov.b64 	%rd6936, {%r4481, %r4480};
	xor.b64  	%rd6937, %rd6936, %rd6935;
	shf.l.wrap.b32 	%r4482, %r4476, %r4477, 25;
	shf.l.wrap.b32 	%r4483, %r4477, %r4476, 25;
	mov.b64 	%rd6938, {%r4483, %r4482};
	xor.b64  	%rd6939, %rd6937, %rd6938;
	and.b64  	%rd6940, %rd6921, %rd6897;
	xor.b64  	%rd6941, %rd6921, %rd6897;
	and.b64  	%rd6942, %rd6941, %rd6873;
	or.b64  	%rd6943, %rd6942, %rd6940;
	add.s64 	%rd6944, %rd6933, %rd6943;
	add.s64 	%rd6945, %rd6944, %rd6939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4484,%dummy}, %rd6934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4485}, %rd6934;
	}
	shf.r.wrap.b32 	%r4486, %r4485, %r4484, 14;
	shf.r.wrap.b32 	%r4487, %r4484, %r4485, 14;
	mov.b64 	%rd6946, {%r4487, %r4486};
	shf.r.wrap.b32 	%r4488, %r4485, %r4484, 18;
	shf.r.wrap.b32 	%r4489, %r4484, %r4485, 18;
	mov.b64 	%rd6947, {%r4489, %r4488};
	xor.b64  	%rd6948, %rd6947, %rd6946;
	shf.l.wrap.b32 	%r4490, %r4484, %r4485, 23;
	shf.l.wrap.b32 	%r4491, %r4485, %r4484, 23;
	mov.b64 	%rd6949, {%r4491, %r4490};
	xor.b64  	%rd6950, %rd6948, %rd6949;
	xor.b64  	%rd6951, %rd6910, %rd6886;
	and.b64  	%rd6952, %rd6934, %rd6951;
	xor.b64  	%rd6953, %rd6952, %rd6886;
	ld.local.u64 	%rd18702, [%rd1+96];
	add.s64 	%rd6954, %rd6862, %rd18702;
	add.s64 	%rd6955, %rd6954, %rd18606;
	add.s64 	%rd6956, %rd6955, %rd6953;
	add.s64 	%rd6957, %rd6956, %rd6950;
	add.s64 	%rd6958, %rd6957, %rd6873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4492,%dummy}, %rd6945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4493}, %rd6945;
	}
	shf.r.wrap.b32 	%r4494, %r4493, %r4492, 28;
	shf.r.wrap.b32 	%r4495, %r4492, %r4493, 28;
	mov.b64 	%rd6959, {%r4495, %r4494};
	shf.l.wrap.b32 	%r4496, %r4492, %r4493, 30;
	shf.l.wrap.b32 	%r4497, %r4493, %r4492, 30;
	mov.b64 	%rd6960, {%r4497, %r4496};
	xor.b64  	%rd6961, %rd6960, %rd6959;
	shf.l.wrap.b32 	%r4498, %r4492, %r4493, 25;
	shf.l.wrap.b32 	%r4499, %r4493, %r4492, 25;
	mov.b64 	%rd6962, {%r4499, %r4498};
	xor.b64  	%rd6963, %rd6961, %rd6962;
	and.b64  	%rd6964, %rd6945, %rd6921;
	xor.b64  	%rd6965, %rd6945, %rd6921;
	and.b64  	%rd6966, %rd6965, %rd6897;
	or.b64  	%rd6967, %rd6966, %rd6964;
	add.s64 	%rd6968, %rd6957, %rd6967;
	add.s64 	%rd6969, %rd6968, %rd6963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4500,%dummy}, %rd6958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4501}, %rd6958;
	}
	shf.r.wrap.b32 	%r4502, %r4501, %r4500, 14;
	shf.r.wrap.b32 	%r4503, %r4500, %r4501, 14;
	mov.b64 	%rd6970, {%r4503, %r4502};
	shf.r.wrap.b32 	%r4504, %r4501, %r4500, 18;
	shf.r.wrap.b32 	%r4505, %r4500, %r4501, 18;
	mov.b64 	%rd6971, {%r4505, %r4504};
	xor.b64  	%rd6972, %rd6971, %rd6970;
	shf.l.wrap.b32 	%r4506, %r4500, %r4501, 23;
	shf.l.wrap.b32 	%r4507, %r4501, %r4500, 23;
	mov.b64 	%rd6973, {%r4507, %r4506};
	xor.b64  	%rd6974, %rd6972, %rd6973;
	xor.b64  	%rd6975, %rd6934, %rd6910;
	and.b64  	%rd6976, %rd6958, %rd6975;
	xor.b64  	%rd6977, %rd6976, %rd6910;
	ld.local.u64 	%rd18703, [%rd1+104];
	add.s64 	%rd6978, %rd6886, %rd18703;
	add.s64 	%rd6979, %rd6978, %rd18605;
	add.s64 	%rd6980, %rd6979, %rd6977;
	add.s64 	%rd6981, %rd6980, %rd6974;
	add.s64 	%rd6982, %rd6981, %rd6897;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4508,%dummy}, %rd6969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4509}, %rd6969;
	}
	shf.r.wrap.b32 	%r4510, %r4509, %r4508, 28;
	shf.r.wrap.b32 	%r4511, %r4508, %r4509, 28;
	mov.b64 	%rd6983, {%r4511, %r4510};
	shf.l.wrap.b32 	%r4512, %r4508, %r4509, 30;
	shf.l.wrap.b32 	%r4513, %r4509, %r4508, 30;
	mov.b64 	%rd6984, {%r4513, %r4512};
	xor.b64  	%rd6985, %rd6984, %rd6983;
	shf.l.wrap.b32 	%r4514, %r4508, %r4509, 25;
	shf.l.wrap.b32 	%r4515, %r4509, %r4508, 25;
	mov.b64 	%rd6986, {%r4515, %r4514};
	xor.b64  	%rd6987, %rd6985, %rd6986;
	and.b64  	%rd6988, %rd6969, %rd6945;
	xor.b64  	%rd6989, %rd6969, %rd6945;
	and.b64  	%rd6990, %rd6989, %rd6921;
	or.b64  	%rd6991, %rd6990, %rd6988;
	add.s64 	%rd6992, %rd6981, %rd6991;
	add.s64 	%rd6993, %rd6992, %rd6987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4516,%dummy}, %rd6982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4517}, %rd6982;
	}
	shf.r.wrap.b32 	%r4518, %r4517, %r4516, 14;
	shf.r.wrap.b32 	%r4519, %r4516, %r4517, 14;
	mov.b64 	%rd6994, {%r4519, %r4518};
	shf.r.wrap.b32 	%r4520, %r4517, %r4516, 18;
	shf.r.wrap.b32 	%r4521, %r4516, %r4517, 18;
	mov.b64 	%rd6995, {%r4521, %r4520};
	xor.b64  	%rd6996, %rd6995, %rd6994;
	shf.l.wrap.b32 	%r4522, %r4516, %r4517, 23;
	shf.l.wrap.b32 	%r4523, %r4517, %r4516, 23;
	mov.b64 	%rd6997, {%r4523, %r4522};
	xor.b64  	%rd6998, %rd6996, %rd6997;
	xor.b64  	%rd6999, %rd6958, %rd6934;
	and.b64  	%rd7000, %rd6982, %rd6999;
	xor.b64  	%rd7001, %rd7000, %rd6934;
	ld.local.u64 	%rd18704, [%rd1+112];
	add.s64 	%rd7002, %rd6910, %rd18704;
	add.s64 	%rd7003, %rd7002, %rd18604;
	add.s64 	%rd7004, %rd7003, %rd7001;
	add.s64 	%rd7005, %rd7004, %rd6998;
	add.s64 	%rd7006, %rd7005, %rd6921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4524,%dummy}, %rd6993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4525}, %rd6993;
	}
	shf.r.wrap.b32 	%r4526, %r4525, %r4524, 28;
	shf.r.wrap.b32 	%r4527, %r4524, %r4525, 28;
	mov.b64 	%rd7007, {%r4527, %r4526};
	shf.l.wrap.b32 	%r4528, %r4524, %r4525, 30;
	shf.l.wrap.b32 	%r4529, %r4525, %r4524, 30;
	mov.b64 	%rd7008, {%r4529, %r4528};
	xor.b64  	%rd7009, %rd7008, %rd7007;
	shf.l.wrap.b32 	%r4530, %r4524, %r4525, 25;
	shf.l.wrap.b32 	%r4531, %r4525, %r4524, 25;
	mov.b64 	%rd7010, {%r4531, %r4530};
	xor.b64  	%rd7011, %rd7009, %rd7010;
	and.b64  	%rd7012, %rd6993, %rd6969;
	xor.b64  	%rd7013, %rd6993, %rd6969;
	and.b64  	%rd7014, %rd7013, %rd6945;
	or.b64  	%rd7015, %rd7014, %rd7012;
	add.s64 	%rd7016, %rd7005, %rd7015;
	add.s64 	%rd7017, %rd7016, %rd7011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4532,%dummy}, %rd7006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4533}, %rd7006;
	}
	shf.r.wrap.b32 	%r4534, %r4533, %r4532, 14;
	shf.r.wrap.b32 	%r4535, %r4532, %r4533, 14;
	mov.b64 	%rd7018, {%r4535, %r4534};
	shf.r.wrap.b32 	%r4536, %r4533, %r4532, 18;
	shf.r.wrap.b32 	%r4537, %r4532, %r4533, 18;
	mov.b64 	%rd7019, {%r4537, %r4536};
	xor.b64  	%rd7020, %rd7019, %rd7018;
	shf.l.wrap.b32 	%r4538, %r4532, %r4533, 23;
	shf.l.wrap.b32 	%r4539, %r4533, %r4532, 23;
	mov.b64 	%rd7021, {%r4539, %r4538};
	xor.b64  	%rd7022, %rd7020, %rd7021;
	xor.b64  	%rd7023, %rd6982, %rd6958;
	and.b64  	%rd7024, %rd7006, %rd7023;
	xor.b64  	%rd7025, %rd7024, %rd6958;
	ld.local.u64 	%rd18705, [%rd1+120];
	add.s64 	%rd7026, %rd6934, %rd18705;
	add.s64 	%rd7027, %rd7026, %rd18603;
	add.s64 	%rd7028, %rd7027, %rd7025;
	add.s64 	%rd7029, %rd7028, %rd7022;
	add.s64 	%rd7030, %rd7029, %rd6945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4540,%dummy}, %rd7017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4541}, %rd7017;
	}
	shf.r.wrap.b32 	%r4542, %r4541, %r4540, 28;
	shf.r.wrap.b32 	%r4543, %r4540, %r4541, 28;
	mov.b64 	%rd7031, {%r4543, %r4542};
	shf.l.wrap.b32 	%r4544, %r4540, %r4541, 30;
	shf.l.wrap.b32 	%r4545, %r4541, %r4540, 30;
	mov.b64 	%rd7032, {%r4545, %r4544};
	xor.b64  	%rd7033, %rd7032, %rd7031;
	shf.l.wrap.b32 	%r4546, %r4540, %r4541, 25;
	shf.l.wrap.b32 	%r4547, %r4541, %r4540, 25;
	mov.b64 	%rd7034, {%r4547, %r4546};
	xor.b64  	%rd7035, %rd7033, %rd7034;
	and.b64  	%rd7036, %rd7017, %rd6993;
	xor.b64  	%rd7037, %rd7017, %rd6993;
	and.b64  	%rd7038, %rd7037, %rd6969;
	or.b64  	%rd7039, %rd7038, %rd7036;
	add.s64 	%rd7040, %rd7029, %rd7039;
	add.s64 	%rd7041, %rd7040, %rd7035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4548,%dummy}, %rd7030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4549}, %rd7030;
	}
	shf.r.wrap.b32 	%r4550, %r4549, %r4548, 14;
	shf.r.wrap.b32 	%r4551, %r4548, %r4549, 14;
	mov.b64 	%rd7042, {%r4551, %r4550};
	shf.r.wrap.b32 	%r4552, %r4549, %r4548, 18;
	shf.r.wrap.b32 	%r4553, %r4548, %r4549, 18;
	mov.b64 	%rd7043, {%r4553, %r4552};
	xor.b64  	%rd7044, %rd7043, %rd7042;
	shf.l.wrap.b32 	%r4554, %r4548, %r4549, 23;
	shf.l.wrap.b32 	%r4555, %r4549, %r4548, 23;
	mov.b64 	%rd7045, {%r4555, %r4554};
	xor.b64  	%rd7046, %rd7044, %rd7045;
	xor.b64  	%rd7047, %rd7006, %rd6982;
	and.b64  	%rd7048, %rd7030, %rd7047;
	xor.b64  	%rd7049, %rd7048, %rd6982;
	ld.local.u64 	%rd18689, [%rd1+128];
	add.s64 	%rd7050, %rd6958, %rd18689;
	add.s64 	%rd7051, %rd7050, %rd18602;
	add.s64 	%rd7052, %rd7051, %rd7049;
	add.s64 	%rd7053, %rd7052, %rd7046;
	add.s64 	%rd7054, %rd7053, %rd6969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4556,%dummy}, %rd7041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4557}, %rd7041;
	}
	shf.r.wrap.b32 	%r4558, %r4557, %r4556, 28;
	shf.r.wrap.b32 	%r4559, %r4556, %r4557, 28;
	mov.b64 	%rd7055, {%r4559, %r4558};
	shf.l.wrap.b32 	%r4560, %r4556, %r4557, 30;
	shf.l.wrap.b32 	%r4561, %r4557, %r4556, 30;
	mov.b64 	%rd7056, {%r4561, %r4560};
	xor.b64  	%rd7057, %rd7056, %rd7055;
	shf.l.wrap.b32 	%r4562, %r4556, %r4557, 25;
	shf.l.wrap.b32 	%r4563, %r4557, %r4556, 25;
	mov.b64 	%rd7058, {%r4563, %r4562};
	xor.b64  	%rd7059, %rd7057, %rd7058;
	and.b64  	%rd7060, %rd7041, %rd7017;
	xor.b64  	%rd7061, %rd7041, %rd7017;
	and.b64  	%rd7062, %rd7061, %rd6993;
	or.b64  	%rd7063, %rd7062, %rd7060;
	add.s64 	%rd7064, %rd7053, %rd7063;
	add.s64 	%rd7065, %rd7064, %rd7059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4564,%dummy}, %rd7054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4565}, %rd7054;
	}
	shf.r.wrap.b32 	%r4566, %r4565, %r4564, 14;
	shf.r.wrap.b32 	%r4567, %r4564, %r4565, 14;
	mov.b64 	%rd7066, {%r4567, %r4566};
	shf.r.wrap.b32 	%r4568, %r4565, %r4564, 18;
	shf.r.wrap.b32 	%r4569, %r4564, %r4565, 18;
	mov.b64 	%rd7067, {%r4569, %r4568};
	xor.b64  	%rd7068, %rd7067, %rd7066;
	shf.l.wrap.b32 	%r4570, %r4564, %r4565, 23;
	shf.l.wrap.b32 	%r4571, %r4565, %r4564, 23;
	mov.b64 	%rd7069, {%r4571, %r4570};
	xor.b64  	%rd7070, %rd7068, %rd7069;
	xor.b64  	%rd7071, %rd7030, %rd7006;
	and.b64  	%rd7072, %rd7054, %rd7071;
	xor.b64  	%rd7073, %rd7072, %rd7006;
	ld.local.u64 	%rd18688, [%rd1+136];
	add.s64 	%rd7074, %rd6982, %rd18688;
	add.s64 	%rd7075, %rd7074, %rd18601;
	add.s64 	%rd7076, %rd7075, %rd7073;
	add.s64 	%rd7077, %rd7076, %rd7070;
	add.s64 	%rd7078, %rd7077, %rd6993;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4572,%dummy}, %rd7065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4573}, %rd7065;
	}
	shf.r.wrap.b32 	%r4574, %r4573, %r4572, 28;
	shf.r.wrap.b32 	%r4575, %r4572, %r4573, 28;
	mov.b64 	%rd7079, {%r4575, %r4574};
	shf.l.wrap.b32 	%r4576, %r4572, %r4573, 30;
	shf.l.wrap.b32 	%r4577, %r4573, %r4572, 30;
	mov.b64 	%rd7080, {%r4577, %r4576};
	xor.b64  	%rd7081, %rd7080, %rd7079;
	shf.l.wrap.b32 	%r4578, %r4572, %r4573, 25;
	shf.l.wrap.b32 	%r4579, %r4573, %r4572, 25;
	mov.b64 	%rd7082, {%r4579, %r4578};
	xor.b64  	%rd7083, %rd7081, %rd7082;
	and.b64  	%rd7084, %rd7065, %rd7041;
	xor.b64  	%rd7085, %rd7065, %rd7041;
	and.b64  	%rd7086, %rd7085, %rd7017;
	or.b64  	%rd7087, %rd7086, %rd7084;
	add.s64 	%rd7088, %rd7077, %rd7087;
	add.s64 	%rd7089, %rd7088, %rd7083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4580,%dummy}, %rd7078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4581}, %rd7078;
	}
	shf.r.wrap.b32 	%r4582, %r4581, %r4580, 14;
	shf.r.wrap.b32 	%r4583, %r4580, %r4581, 14;
	mov.b64 	%rd7090, {%r4583, %r4582};
	shf.r.wrap.b32 	%r4584, %r4581, %r4580, 18;
	shf.r.wrap.b32 	%r4585, %r4580, %r4581, 18;
	mov.b64 	%rd7091, {%r4585, %r4584};
	xor.b64  	%rd7092, %rd7091, %rd7090;
	shf.l.wrap.b32 	%r4586, %r4580, %r4581, 23;
	shf.l.wrap.b32 	%r4587, %r4581, %r4580, 23;
	mov.b64 	%rd7093, {%r4587, %r4586};
	xor.b64  	%rd7094, %rd7092, %rd7093;
	xor.b64  	%rd7095, %rd7054, %rd7030;
	and.b64  	%rd7096, %rd7078, %rd7095;
	xor.b64  	%rd7097, %rd7096, %rd7030;
	ld.local.u64 	%rd18687, [%rd1+144];
	add.s64 	%rd7098, %rd7006, %rd18687;
	add.s64 	%rd7099, %rd7098, %rd18600;
	add.s64 	%rd7100, %rd7099, %rd7097;
	add.s64 	%rd7101, %rd7100, %rd7094;
	add.s64 	%rd7102, %rd7101, %rd7017;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4588,%dummy}, %rd7089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4589}, %rd7089;
	}
	shf.r.wrap.b32 	%r4590, %r4589, %r4588, 28;
	shf.r.wrap.b32 	%r4591, %r4588, %r4589, 28;
	mov.b64 	%rd7103, {%r4591, %r4590};
	shf.l.wrap.b32 	%r4592, %r4588, %r4589, 30;
	shf.l.wrap.b32 	%r4593, %r4589, %r4588, 30;
	mov.b64 	%rd7104, {%r4593, %r4592};
	xor.b64  	%rd7105, %rd7104, %rd7103;
	shf.l.wrap.b32 	%r4594, %r4588, %r4589, 25;
	shf.l.wrap.b32 	%r4595, %r4589, %r4588, 25;
	mov.b64 	%rd7106, {%r4595, %r4594};
	xor.b64  	%rd7107, %rd7105, %rd7106;
	and.b64  	%rd7108, %rd7089, %rd7065;
	xor.b64  	%rd7109, %rd7089, %rd7065;
	and.b64  	%rd7110, %rd7109, %rd7041;
	or.b64  	%rd7111, %rd7110, %rd7108;
	add.s64 	%rd7112, %rd7101, %rd7111;
	add.s64 	%rd7113, %rd7112, %rd7107;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4596,%dummy}, %rd7102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4597}, %rd7102;
	}
	shf.r.wrap.b32 	%r4598, %r4597, %r4596, 14;
	shf.r.wrap.b32 	%r4599, %r4596, %r4597, 14;
	mov.b64 	%rd7114, {%r4599, %r4598};
	shf.r.wrap.b32 	%r4600, %r4597, %r4596, 18;
	shf.r.wrap.b32 	%r4601, %r4596, %r4597, 18;
	mov.b64 	%rd7115, {%r4601, %r4600};
	xor.b64  	%rd7116, %rd7115, %rd7114;
	shf.l.wrap.b32 	%r4602, %r4596, %r4597, 23;
	shf.l.wrap.b32 	%r4603, %r4597, %r4596, 23;
	mov.b64 	%rd7117, {%r4603, %r4602};
	xor.b64  	%rd7118, %rd7116, %rd7117;
	xor.b64  	%rd7119, %rd7078, %rd7054;
	and.b64  	%rd7120, %rd7102, %rd7119;
	xor.b64  	%rd7121, %rd7120, %rd7054;
	ld.local.u64 	%rd18686, [%rd1+152];
	add.s64 	%rd7122, %rd7030, %rd18686;
	add.s64 	%rd7123, %rd7122, %rd18599;
	add.s64 	%rd7124, %rd7123, %rd7121;
	add.s64 	%rd7125, %rd7124, %rd7118;
	add.s64 	%rd7126, %rd7125, %rd7041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4604,%dummy}, %rd7113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4605}, %rd7113;
	}
	shf.r.wrap.b32 	%r4606, %r4605, %r4604, 28;
	shf.r.wrap.b32 	%r4607, %r4604, %r4605, 28;
	mov.b64 	%rd7127, {%r4607, %r4606};
	shf.l.wrap.b32 	%r4608, %r4604, %r4605, 30;
	shf.l.wrap.b32 	%r4609, %r4605, %r4604, 30;
	mov.b64 	%rd7128, {%r4609, %r4608};
	xor.b64  	%rd7129, %rd7128, %rd7127;
	shf.l.wrap.b32 	%r4610, %r4604, %r4605, 25;
	shf.l.wrap.b32 	%r4611, %r4605, %r4604, 25;
	mov.b64 	%rd7130, {%r4611, %r4610};
	xor.b64  	%rd7131, %rd7129, %rd7130;
	and.b64  	%rd7132, %rd7113, %rd7089;
	xor.b64  	%rd7133, %rd7113, %rd7089;
	and.b64  	%rd7134, %rd7133, %rd7065;
	or.b64  	%rd7135, %rd7134, %rd7132;
	add.s64 	%rd7136, %rd7125, %rd7135;
	add.s64 	%rd7137, %rd7136, %rd7131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4612,%dummy}, %rd7126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4613}, %rd7126;
	}
	shf.r.wrap.b32 	%r4614, %r4613, %r4612, 14;
	shf.r.wrap.b32 	%r4615, %r4612, %r4613, 14;
	mov.b64 	%rd7138, {%r4615, %r4614};
	shf.r.wrap.b32 	%r4616, %r4613, %r4612, 18;
	shf.r.wrap.b32 	%r4617, %r4612, %r4613, 18;
	mov.b64 	%rd7139, {%r4617, %r4616};
	xor.b64  	%rd7140, %rd7139, %rd7138;
	shf.l.wrap.b32 	%r4618, %r4612, %r4613, 23;
	shf.l.wrap.b32 	%r4619, %r4613, %r4612, 23;
	mov.b64 	%rd7141, {%r4619, %r4618};
	xor.b64  	%rd7142, %rd7140, %rd7141;
	xor.b64  	%rd7143, %rd7102, %rd7078;
	and.b64  	%rd7144, %rd7126, %rd7143;
	xor.b64  	%rd7145, %rd7144, %rd7078;
	ld.local.u64 	%rd18685, [%rd1+160];
	add.s64 	%rd7146, %rd7054, %rd18685;
	add.s64 	%rd7147, %rd7146, %rd18598;
	add.s64 	%rd7148, %rd7147, %rd7145;
	add.s64 	%rd7149, %rd7148, %rd7142;
	add.s64 	%rd18697, %rd7149, %rd7065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4620,%dummy}, %rd7137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4621}, %rd7137;
	}
	shf.r.wrap.b32 	%r4622, %r4621, %r4620, 28;
	shf.r.wrap.b32 	%r4623, %r4620, %r4621, 28;
	mov.b64 	%rd7150, {%r4623, %r4622};
	shf.l.wrap.b32 	%r4624, %r4620, %r4621, 30;
	shf.l.wrap.b32 	%r4625, %r4621, %r4620, 30;
	mov.b64 	%rd7151, {%r4625, %r4624};
	xor.b64  	%rd7152, %rd7151, %rd7150;
	shf.l.wrap.b32 	%r4626, %r4620, %r4621, 25;
	shf.l.wrap.b32 	%r4627, %r4621, %r4620, 25;
	mov.b64 	%rd7153, {%r4627, %r4626};
	xor.b64  	%rd7154, %rd7152, %rd7153;
	and.b64  	%rd7155, %rd7137, %rd7113;
	xor.b64  	%rd7156, %rd7137, %rd7113;
	and.b64  	%rd7157, %rd7156, %rd7089;
	or.b64  	%rd7158, %rd7157, %rd7155;
	add.s64 	%rd7159, %rd7149, %rd7158;
	add.s64 	%rd18693, %rd7159, %rd7154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4628,%dummy}, %rd18697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4629}, %rd18697;
	}
	shf.r.wrap.b32 	%r4630, %r4629, %r4628, 14;
	shf.r.wrap.b32 	%r4631, %r4628, %r4629, 14;
	mov.b64 	%rd7160, {%r4631, %r4630};
	shf.r.wrap.b32 	%r4632, %r4629, %r4628, 18;
	shf.r.wrap.b32 	%r4633, %r4628, %r4629, 18;
	mov.b64 	%rd7161, {%r4633, %r4632};
	xor.b64  	%rd7162, %rd7161, %rd7160;
	shf.l.wrap.b32 	%r4634, %r4628, %r4629, 23;
	shf.l.wrap.b32 	%r4635, %r4629, %r4628, 23;
	mov.b64 	%rd7163, {%r4635, %r4634};
	xor.b64  	%rd7164, %rd7162, %rd7163;
	xor.b64  	%rd7165, %rd7126, %rd7102;
	and.b64  	%rd7166, %rd18697, %rd7165;
	xor.b64  	%rd7167, %rd7166, %rd7102;
	ld.local.u64 	%rd18684, [%rd1+168];
	add.s64 	%rd7168, %rd7078, %rd18684;
	add.s64 	%rd7169, %rd7168, %rd18597;
	add.s64 	%rd7170, %rd7169, %rd7167;
	add.s64 	%rd7171, %rd7170, %rd7164;
	add.s64 	%rd18696, %rd7171, %rd7089;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4636,%dummy}, %rd18693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4637}, %rd18693;
	}
	shf.r.wrap.b32 	%r4638, %r4637, %r4636, 28;
	shf.r.wrap.b32 	%r4639, %r4636, %r4637, 28;
	mov.b64 	%rd7172, {%r4639, %r4638};
	shf.l.wrap.b32 	%r4640, %r4636, %r4637, 30;
	shf.l.wrap.b32 	%r4641, %r4637, %r4636, 30;
	mov.b64 	%rd7173, {%r4641, %r4640};
	xor.b64  	%rd7174, %rd7173, %rd7172;
	shf.l.wrap.b32 	%r4642, %r4636, %r4637, 25;
	shf.l.wrap.b32 	%r4643, %r4637, %r4636, 25;
	mov.b64 	%rd7175, {%r4643, %r4642};
	xor.b64  	%rd7176, %rd7174, %rd7175;
	and.b64  	%rd7177, %rd18693, %rd7137;
	xor.b64  	%rd7178, %rd18693, %rd7137;
	and.b64  	%rd7179, %rd7178, %rd7113;
	or.b64  	%rd7180, %rd7179, %rd7177;
	add.s64 	%rd7181, %rd7171, %rd7180;
	add.s64 	%rd18692, %rd7181, %rd7176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4644,%dummy}, %rd18696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4645}, %rd18696;
	}
	shf.r.wrap.b32 	%r4646, %r4645, %r4644, 14;
	shf.r.wrap.b32 	%r4647, %r4644, %r4645, 14;
	mov.b64 	%rd7182, {%r4647, %r4646};
	shf.r.wrap.b32 	%r4648, %r4645, %r4644, 18;
	shf.r.wrap.b32 	%r4649, %r4644, %r4645, 18;
	mov.b64 	%rd7183, {%r4649, %r4648};
	xor.b64  	%rd7184, %rd7183, %rd7182;
	shf.l.wrap.b32 	%r4650, %r4644, %r4645, 23;
	shf.l.wrap.b32 	%r4651, %r4645, %r4644, 23;
	mov.b64 	%rd7185, {%r4651, %r4650};
	xor.b64  	%rd7186, %rd7184, %rd7185;
	xor.b64  	%rd7187, %rd18697, %rd7126;
	and.b64  	%rd7188, %rd18696, %rd7187;
	xor.b64  	%rd7189, %rd7188, %rd7126;
	ld.local.u64 	%rd18683, [%rd1+176];
	add.s64 	%rd7190, %rd7102, %rd18683;
	add.s64 	%rd7191, %rd7190, %rd18596;
	add.s64 	%rd7192, %rd7191, %rd7189;
	add.s64 	%rd7193, %rd7192, %rd7186;
	add.s64 	%rd18695, %rd7193, %rd7113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4652,%dummy}, %rd18692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4653}, %rd18692;
	}
	shf.r.wrap.b32 	%r4654, %r4653, %r4652, 28;
	shf.r.wrap.b32 	%r4655, %r4652, %r4653, 28;
	mov.b64 	%rd7194, {%r4655, %r4654};
	shf.l.wrap.b32 	%r4656, %r4652, %r4653, 30;
	shf.l.wrap.b32 	%r4657, %r4653, %r4652, 30;
	mov.b64 	%rd7195, {%r4657, %r4656};
	xor.b64  	%rd7196, %rd7195, %rd7194;
	shf.l.wrap.b32 	%r4658, %r4652, %r4653, 25;
	shf.l.wrap.b32 	%r4659, %r4653, %r4652, 25;
	mov.b64 	%rd7197, {%r4659, %r4658};
	xor.b64  	%rd7198, %rd7196, %rd7197;
	and.b64  	%rd7199, %rd18692, %rd18693;
	xor.b64  	%rd7200, %rd18692, %rd18693;
	and.b64  	%rd7201, %rd7200, %rd7137;
	or.b64  	%rd7202, %rd7201, %rd7199;
	add.s64 	%rd7203, %rd7193, %rd7202;
	add.s64 	%rd18691, %rd7203, %rd7198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4660,%dummy}, %rd18695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4661}, %rd18695;
	}
	shf.r.wrap.b32 	%r4662, %r4661, %r4660, 14;
	shf.r.wrap.b32 	%r4663, %r4660, %r4661, 14;
	mov.b64 	%rd7204, {%r4663, %r4662};
	shf.r.wrap.b32 	%r4664, %r4661, %r4660, 18;
	shf.r.wrap.b32 	%r4665, %r4660, %r4661, 18;
	mov.b64 	%rd7205, {%r4665, %r4664};
	xor.b64  	%rd7206, %rd7205, %rd7204;
	shf.l.wrap.b32 	%r4666, %r4660, %r4661, 23;
	shf.l.wrap.b32 	%r4667, %r4661, %r4660, 23;
	mov.b64 	%rd7207, {%r4667, %r4666};
	xor.b64  	%rd7208, %rd7206, %rd7207;
	xor.b64  	%rd7209, %rd18696, %rd18697;
	and.b64  	%rd7210, %rd18695, %rd7209;
	xor.b64  	%rd7211, %rd7210, %rd18697;
	ld.local.u64 	%rd18682, [%rd1+184];
	add.s64 	%rd7212, %rd7126, %rd18682;
	add.s64 	%rd7213, %rd7212, %rd18595;
	add.s64 	%rd7214, %rd7213, %rd7211;
	add.s64 	%rd7215, %rd7214, %rd7208;
	add.s64 	%rd18694, %rd7215, %rd7137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4668,%dummy}, %rd18691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4669}, %rd18691;
	}
	shf.r.wrap.b32 	%r4670, %r4669, %r4668, 28;
	shf.r.wrap.b32 	%r4671, %r4668, %r4669, 28;
	mov.b64 	%rd7216, {%r4671, %r4670};
	shf.l.wrap.b32 	%r4672, %r4668, %r4669, 30;
	shf.l.wrap.b32 	%r4673, %r4669, %r4668, 30;
	mov.b64 	%rd7217, {%r4673, %r4672};
	xor.b64  	%rd7218, %rd7217, %rd7216;
	shf.l.wrap.b32 	%r4674, %r4668, %r4669, 25;
	shf.l.wrap.b32 	%r4675, %r4669, %r4668, 25;
	mov.b64 	%rd7219, {%r4675, %r4674};
	xor.b64  	%rd7220, %rd7218, %rd7219;
	and.b64  	%rd7221, %rd18691, %rd18692;
	xor.b64  	%rd7222, %rd18691, %rd18692;
	and.b64  	%rd7223, %rd7222, %rd18693;
	or.b64  	%rd7224, %rd7223, %rd7221;
	add.s64 	%rd7225, %rd7215, %rd7224;
	add.s64 	%rd18690, %rd7225, %rd7220;
	mov.u32 	%r12959, 16;

BB0_138:
	mov.u64 	%rd18521, k_sha512;
	shr.u64 	%rd7226, %rd18683, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4676,%dummy}, %rd18683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4677}, %rd18683;
	}
	shf.r.wrap.b32 	%r4678, %r4677, %r4676, 19;
	shf.r.wrap.b32 	%r4679, %r4676, %r4677, 19;
	mov.b64 	%rd7227, {%r4679, %r4678};
	xor.b64  	%rd7228, %rd7227, %rd7226;
	shf.l.wrap.b32 	%r4680, %r4676, %r4677, 3;
	shf.l.wrap.b32 	%r4681, %r4677, %r4676, 3;
	mov.b64 	%rd7229, {%r4681, %r4680};
	xor.b64  	%rd7230, %rd7228, %rd7229;
	shr.u64 	%rd7231, %rd18699, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4682,%dummy}, %rd18699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4683}, %rd18699;
	}
	shf.r.wrap.b32 	%r4684, %r4683, %r4682, 1;
	shf.r.wrap.b32 	%r4685, %r4682, %r4683, 1;
	mov.b64 	%rd7232, {%r4685, %r4684};
	xor.b64  	%rd7233, %rd7232, %rd7231;
	shf.r.wrap.b32 	%r4686, %r4683, %r4682, 8;
	shf.r.wrap.b32 	%r4687, %r4682, %r4683, 8;
	mov.b64 	%rd7234, {%r4687, %r4686};
	xor.b64  	%rd7235, %rd7233, %rd7234;
	add.s64 	%rd7236, %rd18688, %rd18698;
	add.s64 	%rd7237, %rd7236, %rd7230;
	add.s64 	%rd18698, %rd7237, %rd7235;
	shr.u64 	%rd7238, %rd18682, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4688,%dummy}, %rd18682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4689}, %rd18682;
	}
	shf.r.wrap.b32 	%r4690, %r4689, %r4688, 19;
	shf.r.wrap.b32 	%r4691, %r4688, %r4689, 19;
	mov.b64 	%rd7239, {%r4691, %r4690};
	xor.b64  	%rd7240, %rd7239, %rd7238;
	shf.l.wrap.b32 	%r4692, %r4688, %r4689, 3;
	shf.l.wrap.b32 	%r4693, %r4689, %r4688, 3;
	mov.b64 	%rd7241, {%r4693, %r4692};
	xor.b64  	%rd7242, %rd7240, %rd7241;
	shr.u64 	%rd7243, %rd18700, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4694,%dummy}, %rd18700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4695}, %rd18700;
	}
	shf.r.wrap.b32 	%r4696, %r4695, %r4694, 1;
	shf.r.wrap.b32 	%r4697, %r4694, %r4695, 1;
	mov.b64 	%rd7244, {%r4697, %r4696};
	xor.b64  	%rd7245, %rd7244, %rd7243;
	shf.r.wrap.b32 	%r4698, %r4695, %r4694, 8;
	shf.r.wrap.b32 	%r4699, %r4694, %r4695, 8;
	mov.b64 	%rd7246, {%r4699, %r4698};
	xor.b64  	%rd7247, %rd7245, %rd7246;
	add.s64 	%rd7248, %rd18687, %rd18699;
	add.s64 	%rd7249, %rd7248, %rd7242;
	add.s64 	%rd18699, %rd7249, %rd7247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4700,%dummy}, %rd18698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4701}, %rd18698;
	}
	shf.r.wrap.b32 	%r4702, %r4701, %r4700, 19;
	shf.r.wrap.b32 	%r4703, %r4700, %r4701, 19;
	mov.b64 	%rd7250, {%r4703, %r4702};
	shf.l.wrap.b32 	%r4704, %r4700, %r4701, 3;
	shf.l.wrap.b32 	%r4705, %r4701, %r4700, 3;
	mov.b64 	%rd7251, {%r4705, %r4704};
	shr.u64 	%rd7252, %rd18698, 6;
	xor.b64  	%rd7253, %rd7250, %rd7252;
	xor.b64  	%rd7254, %rd7253, %rd7251;
	shr.u64 	%rd7255, %rd18701, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4706,%dummy}, %rd18701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4707}, %rd18701;
	}
	shf.r.wrap.b32 	%r4708, %r4707, %r4706, 1;
	shf.r.wrap.b32 	%r4709, %r4706, %r4707, 1;
	mov.b64 	%rd7256, {%r4709, %r4708};
	xor.b64  	%rd7257, %rd7256, %rd7255;
	shf.r.wrap.b32 	%r4710, %r4707, %r4706, 8;
	shf.r.wrap.b32 	%r4711, %r4706, %r4707, 8;
	mov.b64 	%rd7258, {%r4711, %r4710};
	xor.b64  	%rd7259, %rd7257, %rd7258;
	add.s64 	%rd7260, %rd18686, %rd18700;
	add.s64 	%rd7261, %rd7260, %rd7254;
	add.s64 	%rd18700, %rd7261, %rd7259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4712,%dummy}, %rd18699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4713}, %rd18699;
	}
	shf.r.wrap.b32 	%r4714, %r4713, %r4712, 19;
	shf.r.wrap.b32 	%r4715, %r4712, %r4713, 19;
	mov.b64 	%rd7262, {%r4715, %r4714};
	shf.l.wrap.b32 	%r4716, %r4712, %r4713, 3;
	shf.l.wrap.b32 	%r4717, %r4713, %r4712, 3;
	mov.b64 	%rd7263, {%r4717, %r4716};
	shr.u64 	%rd7264, %rd18699, 6;
	xor.b64  	%rd7265, %rd7262, %rd7264;
	xor.b64  	%rd7266, %rd7265, %rd7263;
	shr.u64 	%rd7267, %rd18702, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4718,%dummy}, %rd18702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4719}, %rd18702;
	}
	shf.r.wrap.b32 	%r4720, %r4719, %r4718, 1;
	shf.r.wrap.b32 	%r4721, %r4718, %r4719, 1;
	mov.b64 	%rd7268, {%r4721, %r4720};
	xor.b64  	%rd7269, %rd7268, %rd7267;
	shf.r.wrap.b32 	%r4722, %r4719, %r4718, 8;
	shf.r.wrap.b32 	%r4723, %r4718, %r4719, 8;
	mov.b64 	%rd7270, {%r4723, %r4722};
	xor.b64  	%rd7271, %rd7269, %rd7270;
	add.s64 	%rd7272, %rd18685, %rd18701;
	add.s64 	%rd7273, %rd7272, %rd7266;
	add.s64 	%rd18701, %rd7273, %rd7271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4724,%dummy}, %rd18700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4725}, %rd18700;
	}
	shf.r.wrap.b32 	%r4726, %r4725, %r4724, 19;
	shf.r.wrap.b32 	%r4727, %r4724, %r4725, 19;
	mov.b64 	%rd7274, {%r4727, %r4726};
	shf.l.wrap.b32 	%r4728, %r4724, %r4725, 3;
	shf.l.wrap.b32 	%r4729, %r4725, %r4724, 3;
	mov.b64 	%rd7275, {%r4729, %r4728};
	shr.u64 	%rd7276, %rd18700, 6;
	xor.b64  	%rd7277, %rd7274, %rd7276;
	xor.b64  	%rd7278, %rd7277, %rd7275;
	shr.u64 	%rd7279, %rd18703, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4730,%dummy}, %rd18703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4731}, %rd18703;
	}
	shf.r.wrap.b32 	%r4732, %r4731, %r4730, 1;
	shf.r.wrap.b32 	%r4733, %r4730, %r4731, 1;
	mov.b64 	%rd7280, {%r4733, %r4732};
	xor.b64  	%rd7281, %rd7280, %rd7279;
	shf.r.wrap.b32 	%r4734, %r4731, %r4730, 8;
	shf.r.wrap.b32 	%r4735, %r4730, %r4731, 8;
	mov.b64 	%rd7282, {%r4735, %r4734};
	xor.b64  	%rd7283, %rd7281, %rd7282;
	add.s64 	%rd7284, %rd18684, %rd18702;
	add.s64 	%rd7285, %rd7284, %rd7278;
	add.s64 	%rd18702, %rd7285, %rd7283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4736,%dummy}, %rd18701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4737}, %rd18701;
	}
	shf.r.wrap.b32 	%r4738, %r4737, %r4736, 19;
	shf.r.wrap.b32 	%r4739, %r4736, %r4737, 19;
	mov.b64 	%rd7286, {%r4739, %r4738};
	shf.l.wrap.b32 	%r4740, %r4736, %r4737, 3;
	shf.l.wrap.b32 	%r4741, %r4737, %r4736, 3;
	mov.b64 	%rd7287, {%r4741, %r4740};
	shr.u64 	%rd7288, %rd18701, 6;
	xor.b64  	%rd7289, %rd7286, %rd7288;
	xor.b64  	%rd7290, %rd7289, %rd7287;
	shr.u64 	%rd7291, %rd18704, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4742,%dummy}, %rd18704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4743}, %rd18704;
	}
	shf.r.wrap.b32 	%r4744, %r4743, %r4742, 1;
	shf.r.wrap.b32 	%r4745, %r4742, %r4743, 1;
	mov.b64 	%rd7292, {%r4745, %r4744};
	xor.b64  	%rd7293, %rd7292, %rd7291;
	shf.r.wrap.b32 	%r4746, %r4743, %r4742, 8;
	shf.r.wrap.b32 	%r4747, %r4742, %r4743, 8;
	mov.b64 	%rd7294, {%r4747, %r4746};
	xor.b64  	%rd7295, %rd7293, %rd7294;
	add.s64 	%rd7296, %rd18683, %rd18703;
	add.s64 	%rd7297, %rd7296, %rd7290;
	add.s64 	%rd18703, %rd7297, %rd7295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4748,%dummy}, %rd18702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4749}, %rd18702;
	}
	shf.r.wrap.b32 	%r4750, %r4749, %r4748, 19;
	shf.r.wrap.b32 	%r4751, %r4748, %r4749, 19;
	mov.b64 	%rd7298, {%r4751, %r4750};
	shf.l.wrap.b32 	%r4752, %r4748, %r4749, 3;
	shf.l.wrap.b32 	%r4753, %r4749, %r4748, 3;
	mov.b64 	%rd7299, {%r4753, %r4752};
	shr.u64 	%rd7300, %rd18702, 6;
	xor.b64  	%rd7301, %rd7298, %rd7300;
	xor.b64  	%rd7302, %rd7301, %rd7299;
	shr.u64 	%rd7303, %rd18705, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4754,%dummy}, %rd18705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4755}, %rd18705;
	}
	shf.r.wrap.b32 	%r4756, %r4755, %r4754, 1;
	shf.r.wrap.b32 	%r4757, %r4754, %r4755, 1;
	mov.b64 	%rd7304, {%r4757, %r4756};
	xor.b64  	%rd7305, %rd7304, %rd7303;
	shf.r.wrap.b32 	%r4758, %r4755, %r4754, 8;
	shf.r.wrap.b32 	%r4759, %r4754, %r4755, 8;
	mov.b64 	%rd7306, {%r4759, %r4758};
	xor.b64  	%rd7307, %rd7305, %rd7306;
	add.s64 	%rd7308, %rd18682, %rd18704;
	add.s64 	%rd7309, %rd7308, %rd7302;
	add.s64 	%rd18704, %rd7309, %rd7307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4760,%dummy}, %rd18703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4761}, %rd18703;
	}
	shf.r.wrap.b32 	%r4762, %r4761, %r4760, 19;
	shf.r.wrap.b32 	%r4763, %r4760, %r4761, 19;
	mov.b64 	%rd7310, {%r4763, %r4762};
	shf.l.wrap.b32 	%r4764, %r4760, %r4761, 3;
	shf.l.wrap.b32 	%r4765, %r4761, %r4760, 3;
	mov.b64 	%rd7311, {%r4765, %r4764};
	shr.u64 	%rd7312, %rd18703, 6;
	xor.b64  	%rd7313, %rd7310, %rd7312;
	xor.b64  	%rd7314, %rd7313, %rd7311;
	shr.u64 	%rd7315, %rd18689, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4766,%dummy}, %rd18689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4767}, %rd18689;
	}
	shf.r.wrap.b32 	%r4768, %r4767, %r4766, 1;
	shf.r.wrap.b32 	%r4769, %r4766, %r4767, 1;
	mov.b64 	%rd7316, {%r4769, %r4768};
	xor.b64  	%rd7317, %rd7316, %rd7315;
	shf.r.wrap.b32 	%r4770, %r4767, %r4766, 8;
	shf.r.wrap.b32 	%r4771, %r4766, %r4767, 8;
	mov.b64 	%rd7318, {%r4771, %r4770};
	xor.b64  	%rd7319, %rd7317, %rd7318;
	add.s64 	%rd7320, %rd18698, %rd18705;
	add.s64 	%rd7321, %rd7320, %rd7314;
	add.s64 	%rd18705, %rd7321, %rd7319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4772,%dummy}, %rd18704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4773}, %rd18704;
	}
	shf.r.wrap.b32 	%r4774, %r4773, %r4772, 19;
	shf.r.wrap.b32 	%r4775, %r4772, %r4773, 19;
	mov.b64 	%rd7322, {%r4775, %r4774};
	shf.l.wrap.b32 	%r4776, %r4772, %r4773, 3;
	shf.l.wrap.b32 	%r4777, %r4773, %r4772, 3;
	mov.b64 	%rd7323, {%r4777, %r4776};
	shr.u64 	%rd7324, %rd18704, 6;
	xor.b64  	%rd7325, %rd7322, %rd7324;
	xor.b64  	%rd7326, %rd7325, %rd7323;
	shr.u64 	%rd7327, %rd18688, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4778,%dummy}, %rd18688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4779}, %rd18688;
	}
	shf.r.wrap.b32 	%r4780, %r4779, %r4778, 1;
	shf.r.wrap.b32 	%r4781, %r4778, %r4779, 1;
	mov.b64 	%rd7328, {%r4781, %r4780};
	xor.b64  	%rd7329, %rd7328, %rd7327;
	shf.r.wrap.b32 	%r4782, %r4779, %r4778, 8;
	shf.r.wrap.b32 	%r4783, %r4778, %r4779, 8;
	mov.b64 	%rd7330, {%r4783, %r4782};
	xor.b64  	%rd7331, %rd7329, %rd7330;
	add.s64 	%rd7332, %rd18699, %rd18689;
	add.s64 	%rd7333, %rd7332, %rd7326;
	add.s64 	%rd18689, %rd7333, %rd7331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4784,%dummy}, %rd18705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4785}, %rd18705;
	}
	shf.r.wrap.b32 	%r4786, %r4785, %r4784, 19;
	shf.r.wrap.b32 	%r4787, %r4784, %r4785, 19;
	mov.b64 	%rd7334, {%r4787, %r4786};
	shf.l.wrap.b32 	%r4788, %r4784, %r4785, 3;
	shf.l.wrap.b32 	%r4789, %r4785, %r4784, 3;
	mov.b64 	%rd7335, {%r4789, %r4788};
	shr.u64 	%rd7336, %rd18705, 6;
	xor.b64  	%rd7337, %rd7334, %rd7336;
	xor.b64  	%rd7338, %rd7337, %rd7335;
	shr.u64 	%rd7339, %rd18687, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4790,%dummy}, %rd18687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4791}, %rd18687;
	}
	shf.r.wrap.b32 	%r4792, %r4791, %r4790, 1;
	shf.r.wrap.b32 	%r4793, %r4790, %r4791, 1;
	mov.b64 	%rd7340, {%r4793, %r4792};
	xor.b64  	%rd7341, %rd7340, %rd7339;
	shf.r.wrap.b32 	%r4794, %r4791, %r4790, 8;
	shf.r.wrap.b32 	%r4795, %r4790, %r4791, 8;
	mov.b64 	%rd7342, {%r4795, %r4794};
	xor.b64  	%rd7343, %rd7341, %rd7342;
	add.s64 	%rd7344, %rd18700, %rd18688;
	add.s64 	%rd7345, %rd7344, %rd7338;
	add.s64 	%rd18688, %rd7345, %rd7343;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4796,%dummy}, %rd18689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4797}, %rd18689;
	}
	shf.r.wrap.b32 	%r4798, %r4797, %r4796, 19;
	shf.r.wrap.b32 	%r4799, %r4796, %r4797, 19;
	mov.b64 	%rd7346, {%r4799, %r4798};
	shf.l.wrap.b32 	%r4800, %r4796, %r4797, 3;
	shf.l.wrap.b32 	%r4801, %r4797, %r4796, 3;
	mov.b64 	%rd7347, {%r4801, %r4800};
	shr.u64 	%rd7348, %rd18689, 6;
	xor.b64  	%rd7349, %rd7346, %rd7348;
	xor.b64  	%rd7350, %rd7349, %rd7347;
	shr.u64 	%rd7351, %rd18686, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4802,%dummy}, %rd18686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4803}, %rd18686;
	}
	shf.r.wrap.b32 	%r4804, %r4803, %r4802, 1;
	shf.r.wrap.b32 	%r4805, %r4802, %r4803, 1;
	mov.b64 	%rd7352, {%r4805, %r4804};
	xor.b64  	%rd7353, %rd7352, %rd7351;
	shf.r.wrap.b32 	%r4806, %r4803, %r4802, 8;
	shf.r.wrap.b32 	%r4807, %r4802, %r4803, 8;
	mov.b64 	%rd7354, {%r4807, %r4806};
	xor.b64  	%rd7355, %rd7353, %rd7354;
	add.s64 	%rd7356, %rd18701, %rd18687;
	add.s64 	%rd7357, %rd7356, %rd7350;
	add.s64 	%rd18687, %rd7357, %rd7355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4808,%dummy}, %rd18688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4809}, %rd18688;
	}
	shf.r.wrap.b32 	%r4810, %r4809, %r4808, 19;
	shf.r.wrap.b32 	%r4811, %r4808, %r4809, 19;
	mov.b64 	%rd7358, {%r4811, %r4810};
	shf.l.wrap.b32 	%r4812, %r4808, %r4809, 3;
	shf.l.wrap.b32 	%r4813, %r4809, %r4808, 3;
	mov.b64 	%rd7359, {%r4813, %r4812};
	shr.u64 	%rd7360, %rd18688, 6;
	xor.b64  	%rd7361, %rd7358, %rd7360;
	xor.b64  	%rd7362, %rd7361, %rd7359;
	shr.u64 	%rd7363, %rd18685, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4814,%dummy}, %rd18685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4815}, %rd18685;
	}
	shf.r.wrap.b32 	%r4816, %r4815, %r4814, 1;
	shf.r.wrap.b32 	%r4817, %r4814, %r4815, 1;
	mov.b64 	%rd7364, {%r4817, %r4816};
	xor.b64  	%rd7365, %rd7364, %rd7363;
	shf.r.wrap.b32 	%r4818, %r4815, %r4814, 8;
	shf.r.wrap.b32 	%r4819, %r4814, %r4815, 8;
	mov.b64 	%rd7366, {%r4819, %r4818};
	xor.b64  	%rd7367, %rd7365, %rd7366;
	add.s64 	%rd7368, %rd18702, %rd18686;
	add.s64 	%rd7369, %rd7368, %rd7362;
	add.s64 	%rd18686, %rd7369, %rd7367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4820,%dummy}, %rd18687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4821}, %rd18687;
	}
	shf.r.wrap.b32 	%r4822, %r4821, %r4820, 19;
	shf.r.wrap.b32 	%r4823, %r4820, %r4821, 19;
	mov.b64 	%rd7370, {%r4823, %r4822};
	shf.l.wrap.b32 	%r4824, %r4820, %r4821, 3;
	shf.l.wrap.b32 	%r4825, %r4821, %r4820, 3;
	mov.b64 	%rd7371, {%r4825, %r4824};
	shr.u64 	%rd7372, %rd18687, 6;
	xor.b64  	%rd7373, %rd7370, %rd7372;
	xor.b64  	%rd7374, %rd7373, %rd7371;
	shr.u64 	%rd7375, %rd18684, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4826,%dummy}, %rd18684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4827}, %rd18684;
	}
	shf.r.wrap.b32 	%r4828, %r4827, %r4826, 1;
	shf.r.wrap.b32 	%r4829, %r4826, %r4827, 1;
	mov.b64 	%rd7376, {%r4829, %r4828};
	xor.b64  	%rd7377, %rd7376, %rd7375;
	shf.r.wrap.b32 	%r4830, %r4827, %r4826, 8;
	shf.r.wrap.b32 	%r4831, %r4826, %r4827, 8;
	mov.b64 	%rd7378, {%r4831, %r4830};
	xor.b64  	%rd7379, %rd7377, %rd7378;
	add.s64 	%rd7380, %rd18703, %rd18685;
	add.s64 	%rd7381, %rd7380, %rd7374;
	add.s64 	%rd18685, %rd7381, %rd7379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4832,%dummy}, %rd18686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4833}, %rd18686;
	}
	shf.r.wrap.b32 	%r4834, %r4833, %r4832, 19;
	shf.r.wrap.b32 	%r4835, %r4832, %r4833, 19;
	mov.b64 	%rd7382, {%r4835, %r4834};
	shf.l.wrap.b32 	%r4836, %r4832, %r4833, 3;
	shf.l.wrap.b32 	%r4837, %r4833, %r4832, 3;
	mov.b64 	%rd7383, {%r4837, %r4836};
	shr.u64 	%rd7384, %rd18686, 6;
	xor.b64  	%rd7385, %rd7382, %rd7384;
	xor.b64  	%rd7386, %rd7385, %rd7383;
	shr.u64 	%rd7387, %rd18683, 7;
	shf.r.wrap.b32 	%r4838, %r4677, %r4676, 1;
	shf.r.wrap.b32 	%r4839, %r4676, %r4677, 1;
	mov.b64 	%rd7388, {%r4839, %r4838};
	xor.b64  	%rd7389, %rd7388, %rd7387;
	shf.r.wrap.b32 	%r4840, %r4677, %r4676, 8;
	shf.r.wrap.b32 	%r4841, %r4676, %r4677, 8;
	mov.b64 	%rd7390, {%r4841, %r4840};
	xor.b64  	%rd7391, %rd7389, %rd7390;
	add.s64 	%rd7392, %rd18704, %rd18684;
	add.s64 	%rd7393, %rd7392, %rd7386;
	add.s64 	%rd18684, %rd7393, %rd7391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4842,%dummy}, %rd18685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4843}, %rd18685;
	}
	shf.r.wrap.b32 	%r4844, %r4843, %r4842, 19;
	shf.r.wrap.b32 	%r4845, %r4842, %r4843, 19;
	mov.b64 	%rd7394, {%r4845, %r4844};
	shf.l.wrap.b32 	%r4846, %r4842, %r4843, 3;
	shf.l.wrap.b32 	%r4847, %r4843, %r4842, 3;
	mov.b64 	%rd7395, {%r4847, %r4846};
	shr.u64 	%rd7396, %rd18685, 6;
	xor.b64  	%rd7397, %rd7394, %rd7396;
	xor.b64  	%rd7398, %rd7397, %rd7395;
	shr.u64 	%rd7399, %rd18682, 7;
	shf.r.wrap.b32 	%r4848, %r4689, %r4688, 1;
	shf.r.wrap.b32 	%r4849, %r4688, %r4689, 1;
	mov.b64 	%rd7400, {%r4849, %r4848};
	xor.b64  	%rd7401, %rd7400, %rd7399;
	shf.r.wrap.b32 	%r4850, %r4689, %r4688, 8;
	shf.r.wrap.b32 	%r4851, %r4688, %r4689, 8;
	mov.b64 	%rd7402, {%r4851, %r4850};
	xor.b64  	%rd7403, %rd7401, %rd7402;
	add.s64 	%rd7404, %rd18705, %rd18683;
	add.s64 	%rd7405, %rd7404, %rd7398;
	add.s64 	%rd18683, %rd7405, %rd7403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4852,%dummy}, %rd18684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4853}, %rd18684;
	}
	shf.r.wrap.b32 	%r4854, %r4853, %r4852, 19;
	shf.r.wrap.b32 	%r4855, %r4852, %r4853, 19;
	mov.b64 	%rd7406, {%r4855, %r4854};
	shf.l.wrap.b32 	%r4856, %r4852, %r4853, 3;
	shf.l.wrap.b32 	%r4857, %r4853, %r4852, 3;
	mov.b64 	%rd7407, {%r4857, %r4856};
	shr.u64 	%rd7408, %rd18684, 6;
	xor.b64  	%rd7409, %rd7406, %rd7408;
	xor.b64  	%rd7410, %rd7409, %rd7407;
	shf.r.wrap.b32 	%r4858, %r4701, %r4700, 1;
	shf.r.wrap.b32 	%r4859, %r4700, %r4701, 1;
	mov.b64 	%rd7411, {%r4859, %r4858};
	shf.r.wrap.b32 	%r4860, %r4701, %r4700, 8;
	shf.r.wrap.b32 	%r4861, %r4700, %r4701, 8;
	mov.b64 	%rd7412, {%r4861, %r4860};
	shr.u64 	%rd7413, %rd18698, 7;
	xor.b64  	%rd7414, %rd7411, %rd7413;
	xor.b64  	%rd7415, %rd7414, %rd7412;
	add.s64 	%rd7416, %rd18689, %rd18682;
	add.s64 	%rd7417, %rd7416, %rd7410;
	add.s64 	%rd18682, %rd7417, %rd7415;
	mul.wide.s32 	%rd7418, %r12959, 8;
	add.s64 	%rd7420, %rd18521, %rd7418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4862,%dummy}, %rd18694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4863}, %rd18694;
	}
	shf.r.wrap.b32 	%r4864, %r4863, %r4862, 18;
	shf.r.wrap.b32 	%r4865, %r4862, %r4863, 18;
	mov.b64 	%rd7421, {%r4865, %r4864};
	shf.r.wrap.b32 	%r4866, %r4863, %r4862, 14;
	shf.r.wrap.b32 	%r4867, %r4862, %r4863, 14;
	mov.b64 	%rd7422, {%r4867, %r4866};
	xor.b64  	%rd7423, %rd7421, %rd7422;
	shf.l.wrap.b32 	%r4868, %r4862, %r4863, 23;
	shf.l.wrap.b32 	%r4869, %r4863, %r4862, 23;
	mov.b64 	%rd7424, {%r4869, %r4868};
	xor.b64  	%rd7425, %rd7423, %rd7424;
	xor.b64  	%rd7426, %rd18695, %rd18696;
	and.b64  	%rd7427, %rd18694, %rd7426;
	xor.b64  	%rd7428, %rd7427, %rd18696;
	add.s64 	%rd7429, %rd7428, %rd18697;
	add.s64 	%rd7430, %rd7429, %rd18698;
	ld.const.u64 	%rd7431, [%rd7420];
	add.s64 	%rd7432, %rd7430, %rd7431;
	add.s64 	%rd7433, %rd7432, %rd7425;
	add.s64 	%rd7434, %rd7433, %rd18693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4870}, %rd18690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4871,%dummy}, %rd18690;
	}
	shf.l.wrap.b32 	%r4872, %r4871, %r4870, 30;
	shf.l.wrap.b32 	%r4873, %r4870, %r4871, 30;
	mov.b64 	%rd7435, {%r4873, %r4872};
	shf.r.wrap.b32 	%r4874, %r4870, %r4871, 28;
	shf.r.wrap.b32 	%r4875, %r4871, %r4870, 28;
	mov.b64 	%rd7436, {%r4875, %r4874};
	xor.b64  	%rd7437, %rd7435, %rd7436;
	shf.l.wrap.b32 	%r4876, %r4871, %r4870, 25;
	shf.l.wrap.b32 	%r4877, %r4870, %r4871, 25;
	mov.b64 	%rd7438, {%r4877, %r4876};
	xor.b64  	%rd7439, %rd7437, %rd7438;
	xor.b64  	%rd7440, %rd18690, %rd18691;
	and.b64  	%rd7441, %rd7440, %rd18692;
	and.b64  	%rd7442, %rd18690, %rd18691;
	or.b64  	%rd7443, %rd7441, %rd7442;
	add.s64 	%rd7444, %rd7433, %rd7443;
	add.s64 	%rd7445, %rd7444, %rd7439;
	add.s32 	%r4878, %r12959, 1;
	mul.wide.s32 	%rd7446, %r4878, 8;
	add.s64 	%rd7447, %rd18521, %rd7446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4879,%dummy}, %rd7434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4880}, %rd7434;
	}
	shf.r.wrap.b32 	%r4881, %r4880, %r4879, 14;
	shf.r.wrap.b32 	%r4882, %r4879, %r4880, 14;
	mov.b64 	%rd7448, {%r4882, %r4881};
	shf.r.wrap.b32 	%r4883, %r4880, %r4879, 18;
	shf.r.wrap.b32 	%r4884, %r4879, %r4880, 18;
	mov.b64 	%rd7449, {%r4884, %r4883};
	xor.b64  	%rd7450, %rd7449, %rd7448;
	shf.l.wrap.b32 	%r4885, %r4879, %r4880, 23;
	shf.l.wrap.b32 	%r4886, %r4880, %r4879, 23;
	mov.b64 	%rd7451, {%r4886, %r4885};
	xor.b64  	%rd7452, %rd7450, %rd7451;
	xor.b64  	%rd7453, %rd18694, %rd18695;
	and.b64  	%rd7454, %rd7434, %rd7453;
	xor.b64  	%rd7455, %rd7454, %rd18695;
	add.s64 	%rd7456, %rd18699, %rd18696;
	ld.const.u64 	%rd7457, [%rd7447];
	add.s64 	%rd7458, %rd7456, %rd7457;
	add.s64 	%rd7459, %rd7458, %rd7455;
	add.s64 	%rd7460, %rd7459, %rd7452;
	add.s64 	%rd7461, %rd7460, %rd18692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4887,%dummy}, %rd7445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4888}, %rd7445;
	}
	shf.r.wrap.b32 	%r4889, %r4888, %r4887, 28;
	shf.r.wrap.b32 	%r4890, %r4887, %r4888, 28;
	mov.b64 	%rd7462, {%r4890, %r4889};
	shf.l.wrap.b32 	%r4891, %r4887, %r4888, 30;
	shf.l.wrap.b32 	%r4892, %r4888, %r4887, 30;
	mov.b64 	%rd7463, {%r4892, %r4891};
	xor.b64  	%rd7464, %rd7463, %rd7462;
	shf.l.wrap.b32 	%r4893, %r4887, %r4888, 25;
	shf.l.wrap.b32 	%r4894, %r4888, %r4887, 25;
	mov.b64 	%rd7465, {%r4894, %r4893};
	xor.b64  	%rd7466, %rd7464, %rd7465;
	and.b64  	%rd7467, %rd7445, %rd18690;
	xor.b64  	%rd7468, %rd7445, %rd18690;
	and.b64  	%rd7469, %rd7468, %rd18691;
	or.b64  	%rd7470, %rd7469, %rd7467;
	add.s64 	%rd7471, %rd7460, %rd7470;
	add.s64 	%rd7472, %rd7471, %rd7466;
	add.s32 	%r4895, %r12959, 2;
	mul.wide.s32 	%rd7473, %r4895, 8;
	add.s64 	%rd7474, %rd18521, %rd7473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4896,%dummy}, %rd7461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4897}, %rd7461;
	}
	shf.r.wrap.b32 	%r4898, %r4897, %r4896, 14;
	shf.r.wrap.b32 	%r4899, %r4896, %r4897, 14;
	mov.b64 	%rd7475, {%r4899, %r4898};
	shf.r.wrap.b32 	%r4900, %r4897, %r4896, 18;
	shf.r.wrap.b32 	%r4901, %r4896, %r4897, 18;
	mov.b64 	%rd7476, {%r4901, %r4900};
	xor.b64  	%rd7477, %rd7476, %rd7475;
	shf.l.wrap.b32 	%r4902, %r4896, %r4897, 23;
	shf.l.wrap.b32 	%r4903, %r4897, %r4896, 23;
	mov.b64 	%rd7478, {%r4903, %r4902};
	xor.b64  	%rd7479, %rd7477, %rd7478;
	xor.b64  	%rd7480, %rd7434, %rd18694;
	and.b64  	%rd7481, %rd7461, %rd7480;
	xor.b64  	%rd7482, %rd7481, %rd18694;
	add.s64 	%rd7483, %rd18700, %rd18695;
	ld.const.u64 	%rd7484, [%rd7474];
	add.s64 	%rd7485, %rd7483, %rd7484;
	add.s64 	%rd7486, %rd7485, %rd7482;
	add.s64 	%rd7487, %rd7486, %rd7479;
	add.s64 	%rd7488, %rd7487, %rd18691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4904,%dummy}, %rd7472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4905}, %rd7472;
	}
	shf.r.wrap.b32 	%r4906, %r4905, %r4904, 28;
	shf.r.wrap.b32 	%r4907, %r4904, %r4905, 28;
	mov.b64 	%rd7489, {%r4907, %r4906};
	shf.l.wrap.b32 	%r4908, %r4904, %r4905, 30;
	shf.l.wrap.b32 	%r4909, %r4905, %r4904, 30;
	mov.b64 	%rd7490, {%r4909, %r4908};
	xor.b64  	%rd7491, %rd7490, %rd7489;
	shf.l.wrap.b32 	%r4910, %r4904, %r4905, 25;
	shf.l.wrap.b32 	%r4911, %r4905, %r4904, 25;
	mov.b64 	%rd7492, {%r4911, %r4910};
	xor.b64  	%rd7493, %rd7491, %rd7492;
	and.b64  	%rd7494, %rd7472, %rd7445;
	xor.b64  	%rd7495, %rd7472, %rd7445;
	and.b64  	%rd7496, %rd7495, %rd18690;
	or.b64  	%rd7497, %rd7496, %rd7494;
	add.s64 	%rd7498, %rd7487, %rd7497;
	add.s64 	%rd7499, %rd7498, %rd7493;
	add.s32 	%r4912, %r12959, 3;
	mul.wide.s32 	%rd7500, %r4912, 8;
	add.s64 	%rd7501, %rd18521, %rd7500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4913,%dummy}, %rd7488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4914}, %rd7488;
	}
	shf.r.wrap.b32 	%r4915, %r4914, %r4913, 14;
	shf.r.wrap.b32 	%r4916, %r4913, %r4914, 14;
	mov.b64 	%rd7502, {%r4916, %r4915};
	shf.r.wrap.b32 	%r4917, %r4914, %r4913, 18;
	shf.r.wrap.b32 	%r4918, %r4913, %r4914, 18;
	mov.b64 	%rd7503, {%r4918, %r4917};
	xor.b64  	%rd7504, %rd7503, %rd7502;
	shf.l.wrap.b32 	%r4919, %r4913, %r4914, 23;
	shf.l.wrap.b32 	%r4920, %r4914, %r4913, 23;
	mov.b64 	%rd7505, {%r4920, %r4919};
	xor.b64  	%rd7506, %rd7504, %rd7505;
	xor.b64  	%rd7507, %rd7461, %rd7434;
	and.b64  	%rd7508, %rd7488, %rd7507;
	xor.b64  	%rd7509, %rd7508, %rd7434;
	add.s64 	%rd7510, %rd18701, %rd18694;
	ld.const.u64 	%rd7511, [%rd7501];
	add.s64 	%rd7512, %rd7510, %rd7511;
	add.s64 	%rd7513, %rd7512, %rd7509;
	add.s64 	%rd7514, %rd7513, %rd7506;
	add.s64 	%rd7515, %rd7514, %rd18690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4921,%dummy}, %rd7499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4922}, %rd7499;
	}
	shf.r.wrap.b32 	%r4923, %r4922, %r4921, 28;
	shf.r.wrap.b32 	%r4924, %r4921, %r4922, 28;
	mov.b64 	%rd7516, {%r4924, %r4923};
	shf.l.wrap.b32 	%r4925, %r4921, %r4922, 30;
	shf.l.wrap.b32 	%r4926, %r4922, %r4921, 30;
	mov.b64 	%rd7517, {%r4926, %r4925};
	xor.b64  	%rd7518, %rd7517, %rd7516;
	shf.l.wrap.b32 	%r4927, %r4921, %r4922, 25;
	shf.l.wrap.b32 	%r4928, %r4922, %r4921, 25;
	mov.b64 	%rd7519, {%r4928, %r4927};
	xor.b64  	%rd7520, %rd7518, %rd7519;
	and.b64  	%rd7521, %rd7499, %rd7472;
	xor.b64  	%rd7522, %rd7499, %rd7472;
	and.b64  	%rd7523, %rd7522, %rd7445;
	or.b64  	%rd7524, %rd7523, %rd7521;
	add.s64 	%rd7525, %rd7514, %rd7524;
	add.s64 	%rd7526, %rd7525, %rd7520;
	add.s32 	%r4929, %r12959, 4;
	mul.wide.s32 	%rd7527, %r4929, 8;
	add.s64 	%rd7528, %rd18521, %rd7527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4930,%dummy}, %rd7515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4931}, %rd7515;
	}
	shf.r.wrap.b32 	%r4932, %r4931, %r4930, 14;
	shf.r.wrap.b32 	%r4933, %r4930, %r4931, 14;
	mov.b64 	%rd7529, {%r4933, %r4932};
	shf.r.wrap.b32 	%r4934, %r4931, %r4930, 18;
	shf.r.wrap.b32 	%r4935, %r4930, %r4931, 18;
	mov.b64 	%rd7530, {%r4935, %r4934};
	xor.b64  	%rd7531, %rd7530, %rd7529;
	shf.l.wrap.b32 	%r4936, %r4930, %r4931, 23;
	shf.l.wrap.b32 	%r4937, %r4931, %r4930, 23;
	mov.b64 	%rd7532, {%r4937, %r4936};
	xor.b64  	%rd7533, %rd7531, %rd7532;
	xor.b64  	%rd7534, %rd7488, %rd7461;
	and.b64  	%rd7535, %rd7515, %rd7534;
	xor.b64  	%rd7536, %rd7535, %rd7461;
	add.s64 	%rd7537, %rd7434, %rd18702;
	ld.const.u64 	%rd7538, [%rd7528];
	add.s64 	%rd7539, %rd7537, %rd7538;
	add.s64 	%rd7540, %rd7539, %rd7536;
	add.s64 	%rd7541, %rd7540, %rd7533;
	add.s64 	%rd7542, %rd7541, %rd7445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4938,%dummy}, %rd7526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4939}, %rd7526;
	}
	shf.r.wrap.b32 	%r4940, %r4939, %r4938, 28;
	shf.r.wrap.b32 	%r4941, %r4938, %r4939, 28;
	mov.b64 	%rd7543, {%r4941, %r4940};
	shf.l.wrap.b32 	%r4942, %r4938, %r4939, 30;
	shf.l.wrap.b32 	%r4943, %r4939, %r4938, 30;
	mov.b64 	%rd7544, {%r4943, %r4942};
	xor.b64  	%rd7545, %rd7544, %rd7543;
	shf.l.wrap.b32 	%r4944, %r4938, %r4939, 25;
	shf.l.wrap.b32 	%r4945, %r4939, %r4938, 25;
	mov.b64 	%rd7546, {%r4945, %r4944};
	xor.b64  	%rd7547, %rd7545, %rd7546;
	and.b64  	%rd7548, %rd7526, %rd7499;
	xor.b64  	%rd7549, %rd7526, %rd7499;
	and.b64  	%rd7550, %rd7549, %rd7472;
	or.b64  	%rd7551, %rd7550, %rd7548;
	add.s64 	%rd7552, %rd7541, %rd7551;
	add.s64 	%rd7553, %rd7552, %rd7547;
	add.s32 	%r4946, %r12959, 5;
	mul.wide.s32 	%rd7554, %r4946, 8;
	add.s64 	%rd7555, %rd18521, %rd7554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4947,%dummy}, %rd7542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4948}, %rd7542;
	}
	shf.r.wrap.b32 	%r4949, %r4948, %r4947, 14;
	shf.r.wrap.b32 	%r4950, %r4947, %r4948, 14;
	mov.b64 	%rd7556, {%r4950, %r4949};
	shf.r.wrap.b32 	%r4951, %r4948, %r4947, 18;
	shf.r.wrap.b32 	%r4952, %r4947, %r4948, 18;
	mov.b64 	%rd7557, {%r4952, %r4951};
	xor.b64  	%rd7558, %rd7557, %rd7556;
	shf.l.wrap.b32 	%r4953, %r4947, %r4948, 23;
	shf.l.wrap.b32 	%r4954, %r4948, %r4947, 23;
	mov.b64 	%rd7559, {%r4954, %r4953};
	xor.b64  	%rd7560, %rd7558, %rd7559;
	xor.b64  	%rd7561, %rd7515, %rd7488;
	and.b64  	%rd7562, %rd7542, %rd7561;
	xor.b64  	%rd7563, %rd7562, %rd7488;
	add.s64 	%rd7564, %rd7461, %rd18703;
	ld.const.u64 	%rd7565, [%rd7555];
	add.s64 	%rd7566, %rd7564, %rd7565;
	add.s64 	%rd7567, %rd7566, %rd7563;
	add.s64 	%rd7568, %rd7567, %rd7560;
	add.s64 	%rd7569, %rd7568, %rd7472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4955,%dummy}, %rd7553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4956}, %rd7553;
	}
	shf.r.wrap.b32 	%r4957, %r4956, %r4955, 28;
	shf.r.wrap.b32 	%r4958, %r4955, %r4956, 28;
	mov.b64 	%rd7570, {%r4958, %r4957};
	shf.l.wrap.b32 	%r4959, %r4955, %r4956, 30;
	shf.l.wrap.b32 	%r4960, %r4956, %r4955, 30;
	mov.b64 	%rd7571, {%r4960, %r4959};
	xor.b64  	%rd7572, %rd7571, %rd7570;
	shf.l.wrap.b32 	%r4961, %r4955, %r4956, 25;
	shf.l.wrap.b32 	%r4962, %r4956, %r4955, 25;
	mov.b64 	%rd7573, {%r4962, %r4961};
	xor.b64  	%rd7574, %rd7572, %rd7573;
	and.b64  	%rd7575, %rd7553, %rd7526;
	xor.b64  	%rd7576, %rd7553, %rd7526;
	and.b64  	%rd7577, %rd7576, %rd7499;
	or.b64  	%rd7578, %rd7577, %rd7575;
	add.s64 	%rd7579, %rd7568, %rd7578;
	add.s64 	%rd7580, %rd7579, %rd7574;
	add.s32 	%r4963, %r12959, 6;
	mul.wide.s32 	%rd7581, %r4963, 8;
	add.s64 	%rd7582, %rd18521, %rd7581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4964,%dummy}, %rd7569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4965}, %rd7569;
	}
	shf.r.wrap.b32 	%r4966, %r4965, %r4964, 14;
	shf.r.wrap.b32 	%r4967, %r4964, %r4965, 14;
	mov.b64 	%rd7583, {%r4967, %r4966};
	shf.r.wrap.b32 	%r4968, %r4965, %r4964, 18;
	shf.r.wrap.b32 	%r4969, %r4964, %r4965, 18;
	mov.b64 	%rd7584, {%r4969, %r4968};
	xor.b64  	%rd7585, %rd7584, %rd7583;
	shf.l.wrap.b32 	%r4970, %r4964, %r4965, 23;
	shf.l.wrap.b32 	%r4971, %r4965, %r4964, 23;
	mov.b64 	%rd7586, {%r4971, %r4970};
	xor.b64  	%rd7587, %rd7585, %rd7586;
	xor.b64  	%rd7588, %rd7542, %rd7515;
	and.b64  	%rd7589, %rd7569, %rd7588;
	xor.b64  	%rd7590, %rd7589, %rd7515;
	add.s64 	%rd7591, %rd7488, %rd18704;
	ld.const.u64 	%rd7592, [%rd7582];
	add.s64 	%rd7593, %rd7591, %rd7592;
	add.s64 	%rd7594, %rd7593, %rd7590;
	add.s64 	%rd7595, %rd7594, %rd7587;
	add.s64 	%rd7596, %rd7595, %rd7499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4972,%dummy}, %rd7580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4973}, %rd7580;
	}
	shf.r.wrap.b32 	%r4974, %r4973, %r4972, 28;
	shf.r.wrap.b32 	%r4975, %r4972, %r4973, 28;
	mov.b64 	%rd7597, {%r4975, %r4974};
	shf.l.wrap.b32 	%r4976, %r4972, %r4973, 30;
	shf.l.wrap.b32 	%r4977, %r4973, %r4972, 30;
	mov.b64 	%rd7598, {%r4977, %r4976};
	xor.b64  	%rd7599, %rd7598, %rd7597;
	shf.l.wrap.b32 	%r4978, %r4972, %r4973, 25;
	shf.l.wrap.b32 	%r4979, %r4973, %r4972, 25;
	mov.b64 	%rd7600, {%r4979, %r4978};
	xor.b64  	%rd7601, %rd7599, %rd7600;
	and.b64  	%rd7602, %rd7580, %rd7553;
	xor.b64  	%rd7603, %rd7580, %rd7553;
	and.b64  	%rd7604, %rd7603, %rd7526;
	or.b64  	%rd7605, %rd7604, %rd7602;
	add.s64 	%rd7606, %rd7595, %rd7605;
	add.s64 	%rd7607, %rd7606, %rd7601;
	add.s32 	%r4980, %r12959, 7;
	mul.wide.s32 	%rd7608, %r4980, 8;
	add.s64 	%rd7609, %rd18521, %rd7608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4981,%dummy}, %rd7596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4982}, %rd7596;
	}
	shf.r.wrap.b32 	%r4983, %r4982, %r4981, 14;
	shf.r.wrap.b32 	%r4984, %r4981, %r4982, 14;
	mov.b64 	%rd7610, {%r4984, %r4983};
	shf.r.wrap.b32 	%r4985, %r4982, %r4981, 18;
	shf.r.wrap.b32 	%r4986, %r4981, %r4982, 18;
	mov.b64 	%rd7611, {%r4986, %r4985};
	xor.b64  	%rd7612, %rd7611, %rd7610;
	shf.l.wrap.b32 	%r4987, %r4981, %r4982, 23;
	shf.l.wrap.b32 	%r4988, %r4982, %r4981, 23;
	mov.b64 	%rd7613, {%r4988, %r4987};
	xor.b64  	%rd7614, %rd7612, %rd7613;
	xor.b64  	%rd7615, %rd7569, %rd7542;
	and.b64  	%rd7616, %rd7596, %rd7615;
	xor.b64  	%rd7617, %rd7616, %rd7542;
	add.s64 	%rd7618, %rd7515, %rd18705;
	ld.const.u64 	%rd7619, [%rd7609];
	add.s64 	%rd7620, %rd7618, %rd7619;
	add.s64 	%rd7621, %rd7620, %rd7617;
	add.s64 	%rd7622, %rd7621, %rd7614;
	add.s64 	%rd7623, %rd7622, %rd7526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4989,%dummy}, %rd7607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4990}, %rd7607;
	}
	shf.r.wrap.b32 	%r4991, %r4990, %r4989, 28;
	shf.r.wrap.b32 	%r4992, %r4989, %r4990, 28;
	mov.b64 	%rd7624, {%r4992, %r4991};
	shf.l.wrap.b32 	%r4993, %r4989, %r4990, 30;
	shf.l.wrap.b32 	%r4994, %r4990, %r4989, 30;
	mov.b64 	%rd7625, {%r4994, %r4993};
	xor.b64  	%rd7626, %rd7625, %rd7624;
	shf.l.wrap.b32 	%r4995, %r4989, %r4990, 25;
	shf.l.wrap.b32 	%r4996, %r4990, %r4989, 25;
	mov.b64 	%rd7627, {%r4996, %r4995};
	xor.b64  	%rd7628, %rd7626, %rd7627;
	and.b64  	%rd7629, %rd7607, %rd7580;
	xor.b64  	%rd7630, %rd7607, %rd7580;
	and.b64  	%rd7631, %rd7630, %rd7553;
	or.b64  	%rd7632, %rd7631, %rd7629;
	add.s64 	%rd7633, %rd7622, %rd7632;
	add.s64 	%rd7634, %rd7633, %rd7628;
	add.s32 	%r4997, %r12959, 8;
	mul.wide.s32 	%rd7635, %r4997, 8;
	add.s64 	%rd7636, %rd18521, %rd7635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4998,%dummy}, %rd7623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4999}, %rd7623;
	}
	shf.r.wrap.b32 	%r5000, %r4999, %r4998, 14;
	shf.r.wrap.b32 	%r5001, %r4998, %r4999, 14;
	mov.b64 	%rd7637, {%r5001, %r5000};
	shf.r.wrap.b32 	%r5002, %r4999, %r4998, 18;
	shf.r.wrap.b32 	%r5003, %r4998, %r4999, 18;
	mov.b64 	%rd7638, {%r5003, %r5002};
	xor.b64  	%rd7639, %rd7638, %rd7637;
	shf.l.wrap.b32 	%r5004, %r4998, %r4999, 23;
	shf.l.wrap.b32 	%r5005, %r4999, %r4998, 23;
	mov.b64 	%rd7640, {%r5005, %r5004};
	xor.b64  	%rd7641, %rd7639, %rd7640;
	xor.b64  	%rd7642, %rd7596, %rd7569;
	and.b64  	%rd7643, %rd7623, %rd7642;
	xor.b64  	%rd7644, %rd7643, %rd7569;
	add.s64 	%rd7645, %rd7542, %rd18689;
	ld.const.u64 	%rd7646, [%rd7636];
	add.s64 	%rd7647, %rd7645, %rd7646;
	add.s64 	%rd7648, %rd7647, %rd7644;
	add.s64 	%rd7649, %rd7648, %rd7641;
	add.s64 	%rd7650, %rd7649, %rd7553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5006,%dummy}, %rd7634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5007}, %rd7634;
	}
	shf.r.wrap.b32 	%r5008, %r5007, %r5006, 28;
	shf.r.wrap.b32 	%r5009, %r5006, %r5007, 28;
	mov.b64 	%rd7651, {%r5009, %r5008};
	shf.l.wrap.b32 	%r5010, %r5006, %r5007, 30;
	shf.l.wrap.b32 	%r5011, %r5007, %r5006, 30;
	mov.b64 	%rd7652, {%r5011, %r5010};
	xor.b64  	%rd7653, %rd7652, %rd7651;
	shf.l.wrap.b32 	%r5012, %r5006, %r5007, 25;
	shf.l.wrap.b32 	%r5013, %r5007, %r5006, 25;
	mov.b64 	%rd7654, {%r5013, %r5012};
	xor.b64  	%rd7655, %rd7653, %rd7654;
	and.b64  	%rd7656, %rd7634, %rd7607;
	xor.b64  	%rd7657, %rd7634, %rd7607;
	and.b64  	%rd7658, %rd7657, %rd7580;
	or.b64  	%rd7659, %rd7658, %rd7656;
	add.s64 	%rd7660, %rd7649, %rd7659;
	add.s64 	%rd7661, %rd7660, %rd7655;
	add.s32 	%r5014, %r12959, 9;
	mul.wide.s32 	%rd7662, %r5014, 8;
	add.s64 	%rd7663, %rd18521, %rd7662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5015,%dummy}, %rd7650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5016}, %rd7650;
	}
	shf.r.wrap.b32 	%r5017, %r5016, %r5015, 14;
	shf.r.wrap.b32 	%r5018, %r5015, %r5016, 14;
	mov.b64 	%rd7664, {%r5018, %r5017};
	shf.r.wrap.b32 	%r5019, %r5016, %r5015, 18;
	shf.r.wrap.b32 	%r5020, %r5015, %r5016, 18;
	mov.b64 	%rd7665, {%r5020, %r5019};
	xor.b64  	%rd7666, %rd7665, %rd7664;
	shf.l.wrap.b32 	%r5021, %r5015, %r5016, 23;
	shf.l.wrap.b32 	%r5022, %r5016, %r5015, 23;
	mov.b64 	%rd7667, {%r5022, %r5021};
	xor.b64  	%rd7668, %rd7666, %rd7667;
	xor.b64  	%rd7669, %rd7623, %rd7596;
	and.b64  	%rd7670, %rd7650, %rd7669;
	xor.b64  	%rd7671, %rd7670, %rd7596;
	add.s64 	%rd7672, %rd7569, %rd18688;
	ld.const.u64 	%rd7673, [%rd7663];
	add.s64 	%rd7674, %rd7672, %rd7673;
	add.s64 	%rd7675, %rd7674, %rd7671;
	add.s64 	%rd7676, %rd7675, %rd7668;
	add.s64 	%rd7677, %rd7676, %rd7580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5023,%dummy}, %rd7661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5024}, %rd7661;
	}
	shf.r.wrap.b32 	%r5025, %r5024, %r5023, 28;
	shf.r.wrap.b32 	%r5026, %r5023, %r5024, 28;
	mov.b64 	%rd7678, {%r5026, %r5025};
	shf.l.wrap.b32 	%r5027, %r5023, %r5024, 30;
	shf.l.wrap.b32 	%r5028, %r5024, %r5023, 30;
	mov.b64 	%rd7679, {%r5028, %r5027};
	xor.b64  	%rd7680, %rd7679, %rd7678;
	shf.l.wrap.b32 	%r5029, %r5023, %r5024, 25;
	shf.l.wrap.b32 	%r5030, %r5024, %r5023, 25;
	mov.b64 	%rd7681, {%r5030, %r5029};
	xor.b64  	%rd7682, %rd7680, %rd7681;
	and.b64  	%rd7683, %rd7661, %rd7634;
	xor.b64  	%rd7684, %rd7661, %rd7634;
	and.b64  	%rd7685, %rd7684, %rd7607;
	or.b64  	%rd7686, %rd7685, %rd7683;
	add.s64 	%rd7687, %rd7676, %rd7686;
	add.s64 	%rd7688, %rd7687, %rd7682;
	add.s32 	%r5031, %r12959, 10;
	mul.wide.s32 	%rd7689, %r5031, 8;
	add.s64 	%rd7690, %rd18521, %rd7689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5032,%dummy}, %rd7677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5033}, %rd7677;
	}
	shf.r.wrap.b32 	%r5034, %r5033, %r5032, 14;
	shf.r.wrap.b32 	%r5035, %r5032, %r5033, 14;
	mov.b64 	%rd7691, {%r5035, %r5034};
	shf.r.wrap.b32 	%r5036, %r5033, %r5032, 18;
	shf.r.wrap.b32 	%r5037, %r5032, %r5033, 18;
	mov.b64 	%rd7692, {%r5037, %r5036};
	xor.b64  	%rd7693, %rd7692, %rd7691;
	shf.l.wrap.b32 	%r5038, %r5032, %r5033, 23;
	shf.l.wrap.b32 	%r5039, %r5033, %r5032, 23;
	mov.b64 	%rd7694, {%r5039, %r5038};
	xor.b64  	%rd7695, %rd7693, %rd7694;
	xor.b64  	%rd7696, %rd7650, %rd7623;
	and.b64  	%rd7697, %rd7677, %rd7696;
	xor.b64  	%rd7698, %rd7697, %rd7623;
	add.s64 	%rd7699, %rd7596, %rd18687;
	ld.const.u64 	%rd7700, [%rd7690];
	add.s64 	%rd7701, %rd7699, %rd7700;
	add.s64 	%rd7702, %rd7701, %rd7698;
	add.s64 	%rd7703, %rd7702, %rd7695;
	add.s64 	%rd7704, %rd7703, %rd7607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5040,%dummy}, %rd7688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5041}, %rd7688;
	}
	shf.r.wrap.b32 	%r5042, %r5041, %r5040, 28;
	shf.r.wrap.b32 	%r5043, %r5040, %r5041, 28;
	mov.b64 	%rd7705, {%r5043, %r5042};
	shf.l.wrap.b32 	%r5044, %r5040, %r5041, 30;
	shf.l.wrap.b32 	%r5045, %r5041, %r5040, 30;
	mov.b64 	%rd7706, {%r5045, %r5044};
	xor.b64  	%rd7707, %rd7706, %rd7705;
	shf.l.wrap.b32 	%r5046, %r5040, %r5041, 25;
	shf.l.wrap.b32 	%r5047, %r5041, %r5040, 25;
	mov.b64 	%rd7708, {%r5047, %r5046};
	xor.b64  	%rd7709, %rd7707, %rd7708;
	and.b64  	%rd7710, %rd7688, %rd7661;
	xor.b64  	%rd7711, %rd7688, %rd7661;
	and.b64  	%rd7712, %rd7711, %rd7634;
	or.b64  	%rd7713, %rd7712, %rd7710;
	add.s64 	%rd7714, %rd7703, %rd7713;
	add.s64 	%rd7715, %rd7714, %rd7709;
	add.s32 	%r5048, %r12959, 11;
	mul.wide.s32 	%rd7716, %r5048, 8;
	add.s64 	%rd7717, %rd18521, %rd7716;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5049,%dummy}, %rd7704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5050}, %rd7704;
	}
	shf.r.wrap.b32 	%r5051, %r5050, %r5049, 14;
	shf.r.wrap.b32 	%r5052, %r5049, %r5050, 14;
	mov.b64 	%rd7718, {%r5052, %r5051};
	shf.r.wrap.b32 	%r5053, %r5050, %r5049, 18;
	shf.r.wrap.b32 	%r5054, %r5049, %r5050, 18;
	mov.b64 	%rd7719, {%r5054, %r5053};
	xor.b64  	%rd7720, %rd7719, %rd7718;
	shf.l.wrap.b32 	%r5055, %r5049, %r5050, 23;
	shf.l.wrap.b32 	%r5056, %r5050, %r5049, 23;
	mov.b64 	%rd7721, {%r5056, %r5055};
	xor.b64  	%rd7722, %rd7720, %rd7721;
	xor.b64  	%rd7723, %rd7677, %rd7650;
	and.b64  	%rd7724, %rd7704, %rd7723;
	xor.b64  	%rd7725, %rd7724, %rd7650;
	add.s64 	%rd7726, %rd7623, %rd18686;
	ld.const.u64 	%rd7727, [%rd7717];
	add.s64 	%rd7728, %rd7726, %rd7727;
	add.s64 	%rd7729, %rd7728, %rd7725;
	add.s64 	%rd7730, %rd7729, %rd7722;
	add.s64 	%rd7731, %rd7730, %rd7634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5057,%dummy}, %rd7715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5058}, %rd7715;
	}
	shf.r.wrap.b32 	%r5059, %r5058, %r5057, 28;
	shf.r.wrap.b32 	%r5060, %r5057, %r5058, 28;
	mov.b64 	%rd7732, {%r5060, %r5059};
	shf.l.wrap.b32 	%r5061, %r5057, %r5058, 30;
	shf.l.wrap.b32 	%r5062, %r5058, %r5057, 30;
	mov.b64 	%rd7733, {%r5062, %r5061};
	xor.b64  	%rd7734, %rd7733, %rd7732;
	shf.l.wrap.b32 	%r5063, %r5057, %r5058, 25;
	shf.l.wrap.b32 	%r5064, %r5058, %r5057, 25;
	mov.b64 	%rd7735, {%r5064, %r5063};
	xor.b64  	%rd7736, %rd7734, %rd7735;
	and.b64  	%rd7737, %rd7715, %rd7688;
	xor.b64  	%rd7738, %rd7715, %rd7688;
	and.b64  	%rd7739, %rd7738, %rd7661;
	or.b64  	%rd7740, %rd7739, %rd7737;
	add.s64 	%rd7741, %rd7730, %rd7740;
	add.s64 	%rd7742, %rd7741, %rd7736;
	add.s32 	%r5065, %r12959, 12;
	mul.wide.s32 	%rd7743, %r5065, 8;
	add.s64 	%rd7744, %rd18521, %rd7743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5066,%dummy}, %rd7731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5067}, %rd7731;
	}
	shf.r.wrap.b32 	%r5068, %r5067, %r5066, 14;
	shf.r.wrap.b32 	%r5069, %r5066, %r5067, 14;
	mov.b64 	%rd7745, {%r5069, %r5068};
	shf.r.wrap.b32 	%r5070, %r5067, %r5066, 18;
	shf.r.wrap.b32 	%r5071, %r5066, %r5067, 18;
	mov.b64 	%rd7746, {%r5071, %r5070};
	xor.b64  	%rd7747, %rd7746, %rd7745;
	shf.l.wrap.b32 	%r5072, %r5066, %r5067, 23;
	shf.l.wrap.b32 	%r5073, %r5067, %r5066, 23;
	mov.b64 	%rd7748, {%r5073, %r5072};
	xor.b64  	%rd7749, %rd7747, %rd7748;
	xor.b64  	%rd7750, %rd7704, %rd7677;
	and.b64  	%rd7751, %rd7731, %rd7750;
	xor.b64  	%rd7752, %rd7751, %rd7677;
	add.s64 	%rd7753, %rd7650, %rd18685;
	ld.const.u64 	%rd7754, [%rd7744];
	add.s64 	%rd7755, %rd7753, %rd7754;
	add.s64 	%rd7756, %rd7755, %rd7752;
	add.s64 	%rd7757, %rd7756, %rd7749;
	add.s64 	%rd18697, %rd7757, %rd7661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5074,%dummy}, %rd7742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5075}, %rd7742;
	}
	shf.r.wrap.b32 	%r5076, %r5075, %r5074, 28;
	shf.r.wrap.b32 	%r5077, %r5074, %r5075, 28;
	mov.b64 	%rd7758, {%r5077, %r5076};
	shf.l.wrap.b32 	%r5078, %r5074, %r5075, 30;
	shf.l.wrap.b32 	%r5079, %r5075, %r5074, 30;
	mov.b64 	%rd7759, {%r5079, %r5078};
	xor.b64  	%rd7760, %rd7759, %rd7758;
	shf.l.wrap.b32 	%r5080, %r5074, %r5075, 25;
	shf.l.wrap.b32 	%r5081, %r5075, %r5074, 25;
	mov.b64 	%rd7761, {%r5081, %r5080};
	xor.b64  	%rd7762, %rd7760, %rd7761;
	and.b64  	%rd7763, %rd7742, %rd7715;
	xor.b64  	%rd7764, %rd7742, %rd7715;
	and.b64  	%rd7765, %rd7764, %rd7688;
	or.b64  	%rd7766, %rd7765, %rd7763;
	add.s64 	%rd7767, %rd7757, %rd7766;
	add.s64 	%rd18693, %rd7767, %rd7762;
	add.s32 	%r5082, %r12959, 13;
	mul.wide.s32 	%rd7768, %r5082, 8;
	add.s64 	%rd7769, %rd18521, %rd7768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5083,%dummy}, %rd18697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5084}, %rd18697;
	}
	shf.r.wrap.b32 	%r5085, %r5084, %r5083, 14;
	shf.r.wrap.b32 	%r5086, %r5083, %r5084, 14;
	mov.b64 	%rd7770, {%r5086, %r5085};
	shf.r.wrap.b32 	%r5087, %r5084, %r5083, 18;
	shf.r.wrap.b32 	%r5088, %r5083, %r5084, 18;
	mov.b64 	%rd7771, {%r5088, %r5087};
	xor.b64  	%rd7772, %rd7771, %rd7770;
	shf.l.wrap.b32 	%r5089, %r5083, %r5084, 23;
	shf.l.wrap.b32 	%r5090, %r5084, %r5083, 23;
	mov.b64 	%rd7773, {%r5090, %r5089};
	xor.b64  	%rd7774, %rd7772, %rd7773;
	xor.b64  	%rd7775, %rd7731, %rd7704;
	and.b64  	%rd7776, %rd18697, %rd7775;
	xor.b64  	%rd7777, %rd7776, %rd7704;
	add.s64 	%rd7778, %rd7677, %rd18684;
	ld.const.u64 	%rd7779, [%rd7769];
	add.s64 	%rd7780, %rd7778, %rd7779;
	add.s64 	%rd7781, %rd7780, %rd7777;
	add.s64 	%rd7782, %rd7781, %rd7774;
	add.s64 	%rd18696, %rd7782, %rd7688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5091,%dummy}, %rd18693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5092}, %rd18693;
	}
	shf.r.wrap.b32 	%r5093, %r5092, %r5091, 28;
	shf.r.wrap.b32 	%r5094, %r5091, %r5092, 28;
	mov.b64 	%rd7783, {%r5094, %r5093};
	shf.l.wrap.b32 	%r5095, %r5091, %r5092, 30;
	shf.l.wrap.b32 	%r5096, %r5092, %r5091, 30;
	mov.b64 	%rd7784, {%r5096, %r5095};
	xor.b64  	%rd7785, %rd7784, %rd7783;
	shf.l.wrap.b32 	%r5097, %r5091, %r5092, 25;
	shf.l.wrap.b32 	%r5098, %r5092, %r5091, 25;
	mov.b64 	%rd7786, {%r5098, %r5097};
	xor.b64  	%rd7787, %rd7785, %rd7786;
	and.b64  	%rd7788, %rd18693, %rd7742;
	xor.b64  	%rd7789, %rd18693, %rd7742;
	and.b64  	%rd7790, %rd7789, %rd7715;
	or.b64  	%rd7791, %rd7790, %rd7788;
	add.s64 	%rd7792, %rd7782, %rd7791;
	add.s64 	%rd18692, %rd7792, %rd7787;
	add.s32 	%r5099, %r12959, 14;
	mul.wide.s32 	%rd7793, %r5099, 8;
	add.s64 	%rd7794, %rd18521, %rd7793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5100,%dummy}, %rd18696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5101}, %rd18696;
	}
	shf.r.wrap.b32 	%r5102, %r5101, %r5100, 14;
	shf.r.wrap.b32 	%r5103, %r5100, %r5101, 14;
	mov.b64 	%rd7795, {%r5103, %r5102};
	shf.r.wrap.b32 	%r5104, %r5101, %r5100, 18;
	shf.r.wrap.b32 	%r5105, %r5100, %r5101, 18;
	mov.b64 	%rd7796, {%r5105, %r5104};
	xor.b64  	%rd7797, %rd7796, %rd7795;
	shf.l.wrap.b32 	%r5106, %r5100, %r5101, 23;
	shf.l.wrap.b32 	%r5107, %r5101, %r5100, 23;
	mov.b64 	%rd7798, {%r5107, %r5106};
	xor.b64  	%rd7799, %rd7797, %rd7798;
	xor.b64  	%rd7800, %rd18697, %rd7731;
	and.b64  	%rd7801, %rd18696, %rd7800;
	xor.b64  	%rd7802, %rd7801, %rd7731;
	add.s64 	%rd7803, %rd7704, %rd18683;
	ld.const.u64 	%rd7804, [%rd7794];
	add.s64 	%rd7805, %rd7803, %rd7804;
	add.s64 	%rd7806, %rd7805, %rd7802;
	add.s64 	%rd7807, %rd7806, %rd7799;
	add.s64 	%rd18695, %rd7807, %rd7715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5108,%dummy}, %rd18692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5109}, %rd18692;
	}
	shf.r.wrap.b32 	%r5110, %r5109, %r5108, 28;
	shf.r.wrap.b32 	%r5111, %r5108, %r5109, 28;
	mov.b64 	%rd7808, {%r5111, %r5110};
	shf.l.wrap.b32 	%r5112, %r5108, %r5109, 30;
	shf.l.wrap.b32 	%r5113, %r5109, %r5108, 30;
	mov.b64 	%rd7809, {%r5113, %r5112};
	xor.b64  	%rd7810, %rd7809, %rd7808;
	shf.l.wrap.b32 	%r5114, %r5108, %r5109, 25;
	shf.l.wrap.b32 	%r5115, %r5109, %r5108, 25;
	mov.b64 	%rd7811, {%r5115, %r5114};
	xor.b64  	%rd7812, %rd7810, %rd7811;
	and.b64  	%rd7813, %rd18692, %rd18693;
	xor.b64  	%rd7814, %rd18692, %rd18693;
	and.b64  	%rd7815, %rd7814, %rd7742;
	or.b64  	%rd7816, %rd7815, %rd7813;
	add.s64 	%rd7817, %rd7807, %rd7816;
	add.s64 	%rd18691, %rd7817, %rd7812;
	add.s32 	%r5116, %r12959, 15;
	mul.wide.s32 	%rd7818, %r5116, 8;
	add.s64 	%rd7819, %rd18521, %rd7818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5117,%dummy}, %rd18695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5118}, %rd18695;
	}
	shf.r.wrap.b32 	%r5119, %r5118, %r5117, 14;
	shf.r.wrap.b32 	%r5120, %r5117, %r5118, 14;
	mov.b64 	%rd7820, {%r5120, %r5119};
	shf.r.wrap.b32 	%r5121, %r5118, %r5117, 18;
	shf.r.wrap.b32 	%r5122, %r5117, %r5118, 18;
	mov.b64 	%rd7821, {%r5122, %r5121};
	xor.b64  	%rd7822, %rd7821, %rd7820;
	shf.l.wrap.b32 	%r5123, %r5117, %r5118, 23;
	shf.l.wrap.b32 	%r5124, %r5118, %r5117, 23;
	mov.b64 	%rd7823, {%r5124, %r5123};
	xor.b64  	%rd7824, %rd7822, %rd7823;
	xor.b64  	%rd7825, %rd18696, %rd18697;
	and.b64  	%rd7826, %rd18695, %rd7825;
	xor.b64  	%rd7827, %rd7826, %rd18697;
	add.s64 	%rd7828, %rd7731, %rd18682;
	ld.const.u64 	%rd7829, [%rd7819];
	add.s64 	%rd7830, %rd7828, %rd7829;
	add.s64 	%rd7831, %rd7830, %rd7827;
	add.s64 	%rd7832, %rd7831, %rd7824;
	add.s64 	%rd18694, %rd7832, %rd7742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5125,%dummy}, %rd18691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5126}, %rd18691;
	}
	shf.r.wrap.b32 	%r5127, %r5126, %r5125, 28;
	shf.r.wrap.b32 	%r5128, %r5125, %r5126, 28;
	mov.b64 	%rd7833, {%r5128, %r5127};
	shf.l.wrap.b32 	%r5129, %r5125, %r5126, 30;
	shf.l.wrap.b32 	%r5130, %r5126, %r5125, 30;
	mov.b64 	%rd7834, {%r5130, %r5129};
	xor.b64  	%rd7835, %rd7834, %rd7833;
	shf.l.wrap.b32 	%r5131, %r5125, %r5126, 25;
	shf.l.wrap.b32 	%r5132, %r5126, %r5125, 25;
	mov.b64 	%rd7836, {%r5132, %r5131};
	xor.b64  	%rd7837, %rd7835, %rd7836;
	and.b64  	%rd7838, %rd18691, %rd18692;
	xor.b64  	%rd7839, %rd18691, %rd18692;
	and.b64  	%rd7840, %rd7839, %rd18693;
	or.b64  	%rd7841, %rd7840, %rd7838;
	add.s64 	%rd7842, %rd7832, %rd7841;
	add.s64 	%rd18690, %rd7842, %rd7837;
	add.s32 	%r12959, %r12959, 16;
	setp.lt.s32	%p85, %r12959, 80;
	@%p85 bra 	BB0_138;

	add.s64 	%rd7843, %rd495, %rd18690;
	st.local.u64 	[%rd1], %rd7843;
	add.s64 	%rd7844, %rd496, %rd18691;
	st.local.u64 	[%rd1+8], %rd7844;
	add.s64 	%rd7845, %rd497, %rd18692;
	st.local.u64 	[%rd1+16], %rd7845;
	add.s64 	%rd7846, %rd494, %rd18693;
	st.local.u64 	[%rd1+24], %rd7846;
	add.s64 	%rd7847, %rd489, %rd18694;
	st.local.u64 	[%rd1+32], %rd7847;
	add.s64 	%rd7848, %rd491, %rd18695;
	st.local.u64 	[%rd1+40], %rd7848;
	add.s64 	%rd7849, %rd490, %rd18696;
	st.local.u64 	[%rd1+48], %rd7849;
	add.s64 	%rd7850, %rd492, %rd18697;
	st.local.u64 	[%rd1+56], %rd7850;
	sub.s32 	%r209, %r2, %r189;
	setp.lt.s32	%p86, %r209, 1;
	@%p86 bra 	BB0_158;

	add.s32 	%r210, %r188, -128;
	and.b32  	%r211, %r210, 3;
	setp.eq.s32	%p87, %r211, 0;
	mov.u32 	%r12963, 0;
	@%p87 bra 	BB0_146;

	setp.eq.s32	%p88, %r211, 1;
	mov.u32 	%r12961, 0;
	@%p88 bra 	BB0_145;

	setp.eq.s32	%p89, %r211, 2;
	mov.u32 	%r12960, 0;
	@%p89 bra 	BB0_144;

	xor.b32  	%r5137, %r189, 7;
	cvt.u64.u32	%rd7851, %r5137;
	add.s64 	%rd7852, %rd339, %rd7851;
	ld.local.u8 	%rs98, [%rd7852];
	st.local.u8 	[%rd89+7], %rs98;
	mov.u32 	%r12960, 1;

BB0_144:
	add.s32 	%r5138, %r12960, %r189;
	xor.b32  	%r5139, %r5138, 7;
	cvt.s64.s32	%rd7853, %r5139;
	add.s64 	%rd7854, %rd339, %rd7853;
	ld.local.u8 	%rs99, [%rd7854];
	xor.b32  	%r5140, %r12960, 7;
	cvt.u64.u32	%rd7855, %r5140;
	add.s64 	%rd7856, %rd89, %rd7855;
	st.local.u8 	[%rd7856], %rs99;
	add.s32 	%r12961, %r12960, 1;

BB0_145:
	add.s32 	%r5141, %r12961, %r189;
	xor.b32  	%r5142, %r5141, 7;
	cvt.s64.s32	%rd7857, %r5142;
	add.s64 	%rd7858, %rd339, %rd7857;
	ld.local.u8 	%rs100, [%rd7858];
	xor.b32  	%r5143, %r12961, 7;
	cvt.s64.s32	%rd7859, %r5143;
	add.s64 	%rd7860, %rd89, %rd7859;
	st.local.u8 	[%rd7860], %rs100;
	add.s32 	%r12963, %r12961, 1;

BB0_146:
	setp.lt.u32	%p90, %r210, 4;
	@%p90 bra 	BB0_158;

BB0_147:
	add.s32 	%r5144, %r12963, %r189;
	xor.b32  	%r5145, %r5144, 7;
	cvt.s64.s32	%rd7861, %r5145;
	add.s64 	%rd7862, %rd339, %rd7861;
	ld.local.u8 	%rs101, [%rd7862];
	xor.b32  	%r5146, %r12963, 7;
	cvt.s64.s32	%rd7863, %r5146;
	add.s64 	%rd7864, %rd89, %rd7863;
	st.local.u8 	[%rd7864], %rs101;
	add.s32 	%r5147, %r12963, 1;
	add.s32 	%r5148, %r5147, %r189;
	xor.b32  	%r5149, %r5148, 7;
	cvt.s64.s32	%rd7865, %r5149;
	add.s64 	%rd7866, %rd339, %rd7865;
	ld.local.u8 	%rs102, [%rd7866];
	xor.b32  	%r5150, %r5147, 7;
	cvt.s64.s32	%rd7867, %r5150;
	add.s64 	%rd7868, %rd89, %rd7867;
	st.local.u8 	[%rd7868], %rs102;
	add.s32 	%r5151, %r12963, 2;
	add.s32 	%r5152, %r5151, %r189;
	xor.b32  	%r5153, %r5152, 7;
	cvt.s64.s32	%rd7869, %r5153;
	add.s64 	%rd7870, %rd339, %rd7869;
	ld.local.u8 	%rs103, [%rd7870];
	xor.b32  	%r5154, %r5151, 7;
	cvt.s64.s32	%rd7871, %r5154;
	add.s64 	%rd7872, %rd89, %rd7871;
	st.local.u8 	[%rd7872], %rs103;
	add.s32 	%r5155, %r12963, 3;
	add.s32 	%r5156, %r5155, %r189;
	xor.b32  	%r5157, %r5156, 7;
	cvt.s64.s32	%rd7873, %r5157;
	add.s64 	%rd7874, %rd339, %rd7873;
	ld.local.u8 	%rs104, [%rd7874];
	xor.b32  	%r5158, %r5155, 7;
	cvt.s64.s32	%rd7875, %r5158;
	add.s64 	%rd7876, %rd89, %rd7875;
	st.local.u8 	[%rd7876], %rs104;
	add.s32 	%r12963, %r12963, 4;
	setp.lt.s32	%p91, %r12963, %r209;
	@%p91 bra 	BB0_147;
	bra.uni 	BB0_158;

BB0_153:
	ld.local.u8 	%rs105, [%rd339+7];
	xor.b32  	%r5164, %r187, 7;
	cvt.u64.u32	%rd7878, %r5164;
	add.s64 	%rd7879, %rd89, %rd7878;
	st.local.u8 	[%rd7879], %rs105;
	add.s32 	%r187, %r187, 1;

BB0_154:
	xor.b32  	%r5165, %r5160, 7;
	cvt.u64.u32	%rd7880, %r5165;
	add.s64 	%rd7881, %rd339, %rd7880;
	ld.local.u8 	%rs106, [%rd7881];
	xor.b32  	%r5166, %r187, 7;
	cvt.s64.s32	%rd7882, %r5166;
	add.s64 	%rd7883, %rd89, %rd7882;
	st.local.u8 	[%rd7883], %rs106;
	add.s32 	%r187, %r187, 1;
	add.s32 	%r12967, %r5160, 1;

BB0_155:
	xor.b32  	%r5167, %r12967, 7;
	cvt.s64.s32	%rd7884, %r5167;
	add.s64 	%rd7885, %rd339, %rd7884;
	ld.local.u8 	%rs107, [%rd7885];
	xor.b32  	%r5168, %r187, 7;
	cvt.s64.s32	%rd7886, %r5168;
	add.s64 	%rd7887, %rd89, %rd7886;
	st.local.u8 	[%rd7887], %rs107;
	add.s32 	%r187, %r187, 1;
	add.s32 	%r12971, %r12967, 1;

BB0_156:
	setp.lt.u32	%p96, %r219, 4;
	@%p96 bra 	BB0_158;

BB0_157:
	xor.b32  	%r5169, %r12971, 7;
	cvt.s64.s32	%rd7888, %r5169;
	add.s64 	%rd7889, %rd339, %rd7888;
	ld.local.u8 	%rs108, [%rd7889];
	xor.b32  	%r5170, %r187, 7;
	cvt.s64.s32	%rd7890, %r5170;
	add.s64 	%rd7891, %rd89, %rd7890;
	st.local.u8 	[%rd7891], %rs108;
	add.s32 	%r5171, %r12971, 1;
	xor.b32  	%r5172, %r5171, 7;
	cvt.s64.s32	%rd7892, %r5172;
	add.s64 	%rd7893, %rd339, %rd7892;
	ld.local.u8 	%rs109, [%rd7893];
	add.s32 	%r5173, %r187, 1;
	xor.b32  	%r5174, %r5173, 7;
	cvt.s64.s32	%rd7894, %r5174;
	add.s64 	%rd7895, %rd89, %rd7894;
	st.local.u8 	[%rd7895], %rs109;
	add.s32 	%r5175, %r12971, 2;
	xor.b32  	%r5176, %r5175, 7;
	cvt.s64.s32	%rd7896, %r5176;
	add.s64 	%rd7897, %rd339, %rd7896;
	ld.local.u8 	%rs110, [%rd7897];
	add.s32 	%r5177, %r187, 2;
	xor.b32  	%r5178, %r5177, 7;
	cvt.s64.s32	%rd7898, %r5178;
	add.s64 	%rd7899, %rd89, %rd7898;
	st.local.u8 	[%rd7899], %rs110;
	add.s32 	%r5179, %r12971, 3;
	xor.b32  	%r5180, %r5179, 7;
	cvt.s64.s32	%rd7900, %r5180;
	add.s64 	%rd7901, %rd339, %rd7900;
	ld.local.u8 	%rs111, [%rd7901];
	add.s32 	%r5181, %r187, 3;
	xor.b32  	%r5182, %r5181, 7;
	cvt.s64.s32	%rd7902, %r5182;
	add.s64 	%rd7903, %rd89, %rd7902;
	st.local.u8 	[%rd7903], %rs111;
	add.s32 	%r12971, %r12971, 4;
	setp.lt.s32	%p97, %r12971, %r2;
	add.s32 	%r187, %r187, 4;
	@%p97 bra 	BB0_157;

BB0_158:
	setp.eq.s32	%p207, %r2, 0;
	@%p207 bra 	BB0_211;

	add.s32 	%r236, %r2, -128;
	mov.u32 	%r5183, 1;
	max.u32 	%r237, %r2, %r5183;
	and.b32  	%r238, %r237, 3;
	add.s64 	%rd573, %rd1463, 7;
	add.s64 	%rd583, %rd89, 7;
	add.s64 	%rd584, %rd339, 7;
	add.s64 	%rd576, %rd339, 54;
	add.s64 	%rd577, %rd339, 52;
	add.s64 	%rd578, %rd339, 51;
	add.s64 	%rd579, %rd339, 50;
	add.s64 	%rd580, %rd339, 49;
	add.s64 	%rd581, %rd339, 60;
	add.s64 	%rd582, %rd339, 58;
	cvt.u16.u64	%rs1, %rd397;
	cvt.u16.u64	%rs2, %rd398;
	cvt.u16.u64	%rs3, %rd399;
	cvt.u16.u64	%rs4, %rd400;
	cvt.u16.u64	%rs5, %rd401;
	cvt.u16.u64	%rs6, %rd402;
	cvt.u16.u64	%rs7, %rd403;
	cvt.u16.u64	%rs8, %rd404;
	mov.u32 	%r12972, %r2;

BB0_160:
	and.b32  	%r5184, %r12972, 1;
	setp.eq.b32	%p99, %r5184, 1;
	ld.local.u32 	%r240, [%rd1+192];
	and.b32  	%r241, %r240, 127;
	@!%p99 bra 	BB0_182;
	bra.uni 	BB0_161;

BB0_182:
	add.s32 	%r6081, %r240, %r2;
	st.local.u32 	[%rd1+192], %r6081;
	add.s32 	%r6082, %r241, %r2;
	setp.lt.s32	%p113, %r6082, 128;
	@%p113 bra 	BB0_202;
	bra.uni 	BB0_183;

BB0_202:
	setp.eq.s32	%p126, %r238, 0;
	mov.u32 	%r13006, 0;
	@%p126 bra 	BB0_208;

	setp.eq.s32	%p127, %r238, 1;
	mov.u32 	%r13002, 0;
	@%p127 bra 	BB0_207;

	setp.eq.s32	%p128, %r238, 2;
	mov.u32 	%r13000, 0;
	@%p128 bra 	BB0_206;

	ld.local.u8 	%rs208, [%rd573];
	xor.b32  	%r6854, %r241, 7;
	cvt.u64.u32	%rd10140, %r6854;
	add.s64 	%rd10141, %rd89, %rd10140;
	st.local.u8 	[%rd10141], %rs208;
	add.s32 	%r241, %r241, 1;
	mov.u32 	%r13000, 1;

BB0_206:
	xor.b32  	%r6855, %r13000, 7;
	cvt.u64.u32	%rd10142, %r6855;
	add.s64 	%rd10143, %rd1463, %rd10142;
	ld.local.u8 	%rs209, [%rd10143];
	xor.b32  	%r6856, %r241, 7;
	cvt.s64.s32	%rd10144, %r6856;
	add.s64 	%rd10145, %rd89, %rd10144;
	st.local.u8 	[%rd10145], %rs209;
	add.s32 	%r241, %r241, 1;
	add.s32 	%r13002, %r13000, 1;

BB0_207:
	xor.b32  	%r6857, %r13002, 7;
	cvt.s64.s32	%rd10146, %r6857;
	add.s64 	%rd10147, %rd1463, %rd10146;
	ld.local.u8 	%rs210, [%rd10147];
	xor.b32  	%r6858, %r241, 7;
	cvt.s64.s32	%rd10148, %r6858;
	add.s64 	%rd10149, %rd89, %rd10148;
	st.local.u8 	[%rd10149], %rs210;
	add.s32 	%r241, %r241, 1;
	add.s32 	%r13006, %r13002, 1;

BB0_208:
	setp.lt.u32	%p129, %r237, 4;
	@%p129 bra 	BB0_210;

BB0_209:
	xor.b32  	%r6859, %r13006, 7;
	cvt.s64.s32	%rd10150, %r6859;
	add.s64 	%rd10151, %rd1463, %rd10150;
	ld.local.u8 	%rs211, [%rd10151];
	xor.b32  	%r6860, %r241, 7;
	cvt.s64.s32	%rd10152, %r6860;
	add.s64 	%rd10153, %rd89, %rd10152;
	st.local.u8 	[%rd10153], %rs211;
	add.s32 	%r6861, %r13006, 1;
	xor.b32  	%r6862, %r6861, 7;
	cvt.s64.s32	%rd10154, %r6862;
	add.s64 	%rd10155, %rd1463, %rd10154;
	ld.local.u8 	%rs212, [%rd10155];
	add.s32 	%r6863, %r241, 1;
	xor.b32  	%r6864, %r6863, 7;
	cvt.s64.s32	%rd10156, %r6864;
	add.s64 	%rd10157, %rd89, %rd10156;
	st.local.u8 	[%rd10157], %rs212;
	add.s32 	%r6865, %r13006, 2;
	xor.b32  	%r6866, %r6865, 7;
	cvt.s64.s32	%rd10158, %r6866;
	add.s64 	%rd10159, %rd1463, %rd10158;
	ld.local.u8 	%rs213, [%rd10159];
	add.s32 	%r6867, %r241, 2;
	xor.b32  	%r6868, %r6867, 7;
	cvt.s64.s32	%rd10160, %r6868;
	add.s64 	%rd10161, %rd89, %rd10160;
	st.local.u8 	[%rd10161], %rs213;
	add.s32 	%r6869, %r13006, 3;
	xor.b32  	%r6870, %r6869, 7;
	cvt.s64.s32	%rd10162, %r6870;
	add.s64 	%rd10163, %rd1463, %rd10162;
	ld.local.u8 	%rs214, [%rd10163];
	add.s32 	%r6871, %r241, 3;
	xor.b32  	%r6872, %r6871, 7;
	cvt.s64.s32	%rd10164, %r6872;
	add.s64 	%rd10165, %rd89, %rd10164;
	st.local.u8 	[%rd10165], %rs214;
	add.s32 	%r241, %r241, 4;
	add.s32 	%r13006, %r13006, 4;
	setp.lt.s32	%p130, %r13006, %r2;
	@%p130 bra 	BB0_209;
	bra.uni 	BB0_210;

BB0_161:
	add.s32 	%r5185, %r240, 64;
	st.local.u32 	[%rd1+192], %r5185;
	add.s32 	%r5186, %r241, 64;
	setp.lt.u32	%p100, %r5186, 128;
	@%p100 bra 	BB0_181;
	bra.uni 	BB0_162;

BB0_181:
	ld.local.u8 	%rs126, [%rd584];
	xor.b32  	%r5954, %r241, 7;
	cvt.u64.u32	%rd8959, %r5954;
	add.s64 	%rd8960, %rd89, %rd8959;
	st.local.u8 	[%rd8960], %rs126;
	ld.local.u8 	%rs127, [%rd339+6];
	add.s32 	%r5955, %r241, 1;
	xor.b32  	%r5956, %r5955, 7;
	cvt.u64.u32	%rd8961, %r5956;
	add.s64 	%rd8962, %rd89, %rd8961;
	st.local.u8 	[%rd8962], %rs127;
	ld.local.u8 	%rs128, [%rd339+5];
	add.s32 	%r5957, %r241, 2;
	xor.b32  	%r5958, %r5957, 7;
	cvt.u64.u32	%rd8963, %r5958;
	add.s64 	%rd8964, %rd89, %rd8963;
	st.local.u8 	[%rd8964], %rs128;
	ld.local.u8 	%rs129, [%rd339+4];
	add.s32 	%r5959, %r241, 3;
	xor.b32  	%r5960, %r5959, 7;
	cvt.u64.u32	%rd8965, %r5960;
	add.s64 	%rd8966, %rd89, %rd8965;
	st.local.u8 	[%rd8966], %rs129;
	ld.local.u8 	%rs130, [%rd339+3];
	add.s32 	%r5961, %r241, 4;
	xor.b32  	%r5962, %r5961, 7;
	cvt.u64.u32	%rd8967, %r5962;
	add.s64 	%rd8968, %rd89, %rd8967;
	st.local.u8 	[%rd8968], %rs130;
	ld.local.u8 	%rs131, [%rd339+2];
	add.s32 	%r5963, %r241, 5;
	xor.b32  	%r5964, %r5963, 7;
	cvt.u64.u32	%rd8969, %r5964;
	add.s64 	%rd8970, %rd89, %rd8969;
	st.local.u8 	[%rd8970], %rs131;
	ld.local.u8 	%rs132, [%rd339+1];
	add.s32 	%r5965, %r241, 6;
	xor.b32  	%r5966, %r5965, 7;
	cvt.u64.u32	%rd8971, %r5966;
	add.s64 	%rd8972, %rd89, %rd8971;
	st.local.u8 	[%rd8972], %rs132;
	add.s32 	%r5967, %r241, 7;
	xor.b32  	%r5968, %r5967, 7;
	cvt.u64.u32	%rd8973, %r5968;
	add.s64 	%rd8974, %rd89, %rd8973;
	st.local.u8 	[%rd8974], %rs1;
	ld.local.u8 	%rs133, [%rd339+15];
	add.s32 	%r5969, %r241, 8;
	xor.b32  	%r5970, %r5969, 7;
	cvt.u64.u32	%rd8975, %r5970;
	add.s64 	%rd8976, %rd89, %rd8975;
	st.local.u8 	[%rd8976], %rs133;
	ld.local.u8 	%rs134, [%rd339+14];
	add.s32 	%r5971, %r241, 9;
	xor.b32  	%r5972, %r5971, 7;
	cvt.u64.u32	%rd8977, %r5972;
	add.s64 	%rd8978, %rd89, %rd8977;
	st.local.u8 	[%rd8978], %rs134;
	ld.local.u8 	%rs135, [%rd339+13];
	add.s32 	%r5973, %r241, 10;
	xor.b32  	%r5974, %r5973, 7;
	cvt.u64.u32	%rd8979, %r5974;
	add.s64 	%rd8980, %rd89, %rd8979;
	st.local.u8 	[%rd8980], %rs135;
	ld.local.u8 	%rs136, [%rd339+12];
	add.s32 	%r5975, %r241, 11;
	xor.b32  	%r5976, %r5975, 7;
	cvt.u64.u32	%rd8981, %r5976;
	add.s64 	%rd8982, %rd89, %rd8981;
	st.local.u8 	[%rd8982], %rs136;
	ld.local.u8 	%rs137, [%rd339+11];
	add.s32 	%r5977, %r241, 12;
	xor.b32  	%r5978, %r5977, 7;
	cvt.u64.u32	%rd8983, %r5978;
	add.s64 	%rd8984, %rd89, %rd8983;
	st.local.u8 	[%rd8984], %rs137;
	ld.local.u8 	%rs138, [%rd339+10];
	add.s32 	%r5979, %r241, 13;
	xor.b32  	%r5980, %r5979, 7;
	cvt.u64.u32	%rd8985, %r5980;
	add.s64 	%rd8986, %rd89, %rd8985;
	st.local.u8 	[%rd8986], %rs138;
	ld.local.u8 	%rs139, [%rd339+9];
	add.s32 	%r5981, %r241, 14;
	xor.b32  	%r5982, %r5981, 7;
	cvt.u64.u32	%rd8987, %r5982;
	add.s64 	%rd8988, %rd89, %rd8987;
	st.local.u8 	[%rd8988], %rs139;
	add.s32 	%r5983, %r241, 15;
	xor.b32  	%r5984, %r5983, 7;
	cvt.u64.u32	%rd8989, %r5984;
	add.s64 	%rd8990, %rd89, %rd8989;
	st.local.u8 	[%rd8990], %rs2;
	ld.local.u8 	%rs140, [%rd339+23];
	add.s32 	%r5985, %r241, 16;
	xor.b32  	%r5986, %r5985, 7;
	cvt.u64.u32	%rd8991, %r5986;
	add.s64 	%rd8992, %rd89, %rd8991;
	st.local.u8 	[%rd8992], %rs140;
	ld.local.u8 	%rs141, [%rd339+22];
	add.s32 	%r5987, %r241, 17;
	xor.b32  	%r5988, %r5987, 7;
	cvt.u64.u32	%rd8993, %r5988;
	add.s64 	%rd8994, %rd89, %rd8993;
	st.local.u8 	[%rd8994], %rs141;
	ld.local.u8 	%rs142, [%rd339+21];
	add.s32 	%r5989, %r241, 18;
	xor.b32  	%r5990, %r5989, 7;
	cvt.u64.u32	%rd8995, %r5990;
	add.s64 	%rd8996, %rd89, %rd8995;
	st.local.u8 	[%rd8996], %rs142;
	ld.local.u8 	%rs143, [%rd339+20];
	add.s32 	%r5991, %r241, 19;
	xor.b32  	%r5992, %r5991, 7;
	cvt.u64.u32	%rd8997, %r5992;
	add.s64 	%rd8998, %rd89, %rd8997;
	st.local.u8 	[%rd8998], %rs143;
	ld.local.u8 	%rs144, [%rd339+19];
	add.s32 	%r5993, %r241, 20;
	xor.b32  	%r5994, %r5993, 7;
	cvt.u64.u32	%rd8999, %r5994;
	add.s64 	%rd9000, %rd89, %rd8999;
	st.local.u8 	[%rd9000], %rs144;
	ld.local.u8 	%rs145, [%rd339+18];
	add.s32 	%r5995, %r241, 21;
	xor.b32  	%r5996, %r5995, 7;
	cvt.u64.u32	%rd9001, %r5996;
	add.s64 	%rd9002, %rd89, %rd9001;
	st.local.u8 	[%rd9002], %rs145;
	ld.local.u8 	%rs146, [%rd339+17];
	add.s32 	%r5997, %r241, 22;
	xor.b32  	%r5998, %r5997, 7;
	cvt.u64.u32	%rd9003, %r5998;
	add.s64 	%rd9004, %rd89, %rd9003;
	st.local.u8 	[%rd9004], %rs146;
	add.s32 	%r5999, %r241, 23;
	xor.b32  	%r6000, %r5999, 7;
	cvt.u64.u32	%rd9005, %r6000;
	add.s64 	%rd9006, %rd89, %rd9005;
	st.local.u8 	[%rd9006], %rs3;
	ld.local.u8 	%rs147, [%rd339+31];
	add.s32 	%r6001, %r241, 24;
	xor.b32  	%r6002, %r6001, 7;
	cvt.u64.u32	%rd9007, %r6002;
	add.s64 	%rd9008, %rd89, %rd9007;
	st.local.u8 	[%rd9008], %rs147;
	ld.local.u8 	%rs148, [%rd339+30];
	add.s32 	%r6003, %r241, 25;
	xor.b32  	%r6004, %r6003, 7;
	cvt.u64.u32	%rd9009, %r6004;
	add.s64 	%rd9010, %rd89, %rd9009;
	st.local.u8 	[%rd9010], %rs148;
	ld.local.u8 	%rs149, [%rd339+29];
	add.s32 	%r6005, %r241, 26;
	xor.b32  	%r6006, %r6005, 7;
	cvt.u64.u32	%rd9011, %r6006;
	add.s64 	%rd9012, %rd89, %rd9011;
	st.local.u8 	[%rd9012], %rs149;
	ld.local.u8 	%rs150, [%rd339+28];
	add.s32 	%r6007, %r241, 27;
	xor.b32  	%r6008, %r6007, 7;
	cvt.u64.u32	%rd9013, %r6008;
	add.s64 	%rd9014, %rd89, %rd9013;
	st.local.u8 	[%rd9014], %rs150;
	ld.local.u8 	%rs151, [%rd339+27];
	add.s32 	%r6009, %r241, 28;
	xor.b32  	%r6010, %r6009, 7;
	cvt.u64.u32	%rd9015, %r6010;
	add.s64 	%rd9016, %rd89, %rd9015;
	st.local.u8 	[%rd9016], %rs151;
	ld.local.u8 	%rs152, [%rd339+26];
	add.s32 	%r6011, %r241, 29;
	xor.b32  	%r6012, %r6011, 7;
	cvt.u64.u32	%rd9017, %r6012;
	add.s64 	%rd9018, %rd89, %rd9017;
	st.local.u8 	[%rd9018], %rs152;
	ld.local.u8 	%rs153, [%rd339+25];
	add.s32 	%r6013, %r241, 30;
	xor.b32  	%r6014, %r6013, 7;
	cvt.u64.u32	%rd9019, %r6014;
	add.s64 	%rd9020, %rd89, %rd9019;
	st.local.u8 	[%rd9020], %rs153;
	add.s32 	%r6015, %r241, 31;
	xor.b32  	%r6016, %r6015, 7;
	cvt.u64.u32	%rd9021, %r6016;
	add.s64 	%rd9022, %rd89, %rd9021;
	st.local.u8 	[%rd9022], %rs4;
	ld.local.u8 	%rs154, [%rd339+39];
	add.s32 	%r6017, %r241, 32;
	xor.b32  	%r6018, %r6017, 7;
	cvt.u64.u32	%rd9023, %r6018;
	add.s64 	%rd9024, %rd89, %rd9023;
	st.local.u8 	[%rd9024], %rs154;
	ld.local.u8 	%rs155, [%rd339+38];
	add.s32 	%r6019, %r241, 33;
	xor.b32  	%r6020, %r6019, 7;
	cvt.u64.u32	%rd9025, %r6020;
	add.s64 	%rd9026, %rd89, %rd9025;
	st.local.u8 	[%rd9026], %rs155;
	ld.local.u8 	%rs156, [%rd339+37];
	add.s32 	%r6021, %r241, 34;
	xor.b32  	%r6022, %r6021, 7;
	cvt.u64.u32	%rd9027, %r6022;
	add.s64 	%rd9028, %rd89, %rd9027;
	st.local.u8 	[%rd9028], %rs156;
	ld.local.u8 	%rs157, [%rd339+36];
	add.s32 	%r6023, %r241, 35;
	xor.b32  	%r6024, %r6023, 7;
	cvt.u64.u32	%rd9029, %r6024;
	add.s64 	%rd9030, %rd89, %rd9029;
	st.local.u8 	[%rd9030], %rs157;
	ld.local.u8 	%rs158, [%rd339+35];
	add.s32 	%r6025, %r241, 36;
	xor.b32  	%r6026, %r6025, 7;
	cvt.u64.u32	%rd9031, %r6026;
	add.s64 	%rd9032, %rd89, %rd9031;
	st.local.u8 	[%rd9032], %rs158;
	ld.local.u8 	%rs159, [%rd339+34];
	add.s32 	%r6027, %r241, 37;
	xor.b32  	%r6028, %r6027, 7;
	cvt.u64.u32	%rd9033, %r6028;
	add.s64 	%rd9034, %rd89, %rd9033;
	st.local.u8 	[%rd9034], %rs159;
	ld.local.u8 	%rs160, [%rd339+33];
	add.s32 	%r6029, %r241, 38;
	xor.b32  	%r6030, %r6029, 7;
	cvt.u64.u32	%rd9035, %r6030;
	add.s64 	%rd9036, %rd89, %rd9035;
	st.local.u8 	[%rd9036], %rs160;
	add.s32 	%r6031, %r241, 39;
	xor.b32  	%r6032, %r6031, 7;
	cvt.u64.u32	%rd9037, %r6032;
	add.s64 	%rd9038, %rd89, %rd9037;
	st.local.u8 	[%rd9038], %rs5;
	ld.local.u8 	%rs161, [%rd339+47];
	add.s32 	%r6033, %r241, 40;
	xor.b32  	%r6034, %r6033, 7;
	cvt.u64.u32	%rd9039, %r6034;
	add.s64 	%rd9040, %rd89, %rd9039;
	st.local.u8 	[%rd9040], %rs161;
	ld.local.u8 	%rs162, [%rd339+46];
	add.s32 	%r6035, %r241, 41;
	xor.b32  	%r6036, %r6035, 7;
	cvt.u64.u32	%rd9041, %r6036;
	add.s64 	%rd9042, %rd89, %rd9041;
	st.local.u8 	[%rd9042], %rs162;
	ld.local.u8 	%rs163, [%rd339+45];
	add.s32 	%r6037, %r241, 42;
	xor.b32  	%r6038, %r6037, 7;
	cvt.u64.u32	%rd9043, %r6038;
	add.s64 	%rd9044, %rd89, %rd9043;
	st.local.u8 	[%rd9044], %rs163;
	ld.local.u8 	%rs164, [%rd339+44];
	add.s32 	%r6039, %r241, 43;
	xor.b32  	%r6040, %r6039, 7;
	cvt.u64.u32	%rd9045, %r6040;
	add.s64 	%rd9046, %rd89, %rd9045;
	st.local.u8 	[%rd9046], %rs164;
	ld.local.u8 	%rs165, [%rd339+43];
	add.s32 	%r6041, %r241, 44;
	xor.b32  	%r6042, %r6041, 7;
	cvt.u64.u32	%rd9047, %r6042;
	add.s64 	%rd9048, %rd89, %rd9047;
	st.local.u8 	[%rd9048], %rs165;
	ld.local.u8 	%rs166, [%rd339+42];
	add.s32 	%r6043, %r241, 45;
	xor.b32  	%r6044, %r6043, 7;
	cvt.u64.u32	%rd9049, %r6044;
	add.s64 	%rd9050, %rd89, %rd9049;
	st.local.u8 	[%rd9050], %rs166;
	ld.local.u8 	%rs167, [%rd339+41];
	add.s32 	%r6045, %r241, 46;
	xor.b32  	%r6046, %r6045, 7;
	cvt.u64.u32	%rd9051, %r6046;
	add.s64 	%rd9052, %rd89, %rd9051;
	st.local.u8 	[%rd9052], %rs167;
	add.s32 	%r6047, %r241, 47;
	xor.b32  	%r6048, %r6047, 7;
	cvt.u64.u32	%rd9053, %r6048;
	add.s64 	%rd9054, %rd89, %rd9053;
	st.local.u8 	[%rd9054], %rs6;
	ld.local.v2.u8 	{%rs168, %rs169}, [%rd576];
	add.s32 	%r6049, %r241, 48;
	xor.b32  	%r6050, %r6049, 7;
	cvt.u64.u32	%rd9055, %r6050;
	add.s64 	%rd9056, %rd89, %rd9055;
	st.local.u8 	[%rd9056], %rs169;
	add.s32 	%r6051, %r241, 49;
	xor.b32  	%r6052, %r6051, 7;
	cvt.u64.u32	%rd9057, %r6052;
	add.s64 	%rd9058, %rd89, %rd9057;
	st.local.u8 	[%rd9058], %rs168;
	ld.local.v2.u8 	{%rs172, %rs173}, [%rd577];
	add.s32 	%r6053, %r241, 50;
	xor.b32  	%r6054, %r6053, 7;
	cvt.u64.u32	%rd9059, %r6054;
	add.s64 	%rd9060, %rd89, %rd9059;
	st.local.u8 	[%rd9060], %rs173;
	add.s32 	%r6055, %r241, 51;
	xor.b32  	%r6056, %r6055, 7;
	cvt.u64.u32	%rd9061, %r6056;
	add.s64 	%rd9062, %rd89, %rd9061;
	st.local.u8 	[%rd9062], %rs172;
	ld.local.u8 	%rs176, [%rd578];
	add.s32 	%r6057, %r241, 52;
	xor.b32  	%r6058, %r6057, 7;
	cvt.u64.u32	%rd9063, %r6058;
	add.s64 	%rd9064, %rd89, %rd9063;
	st.local.u8 	[%rd9064], %rs176;
	ld.local.u8 	%rs177, [%rd579];
	add.s32 	%r6059, %r241, 53;
	xor.b32  	%r6060, %r6059, 7;
	cvt.u64.u32	%rd9065, %r6060;
	add.s64 	%rd9066, %rd89, %rd9065;
	st.local.u8 	[%rd9066], %rs177;
	ld.local.u8 	%rs178, [%rd580];
	add.s32 	%r6061, %r241, 54;
	xor.b32  	%r6062, %r6061, 7;
	cvt.u64.u32	%rd9067, %r6062;
	add.s64 	%rd9068, %rd89, %rd9067;
	st.local.u8 	[%rd9068], %rs178;
	add.s32 	%r6063, %r241, 55;
	xor.b32  	%r6064, %r6063, 7;
	cvt.u64.u32	%rd9069, %r6064;
	add.s64 	%rd9070, %rd89, %rd9069;
	st.local.u8 	[%rd9070], %rs7;
	ld.local.v4.u8 	{%rs179, %rs180, %rs181, %rs182}, [%rd581];
	add.s32 	%r6065, %r241, 56;
	xor.b32  	%r6066, %r6065, 7;
	cvt.u64.u32	%rd9071, %r6066;
	add.s64 	%rd9072, %rd89, %rd9071;
	st.local.u8 	[%rd9072], %rs182;
	add.s32 	%r6067, %r241, 57;
	xor.b32  	%r6068, %r6067, 7;
	cvt.u64.u32	%rd9073, %r6068;
	add.s64 	%rd9074, %rd89, %rd9073;
	st.local.u8 	[%rd9074], %rs181;
	add.s32 	%r6069, %r241, 58;
	xor.b32  	%r6070, %r6069, 7;
	cvt.u64.u32	%rd9075, %r6070;
	add.s64 	%rd9076, %rd89, %rd9075;
	st.local.u8 	[%rd9076], %rs180;
	add.s32 	%r6071, %r241, 59;
	xor.b32  	%r6072, %r6071, 7;
	cvt.u64.u32	%rd9077, %r6072;
	add.s64 	%rd9078, %rd89, %rd9077;
	st.local.u8 	[%rd9078], %rs179;
	ld.local.v2.u8 	{%rs187, %rs188}, [%rd582];
	add.s32 	%r6073, %r241, 60;
	xor.b32  	%r6074, %r6073, 7;
	cvt.u64.u32	%rd9079, %r6074;
	add.s64 	%rd9080, %rd89, %rd9079;
	st.local.u8 	[%rd9080], %rs188;
	add.s32 	%r6075, %r241, 61;
	xor.b32  	%r6076, %r6075, 7;
	cvt.u64.u32	%rd9081, %r6076;
	add.s64 	%rd9082, %rd89, %rd9081;
	st.local.u8 	[%rd9082], %rs187;
	ld.local.v2.u8 	{%rs191, %rs192}, [%rd339+56];
	add.s32 	%r6077, %r241, 62;
	xor.b32  	%r6078, %r6077, 7;
	cvt.u64.u32	%rd9083, %r6078;
	add.s64 	%rd9084, %rd89, %rd9083;
	st.local.u8 	[%rd9084], %rs192;
	add.s32 	%r6079, %r241, 63;
	xor.b32  	%r6080, %r6079, 7;
	cvt.u64.u32	%rd9085, %r6080;
	add.s64 	%rd9086, %rd89, %rd9085;
	st.local.u8 	[%rd9086], %rs8;
	bra.uni 	BB0_210;

BB0_183:
	sub.s32 	%r271, %r2137, %r241;
	mov.u32 	%r6085, 1;
	max.u32 	%r272, %r271, %r6085;
	and.b32  	%r273, %r272, 3;
	setp.eq.s32	%p114, %r273, 0;
	mov.u32 	%r12992, 0;
	mov.u32 	%r12993, %r241;
	@%p114 bra 	BB0_189;

	setp.eq.s32	%p115, %r273, 1;
	mov.u32 	%r12988, 0;
	mov.u32 	%r12989, %r241;
	@%p115 bra 	BB0_188;

	setp.eq.s32	%p116, %r273, 2;
	mov.u32 	%r12986, 0;
	mov.u32 	%r12987, %r241;
	@%p116 bra 	BB0_187;

	ld.local.u8 	%rs194, [%rd573];
	xor.b32  	%r6089, %r241, 7;
	cvt.u64.u32	%rd9087, %r6089;
	add.s64 	%rd9088, %rd89, %rd9087;
	st.local.u8 	[%rd9088], %rs194;
	add.s32 	%r12987, %r241, 1;
	mov.u32 	%r12986, %r6085;

BB0_187:
	xor.b32  	%r6090, %r12986, 7;
	cvt.u64.u32	%rd9089, %r6090;
	add.s64 	%rd9090, %rd1463, %rd9089;
	ld.local.u8 	%rs195, [%rd9090];
	xor.b32  	%r6091, %r12987, 7;
	cvt.s64.s32	%rd9091, %r6091;
	add.s64 	%rd9092, %rd89, %rd9091;
	st.local.u8 	[%rd9092], %rs195;
	add.s32 	%r12989, %r12987, 1;
	add.s32 	%r12988, %r12986, 1;

BB0_188:
	xor.b32  	%r6092, %r12988, 7;
	cvt.s64.s32	%rd9093, %r6092;
	add.s64 	%rd9094, %rd1463, %rd9093;
	ld.local.u8 	%rs196, [%rd9094];
	xor.b32  	%r6093, %r12989, 7;
	cvt.s64.s32	%rd9095, %r6093;
	add.s64 	%rd9096, %rd89, %rd9095;
	st.local.u8 	[%rd9096], %rs196;
	add.s32 	%r12993, %r12989, 1;
	add.s32 	%r12992, %r12988, 1;

BB0_189:
	setp.lt.u32	%p117, %r272, 4;
	@%p117 bra 	BB0_191;

BB0_190:
	xor.b32  	%r6094, %r12992, 7;
	cvt.s64.s32	%rd9097, %r6094;
	add.s64 	%rd9098, %rd1463, %rd9097;
	ld.local.u8 	%rs197, [%rd9098];
	xor.b32  	%r6095, %r12993, 7;
	cvt.s64.s32	%rd9099, %r6095;
	add.s64 	%rd9100, %rd89, %rd9099;
	st.local.u8 	[%rd9100], %rs197;
	add.s32 	%r6096, %r12992, 1;
	xor.b32  	%r6097, %r6096, 7;
	cvt.s64.s32	%rd9101, %r6097;
	add.s64 	%rd9102, %rd1463, %rd9101;
	ld.local.u8 	%rs198, [%rd9102];
	add.s32 	%r6098, %r12993, 1;
	xor.b32  	%r6099, %r6098, 7;
	cvt.s64.s32	%rd9103, %r6099;
	add.s64 	%rd9104, %rd89, %rd9103;
	st.local.u8 	[%rd9104], %rs198;
	add.s32 	%r6100, %r12992, 2;
	xor.b32  	%r6101, %r6100, 7;
	cvt.s64.s32	%rd9105, %r6101;
	add.s64 	%rd9106, %rd1463, %rd9105;
	ld.local.u8 	%rs199, [%rd9106];
	add.s32 	%r6102, %r12993, 2;
	xor.b32  	%r6103, %r6102, 7;
	cvt.s64.s32	%rd9107, %r6103;
	add.s64 	%rd9108, %rd89, %rd9107;
	st.local.u8 	[%rd9108], %rs199;
	add.s32 	%r6104, %r12992, 3;
	xor.b32  	%r6105, %r6104, 7;
	cvt.s64.s32	%rd9109, %r6105;
	add.s64 	%rd9110, %rd1463, %rd9109;
	ld.local.u8 	%rs200, [%rd9110];
	add.s32 	%r6106, %r12993, 3;
	xor.b32  	%r6107, %r6106, 7;
	cvt.s64.s32	%rd9111, %r6107;
	add.s64 	%rd9112, %rd89, %rd9111;
	st.local.u8 	[%rd9112], %rs200;
	add.s32 	%r12993, %r12993, 4;
	add.s32 	%r12992, %r12992, 4;
	setp.lt.s32	%p118, %r12992, %r271;
	@%p118 bra 	BB0_190;

BB0_191:
	ld.local.u64 	%rd665, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6109,%dummy}, %rd665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6110}, %rd665;
	}
	shf.r.wrap.b32 	%r6111, %r6110, %r6109, 14;
	shf.r.wrap.b32 	%r6112, %r6109, %r6110, 14;
	mov.b64 	%rd9113, {%r6112, %r6111};
	shf.r.wrap.b32 	%r6113, %r6110, %r6109, 18;
	shf.r.wrap.b32 	%r6114, %r6109, %r6110, 18;
	mov.b64 	%rd9114, {%r6114, %r6113};
	xor.b64  	%rd9115, %rd9114, %rd9113;
	shf.l.wrap.b32 	%r6115, %r6109, %r6110, 23;
	shf.l.wrap.b32 	%r6116, %r6110, %r6109, 23;
	mov.b64 	%rd9116, {%r6116, %r6115};
	xor.b64  	%rd9117, %rd9115, %rd9116;
	ld.local.u64 	%rd666, [%rd1+48];
	ld.local.u64 	%rd667, [%rd1+40];
	xor.b64  	%rd9118, %rd666, %rd667;
	and.b64  	%rd9119, %rd9118, %rd665;
	xor.b64  	%rd9120, %rd9119, %rd666;
	ld.local.u64 	%rd668, [%rd1+56];
	ld.local.u64 	%rd18746, [%rd1+64];
	add.s64 	%rd9121, %rd668, %rd18746;
	add.s64 	%rd9122, %rd9121, %rd18610;
	add.s64 	%rd9123, %rd9122, %rd9120;
	add.s64 	%rd9124, %rd9123, %rd9117;
	ld.local.u64 	%rd670, [%rd1+24];
	add.s64 	%rd9125, %rd9124, %rd670;
	ld.local.u64 	%rd671, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6117,%dummy}, %rd671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6118}, %rd671;
	}
	shf.r.wrap.b32 	%r6119, %r6118, %r6117, 28;
	shf.r.wrap.b32 	%r6120, %r6117, %r6118, 28;
	mov.b64 	%rd9126, {%r6120, %r6119};
	shf.l.wrap.b32 	%r6121, %r6117, %r6118, 30;
	shf.l.wrap.b32 	%r6122, %r6118, %r6117, 30;
	mov.b64 	%rd9127, {%r6122, %r6121};
	xor.b64  	%rd9128, %rd9127, %rd9126;
	shf.l.wrap.b32 	%r6123, %r6117, %r6118, 25;
	shf.l.wrap.b32 	%r6124, %r6118, %r6117, 25;
	mov.b64 	%rd9129, {%r6124, %r6123};
	xor.b64  	%rd9130, %rd9128, %rd9129;
	ld.local.u64 	%rd672, [%rd1+8];
	and.b64  	%rd9131, %rd672, %rd671;
	xor.b64  	%rd9132, %rd672, %rd671;
	ld.local.u64 	%rd673, [%rd1+16];
	and.b64  	%rd9133, %rd673, %rd9132;
	or.b64  	%rd9134, %rd9133, %rd9131;
	add.s64 	%rd9135, %rd9124, %rd9134;
	add.s64 	%rd9136, %rd9135, %rd9130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6125,%dummy}, %rd9125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6126}, %rd9125;
	}
	shf.r.wrap.b32 	%r6127, %r6126, %r6125, 14;
	shf.r.wrap.b32 	%r6128, %r6125, %r6126, 14;
	mov.b64 	%rd9137, {%r6128, %r6127};
	shf.r.wrap.b32 	%r6129, %r6126, %r6125, 18;
	shf.r.wrap.b32 	%r6130, %r6125, %r6126, 18;
	mov.b64 	%rd9138, {%r6130, %r6129};
	xor.b64  	%rd9139, %rd9138, %rd9137;
	shf.l.wrap.b32 	%r6131, %r6125, %r6126, 23;
	shf.l.wrap.b32 	%r6132, %r6126, %r6125, 23;
	mov.b64 	%rd9140, {%r6132, %r6131};
	xor.b64  	%rd9141, %rd9139, %rd9140;
	xor.b64  	%rd9142, %rd667, %rd665;
	and.b64  	%rd9143, %rd9125, %rd9142;
	xor.b64  	%rd9144, %rd9143, %rd667;
	ld.local.u64 	%rd18747, [%rd1+72];
	add.s64 	%rd9145, %rd666, %rd18747;
	add.s64 	%rd9146, %rd9145, %rd18609;
	add.s64 	%rd9147, %rd9146, %rd9144;
	add.s64 	%rd9148, %rd9147, %rd9141;
	add.s64 	%rd9149, %rd9148, %rd673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6133,%dummy}, %rd9136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6134}, %rd9136;
	}
	shf.r.wrap.b32 	%r6135, %r6134, %r6133, 28;
	shf.r.wrap.b32 	%r6136, %r6133, %r6134, 28;
	mov.b64 	%rd9150, {%r6136, %r6135};
	shf.l.wrap.b32 	%r6137, %r6133, %r6134, 30;
	shf.l.wrap.b32 	%r6138, %r6134, %r6133, 30;
	mov.b64 	%rd9151, {%r6138, %r6137};
	xor.b64  	%rd9152, %rd9151, %rd9150;
	shf.l.wrap.b32 	%r6139, %r6133, %r6134, 25;
	shf.l.wrap.b32 	%r6140, %r6134, %r6133, 25;
	mov.b64 	%rd9153, {%r6140, %r6139};
	xor.b64  	%rd9154, %rd9152, %rd9153;
	and.b64  	%rd9155, %rd9136, %rd671;
	xor.b64  	%rd9156, %rd9136, %rd671;
	and.b64  	%rd9157, %rd9156, %rd672;
	or.b64  	%rd9158, %rd9157, %rd9155;
	add.s64 	%rd9159, %rd9148, %rd9158;
	add.s64 	%rd9160, %rd9159, %rd9154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6141,%dummy}, %rd9149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6142}, %rd9149;
	}
	shf.r.wrap.b32 	%r6143, %r6142, %r6141, 14;
	shf.r.wrap.b32 	%r6144, %r6141, %r6142, 14;
	mov.b64 	%rd9161, {%r6144, %r6143};
	shf.r.wrap.b32 	%r6145, %r6142, %r6141, 18;
	shf.r.wrap.b32 	%r6146, %r6141, %r6142, 18;
	mov.b64 	%rd9162, {%r6146, %r6145};
	xor.b64  	%rd9163, %rd9162, %rd9161;
	shf.l.wrap.b32 	%r6147, %r6141, %r6142, 23;
	shf.l.wrap.b32 	%r6148, %r6142, %r6141, 23;
	mov.b64 	%rd9164, {%r6148, %r6147};
	xor.b64  	%rd9165, %rd9163, %rd9164;
	xor.b64  	%rd9166, %rd9125, %rd665;
	and.b64  	%rd9167, %rd9149, %rd9166;
	xor.b64  	%rd9168, %rd9167, %rd665;
	ld.local.u64 	%rd18748, [%rd1+80];
	add.s64 	%rd9169, %rd667, %rd18748;
	add.s64 	%rd9170, %rd9169, %rd18608;
	add.s64 	%rd9171, %rd9170, %rd9168;
	add.s64 	%rd9172, %rd9171, %rd9165;
	add.s64 	%rd9173, %rd9172, %rd672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6149,%dummy}, %rd9160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6150}, %rd9160;
	}
	shf.r.wrap.b32 	%r6151, %r6150, %r6149, 28;
	shf.r.wrap.b32 	%r6152, %r6149, %r6150, 28;
	mov.b64 	%rd9174, {%r6152, %r6151};
	shf.l.wrap.b32 	%r6153, %r6149, %r6150, 30;
	shf.l.wrap.b32 	%r6154, %r6150, %r6149, 30;
	mov.b64 	%rd9175, {%r6154, %r6153};
	xor.b64  	%rd9176, %rd9175, %rd9174;
	shf.l.wrap.b32 	%r6155, %r6149, %r6150, 25;
	shf.l.wrap.b32 	%r6156, %r6150, %r6149, 25;
	mov.b64 	%rd9177, {%r6156, %r6155};
	xor.b64  	%rd9178, %rd9176, %rd9177;
	and.b64  	%rd9179, %rd9160, %rd9136;
	xor.b64  	%rd9180, %rd9160, %rd9136;
	and.b64  	%rd9181, %rd9180, %rd671;
	or.b64  	%rd9182, %rd9181, %rd9179;
	add.s64 	%rd9183, %rd9172, %rd9182;
	add.s64 	%rd9184, %rd9183, %rd9178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6157,%dummy}, %rd9173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6158}, %rd9173;
	}
	shf.r.wrap.b32 	%r6159, %r6158, %r6157, 14;
	shf.r.wrap.b32 	%r6160, %r6157, %r6158, 14;
	mov.b64 	%rd9185, {%r6160, %r6159};
	shf.r.wrap.b32 	%r6161, %r6158, %r6157, 18;
	shf.r.wrap.b32 	%r6162, %r6157, %r6158, 18;
	mov.b64 	%rd9186, {%r6162, %r6161};
	xor.b64  	%rd9187, %rd9186, %rd9185;
	shf.l.wrap.b32 	%r6163, %r6157, %r6158, 23;
	shf.l.wrap.b32 	%r6164, %r6158, %r6157, 23;
	mov.b64 	%rd9188, {%r6164, %r6163};
	xor.b64  	%rd9189, %rd9187, %rd9188;
	xor.b64  	%rd9190, %rd9149, %rd9125;
	and.b64  	%rd9191, %rd9173, %rd9190;
	xor.b64  	%rd9192, %rd9191, %rd9125;
	ld.local.u64 	%rd18749, [%rd1+88];
	add.s64 	%rd9193, %rd665, %rd18749;
	add.s64 	%rd9194, %rd9193, %rd18607;
	add.s64 	%rd9195, %rd9194, %rd9192;
	add.s64 	%rd9196, %rd9195, %rd9189;
	add.s64 	%rd9197, %rd9196, %rd671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6165,%dummy}, %rd9184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6166}, %rd9184;
	}
	shf.r.wrap.b32 	%r6167, %r6166, %r6165, 28;
	shf.r.wrap.b32 	%r6168, %r6165, %r6166, 28;
	mov.b64 	%rd9198, {%r6168, %r6167};
	shf.l.wrap.b32 	%r6169, %r6165, %r6166, 30;
	shf.l.wrap.b32 	%r6170, %r6166, %r6165, 30;
	mov.b64 	%rd9199, {%r6170, %r6169};
	xor.b64  	%rd9200, %rd9199, %rd9198;
	shf.l.wrap.b32 	%r6171, %r6165, %r6166, 25;
	shf.l.wrap.b32 	%r6172, %r6166, %r6165, 25;
	mov.b64 	%rd9201, {%r6172, %r6171};
	xor.b64  	%rd9202, %rd9200, %rd9201;
	and.b64  	%rd9203, %rd9184, %rd9160;
	xor.b64  	%rd9204, %rd9184, %rd9160;
	and.b64  	%rd9205, %rd9204, %rd9136;
	or.b64  	%rd9206, %rd9205, %rd9203;
	add.s64 	%rd9207, %rd9196, %rd9206;
	add.s64 	%rd9208, %rd9207, %rd9202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6173,%dummy}, %rd9197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6174}, %rd9197;
	}
	shf.r.wrap.b32 	%r6175, %r6174, %r6173, 14;
	shf.r.wrap.b32 	%r6176, %r6173, %r6174, 14;
	mov.b64 	%rd9209, {%r6176, %r6175};
	shf.r.wrap.b32 	%r6177, %r6174, %r6173, 18;
	shf.r.wrap.b32 	%r6178, %r6173, %r6174, 18;
	mov.b64 	%rd9210, {%r6178, %r6177};
	xor.b64  	%rd9211, %rd9210, %rd9209;
	shf.l.wrap.b32 	%r6179, %r6173, %r6174, 23;
	shf.l.wrap.b32 	%r6180, %r6174, %r6173, 23;
	mov.b64 	%rd9212, {%r6180, %r6179};
	xor.b64  	%rd9213, %rd9211, %rd9212;
	xor.b64  	%rd9214, %rd9173, %rd9149;
	and.b64  	%rd9215, %rd9197, %rd9214;
	xor.b64  	%rd9216, %rd9215, %rd9149;
	ld.local.u64 	%rd18750, [%rd1+96];
	add.s64 	%rd9217, %rd9125, %rd18750;
	add.s64 	%rd9218, %rd9217, %rd18606;
	add.s64 	%rd9219, %rd9218, %rd9216;
	add.s64 	%rd9220, %rd9219, %rd9213;
	add.s64 	%rd9221, %rd9220, %rd9136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6181,%dummy}, %rd9208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6182}, %rd9208;
	}
	shf.r.wrap.b32 	%r6183, %r6182, %r6181, 28;
	shf.r.wrap.b32 	%r6184, %r6181, %r6182, 28;
	mov.b64 	%rd9222, {%r6184, %r6183};
	shf.l.wrap.b32 	%r6185, %r6181, %r6182, 30;
	shf.l.wrap.b32 	%r6186, %r6182, %r6181, 30;
	mov.b64 	%rd9223, {%r6186, %r6185};
	xor.b64  	%rd9224, %rd9223, %rd9222;
	shf.l.wrap.b32 	%r6187, %r6181, %r6182, 25;
	shf.l.wrap.b32 	%r6188, %r6182, %r6181, 25;
	mov.b64 	%rd9225, {%r6188, %r6187};
	xor.b64  	%rd9226, %rd9224, %rd9225;
	and.b64  	%rd9227, %rd9208, %rd9184;
	xor.b64  	%rd9228, %rd9208, %rd9184;
	and.b64  	%rd9229, %rd9228, %rd9160;
	or.b64  	%rd9230, %rd9229, %rd9227;
	add.s64 	%rd9231, %rd9220, %rd9230;
	add.s64 	%rd9232, %rd9231, %rd9226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6189,%dummy}, %rd9221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6190}, %rd9221;
	}
	shf.r.wrap.b32 	%r6191, %r6190, %r6189, 14;
	shf.r.wrap.b32 	%r6192, %r6189, %r6190, 14;
	mov.b64 	%rd9233, {%r6192, %r6191};
	shf.r.wrap.b32 	%r6193, %r6190, %r6189, 18;
	shf.r.wrap.b32 	%r6194, %r6189, %r6190, 18;
	mov.b64 	%rd9234, {%r6194, %r6193};
	xor.b64  	%rd9235, %rd9234, %rd9233;
	shf.l.wrap.b32 	%r6195, %r6189, %r6190, 23;
	shf.l.wrap.b32 	%r6196, %r6190, %r6189, 23;
	mov.b64 	%rd9236, {%r6196, %r6195};
	xor.b64  	%rd9237, %rd9235, %rd9236;
	xor.b64  	%rd9238, %rd9197, %rd9173;
	and.b64  	%rd9239, %rd9221, %rd9238;
	xor.b64  	%rd9240, %rd9239, %rd9173;
	ld.local.u64 	%rd18751, [%rd1+104];
	add.s64 	%rd9241, %rd9149, %rd18751;
	add.s64 	%rd9242, %rd9241, %rd18605;
	add.s64 	%rd9243, %rd9242, %rd9240;
	add.s64 	%rd9244, %rd9243, %rd9237;
	add.s64 	%rd9245, %rd9244, %rd9160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6197,%dummy}, %rd9232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6198}, %rd9232;
	}
	shf.r.wrap.b32 	%r6199, %r6198, %r6197, 28;
	shf.r.wrap.b32 	%r6200, %r6197, %r6198, 28;
	mov.b64 	%rd9246, {%r6200, %r6199};
	shf.l.wrap.b32 	%r6201, %r6197, %r6198, 30;
	shf.l.wrap.b32 	%r6202, %r6198, %r6197, 30;
	mov.b64 	%rd9247, {%r6202, %r6201};
	xor.b64  	%rd9248, %rd9247, %rd9246;
	shf.l.wrap.b32 	%r6203, %r6197, %r6198, 25;
	shf.l.wrap.b32 	%r6204, %r6198, %r6197, 25;
	mov.b64 	%rd9249, {%r6204, %r6203};
	xor.b64  	%rd9250, %rd9248, %rd9249;
	and.b64  	%rd9251, %rd9232, %rd9208;
	xor.b64  	%rd9252, %rd9232, %rd9208;
	and.b64  	%rd9253, %rd9252, %rd9184;
	or.b64  	%rd9254, %rd9253, %rd9251;
	add.s64 	%rd9255, %rd9244, %rd9254;
	add.s64 	%rd9256, %rd9255, %rd9250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6205,%dummy}, %rd9245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6206}, %rd9245;
	}
	shf.r.wrap.b32 	%r6207, %r6206, %r6205, 14;
	shf.r.wrap.b32 	%r6208, %r6205, %r6206, 14;
	mov.b64 	%rd9257, {%r6208, %r6207};
	shf.r.wrap.b32 	%r6209, %r6206, %r6205, 18;
	shf.r.wrap.b32 	%r6210, %r6205, %r6206, 18;
	mov.b64 	%rd9258, {%r6210, %r6209};
	xor.b64  	%rd9259, %rd9258, %rd9257;
	shf.l.wrap.b32 	%r6211, %r6205, %r6206, 23;
	shf.l.wrap.b32 	%r6212, %r6206, %r6205, 23;
	mov.b64 	%rd9260, {%r6212, %r6211};
	xor.b64  	%rd9261, %rd9259, %rd9260;
	xor.b64  	%rd9262, %rd9221, %rd9197;
	and.b64  	%rd9263, %rd9245, %rd9262;
	xor.b64  	%rd9264, %rd9263, %rd9197;
	ld.local.u64 	%rd18752, [%rd1+112];
	add.s64 	%rd9265, %rd9173, %rd18752;
	add.s64 	%rd9266, %rd9265, %rd18604;
	add.s64 	%rd9267, %rd9266, %rd9264;
	add.s64 	%rd9268, %rd9267, %rd9261;
	add.s64 	%rd9269, %rd9268, %rd9184;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6213,%dummy}, %rd9256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6214}, %rd9256;
	}
	shf.r.wrap.b32 	%r6215, %r6214, %r6213, 28;
	shf.r.wrap.b32 	%r6216, %r6213, %r6214, 28;
	mov.b64 	%rd9270, {%r6216, %r6215};
	shf.l.wrap.b32 	%r6217, %r6213, %r6214, 30;
	shf.l.wrap.b32 	%r6218, %r6214, %r6213, 30;
	mov.b64 	%rd9271, {%r6218, %r6217};
	xor.b64  	%rd9272, %rd9271, %rd9270;
	shf.l.wrap.b32 	%r6219, %r6213, %r6214, 25;
	shf.l.wrap.b32 	%r6220, %r6214, %r6213, 25;
	mov.b64 	%rd9273, {%r6220, %r6219};
	xor.b64  	%rd9274, %rd9272, %rd9273;
	and.b64  	%rd9275, %rd9256, %rd9232;
	xor.b64  	%rd9276, %rd9256, %rd9232;
	and.b64  	%rd9277, %rd9276, %rd9208;
	or.b64  	%rd9278, %rd9277, %rd9275;
	add.s64 	%rd9279, %rd9268, %rd9278;
	add.s64 	%rd9280, %rd9279, %rd9274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6221,%dummy}, %rd9269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6222}, %rd9269;
	}
	shf.r.wrap.b32 	%r6223, %r6222, %r6221, 14;
	shf.r.wrap.b32 	%r6224, %r6221, %r6222, 14;
	mov.b64 	%rd9281, {%r6224, %r6223};
	shf.r.wrap.b32 	%r6225, %r6222, %r6221, 18;
	shf.r.wrap.b32 	%r6226, %r6221, %r6222, 18;
	mov.b64 	%rd9282, {%r6226, %r6225};
	xor.b64  	%rd9283, %rd9282, %rd9281;
	shf.l.wrap.b32 	%r6227, %r6221, %r6222, 23;
	shf.l.wrap.b32 	%r6228, %r6222, %r6221, 23;
	mov.b64 	%rd9284, {%r6228, %r6227};
	xor.b64  	%rd9285, %rd9283, %rd9284;
	xor.b64  	%rd9286, %rd9245, %rd9221;
	and.b64  	%rd9287, %rd9269, %rd9286;
	xor.b64  	%rd9288, %rd9287, %rd9221;
	ld.local.u64 	%rd18753, [%rd1+120];
	add.s64 	%rd9289, %rd9197, %rd18753;
	add.s64 	%rd9290, %rd9289, %rd18603;
	add.s64 	%rd9291, %rd9290, %rd9288;
	add.s64 	%rd9292, %rd9291, %rd9285;
	add.s64 	%rd9293, %rd9292, %rd9208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6229,%dummy}, %rd9280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6230}, %rd9280;
	}
	shf.r.wrap.b32 	%r6231, %r6230, %r6229, 28;
	shf.r.wrap.b32 	%r6232, %r6229, %r6230, 28;
	mov.b64 	%rd9294, {%r6232, %r6231};
	shf.l.wrap.b32 	%r6233, %r6229, %r6230, 30;
	shf.l.wrap.b32 	%r6234, %r6230, %r6229, 30;
	mov.b64 	%rd9295, {%r6234, %r6233};
	xor.b64  	%rd9296, %rd9295, %rd9294;
	shf.l.wrap.b32 	%r6235, %r6229, %r6230, 25;
	shf.l.wrap.b32 	%r6236, %r6230, %r6229, 25;
	mov.b64 	%rd9297, {%r6236, %r6235};
	xor.b64  	%rd9298, %rd9296, %rd9297;
	and.b64  	%rd9299, %rd9280, %rd9256;
	xor.b64  	%rd9300, %rd9280, %rd9256;
	and.b64  	%rd9301, %rd9300, %rd9232;
	or.b64  	%rd9302, %rd9301, %rd9299;
	add.s64 	%rd9303, %rd9292, %rd9302;
	add.s64 	%rd9304, %rd9303, %rd9298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6237,%dummy}, %rd9293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6238}, %rd9293;
	}
	shf.r.wrap.b32 	%r6239, %r6238, %r6237, 14;
	shf.r.wrap.b32 	%r6240, %r6237, %r6238, 14;
	mov.b64 	%rd9305, {%r6240, %r6239};
	shf.r.wrap.b32 	%r6241, %r6238, %r6237, 18;
	shf.r.wrap.b32 	%r6242, %r6237, %r6238, 18;
	mov.b64 	%rd9306, {%r6242, %r6241};
	xor.b64  	%rd9307, %rd9306, %rd9305;
	shf.l.wrap.b32 	%r6243, %r6237, %r6238, 23;
	shf.l.wrap.b32 	%r6244, %r6238, %r6237, 23;
	mov.b64 	%rd9308, {%r6244, %r6243};
	xor.b64  	%rd9309, %rd9307, %rd9308;
	xor.b64  	%rd9310, %rd9269, %rd9245;
	and.b64  	%rd9311, %rd9293, %rd9310;
	xor.b64  	%rd9312, %rd9311, %rd9245;
	ld.local.u64 	%rd18737, [%rd1+128];
	add.s64 	%rd9313, %rd9221, %rd18737;
	add.s64 	%rd9314, %rd9313, %rd18602;
	add.s64 	%rd9315, %rd9314, %rd9312;
	add.s64 	%rd9316, %rd9315, %rd9309;
	add.s64 	%rd9317, %rd9316, %rd9232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6245,%dummy}, %rd9304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6246}, %rd9304;
	}
	shf.r.wrap.b32 	%r6247, %r6246, %r6245, 28;
	shf.r.wrap.b32 	%r6248, %r6245, %r6246, 28;
	mov.b64 	%rd9318, {%r6248, %r6247};
	shf.l.wrap.b32 	%r6249, %r6245, %r6246, 30;
	shf.l.wrap.b32 	%r6250, %r6246, %r6245, 30;
	mov.b64 	%rd9319, {%r6250, %r6249};
	xor.b64  	%rd9320, %rd9319, %rd9318;
	shf.l.wrap.b32 	%r6251, %r6245, %r6246, 25;
	shf.l.wrap.b32 	%r6252, %r6246, %r6245, 25;
	mov.b64 	%rd9321, {%r6252, %r6251};
	xor.b64  	%rd9322, %rd9320, %rd9321;
	and.b64  	%rd9323, %rd9304, %rd9280;
	xor.b64  	%rd9324, %rd9304, %rd9280;
	and.b64  	%rd9325, %rd9324, %rd9256;
	or.b64  	%rd9326, %rd9325, %rd9323;
	add.s64 	%rd9327, %rd9316, %rd9326;
	add.s64 	%rd9328, %rd9327, %rd9322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6253,%dummy}, %rd9317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6254}, %rd9317;
	}
	shf.r.wrap.b32 	%r6255, %r6254, %r6253, 14;
	shf.r.wrap.b32 	%r6256, %r6253, %r6254, 14;
	mov.b64 	%rd9329, {%r6256, %r6255};
	shf.r.wrap.b32 	%r6257, %r6254, %r6253, 18;
	shf.r.wrap.b32 	%r6258, %r6253, %r6254, 18;
	mov.b64 	%rd9330, {%r6258, %r6257};
	xor.b64  	%rd9331, %rd9330, %rd9329;
	shf.l.wrap.b32 	%r6259, %r6253, %r6254, 23;
	shf.l.wrap.b32 	%r6260, %r6254, %r6253, 23;
	mov.b64 	%rd9332, {%r6260, %r6259};
	xor.b64  	%rd9333, %rd9331, %rd9332;
	xor.b64  	%rd9334, %rd9293, %rd9269;
	and.b64  	%rd9335, %rd9317, %rd9334;
	xor.b64  	%rd9336, %rd9335, %rd9269;
	ld.local.u64 	%rd18736, [%rd1+136];
	add.s64 	%rd9337, %rd9245, %rd18736;
	add.s64 	%rd9338, %rd9337, %rd18601;
	add.s64 	%rd9339, %rd9338, %rd9336;
	add.s64 	%rd9340, %rd9339, %rd9333;
	add.s64 	%rd9341, %rd9340, %rd9256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6261,%dummy}, %rd9328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6262}, %rd9328;
	}
	shf.r.wrap.b32 	%r6263, %r6262, %r6261, 28;
	shf.r.wrap.b32 	%r6264, %r6261, %r6262, 28;
	mov.b64 	%rd9342, {%r6264, %r6263};
	shf.l.wrap.b32 	%r6265, %r6261, %r6262, 30;
	shf.l.wrap.b32 	%r6266, %r6262, %r6261, 30;
	mov.b64 	%rd9343, {%r6266, %r6265};
	xor.b64  	%rd9344, %rd9343, %rd9342;
	shf.l.wrap.b32 	%r6267, %r6261, %r6262, 25;
	shf.l.wrap.b32 	%r6268, %r6262, %r6261, 25;
	mov.b64 	%rd9345, {%r6268, %r6267};
	xor.b64  	%rd9346, %rd9344, %rd9345;
	and.b64  	%rd9347, %rd9328, %rd9304;
	xor.b64  	%rd9348, %rd9328, %rd9304;
	and.b64  	%rd9349, %rd9348, %rd9280;
	or.b64  	%rd9350, %rd9349, %rd9347;
	add.s64 	%rd9351, %rd9340, %rd9350;
	add.s64 	%rd9352, %rd9351, %rd9346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6269,%dummy}, %rd9341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6270}, %rd9341;
	}
	shf.r.wrap.b32 	%r6271, %r6270, %r6269, 14;
	shf.r.wrap.b32 	%r6272, %r6269, %r6270, 14;
	mov.b64 	%rd9353, {%r6272, %r6271};
	shf.r.wrap.b32 	%r6273, %r6270, %r6269, 18;
	shf.r.wrap.b32 	%r6274, %r6269, %r6270, 18;
	mov.b64 	%rd9354, {%r6274, %r6273};
	xor.b64  	%rd9355, %rd9354, %rd9353;
	shf.l.wrap.b32 	%r6275, %r6269, %r6270, 23;
	shf.l.wrap.b32 	%r6276, %r6270, %r6269, 23;
	mov.b64 	%rd9356, {%r6276, %r6275};
	xor.b64  	%rd9357, %rd9355, %rd9356;
	xor.b64  	%rd9358, %rd9317, %rd9293;
	and.b64  	%rd9359, %rd9341, %rd9358;
	xor.b64  	%rd9360, %rd9359, %rd9293;
	ld.local.u64 	%rd18735, [%rd1+144];
	add.s64 	%rd9361, %rd9269, %rd18735;
	add.s64 	%rd9362, %rd9361, %rd18600;
	add.s64 	%rd9363, %rd9362, %rd9360;
	add.s64 	%rd9364, %rd9363, %rd9357;
	add.s64 	%rd9365, %rd9364, %rd9280;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6277,%dummy}, %rd9352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6278}, %rd9352;
	}
	shf.r.wrap.b32 	%r6279, %r6278, %r6277, 28;
	shf.r.wrap.b32 	%r6280, %r6277, %r6278, 28;
	mov.b64 	%rd9366, {%r6280, %r6279};
	shf.l.wrap.b32 	%r6281, %r6277, %r6278, 30;
	shf.l.wrap.b32 	%r6282, %r6278, %r6277, 30;
	mov.b64 	%rd9367, {%r6282, %r6281};
	xor.b64  	%rd9368, %rd9367, %rd9366;
	shf.l.wrap.b32 	%r6283, %r6277, %r6278, 25;
	shf.l.wrap.b32 	%r6284, %r6278, %r6277, 25;
	mov.b64 	%rd9369, {%r6284, %r6283};
	xor.b64  	%rd9370, %rd9368, %rd9369;
	and.b64  	%rd9371, %rd9352, %rd9328;
	xor.b64  	%rd9372, %rd9352, %rd9328;
	and.b64  	%rd9373, %rd9372, %rd9304;
	or.b64  	%rd9374, %rd9373, %rd9371;
	add.s64 	%rd9375, %rd9364, %rd9374;
	add.s64 	%rd9376, %rd9375, %rd9370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6285,%dummy}, %rd9365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6286}, %rd9365;
	}
	shf.r.wrap.b32 	%r6287, %r6286, %r6285, 14;
	shf.r.wrap.b32 	%r6288, %r6285, %r6286, 14;
	mov.b64 	%rd9377, {%r6288, %r6287};
	shf.r.wrap.b32 	%r6289, %r6286, %r6285, 18;
	shf.r.wrap.b32 	%r6290, %r6285, %r6286, 18;
	mov.b64 	%rd9378, {%r6290, %r6289};
	xor.b64  	%rd9379, %rd9378, %rd9377;
	shf.l.wrap.b32 	%r6291, %r6285, %r6286, 23;
	shf.l.wrap.b32 	%r6292, %r6286, %r6285, 23;
	mov.b64 	%rd9380, {%r6292, %r6291};
	xor.b64  	%rd9381, %rd9379, %rd9380;
	xor.b64  	%rd9382, %rd9341, %rd9317;
	and.b64  	%rd9383, %rd9365, %rd9382;
	xor.b64  	%rd9384, %rd9383, %rd9317;
	ld.local.u64 	%rd18734, [%rd1+152];
	add.s64 	%rd9385, %rd9293, %rd18734;
	add.s64 	%rd9386, %rd9385, %rd18599;
	add.s64 	%rd9387, %rd9386, %rd9384;
	add.s64 	%rd9388, %rd9387, %rd9381;
	add.s64 	%rd9389, %rd9388, %rd9304;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6293,%dummy}, %rd9376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6294}, %rd9376;
	}
	shf.r.wrap.b32 	%r6295, %r6294, %r6293, 28;
	shf.r.wrap.b32 	%r6296, %r6293, %r6294, 28;
	mov.b64 	%rd9390, {%r6296, %r6295};
	shf.l.wrap.b32 	%r6297, %r6293, %r6294, 30;
	shf.l.wrap.b32 	%r6298, %r6294, %r6293, 30;
	mov.b64 	%rd9391, {%r6298, %r6297};
	xor.b64  	%rd9392, %rd9391, %rd9390;
	shf.l.wrap.b32 	%r6299, %r6293, %r6294, 25;
	shf.l.wrap.b32 	%r6300, %r6294, %r6293, 25;
	mov.b64 	%rd9393, {%r6300, %r6299};
	xor.b64  	%rd9394, %rd9392, %rd9393;
	and.b64  	%rd9395, %rd9376, %rd9352;
	xor.b64  	%rd9396, %rd9376, %rd9352;
	and.b64  	%rd9397, %rd9396, %rd9328;
	or.b64  	%rd9398, %rd9397, %rd9395;
	add.s64 	%rd9399, %rd9388, %rd9398;
	add.s64 	%rd9400, %rd9399, %rd9394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6301,%dummy}, %rd9389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6302}, %rd9389;
	}
	shf.r.wrap.b32 	%r6303, %r6302, %r6301, 14;
	shf.r.wrap.b32 	%r6304, %r6301, %r6302, 14;
	mov.b64 	%rd9401, {%r6304, %r6303};
	shf.r.wrap.b32 	%r6305, %r6302, %r6301, 18;
	shf.r.wrap.b32 	%r6306, %r6301, %r6302, 18;
	mov.b64 	%rd9402, {%r6306, %r6305};
	xor.b64  	%rd9403, %rd9402, %rd9401;
	shf.l.wrap.b32 	%r6307, %r6301, %r6302, 23;
	shf.l.wrap.b32 	%r6308, %r6302, %r6301, 23;
	mov.b64 	%rd9404, {%r6308, %r6307};
	xor.b64  	%rd9405, %rd9403, %rd9404;
	xor.b64  	%rd9406, %rd9365, %rd9341;
	and.b64  	%rd9407, %rd9389, %rd9406;
	xor.b64  	%rd9408, %rd9407, %rd9341;
	ld.local.u64 	%rd18733, [%rd1+160];
	add.s64 	%rd9409, %rd9317, %rd18733;
	add.s64 	%rd9410, %rd9409, %rd18598;
	add.s64 	%rd9411, %rd9410, %rd9408;
	add.s64 	%rd9412, %rd9411, %rd9405;
	add.s64 	%rd18745, %rd9412, %rd9328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6309,%dummy}, %rd9400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6310}, %rd9400;
	}
	shf.r.wrap.b32 	%r6311, %r6310, %r6309, 28;
	shf.r.wrap.b32 	%r6312, %r6309, %r6310, 28;
	mov.b64 	%rd9413, {%r6312, %r6311};
	shf.l.wrap.b32 	%r6313, %r6309, %r6310, 30;
	shf.l.wrap.b32 	%r6314, %r6310, %r6309, 30;
	mov.b64 	%rd9414, {%r6314, %r6313};
	xor.b64  	%rd9415, %rd9414, %rd9413;
	shf.l.wrap.b32 	%r6315, %r6309, %r6310, 25;
	shf.l.wrap.b32 	%r6316, %r6310, %r6309, 25;
	mov.b64 	%rd9416, {%r6316, %r6315};
	xor.b64  	%rd9417, %rd9415, %rd9416;
	and.b64  	%rd9418, %rd9400, %rd9376;
	xor.b64  	%rd9419, %rd9400, %rd9376;
	and.b64  	%rd9420, %rd9419, %rd9352;
	or.b64  	%rd9421, %rd9420, %rd9418;
	add.s64 	%rd9422, %rd9412, %rd9421;
	add.s64 	%rd18741, %rd9422, %rd9417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6317,%dummy}, %rd18745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6318}, %rd18745;
	}
	shf.r.wrap.b32 	%r6319, %r6318, %r6317, 14;
	shf.r.wrap.b32 	%r6320, %r6317, %r6318, 14;
	mov.b64 	%rd9423, {%r6320, %r6319};
	shf.r.wrap.b32 	%r6321, %r6318, %r6317, 18;
	shf.r.wrap.b32 	%r6322, %r6317, %r6318, 18;
	mov.b64 	%rd9424, {%r6322, %r6321};
	xor.b64  	%rd9425, %rd9424, %rd9423;
	shf.l.wrap.b32 	%r6323, %r6317, %r6318, 23;
	shf.l.wrap.b32 	%r6324, %r6318, %r6317, 23;
	mov.b64 	%rd9426, {%r6324, %r6323};
	xor.b64  	%rd9427, %rd9425, %rd9426;
	xor.b64  	%rd9428, %rd9389, %rd9365;
	and.b64  	%rd9429, %rd18745, %rd9428;
	xor.b64  	%rd9430, %rd9429, %rd9365;
	ld.local.u64 	%rd18732, [%rd1+168];
	add.s64 	%rd9431, %rd9341, %rd18732;
	add.s64 	%rd9432, %rd9431, %rd18597;
	add.s64 	%rd9433, %rd9432, %rd9430;
	add.s64 	%rd9434, %rd9433, %rd9427;
	add.s64 	%rd18744, %rd9434, %rd9352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6325,%dummy}, %rd18741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6326}, %rd18741;
	}
	shf.r.wrap.b32 	%r6327, %r6326, %r6325, 28;
	shf.r.wrap.b32 	%r6328, %r6325, %r6326, 28;
	mov.b64 	%rd9435, {%r6328, %r6327};
	shf.l.wrap.b32 	%r6329, %r6325, %r6326, 30;
	shf.l.wrap.b32 	%r6330, %r6326, %r6325, 30;
	mov.b64 	%rd9436, {%r6330, %r6329};
	xor.b64  	%rd9437, %rd9436, %rd9435;
	shf.l.wrap.b32 	%r6331, %r6325, %r6326, 25;
	shf.l.wrap.b32 	%r6332, %r6326, %r6325, 25;
	mov.b64 	%rd9438, {%r6332, %r6331};
	xor.b64  	%rd9439, %rd9437, %rd9438;
	and.b64  	%rd9440, %rd18741, %rd9400;
	xor.b64  	%rd9441, %rd18741, %rd9400;
	and.b64  	%rd9442, %rd9441, %rd9376;
	or.b64  	%rd9443, %rd9442, %rd9440;
	add.s64 	%rd9444, %rd9434, %rd9443;
	add.s64 	%rd18740, %rd9444, %rd9439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6333,%dummy}, %rd18744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6334}, %rd18744;
	}
	shf.r.wrap.b32 	%r6335, %r6334, %r6333, 14;
	shf.r.wrap.b32 	%r6336, %r6333, %r6334, 14;
	mov.b64 	%rd9445, {%r6336, %r6335};
	shf.r.wrap.b32 	%r6337, %r6334, %r6333, 18;
	shf.r.wrap.b32 	%r6338, %r6333, %r6334, 18;
	mov.b64 	%rd9446, {%r6338, %r6337};
	xor.b64  	%rd9447, %rd9446, %rd9445;
	shf.l.wrap.b32 	%r6339, %r6333, %r6334, 23;
	shf.l.wrap.b32 	%r6340, %r6334, %r6333, 23;
	mov.b64 	%rd9448, {%r6340, %r6339};
	xor.b64  	%rd9449, %rd9447, %rd9448;
	xor.b64  	%rd9450, %rd18745, %rd9389;
	and.b64  	%rd9451, %rd18744, %rd9450;
	xor.b64  	%rd9452, %rd9451, %rd9389;
	ld.local.u64 	%rd18731, [%rd1+176];
	add.s64 	%rd9453, %rd9365, %rd18731;
	add.s64 	%rd9454, %rd9453, %rd18596;
	add.s64 	%rd9455, %rd9454, %rd9452;
	add.s64 	%rd9456, %rd9455, %rd9449;
	add.s64 	%rd18743, %rd9456, %rd9376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6341,%dummy}, %rd18740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6342}, %rd18740;
	}
	shf.r.wrap.b32 	%r6343, %r6342, %r6341, 28;
	shf.r.wrap.b32 	%r6344, %r6341, %r6342, 28;
	mov.b64 	%rd9457, {%r6344, %r6343};
	shf.l.wrap.b32 	%r6345, %r6341, %r6342, 30;
	shf.l.wrap.b32 	%r6346, %r6342, %r6341, 30;
	mov.b64 	%rd9458, {%r6346, %r6345};
	xor.b64  	%rd9459, %rd9458, %rd9457;
	shf.l.wrap.b32 	%r6347, %r6341, %r6342, 25;
	shf.l.wrap.b32 	%r6348, %r6342, %r6341, 25;
	mov.b64 	%rd9460, {%r6348, %r6347};
	xor.b64  	%rd9461, %rd9459, %rd9460;
	and.b64  	%rd9462, %rd18740, %rd18741;
	xor.b64  	%rd9463, %rd18740, %rd18741;
	and.b64  	%rd9464, %rd9463, %rd9400;
	or.b64  	%rd9465, %rd9464, %rd9462;
	add.s64 	%rd9466, %rd9456, %rd9465;
	add.s64 	%rd18739, %rd9466, %rd9461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6349,%dummy}, %rd18743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6350}, %rd18743;
	}
	shf.r.wrap.b32 	%r6351, %r6350, %r6349, 14;
	shf.r.wrap.b32 	%r6352, %r6349, %r6350, 14;
	mov.b64 	%rd9467, {%r6352, %r6351};
	shf.r.wrap.b32 	%r6353, %r6350, %r6349, 18;
	shf.r.wrap.b32 	%r6354, %r6349, %r6350, 18;
	mov.b64 	%rd9468, {%r6354, %r6353};
	xor.b64  	%rd9469, %rd9468, %rd9467;
	shf.l.wrap.b32 	%r6355, %r6349, %r6350, 23;
	shf.l.wrap.b32 	%r6356, %r6350, %r6349, 23;
	mov.b64 	%rd9470, {%r6356, %r6355};
	xor.b64  	%rd9471, %rd9469, %rd9470;
	xor.b64  	%rd9472, %rd18744, %rd18745;
	and.b64  	%rd9473, %rd18743, %rd9472;
	xor.b64  	%rd9474, %rd9473, %rd18745;
	ld.local.u64 	%rd18730, [%rd1+184];
	add.s64 	%rd9475, %rd9389, %rd18730;
	add.s64 	%rd9476, %rd9475, %rd18595;
	add.s64 	%rd9477, %rd9476, %rd9474;
	add.s64 	%rd9478, %rd9477, %rd9471;
	add.s64 	%rd18742, %rd9478, %rd9400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6357,%dummy}, %rd18739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6358}, %rd18739;
	}
	shf.r.wrap.b32 	%r6359, %r6358, %r6357, 28;
	shf.r.wrap.b32 	%r6360, %r6357, %r6358, 28;
	mov.b64 	%rd9479, {%r6360, %r6359};
	shf.l.wrap.b32 	%r6361, %r6357, %r6358, 30;
	shf.l.wrap.b32 	%r6362, %r6358, %r6357, 30;
	mov.b64 	%rd9480, {%r6362, %r6361};
	xor.b64  	%rd9481, %rd9480, %rd9479;
	shf.l.wrap.b32 	%r6363, %r6357, %r6358, 25;
	shf.l.wrap.b32 	%r6364, %r6358, %r6357, 25;
	mov.b64 	%rd9482, {%r6364, %r6363};
	xor.b64  	%rd9483, %rd9481, %rd9482;
	and.b64  	%rd9484, %rd18739, %rd18740;
	xor.b64  	%rd9485, %rd18739, %rd18740;
	and.b64  	%rd9486, %rd9485, %rd18741;
	or.b64  	%rd9487, %rd9486, %rd9484;
	add.s64 	%rd9488, %rd9478, %rd9487;
	add.s64 	%rd18738, %rd9488, %rd9483;
	mov.u32 	%r12994, 16;

BB0_192:
	mov.u64 	%rd18519, k_sha512;
	shr.u64 	%rd9489, %rd18731, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6365,%dummy}, %rd18731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6366}, %rd18731;
	}
	shf.r.wrap.b32 	%r6367, %r6366, %r6365, 19;
	shf.r.wrap.b32 	%r6368, %r6365, %r6366, 19;
	mov.b64 	%rd9490, {%r6368, %r6367};
	xor.b64  	%rd9491, %rd9490, %rd9489;
	shf.l.wrap.b32 	%r6369, %r6365, %r6366, 3;
	shf.l.wrap.b32 	%r6370, %r6366, %r6365, 3;
	mov.b64 	%rd9492, {%r6370, %r6369};
	xor.b64  	%rd9493, %rd9491, %rd9492;
	shr.u64 	%rd9494, %rd18747, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6371,%dummy}, %rd18747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6372}, %rd18747;
	}
	shf.r.wrap.b32 	%r6373, %r6372, %r6371, 1;
	shf.r.wrap.b32 	%r6374, %r6371, %r6372, 1;
	mov.b64 	%rd9495, {%r6374, %r6373};
	xor.b64  	%rd9496, %rd9495, %rd9494;
	shf.r.wrap.b32 	%r6375, %r6372, %r6371, 8;
	shf.r.wrap.b32 	%r6376, %r6371, %r6372, 8;
	mov.b64 	%rd9497, {%r6376, %r6375};
	xor.b64  	%rd9498, %rd9496, %rd9497;
	add.s64 	%rd9499, %rd18736, %rd18746;
	add.s64 	%rd9500, %rd9499, %rd9493;
	add.s64 	%rd18746, %rd9500, %rd9498;
	shr.u64 	%rd9501, %rd18730, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6377,%dummy}, %rd18730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6378}, %rd18730;
	}
	shf.r.wrap.b32 	%r6379, %r6378, %r6377, 19;
	shf.r.wrap.b32 	%r6380, %r6377, %r6378, 19;
	mov.b64 	%rd9502, {%r6380, %r6379};
	xor.b64  	%rd9503, %rd9502, %rd9501;
	shf.l.wrap.b32 	%r6381, %r6377, %r6378, 3;
	shf.l.wrap.b32 	%r6382, %r6378, %r6377, 3;
	mov.b64 	%rd9504, {%r6382, %r6381};
	xor.b64  	%rd9505, %rd9503, %rd9504;
	shr.u64 	%rd9506, %rd18748, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6383,%dummy}, %rd18748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6384}, %rd18748;
	}
	shf.r.wrap.b32 	%r6385, %r6384, %r6383, 1;
	shf.r.wrap.b32 	%r6386, %r6383, %r6384, 1;
	mov.b64 	%rd9507, {%r6386, %r6385};
	xor.b64  	%rd9508, %rd9507, %rd9506;
	shf.r.wrap.b32 	%r6387, %r6384, %r6383, 8;
	shf.r.wrap.b32 	%r6388, %r6383, %r6384, 8;
	mov.b64 	%rd9509, {%r6388, %r6387};
	xor.b64  	%rd9510, %rd9508, %rd9509;
	add.s64 	%rd9511, %rd18735, %rd18747;
	add.s64 	%rd9512, %rd9511, %rd9505;
	add.s64 	%rd18747, %rd9512, %rd9510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6389,%dummy}, %rd18746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6390}, %rd18746;
	}
	shf.r.wrap.b32 	%r6391, %r6390, %r6389, 19;
	shf.r.wrap.b32 	%r6392, %r6389, %r6390, 19;
	mov.b64 	%rd9513, {%r6392, %r6391};
	shf.l.wrap.b32 	%r6393, %r6389, %r6390, 3;
	shf.l.wrap.b32 	%r6394, %r6390, %r6389, 3;
	mov.b64 	%rd9514, {%r6394, %r6393};
	shr.u64 	%rd9515, %rd18746, 6;
	xor.b64  	%rd9516, %rd9513, %rd9515;
	xor.b64  	%rd9517, %rd9516, %rd9514;
	shr.u64 	%rd9518, %rd18749, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6395,%dummy}, %rd18749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6396}, %rd18749;
	}
	shf.r.wrap.b32 	%r6397, %r6396, %r6395, 1;
	shf.r.wrap.b32 	%r6398, %r6395, %r6396, 1;
	mov.b64 	%rd9519, {%r6398, %r6397};
	xor.b64  	%rd9520, %rd9519, %rd9518;
	shf.r.wrap.b32 	%r6399, %r6396, %r6395, 8;
	shf.r.wrap.b32 	%r6400, %r6395, %r6396, 8;
	mov.b64 	%rd9521, {%r6400, %r6399};
	xor.b64  	%rd9522, %rd9520, %rd9521;
	add.s64 	%rd9523, %rd18734, %rd18748;
	add.s64 	%rd9524, %rd9523, %rd9517;
	add.s64 	%rd18748, %rd9524, %rd9522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6401,%dummy}, %rd18747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6402}, %rd18747;
	}
	shf.r.wrap.b32 	%r6403, %r6402, %r6401, 19;
	shf.r.wrap.b32 	%r6404, %r6401, %r6402, 19;
	mov.b64 	%rd9525, {%r6404, %r6403};
	shf.l.wrap.b32 	%r6405, %r6401, %r6402, 3;
	shf.l.wrap.b32 	%r6406, %r6402, %r6401, 3;
	mov.b64 	%rd9526, {%r6406, %r6405};
	shr.u64 	%rd9527, %rd18747, 6;
	xor.b64  	%rd9528, %rd9525, %rd9527;
	xor.b64  	%rd9529, %rd9528, %rd9526;
	shr.u64 	%rd9530, %rd18750, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6407,%dummy}, %rd18750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6408}, %rd18750;
	}
	shf.r.wrap.b32 	%r6409, %r6408, %r6407, 1;
	shf.r.wrap.b32 	%r6410, %r6407, %r6408, 1;
	mov.b64 	%rd9531, {%r6410, %r6409};
	xor.b64  	%rd9532, %rd9531, %rd9530;
	shf.r.wrap.b32 	%r6411, %r6408, %r6407, 8;
	shf.r.wrap.b32 	%r6412, %r6407, %r6408, 8;
	mov.b64 	%rd9533, {%r6412, %r6411};
	xor.b64  	%rd9534, %rd9532, %rd9533;
	add.s64 	%rd9535, %rd18733, %rd18749;
	add.s64 	%rd9536, %rd9535, %rd9529;
	add.s64 	%rd18749, %rd9536, %rd9534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6413,%dummy}, %rd18748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6414}, %rd18748;
	}
	shf.r.wrap.b32 	%r6415, %r6414, %r6413, 19;
	shf.r.wrap.b32 	%r6416, %r6413, %r6414, 19;
	mov.b64 	%rd9537, {%r6416, %r6415};
	shf.l.wrap.b32 	%r6417, %r6413, %r6414, 3;
	shf.l.wrap.b32 	%r6418, %r6414, %r6413, 3;
	mov.b64 	%rd9538, {%r6418, %r6417};
	shr.u64 	%rd9539, %rd18748, 6;
	xor.b64  	%rd9540, %rd9537, %rd9539;
	xor.b64  	%rd9541, %rd9540, %rd9538;
	shr.u64 	%rd9542, %rd18751, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6419,%dummy}, %rd18751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6420}, %rd18751;
	}
	shf.r.wrap.b32 	%r6421, %r6420, %r6419, 1;
	shf.r.wrap.b32 	%r6422, %r6419, %r6420, 1;
	mov.b64 	%rd9543, {%r6422, %r6421};
	xor.b64  	%rd9544, %rd9543, %rd9542;
	shf.r.wrap.b32 	%r6423, %r6420, %r6419, 8;
	shf.r.wrap.b32 	%r6424, %r6419, %r6420, 8;
	mov.b64 	%rd9545, {%r6424, %r6423};
	xor.b64  	%rd9546, %rd9544, %rd9545;
	add.s64 	%rd9547, %rd18732, %rd18750;
	add.s64 	%rd9548, %rd9547, %rd9541;
	add.s64 	%rd18750, %rd9548, %rd9546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6425,%dummy}, %rd18749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6426}, %rd18749;
	}
	shf.r.wrap.b32 	%r6427, %r6426, %r6425, 19;
	shf.r.wrap.b32 	%r6428, %r6425, %r6426, 19;
	mov.b64 	%rd9549, {%r6428, %r6427};
	shf.l.wrap.b32 	%r6429, %r6425, %r6426, 3;
	shf.l.wrap.b32 	%r6430, %r6426, %r6425, 3;
	mov.b64 	%rd9550, {%r6430, %r6429};
	shr.u64 	%rd9551, %rd18749, 6;
	xor.b64  	%rd9552, %rd9549, %rd9551;
	xor.b64  	%rd9553, %rd9552, %rd9550;
	shr.u64 	%rd9554, %rd18752, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6431,%dummy}, %rd18752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6432}, %rd18752;
	}
	shf.r.wrap.b32 	%r6433, %r6432, %r6431, 1;
	shf.r.wrap.b32 	%r6434, %r6431, %r6432, 1;
	mov.b64 	%rd9555, {%r6434, %r6433};
	xor.b64  	%rd9556, %rd9555, %rd9554;
	shf.r.wrap.b32 	%r6435, %r6432, %r6431, 8;
	shf.r.wrap.b32 	%r6436, %r6431, %r6432, 8;
	mov.b64 	%rd9557, {%r6436, %r6435};
	xor.b64  	%rd9558, %rd9556, %rd9557;
	add.s64 	%rd9559, %rd18731, %rd18751;
	add.s64 	%rd9560, %rd9559, %rd9553;
	add.s64 	%rd18751, %rd9560, %rd9558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6437,%dummy}, %rd18750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6438}, %rd18750;
	}
	shf.r.wrap.b32 	%r6439, %r6438, %r6437, 19;
	shf.r.wrap.b32 	%r6440, %r6437, %r6438, 19;
	mov.b64 	%rd9561, {%r6440, %r6439};
	shf.l.wrap.b32 	%r6441, %r6437, %r6438, 3;
	shf.l.wrap.b32 	%r6442, %r6438, %r6437, 3;
	mov.b64 	%rd9562, {%r6442, %r6441};
	shr.u64 	%rd9563, %rd18750, 6;
	xor.b64  	%rd9564, %rd9561, %rd9563;
	xor.b64  	%rd9565, %rd9564, %rd9562;
	shr.u64 	%rd9566, %rd18753, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6443,%dummy}, %rd18753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6444}, %rd18753;
	}
	shf.r.wrap.b32 	%r6445, %r6444, %r6443, 1;
	shf.r.wrap.b32 	%r6446, %r6443, %r6444, 1;
	mov.b64 	%rd9567, {%r6446, %r6445};
	xor.b64  	%rd9568, %rd9567, %rd9566;
	shf.r.wrap.b32 	%r6447, %r6444, %r6443, 8;
	shf.r.wrap.b32 	%r6448, %r6443, %r6444, 8;
	mov.b64 	%rd9569, {%r6448, %r6447};
	xor.b64  	%rd9570, %rd9568, %rd9569;
	add.s64 	%rd9571, %rd18730, %rd18752;
	add.s64 	%rd9572, %rd9571, %rd9565;
	add.s64 	%rd18752, %rd9572, %rd9570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6449,%dummy}, %rd18751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6450}, %rd18751;
	}
	shf.r.wrap.b32 	%r6451, %r6450, %r6449, 19;
	shf.r.wrap.b32 	%r6452, %r6449, %r6450, 19;
	mov.b64 	%rd9573, {%r6452, %r6451};
	shf.l.wrap.b32 	%r6453, %r6449, %r6450, 3;
	shf.l.wrap.b32 	%r6454, %r6450, %r6449, 3;
	mov.b64 	%rd9574, {%r6454, %r6453};
	shr.u64 	%rd9575, %rd18751, 6;
	xor.b64  	%rd9576, %rd9573, %rd9575;
	xor.b64  	%rd9577, %rd9576, %rd9574;
	shr.u64 	%rd9578, %rd18737, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6455,%dummy}, %rd18737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6456}, %rd18737;
	}
	shf.r.wrap.b32 	%r6457, %r6456, %r6455, 1;
	shf.r.wrap.b32 	%r6458, %r6455, %r6456, 1;
	mov.b64 	%rd9579, {%r6458, %r6457};
	xor.b64  	%rd9580, %rd9579, %rd9578;
	shf.r.wrap.b32 	%r6459, %r6456, %r6455, 8;
	shf.r.wrap.b32 	%r6460, %r6455, %r6456, 8;
	mov.b64 	%rd9581, {%r6460, %r6459};
	xor.b64  	%rd9582, %rd9580, %rd9581;
	add.s64 	%rd9583, %rd18746, %rd18753;
	add.s64 	%rd9584, %rd9583, %rd9577;
	add.s64 	%rd18753, %rd9584, %rd9582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6461,%dummy}, %rd18752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6462}, %rd18752;
	}
	shf.r.wrap.b32 	%r6463, %r6462, %r6461, 19;
	shf.r.wrap.b32 	%r6464, %r6461, %r6462, 19;
	mov.b64 	%rd9585, {%r6464, %r6463};
	shf.l.wrap.b32 	%r6465, %r6461, %r6462, 3;
	shf.l.wrap.b32 	%r6466, %r6462, %r6461, 3;
	mov.b64 	%rd9586, {%r6466, %r6465};
	shr.u64 	%rd9587, %rd18752, 6;
	xor.b64  	%rd9588, %rd9585, %rd9587;
	xor.b64  	%rd9589, %rd9588, %rd9586;
	shr.u64 	%rd9590, %rd18736, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6467,%dummy}, %rd18736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6468}, %rd18736;
	}
	shf.r.wrap.b32 	%r6469, %r6468, %r6467, 1;
	shf.r.wrap.b32 	%r6470, %r6467, %r6468, 1;
	mov.b64 	%rd9591, {%r6470, %r6469};
	xor.b64  	%rd9592, %rd9591, %rd9590;
	shf.r.wrap.b32 	%r6471, %r6468, %r6467, 8;
	shf.r.wrap.b32 	%r6472, %r6467, %r6468, 8;
	mov.b64 	%rd9593, {%r6472, %r6471};
	xor.b64  	%rd9594, %rd9592, %rd9593;
	add.s64 	%rd9595, %rd18747, %rd18737;
	add.s64 	%rd9596, %rd9595, %rd9589;
	add.s64 	%rd18737, %rd9596, %rd9594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6473,%dummy}, %rd18753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6474}, %rd18753;
	}
	shf.r.wrap.b32 	%r6475, %r6474, %r6473, 19;
	shf.r.wrap.b32 	%r6476, %r6473, %r6474, 19;
	mov.b64 	%rd9597, {%r6476, %r6475};
	shf.l.wrap.b32 	%r6477, %r6473, %r6474, 3;
	shf.l.wrap.b32 	%r6478, %r6474, %r6473, 3;
	mov.b64 	%rd9598, {%r6478, %r6477};
	shr.u64 	%rd9599, %rd18753, 6;
	xor.b64  	%rd9600, %rd9597, %rd9599;
	xor.b64  	%rd9601, %rd9600, %rd9598;
	shr.u64 	%rd9602, %rd18735, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6479,%dummy}, %rd18735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6480}, %rd18735;
	}
	shf.r.wrap.b32 	%r6481, %r6480, %r6479, 1;
	shf.r.wrap.b32 	%r6482, %r6479, %r6480, 1;
	mov.b64 	%rd9603, {%r6482, %r6481};
	xor.b64  	%rd9604, %rd9603, %rd9602;
	shf.r.wrap.b32 	%r6483, %r6480, %r6479, 8;
	shf.r.wrap.b32 	%r6484, %r6479, %r6480, 8;
	mov.b64 	%rd9605, {%r6484, %r6483};
	xor.b64  	%rd9606, %rd9604, %rd9605;
	add.s64 	%rd9607, %rd18748, %rd18736;
	add.s64 	%rd9608, %rd9607, %rd9601;
	add.s64 	%rd18736, %rd9608, %rd9606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6485,%dummy}, %rd18737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6486}, %rd18737;
	}
	shf.r.wrap.b32 	%r6487, %r6486, %r6485, 19;
	shf.r.wrap.b32 	%r6488, %r6485, %r6486, 19;
	mov.b64 	%rd9609, {%r6488, %r6487};
	shf.l.wrap.b32 	%r6489, %r6485, %r6486, 3;
	shf.l.wrap.b32 	%r6490, %r6486, %r6485, 3;
	mov.b64 	%rd9610, {%r6490, %r6489};
	shr.u64 	%rd9611, %rd18737, 6;
	xor.b64  	%rd9612, %rd9609, %rd9611;
	xor.b64  	%rd9613, %rd9612, %rd9610;
	shr.u64 	%rd9614, %rd18734, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6491,%dummy}, %rd18734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6492}, %rd18734;
	}
	shf.r.wrap.b32 	%r6493, %r6492, %r6491, 1;
	shf.r.wrap.b32 	%r6494, %r6491, %r6492, 1;
	mov.b64 	%rd9615, {%r6494, %r6493};
	xor.b64  	%rd9616, %rd9615, %rd9614;
	shf.r.wrap.b32 	%r6495, %r6492, %r6491, 8;
	shf.r.wrap.b32 	%r6496, %r6491, %r6492, 8;
	mov.b64 	%rd9617, {%r6496, %r6495};
	xor.b64  	%rd9618, %rd9616, %rd9617;
	add.s64 	%rd9619, %rd18749, %rd18735;
	add.s64 	%rd9620, %rd9619, %rd9613;
	add.s64 	%rd18735, %rd9620, %rd9618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6497,%dummy}, %rd18736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6498}, %rd18736;
	}
	shf.r.wrap.b32 	%r6499, %r6498, %r6497, 19;
	shf.r.wrap.b32 	%r6500, %r6497, %r6498, 19;
	mov.b64 	%rd9621, {%r6500, %r6499};
	shf.l.wrap.b32 	%r6501, %r6497, %r6498, 3;
	shf.l.wrap.b32 	%r6502, %r6498, %r6497, 3;
	mov.b64 	%rd9622, {%r6502, %r6501};
	shr.u64 	%rd9623, %rd18736, 6;
	xor.b64  	%rd9624, %rd9621, %rd9623;
	xor.b64  	%rd9625, %rd9624, %rd9622;
	shr.u64 	%rd9626, %rd18733, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6503,%dummy}, %rd18733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6504}, %rd18733;
	}
	shf.r.wrap.b32 	%r6505, %r6504, %r6503, 1;
	shf.r.wrap.b32 	%r6506, %r6503, %r6504, 1;
	mov.b64 	%rd9627, {%r6506, %r6505};
	xor.b64  	%rd9628, %rd9627, %rd9626;
	shf.r.wrap.b32 	%r6507, %r6504, %r6503, 8;
	shf.r.wrap.b32 	%r6508, %r6503, %r6504, 8;
	mov.b64 	%rd9629, {%r6508, %r6507};
	xor.b64  	%rd9630, %rd9628, %rd9629;
	add.s64 	%rd9631, %rd18750, %rd18734;
	add.s64 	%rd9632, %rd9631, %rd9625;
	add.s64 	%rd18734, %rd9632, %rd9630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6509,%dummy}, %rd18735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6510}, %rd18735;
	}
	shf.r.wrap.b32 	%r6511, %r6510, %r6509, 19;
	shf.r.wrap.b32 	%r6512, %r6509, %r6510, 19;
	mov.b64 	%rd9633, {%r6512, %r6511};
	shf.l.wrap.b32 	%r6513, %r6509, %r6510, 3;
	shf.l.wrap.b32 	%r6514, %r6510, %r6509, 3;
	mov.b64 	%rd9634, {%r6514, %r6513};
	shr.u64 	%rd9635, %rd18735, 6;
	xor.b64  	%rd9636, %rd9633, %rd9635;
	xor.b64  	%rd9637, %rd9636, %rd9634;
	shr.u64 	%rd9638, %rd18732, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6515,%dummy}, %rd18732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6516}, %rd18732;
	}
	shf.r.wrap.b32 	%r6517, %r6516, %r6515, 1;
	shf.r.wrap.b32 	%r6518, %r6515, %r6516, 1;
	mov.b64 	%rd9639, {%r6518, %r6517};
	xor.b64  	%rd9640, %rd9639, %rd9638;
	shf.r.wrap.b32 	%r6519, %r6516, %r6515, 8;
	shf.r.wrap.b32 	%r6520, %r6515, %r6516, 8;
	mov.b64 	%rd9641, {%r6520, %r6519};
	xor.b64  	%rd9642, %rd9640, %rd9641;
	add.s64 	%rd9643, %rd18751, %rd18733;
	add.s64 	%rd9644, %rd9643, %rd9637;
	add.s64 	%rd18733, %rd9644, %rd9642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6521,%dummy}, %rd18734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6522}, %rd18734;
	}
	shf.r.wrap.b32 	%r6523, %r6522, %r6521, 19;
	shf.r.wrap.b32 	%r6524, %r6521, %r6522, 19;
	mov.b64 	%rd9645, {%r6524, %r6523};
	shf.l.wrap.b32 	%r6525, %r6521, %r6522, 3;
	shf.l.wrap.b32 	%r6526, %r6522, %r6521, 3;
	mov.b64 	%rd9646, {%r6526, %r6525};
	shr.u64 	%rd9647, %rd18734, 6;
	xor.b64  	%rd9648, %rd9645, %rd9647;
	xor.b64  	%rd9649, %rd9648, %rd9646;
	shr.u64 	%rd9650, %rd18731, 7;
	shf.r.wrap.b32 	%r6527, %r6366, %r6365, 1;
	shf.r.wrap.b32 	%r6528, %r6365, %r6366, 1;
	mov.b64 	%rd9651, {%r6528, %r6527};
	xor.b64  	%rd9652, %rd9651, %rd9650;
	shf.r.wrap.b32 	%r6529, %r6366, %r6365, 8;
	shf.r.wrap.b32 	%r6530, %r6365, %r6366, 8;
	mov.b64 	%rd9653, {%r6530, %r6529};
	xor.b64  	%rd9654, %rd9652, %rd9653;
	add.s64 	%rd9655, %rd18752, %rd18732;
	add.s64 	%rd9656, %rd9655, %rd9649;
	add.s64 	%rd18732, %rd9656, %rd9654;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6531,%dummy}, %rd18733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6532}, %rd18733;
	}
	shf.r.wrap.b32 	%r6533, %r6532, %r6531, 19;
	shf.r.wrap.b32 	%r6534, %r6531, %r6532, 19;
	mov.b64 	%rd9657, {%r6534, %r6533};
	shf.l.wrap.b32 	%r6535, %r6531, %r6532, 3;
	shf.l.wrap.b32 	%r6536, %r6532, %r6531, 3;
	mov.b64 	%rd9658, {%r6536, %r6535};
	shr.u64 	%rd9659, %rd18733, 6;
	xor.b64  	%rd9660, %rd9657, %rd9659;
	xor.b64  	%rd9661, %rd9660, %rd9658;
	shr.u64 	%rd9662, %rd18730, 7;
	shf.r.wrap.b32 	%r6537, %r6378, %r6377, 1;
	shf.r.wrap.b32 	%r6538, %r6377, %r6378, 1;
	mov.b64 	%rd9663, {%r6538, %r6537};
	xor.b64  	%rd9664, %rd9663, %rd9662;
	shf.r.wrap.b32 	%r6539, %r6378, %r6377, 8;
	shf.r.wrap.b32 	%r6540, %r6377, %r6378, 8;
	mov.b64 	%rd9665, {%r6540, %r6539};
	xor.b64  	%rd9666, %rd9664, %rd9665;
	add.s64 	%rd9667, %rd18753, %rd18731;
	add.s64 	%rd9668, %rd9667, %rd9661;
	add.s64 	%rd18731, %rd9668, %rd9666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6541,%dummy}, %rd18732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6542}, %rd18732;
	}
	shf.r.wrap.b32 	%r6543, %r6542, %r6541, 19;
	shf.r.wrap.b32 	%r6544, %r6541, %r6542, 19;
	mov.b64 	%rd9669, {%r6544, %r6543};
	shf.l.wrap.b32 	%r6545, %r6541, %r6542, 3;
	shf.l.wrap.b32 	%r6546, %r6542, %r6541, 3;
	mov.b64 	%rd9670, {%r6546, %r6545};
	shr.u64 	%rd9671, %rd18732, 6;
	xor.b64  	%rd9672, %rd9669, %rd9671;
	xor.b64  	%rd9673, %rd9672, %rd9670;
	shf.r.wrap.b32 	%r6547, %r6390, %r6389, 1;
	shf.r.wrap.b32 	%r6548, %r6389, %r6390, 1;
	mov.b64 	%rd9674, {%r6548, %r6547};
	shf.r.wrap.b32 	%r6549, %r6390, %r6389, 8;
	shf.r.wrap.b32 	%r6550, %r6389, %r6390, 8;
	mov.b64 	%rd9675, {%r6550, %r6549};
	shr.u64 	%rd9676, %rd18746, 7;
	xor.b64  	%rd9677, %rd9674, %rd9676;
	xor.b64  	%rd9678, %rd9677, %rd9675;
	add.s64 	%rd9679, %rd18737, %rd18730;
	add.s64 	%rd9680, %rd9679, %rd9673;
	add.s64 	%rd18730, %rd9680, %rd9678;
	mul.wide.s32 	%rd9681, %r12994, 8;
	add.s64 	%rd9683, %rd18519, %rd9681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6551,%dummy}, %rd18742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6552}, %rd18742;
	}
	shf.r.wrap.b32 	%r6553, %r6552, %r6551, 18;
	shf.r.wrap.b32 	%r6554, %r6551, %r6552, 18;
	mov.b64 	%rd9684, {%r6554, %r6553};
	shf.r.wrap.b32 	%r6555, %r6552, %r6551, 14;
	shf.r.wrap.b32 	%r6556, %r6551, %r6552, 14;
	mov.b64 	%rd9685, {%r6556, %r6555};
	xor.b64  	%rd9686, %rd9684, %rd9685;
	shf.l.wrap.b32 	%r6557, %r6551, %r6552, 23;
	shf.l.wrap.b32 	%r6558, %r6552, %r6551, 23;
	mov.b64 	%rd9687, {%r6558, %r6557};
	xor.b64  	%rd9688, %rd9686, %rd9687;
	xor.b64  	%rd9689, %rd18743, %rd18744;
	and.b64  	%rd9690, %rd18742, %rd9689;
	xor.b64  	%rd9691, %rd9690, %rd18744;
	add.s64 	%rd9692, %rd9691, %rd18745;
	add.s64 	%rd9693, %rd9692, %rd18746;
	ld.const.u64 	%rd9694, [%rd9683];
	add.s64 	%rd9695, %rd9693, %rd9694;
	add.s64 	%rd9696, %rd9695, %rd9688;
	add.s64 	%rd9697, %rd9696, %rd18741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6559}, %rd18738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6560,%dummy}, %rd18738;
	}
	shf.l.wrap.b32 	%r6561, %r6560, %r6559, 30;
	shf.l.wrap.b32 	%r6562, %r6559, %r6560, 30;
	mov.b64 	%rd9698, {%r6562, %r6561};
	shf.r.wrap.b32 	%r6563, %r6559, %r6560, 28;
	shf.r.wrap.b32 	%r6564, %r6560, %r6559, 28;
	mov.b64 	%rd9699, {%r6564, %r6563};
	xor.b64  	%rd9700, %rd9698, %rd9699;
	shf.l.wrap.b32 	%r6565, %r6560, %r6559, 25;
	shf.l.wrap.b32 	%r6566, %r6559, %r6560, 25;
	mov.b64 	%rd9701, {%r6566, %r6565};
	xor.b64  	%rd9702, %rd9700, %rd9701;
	xor.b64  	%rd9703, %rd18738, %rd18739;
	and.b64  	%rd9704, %rd9703, %rd18740;
	and.b64  	%rd9705, %rd18738, %rd18739;
	or.b64  	%rd9706, %rd9704, %rd9705;
	add.s64 	%rd9707, %rd9696, %rd9706;
	add.s64 	%rd9708, %rd9707, %rd9702;
	add.s32 	%r6567, %r12994, 1;
	mul.wide.s32 	%rd9709, %r6567, 8;
	add.s64 	%rd9710, %rd18519, %rd9709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6568,%dummy}, %rd9697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6569}, %rd9697;
	}
	shf.r.wrap.b32 	%r6570, %r6569, %r6568, 14;
	shf.r.wrap.b32 	%r6571, %r6568, %r6569, 14;
	mov.b64 	%rd9711, {%r6571, %r6570};
	shf.r.wrap.b32 	%r6572, %r6569, %r6568, 18;
	shf.r.wrap.b32 	%r6573, %r6568, %r6569, 18;
	mov.b64 	%rd9712, {%r6573, %r6572};
	xor.b64  	%rd9713, %rd9712, %rd9711;
	shf.l.wrap.b32 	%r6574, %r6568, %r6569, 23;
	shf.l.wrap.b32 	%r6575, %r6569, %r6568, 23;
	mov.b64 	%rd9714, {%r6575, %r6574};
	xor.b64  	%rd9715, %rd9713, %rd9714;
	xor.b64  	%rd9716, %rd18742, %rd18743;
	and.b64  	%rd9717, %rd9697, %rd9716;
	xor.b64  	%rd9718, %rd9717, %rd18743;
	add.s64 	%rd9719, %rd18747, %rd18744;
	ld.const.u64 	%rd9720, [%rd9710];
	add.s64 	%rd9721, %rd9719, %rd9720;
	add.s64 	%rd9722, %rd9721, %rd9718;
	add.s64 	%rd9723, %rd9722, %rd9715;
	add.s64 	%rd9724, %rd9723, %rd18740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6576,%dummy}, %rd9708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6577}, %rd9708;
	}
	shf.r.wrap.b32 	%r6578, %r6577, %r6576, 28;
	shf.r.wrap.b32 	%r6579, %r6576, %r6577, 28;
	mov.b64 	%rd9725, {%r6579, %r6578};
	shf.l.wrap.b32 	%r6580, %r6576, %r6577, 30;
	shf.l.wrap.b32 	%r6581, %r6577, %r6576, 30;
	mov.b64 	%rd9726, {%r6581, %r6580};
	xor.b64  	%rd9727, %rd9726, %rd9725;
	shf.l.wrap.b32 	%r6582, %r6576, %r6577, 25;
	shf.l.wrap.b32 	%r6583, %r6577, %r6576, 25;
	mov.b64 	%rd9728, {%r6583, %r6582};
	xor.b64  	%rd9729, %rd9727, %rd9728;
	and.b64  	%rd9730, %rd9708, %rd18738;
	xor.b64  	%rd9731, %rd9708, %rd18738;
	and.b64  	%rd9732, %rd9731, %rd18739;
	or.b64  	%rd9733, %rd9732, %rd9730;
	add.s64 	%rd9734, %rd9723, %rd9733;
	add.s64 	%rd9735, %rd9734, %rd9729;
	add.s32 	%r6584, %r12994, 2;
	mul.wide.s32 	%rd9736, %r6584, 8;
	add.s64 	%rd9737, %rd18519, %rd9736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6585,%dummy}, %rd9724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6586}, %rd9724;
	}
	shf.r.wrap.b32 	%r6587, %r6586, %r6585, 14;
	shf.r.wrap.b32 	%r6588, %r6585, %r6586, 14;
	mov.b64 	%rd9738, {%r6588, %r6587};
	shf.r.wrap.b32 	%r6589, %r6586, %r6585, 18;
	shf.r.wrap.b32 	%r6590, %r6585, %r6586, 18;
	mov.b64 	%rd9739, {%r6590, %r6589};
	xor.b64  	%rd9740, %rd9739, %rd9738;
	shf.l.wrap.b32 	%r6591, %r6585, %r6586, 23;
	shf.l.wrap.b32 	%r6592, %r6586, %r6585, 23;
	mov.b64 	%rd9741, {%r6592, %r6591};
	xor.b64  	%rd9742, %rd9740, %rd9741;
	xor.b64  	%rd9743, %rd9697, %rd18742;
	and.b64  	%rd9744, %rd9724, %rd9743;
	xor.b64  	%rd9745, %rd9744, %rd18742;
	add.s64 	%rd9746, %rd18748, %rd18743;
	ld.const.u64 	%rd9747, [%rd9737];
	add.s64 	%rd9748, %rd9746, %rd9747;
	add.s64 	%rd9749, %rd9748, %rd9745;
	add.s64 	%rd9750, %rd9749, %rd9742;
	add.s64 	%rd9751, %rd9750, %rd18739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6593,%dummy}, %rd9735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6594}, %rd9735;
	}
	shf.r.wrap.b32 	%r6595, %r6594, %r6593, 28;
	shf.r.wrap.b32 	%r6596, %r6593, %r6594, 28;
	mov.b64 	%rd9752, {%r6596, %r6595};
	shf.l.wrap.b32 	%r6597, %r6593, %r6594, 30;
	shf.l.wrap.b32 	%r6598, %r6594, %r6593, 30;
	mov.b64 	%rd9753, {%r6598, %r6597};
	xor.b64  	%rd9754, %rd9753, %rd9752;
	shf.l.wrap.b32 	%r6599, %r6593, %r6594, 25;
	shf.l.wrap.b32 	%r6600, %r6594, %r6593, 25;
	mov.b64 	%rd9755, {%r6600, %r6599};
	xor.b64  	%rd9756, %rd9754, %rd9755;
	and.b64  	%rd9757, %rd9735, %rd9708;
	xor.b64  	%rd9758, %rd9735, %rd9708;
	and.b64  	%rd9759, %rd9758, %rd18738;
	or.b64  	%rd9760, %rd9759, %rd9757;
	add.s64 	%rd9761, %rd9750, %rd9760;
	add.s64 	%rd9762, %rd9761, %rd9756;
	add.s32 	%r6601, %r12994, 3;
	mul.wide.s32 	%rd9763, %r6601, 8;
	add.s64 	%rd9764, %rd18519, %rd9763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6602,%dummy}, %rd9751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6603}, %rd9751;
	}
	shf.r.wrap.b32 	%r6604, %r6603, %r6602, 14;
	shf.r.wrap.b32 	%r6605, %r6602, %r6603, 14;
	mov.b64 	%rd9765, {%r6605, %r6604};
	shf.r.wrap.b32 	%r6606, %r6603, %r6602, 18;
	shf.r.wrap.b32 	%r6607, %r6602, %r6603, 18;
	mov.b64 	%rd9766, {%r6607, %r6606};
	xor.b64  	%rd9767, %rd9766, %rd9765;
	shf.l.wrap.b32 	%r6608, %r6602, %r6603, 23;
	shf.l.wrap.b32 	%r6609, %r6603, %r6602, 23;
	mov.b64 	%rd9768, {%r6609, %r6608};
	xor.b64  	%rd9769, %rd9767, %rd9768;
	xor.b64  	%rd9770, %rd9724, %rd9697;
	and.b64  	%rd9771, %rd9751, %rd9770;
	xor.b64  	%rd9772, %rd9771, %rd9697;
	add.s64 	%rd9773, %rd18749, %rd18742;
	ld.const.u64 	%rd9774, [%rd9764];
	add.s64 	%rd9775, %rd9773, %rd9774;
	add.s64 	%rd9776, %rd9775, %rd9772;
	add.s64 	%rd9777, %rd9776, %rd9769;
	add.s64 	%rd9778, %rd9777, %rd18738;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6610,%dummy}, %rd9762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6611}, %rd9762;
	}
	shf.r.wrap.b32 	%r6612, %r6611, %r6610, 28;
	shf.r.wrap.b32 	%r6613, %r6610, %r6611, 28;
	mov.b64 	%rd9779, {%r6613, %r6612};
	shf.l.wrap.b32 	%r6614, %r6610, %r6611, 30;
	shf.l.wrap.b32 	%r6615, %r6611, %r6610, 30;
	mov.b64 	%rd9780, {%r6615, %r6614};
	xor.b64  	%rd9781, %rd9780, %rd9779;
	shf.l.wrap.b32 	%r6616, %r6610, %r6611, 25;
	shf.l.wrap.b32 	%r6617, %r6611, %r6610, 25;
	mov.b64 	%rd9782, {%r6617, %r6616};
	xor.b64  	%rd9783, %rd9781, %rd9782;
	and.b64  	%rd9784, %rd9762, %rd9735;
	xor.b64  	%rd9785, %rd9762, %rd9735;
	and.b64  	%rd9786, %rd9785, %rd9708;
	or.b64  	%rd9787, %rd9786, %rd9784;
	add.s64 	%rd9788, %rd9777, %rd9787;
	add.s64 	%rd9789, %rd9788, %rd9783;
	add.s32 	%r6618, %r12994, 4;
	mul.wide.s32 	%rd9790, %r6618, 8;
	add.s64 	%rd9791, %rd18519, %rd9790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6619,%dummy}, %rd9778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6620}, %rd9778;
	}
	shf.r.wrap.b32 	%r6621, %r6620, %r6619, 14;
	shf.r.wrap.b32 	%r6622, %r6619, %r6620, 14;
	mov.b64 	%rd9792, {%r6622, %r6621};
	shf.r.wrap.b32 	%r6623, %r6620, %r6619, 18;
	shf.r.wrap.b32 	%r6624, %r6619, %r6620, 18;
	mov.b64 	%rd9793, {%r6624, %r6623};
	xor.b64  	%rd9794, %rd9793, %rd9792;
	shf.l.wrap.b32 	%r6625, %r6619, %r6620, 23;
	shf.l.wrap.b32 	%r6626, %r6620, %r6619, 23;
	mov.b64 	%rd9795, {%r6626, %r6625};
	xor.b64  	%rd9796, %rd9794, %rd9795;
	xor.b64  	%rd9797, %rd9751, %rd9724;
	and.b64  	%rd9798, %rd9778, %rd9797;
	xor.b64  	%rd9799, %rd9798, %rd9724;
	add.s64 	%rd9800, %rd9697, %rd18750;
	ld.const.u64 	%rd9801, [%rd9791];
	add.s64 	%rd9802, %rd9800, %rd9801;
	add.s64 	%rd9803, %rd9802, %rd9799;
	add.s64 	%rd9804, %rd9803, %rd9796;
	add.s64 	%rd9805, %rd9804, %rd9708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6627,%dummy}, %rd9789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6628}, %rd9789;
	}
	shf.r.wrap.b32 	%r6629, %r6628, %r6627, 28;
	shf.r.wrap.b32 	%r6630, %r6627, %r6628, 28;
	mov.b64 	%rd9806, {%r6630, %r6629};
	shf.l.wrap.b32 	%r6631, %r6627, %r6628, 30;
	shf.l.wrap.b32 	%r6632, %r6628, %r6627, 30;
	mov.b64 	%rd9807, {%r6632, %r6631};
	xor.b64  	%rd9808, %rd9807, %rd9806;
	shf.l.wrap.b32 	%r6633, %r6627, %r6628, 25;
	shf.l.wrap.b32 	%r6634, %r6628, %r6627, 25;
	mov.b64 	%rd9809, {%r6634, %r6633};
	xor.b64  	%rd9810, %rd9808, %rd9809;
	and.b64  	%rd9811, %rd9789, %rd9762;
	xor.b64  	%rd9812, %rd9789, %rd9762;
	and.b64  	%rd9813, %rd9812, %rd9735;
	or.b64  	%rd9814, %rd9813, %rd9811;
	add.s64 	%rd9815, %rd9804, %rd9814;
	add.s64 	%rd9816, %rd9815, %rd9810;
	add.s32 	%r6635, %r12994, 5;
	mul.wide.s32 	%rd9817, %r6635, 8;
	add.s64 	%rd9818, %rd18519, %rd9817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6636,%dummy}, %rd9805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6637}, %rd9805;
	}
	shf.r.wrap.b32 	%r6638, %r6637, %r6636, 14;
	shf.r.wrap.b32 	%r6639, %r6636, %r6637, 14;
	mov.b64 	%rd9819, {%r6639, %r6638};
	shf.r.wrap.b32 	%r6640, %r6637, %r6636, 18;
	shf.r.wrap.b32 	%r6641, %r6636, %r6637, 18;
	mov.b64 	%rd9820, {%r6641, %r6640};
	xor.b64  	%rd9821, %rd9820, %rd9819;
	shf.l.wrap.b32 	%r6642, %r6636, %r6637, 23;
	shf.l.wrap.b32 	%r6643, %r6637, %r6636, 23;
	mov.b64 	%rd9822, {%r6643, %r6642};
	xor.b64  	%rd9823, %rd9821, %rd9822;
	xor.b64  	%rd9824, %rd9778, %rd9751;
	and.b64  	%rd9825, %rd9805, %rd9824;
	xor.b64  	%rd9826, %rd9825, %rd9751;
	add.s64 	%rd9827, %rd9724, %rd18751;
	ld.const.u64 	%rd9828, [%rd9818];
	add.s64 	%rd9829, %rd9827, %rd9828;
	add.s64 	%rd9830, %rd9829, %rd9826;
	add.s64 	%rd9831, %rd9830, %rd9823;
	add.s64 	%rd9832, %rd9831, %rd9735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6644,%dummy}, %rd9816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6645}, %rd9816;
	}
	shf.r.wrap.b32 	%r6646, %r6645, %r6644, 28;
	shf.r.wrap.b32 	%r6647, %r6644, %r6645, 28;
	mov.b64 	%rd9833, {%r6647, %r6646};
	shf.l.wrap.b32 	%r6648, %r6644, %r6645, 30;
	shf.l.wrap.b32 	%r6649, %r6645, %r6644, 30;
	mov.b64 	%rd9834, {%r6649, %r6648};
	xor.b64  	%rd9835, %rd9834, %rd9833;
	shf.l.wrap.b32 	%r6650, %r6644, %r6645, 25;
	shf.l.wrap.b32 	%r6651, %r6645, %r6644, 25;
	mov.b64 	%rd9836, {%r6651, %r6650};
	xor.b64  	%rd9837, %rd9835, %rd9836;
	and.b64  	%rd9838, %rd9816, %rd9789;
	xor.b64  	%rd9839, %rd9816, %rd9789;
	and.b64  	%rd9840, %rd9839, %rd9762;
	or.b64  	%rd9841, %rd9840, %rd9838;
	add.s64 	%rd9842, %rd9831, %rd9841;
	add.s64 	%rd9843, %rd9842, %rd9837;
	add.s32 	%r6652, %r12994, 6;
	mul.wide.s32 	%rd9844, %r6652, 8;
	add.s64 	%rd9845, %rd18519, %rd9844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6653,%dummy}, %rd9832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6654}, %rd9832;
	}
	shf.r.wrap.b32 	%r6655, %r6654, %r6653, 14;
	shf.r.wrap.b32 	%r6656, %r6653, %r6654, 14;
	mov.b64 	%rd9846, {%r6656, %r6655};
	shf.r.wrap.b32 	%r6657, %r6654, %r6653, 18;
	shf.r.wrap.b32 	%r6658, %r6653, %r6654, 18;
	mov.b64 	%rd9847, {%r6658, %r6657};
	xor.b64  	%rd9848, %rd9847, %rd9846;
	shf.l.wrap.b32 	%r6659, %r6653, %r6654, 23;
	shf.l.wrap.b32 	%r6660, %r6654, %r6653, 23;
	mov.b64 	%rd9849, {%r6660, %r6659};
	xor.b64  	%rd9850, %rd9848, %rd9849;
	xor.b64  	%rd9851, %rd9805, %rd9778;
	and.b64  	%rd9852, %rd9832, %rd9851;
	xor.b64  	%rd9853, %rd9852, %rd9778;
	add.s64 	%rd9854, %rd9751, %rd18752;
	ld.const.u64 	%rd9855, [%rd9845];
	add.s64 	%rd9856, %rd9854, %rd9855;
	add.s64 	%rd9857, %rd9856, %rd9853;
	add.s64 	%rd9858, %rd9857, %rd9850;
	add.s64 	%rd9859, %rd9858, %rd9762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6661,%dummy}, %rd9843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6662}, %rd9843;
	}
	shf.r.wrap.b32 	%r6663, %r6662, %r6661, 28;
	shf.r.wrap.b32 	%r6664, %r6661, %r6662, 28;
	mov.b64 	%rd9860, {%r6664, %r6663};
	shf.l.wrap.b32 	%r6665, %r6661, %r6662, 30;
	shf.l.wrap.b32 	%r6666, %r6662, %r6661, 30;
	mov.b64 	%rd9861, {%r6666, %r6665};
	xor.b64  	%rd9862, %rd9861, %rd9860;
	shf.l.wrap.b32 	%r6667, %r6661, %r6662, 25;
	shf.l.wrap.b32 	%r6668, %r6662, %r6661, 25;
	mov.b64 	%rd9863, {%r6668, %r6667};
	xor.b64  	%rd9864, %rd9862, %rd9863;
	and.b64  	%rd9865, %rd9843, %rd9816;
	xor.b64  	%rd9866, %rd9843, %rd9816;
	and.b64  	%rd9867, %rd9866, %rd9789;
	or.b64  	%rd9868, %rd9867, %rd9865;
	add.s64 	%rd9869, %rd9858, %rd9868;
	add.s64 	%rd9870, %rd9869, %rd9864;
	add.s32 	%r6669, %r12994, 7;
	mul.wide.s32 	%rd9871, %r6669, 8;
	add.s64 	%rd9872, %rd18519, %rd9871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6670,%dummy}, %rd9859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6671}, %rd9859;
	}
	shf.r.wrap.b32 	%r6672, %r6671, %r6670, 14;
	shf.r.wrap.b32 	%r6673, %r6670, %r6671, 14;
	mov.b64 	%rd9873, {%r6673, %r6672};
	shf.r.wrap.b32 	%r6674, %r6671, %r6670, 18;
	shf.r.wrap.b32 	%r6675, %r6670, %r6671, 18;
	mov.b64 	%rd9874, {%r6675, %r6674};
	xor.b64  	%rd9875, %rd9874, %rd9873;
	shf.l.wrap.b32 	%r6676, %r6670, %r6671, 23;
	shf.l.wrap.b32 	%r6677, %r6671, %r6670, 23;
	mov.b64 	%rd9876, {%r6677, %r6676};
	xor.b64  	%rd9877, %rd9875, %rd9876;
	xor.b64  	%rd9878, %rd9832, %rd9805;
	and.b64  	%rd9879, %rd9859, %rd9878;
	xor.b64  	%rd9880, %rd9879, %rd9805;
	add.s64 	%rd9881, %rd9778, %rd18753;
	ld.const.u64 	%rd9882, [%rd9872];
	add.s64 	%rd9883, %rd9881, %rd9882;
	add.s64 	%rd9884, %rd9883, %rd9880;
	add.s64 	%rd9885, %rd9884, %rd9877;
	add.s64 	%rd9886, %rd9885, %rd9789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6678,%dummy}, %rd9870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6679}, %rd9870;
	}
	shf.r.wrap.b32 	%r6680, %r6679, %r6678, 28;
	shf.r.wrap.b32 	%r6681, %r6678, %r6679, 28;
	mov.b64 	%rd9887, {%r6681, %r6680};
	shf.l.wrap.b32 	%r6682, %r6678, %r6679, 30;
	shf.l.wrap.b32 	%r6683, %r6679, %r6678, 30;
	mov.b64 	%rd9888, {%r6683, %r6682};
	xor.b64  	%rd9889, %rd9888, %rd9887;
	shf.l.wrap.b32 	%r6684, %r6678, %r6679, 25;
	shf.l.wrap.b32 	%r6685, %r6679, %r6678, 25;
	mov.b64 	%rd9890, {%r6685, %r6684};
	xor.b64  	%rd9891, %rd9889, %rd9890;
	and.b64  	%rd9892, %rd9870, %rd9843;
	xor.b64  	%rd9893, %rd9870, %rd9843;
	and.b64  	%rd9894, %rd9893, %rd9816;
	or.b64  	%rd9895, %rd9894, %rd9892;
	add.s64 	%rd9896, %rd9885, %rd9895;
	add.s64 	%rd9897, %rd9896, %rd9891;
	add.s32 	%r6686, %r12994, 8;
	mul.wide.s32 	%rd9898, %r6686, 8;
	add.s64 	%rd9899, %rd18519, %rd9898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6687,%dummy}, %rd9886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6688}, %rd9886;
	}
	shf.r.wrap.b32 	%r6689, %r6688, %r6687, 14;
	shf.r.wrap.b32 	%r6690, %r6687, %r6688, 14;
	mov.b64 	%rd9900, {%r6690, %r6689};
	shf.r.wrap.b32 	%r6691, %r6688, %r6687, 18;
	shf.r.wrap.b32 	%r6692, %r6687, %r6688, 18;
	mov.b64 	%rd9901, {%r6692, %r6691};
	xor.b64  	%rd9902, %rd9901, %rd9900;
	shf.l.wrap.b32 	%r6693, %r6687, %r6688, 23;
	shf.l.wrap.b32 	%r6694, %r6688, %r6687, 23;
	mov.b64 	%rd9903, {%r6694, %r6693};
	xor.b64  	%rd9904, %rd9902, %rd9903;
	xor.b64  	%rd9905, %rd9859, %rd9832;
	and.b64  	%rd9906, %rd9886, %rd9905;
	xor.b64  	%rd9907, %rd9906, %rd9832;
	add.s64 	%rd9908, %rd9805, %rd18737;
	ld.const.u64 	%rd9909, [%rd9899];
	add.s64 	%rd9910, %rd9908, %rd9909;
	add.s64 	%rd9911, %rd9910, %rd9907;
	add.s64 	%rd9912, %rd9911, %rd9904;
	add.s64 	%rd9913, %rd9912, %rd9816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6695,%dummy}, %rd9897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6696}, %rd9897;
	}
	shf.r.wrap.b32 	%r6697, %r6696, %r6695, 28;
	shf.r.wrap.b32 	%r6698, %r6695, %r6696, 28;
	mov.b64 	%rd9914, {%r6698, %r6697};
	shf.l.wrap.b32 	%r6699, %r6695, %r6696, 30;
	shf.l.wrap.b32 	%r6700, %r6696, %r6695, 30;
	mov.b64 	%rd9915, {%r6700, %r6699};
	xor.b64  	%rd9916, %rd9915, %rd9914;
	shf.l.wrap.b32 	%r6701, %r6695, %r6696, 25;
	shf.l.wrap.b32 	%r6702, %r6696, %r6695, 25;
	mov.b64 	%rd9917, {%r6702, %r6701};
	xor.b64  	%rd9918, %rd9916, %rd9917;
	and.b64  	%rd9919, %rd9897, %rd9870;
	xor.b64  	%rd9920, %rd9897, %rd9870;
	and.b64  	%rd9921, %rd9920, %rd9843;
	or.b64  	%rd9922, %rd9921, %rd9919;
	add.s64 	%rd9923, %rd9912, %rd9922;
	add.s64 	%rd9924, %rd9923, %rd9918;
	add.s32 	%r6703, %r12994, 9;
	mul.wide.s32 	%rd9925, %r6703, 8;
	add.s64 	%rd9926, %rd18519, %rd9925;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6704,%dummy}, %rd9913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6705}, %rd9913;
	}
	shf.r.wrap.b32 	%r6706, %r6705, %r6704, 14;
	shf.r.wrap.b32 	%r6707, %r6704, %r6705, 14;
	mov.b64 	%rd9927, {%r6707, %r6706};
	shf.r.wrap.b32 	%r6708, %r6705, %r6704, 18;
	shf.r.wrap.b32 	%r6709, %r6704, %r6705, 18;
	mov.b64 	%rd9928, {%r6709, %r6708};
	xor.b64  	%rd9929, %rd9928, %rd9927;
	shf.l.wrap.b32 	%r6710, %r6704, %r6705, 23;
	shf.l.wrap.b32 	%r6711, %r6705, %r6704, 23;
	mov.b64 	%rd9930, {%r6711, %r6710};
	xor.b64  	%rd9931, %rd9929, %rd9930;
	xor.b64  	%rd9932, %rd9886, %rd9859;
	and.b64  	%rd9933, %rd9913, %rd9932;
	xor.b64  	%rd9934, %rd9933, %rd9859;
	add.s64 	%rd9935, %rd9832, %rd18736;
	ld.const.u64 	%rd9936, [%rd9926];
	add.s64 	%rd9937, %rd9935, %rd9936;
	add.s64 	%rd9938, %rd9937, %rd9934;
	add.s64 	%rd9939, %rd9938, %rd9931;
	add.s64 	%rd9940, %rd9939, %rd9843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6712,%dummy}, %rd9924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6713}, %rd9924;
	}
	shf.r.wrap.b32 	%r6714, %r6713, %r6712, 28;
	shf.r.wrap.b32 	%r6715, %r6712, %r6713, 28;
	mov.b64 	%rd9941, {%r6715, %r6714};
	shf.l.wrap.b32 	%r6716, %r6712, %r6713, 30;
	shf.l.wrap.b32 	%r6717, %r6713, %r6712, 30;
	mov.b64 	%rd9942, {%r6717, %r6716};
	xor.b64  	%rd9943, %rd9942, %rd9941;
	shf.l.wrap.b32 	%r6718, %r6712, %r6713, 25;
	shf.l.wrap.b32 	%r6719, %r6713, %r6712, 25;
	mov.b64 	%rd9944, {%r6719, %r6718};
	xor.b64  	%rd9945, %rd9943, %rd9944;
	and.b64  	%rd9946, %rd9924, %rd9897;
	xor.b64  	%rd9947, %rd9924, %rd9897;
	and.b64  	%rd9948, %rd9947, %rd9870;
	or.b64  	%rd9949, %rd9948, %rd9946;
	add.s64 	%rd9950, %rd9939, %rd9949;
	add.s64 	%rd9951, %rd9950, %rd9945;
	add.s32 	%r6720, %r12994, 10;
	mul.wide.s32 	%rd9952, %r6720, 8;
	add.s64 	%rd9953, %rd18519, %rd9952;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6721,%dummy}, %rd9940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6722}, %rd9940;
	}
	shf.r.wrap.b32 	%r6723, %r6722, %r6721, 14;
	shf.r.wrap.b32 	%r6724, %r6721, %r6722, 14;
	mov.b64 	%rd9954, {%r6724, %r6723};
	shf.r.wrap.b32 	%r6725, %r6722, %r6721, 18;
	shf.r.wrap.b32 	%r6726, %r6721, %r6722, 18;
	mov.b64 	%rd9955, {%r6726, %r6725};
	xor.b64  	%rd9956, %rd9955, %rd9954;
	shf.l.wrap.b32 	%r6727, %r6721, %r6722, 23;
	shf.l.wrap.b32 	%r6728, %r6722, %r6721, 23;
	mov.b64 	%rd9957, {%r6728, %r6727};
	xor.b64  	%rd9958, %rd9956, %rd9957;
	xor.b64  	%rd9959, %rd9913, %rd9886;
	and.b64  	%rd9960, %rd9940, %rd9959;
	xor.b64  	%rd9961, %rd9960, %rd9886;
	add.s64 	%rd9962, %rd9859, %rd18735;
	ld.const.u64 	%rd9963, [%rd9953];
	add.s64 	%rd9964, %rd9962, %rd9963;
	add.s64 	%rd9965, %rd9964, %rd9961;
	add.s64 	%rd9966, %rd9965, %rd9958;
	add.s64 	%rd9967, %rd9966, %rd9870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6729,%dummy}, %rd9951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6730}, %rd9951;
	}
	shf.r.wrap.b32 	%r6731, %r6730, %r6729, 28;
	shf.r.wrap.b32 	%r6732, %r6729, %r6730, 28;
	mov.b64 	%rd9968, {%r6732, %r6731};
	shf.l.wrap.b32 	%r6733, %r6729, %r6730, 30;
	shf.l.wrap.b32 	%r6734, %r6730, %r6729, 30;
	mov.b64 	%rd9969, {%r6734, %r6733};
	xor.b64  	%rd9970, %rd9969, %rd9968;
	shf.l.wrap.b32 	%r6735, %r6729, %r6730, 25;
	shf.l.wrap.b32 	%r6736, %r6730, %r6729, 25;
	mov.b64 	%rd9971, {%r6736, %r6735};
	xor.b64  	%rd9972, %rd9970, %rd9971;
	and.b64  	%rd9973, %rd9951, %rd9924;
	xor.b64  	%rd9974, %rd9951, %rd9924;
	and.b64  	%rd9975, %rd9974, %rd9897;
	or.b64  	%rd9976, %rd9975, %rd9973;
	add.s64 	%rd9977, %rd9966, %rd9976;
	add.s64 	%rd9978, %rd9977, %rd9972;
	add.s32 	%r6737, %r12994, 11;
	mul.wide.s32 	%rd9979, %r6737, 8;
	add.s64 	%rd9980, %rd18519, %rd9979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6738,%dummy}, %rd9967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6739}, %rd9967;
	}
	shf.r.wrap.b32 	%r6740, %r6739, %r6738, 14;
	shf.r.wrap.b32 	%r6741, %r6738, %r6739, 14;
	mov.b64 	%rd9981, {%r6741, %r6740};
	shf.r.wrap.b32 	%r6742, %r6739, %r6738, 18;
	shf.r.wrap.b32 	%r6743, %r6738, %r6739, 18;
	mov.b64 	%rd9982, {%r6743, %r6742};
	xor.b64  	%rd9983, %rd9982, %rd9981;
	shf.l.wrap.b32 	%r6744, %r6738, %r6739, 23;
	shf.l.wrap.b32 	%r6745, %r6739, %r6738, 23;
	mov.b64 	%rd9984, {%r6745, %r6744};
	xor.b64  	%rd9985, %rd9983, %rd9984;
	xor.b64  	%rd9986, %rd9940, %rd9913;
	and.b64  	%rd9987, %rd9967, %rd9986;
	xor.b64  	%rd9988, %rd9987, %rd9913;
	add.s64 	%rd9989, %rd9886, %rd18734;
	ld.const.u64 	%rd9990, [%rd9980];
	add.s64 	%rd9991, %rd9989, %rd9990;
	add.s64 	%rd9992, %rd9991, %rd9988;
	add.s64 	%rd9993, %rd9992, %rd9985;
	add.s64 	%rd9994, %rd9993, %rd9897;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6746,%dummy}, %rd9978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6747}, %rd9978;
	}
	shf.r.wrap.b32 	%r6748, %r6747, %r6746, 28;
	shf.r.wrap.b32 	%r6749, %r6746, %r6747, 28;
	mov.b64 	%rd9995, {%r6749, %r6748};
	shf.l.wrap.b32 	%r6750, %r6746, %r6747, 30;
	shf.l.wrap.b32 	%r6751, %r6747, %r6746, 30;
	mov.b64 	%rd9996, {%r6751, %r6750};
	xor.b64  	%rd9997, %rd9996, %rd9995;
	shf.l.wrap.b32 	%r6752, %r6746, %r6747, 25;
	shf.l.wrap.b32 	%r6753, %r6747, %r6746, 25;
	mov.b64 	%rd9998, {%r6753, %r6752};
	xor.b64  	%rd9999, %rd9997, %rd9998;
	and.b64  	%rd10000, %rd9978, %rd9951;
	xor.b64  	%rd10001, %rd9978, %rd9951;
	and.b64  	%rd10002, %rd10001, %rd9924;
	or.b64  	%rd10003, %rd10002, %rd10000;
	add.s64 	%rd10004, %rd9993, %rd10003;
	add.s64 	%rd10005, %rd10004, %rd9999;
	add.s32 	%r6754, %r12994, 12;
	mul.wide.s32 	%rd10006, %r6754, 8;
	add.s64 	%rd10007, %rd18519, %rd10006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6755,%dummy}, %rd9994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6756}, %rd9994;
	}
	shf.r.wrap.b32 	%r6757, %r6756, %r6755, 14;
	shf.r.wrap.b32 	%r6758, %r6755, %r6756, 14;
	mov.b64 	%rd10008, {%r6758, %r6757};
	shf.r.wrap.b32 	%r6759, %r6756, %r6755, 18;
	shf.r.wrap.b32 	%r6760, %r6755, %r6756, 18;
	mov.b64 	%rd10009, {%r6760, %r6759};
	xor.b64  	%rd10010, %rd10009, %rd10008;
	shf.l.wrap.b32 	%r6761, %r6755, %r6756, 23;
	shf.l.wrap.b32 	%r6762, %r6756, %r6755, 23;
	mov.b64 	%rd10011, {%r6762, %r6761};
	xor.b64  	%rd10012, %rd10010, %rd10011;
	xor.b64  	%rd10013, %rd9967, %rd9940;
	and.b64  	%rd10014, %rd9994, %rd10013;
	xor.b64  	%rd10015, %rd10014, %rd9940;
	add.s64 	%rd10016, %rd9913, %rd18733;
	ld.const.u64 	%rd10017, [%rd10007];
	add.s64 	%rd10018, %rd10016, %rd10017;
	add.s64 	%rd10019, %rd10018, %rd10015;
	add.s64 	%rd10020, %rd10019, %rd10012;
	add.s64 	%rd18745, %rd10020, %rd9924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6763,%dummy}, %rd10005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6764}, %rd10005;
	}
	shf.r.wrap.b32 	%r6765, %r6764, %r6763, 28;
	shf.r.wrap.b32 	%r6766, %r6763, %r6764, 28;
	mov.b64 	%rd10021, {%r6766, %r6765};
	shf.l.wrap.b32 	%r6767, %r6763, %r6764, 30;
	shf.l.wrap.b32 	%r6768, %r6764, %r6763, 30;
	mov.b64 	%rd10022, {%r6768, %r6767};
	xor.b64  	%rd10023, %rd10022, %rd10021;
	shf.l.wrap.b32 	%r6769, %r6763, %r6764, 25;
	shf.l.wrap.b32 	%r6770, %r6764, %r6763, 25;
	mov.b64 	%rd10024, {%r6770, %r6769};
	xor.b64  	%rd10025, %rd10023, %rd10024;
	and.b64  	%rd10026, %rd10005, %rd9978;
	xor.b64  	%rd10027, %rd10005, %rd9978;
	and.b64  	%rd10028, %rd10027, %rd9951;
	or.b64  	%rd10029, %rd10028, %rd10026;
	add.s64 	%rd10030, %rd10020, %rd10029;
	add.s64 	%rd18741, %rd10030, %rd10025;
	add.s32 	%r6771, %r12994, 13;
	mul.wide.s32 	%rd10031, %r6771, 8;
	add.s64 	%rd10032, %rd18519, %rd10031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6772,%dummy}, %rd18745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6773}, %rd18745;
	}
	shf.r.wrap.b32 	%r6774, %r6773, %r6772, 14;
	shf.r.wrap.b32 	%r6775, %r6772, %r6773, 14;
	mov.b64 	%rd10033, {%r6775, %r6774};
	shf.r.wrap.b32 	%r6776, %r6773, %r6772, 18;
	shf.r.wrap.b32 	%r6777, %r6772, %r6773, 18;
	mov.b64 	%rd10034, {%r6777, %r6776};
	xor.b64  	%rd10035, %rd10034, %rd10033;
	shf.l.wrap.b32 	%r6778, %r6772, %r6773, 23;
	shf.l.wrap.b32 	%r6779, %r6773, %r6772, 23;
	mov.b64 	%rd10036, {%r6779, %r6778};
	xor.b64  	%rd10037, %rd10035, %rd10036;
	xor.b64  	%rd10038, %rd9994, %rd9967;
	and.b64  	%rd10039, %rd18745, %rd10038;
	xor.b64  	%rd10040, %rd10039, %rd9967;
	add.s64 	%rd10041, %rd9940, %rd18732;
	ld.const.u64 	%rd10042, [%rd10032];
	add.s64 	%rd10043, %rd10041, %rd10042;
	add.s64 	%rd10044, %rd10043, %rd10040;
	add.s64 	%rd10045, %rd10044, %rd10037;
	add.s64 	%rd18744, %rd10045, %rd9951;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6780,%dummy}, %rd18741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6781}, %rd18741;
	}
	shf.r.wrap.b32 	%r6782, %r6781, %r6780, 28;
	shf.r.wrap.b32 	%r6783, %r6780, %r6781, 28;
	mov.b64 	%rd10046, {%r6783, %r6782};
	shf.l.wrap.b32 	%r6784, %r6780, %r6781, 30;
	shf.l.wrap.b32 	%r6785, %r6781, %r6780, 30;
	mov.b64 	%rd10047, {%r6785, %r6784};
	xor.b64  	%rd10048, %rd10047, %rd10046;
	shf.l.wrap.b32 	%r6786, %r6780, %r6781, 25;
	shf.l.wrap.b32 	%r6787, %r6781, %r6780, 25;
	mov.b64 	%rd10049, {%r6787, %r6786};
	xor.b64  	%rd10050, %rd10048, %rd10049;
	and.b64  	%rd10051, %rd18741, %rd10005;
	xor.b64  	%rd10052, %rd18741, %rd10005;
	and.b64  	%rd10053, %rd10052, %rd9978;
	or.b64  	%rd10054, %rd10053, %rd10051;
	add.s64 	%rd10055, %rd10045, %rd10054;
	add.s64 	%rd18740, %rd10055, %rd10050;
	add.s32 	%r6788, %r12994, 14;
	mul.wide.s32 	%rd10056, %r6788, 8;
	add.s64 	%rd10057, %rd18519, %rd10056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6789,%dummy}, %rd18744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6790}, %rd18744;
	}
	shf.r.wrap.b32 	%r6791, %r6790, %r6789, 14;
	shf.r.wrap.b32 	%r6792, %r6789, %r6790, 14;
	mov.b64 	%rd10058, {%r6792, %r6791};
	shf.r.wrap.b32 	%r6793, %r6790, %r6789, 18;
	shf.r.wrap.b32 	%r6794, %r6789, %r6790, 18;
	mov.b64 	%rd10059, {%r6794, %r6793};
	xor.b64  	%rd10060, %rd10059, %rd10058;
	shf.l.wrap.b32 	%r6795, %r6789, %r6790, 23;
	shf.l.wrap.b32 	%r6796, %r6790, %r6789, 23;
	mov.b64 	%rd10061, {%r6796, %r6795};
	xor.b64  	%rd10062, %rd10060, %rd10061;
	xor.b64  	%rd10063, %rd18745, %rd9994;
	and.b64  	%rd10064, %rd18744, %rd10063;
	xor.b64  	%rd10065, %rd10064, %rd9994;
	add.s64 	%rd10066, %rd9967, %rd18731;
	ld.const.u64 	%rd10067, [%rd10057];
	add.s64 	%rd10068, %rd10066, %rd10067;
	add.s64 	%rd10069, %rd10068, %rd10065;
	add.s64 	%rd10070, %rd10069, %rd10062;
	add.s64 	%rd18743, %rd10070, %rd9978;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6797,%dummy}, %rd18740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6798}, %rd18740;
	}
	shf.r.wrap.b32 	%r6799, %r6798, %r6797, 28;
	shf.r.wrap.b32 	%r6800, %r6797, %r6798, 28;
	mov.b64 	%rd10071, {%r6800, %r6799};
	shf.l.wrap.b32 	%r6801, %r6797, %r6798, 30;
	shf.l.wrap.b32 	%r6802, %r6798, %r6797, 30;
	mov.b64 	%rd10072, {%r6802, %r6801};
	xor.b64  	%rd10073, %rd10072, %rd10071;
	shf.l.wrap.b32 	%r6803, %r6797, %r6798, 25;
	shf.l.wrap.b32 	%r6804, %r6798, %r6797, 25;
	mov.b64 	%rd10074, {%r6804, %r6803};
	xor.b64  	%rd10075, %rd10073, %rd10074;
	and.b64  	%rd10076, %rd18740, %rd18741;
	xor.b64  	%rd10077, %rd18740, %rd18741;
	and.b64  	%rd10078, %rd10077, %rd10005;
	or.b64  	%rd10079, %rd10078, %rd10076;
	add.s64 	%rd10080, %rd10070, %rd10079;
	add.s64 	%rd18739, %rd10080, %rd10075;
	add.s32 	%r6805, %r12994, 15;
	mul.wide.s32 	%rd10081, %r6805, 8;
	add.s64 	%rd10082, %rd18519, %rd10081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6806,%dummy}, %rd18743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6807}, %rd18743;
	}
	shf.r.wrap.b32 	%r6808, %r6807, %r6806, 14;
	shf.r.wrap.b32 	%r6809, %r6806, %r6807, 14;
	mov.b64 	%rd10083, {%r6809, %r6808};
	shf.r.wrap.b32 	%r6810, %r6807, %r6806, 18;
	shf.r.wrap.b32 	%r6811, %r6806, %r6807, 18;
	mov.b64 	%rd10084, {%r6811, %r6810};
	xor.b64  	%rd10085, %rd10084, %rd10083;
	shf.l.wrap.b32 	%r6812, %r6806, %r6807, 23;
	shf.l.wrap.b32 	%r6813, %r6807, %r6806, 23;
	mov.b64 	%rd10086, {%r6813, %r6812};
	xor.b64  	%rd10087, %rd10085, %rd10086;
	xor.b64  	%rd10088, %rd18744, %rd18745;
	and.b64  	%rd10089, %rd18743, %rd10088;
	xor.b64  	%rd10090, %rd10089, %rd18745;
	add.s64 	%rd10091, %rd9994, %rd18730;
	ld.const.u64 	%rd10092, [%rd10082];
	add.s64 	%rd10093, %rd10091, %rd10092;
	add.s64 	%rd10094, %rd10093, %rd10090;
	add.s64 	%rd10095, %rd10094, %rd10087;
	add.s64 	%rd18742, %rd10095, %rd10005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6814,%dummy}, %rd18739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6815}, %rd18739;
	}
	shf.r.wrap.b32 	%r6816, %r6815, %r6814, 28;
	shf.r.wrap.b32 	%r6817, %r6814, %r6815, 28;
	mov.b64 	%rd10096, {%r6817, %r6816};
	shf.l.wrap.b32 	%r6818, %r6814, %r6815, 30;
	shf.l.wrap.b32 	%r6819, %r6815, %r6814, 30;
	mov.b64 	%rd10097, {%r6819, %r6818};
	xor.b64  	%rd10098, %rd10097, %rd10096;
	shf.l.wrap.b32 	%r6820, %r6814, %r6815, 25;
	shf.l.wrap.b32 	%r6821, %r6815, %r6814, 25;
	mov.b64 	%rd10099, {%r6821, %r6820};
	xor.b64  	%rd10100, %rd10098, %rd10099;
	and.b64  	%rd10101, %rd18739, %rd18740;
	xor.b64  	%rd10102, %rd18739, %rd18740;
	and.b64  	%rd10103, %rd10102, %rd18741;
	or.b64  	%rd10104, %rd10103, %rd10101;
	add.s64 	%rd10105, %rd10095, %rd10104;
	add.s64 	%rd18738, %rd10105, %rd10100;
	add.s32 	%r12994, %r12994, 16;
	setp.lt.s32	%p119, %r12994, 80;
	@%p119 bra 	BB0_192;

	sub.s32 	%r12867, %r2137, %r241;
	add.s64 	%rd10106, %rd671, %rd18738;
	st.local.u64 	[%rd1], %rd10106;
	add.s64 	%rd10107, %rd672, %rd18739;
	st.local.u64 	[%rd1+8], %rd10107;
	add.s64 	%rd10108, %rd673, %rd18740;
	st.local.u64 	[%rd1+16], %rd10108;
	add.s64 	%rd10109, %rd670, %rd18741;
	st.local.u64 	[%rd1+24], %rd10109;
	add.s64 	%rd10110, %rd665, %rd18742;
	st.local.u64 	[%rd1+32], %rd10110;
	add.s64 	%rd10111, %rd667, %rd18743;
	st.local.u64 	[%rd1+40], %rd10111;
	add.s64 	%rd10112, %rd666, %rd18744;
	st.local.u64 	[%rd1+48], %rd10112;
	add.s64 	%rd10113, %rd668, %rd18745;
	st.local.u64 	[%rd1+56], %rd10113;
	sub.s32 	%r291, %r2, %r12867;
	setp.lt.s32	%p120, %r291, 1;
	@%p120 bra 	BB0_210;

	add.s32 	%r6823, %r240, %r236;
	and.b32  	%r292, %r6823, 3;
	setp.eq.s32	%p121, %r292, 0;
	mov.u32 	%r12998, 0;
	@%p121 bra 	BB0_200;

	setp.eq.s32	%p122, %r292, 1;
	mov.u32 	%r12996, 0;
	@%p122 bra 	BB0_199;

	setp.eq.s32	%p123, %r292, 2;
	mov.u32 	%r12995, 0;
	@%p123 bra 	BB0_198;

	sub.s32 	%r12868, %r2137, %r241;
	xor.b32  	%r6827, %r12868, 7;
	cvt.u64.u32	%rd10114, %r6827;
	add.s64 	%rd10115, %rd1463, %rd10114;
	ld.local.u8 	%rs201, [%rd10115];
	st.local.u8 	[%rd583], %rs201;
	mov.u32 	%r12995, 1;

BB0_198:
	sub.s32 	%r12869, %r2137, %r241;
	add.s32 	%r6828, %r12995, %r12869;
	xor.b32  	%r6829, %r6828, 7;
	cvt.s64.s32	%rd10116, %r6829;
	add.s64 	%rd10117, %rd1463, %rd10116;
	ld.local.u8 	%rs202, [%rd10117];
	xor.b32  	%r6830, %r12995, 7;
	cvt.u64.u32	%rd10118, %r6830;
	add.s64 	%rd10119, %rd89, %rd10118;
	st.local.u8 	[%rd10119], %rs202;
	add.s32 	%r12996, %r12995, 1;

BB0_199:
	sub.s32 	%r12870, %r2137, %r241;
	add.s32 	%r6831, %r12996, %r12870;
	xor.b32  	%r6832, %r6831, 7;
	cvt.s64.s32	%rd10120, %r6832;
	add.s64 	%rd10121, %rd1463, %rd10120;
	ld.local.u8 	%rs203, [%rd10121];
	xor.b32  	%r6833, %r12996, 7;
	cvt.s64.s32	%rd10122, %r6833;
	add.s64 	%rd10123, %rd89, %rd10122;
	st.local.u8 	[%rd10123], %rs203;
	add.s32 	%r12998, %r12996, 1;

BB0_200:
	add.s32 	%r6834, %r236, %r241;
	setp.lt.u32	%p124, %r6834, 4;
	@%p124 bra 	BB0_210;

BB0_201:
	sub.s32 	%r12871, %r2137, %r241;
	add.s32 	%r6835, %r12998, %r12871;
	xor.b32  	%r6836, %r6835, 7;
	cvt.s64.s32	%rd10124, %r6836;
	add.s64 	%rd10125, %rd1463, %rd10124;
	ld.local.u8 	%rs204, [%rd10125];
	xor.b32  	%r6837, %r12998, 7;
	cvt.s64.s32	%rd10126, %r6837;
	add.s64 	%rd10127, %rd89, %rd10126;
	st.local.u8 	[%rd10127], %rs204;
	add.s32 	%r6838, %r12998, 1;
	add.s32 	%r6839, %r6838, %r12871;
	xor.b32  	%r6840, %r6839, 7;
	cvt.s64.s32	%rd10128, %r6840;
	add.s64 	%rd10129, %rd1463, %rd10128;
	ld.local.u8 	%rs205, [%rd10129];
	xor.b32  	%r6841, %r6838, 7;
	cvt.s64.s32	%rd10130, %r6841;
	add.s64 	%rd10131, %rd89, %rd10130;
	st.local.u8 	[%rd10131], %rs205;
	add.s32 	%r6842, %r12998, 2;
	add.s32 	%r6843, %r6842, %r12871;
	xor.b32  	%r6844, %r6843, 7;
	cvt.s64.s32	%rd10132, %r6844;
	add.s64 	%rd10133, %rd1463, %rd10132;
	ld.local.u8 	%rs206, [%rd10133];
	xor.b32  	%r6845, %r6842, 7;
	cvt.s64.s32	%rd10134, %r6845;
	add.s64 	%rd10135, %rd89, %rd10134;
	st.local.u8 	[%rd10135], %rs206;
	add.s32 	%r6846, %r12998, 3;
	add.s32 	%r6847, %r6846, %r12871;
	xor.b32  	%r6848, %r6847, 7;
	cvt.s64.s32	%rd10136, %r6848;
	add.s64 	%rd10137, %rd1463, %rd10136;
	ld.local.u8 	%rs207, [%rd10137];
	xor.b32  	%r6849, %r6846, 7;
	cvt.s64.s32	%rd10138, %r6849;
	add.s64 	%rd10139, %rd89, %rd10138;
	st.local.u8 	[%rd10139], %rs207;
	add.s32 	%r12998, %r12998, 4;
	setp.lt.s32	%p125, %r12998, %r291;
	@%p125 bra 	BB0_201;
	bra.uni 	BB0_210;

BB0_162:
	sub.s32 	%r242, %r2137, %r241;
	max.u32 	%r243, %r242, %r5183;
	and.b32  	%r244, %r243, 3;
	setp.eq.s32	%p101, %r244, 0;
	mov.u32 	%r12979, 0;
	@%p101 bra 	BB0_168;

	setp.eq.s32	%p102, %r244, 1;
	mov.u32 	%r12975, 0;
	@%p102 bra 	BB0_167;

	setp.eq.s32	%p103, %r244, 2;
	mov.u32 	%r12973, 0;
	@%p103 bra 	BB0_166;

	ld.local.u8 	%rs112, [%rd584];
	xor.b32  	%r5193, %r241, 7;
	cvt.u64.u32	%rd7906, %r5193;
	add.s64 	%rd7907, %rd89, %rd7906;
	st.local.u8 	[%rd7907], %rs112;
	add.s32 	%r241, %r241, 1;
	mov.u32 	%r12973, %r5183;

BB0_166:
	xor.b32  	%r5194, %r12973, 7;
	cvt.u64.u32	%rd7908, %r5194;
	add.s64 	%rd7909, %rd339, %rd7908;
	ld.local.u8 	%rs113, [%rd7909];
	xor.b32  	%r5195, %r241, 7;
	cvt.s64.s32	%rd7910, %r5195;
	add.s64 	%rd7911, %rd89, %rd7910;
	st.local.u8 	[%rd7911], %rs113;
	add.s32 	%r241, %r241, 1;
	add.s32 	%r12975, %r12973, 1;

BB0_167:
	xor.b32  	%r5196, %r12975, 7;
	cvt.s64.s32	%rd7912, %r5196;
	add.s64 	%rd7913, %rd339, %rd7912;
	ld.local.u8 	%rs114, [%rd7913];
	xor.b32  	%r5197, %r241, 7;
	cvt.s64.s32	%rd7914, %r5197;
	add.s64 	%rd7915, %rd89, %rd7914;
	st.local.u8 	[%rd7915], %rs114;
	add.s32 	%r241, %r241, 1;
	add.s32 	%r12979, %r12975, 1;

BB0_168:
	setp.lt.u32	%p104, %r243, 4;
	@%p104 bra 	BB0_170;

BB0_169:
	xor.b32  	%r5198, %r12979, 7;
	cvt.s64.s32	%rd7916, %r5198;
	add.s64 	%rd7917, %rd339, %rd7916;
	ld.local.u8 	%rs115, [%rd7917];
	xor.b32  	%r5199, %r241, 7;
	cvt.s64.s32	%rd7918, %r5199;
	add.s64 	%rd7919, %rd89, %rd7918;
	st.local.u8 	[%rd7919], %rs115;
	add.s32 	%r5200, %r12979, 1;
	xor.b32  	%r5201, %r5200, 7;
	cvt.s64.s32	%rd7920, %r5201;
	add.s64 	%rd7921, %rd339, %rd7920;
	ld.local.u8 	%rs116, [%rd7921];
	add.s32 	%r5202, %r241, 1;
	xor.b32  	%r5203, %r5202, 7;
	cvt.s64.s32	%rd7922, %r5203;
	add.s64 	%rd7923, %rd89, %rd7922;
	st.local.u8 	[%rd7923], %rs116;
	add.s32 	%r5204, %r12979, 2;
	xor.b32  	%r5205, %r5204, 7;
	cvt.s64.s32	%rd7924, %r5205;
	add.s64 	%rd7925, %rd339, %rd7924;
	ld.local.u8 	%rs117, [%rd7925];
	add.s32 	%r5206, %r241, 2;
	xor.b32  	%r5207, %r5206, 7;
	cvt.s64.s32	%rd7926, %r5207;
	add.s64 	%rd7927, %rd89, %rd7926;
	st.local.u8 	[%rd7927], %rs117;
	add.s32 	%r5208, %r12979, 3;
	xor.b32  	%r5209, %r5208, 7;
	cvt.s64.s32	%rd7928, %r5209;
	add.s64 	%rd7929, %rd339, %rd7928;
	ld.local.u8 	%rs118, [%rd7929];
	add.s32 	%r5210, %r241, 3;
	xor.b32  	%r5211, %r5210, 7;
	cvt.s64.s32	%rd7930, %r5211;
	add.s64 	%rd7931, %rd89, %rd7930;
	st.local.u8 	[%rd7931], %rs118;
	add.s32 	%r241, %r241, 4;
	add.s32 	%r12979, %r12979, 4;
	setp.lt.s32	%p105, %r12979, %r242;
	@%p105 bra 	BB0_169;

BB0_170:
	ld.local.u64 	%rd585, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5213,%dummy}, %rd585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5214}, %rd585;
	}
	shf.r.wrap.b32 	%r5215, %r5214, %r5213, 14;
	shf.r.wrap.b32 	%r5216, %r5213, %r5214, 14;
	mov.b64 	%rd7932, {%r5216, %r5215};
	shf.r.wrap.b32 	%r5217, %r5214, %r5213, 18;
	shf.r.wrap.b32 	%r5218, %r5213, %r5214, 18;
	mov.b64 	%rd7933, {%r5218, %r5217};
	xor.b64  	%rd7934, %rd7933, %rd7932;
	shf.l.wrap.b32 	%r5219, %r5213, %r5214, 23;
	shf.l.wrap.b32 	%r5220, %r5214, %r5213, 23;
	mov.b64 	%rd7935, {%r5220, %r5219};
	xor.b64  	%rd7936, %rd7934, %rd7935;
	ld.local.u64 	%rd586, [%rd1+48];
	ld.local.u64 	%rd587, [%rd1+40];
	xor.b64  	%rd7937, %rd586, %rd587;
	and.b64  	%rd7938, %rd7937, %rd585;
	xor.b64  	%rd7939, %rd7938, %rd586;
	ld.local.u64 	%rd588, [%rd1+56];
	ld.local.u64 	%rd18722, [%rd1+64];
	add.s64 	%rd7940, %rd588, %rd18722;
	add.s64 	%rd7941, %rd7940, %rd18610;
	add.s64 	%rd7942, %rd7941, %rd7939;
	add.s64 	%rd7943, %rd7942, %rd7936;
	ld.local.u64 	%rd590, [%rd1+24];
	add.s64 	%rd7944, %rd7943, %rd590;
	ld.local.u64 	%rd591, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5221,%dummy}, %rd591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5222}, %rd591;
	}
	shf.r.wrap.b32 	%r5223, %r5222, %r5221, 28;
	shf.r.wrap.b32 	%r5224, %r5221, %r5222, 28;
	mov.b64 	%rd7945, {%r5224, %r5223};
	shf.l.wrap.b32 	%r5225, %r5221, %r5222, 30;
	shf.l.wrap.b32 	%r5226, %r5222, %r5221, 30;
	mov.b64 	%rd7946, {%r5226, %r5225};
	xor.b64  	%rd7947, %rd7946, %rd7945;
	shf.l.wrap.b32 	%r5227, %r5221, %r5222, 25;
	shf.l.wrap.b32 	%r5228, %r5222, %r5221, 25;
	mov.b64 	%rd7948, {%r5228, %r5227};
	xor.b64  	%rd7949, %rd7947, %rd7948;
	ld.local.u64 	%rd592, [%rd1+8];
	and.b64  	%rd7950, %rd592, %rd591;
	xor.b64  	%rd7951, %rd592, %rd591;
	ld.local.u64 	%rd593, [%rd1+16];
	and.b64  	%rd7952, %rd593, %rd7951;
	or.b64  	%rd7953, %rd7952, %rd7950;
	add.s64 	%rd7954, %rd7943, %rd7953;
	add.s64 	%rd7955, %rd7954, %rd7949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5229,%dummy}, %rd7944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5230}, %rd7944;
	}
	shf.r.wrap.b32 	%r5231, %r5230, %r5229, 14;
	shf.r.wrap.b32 	%r5232, %r5229, %r5230, 14;
	mov.b64 	%rd7956, {%r5232, %r5231};
	shf.r.wrap.b32 	%r5233, %r5230, %r5229, 18;
	shf.r.wrap.b32 	%r5234, %r5229, %r5230, 18;
	mov.b64 	%rd7957, {%r5234, %r5233};
	xor.b64  	%rd7958, %rd7957, %rd7956;
	shf.l.wrap.b32 	%r5235, %r5229, %r5230, 23;
	shf.l.wrap.b32 	%r5236, %r5230, %r5229, 23;
	mov.b64 	%rd7959, {%r5236, %r5235};
	xor.b64  	%rd7960, %rd7958, %rd7959;
	xor.b64  	%rd7961, %rd587, %rd585;
	and.b64  	%rd7962, %rd7944, %rd7961;
	xor.b64  	%rd7963, %rd7962, %rd587;
	ld.local.u64 	%rd18723, [%rd1+72];
	add.s64 	%rd7964, %rd586, %rd18723;
	add.s64 	%rd7965, %rd7964, %rd18609;
	add.s64 	%rd7966, %rd7965, %rd7963;
	add.s64 	%rd7967, %rd7966, %rd7960;
	add.s64 	%rd7968, %rd7967, %rd593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5237,%dummy}, %rd7955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5238}, %rd7955;
	}
	shf.r.wrap.b32 	%r5239, %r5238, %r5237, 28;
	shf.r.wrap.b32 	%r5240, %r5237, %r5238, 28;
	mov.b64 	%rd7969, {%r5240, %r5239};
	shf.l.wrap.b32 	%r5241, %r5237, %r5238, 30;
	shf.l.wrap.b32 	%r5242, %r5238, %r5237, 30;
	mov.b64 	%rd7970, {%r5242, %r5241};
	xor.b64  	%rd7971, %rd7970, %rd7969;
	shf.l.wrap.b32 	%r5243, %r5237, %r5238, 25;
	shf.l.wrap.b32 	%r5244, %r5238, %r5237, 25;
	mov.b64 	%rd7972, {%r5244, %r5243};
	xor.b64  	%rd7973, %rd7971, %rd7972;
	and.b64  	%rd7974, %rd7955, %rd591;
	xor.b64  	%rd7975, %rd7955, %rd591;
	and.b64  	%rd7976, %rd7975, %rd592;
	or.b64  	%rd7977, %rd7976, %rd7974;
	add.s64 	%rd7978, %rd7967, %rd7977;
	add.s64 	%rd7979, %rd7978, %rd7973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5245,%dummy}, %rd7968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5246}, %rd7968;
	}
	shf.r.wrap.b32 	%r5247, %r5246, %r5245, 14;
	shf.r.wrap.b32 	%r5248, %r5245, %r5246, 14;
	mov.b64 	%rd7980, {%r5248, %r5247};
	shf.r.wrap.b32 	%r5249, %r5246, %r5245, 18;
	shf.r.wrap.b32 	%r5250, %r5245, %r5246, 18;
	mov.b64 	%rd7981, {%r5250, %r5249};
	xor.b64  	%rd7982, %rd7981, %rd7980;
	shf.l.wrap.b32 	%r5251, %r5245, %r5246, 23;
	shf.l.wrap.b32 	%r5252, %r5246, %r5245, 23;
	mov.b64 	%rd7983, {%r5252, %r5251};
	xor.b64  	%rd7984, %rd7982, %rd7983;
	xor.b64  	%rd7985, %rd7944, %rd585;
	and.b64  	%rd7986, %rd7968, %rd7985;
	xor.b64  	%rd7987, %rd7986, %rd585;
	ld.local.u64 	%rd18724, [%rd1+80];
	add.s64 	%rd7988, %rd587, %rd18724;
	add.s64 	%rd7989, %rd7988, %rd18608;
	add.s64 	%rd7990, %rd7989, %rd7987;
	add.s64 	%rd7991, %rd7990, %rd7984;
	add.s64 	%rd7992, %rd7991, %rd592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5253,%dummy}, %rd7979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5254}, %rd7979;
	}
	shf.r.wrap.b32 	%r5255, %r5254, %r5253, 28;
	shf.r.wrap.b32 	%r5256, %r5253, %r5254, 28;
	mov.b64 	%rd7993, {%r5256, %r5255};
	shf.l.wrap.b32 	%r5257, %r5253, %r5254, 30;
	shf.l.wrap.b32 	%r5258, %r5254, %r5253, 30;
	mov.b64 	%rd7994, {%r5258, %r5257};
	xor.b64  	%rd7995, %rd7994, %rd7993;
	shf.l.wrap.b32 	%r5259, %r5253, %r5254, 25;
	shf.l.wrap.b32 	%r5260, %r5254, %r5253, 25;
	mov.b64 	%rd7996, {%r5260, %r5259};
	xor.b64  	%rd7997, %rd7995, %rd7996;
	and.b64  	%rd7998, %rd7979, %rd7955;
	xor.b64  	%rd7999, %rd7979, %rd7955;
	and.b64  	%rd8000, %rd7999, %rd591;
	or.b64  	%rd8001, %rd8000, %rd7998;
	add.s64 	%rd8002, %rd7991, %rd8001;
	add.s64 	%rd8003, %rd8002, %rd7997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5261,%dummy}, %rd7992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5262}, %rd7992;
	}
	shf.r.wrap.b32 	%r5263, %r5262, %r5261, 14;
	shf.r.wrap.b32 	%r5264, %r5261, %r5262, 14;
	mov.b64 	%rd8004, {%r5264, %r5263};
	shf.r.wrap.b32 	%r5265, %r5262, %r5261, 18;
	shf.r.wrap.b32 	%r5266, %r5261, %r5262, 18;
	mov.b64 	%rd8005, {%r5266, %r5265};
	xor.b64  	%rd8006, %rd8005, %rd8004;
	shf.l.wrap.b32 	%r5267, %r5261, %r5262, 23;
	shf.l.wrap.b32 	%r5268, %r5262, %r5261, 23;
	mov.b64 	%rd8007, {%r5268, %r5267};
	xor.b64  	%rd8008, %rd8006, %rd8007;
	xor.b64  	%rd8009, %rd7968, %rd7944;
	and.b64  	%rd8010, %rd7992, %rd8009;
	xor.b64  	%rd8011, %rd8010, %rd7944;
	ld.local.u64 	%rd18725, [%rd1+88];
	add.s64 	%rd8012, %rd585, %rd18725;
	add.s64 	%rd8013, %rd8012, %rd18607;
	add.s64 	%rd8014, %rd8013, %rd8011;
	add.s64 	%rd8015, %rd8014, %rd8008;
	add.s64 	%rd8016, %rd8015, %rd591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5269,%dummy}, %rd8003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5270}, %rd8003;
	}
	shf.r.wrap.b32 	%r5271, %r5270, %r5269, 28;
	shf.r.wrap.b32 	%r5272, %r5269, %r5270, 28;
	mov.b64 	%rd8017, {%r5272, %r5271};
	shf.l.wrap.b32 	%r5273, %r5269, %r5270, 30;
	shf.l.wrap.b32 	%r5274, %r5270, %r5269, 30;
	mov.b64 	%rd8018, {%r5274, %r5273};
	xor.b64  	%rd8019, %rd8018, %rd8017;
	shf.l.wrap.b32 	%r5275, %r5269, %r5270, 25;
	shf.l.wrap.b32 	%r5276, %r5270, %r5269, 25;
	mov.b64 	%rd8020, {%r5276, %r5275};
	xor.b64  	%rd8021, %rd8019, %rd8020;
	and.b64  	%rd8022, %rd8003, %rd7979;
	xor.b64  	%rd8023, %rd8003, %rd7979;
	and.b64  	%rd8024, %rd8023, %rd7955;
	or.b64  	%rd8025, %rd8024, %rd8022;
	add.s64 	%rd8026, %rd8015, %rd8025;
	add.s64 	%rd8027, %rd8026, %rd8021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5277,%dummy}, %rd8016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5278}, %rd8016;
	}
	shf.r.wrap.b32 	%r5279, %r5278, %r5277, 14;
	shf.r.wrap.b32 	%r5280, %r5277, %r5278, 14;
	mov.b64 	%rd8028, {%r5280, %r5279};
	shf.r.wrap.b32 	%r5281, %r5278, %r5277, 18;
	shf.r.wrap.b32 	%r5282, %r5277, %r5278, 18;
	mov.b64 	%rd8029, {%r5282, %r5281};
	xor.b64  	%rd8030, %rd8029, %rd8028;
	shf.l.wrap.b32 	%r5283, %r5277, %r5278, 23;
	shf.l.wrap.b32 	%r5284, %r5278, %r5277, 23;
	mov.b64 	%rd8031, {%r5284, %r5283};
	xor.b64  	%rd8032, %rd8030, %rd8031;
	xor.b64  	%rd8033, %rd7992, %rd7968;
	and.b64  	%rd8034, %rd8016, %rd8033;
	xor.b64  	%rd8035, %rd8034, %rd7968;
	ld.local.u64 	%rd18726, [%rd1+96];
	add.s64 	%rd8036, %rd7944, %rd18726;
	add.s64 	%rd8037, %rd8036, %rd18606;
	add.s64 	%rd8038, %rd8037, %rd8035;
	add.s64 	%rd8039, %rd8038, %rd8032;
	add.s64 	%rd8040, %rd8039, %rd7955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5285,%dummy}, %rd8027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5286}, %rd8027;
	}
	shf.r.wrap.b32 	%r5287, %r5286, %r5285, 28;
	shf.r.wrap.b32 	%r5288, %r5285, %r5286, 28;
	mov.b64 	%rd8041, {%r5288, %r5287};
	shf.l.wrap.b32 	%r5289, %r5285, %r5286, 30;
	shf.l.wrap.b32 	%r5290, %r5286, %r5285, 30;
	mov.b64 	%rd8042, {%r5290, %r5289};
	xor.b64  	%rd8043, %rd8042, %rd8041;
	shf.l.wrap.b32 	%r5291, %r5285, %r5286, 25;
	shf.l.wrap.b32 	%r5292, %r5286, %r5285, 25;
	mov.b64 	%rd8044, {%r5292, %r5291};
	xor.b64  	%rd8045, %rd8043, %rd8044;
	and.b64  	%rd8046, %rd8027, %rd8003;
	xor.b64  	%rd8047, %rd8027, %rd8003;
	and.b64  	%rd8048, %rd8047, %rd7979;
	or.b64  	%rd8049, %rd8048, %rd8046;
	add.s64 	%rd8050, %rd8039, %rd8049;
	add.s64 	%rd8051, %rd8050, %rd8045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5293,%dummy}, %rd8040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5294}, %rd8040;
	}
	shf.r.wrap.b32 	%r5295, %r5294, %r5293, 14;
	shf.r.wrap.b32 	%r5296, %r5293, %r5294, 14;
	mov.b64 	%rd8052, {%r5296, %r5295};
	shf.r.wrap.b32 	%r5297, %r5294, %r5293, 18;
	shf.r.wrap.b32 	%r5298, %r5293, %r5294, 18;
	mov.b64 	%rd8053, {%r5298, %r5297};
	xor.b64  	%rd8054, %rd8053, %rd8052;
	shf.l.wrap.b32 	%r5299, %r5293, %r5294, 23;
	shf.l.wrap.b32 	%r5300, %r5294, %r5293, 23;
	mov.b64 	%rd8055, {%r5300, %r5299};
	xor.b64  	%rd8056, %rd8054, %rd8055;
	xor.b64  	%rd8057, %rd8016, %rd7992;
	and.b64  	%rd8058, %rd8040, %rd8057;
	xor.b64  	%rd8059, %rd8058, %rd7992;
	ld.local.u64 	%rd18727, [%rd1+104];
	add.s64 	%rd8060, %rd7968, %rd18727;
	add.s64 	%rd8061, %rd8060, %rd18605;
	add.s64 	%rd8062, %rd8061, %rd8059;
	add.s64 	%rd8063, %rd8062, %rd8056;
	add.s64 	%rd8064, %rd8063, %rd7979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5301,%dummy}, %rd8051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5302}, %rd8051;
	}
	shf.r.wrap.b32 	%r5303, %r5302, %r5301, 28;
	shf.r.wrap.b32 	%r5304, %r5301, %r5302, 28;
	mov.b64 	%rd8065, {%r5304, %r5303};
	shf.l.wrap.b32 	%r5305, %r5301, %r5302, 30;
	shf.l.wrap.b32 	%r5306, %r5302, %r5301, 30;
	mov.b64 	%rd8066, {%r5306, %r5305};
	xor.b64  	%rd8067, %rd8066, %rd8065;
	shf.l.wrap.b32 	%r5307, %r5301, %r5302, 25;
	shf.l.wrap.b32 	%r5308, %r5302, %r5301, 25;
	mov.b64 	%rd8068, {%r5308, %r5307};
	xor.b64  	%rd8069, %rd8067, %rd8068;
	and.b64  	%rd8070, %rd8051, %rd8027;
	xor.b64  	%rd8071, %rd8051, %rd8027;
	and.b64  	%rd8072, %rd8071, %rd8003;
	or.b64  	%rd8073, %rd8072, %rd8070;
	add.s64 	%rd8074, %rd8063, %rd8073;
	add.s64 	%rd8075, %rd8074, %rd8069;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5309,%dummy}, %rd8064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5310}, %rd8064;
	}
	shf.r.wrap.b32 	%r5311, %r5310, %r5309, 14;
	shf.r.wrap.b32 	%r5312, %r5309, %r5310, 14;
	mov.b64 	%rd8076, {%r5312, %r5311};
	shf.r.wrap.b32 	%r5313, %r5310, %r5309, 18;
	shf.r.wrap.b32 	%r5314, %r5309, %r5310, 18;
	mov.b64 	%rd8077, {%r5314, %r5313};
	xor.b64  	%rd8078, %rd8077, %rd8076;
	shf.l.wrap.b32 	%r5315, %r5309, %r5310, 23;
	shf.l.wrap.b32 	%r5316, %r5310, %r5309, 23;
	mov.b64 	%rd8079, {%r5316, %r5315};
	xor.b64  	%rd8080, %rd8078, %rd8079;
	xor.b64  	%rd8081, %rd8040, %rd8016;
	and.b64  	%rd8082, %rd8064, %rd8081;
	xor.b64  	%rd8083, %rd8082, %rd8016;
	ld.local.u64 	%rd18728, [%rd1+112];
	add.s64 	%rd8084, %rd7992, %rd18728;
	add.s64 	%rd8085, %rd8084, %rd18604;
	add.s64 	%rd8086, %rd8085, %rd8083;
	add.s64 	%rd8087, %rd8086, %rd8080;
	add.s64 	%rd8088, %rd8087, %rd8003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5317,%dummy}, %rd8075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5318}, %rd8075;
	}
	shf.r.wrap.b32 	%r5319, %r5318, %r5317, 28;
	shf.r.wrap.b32 	%r5320, %r5317, %r5318, 28;
	mov.b64 	%rd8089, {%r5320, %r5319};
	shf.l.wrap.b32 	%r5321, %r5317, %r5318, 30;
	shf.l.wrap.b32 	%r5322, %r5318, %r5317, 30;
	mov.b64 	%rd8090, {%r5322, %r5321};
	xor.b64  	%rd8091, %rd8090, %rd8089;
	shf.l.wrap.b32 	%r5323, %r5317, %r5318, 25;
	shf.l.wrap.b32 	%r5324, %r5318, %r5317, 25;
	mov.b64 	%rd8092, {%r5324, %r5323};
	xor.b64  	%rd8093, %rd8091, %rd8092;
	and.b64  	%rd8094, %rd8075, %rd8051;
	xor.b64  	%rd8095, %rd8075, %rd8051;
	and.b64  	%rd8096, %rd8095, %rd8027;
	or.b64  	%rd8097, %rd8096, %rd8094;
	add.s64 	%rd8098, %rd8087, %rd8097;
	add.s64 	%rd8099, %rd8098, %rd8093;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5325,%dummy}, %rd8088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5326}, %rd8088;
	}
	shf.r.wrap.b32 	%r5327, %r5326, %r5325, 14;
	shf.r.wrap.b32 	%r5328, %r5325, %r5326, 14;
	mov.b64 	%rd8100, {%r5328, %r5327};
	shf.r.wrap.b32 	%r5329, %r5326, %r5325, 18;
	shf.r.wrap.b32 	%r5330, %r5325, %r5326, 18;
	mov.b64 	%rd8101, {%r5330, %r5329};
	xor.b64  	%rd8102, %rd8101, %rd8100;
	shf.l.wrap.b32 	%r5331, %r5325, %r5326, 23;
	shf.l.wrap.b32 	%r5332, %r5326, %r5325, 23;
	mov.b64 	%rd8103, {%r5332, %r5331};
	xor.b64  	%rd8104, %rd8102, %rd8103;
	xor.b64  	%rd8105, %rd8064, %rd8040;
	and.b64  	%rd8106, %rd8088, %rd8105;
	xor.b64  	%rd8107, %rd8106, %rd8040;
	ld.local.u64 	%rd18729, [%rd1+120];
	add.s64 	%rd8108, %rd8016, %rd18729;
	add.s64 	%rd8109, %rd8108, %rd18603;
	add.s64 	%rd8110, %rd8109, %rd8107;
	add.s64 	%rd8111, %rd8110, %rd8104;
	add.s64 	%rd8112, %rd8111, %rd8027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5333,%dummy}, %rd8099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5334}, %rd8099;
	}
	shf.r.wrap.b32 	%r5335, %r5334, %r5333, 28;
	shf.r.wrap.b32 	%r5336, %r5333, %r5334, 28;
	mov.b64 	%rd8113, {%r5336, %r5335};
	shf.l.wrap.b32 	%r5337, %r5333, %r5334, 30;
	shf.l.wrap.b32 	%r5338, %r5334, %r5333, 30;
	mov.b64 	%rd8114, {%r5338, %r5337};
	xor.b64  	%rd8115, %rd8114, %rd8113;
	shf.l.wrap.b32 	%r5339, %r5333, %r5334, 25;
	shf.l.wrap.b32 	%r5340, %r5334, %r5333, 25;
	mov.b64 	%rd8116, {%r5340, %r5339};
	xor.b64  	%rd8117, %rd8115, %rd8116;
	and.b64  	%rd8118, %rd8099, %rd8075;
	xor.b64  	%rd8119, %rd8099, %rd8075;
	and.b64  	%rd8120, %rd8119, %rd8051;
	or.b64  	%rd8121, %rd8120, %rd8118;
	add.s64 	%rd8122, %rd8111, %rd8121;
	add.s64 	%rd8123, %rd8122, %rd8117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5341,%dummy}, %rd8112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5342}, %rd8112;
	}
	shf.r.wrap.b32 	%r5343, %r5342, %r5341, 14;
	shf.r.wrap.b32 	%r5344, %r5341, %r5342, 14;
	mov.b64 	%rd8124, {%r5344, %r5343};
	shf.r.wrap.b32 	%r5345, %r5342, %r5341, 18;
	shf.r.wrap.b32 	%r5346, %r5341, %r5342, 18;
	mov.b64 	%rd8125, {%r5346, %r5345};
	xor.b64  	%rd8126, %rd8125, %rd8124;
	shf.l.wrap.b32 	%r5347, %r5341, %r5342, 23;
	shf.l.wrap.b32 	%r5348, %r5342, %r5341, 23;
	mov.b64 	%rd8127, {%r5348, %r5347};
	xor.b64  	%rd8128, %rd8126, %rd8127;
	xor.b64  	%rd8129, %rd8088, %rd8064;
	and.b64  	%rd8130, %rd8112, %rd8129;
	xor.b64  	%rd8131, %rd8130, %rd8064;
	ld.local.u64 	%rd18713, [%rd1+128];
	add.s64 	%rd8132, %rd8040, %rd18713;
	add.s64 	%rd8133, %rd8132, %rd18602;
	add.s64 	%rd8134, %rd8133, %rd8131;
	add.s64 	%rd8135, %rd8134, %rd8128;
	add.s64 	%rd8136, %rd8135, %rd8051;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5349,%dummy}, %rd8123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5350}, %rd8123;
	}
	shf.r.wrap.b32 	%r5351, %r5350, %r5349, 28;
	shf.r.wrap.b32 	%r5352, %r5349, %r5350, 28;
	mov.b64 	%rd8137, {%r5352, %r5351};
	shf.l.wrap.b32 	%r5353, %r5349, %r5350, 30;
	shf.l.wrap.b32 	%r5354, %r5350, %r5349, 30;
	mov.b64 	%rd8138, {%r5354, %r5353};
	xor.b64  	%rd8139, %rd8138, %rd8137;
	shf.l.wrap.b32 	%r5355, %r5349, %r5350, 25;
	shf.l.wrap.b32 	%r5356, %r5350, %r5349, 25;
	mov.b64 	%rd8140, {%r5356, %r5355};
	xor.b64  	%rd8141, %rd8139, %rd8140;
	and.b64  	%rd8142, %rd8123, %rd8099;
	xor.b64  	%rd8143, %rd8123, %rd8099;
	and.b64  	%rd8144, %rd8143, %rd8075;
	or.b64  	%rd8145, %rd8144, %rd8142;
	add.s64 	%rd8146, %rd8135, %rd8145;
	add.s64 	%rd8147, %rd8146, %rd8141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5357,%dummy}, %rd8136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5358}, %rd8136;
	}
	shf.r.wrap.b32 	%r5359, %r5358, %r5357, 14;
	shf.r.wrap.b32 	%r5360, %r5357, %r5358, 14;
	mov.b64 	%rd8148, {%r5360, %r5359};
	shf.r.wrap.b32 	%r5361, %r5358, %r5357, 18;
	shf.r.wrap.b32 	%r5362, %r5357, %r5358, 18;
	mov.b64 	%rd8149, {%r5362, %r5361};
	xor.b64  	%rd8150, %rd8149, %rd8148;
	shf.l.wrap.b32 	%r5363, %r5357, %r5358, 23;
	shf.l.wrap.b32 	%r5364, %r5358, %r5357, 23;
	mov.b64 	%rd8151, {%r5364, %r5363};
	xor.b64  	%rd8152, %rd8150, %rd8151;
	xor.b64  	%rd8153, %rd8112, %rd8088;
	and.b64  	%rd8154, %rd8136, %rd8153;
	xor.b64  	%rd8155, %rd8154, %rd8088;
	ld.local.u64 	%rd18712, [%rd1+136];
	add.s64 	%rd8156, %rd8064, %rd18712;
	add.s64 	%rd8157, %rd8156, %rd18601;
	add.s64 	%rd8158, %rd8157, %rd8155;
	add.s64 	%rd8159, %rd8158, %rd8152;
	add.s64 	%rd8160, %rd8159, %rd8075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5365,%dummy}, %rd8147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5366}, %rd8147;
	}
	shf.r.wrap.b32 	%r5367, %r5366, %r5365, 28;
	shf.r.wrap.b32 	%r5368, %r5365, %r5366, 28;
	mov.b64 	%rd8161, {%r5368, %r5367};
	shf.l.wrap.b32 	%r5369, %r5365, %r5366, 30;
	shf.l.wrap.b32 	%r5370, %r5366, %r5365, 30;
	mov.b64 	%rd8162, {%r5370, %r5369};
	xor.b64  	%rd8163, %rd8162, %rd8161;
	shf.l.wrap.b32 	%r5371, %r5365, %r5366, 25;
	shf.l.wrap.b32 	%r5372, %r5366, %r5365, 25;
	mov.b64 	%rd8164, {%r5372, %r5371};
	xor.b64  	%rd8165, %rd8163, %rd8164;
	and.b64  	%rd8166, %rd8147, %rd8123;
	xor.b64  	%rd8167, %rd8147, %rd8123;
	and.b64  	%rd8168, %rd8167, %rd8099;
	or.b64  	%rd8169, %rd8168, %rd8166;
	add.s64 	%rd8170, %rd8159, %rd8169;
	add.s64 	%rd8171, %rd8170, %rd8165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5373,%dummy}, %rd8160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5374}, %rd8160;
	}
	shf.r.wrap.b32 	%r5375, %r5374, %r5373, 14;
	shf.r.wrap.b32 	%r5376, %r5373, %r5374, 14;
	mov.b64 	%rd8172, {%r5376, %r5375};
	shf.r.wrap.b32 	%r5377, %r5374, %r5373, 18;
	shf.r.wrap.b32 	%r5378, %r5373, %r5374, 18;
	mov.b64 	%rd8173, {%r5378, %r5377};
	xor.b64  	%rd8174, %rd8173, %rd8172;
	shf.l.wrap.b32 	%r5379, %r5373, %r5374, 23;
	shf.l.wrap.b32 	%r5380, %r5374, %r5373, 23;
	mov.b64 	%rd8175, {%r5380, %r5379};
	xor.b64  	%rd8176, %rd8174, %rd8175;
	xor.b64  	%rd8177, %rd8136, %rd8112;
	and.b64  	%rd8178, %rd8160, %rd8177;
	xor.b64  	%rd8179, %rd8178, %rd8112;
	ld.local.u64 	%rd18711, [%rd1+144];
	add.s64 	%rd8180, %rd8088, %rd18711;
	add.s64 	%rd8181, %rd8180, %rd18600;
	add.s64 	%rd8182, %rd8181, %rd8179;
	add.s64 	%rd8183, %rd8182, %rd8176;
	add.s64 	%rd8184, %rd8183, %rd8099;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5381,%dummy}, %rd8171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5382}, %rd8171;
	}
	shf.r.wrap.b32 	%r5383, %r5382, %r5381, 28;
	shf.r.wrap.b32 	%r5384, %r5381, %r5382, 28;
	mov.b64 	%rd8185, {%r5384, %r5383};
	shf.l.wrap.b32 	%r5385, %r5381, %r5382, 30;
	shf.l.wrap.b32 	%r5386, %r5382, %r5381, 30;
	mov.b64 	%rd8186, {%r5386, %r5385};
	xor.b64  	%rd8187, %rd8186, %rd8185;
	shf.l.wrap.b32 	%r5387, %r5381, %r5382, 25;
	shf.l.wrap.b32 	%r5388, %r5382, %r5381, 25;
	mov.b64 	%rd8188, {%r5388, %r5387};
	xor.b64  	%rd8189, %rd8187, %rd8188;
	and.b64  	%rd8190, %rd8171, %rd8147;
	xor.b64  	%rd8191, %rd8171, %rd8147;
	and.b64  	%rd8192, %rd8191, %rd8123;
	or.b64  	%rd8193, %rd8192, %rd8190;
	add.s64 	%rd8194, %rd8183, %rd8193;
	add.s64 	%rd8195, %rd8194, %rd8189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5389,%dummy}, %rd8184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5390}, %rd8184;
	}
	shf.r.wrap.b32 	%r5391, %r5390, %r5389, 14;
	shf.r.wrap.b32 	%r5392, %r5389, %r5390, 14;
	mov.b64 	%rd8196, {%r5392, %r5391};
	shf.r.wrap.b32 	%r5393, %r5390, %r5389, 18;
	shf.r.wrap.b32 	%r5394, %r5389, %r5390, 18;
	mov.b64 	%rd8197, {%r5394, %r5393};
	xor.b64  	%rd8198, %rd8197, %rd8196;
	shf.l.wrap.b32 	%r5395, %r5389, %r5390, 23;
	shf.l.wrap.b32 	%r5396, %r5390, %r5389, 23;
	mov.b64 	%rd8199, {%r5396, %r5395};
	xor.b64  	%rd8200, %rd8198, %rd8199;
	xor.b64  	%rd8201, %rd8160, %rd8136;
	and.b64  	%rd8202, %rd8184, %rd8201;
	xor.b64  	%rd8203, %rd8202, %rd8136;
	ld.local.u64 	%rd18710, [%rd1+152];
	add.s64 	%rd8204, %rd8112, %rd18710;
	add.s64 	%rd8205, %rd8204, %rd18599;
	add.s64 	%rd8206, %rd8205, %rd8203;
	add.s64 	%rd8207, %rd8206, %rd8200;
	add.s64 	%rd8208, %rd8207, %rd8123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5397,%dummy}, %rd8195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5398}, %rd8195;
	}
	shf.r.wrap.b32 	%r5399, %r5398, %r5397, 28;
	shf.r.wrap.b32 	%r5400, %r5397, %r5398, 28;
	mov.b64 	%rd8209, {%r5400, %r5399};
	shf.l.wrap.b32 	%r5401, %r5397, %r5398, 30;
	shf.l.wrap.b32 	%r5402, %r5398, %r5397, 30;
	mov.b64 	%rd8210, {%r5402, %r5401};
	xor.b64  	%rd8211, %rd8210, %rd8209;
	shf.l.wrap.b32 	%r5403, %r5397, %r5398, 25;
	shf.l.wrap.b32 	%r5404, %r5398, %r5397, 25;
	mov.b64 	%rd8212, {%r5404, %r5403};
	xor.b64  	%rd8213, %rd8211, %rd8212;
	and.b64  	%rd8214, %rd8195, %rd8171;
	xor.b64  	%rd8215, %rd8195, %rd8171;
	and.b64  	%rd8216, %rd8215, %rd8147;
	or.b64  	%rd8217, %rd8216, %rd8214;
	add.s64 	%rd8218, %rd8207, %rd8217;
	add.s64 	%rd8219, %rd8218, %rd8213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5405,%dummy}, %rd8208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5406}, %rd8208;
	}
	shf.r.wrap.b32 	%r5407, %r5406, %r5405, 14;
	shf.r.wrap.b32 	%r5408, %r5405, %r5406, 14;
	mov.b64 	%rd8220, {%r5408, %r5407};
	shf.r.wrap.b32 	%r5409, %r5406, %r5405, 18;
	shf.r.wrap.b32 	%r5410, %r5405, %r5406, 18;
	mov.b64 	%rd8221, {%r5410, %r5409};
	xor.b64  	%rd8222, %rd8221, %rd8220;
	shf.l.wrap.b32 	%r5411, %r5405, %r5406, 23;
	shf.l.wrap.b32 	%r5412, %r5406, %r5405, 23;
	mov.b64 	%rd8223, {%r5412, %r5411};
	xor.b64  	%rd8224, %rd8222, %rd8223;
	xor.b64  	%rd8225, %rd8184, %rd8160;
	and.b64  	%rd8226, %rd8208, %rd8225;
	xor.b64  	%rd8227, %rd8226, %rd8160;
	ld.local.u64 	%rd18709, [%rd1+160];
	add.s64 	%rd8228, %rd8136, %rd18709;
	add.s64 	%rd8229, %rd8228, %rd18598;
	add.s64 	%rd8230, %rd8229, %rd8227;
	add.s64 	%rd8231, %rd8230, %rd8224;
	add.s64 	%rd18721, %rd8231, %rd8147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5413,%dummy}, %rd8219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5414}, %rd8219;
	}
	shf.r.wrap.b32 	%r5415, %r5414, %r5413, 28;
	shf.r.wrap.b32 	%r5416, %r5413, %r5414, 28;
	mov.b64 	%rd8232, {%r5416, %r5415};
	shf.l.wrap.b32 	%r5417, %r5413, %r5414, 30;
	shf.l.wrap.b32 	%r5418, %r5414, %r5413, 30;
	mov.b64 	%rd8233, {%r5418, %r5417};
	xor.b64  	%rd8234, %rd8233, %rd8232;
	shf.l.wrap.b32 	%r5419, %r5413, %r5414, 25;
	shf.l.wrap.b32 	%r5420, %r5414, %r5413, 25;
	mov.b64 	%rd8235, {%r5420, %r5419};
	xor.b64  	%rd8236, %rd8234, %rd8235;
	and.b64  	%rd8237, %rd8219, %rd8195;
	xor.b64  	%rd8238, %rd8219, %rd8195;
	and.b64  	%rd8239, %rd8238, %rd8171;
	or.b64  	%rd8240, %rd8239, %rd8237;
	add.s64 	%rd8241, %rd8231, %rd8240;
	add.s64 	%rd18717, %rd8241, %rd8236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5421,%dummy}, %rd18721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5422}, %rd18721;
	}
	shf.r.wrap.b32 	%r5423, %r5422, %r5421, 14;
	shf.r.wrap.b32 	%r5424, %r5421, %r5422, 14;
	mov.b64 	%rd8242, {%r5424, %r5423};
	shf.r.wrap.b32 	%r5425, %r5422, %r5421, 18;
	shf.r.wrap.b32 	%r5426, %r5421, %r5422, 18;
	mov.b64 	%rd8243, {%r5426, %r5425};
	xor.b64  	%rd8244, %rd8243, %rd8242;
	shf.l.wrap.b32 	%r5427, %r5421, %r5422, 23;
	shf.l.wrap.b32 	%r5428, %r5422, %r5421, 23;
	mov.b64 	%rd8245, {%r5428, %r5427};
	xor.b64  	%rd8246, %rd8244, %rd8245;
	xor.b64  	%rd8247, %rd8208, %rd8184;
	and.b64  	%rd8248, %rd18721, %rd8247;
	xor.b64  	%rd8249, %rd8248, %rd8184;
	ld.local.u64 	%rd18708, [%rd1+168];
	add.s64 	%rd8250, %rd8160, %rd18708;
	add.s64 	%rd8251, %rd8250, %rd18597;
	add.s64 	%rd8252, %rd8251, %rd8249;
	add.s64 	%rd8253, %rd8252, %rd8246;
	add.s64 	%rd18720, %rd8253, %rd8171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5429,%dummy}, %rd18717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5430}, %rd18717;
	}
	shf.r.wrap.b32 	%r5431, %r5430, %r5429, 28;
	shf.r.wrap.b32 	%r5432, %r5429, %r5430, 28;
	mov.b64 	%rd8254, {%r5432, %r5431};
	shf.l.wrap.b32 	%r5433, %r5429, %r5430, 30;
	shf.l.wrap.b32 	%r5434, %r5430, %r5429, 30;
	mov.b64 	%rd8255, {%r5434, %r5433};
	xor.b64  	%rd8256, %rd8255, %rd8254;
	shf.l.wrap.b32 	%r5435, %r5429, %r5430, 25;
	shf.l.wrap.b32 	%r5436, %r5430, %r5429, 25;
	mov.b64 	%rd8257, {%r5436, %r5435};
	xor.b64  	%rd8258, %rd8256, %rd8257;
	and.b64  	%rd8259, %rd18717, %rd8219;
	xor.b64  	%rd8260, %rd18717, %rd8219;
	and.b64  	%rd8261, %rd8260, %rd8195;
	or.b64  	%rd8262, %rd8261, %rd8259;
	add.s64 	%rd8263, %rd8253, %rd8262;
	add.s64 	%rd18716, %rd8263, %rd8258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5437,%dummy}, %rd18720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5438}, %rd18720;
	}
	shf.r.wrap.b32 	%r5439, %r5438, %r5437, 14;
	shf.r.wrap.b32 	%r5440, %r5437, %r5438, 14;
	mov.b64 	%rd8264, {%r5440, %r5439};
	shf.r.wrap.b32 	%r5441, %r5438, %r5437, 18;
	shf.r.wrap.b32 	%r5442, %r5437, %r5438, 18;
	mov.b64 	%rd8265, {%r5442, %r5441};
	xor.b64  	%rd8266, %rd8265, %rd8264;
	shf.l.wrap.b32 	%r5443, %r5437, %r5438, 23;
	shf.l.wrap.b32 	%r5444, %r5438, %r5437, 23;
	mov.b64 	%rd8267, {%r5444, %r5443};
	xor.b64  	%rd8268, %rd8266, %rd8267;
	xor.b64  	%rd8269, %rd18721, %rd8208;
	and.b64  	%rd8270, %rd18720, %rd8269;
	xor.b64  	%rd8271, %rd8270, %rd8208;
	ld.local.u64 	%rd18707, [%rd1+176];
	add.s64 	%rd8272, %rd8184, %rd18707;
	add.s64 	%rd8273, %rd8272, %rd18596;
	add.s64 	%rd8274, %rd8273, %rd8271;
	add.s64 	%rd8275, %rd8274, %rd8268;
	add.s64 	%rd18719, %rd8275, %rd8195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5445,%dummy}, %rd18716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5446}, %rd18716;
	}
	shf.r.wrap.b32 	%r5447, %r5446, %r5445, 28;
	shf.r.wrap.b32 	%r5448, %r5445, %r5446, 28;
	mov.b64 	%rd8276, {%r5448, %r5447};
	shf.l.wrap.b32 	%r5449, %r5445, %r5446, 30;
	shf.l.wrap.b32 	%r5450, %r5446, %r5445, 30;
	mov.b64 	%rd8277, {%r5450, %r5449};
	xor.b64  	%rd8278, %rd8277, %rd8276;
	shf.l.wrap.b32 	%r5451, %r5445, %r5446, 25;
	shf.l.wrap.b32 	%r5452, %r5446, %r5445, 25;
	mov.b64 	%rd8279, {%r5452, %r5451};
	xor.b64  	%rd8280, %rd8278, %rd8279;
	and.b64  	%rd8281, %rd18716, %rd18717;
	xor.b64  	%rd8282, %rd18716, %rd18717;
	and.b64  	%rd8283, %rd8282, %rd8219;
	or.b64  	%rd8284, %rd8283, %rd8281;
	add.s64 	%rd8285, %rd8275, %rd8284;
	add.s64 	%rd18715, %rd8285, %rd8280;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5453,%dummy}, %rd18719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5454}, %rd18719;
	}
	shf.r.wrap.b32 	%r5455, %r5454, %r5453, 14;
	shf.r.wrap.b32 	%r5456, %r5453, %r5454, 14;
	mov.b64 	%rd8286, {%r5456, %r5455};
	shf.r.wrap.b32 	%r5457, %r5454, %r5453, 18;
	shf.r.wrap.b32 	%r5458, %r5453, %r5454, 18;
	mov.b64 	%rd8287, {%r5458, %r5457};
	xor.b64  	%rd8288, %rd8287, %rd8286;
	shf.l.wrap.b32 	%r5459, %r5453, %r5454, 23;
	shf.l.wrap.b32 	%r5460, %r5454, %r5453, 23;
	mov.b64 	%rd8289, {%r5460, %r5459};
	xor.b64  	%rd8290, %rd8288, %rd8289;
	xor.b64  	%rd8291, %rd18720, %rd18721;
	and.b64  	%rd8292, %rd18719, %rd8291;
	xor.b64  	%rd8293, %rd8292, %rd18721;
	ld.local.u64 	%rd18706, [%rd1+184];
	add.s64 	%rd8294, %rd8208, %rd18706;
	add.s64 	%rd8295, %rd8294, %rd18595;
	add.s64 	%rd8296, %rd8295, %rd8293;
	add.s64 	%rd8297, %rd8296, %rd8290;
	add.s64 	%rd18718, %rd8297, %rd8219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5461,%dummy}, %rd18715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5462}, %rd18715;
	}
	shf.r.wrap.b32 	%r5463, %r5462, %r5461, 28;
	shf.r.wrap.b32 	%r5464, %r5461, %r5462, 28;
	mov.b64 	%rd8298, {%r5464, %r5463};
	shf.l.wrap.b32 	%r5465, %r5461, %r5462, 30;
	shf.l.wrap.b32 	%r5466, %r5462, %r5461, 30;
	mov.b64 	%rd8299, {%r5466, %r5465};
	xor.b64  	%rd8300, %rd8299, %rd8298;
	shf.l.wrap.b32 	%r5467, %r5461, %r5462, 25;
	shf.l.wrap.b32 	%r5468, %r5462, %r5461, 25;
	mov.b64 	%rd8301, {%r5468, %r5467};
	xor.b64  	%rd8302, %rd8300, %rd8301;
	and.b64  	%rd8303, %rd18715, %rd18716;
	xor.b64  	%rd8304, %rd18715, %rd18716;
	and.b64  	%rd8305, %rd8304, %rd18717;
	or.b64  	%rd8306, %rd8305, %rd8303;
	add.s64 	%rd8307, %rd8297, %rd8306;
	add.s64 	%rd18714, %rd8307, %rd8302;
	mov.u32 	%r12981, 16;

BB0_171:
	mov.u64 	%rd18513, k_sha512;
	shr.u64 	%rd8308, %rd18707, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5469,%dummy}, %rd18707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5470}, %rd18707;
	}
	shf.r.wrap.b32 	%r5471, %r5470, %r5469, 19;
	shf.r.wrap.b32 	%r5472, %r5469, %r5470, 19;
	mov.b64 	%rd8309, {%r5472, %r5471};
	xor.b64  	%rd8310, %rd8309, %rd8308;
	shf.l.wrap.b32 	%r5473, %r5469, %r5470, 3;
	shf.l.wrap.b32 	%r5474, %r5470, %r5469, 3;
	mov.b64 	%rd8311, {%r5474, %r5473};
	xor.b64  	%rd8312, %rd8310, %rd8311;
	shr.u64 	%rd8313, %rd18723, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5475,%dummy}, %rd18723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5476}, %rd18723;
	}
	shf.r.wrap.b32 	%r5477, %r5476, %r5475, 1;
	shf.r.wrap.b32 	%r5478, %r5475, %r5476, 1;
	mov.b64 	%rd8314, {%r5478, %r5477};
	xor.b64  	%rd8315, %rd8314, %rd8313;
	shf.r.wrap.b32 	%r5479, %r5476, %r5475, 8;
	shf.r.wrap.b32 	%r5480, %r5475, %r5476, 8;
	mov.b64 	%rd8316, {%r5480, %r5479};
	xor.b64  	%rd8317, %rd8315, %rd8316;
	add.s64 	%rd8318, %rd18712, %rd18722;
	add.s64 	%rd8319, %rd8318, %rd8312;
	add.s64 	%rd18722, %rd8319, %rd8317;
	shr.u64 	%rd8320, %rd18706, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5481,%dummy}, %rd18706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5482}, %rd18706;
	}
	shf.r.wrap.b32 	%r5483, %r5482, %r5481, 19;
	shf.r.wrap.b32 	%r5484, %r5481, %r5482, 19;
	mov.b64 	%rd8321, {%r5484, %r5483};
	xor.b64  	%rd8322, %rd8321, %rd8320;
	shf.l.wrap.b32 	%r5485, %r5481, %r5482, 3;
	shf.l.wrap.b32 	%r5486, %r5482, %r5481, 3;
	mov.b64 	%rd8323, {%r5486, %r5485};
	xor.b64  	%rd8324, %rd8322, %rd8323;
	shr.u64 	%rd8325, %rd18724, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5487,%dummy}, %rd18724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5488}, %rd18724;
	}
	shf.r.wrap.b32 	%r5489, %r5488, %r5487, 1;
	shf.r.wrap.b32 	%r5490, %r5487, %r5488, 1;
	mov.b64 	%rd8326, {%r5490, %r5489};
	xor.b64  	%rd8327, %rd8326, %rd8325;
	shf.r.wrap.b32 	%r5491, %r5488, %r5487, 8;
	shf.r.wrap.b32 	%r5492, %r5487, %r5488, 8;
	mov.b64 	%rd8328, {%r5492, %r5491};
	xor.b64  	%rd8329, %rd8327, %rd8328;
	add.s64 	%rd8330, %rd18711, %rd18723;
	add.s64 	%rd8331, %rd8330, %rd8324;
	add.s64 	%rd18723, %rd8331, %rd8329;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5493,%dummy}, %rd18722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5494}, %rd18722;
	}
	shf.r.wrap.b32 	%r5495, %r5494, %r5493, 19;
	shf.r.wrap.b32 	%r5496, %r5493, %r5494, 19;
	mov.b64 	%rd8332, {%r5496, %r5495};
	shf.l.wrap.b32 	%r5497, %r5493, %r5494, 3;
	shf.l.wrap.b32 	%r5498, %r5494, %r5493, 3;
	mov.b64 	%rd8333, {%r5498, %r5497};
	shr.u64 	%rd8334, %rd18722, 6;
	xor.b64  	%rd8335, %rd8332, %rd8334;
	xor.b64  	%rd8336, %rd8335, %rd8333;
	shr.u64 	%rd8337, %rd18725, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5499,%dummy}, %rd18725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5500}, %rd18725;
	}
	shf.r.wrap.b32 	%r5501, %r5500, %r5499, 1;
	shf.r.wrap.b32 	%r5502, %r5499, %r5500, 1;
	mov.b64 	%rd8338, {%r5502, %r5501};
	xor.b64  	%rd8339, %rd8338, %rd8337;
	shf.r.wrap.b32 	%r5503, %r5500, %r5499, 8;
	shf.r.wrap.b32 	%r5504, %r5499, %r5500, 8;
	mov.b64 	%rd8340, {%r5504, %r5503};
	xor.b64  	%rd8341, %rd8339, %rd8340;
	add.s64 	%rd8342, %rd18710, %rd18724;
	add.s64 	%rd8343, %rd8342, %rd8336;
	add.s64 	%rd18724, %rd8343, %rd8341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5505,%dummy}, %rd18723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5506}, %rd18723;
	}
	shf.r.wrap.b32 	%r5507, %r5506, %r5505, 19;
	shf.r.wrap.b32 	%r5508, %r5505, %r5506, 19;
	mov.b64 	%rd8344, {%r5508, %r5507};
	shf.l.wrap.b32 	%r5509, %r5505, %r5506, 3;
	shf.l.wrap.b32 	%r5510, %r5506, %r5505, 3;
	mov.b64 	%rd8345, {%r5510, %r5509};
	shr.u64 	%rd8346, %rd18723, 6;
	xor.b64  	%rd8347, %rd8344, %rd8346;
	xor.b64  	%rd8348, %rd8347, %rd8345;
	shr.u64 	%rd8349, %rd18726, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5511,%dummy}, %rd18726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5512}, %rd18726;
	}
	shf.r.wrap.b32 	%r5513, %r5512, %r5511, 1;
	shf.r.wrap.b32 	%r5514, %r5511, %r5512, 1;
	mov.b64 	%rd8350, {%r5514, %r5513};
	xor.b64  	%rd8351, %rd8350, %rd8349;
	shf.r.wrap.b32 	%r5515, %r5512, %r5511, 8;
	shf.r.wrap.b32 	%r5516, %r5511, %r5512, 8;
	mov.b64 	%rd8352, {%r5516, %r5515};
	xor.b64  	%rd8353, %rd8351, %rd8352;
	add.s64 	%rd8354, %rd18709, %rd18725;
	add.s64 	%rd8355, %rd8354, %rd8348;
	add.s64 	%rd18725, %rd8355, %rd8353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5517,%dummy}, %rd18724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5518}, %rd18724;
	}
	shf.r.wrap.b32 	%r5519, %r5518, %r5517, 19;
	shf.r.wrap.b32 	%r5520, %r5517, %r5518, 19;
	mov.b64 	%rd8356, {%r5520, %r5519};
	shf.l.wrap.b32 	%r5521, %r5517, %r5518, 3;
	shf.l.wrap.b32 	%r5522, %r5518, %r5517, 3;
	mov.b64 	%rd8357, {%r5522, %r5521};
	shr.u64 	%rd8358, %rd18724, 6;
	xor.b64  	%rd8359, %rd8356, %rd8358;
	xor.b64  	%rd8360, %rd8359, %rd8357;
	shr.u64 	%rd8361, %rd18727, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5523,%dummy}, %rd18727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5524}, %rd18727;
	}
	shf.r.wrap.b32 	%r5525, %r5524, %r5523, 1;
	shf.r.wrap.b32 	%r5526, %r5523, %r5524, 1;
	mov.b64 	%rd8362, {%r5526, %r5525};
	xor.b64  	%rd8363, %rd8362, %rd8361;
	shf.r.wrap.b32 	%r5527, %r5524, %r5523, 8;
	shf.r.wrap.b32 	%r5528, %r5523, %r5524, 8;
	mov.b64 	%rd8364, {%r5528, %r5527};
	xor.b64  	%rd8365, %rd8363, %rd8364;
	add.s64 	%rd8366, %rd18708, %rd18726;
	add.s64 	%rd8367, %rd8366, %rd8360;
	add.s64 	%rd18726, %rd8367, %rd8365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5529,%dummy}, %rd18725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5530}, %rd18725;
	}
	shf.r.wrap.b32 	%r5531, %r5530, %r5529, 19;
	shf.r.wrap.b32 	%r5532, %r5529, %r5530, 19;
	mov.b64 	%rd8368, {%r5532, %r5531};
	shf.l.wrap.b32 	%r5533, %r5529, %r5530, 3;
	shf.l.wrap.b32 	%r5534, %r5530, %r5529, 3;
	mov.b64 	%rd8369, {%r5534, %r5533};
	shr.u64 	%rd8370, %rd18725, 6;
	xor.b64  	%rd8371, %rd8368, %rd8370;
	xor.b64  	%rd8372, %rd8371, %rd8369;
	shr.u64 	%rd8373, %rd18728, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5535,%dummy}, %rd18728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5536}, %rd18728;
	}
	shf.r.wrap.b32 	%r5537, %r5536, %r5535, 1;
	shf.r.wrap.b32 	%r5538, %r5535, %r5536, 1;
	mov.b64 	%rd8374, {%r5538, %r5537};
	xor.b64  	%rd8375, %rd8374, %rd8373;
	shf.r.wrap.b32 	%r5539, %r5536, %r5535, 8;
	shf.r.wrap.b32 	%r5540, %r5535, %r5536, 8;
	mov.b64 	%rd8376, {%r5540, %r5539};
	xor.b64  	%rd8377, %rd8375, %rd8376;
	add.s64 	%rd8378, %rd18707, %rd18727;
	add.s64 	%rd8379, %rd8378, %rd8372;
	add.s64 	%rd18727, %rd8379, %rd8377;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5541,%dummy}, %rd18726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5542}, %rd18726;
	}
	shf.r.wrap.b32 	%r5543, %r5542, %r5541, 19;
	shf.r.wrap.b32 	%r5544, %r5541, %r5542, 19;
	mov.b64 	%rd8380, {%r5544, %r5543};
	shf.l.wrap.b32 	%r5545, %r5541, %r5542, 3;
	shf.l.wrap.b32 	%r5546, %r5542, %r5541, 3;
	mov.b64 	%rd8381, {%r5546, %r5545};
	shr.u64 	%rd8382, %rd18726, 6;
	xor.b64  	%rd8383, %rd8380, %rd8382;
	xor.b64  	%rd8384, %rd8383, %rd8381;
	shr.u64 	%rd8385, %rd18729, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5547,%dummy}, %rd18729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5548}, %rd18729;
	}
	shf.r.wrap.b32 	%r5549, %r5548, %r5547, 1;
	shf.r.wrap.b32 	%r5550, %r5547, %r5548, 1;
	mov.b64 	%rd8386, {%r5550, %r5549};
	xor.b64  	%rd8387, %rd8386, %rd8385;
	shf.r.wrap.b32 	%r5551, %r5548, %r5547, 8;
	shf.r.wrap.b32 	%r5552, %r5547, %r5548, 8;
	mov.b64 	%rd8388, {%r5552, %r5551};
	xor.b64  	%rd8389, %rd8387, %rd8388;
	add.s64 	%rd8390, %rd18706, %rd18728;
	add.s64 	%rd8391, %rd8390, %rd8384;
	add.s64 	%rd18728, %rd8391, %rd8389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5553,%dummy}, %rd18727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5554}, %rd18727;
	}
	shf.r.wrap.b32 	%r5555, %r5554, %r5553, 19;
	shf.r.wrap.b32 	%r5556, %r5553, %r5554, 19;
	mov.b64 	%rd8392, {%r5556, %r5555};
	shf.l.wrap.b32 	%r5557, %r5553, %r5554, 3;
	shf.l.wrap.b32 	%r5558, %r5554, %r5553, 3;
	mov.b64 	%rd8393, {%r5558, %r5557};
	shr.u64 	%rd8394, %rd18727, 6;
	xor.b64  	%rd8395, %rd8392, %rd8394;
	xor.b64  	%rd8396, %rd8395, %rd8393;
	shr.u64 	%rd8397, %rd18713, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5559,%dummy}, %rd18713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5560}, %rd18713;
	}
	shf.r.wrap.b32 	%r5561, %r5560, %r5559, 1;
	shf.r.wrap.b32 	%r5562, %r5559, %r5560, 1;
	mov.b64 	%rd8398, {%r5562, %r5561};
	xor.b64  	%rd8399, %rd8398, %rd8397;
	shf.r.wrap.b32 	%r5563, %r5560, %r5559, 8;
	shf.r.wrap.b32 	%r5564, %r5559, %r5560, 8;
	mov.b64 	%rd8400, {%r5564, %r5563};
	xor.b64  	%rd8401, %rd8399, %rd8400;
	add.s64 	%rd8402, %rd18722, %rd18729;
	add.s64 	%rd8403, %rd8402, %rd8396;
	add.s64 	%rd18729, %rd8403, %rd8401;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5565,%dummy}, %rd18728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5566}, %rd18728;
	}
	shf.r.wrap.b32 	%r5567, %r5566, %r5565, 19;
	shf.r.wrap.b32 	%r5568, %r5565, %r5566, 19;
	mov.b64 	%rd8404, {%r5568, %r5567};
	shf.l.wrap.b32 	%r5569, %r5565, %r5566, 3;
	shf.l.wrap.b32 	%r5570, %r5566, %r5565, 3;
	mov.b64 	%rd8405, {%r5570, %r5569};
	shr.u64 	%rd8406, %rd18728, 6;
	xor.b64  	%rd8407, %rd8404, %rd8406;
	xor.b64  	%rd8408, %rd8407, %rd8405;
	shr.u64 	%rd8409, %rd18712, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5571,%dummy}, %rd18712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5572}, %rd18712;
	}
	shf.r.wrap.b32 	%r5573, %r5572, %r5571, 1;
	shf.r.wrap.b32 	%r5574, %r5571, %r5572, 1;
	mov.b64 	%rd8410, {%r5574, %r5573};
	xor.b64  	%rd8411, %rd8410, %rd8409;
	shf.r.wrap.b32 	%r5575, %r5572, %r5571, 8;
	shf.r.wrap.b32 	%r5576, %r5571, %r5572, 8;
	mov.b64 	%rd8412, {%r5576, %r5575};
	xor.b64  	%rd8413, %rd8411, %rd8412;
	add.s64 	%rd8414, %rd18723, %rd18713;
	add.s64 	%rd8415, %rd8414, %rd8408;
	add.s64 	%rd18713, %rd8415, %rd8413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5577,%dummy}, %rd18729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5578}, %rd18729;
	}
	shf.r.wrap.b32 	%r5579, %r5578, %r5577, 19;
	shf.r.wrap.b32 	%r5580, %r5577, %r5578, 19;
	mov.b64 	%rd8416, {%r5580, %r5579};
	shf.l.wrap.b32 	%r5581, %r5577, %r5578, 3;
	shf.l.wrap.b32 	%r5582, %r5578, %r5577, 3;
	mov.b64 	%rd8417, {%r5582, %r5581};
	shr.u64 	%rd8418, %rd18729, 6;
	xor.b64  	%rd8419, %rd8416, %rd8418;
	xor.b64  	%rd8420, %rd8419, %rd8417;
	shr.u64 	%rd8421, %rd18711, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5583,%dummy}, %rd18711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5584}, %rd18711;
	}
	shf.r.wrap.b32 	%r5585, %r5584, %r5583, 1;
	shf.r.wrap.b32 	%r5586, %r5583, %r5584, 1;
	mov.b64 	%rd8422, {%r5586, %r5585};
	xor.b64  	%rd8423, %rd8422, %rd8421;
	shf.r.wrap.b32 	%r5587, %r5584, %r5583, 8;
	shf.r.wrap.b32 	%r5588, %r5583, %r5584, 8;
	mov.b64 	%rd8424, {%r5588, %r5587};
	xor.b64  	%rd8425, %rd8423, %rd8424;
	add.s64 	%rd8426, %rd18724, %rd18712;
	add.s64 	%rd8427, %rd8426, %rd8420;
	add.s64 	%rd18712, %rd8427, %rd8425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5589,%dummy}, %rd18713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5590}, %rd18713;
	}
	shf.r.wrap.b32 	%r5591, %r5590, %r5589, 19;
	shf.r.wrap.b32 	%r5592, %r5589, %r5590, 19;
	mov.b64 	%rd8428, {%r5592, %r5591};
	shf.l.wrap.b32 	%r5593, %r5589, %r5590, 3;
	shf.l.wrap.b32 	%r5594, %r5590, %r5589, 3;
	mov.b64 	%rd8429, {%r5594, %r5593};
	shr.u64 	%rd8430, %rd18713, 6;
	xor.b64  	%rd8431, %rd8428, %rd8430;
	xor.b64  	%rd8432, %rd8431, %rd8429;
	shr.u64 	%rd8433, %rd18710, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5595,%dummy}, %rd18710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5596}, %rd18710;
	}
	shf.r.wrap.b32 	%r5597, %r5596, %r5595, 1;
	shf.r.wrap.b32 	%r5598, %r5595, %r5596, 1;
	mov.b64 	%rd8434, {%r5598, %r5597};
	xor.b64  	%rd8435, %rd8434, %rd8433;
	shf.r.wrap.b32 	%r5599, %r5596, %r5595, 8;
	shf.r.wrap.b32 	%r5600, %r5595, %r5596, 8;
	mov.b64 	%rd8436, {%r5600, %r5599};
	xor.b64  	%rd8437, %rd8435, %rd8436;
	add.s64 	%rd8438, %rd18725, %rd18711;
	add.s64 	%rd8439, %rd8438, %rd8432;
	add.s64 	%rd18711, %rd8439, %rd8437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5601,%dummy}, %rd18712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5602}, %rd18712;
	}
	shf.r.wrap.b32 	%r5603, %r5602, %r5601, 19;
	shf.r.wrap.b32 	%r5604, %r5601, %r5602, 19;
	mov.b64 	%rd8440, {%r5604, %r5603};
	shf.l.wrap.b32 	%r5605, %r5601, %r5602, 3;
	shf.l.wrap.b32 	%r5606, %r5602, %r5601, 3;
	mov.b64 	%rd8441, {%r5606, %r5605};
	shr.u64 	%rd8442, %rd18712, 6;
	xor.b64  	%rd8443, %rd8440, %rd8442;
	xor.b64  	%rd8444, %rd8443, %rd8441;
	shr.u64 	%rd8445, %rd18709, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5607,%dummy}, %rd18709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5608}, %rd18709;
	}
	shf.r.wrap.b32 	%r5609, %r5608, %r5607, 1;
	shf.r.wrap.b32 	%r5610, %r5607, %r5608, 1;
	mov.b64 	%rd8446, {%r5610, %r5609};
	xor.b64  	%rd8447, %rd8446, %rd8445;
	shf.r.wrap.b32 	%r5611, %r5608, %r5607, 8;
	shf.r.wrap.b32 	%r5612, %r5607, %r5608, 8;
	mov.b64 	%rd8448, {%r5612, %r5611};
	xor.b64  	%rd8449, %rd8447, %rd8448;
	add.s64 	%rd8450, %rd18726, %rd18710;
	add.s64 	%rd8451, %rd8450, %rd8444;
	add.s64 	%rd18710, %rd8451, %rd8449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5613,%dummy}, %rd18711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5614}, %rd18711;
	}
	shf.r.wrap.b32 	%r5615, %r5614, %r5613, 19;
	shf.r.wrap.b32 	%r5616, %r5613, %r5614, 19;
	mov.b64 	%rd8452, {%r5616, %r5615};
	shf.l.wrap.b32 	%r5617, %r5613, %r5614, 3;
	shf.l.wrap.b32 	%r5618, %r5614, %r5613, 3;
	mov.b64 	%rd8453, {%r5618, %r5617};
	shr.u64 	%rd8454, %rd18711, 6;
	xor.b64  	%rd8455, %rd8452, %rd8454;
	xor.b64  	%rd8456, %rd8455, %rd8453;
	shr.u64 	%rd8457, %rd18708, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5619,%dummy}, %rd18708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5620}, %rd18708;
	}
	shf.r.wrap.b32 	%r5621, %r5620, %r5619, 1;
	shf.r.wrap.b32 	%r5622, %r5619, %r5620, 1;
	mov.b64 	%rd8458, {%r5622, %r5621};
	xor.b64  	%rd8459, %rd8458, %rd8457;
	shf.r.wrap.b32 	%r5623, %r5620, %r5619, 8;
	shf.r.wrap.b32 	%r5624, %r5619, %r5620, 8;
	mov.b64 	%rd8460, {%r5624, %r5623};
	xor.b64  	%rd8461, %rd8459, %rd8460;
	add.s64 	%rd8462, %rd18727, %rd18709;
	add.s64 	%rd8463, %rd8462, %rd8456;
	add.s64 	%rd18709, %rd8463, %rd8461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5625,%dummy}, %rd18710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5626}, %rd18710;
	}
	shf.r.wrap.b32 	%r5627, %r5626, %r5625, 19;
	shf.r.wrap.b32 	%r5628, %r5625, %r5626, 19;
	mov.b64 	%rd8464, {%r5628, %r5627};
	shf.l.wrap.b32 	%r5629, %r5625, %r5626, 3;
	shf.l.wrap.b32 	%r5630, %r5626, %r5625, 3;
	mov.b64 	%rd8465, {%r5630, %r5629};
	shr.u64 	%rd8466, %rd18710, 6;
	xor.b64  	%rd8467, %rd8464, %rd8466;
	xor.b64  	%rd8468, %rd8467, %rd8465;
	shr.u64 	%rd8469, %rd18707, 7;
	shf.r.wrap.b32 	%r5631, %r5470, %r5469, 1;
	shf.r.wrap.b32 	%r5632, %r5469, %r5470, 1;
	mov.b64 	%rd8470, {%r5632, %r5631};
	xor.b64  	%rd8471, %rd8470, %rd8469;
	shf.r.wrap.b32 	%r5633, %r5470, %r5469, 8;
	shf.r.wrap.b32 	%r5634, %r5469, %r5470, 8;
	mov.b64 	%rd8472, {%r5634, %r5633};
	xor.b64  	%rd8473, %rd8471, %rd8472;
	add.s64 	%rd8474, %rd18728, %rd18708;
	add.s64 	%rd8475, %rd8474, %rd8468;
	add.s64 	%rd18708, %rd8475, %rd8473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5635,%dummy}, %rd18709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5636}, %rd18709;
	}
	shf.r.wrap.b32 	%r5637, %r5636, %r5635, 19;
	shf.r.wrap.b32 	%r5638, %r5635, %r5636, 19;
	mov.b64 	%rd8476, {%r5638, %r5637};
	shf.l.wrap.b32 	%r5639, %r5635, %r5636, 3;
	shf.l.wrap.b32 	%r5640, %r5636, %r5635, 3;
	mov.b64 	%rd8477, {%r5640, %r5639};
	shr.u64 	%rd8478, %rd18709, 6;
	xor.b64  	%rd8479, %rd8476, %rd8478;
	xor.b64  	%rd8480, %rd8479, %rd8477;
	shr.u64 	%rd8481, %rd18706, 7;
	shf.r.wrap.b32 	%r5641, %r5482, %r5481, 1;
	shf.r.wrap.b32 	%r5642, %r5481, %r5482, 1;
	mov.b64 	%rd8482, {%r5642, %r5641};
	xor.b64  	%rd8483, %rd8482, %rd8481;
	shf.r.wrap.b32 	%r5643, %r5482, %r5481, 8;
	shf.r.wrap.b32 	%r5644, %r5481, %r5482, 8;
	mov.b64 	%rd8484, {%r5644, %r5643};
	xor.b64  	%rd8485, %rd8483, %rd8484;
	add.s64 	%rd8486, %rd18729, %rd18707;
	add.s64 	%rd8487, %rd8486, %rd8480;
	add.s64 	%rd18707, %rd8487, %rd8485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5645,%dummy}, %rd18708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5646}, %rd18708;
	}
	shf.r.wrap.b32 	%r5647, %r5646, %r5645, 19;
	shf.r.wrap.b32 	%r5648, %r5645, %r5646, 19;
	mov.b64 	%rd8488, {%r5648, %r5647};
	shf.l.wrap.b32 	%r5649, %r5645, %r5646, 3;
	shf.l.wrap.b32 	%r5650, %r5646, %r5645, 3;
	mov.b64 	%rd8489, {%r5650, %r5649};
	shr.u64 	%rd8490, %rd18708, 6;
	xor.b64  	%rd8491, %rd8488, %rd8490;
	xor.b64  	%rd8492, %rd8491, %rd8489;
	shf.r.wrap.b32 	%r5651, %r5494, %r5493, 1;
	shf.r.wrap.b32 	%r5652, %r5493, %r5494, 1;
	mov.b64 	%rd8493, {%r5652, %r5651};
	shf.r.wrap.b32 	%r5653, %r5494, %r5493, 8;
	shf.r.wrap.b32 	%r5654, %r5493, %r5494, 8;
	mov.b64 	%rd8494, {%r5654, %r5653};
	shr.u64 	%rd8495, %rd18722, 7;
	xor.b64  	%rd8496, %rd8493, %rd8495;
	xor.b64  	%rd8497, %rd8496, %rd8494;
	add.s64 	%rd8498, %rd18713, %rd18706;
	add.s64 	%rd8499, %rd8498, %rd8492;
	add.s64 	%rd18706, %rd8499, %rd8497;
	mul.wide.s32 	%rd8500, %r12981, 8;
	add.s64 	%rd8502, %rd18513, %rd8500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5655,%dummy}, %rd18718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5656}, %rd18718;
	}
	shf.r.wrap.b32 	%r5657, %r5656, %r5655, 18;
	shf.r.wrap.b32 	%r5658, %r5655, %r5656, 18;
	mov.b64 	%rd8503, {%r5658, %r5657};
	shf.r.wrap.b32 	%r5659, %r5656, %r5655, 14;
	shf.r.wrap.b32 	%r5660, %r5655, %r5656, 14;
	mov.b64 	%rd8504, {%r5660, %r5659};
	xor.b64  	%rd8505, %rd8503, %rd8504;
	shf.l.wrap.b32 	%r5661, %r5655, %r5656, 23;
	shf.l.wrap.b32 	%r5662, %r5656, %r5655, 23;
	mov.b64 	%rd8506, {%r5662, %r5661};
	xor.b64  	%rd8507, %rd8505, %rd8506;
	xor.b64  	%rd8508, %rd18719, %rd18720;
	and.b64  	%rd8509, %rd18718, %rd8508;
	xor.b64  	%rd8510, %rd8509, %rd18720;
	add.s64 	%rd8511, %rd8510, %rd18721;
	add.s64 	%rd8512, %rd8511, %rd18722;
	ld.const.u64 	%rd8513, [%rd8502];
	add.s64 	%rd8514, %rd8512, %rd8513;
	add.s64 	%rd8515, %rd8514, %rd8507;
	add.s64 	%rd8516, %rd8515, %rd18717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5663}, %rd18714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5664,%dummy}, %rd18714;
	}
	shf.l.wrap.b32 	%r5665, %r5664, %r5663, 30;
	shf.l.wrap.b32 	%r5666, %r5663, %r5664, 30;
	mov.b64 	%rd8517, {%r5666, %r5665};
	shf.r.wrap.b32 	%r5667, %r5663, %r5664, 28;
	shf.r.wrap.b32 	%r5668, %r5664, %r5663, 28;
	mov.b64 	%rd8518, {%r5668, %r5667};
	xor.b64  	%rd8519, %rd8517, %rd8518;
	shf.l.wrap.b32 	%r5669, %r5664, %r5663, 25;
	shf.l.wrap.b32 	%r5670, %r5663, %r5664, 25;
	mov.b64 	%rd8520, {%r5670, %r5669};
	xor.b64  	%rd8521, %rd8519, %rd8520;
	xor.b64  	%rd8522, %rd18714, %rd18715;
	and.b64  	%rd8523, %rd8522, %rd18716;
	and.b64  	%rd8524, %rd18714, %rd18715;
	or.b64  	%rd8525, %rd8523, %rd8524;
	add.s64 	%rd8526, %rd8515, %rd8525;
	add.s64 	%rd8527, %rd8526, %rd8521;
	add.s32 	%r5671, %r12981, 1;
	mul.wide.s32 	%rd8528, %r5671, 8;
	add.s64 	%rd8529, %rd18513, %rd8528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5672,%dummy}, %rd8516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5673}, %rd8516;
	}
	shf.r.wrap.b32 	%r5674, %r5673, %r5672, 14;
	shf.r.wrap.b32 	%r5675, %r5672, %r5673, 14;
	mov.b64 	%rd8530, {%r5675, %r5674};
	shf.r.wrap.b32 	%r5676, %r5673, %r5672, 18;
	shf.r.wrap.b32 	%r5677, %r5672, %r5673, 18;
	mov.b64 	%rd8531, {%r5677, %r5676};
	xor.b64  	%rd8532, %rd8531, %rd8530;
	shf.l.wrap.b32 	%r5678, %r5672, %r5673, 23;
	shf.l.wrap.b32 	%r5679, %r5673, %r5672, 23;
	mov.b64 	%rd8533, {%r5679, %r5678};
	xor.b64  	%rd8534, %rd8532, %rd8533;
	xor.b64  	%rd8535, %rd18718, %rd18719;
	and.b64  	%rd8536, %rd8516, %rd8535;
	xor.b64  	%rd8537, %rd8536, %rd18719;
	add.s64 	%rd8538, %rd18723, %rd18720;
	ld.const.u64 	%rd8539, [%rd8529];
	add.s64 	%rd8540, %rd8538, %rd8539;
	add.s64 	%rd8541, %rd8540, %rd8537;
	add.s64 	%rd8542, %rd8541, %rd8534;
	add.s64 	%rd8543, %rd8542, %rd18716;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5680,%dummy}, %rd8527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5681}, %rd8527;
	}
	shf.r.wrap.b32 	%r5682, %r5681, %r5680, 28;
	shf.r.wrap.b32 	%r5683, %r5680, %r5681, 28;
	mov.b64 	%rd8544, {%r5683, %r5682};
	shf.l.wrap.b32 	%r5684, %r5680, %r5681, 30;
	shf.l.wrap.b32 	%r5685, %r5681, %r5680, 30;
	mov.b64 	%rd8545, {%r5685, %r5684};
	xor.b64  	%rd8546, %rd8545, %rd8544;
	shf.l.wrap.b32 	%r5686, %r5680, %r5681, 25;
	shf.l.wrap.b32 	%r5687, %r5681, %r5680, 25;
	mov.b64 	%rd8547, {%r5687, %r5686};
	xor.b64  	%rd8548, %rd8546, %rd8547;
	and.b64  	%rd8549, %rd8527, %rd18714;
	xor.b64  	%rd8550, %rd8527, %rd18714;
	and.b64  	%rd8551, %rd8550, %rd18715;
	or.b64  	%rd8552, %rd8551, %rd8549;
	add.s64 	%rd8553, %rd8542, %rd8552;
	add.s64 	%rd8554, %rd8553, %rd8548;
	add.s32 	%r5688, %r12981, 2;
	mul.wide.s32 	%rd8555, %r5688, 8;
	add.s64 	%rd8556, %rd18513, %rd8555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5689,%dummy}, %rd8543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5690}, %rd8543;
	}
	shf.r.wrap.b32 	%r5691, %r5690, %r5689, 14;
	shf.r.wrap.b32 	%r5692, %r5689, %r5690, 14;
	mov.b64 	%rd8557, {%r5692, %r5691};
	shf.r.wrap.b32 	%r5693, %r5690, %r5689, 18;
	shf.r.wrap.b32 	%r5694, %r5689, %r5690, 18;
	mov.b64 	%rd8558, {%r5694, %r5693};
	xor.b64  	%rd8559, %rd8558, %rd8557;
	shf.l.wrap.b32 	%r5695, %r5689, %r5690, 23;
	shf.l.wrap.b32 	%r5696, %r5690, %r5689, 23;
	mov.b64 	%rd8560, {%r5696, %r5695};
	xor.b64  	%rd8561, %rd8559, %rd8560;
	xor.b64  	%rd8562, %rd8516, %rd18718;
	and.b64  	%rd8563, %rd8543, %rd8562;
	xor.b64  	%rd8564, %rd8563, %rd18718;
	add.s64 	%rd8565, %rd18724, %rd18719;
	ld.const.u64 	%rd8566, [%rd8556];
	add.s64 	%rd8567, %rd8565, %rd8566;
	add.s64 	%rd8568, %rd8567, %rd8564;
	add.s64 	%rd8569, %rd8568, %rd8561;
	add.s64 	%rd8570, %rd8569, %rd18715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5697,%dummy}, %rd8554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5698}, %rd8554;
	}
	shf.r.wrap.b32 	%r5699, %r5698, %r5697, 28;
	shf.r.wrap.b32 	%r5700, %r5697, %r5698, 28;
	mov.b64 	%rd8571, {%r5700, %r5699};
	shf.l.wrap.b32 	%r5701, %r5697, %r5698, 30;
	shf.l.wrap.b32 	%r5702, %r5698, %r5697, 30;
	mov.b64 	%rd8572, {%r5702, %r5701};
	xor.b64  	%rd8573, %rd8572, %rd8571;
	shf.l.wrap.b32 	%r5703, %r5697, %r5698, 25;
	shf.l.wrap.b32 	%r5704, %r5698, %r5697, 25;
	mov.b64 	%rd8574, {%r5704, %r5703};
	xor.b64  	%rd8575, %rd8573, %rd8574;
	and.b64  	%rd8576, %rd8554, %rd8527;
	xor.b64  	%rd8577, %rd8554, %rd8527;
	and.b64  	%rd8578, %rd8577, %rd18714;
	or.b64  	%rd8579, %rd8578, %rd8576;
	add.s64 	%rd8580, %rd8569, %rd8579;
	add.s64 	%rd8581, %rd8580, %rd8575;
	add.s32 	%r5705, %r12981, 3;
	mul.wide.s32 	%rd8582, %r5705, 8;
	add.s64 	%rd8583, %rd18513, %rd8582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5706,%dummy}, %rd8570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5707}, %rd8570;
	}
	shf.r.wrap.b32 	%r5708, %r5707, %r5706, 14;
	shf.r.wrap.b32 	%r5709, %r5706, %r5707, 14;
	mov.b64 	%rd8584, {%r5709, %r5708};
	shf.r.wrap.b32 	%r5710, %r5707, %r5706, 18;
	shf.r.wrap.b32 	%r5711, %r5706, %r5707, 18;
	mov.b64 	%rd8585, {%r5711, %r5710};
	xor.b64  	%rd8586, %rd8585, %rd8584;
	shf.l.wrap.b32 	%r5712, %r5706, %r5707, 23;
	shf.l.wrap.b32 	%r5713, %r5707, %r5706, 23;
	mov.b64 	%rd8587, {%r5713, %r5712};
	xor.b64  	%rd8588, %rd8586, %rd8587;
	xor.b64  	%rd8589, %rd8543, %rd8516;
	and.b64  	%rd8590, %rd8570, %rd8589;
	xor.b64  	%rd8591, %rd8590, %rd8516;
	add.s64 	%rd8592, %rd18725, %rd18718;
	ld.const.u64 	%rd8593, [%rd8583];
	add.s64 	%rd8594, %rd8592, %rd8593;
	add.s64 	%rd8595, %rd8594, %rd8591;
	add.s64 	%rd8596, %rd8595, %rd8588;
	add.s64 	%rd8597, %rd8596, %rd18714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5714,%dummy}, %rd8581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5715}, %rd8581;
	}
	shf.r.wrap.b32 	%r5716, %r5715, %r5714, 28;
	shf.r.wrap.b32 	%r5717, %r5714, %r5715, 28;
	mov.b64 	%rd8598, {%r5717, %r5716};
	shf.l.wrap.b32 	%r5718, %r5714, %r5715, 30;
	shf.l.wrap.b32 	%r5719, %r5715, %r5714, 30;
	mov.b64 	%rd8599, {%r5719, %r5718};
	xor.b64  	%rd8600, %rd8599, %rd8598;
	shf.l.wrap.b32 	%r5720, %r5714, %r5715, 25;
	shf.l.wrap.b32 	%r5721, %r5715, %r5714, 25;
	mov.b64 	%rd8601, {%r5721, %r5720};
	xor.b64  	%rd8602, %rd8600, %rd8601;
	and.b64  	%rd8603, %rd8581, %rd8554;
	xor.b64  	%rd8604, %rd8581, %rd8554;
	and.b64  	%rd8605, %rd8604, %rd8527;
	or.b64  	%rd8606, %rd8605, %rd8603;
	add.s64 	%rd8607, %rd8596, %rd8606;
	add.s64 	%rd8608, %rd8607, %rd8602;
	add.s32 	%r5722, %r12981, 4;
	mul.wide.s32 	%rd8609, %r5722, 8;
	add.s64 	%rd8610, %rd18513, %rd8609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5723,%dummy}, %rd8597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5724}, %rd8597;
	}
	shf.r.wrap.b32 	%r5725, %r5724, %r5723, 14;
	shf.r.wrap.b32 	%r5726, %r5723, %r5724, 14;
	mov.b64 	%rd8611, {%r5726, %r5725};
	shf.r.wrap.b32 	%r5727, %r5724, %r5723, 18;
	shf.r.wrap.b32 	%r5728, %r5723, %r5724, 18;
	mov.b64 	%rd8612, {%r5728, %r5727};
	xor.b64  	%rd8613, %rd8612, %rd8611;
	shf.l.wrap.b32 	%r5729, %r5723, %r5724, 23;
	shf.l.wrap.b32 	%r5730, %r5724, %r5723, 23;
	mov.b64 	%rd8614, {%r5730, %r5729};
	xor.b64  	%rd8615, %rd8613, %rd8614;
	xor.b64  	%rd8616, %rd8570, %rd8543;
	and.b64  	%rd8617, %rd8597, %rd8616;
	xor.b64  	%rd8618, %rd8617, %rd8543;
	add.s64 	%rd8619, %rd8516, %rd18726;
	ld.const.u64 	%rd8620, [%rd8610];
	add.s64 	%rd8621, %rd8619, %rd8620;
	add.s64 	%rd8622, %rd8621, %rd8618;
	add.s64 	%rd8623, %rd8622, %rd8615;
	add.s64 	%rd8624, %rd8623, %rd8527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5731,%dummy}, %rd8608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5732}, %rd8608;
	}
	shf.r.wrap.b32 	%r5733, %r5732, %r5731, 28;
	shf.r.wrap.b32 	%r5734, %r5731, %r5732, 28;
	mov.b64 	%rd8625, {%r5734, %r5733};
	shf.l.wrap.b32 	%r5735, %r5731, %r5732, 30;
	shf.l.wrap.b32 	%r5736, %r5732, %r5731, 30;
	mov.b64 	%rd8626, {%r5736, %r5735};
	xor.b64  	%rd8627, %rd8626, %rd8625;
	shf.l.wrap.b32 	%r5737, %r5731, %r5732, 25;
	shf.l.wrap.b32 	%r5738, %r5732, %r5731, 25;
	mov.b64 	%rd8628, {%r5738, %r5737};
	xor.b64  	%rd8629, %rd8627, %rd8628;
	and.b64  	%rd8630, %rd8608, %rd8581;
	xor.b64  	%rd8631, %rd8608, %rd8581;
	and.b64  	%rd8632, %rd8631, %rd8554;
	or.b64  	%rd8633, %rd8632, %rd8630;
	add.s64 	%rd8634, %rd8623, %rd8633;
	add.s64 	%rd8635, %rd8634, %rd8629;
	add.s32 	%r5739, %r12981, 5;
	mul.wide.s32 	%rd8636, %r5739, 8;
	add.s64 	%rd8637, %rd18513, %rd8636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5740,%dummy}, %rd8624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5741}, %rd8624;
	}
	shf.r.wrap.b32 	%r5742, %r5741, %r5740, 14;
	shf.r.wrap.b32 	%r5743, %r5740, %r5741, 14;
	mov.b64 	%rd8638, {%r5743, %r5742};
	shf.r.wrap.b32 	%r5744, %r5741, %r5740, 18;
	shf.r.wrap.b32 	%r5745, %r5740, %r5741, 18;
	mov.b64 	%rd8639, {%r5745, %r5744};
	xor.b64  	%rd8640, %rd8639, %rd8638;
	shf.l.wrap.b32 	%r5746, %r5740, %r5741, 23;
	shf.l.wrap.b32 	%r5747, %r5741, %r5740, 23;
	mov.b64 	%rd8641, {%r5747, %r5746};
	xor.b64  	%rd8642, %rd8640, %rd8641;
	xor.b64  	%rd8643, %rd8597, %rd8570;
	and.b64  	%rd8644, %rd8624, %rd8643;
	xor.b64  	%rd8645, %rd8644, %rd8570;
	add.s64 	%rd8646, %rd8543, %rd18727;
	ld.const.u64 	%rd8647, [%rd8637];
	add.s64 	%rd8648, %rd8646, %rd8647;
	add.s64 	%rd8649, %rd8648, %rd8645;
	add.s64 	%rd8650, %rd8649, %rd8642;
	add.s64 	%rd8651, %rd8650, %rd8554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5748,%dummy}, %rd8635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5749}, %rd8635;
	}
	shf.r.wrap.b32 	%r5750, %r5749, %r5748, 28;
	shf.r.wrap.b32 	%r5751, %r5748, %r5749, 28;
	mov.b64 	%rd8652, {%r5751, %r5750};
	shf.l.wrap.b32 	%r5752, %r5748, %r5749, 30;
	shf.l.wrap.b32 	%r5753, %r5749, %r5748, 30;
	mov.b64 	%rd8653, {%r5753, %r5752};
	xor.b64  	%rd8654, %rd8653, %rd8652;
	shf.l.wrap.b32 	%r5754, %r5748, %r5749, 25;
	shf.l.wrap.b32 	%r5755, %r5749, %r5748, 25;
	mov.b64 	%rd8655, {%r5755, %r5754};
	xor.b64  	%rd8656, %rd8654, %rd8655;
	and.b64  	%rd8657, %rd8635, %rd8608;
	xor.b64  	%rd8658, %rd8635, %rd8608;
	and.b64  	%rd8659, %rd8658, %rd8581;
	or.b64  	%rd8660, %rd8659, %rd8657;
	add.s64 	%rd8661, %rd8650, %rd8660;
	add.s64 	%rd8662, %rd8661, %rd8656;
	add.s32 	%r5756, %r12981, 6;
	mul.wide.s32 	%rd8663, %r5756, 8;
	add.s64 	%rd8664, %rd18513, %rd8663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5757,%dummy}, %rd8651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5758}, %rd8651;
	}
	shf.r.wrap.b32 	%r5759, %r5758, %r5757, 14;
	shf.r.wrap.b32 	%r5760, %r5757, %r5758, 14;
	mov.b64 	%rd8665, {%r5760, %r5759};
	shf.r.wrap.b32 	%r5761, %r5758, %r5757, 18;
	shf.r.wrap.b32 	%r5762, %r5757, %r5758, 18;
	mov.b64 	%rd8666, {%r5762, %r5761};
	xor.b64  	%rd8667, %rd8666, %rd8665;
	shf.l.wrap.b32 	%r5763, %r5757, %r5758, 23;
	shf.l.wrap.b32 	%r5764, %r5758, %r5757, 23;
	mov.b64 	%rd8668, {%r5764, %r5763};
	xor.b64  	%rd8669, %rd8667, %rd8668;
	xor.b64  	%rd8670, %rd8624, %rd8597;
	and.b64  	%rd8671, %rd8651, %rd8670;
	xor.b64  	%rd8672, %rd8671, %rd8597;
	add.s64 	%rd8673, %rd8570, %rd18728;
	ld.const.u64 	%rd8674, [%rd8664];
	add.s64 	%rd8675, %rd8673, %rd8674;
	add.s64 	%rd8676, %rd8675, %rd8672;
	add.s64 	%rd8677, %rd8676, %rd8669;
	add.s64 	%rd8678, %rd8677, %rd8581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5765,%dummy}, %rd8662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5766}, %rd8662;
	}
	shf.r.wrap.b32 	%r5767, %r5766, %r5765, 28;
	shf.r.wrap.b32 	%r5768, %r5765, %r5766, 28;
	mov.b64 	%rd8679, {%r5768, %r5767};
	shf.l.wrap.b32 	%r5769, %r5765, %r5766, 30;
	shf.l.wrap.b32 	%r5770, %r5766, %r5765, 30;
	mov.b64 	%rd8680, {%r5770, %r5769};
	xor.b64  	%rd8681, %rd8680, %rd8679;
	shf.l.wrap.b32 	%r5771, %r5765, %r5766, 25;
	shf.l.wrap.b32 	%r5772, %r5766, %r5765, 25;
	mov.b64 	%rd8682, {%r5772, %r5771};
	xor.b64  	%rd8683, %rd8681, %rd8682;
	and.b64  	%rd8684, %rd8662, %rd8635;
	xor.b64  	%rd8685, %rd8662, %rd8635;
	and.b64  	%rd8686, %rd8685, %rd8608;
	or.b64  	%rd8687, %rd8686, %rd8684;
	add.s64 	%rd8688, %rd8677, %rd8687;
	add.s64 	%rd8689, %rd8688, %rd8683;
	add.s32 	%r5773, %r12981, 7;
	mul.wide.s32 	%rd8690, %r5773, 8;
	add.s64 	%rd8691, %rd18513, %rd8690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5774,%dummy}, %rd8678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5775}, %rd8678;
	}
	shf.r.wrap.b32 	%r5776, %r5775, %r5774, 14;
	shf.r.wrap.b32 	%r5777, %r5774, %r5775, 14;
	mov.b64 	%rd8692, {%r5777, %r5776};
	shf.r.wrap.b32 	%r5778, %r5775, %r5774, 18;
	shf.r.wrap.b32 	%r5779, %r5774, %r5775, 18;
	mov.b64 	%rd8693, {%r5779, %r5778};
	xor.b64  	%rd8694, %rd8693, %rd8692;
	shf.l.wrap.b32 	%r5780, %r5774, %r5775, 23;
	shf.l.wrap.b32 	%r5781, %r5775, %r5774, 23;
	mov.b64 	%rd8695, {%r5781, %r5780};
	xor.b64  	%rd8696, %rd8694, %rd8695;
	xor.b64  	%rd8697, %rd8651, %rd8624;
	and.b64  	%rd8698, %rd8678, %rd8697;
	xor.b64  	%rd8699, %rd8698, %rd8624;
	add.s64 	%rd8700, %rd8597, %rd18729;
	ld.const.u64 	%rd8701, [%rd8691];
	add.s64 	%rd8702, %rd8700, %rd8701;
	add.s64 	%rd8703, %rd8702, %rd8699;
	add.s64 	%rd8704, %rd8703, %rd8696;
	add.s64 	%rd8705, %rd8704, %rd8608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5782,%dummy}, %rd8689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5783}, %rd8689;
	}
	shf.r.wrap.b32 	%r5784, %r5783, %r5782, 28;
	shf.r.wrap.b32 	%r5785, %r5782, %r5783, 28;
	mov.b64 	%rd8706, {%r5785, %r5784};
	shf.l.wrap.b32 	%r5786, %r5782, %r5783, 30;
	shf.l.wrap.b32 	%r5787, %r5783, %r5782, 30;
	mov.b64 	%rd8707, {%r5787, %r5786};
	xor.b64  	%rd8708, %rd8707, %rd8706;
	shf.l.wrap.b32 	%r5788, %r5782, %r5783, 25;
	shf.l.wrap.b32 	%r5789, %r5783, %r5782, 25;
	mov.b64 	%rd8709, {%r5789, %r5788};
	xor.b64  	%rd8710, %rd8708, %rd8709;
	and.b64  	%rd8711, %rd8689, %rd8662;
	xor.b64  	%rd8712, %rd8689, %rd8662;
	and.b64  	%rd8713, %rd8712, %rd8635;
	or.b64  	%rd8714, %rd8713, %rd8711;
	add.s64 	%rd8715, %rd8704, %rd8714;
	add.s64 	%rd8716, %rd8715, %rd8710;
	add.s32 	%r5790, %r12981, 8;
	mul.wide.s32 	%rd8717, %r5790, 8;
	add.s64 	%rd8718, %rd18513, %rd8717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5791,%dummy}, %rd8705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5792}, %rd8705;
	}
	shf.r.wrap.b32 	%r5793, %r5792, %r5791, 14;
	shf.r.wrap.b32 	%r5794, %r5791, %r5792, 14;
	mov.b64 	%rd8719, {%r5794, %r5793};
	shf.r.wrap.b32 	%r5795, %r5792, %r5791, 18;
	shf.r.wrap.b32 	%r5796, %r5791, %r5792, 18;
	mov.b64 	%rd8720, {%r5796, %r5795};
	xor.b64  	%rd8721, %rd8720, %rd8719;
	shf.l.wrap.b32 	%r5797, %r5791, %r5792, 23;
	shf.l.wrap.b32 	%r5798, %r5792, %r5791, 23;
	mov.b64 	%rd8722, {%r5798, %r5797};
	xor.b64  	%rd8723, %rd8721, %rd8722;
	xor.b64  	%rd8724, %rd8678, %rd8651;
	and.b64  	%rd8725, %rd8705, %rd8724;
	xor.b64  	%rd8726, %rd8725, %rd8651;
	add.s64 	%rd8727, %rd8624, %rd18713;
	ld.const.u64 	%rd8728, [%rd8718];
	add.s64 	%rd8729, %rd8727, %rd8728;
	add.s64 	%rd8730, %rd8729, %rd8726;
	add.s64 	%rd8731, %rd8730, %rd8723;
	add.s64 	%rd8732, %rd8731, %rd8635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5799,%dummy}, %rd8716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5800}, %rd8716;
	}
	shf.r.wrap.b32 	%r5801, %r5800, %r5799, 28;
	shf.r.wrap.b32 	%r5802, %r5799, %r5800, 28;
	mov.b64 	%rd8733, {%r5802, %r5801};
	shf.l.wrap.b32 	%r5803, %r5799, %r5800, 30;
	shf.l.wrap.b32 	%r5804, %r5800, %r5799, 30;
	mov.b64 	%rd8734, {%r5804, %r5803};
	xor.b64  	%rd8735, %rd8734, %rd8733;
	shf.l.wrap.b32 	%r5805, %r5799, %r5800, 25;
	shf.l.wrap.b32 	%r5806, %r5800, %r5799, 25;
	mov.b64 	%rd8736, {%r5806, %r5805};
	xor.b64  	%rd8737, %rd8735, %rd8736;
	and.b64  	%rd8738, %rd8716, %rd8689;
	xor.b64  	%rd8739, %rd8716, %rd8689;
	and.b64  	%rd8740, %rd8739, %rd8662;
	or.b64  	%rd8741, %rd8740, %rd8738;
	add.s64 	%rd8742, %rd8731, %rd8741;
	add.s64 	%rd8743, %rd8742, %rd8737;
	add.s32 	%r5807, %r12981, 9;
	mul.wide.s32 	%rd8744, %r5807, 8;
	add.s64 	%rd8745, %rd18513, %rd8744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5808,%dummy}, %rd8732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5809}, %rd8732;
	}
	shf.r.wrap.b32 	%r5810, %r5809, %r5808, 14;
	shf.r.wrap.b32 	%r5811, %r5808, %r5809, 14;
	mov.b64 	%rd8746, {%r5811, %r5810};
	shf.r.wrap.b32 	%r5812, %r5809, %r5808, 18;
	shf.r.wrap.b32 	%r5813, %r5808, %r5809, 18;
	mov.b64 	%rd8747, {%r5813, %r5812};
	xor.b64  	%rd8748, %rd8747, %rd8746;
	shf.l.wrap.b32 	%r5814, %r5808, %r5809, 23;
	shf.l.wrap.b32 	%r5815, %r5809, %r5808, 23;
	mov.b64 	%rd8749, {%r5815, %r5814};
	xor.b64  	%rd8750, %rd8748, %rd8749;
	xor.b64  	%rd8751, %rd8705, %rd8678;
	and.b64  	%rd8752, %rd8732, %rd8751;
	xor.b64  	%rd8753, %rd8752, %rd8678;
	add.s64 	%rd8754, %rd8651, %rd18712;
	ld.const.u64 	%rd8755, [%rd8745];
	add.s64 	%rd8756, %rd8754, %rd8755;
	add.s64 	%rd8757, %rd8756, %rd8753;
	add.s64 	%rd8758, %rd8757, %rd8750;
	add.s64 	%rd8759, %rd8758, %rd8662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5816,%dummy}, %rd8743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5817}, %rd8743;
	}
	shf.r.wrap.b32 	%r5818, %r5817, %r5816, 28;
	shf.r.wrap.b32 	%r5819, %r5816, %r5817, 28;
	mov.b64 	%rd8760, {%r5819, %r5818};
	shf.l.wrap.b32 	%r5820, %r5816, %r5817, 30;
	shf.l.wrap.b32 	%r5821, %r5817, %r5816, 30;
	mov.b64 	%rd8761, {%r5821, %r5820};
	xor.b64  	%rd8762, %rd8761, %rd8760;
	shf.l.wrap.b32 	%r5822, %r5816, %r5817, 25;
	shf.l.wrap.b32 	%r5823, %r5817, %r5816, 25;
	mov.b64 	%rd8763, {%r5823, %r5822};
	xor.b64  	%rd8764, %rd8762, %rd8763;
	and.b64  	%rd8765, %rd8743, %rd8716;
	xor.b64  	%rd8766, %rd8743, %rd8716;
	and.b64  	%rd8767, %rd8766, %rd8689;
	or.b64  	%rd8768, %rd8767, %rd8765;
	add.s64 	%rd8769, %rd8758, %rd8768;
	add.s64 	%rd8770, %rd8769, %rd8764;
	add.s32 	%r5824, %r12981, 10;
	mul.wide.s32 	%rd8771, %r5824, 8;
	add.s64 	%rd8772, %rd18513, %rd8771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5825,%dummy}, %rd8759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5826}, %rd8759;
	}
	shf.r.wrap.b32 	%r5827, %r5826, %r5825, 14;
	shf.r.wrap.b32 	%r5828, %r5825, %r5826, 14;
	mov.b64 	%rd8773, {%r5828, %r5827};
	shf.r.wrap.b32 	%r5829, %r5826, %r5825, 18;
	shf.r.wrap.b32 	%r5830, %r5825, %r5826, 18;
	mov.b64 	%rd8774, {%r5830, %r5829};
	xor.b64  	%rd8775, %rd8774, %rd8773;
	shf.l.wrap.b32 	%r5831, %r5825, %r5826, 23;
	shf.l.wrap.b32 	%r5832, %r5826, %r5825, 23;
	mov.b64 	%rd8776, {%r5832, %r5831};
	xor.b64  	%rd8777, %rd8775, %rd8776;
	xor.b64  	%rd8778, %rd8732, %rd8705;
	and.b64  	%rd8779, %rd8759, %rd8778;
	xor.b64  	%rd8780, %rd8779, %rd8705;
	add.s64 	%rd8781, %rd8678, %rd18711;
	ld.const.u64 	%rd8782, [%rd8772];
	add.s64 	%rd8783, %rd8781, %rd8782;
	add.s64 	%rd8784, %rd8783, %rd8780;
	add.s64 	%rd8785, %rd8784, %rd8777;
	add.s64 	%rd8786, %rd8785, %rd8689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5833,%dummy}, %rd8770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5834}, %rd8770;
	}
	shf.r.wrap.b32 	%r5835, %r5834, %r5833, 28;
	shf.r.wrap.b32 	%r5836, %r5833, %r5834, 28;
	mov.b64 	%rd8787, {%r5836, %r5835};
	shf.l.wrap.b32 	%r5837, %r5833, %r5834, 30;
	shf.l.wrap.b32 	%r5838, %r5834, %r5833, 30;
	mov.b64 	%rd8788, {%r5838, %r5837};
	xor.b64  	%rd8789, %rd8788, %rd8787;
	shf.l.wrap.b32 	%r5839, %r5833, %r5834, 25;
	shf.l.wrap.b32 	%r5840, %r5834, %r5833, 25;
	mov.b64 	%rd8790, {%r5840, %r5839};
	xor.b64  	%rd8791, %rd8789, %rd8790;
	and.b64  	%rd8792, %rd8770, %rd8743;
	xor.b64  	%rd8793, %rd8770, %rd8743;
	and.b64  	%rd8794, %rd8793, %rd8716;
	or.b64  	%rd8795, %rd8794, %rd8792;
	add.s64 	%rd8796, %rd8785, %rd8795;
	add.s64 	%rd8797, %rd8796, %rd8791;
	add.s32 	%r5841, %r12981, 11;
	mul.wide.s32 	%rd8798, %r5841, 8;
	add.s64 	%rd8799, %rd18513, %rd8798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5842,%dummy}, %rd8786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5843}, %rd8786;
	}
	shf.r.wrap.b32 	%r5844, %r5843, %r5842, 14;
	shf.r.wrap.b32 	%r5845, %r5842, %r5843, 14;
	mov.b64 	%rd8800, {%r5845, %r5844};
	shf.r.wrap.b32 	%r5846, %r5843, %r5842, 18;
	shf.r.wrap.b32 	%r5847, %r5842, %r5843, 18;
	mov.b64 	%rd8801, {%r5847, %r5846};
	xor.b64  	%rd8802, %rd8801, %rd8800;
	shf.l.wrap.b32 	%r5848, %r5842, %r5843, 23;
	shf.l.wrap.b32 	%r5849, %r5843, %r5842, 23;
	mov.b64 	%rd8803, {%r5849, %r5848};
	xor.b64  	%rd8804, %rd8802, %rd8803;
	xor.b64  	%rd8805, %rd8759, %rd8732;
	and.b64  	%rd8806, %rd8786, %rd8805;
	xor.b64  	%rd8807, %rd8806, %rd8732;
	add.s64 	%rd8808, %rd8705, %rd18710;
	ld.const.u64 	%rd8809, [%rd8799];
	add.s64 	%rd8810, %rd8808, %rd8809;
	add.s64 	%rd8811, %rd8810, %rd8807;
	add.s64 	%rd8812, %rd8811, %rd8804;
	add.s64 	%rd8813, %rd8812, %rd8716;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5850,%dummy}, %rd8797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5851}, %rd8797;
	}
	shf.r.wrap.b32 	%r5852, %r5851, %r5850, 28;
	shf.r.wrap.b32 	%r5853, %r5850, %r5851, 28;
	mov.b64 	%rd8814, {%r5853, %r5852};
	shf.l.wrap.b32 	%r5854, %r5850, %r5851, 30;
	shf.l.wrap.b32 	%r5855, %r5851, %r5850, 30;
	mov.b64 	%rd8815, {%r5855, %r5854};
	xor.b64  	%rd8816, %rd8815, %rd8814;
	shf.l.wrap.b32 	%r5856, %r5850, %r5851, 25;
	shf.l.wrap.b32 	%r5857, %r5851, %r5850, 25;
	mov.b64 	%rd8817, {%r5857, %r5856};
	xor.b64  	%rd8818, %rd8816, %rd8817;
	and.b64  	%rd8819, %rd8797, %rd8770;
	xor.b64  	%rd8820, %rd8797, %rd8770;
	and.b64  	%rd8821, %rd8820, %rd8743;
	or.b64  	%rd8822, %rd8821, %rd8819;
	add.s64 	%rd8823, %rd8812, %rd8822;
	add.s64 	%rd8824, %rd8823, %rd8818;
	add.s32 	%r5858, %r12981, 12;
	mul.wide.s32 	%rd8825, %r5858, 8;
	add.s64 	%rd8826, %rd18513, %rd8825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5859,%dummy}, %rd8813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5860}, %rd8813;
	}
	shf.r.wrap.b32 	%r5861, %r5860, %r5859, 14;
	shf.r.wrap.b32 	%r5862, %r5859, %r5860, 14;
	mov.b64 	%rd8827, {%r5862, %r5861};
	shf.r.wrap.b32 	%r5863, %r5860, %r5859, 18;
	shf.r.wrap.b32 	%r5864, %r5859, %r5860, 18;
	mov.b64 	%rd8828, {%r5864, %r5863};
	xor.b64  	%rd8829, %rd8828, %rd8827;
	shf.l.wrap.b32 	%r5865, %r5859, %r5860, 23;
	shf.l.wrap.b32 	%r5866, %r5860, %r5859, 23;
	mov.b64 	%rd8830, {%r5866, %r5865};
	xor.b64  	%rd8831, %rd8829, %rd8830;
	xor.b64  	%rd8832, %rd8786, %rd8759;
	and.b64  	%rd8833, %rd8813, %rd8832;
	xor.b64  	%rd8834, %rd8833, %rd8759;
	add.s64 	%rd8835, %rd8732, %rd18709;
	ld.const.u64 	%rd8836, [%rd8826];
	add.s64 	%rd8837, %rd8835, %rd8836;
	add.s64 	%rd8838, %rd8837, %rd8834;
	add.s64 	%rd8839, %rd8838, %rd8831;
	add.s64 	%rd18721, %rd8839, %rd8743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5867,%dummy}, %rd8824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5868}, %rd8824;
	}
	shf.r.wrap.b32 	%r5869, %r5868, %r5867, 28;
	shf.r.wrap.b32 	%r5870, %r5867, %r5868, 28;
	mov.b64 	%rd8840, {%r5870, %r5869};
	shf.l.wrap.b32 	%r5871, %r5867, %r5868, 30;
	shf.l.wrap.b32 	%r5872, %r5868, %r5867, 30;
	mov.b64 	%rd8841, {%r5872, %r5871};
	xor.b64  	%rd8842, %rd8841, %rd8840;
	shf.l.wrap.b32 	%r5873, %r5867, %r5868, 25;
	shf.l.wrap.b32 	%r5874, %r5868, %r5867, 25;
	mov.b64 	%rd8843, {%r5874, %r5873};
	xor.b64  	%rd8844, %rd8842, %rd8843;
	and.b64  	%rd8845, %rd8824, %rd8797;
	xor.b64  	%rd8846, %rd8824, %rd8797;
	and.b64  	%rd8847, %rd8846, %rd8770;
	or.b64  	%rd8848, %rd8847, %rd8845;
	add.s64 	%rd8849, %rd8839, %rd8848;
	add.s64 	%rd18717, %rd8849, %rd8844;
	add.s32 	%r5875, %r12981, 13;
	mul.wide.s32 	%rd8850, %r5875, 8;
	add.s64 	%rd8851, %rd18513, %rd8850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5876,%dummy}, %rd18721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5877}, %rd18721;
	}
	shf.r.wrap.b32 	%r5878, %r5877, %r5876, 14;
	shf.r.wrap.b32 	%r5879, %r5876, %r5877, 14;
	mov.b64 	%rd8852, {%r5879, %r5878};
	shf.r.wrap.b32 	%r5880, %r5877, %r5876, 18;
	shf.r.wrap.b32 	%r5881, %r5876, %r5877, 18;
	mov.b64 	%rd8853, {%r5881, %r5880};
	xor.b64  	%rd8854, %rd8853, %rd8852;
	shf.l.wrap.b32 	%r5882, %r5876, %r5877, 23;
	shf.l.wrap.b32 	%r5883, %r5877, %r5876, 23;
	mov.b64 	%rd8855, {%r5883, %r5882};
	xor.b64  	%rd8856, %rd8854, %rd8855;
	xor.b64  	%rd8857, %rd8813, %rd8786;
	and.b64  	%rd8858, %rd18721, %rd8857;
	xor.b64  	%rd8859, %rd8858, %rd8786;
	add.s64 	%rd8860, %rd8759, %rd18708;
	ld.const.u64 	%rd8861, [%rd8851];
	add.s64 	%rd8862, %rd8860, %rd8861;
	add.s64 	%rd8863, %rd8862, %rd8859;
	add.s64 	%rd8864, %rd8863, %rd8856;
	add.s64 	%rd18720, %rd8864, %rd8770;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5884,%dummy}, %rd18717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5885}, %rd18717;
	}
	shf.r.wrap.b32 	%r5886, %r5885, %r5884, 28;
	shf.r.wrap.b32 	%r5887, %r5884, %r5885, 28;
	mov.b64 	%rd8865, {%r5887, %r5886};
	shf.l.wrap.b32 	%r5888, %r5884, %r5885, 30;
	shf.l.wrap.b32 	%r5889, %r5885, %r5884, 30;
	mov.b64 	%rd8866, {%r5889, %r5888};
	xor.b64  	%rd8867, %rd8866, %rd8865;
	shf.l.wrap.b32 	%r5890, %r5884, %r5885, 25;
	shf.l.wrap.b32 	%r5891, %r5885, %r5884, 25;
	mov.b64 	%rd8868, {%r5891, %r5890};
	xor.b64  	%rd8869, %rd8867, %rd8868;
	and.b64  	%rd8870, %rd18717, %rd8824;
	xor.b64  	%rd8871, %rd18717, %rd8824;
	and.b64  	%rd8872, %rd8871, %rd8797;
	or.b64  	%rd8873, %rd8872, %rd8870;
	add.s64 	%rd8874, %rd8864, %rd8873;
	add.s64 	%rd18716, %rd8874, %rd8869;
	add.s32 	%r5892, %r12981, 14;
	mul.wide.s32 	%rd8875, %r5892, 8;
	add.s64 	%rd8876, %rd18513, %rd8875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5893,%dummy}, %rd18720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5894}, %rd18720;
	}
	shf.r.wrap.b32 	%r5895, %r5894, %r5893, 14;
	shf.r.wrap.b32 	%r5896, %r5893, %r5894, 14;
	mov.b64 	%rd8877, {%r5896, %r5895};
	shf.r.wrap.b32 	%r5897, %r5894, %r5893, 18;
	shf.r.wrap.b32 	%r5898, %r5893, %r5894, 18;
	mov.b64 	%rd8878, {%r5898, %r5897};
	xor.b64  	%rd8879, %rd8878, %rd8877;
	shf.l.wrap.b32 	%r5899, %r5893, %r5894, 23;
	shf.l.wrap.b32 	%r5900, %r5894, %r5893, 23;
	mov.b64 	%rd8880, {%r5900, %r5899};
	xor.b64  	%rd8881, %rd8879, %rd8880;
	xor.b64  	%rd8882, %rd18721, %rd8813;
	and.b64  	%rd8883, %rd18720, %rd8882;
	xor.b64  	%rd8884, %rd8883, %rd8813;
	add.s64 	%rd8885, %rd8786, %rd18707;
	ld.const.u64 	%rd8886, [%rd8876];
	add.s64 	%rd8887, %rd8885, %rd8886;
	add.s64 	%rd8888, %rd8887, %rd8884;
	add.s64 	%rd8889, %rd8888, %rd8881;
	add.s64 	%rd18719, %rd8889, %rd8797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5901,%dummy}, %rd18716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5902}, %rd18716;
	}
	shf.r.wrap.b32 	%r5903, %r5902, %r5901, 28;
	shf.r.wrap.b32 	%r5904, %r5901, %r5902, 28;
	mov.b64 	%rd8890, {%r5904, %r5903};
	shf.l.wrap.b32 	%r5905, %r5901, %r5902, 30;
	shf.l.wrap.b32 	%r5906, %r5902, %r5901, 30;
	mov.b64 	%rd8891, {%r5906, %r5905};
	xor.b64  	%rd8892, %rd8891, %rd8890;
	shf.l.wrap.b32 	%r5907, %r5901, %r5902, 25;
	shf.l.wrap.b32 	%r5908, %r5902, %r5901, 25;
	mov.b64 	%rd8893, {%r5908, %r5907};
	xor.b64  	%rd8894, %rd8892, %rd8893;
	and.b64  	%rd8895, %rd18716, %rd18717;
	xor.b64  	%rd8896, %rd18716, %rd18717;
	and.b64  	%rd8897, %rd8896, %rd8824;
	or.b64  	%rd8898, %rd8897, %rd8895;
	add.s64 	%rd8899, %rd8889, %rd8898;
	add.s64 	%rd18715, %rd8899, %rd8894;
	add.s32 	%r5909, %r12981, 15;
	mul.wide.s32 	%rd8900, %r5909, 8;
	add.s64 	%rd8901, %rd18513, %rd8900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5910,%dummy}, %rd18719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5911}, %rd18719;
	}
	shf.r.wrap.b32 	%r5912, %r5911, %r5910, 14;
	shf.r.wrap.b32 	%r5913, %r5910, %r5911, 14;
	mov.b64 	%rd8902, {%r5913, %r5912};
	shf.r.wrap.b32 	%r5914, %r5911, %r5910, 18;
	shf.r.wrap.b32 	%r5915, %r5910, %r5911, 18;
	mov.b64 	%rd8903, {%r5915, %r5914};
	xor.b64  	%rd8904, %rd8903, %rd8902;
	shf.l.wrap.b32 	%r5916, %r5910, %r5911, 23;
	shf.l.wrap.b32 	%r5917, %r5911, %r5910, 23;
	mov.b64 	%rd8905, {%r5917, %r5916};
	xor.b64  	%rd8906, %rd8904, %rd8905;
	xor.b64  	%rd8907, %rd18720, %rd18721;
	and.b64  	%rd8908, %rd18719, %rd8907;
	xor.b64  	%rd8909, %rd8908, %rd18721;
	add.s64 	%rd8910, %rd8813, %rd18706;
	ld.const.u64 	%rd8911, [%rd8901];
	add.s64 	%rd8912, %rd8910, %rd8911;
	add.s64 	%rd8913, %rd8912, %rd8909;
	add.s64 	%rd8914, %rd8913, %rd8906;
	add.s64 	%rd18718, %rd8914, %rd8824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5918,%dummy}, %rd18715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5919}, %rd18715;
	}
	shf.r.wrap.b32 	%r5920, %r5919, %r5918, 28;
	shf.r.wrap.b32 	%r5921, %r5918, %r5919, 28;
	mov.b64 	%rd8915, {%r5921, %r5920};
	shf.l.wrap.b32 	%r5922, %r5918, %r5919, 30;
	shf.l.wrap.b32 	%r5923, %r5919, %r5918, 30;
	mov.b64 	%rd8916, {%r5923, %r5922};
	xor.b64  	%rd8917, %rd8916, %rd8915;
	shf.l.wrap.b32 	%r5924, %r5918, %r5919, 25;
	shf.l.wrap.b32 	%r5925, %r5919, %r5918, 25;
	mov.b64 	%rd8918, {%r5925, %r5924};
	xor.b64  	%rd8919, %rd8917, %rd8918;
	and.b64  	%rd8920, %rd18715, %rd18716;
	xor.b64  	%rd8921, %rd18715, %rd18716;
	and.b64  	%rd8922, %rd8921, %rd18717;
	or.b64  	%rd8923, %rd8922, %rd8920;
	add.s64 	%rd8924, %rd8914, %rd8923;
	add.s64 	%rd18714, %rd8924, %rd8919;
	add.s32 	%r12981, %r12981, 16;
	setp.lt.s32	%p106, %r12981, 80;
	@%p106 bra 	BB0_171;

	add.s64 	%rd8925, %rd591, %rd18714;
	st.local.u64 	[%rd1], %rd8925;
	add.s64 	%rd8926, %rd592, %rd18715;
	st.local.u64 	[%rd1+8], %rd8926;
	add.s64 	%rd8927, %rd593, %rd18716;
	st.local.u64 	[%rd1+16], %rd8927;
	add.s64 	%rd8928, %rd590, %rd18717;
	st.local.u64 	[%rd1+24], %rd8928;
	add.s64 	%rd8929, %rd585, %rd18718;
	st.local.u64 	[%rd1+32], %rd8929;
	add.s64 	%rd8930, %rd587, %rd18719;
	st.local.u64 	[%rd1+40], %rd8930;
	add.s64 	%rd8931, %rd586, %rd18720;
	st.local.u64 	[%rd1+48], %rd8931;
	add.s64 	%rd8932, %rd588, %rd18721;
	st.local.u64 	[%rd1+56], %rd8932;
	mov.u32 	%r5926, 64;
	sub.s32 	%r262, %r5926, %r242;
	setp.lt.s32	%p107, %r262, 1;
	@%p107 bra 	BB0_210;

	and.b32  	%r263, %r240, 3;
	setp.eq.s32	%p108, %r263, 0;
	mov.u32 	%r12985, 0;
	@%p108 bra 	BB0_179;

	setp.eq.s32	%p109, %r263, 1;
	mov.u32 	%r12983, 0;
	@%p109 bra 	BB0_178;

	setp.eq.s32	%p110, %r263, 2;
	mov.u32 	%r12982, 0;
	@%p110 bra 	BB0_177;

	xor.b32  	%r5931, %r242, 7;
	cvt.u64.u32	%rd8933, %r5931;
	add.s64 	%rd8934, %rd339, %rd8933;
	ld.local.u8 	%rs119, [%rd8934];
	st.local.u8 	[%rd583], %rs119;
	mov.u32 	%r12982, 1;

BB0_177:
	add.s32 	%r5932, %r12982, %r242;
	xor.b32  	%r5933, %r5932, 7;
	cvt.s64.s32	%rd8935, %r5933;
	add.s64 	%rd8936, %rd339, %rd8935;
	ld.local.u8 	%rs120, [%rd8936];
	xor.b32  	%r5934, %r12982, 7;
	cvt.u64.u32	%rd8937, %r5934;
	add.s64 	%rd8938, %rd89, %rd8937;
	st.local.u8 	[%rd8938], %rs120;
	add.s32 	%r12983, %r12982, 1;

BB0_178:
	add.s32 	%r5935, %r12983, %r242;
	xor.b32  	%r5936, %r5935, 7;
	cvt.s64.s32	%rd8939, %r5936;
	add.s64 	%rd8940, %rd339, %rd8939;
	ld.local.u8 	%rs121, [%rd8940];
	xor.b32  	%r5937, %r12983, 7;
	cvt.s64.s32	%rd8941, %r5937;
	add.s64 	%rd8942, %rd89, %rd8941;
	st.local.u8 	[%rd8942], %rs121;
	add.s32 	%r12985, %r12983, 1;

BB0_179:
	and.b32  	%r5938, %r240, 124;
	setp.eq.s32	%p111, %r5938, 64;
	@%p111 bra 	BB0_210;

BB0_180:
	add.s32 	%r5939, %r12985, %r242;
	xor.b32  	%r5940, %r5939, 7;
	cvt.s64.s32	%rd8943, %r5940;
	add.s64 	%rd8944, %rd339, %rd8943;
	ld.local.u8 	%rs122, [%rd8944];
	xor.b32  	%r5941, %r12985, 7;
	cvt.s64.s32	%rd8945, %r5941;
	add.s64 	%rd8946, %rd89, %rd8945;
	st.local.u8 	[%rd8946], %rs122;
	add.s32 	%r5942, %r12985, 1;
	add.s32 	%r5943, %r5942, %r242;
	xor.b32  	%r5944, %r5943, 7;
	cvt.s64.s32	%rd8947, %r5944;
	add.s64 	%rd8948, %rd339, %rd8947;
	ld.local.u8 	%rs123, [%rd8948];
	xor.b32  	%r5945, %r5942, 7;
	cvt.s64.s32	%rd8949, %r5945;
	add.s64 	%rd8950, %rd89, %rd8949;
	st.local.u8 	[%rd8950], %rs123;
	add.s32 	%r5946, %r12985, 2;
	add.s32 	%r5947, %r5946, %r242;
	xor.b32  	%r5948, %r5947, 7;
	cvt.s64.s32	%rd8951, %r5948;
	add.s64 	%rd8952, %rd339, %rd8951;
	ld.local.u8 	%rs124, [%rd8952];
	xor.b32  	%r5949, %r5946, 7;
	cvt.s64.s32	%rd8953, %r5949;
	add.s64 	%rd8954, %rd89, %rd8953;
	st.local.u8 	[%rd8954], %rs124;
	add.s32 	%r5950, %r12985, 3;
	add.s32 	%r5951, %r5950, %r242;
	xor.b32  	%r5952, %r5951, 7;
	cvt.s64.s32	%rd8955, %r5952;
	add.s64 	%rd8956, %rd339, %rd8955;
	ld.local.u8 	%rs125, [%rd8956];
	xor.b32  	%r5953, %r5950, 7;
	cvt.s64.s32	%rd8957, %r5953;
	add.s64 	%rd8958, %rd89, %rd8957;
	st.local.u8 	[%rd8958], %rs125;
	add.s32 	%r12985, %r12985, 4;
	setp.lt.s32	%p112, %r12985, %r262;
	@%p112 bra 	BB0_180;

BB0_210:
	shr.u32 	%r12972, %r12972, 1;
	setp.ne.s32	%p131, %r12972, 0;
	@%p131 bra 	BB0_160;

BB0_211:
	ld.local.u32 	%r6873, [%rd1+192];
	and.b32  	%r316, %r6873, 127;
	sub.s32 	%r317, %r2137, %r316;
	and.b32  	%r318, %r317, 3;
	setp.eq.s32	%p132, %r318, 0;
	mov.u32 	%r324, %r316;
	@%p132 bra 	BB0_217;

	setp.eq.s32	%p133, %r318, 1;
	mov.u32 	%r13008, %r316;
	@%p133 bra 	BB0_216;

	setp.eq.s32	%p134, %r318, 2;
	mov.u32 	%r13007, %r316;
	@%p134 bra 	BB0_215;

	xor.b32  	%r6875, %r316, 7;
	cvt.u64.u32	%rd10166, %r6875;
	add.s64 	%rd10167, %rd89, %rd10166;
	mov.u16 	%rs215, 0;
	st.local.u8 	[%rd10167], %rs215;
	add.s32 	%r13007, %r316, 1;

BB0_215:
	xor.b32  	%r6876, %r13007, 7;
	cvt.s64.s32	%rd10168, %r6876;
	add.s64 	%rd10169, %rd89, %rd10168;
	mov.u16 	%rs216, 0;
	st.local.u8 	[%rd10169], %rs216;
	add.s32 	%r13008, %r13007, 1;

BB0_216:
	xor.b32  	%r6877, %r13008, 7;
	cvt.s64.s32	%rd10170, %r6877;
	add.s64 	%rd10171, %rd89, %rd10170;
	mov.u16 	%rs217, 0;
	st.local.u8 	[%rd10171], %rs217;
	add.s32 	%r324, %r13008, 1;

BB0_217:
	setp.lt.u32	%p135, %r317, 4;
	@%p135 bra 	BB0_227;

	add.s32 	%r325, %r324, 4;
	setp.gt.s32	%p136, %r325, 128;
	add.s32 	%r326, %r324, 3;
	selp.b32	%r6878, %r326, 127, %p136;
	sub.s32 	%r6879, %r6878, %r324;
	shr.u32 	%r6880, %r6879, 2;
	add.s32 	%r327, %r6880, 1;
	and.b32  	%r328, %r327, 3;
	setp.eq.s32	%p137, %r328, 0;
	@%p137 bra 	BB0_225;

	setp.eq.s32	%p138, %r328, 1;
	@%p138 bra 	BB0_224;

	setp.eq.s32	%p139, %r328, 2;
	@%p139 bra 	BB0_221;
	bra.uni 	BB0_222;

BB0_221:
	mov.u32 	%r325, %r324;
	bra.uni 	BB0_223;

BB0_222:
	xor.b32  	%r6881, %r324, 7;
	cvt.s64.s32	%rd10172, %r6881;
	add.s64 	%rd10173, %rd89, %rd10172;
	mov.u16 	%rs218, 0;
	st.local.u8 	[%rd10173], %rs218;
	add.s32 	%r6882, %r324, 1;
	xor.b32  	%r6883, %r6882, 7;
	cvt.s64.s32	%rd10174, %r6883;
	add.s64 	%rd10175, %rd89, %rd10174;
	st.local.u8 	[%rd10175], %rs218;
	add.s32 	%r6884, %r324, 2;
	xor.b32  	%r6885, %r6884, 7;
	cvt.s64.s32	%rd10176, %r6885;
	add.s64 	%rd10177, %rd89, %rd10176;
	st.local.u8 	[%rd10177], %rs218;
	xor.b32  	%r6886, %r326, 7;
	cvt.s64.s32	%rd10178, %r6886;
	add.s64 	%rd10179, %rd89, %rd10178;
	st.local.u8 	[%rd10179], %rs218;

BB0_223:
	xor.b32  	%r6887, %r325, 7;
	cvt.s64.s32	%rd10180, %r6887;
	add.s64 	%rd10181, %rd89, %rd10180;
	mov.u16 	%rs219, 0;
	st.local.u8 	[%rd10181], %rs219;
	add.s32 	%r6888, %r325, 1;
	xor.b32  	%r6889, %r6888, 7;
	cvt.s64.s32	%rd10182, %r6889;
	add.s64 	%rd10183, %rd89, %rd10182;
	st.local.u8 	[%rd10183], %rs219;
	add.s32 	%r6890, %r325, 2;
	xor.b32  	%r6891, %r6890, 7;
	cvt.s64.s32	%rd10184, %r6891;
	add.s64 	%rd10185, %rd89, %rd10184;
	st.local.u8 	[%rd10185], %rs219;
	add.s32 	%r6892, %r325, 3;
	xor.b32  	%r6893, %r6892, 7;
	cvt.s64.s32	%rd10186, %r6893;
	add.s64 	%rd10187, %rd89, %rd10186;
	st.local.u8 	[%rd10187], %rs219;
	add.s32 	%r324, %r325, 4;

BB0_224:
	xor.b32  	%r6894, %r324, 7;
	cvt.s64.s32	%rd10188, %r6894;
	add.s64 	%rd10189, %rd89, %rd10188;
	mov.u16 	%rs220, 0;
	st.local.u8 	[%rd10189], %rs220;
	add.s32 	%r6895, %r324, 1;
	xor.b32  	%r6896, %r6895, 7;
	cvt.s64.s32	%rd10190, %r6896;
	add.s64 	%rd10191, %rd89, %rd10190;
	st.local.u8 	[%rd10191], %rs220;
	add.s32 	%r6897, %r324, 2;
	xor.b32  	%r6898, %r6897, 7;
	cvt.s64.s32	%rd10192, %r6898;
	add.s64 	%rd10193, %rd89, %rd10192;
	st.local.u8 	[%rd10193], %rs220;
	add.s32 	%r6899, %r324, 3;
	xor.b32  	%r6900, %r6899, 7;
	cvt.s64.s32	%rd10194, %r6900;
	add.s64 	%rd10195, %rd89, %rd10194;
	st.local.u8 	[%rd10195], %rs220;
	add.s32 	%r324, %r324, 4;

BB0_225:
	setp.lt.u32	%p140, %r327, 4;
	@%p140 bra 	BB0_227;

BB0_226:
	xor.b32  	%r6901, %r324, 7;
	cvt.s64.s32	%rd10196, %r6901;
	add.s64 	%rd10197, %rd89, %rd10196;
	mov.u16 	%rs221, 0;
	st.local.u8 	[%rd10197], %rs221;
	add.s32 	%r6902, %r324, 1;
	xor.b32  	%r6903, %r6902, 7;
	cvt.s64.s32	%rd10198, %r6903;
	add.s64 	%rd10199, %rd89, %rd10198;
	st.local.u8 	[%rd10199], %rs221;
	add.s32 	%r6904, %r324, 2;
	xor.b32  	%r6905, %r6904, 7;
	cvt.s64.s32	%rd10200, %r6905;
	add.s64 	%rd10201, %rd89, %rd10200;
	st.local.u8 	[%rd10201], %rs221;
	add.s32 	%r6906, %r324, 3;
	xor.b32  	%r6907, %r6906, 7;
	cvt.s64.s32	%rd10202, %r6907;
	add.s64 	%rd10203, %rd89, %rd10202;
	st.local.u8 	[%rd10203], %rs221;
	add.s32 	%r6908, %r324, 4;
	xor.b32  	%r6909, %r6908, 7;
	cvt.s64.s32	%rd10204, %r6909;
	add.s64 	%rd10205, %rd89, %rd10204;
	st.local.u8 	[%rd10205], %rs221;
	add.s32 	%r6910, %r324, 5;
	xor.b32  	%r6911, %r6910, 7;
	cvt.s64.s32	%rd10206, %r6911;
	add.s64 	%rd10207, %rd89, %rd10206;
	st.local.u8 	[%rd10207], %rs221;
	add.s32 	%r6912, %r324, 6;
	xor.b32  	%r6913, %r6912, 7;
	cvt.s64.s32	%rd10208, %r6913;
	add.s64 	%rd10209, %rd89, %rd10208;
	st.local.u8 	[%rd10209], %rs221;
	add.s32 	%r6914, %r324, 7;
	xor.b32  	%r6915, %r6914, 7;
	cvt.s64.s32	%rd10210, %r6915;
	add.s64 	%rd10211, %rd89, %rd10210;
	st.local.u8 	[%rd10211], %rs221;
	add.s32 	%r6916, %r324, 8;
	xor.b32  	%r6917, %r6916, 7;
	cvt.s64.s32	%rd10212, %r6917;
	add.s64 	%rd10213, %rd89, %rd10212;
	st.local.u8 	[%rd10213], %rs221;
	add.s32 	%r6918, %r324, 9;
	xor.b32  	%r6919, %r6918, 7;
	cvt.s64.s32	%rd10214, %r6919;
	add.s64 	%rd10215, %rd89, %rd10214;
	st.local.u8 	[%rd10215], %rs221;
	add.s32 	%r6920, %r324, 10;
	xor.b32  	%r6921, %r6920, 7;
	cvt.s64.s32	%rd10216, %r6921;
	add.s64 	%rd10217, %rd89, %rd10216;
	st.local.u8 	[%rd10217], %rs221;
	add.s32 	%r6922, %r324, 11;
	xor.b32  	%r6923, %r6922, 7;
	cvt.s64.s32	%rd10218, %r6923;
	add.s64 	%rd10219, %rd89, %rd10218;
	st.local.u8 	[%rd10219], %rs221;
	add.s32 	%r6924, %r324, 12;
	xor.b32  	%r6925, %r6924, 7;
	cvt.s64.s32	%rd10220, %r6925;
	add.s64 	%rd10221, %rd89, %rd10220;
	st.local.u8 	[%rd10221], %rs221;
	add.s32 	%r6926, %r324, 13;
	xor.b32  	%r6927, %r6926, 7;
	cvt.s64.s32	%rd10222, %r6927;
	add.s64 	%rd10223, %rd89, %rd10222;
	st.local.u8 	[%rd10223], %rs221;
	add.s32 	%r6928, %r324, 14;
	xor.b32  	%r6929, %r6928, 7;
	cvt.s64.s32	%rd10224, %r6929;
	add.s64 	%rd10225, %rd89, %rd10224;
	st.local.u8 	[%rd10225], %rs221;
	add.s32 	%r6930, %r324, 15;
	xor.b32  	%r6931, %r6930, 7;
	cvt.s64.s32	%rd10226, %r6931;
	add.s64 	%rd10227, %rd89, %rd10226;
	st.local.u8 	[%rd10227], %rs221;
	add.s32 	%r324, %r324, 16;
	setp.lt.s32	%p141, %r324, 128;
	@%p141 bra 	BB0_226;

BB0_227:
	mov.u16 	%rs278, 128;
	xor.b32  	%r6932, %r316, 7;
	cvt.u64.u32	%rd10228, %r6932;
	add.s64 	%rd10229, %rd89, %rd10228;
	st.local.u8 	[%rd10229], %rs278;
	ld.local.u64 	%rd18817, [%rd1+64];
	ld.local.u64 	%rd18818, [%rd1+72];
	ld.local.u64 	%rd18819, [%rd1+80];
	ld.local.u64 	%rd18820, [%rd1+88];
	ld.local.u64 	%rd18821, [%rd1+96];
	ld.local.u64 	%rd18822, [%rd1+104];
	ld.local.u64 	%rd18823, [%rd1+112];
	ld.local.u64 	%rd18824, [%rd1+120];
	ld.local.u64 	%rd18808, [%rd1+128];
	ld.local.u64 	%rd18807, [%rd1+136];
	ld.local.u64 	%rd18806, [%rd1+144];
	ld.local.u64 	%rd18805, [%rd1+152];
	ld.local.u64 	%rd18804, [%rd1+160];
	ld.local.u64 	%rd18803, [%rd1+168];
	ld.local.u64 	%rd18802, [%rd1+176];
	setp.gt.u32	%p142, %r316, 111;
	@%p142 bra 	BB0_229;
	bra.uni 	BB0_228;

BB0_229:
	ld.local.u64 	%rd768, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6934,%dummy}, %rd768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6935}, %rd768;
	}
	shf.r.wrap.b32 	%r6936, %r6935, %r6934, 14;
	shf.r.wrap.b32 	%r6937, %r6934, %r6935, 14;
	mov.b64 	%rd10230, {%r6937, %r6936};
	shf.r.wrap.b32 	%r6938, %r6935, %r6934, 18;
	shf.r.wrap.b32 	%r6939, %r6934, %r6935, 18;
	mov.b64 	%rd10231, {%r6939, %r6938};
	xor.b64  	%rd10232, %rd10231, %rd10230;
	shf.l.wrap.b32 	%r6940, %r6934, %r6935, 23;
	shf.l.wrap.b32 	%r6941, %r6935, %r6934, 23;
	mov.b64 	%rd10233, {%r6941, %r6940};
	xor.b64  	%rd10234, %rd10232, %rd10233;
	ld.local.u64 	%rd769, [%rd1+48];
	ld.local.u64 	%rd770, [%rd1+40];
	xor.b64  	%rd10235, %rd769, %rd770;
	and.b64  	%rd10236, %rd10235, %rd768;
	xor.b64  	%rd10237, %rd10236, %rd769;
	ld.local.u64 	%rd771, [%rd1+56];
	add.s64 	%rd10238, %rd771, %rd18817;
	add.s64 	%rd10239, %rd10238, %rd18610;
	add.s64 	%rd10240, %rd10239, %rd10237;
	add.s64 	%rd10241, %rd10240, %rd10234;
	ld.local.u64 	%rd772, [%rd1+24];
	add.s64 	%rd10242, %rd10241, %rd772;
	ld.local.u64 	%rd773, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6942,%dummy}, %rd773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6943}, %rd773;
	}
	shf.r.wrap.b32 	%r6944, %r6943, %r6942, 28;
	shf.r.wrap.b32 	%r6945, %r6942, %r6943, 28;
	mov.b64 	%rd10243, {%r6945, %r6944};
	shf.l.wrap.b32 	%r6946, %r6942, %r6943, 30;
	shf.l.wrap.b32 	%r6947, %r6943, %r6942, 30;
	mov.b64 	%rd10244, {%r6947, %r6946};
	xor.b64  	%rd10245, %rd10244, %rd10243;
	shf.l.wrap.b32 	%r6948, %r6942, %r6943, 25;
	shf.l.wrap.b32 	%r6949, %r6943, %r6942, 25;
	mov.b64 	%rd10246, {%r6949, %r6948};
	xor.b64  	%rd10247, %rd10245, %rd10246;
	ld.local.u64 	%rd774, [%rd1+8];
	and.b64  	%rd10248, %rd774, %rd773;
	xor.b64  	%rd10249, %rd774, %rd773;
	ld.local.u64 	%rd775, [%rd1+16];
	and.b64  	%rd10250, %rd775, %rd10249;
	or.b64  	%rd10251, %rd10250, %rd10248;
	add.s64 	%rd10252, %rd10241, %rd10251;
	add.s64 	%rd10253, %rd10252, %rd10247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6950,%dummy}, %rd10242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6951}, %rd10242;
	}
	shf.r.wrap.b32 	%r6952, %r6951, %r6950, 14;
	shf.r.wrap.b32 	%r6953, %r6950, %r6951, 14;
	mov.b64 	%rd10254, {%r6953, %r6952};
	shf.r.wrap.b32 	%r6954, %r6951, %r6950, 18;
	shf.r.wrap.b32 	%r6955, %r6950, %r6951, 18;
	mov.b64 	%rd10255, {%r6955, %r6954};
	xor.b64  	%rd10256, %rd10255, %rd10254;
	shf.l.wrap.b32 	%r6956, %r6950, %r6951, 23;
	shf.l.wrap.b32 	%r6957, %r6951, %r6950, 23;
	mov.b64 	%rd10257, {%r6957, %r6956};
	xor.b64  	%rd10258, %rd10256, %rd10257;
	xor.b64  	%rd10259, %rd770, %rd768;
	and.b64  	%rd10260, %rd10242, %rd10259;
	xor.b64  	%rd10261, %rd10260, %rd770;
	add.s64 	%rd10262, %rd769, %rd18818;
	add.s64 	%rd10263, %rd10262, %rd18609;
	add.s64 	%rd10264, %rd10263, %rd10261;
	add.s64 	%rd10265, %rd10264, %rd10258;
	add.s64 	%rd10266, %rd10265, %rd775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6958,%dummy}, %rd10253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6959}, %rd10253;
	}
	shf.r.wrap.b32 	%r6960, %r6959, %r6958, 28;
	shf.r.wrap.b32 	%r6961, %r6958, %r6959, 28;
	mov.b64 	%rd10267, {%r6961, %r6960};
	shf.l.wrap.b32 	%r6962, %r6958, %r6959, 30;
	shf.l.wrap.b32 	%r6963, %r6959, %r6958, 30;
	mov.b64 	%rd10268, {%r6963, %r6962};
	xor.b64  	%rd10269, %rd10268, %rd10267;
	shf.l.wrap.b32 	%r6964, %r6958, %r6959, 25;
	shf.l.wrap.b32 	%r6965, %r6959, %r6958, 25;
	mov.b64 	%rd10270, {%r6965, %r6964};
	xor.b64  	%rd10271, %rd10269, %rd10270;
	and.b64  	%rd10272, %rd10253, %rd773;
	xor.b64  	%rd10273, %rd10253, %rd773;
	and.b64  	%rd10274, %rd10273, %rd774;
	or.b64  	%rd10275, %rd10274, %rd10272;
	add.s64 	%rd10276, %rd10265, %rd10275;
	add.s64 	%rd10277, %rd10276, %rd10271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6966,%dummy}, %rd10266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6967}, %rd10266;
	}
	shf.r.wrap.b32 	%r6968, %r6967, %r6966, 14;
	shf.r.wrap.b32 	%r6969, %r6966, %r6967, 14;
	mov.b64 	%rd10278, {%r6969, %r6968};
	shf.r.wrap.b32 	%r6970, %r6967, %r6966, 18;
	shf.r.wrap.b32 	%r6971, %r6966, %r6967, 18;
	mov.b64 	%rd10279, {%r6971, %r6970};
	xor.b64  	%rd10280, %rd10279, %rd10278;
	shf.l.wrap.b32 	%r6972, %r6966, %r6967, 23;
	shf.l.wrap.b32 	%r6973, %r6967, %r6966, 23;
	mov.b64 	%rd10281, {%r6973, %r6972};
	xor.b64  	%rd10282, %rd10280, %rd10281;
	xor.b64  	%rd10283, %rd10242, %rd768;
	and.b64  	%rd10284, %rd10266, %rd10283;
	xor.b64  	%rd10285, %rd10284, %rd768;
	add.s64 	%rd10286, %rd770, %rd18819;
	add.s64 	%rd10287, %rd10286, %rd18608;
	add.s64 	%rd10288, %rd10287, %rd10285;
	add.s64 	%rd10289, %rd10288, %rd10282;
	add.s64 	%rd10290, %rd10289, %rd774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6974,%dummy}, %rd10277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6975}, %rd10277;
	}
	shf.r.wrap.b32 	%r6976, %r6975, %r6974, 28;
	shf.r.wrap.b32 	%r6977, %r6974, %r6975, 28;
	mov.b64 	%rd10291, {%r6977, %r6976};
	shf.l.wrap.b32 	%r6978, %r6974, %r6975, 30;
	shf.l.wrap.b32 	%r6979, %r6975, %r6974, 30;
	mov.b64 	%rd10292, {%r6979, %r6978};
	xor.b64  	%rd10293, %rd10292, %rd10291;
	shf.l.wrap.b32 	%r6980, %r6974, %r6975, 25;
	shf.l.wrap.b32 	%r6981, %r6975, %r6974, 25;
	mov.b64 	%rd10294, {%r6981, %r6980};
	xor.b64  	%rd10295, %rd10293, %rd10294;
	and.b64  	%rd10296, %rd10277, %rd10253;
	xor.b64  	%rd10297, %rd10277, %rd10253;
	and.b64  	%rd10298, %rd10297, %rd773;
	or.b64  	%rd10299, %rd10298, %rd10296;
	add.s64 	%rd10300, %rd10289, %rd10299;
	add.s64 	%rd10301, %rd10300, %rd10295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6982,%dummy}, %rd10290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6983}, %rd10290;
	}
	shf.r.wrap.b32 	%r6984, %r6983, %r6982, 14;
	shf.r.wrap.b32 	%r6985, %r6982, %r6983, 14;
	mov.b64 	%rd10302, {%r6985, %r6984};
	shf.r.wrap.b32 	%r6986, %r6983, %r6982, 18;
	shf.r.wrap.b32 	%r6987, %r6982, %r6983, 18;
	mov.b64 	%rd10303, {%r6987, %r6986};
	xor.b64  	%rd10304, %rd10303, %rd10302;
	shf.l.wrap.b32 	%r6988, %r6982, %r6983, 23;
	shf.l.wrap.b32 	%r6989, %r6983, %r6982, 23;
	mov.b64 	%rd10305, {%r6989, %r6988};
	xor.b64  	%rd10306, %rd10304, %rd10305;
	xor.b64  	%rd10307, %rd10266, %rd10242;
	and.b64  	%rd10308, %rd10290, %rd10307;
	xor.b64  	%rd10309, %rd10308, %rd10242;
	add.s64 	%rd10310, %rd768, %rd18820;
	add.s64 	%rd10311, %rd10310, %rd18607;
	add.s64 	%rd10312, %rd10311, %rd10309;
	add.s64 	%rd10313, %rd10312, %rd10306;
	add.s64 	%rd10314, %rd10313, %rd773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6990,%dummy}, %rd10301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6991}, %rd10301;
	}
	shf.r.wrap.b32 	%r6992, %r6991, %r6990, 28;
	shf.r.wrap.b32 	%r6993, %r6990, %r6991, 28;
	mov.b64 	%rd10315, {%r6993, %r6992};
	shf.l.wrap.b32 	%r6994, %r6990, %r6991, 30;
	shf.l.wrap.b32 	%r6995, %r6991, %r6990, 30;
	mov.b64 	%rd10316, {%r6995, %r6994};
	xor.b64  	%rd10317, %rd10316, %rd10315;
	shf.l.wrap.b32 	%r6996, %r6990, %r6991, 25;
	shf.l.wrap.b32 	%r6997, %r6991, %r6990, 25;
	mov.b64 	%rd10318, {%r6997, %r6996};
	xor.b64  	%rd10319, %rd10317, %rd10318;
	and.b64  	%rd10320, %rd10301, %rd10277;
	xor.b64  	%rd10321, %rd10301, %rd10277;
	and.b64  	%rd10322, %rd10321, %rd10253;
	or.b64  	%rd10323, %rd10322, %rd10320;
	add.s64 	%rd10324, %rd10313, %rd10323;
	add.s64 	%rd10325, %rd10324, %rd10319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6998,%dummy}, %rd10314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6999}, %rd10314;
	}
	shf.r.wrap.b32 	%r7000, %r6999, %r6998, 14;
	shf.r.wrap.b32 	%r7001, %r6998, %r6999, 14;
	mov.b64 	%rd10326, {%r7001, %r7000};
	shf.r.wrap.b32 	%r7002, %r6999, %r6998, 18;
	shf.r.wrap.b32 	%r7003, %r6998, %r6999, 18;
	mov.b64 	%rd10327, {%r7003, %r7002};
	xor.b64  	%rd10328, %rd10327, %rd10326;
	shf.l.wrap.b32 	%r7004, %r6998, %r6999, 23;
	shf.l.wrap.b32 	%r7005, %r6999, %r6998, 23;
	mov.b64 	%rd10329, {%r7005, %r7004};
	xor.b64  	%rd10330, %rd10328, %rd10329;
	xor.b64  	%rd10331, %rd10290, %rd10266;
	and.b64  	%rd10332, %rd10314, %rd10331;
	xor.b64  	%rd10333, %rd10332, %rd10266;
	add.s64 	%rd10334, %rd10242, %rd18821;
	add.s64 	%rd10335, %rd10334, %rd18606;
	add.s64 	%rd10336, %rd10335, %rd10333;
	add.s64 	%rd10337, %rd10336, %rd10330;
	add.s64 	%rd10338, %rd10337, %rd10253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7006,%dummy}, %rd10325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7007}, %rd10325;
	}
	shf.r.wrap.b32 	%r7008, %r7007, %r7006, 28;
	shf.r.wrap.b32 	%r7009, %r7006, %r7007, 28;
	mov.b64 	%rd10339, {%r7009, %r7008};
	shf.l.wrap.b32 	%r7010, %r7006, %r7007, 30;
	shf.l.wrap.b32 	%r7011, %r7007, %r7006, 30;
	mov.b64 	%rd10340, {%r7011, %r7010};
	xor.b64  	%rd10341, %rd10340, %rd10339;
	shf.l.wrap.b32 	%r7012, %r7006, %r7007, 25;
	shf.l.wrap.b32 	%r7013, %r7007, %r7006, 25;
	mov.b64 	%rd10342, {%r7013, %r7012};
	xor.b64  	%rd10343, %rd10341, %rd10342;
	and.b64  	%rd10344, %rd10325, %rd10301;
	xor.b64  	%rd10345, %rd10325, %rd10301;
	and.b64  	%rd10346, %rd10345, %rd10277;
	or.b64  	%rd10347, %rd10346, %rd10344;
	add.s64 	%rd10348, %rd10337, %rd10347;
	add.s64 	%rd10349, %rd10348, %rd10343;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7014,%dummy}, %rd10338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7015}, %rd10338;
	}
	shf.r.wrap.b32 	%r7016, %r7015, %r7014, 14;
	shf.r.wrap.b32 	%r7017, %r7014, %r7015, 14;
	mov.b64 	%rd10350, {%r7017, %r7016};
	shf.r.wrap.b32 	%r7018, %r7015, %r7014, 18;
	shf.r.wrap.b32 	%r7019, %r7014, %r7015, 18;
	mov.b64 	%rd10351, {%r7019, %r7018};
	xor.b64  	%rd10352, %rd10351, %rd10350;
	shf.l.wrap.b32 	%r7020, %r7014, %r7015, 23;
	shf.l.wrap.b32 	%r7021, %r7015, %r7014, 23;
	mov.b64 	%rd10353, {%r7021, %r7020};
	xor.b64  	%rd10354, %rd10352, %rd10353;
	xor.b64  	%rd10355, %rd10314, %rd10290;
	and.b64  	%rd10356, %rd10338, %rd10355;
	xor.b64  	%rd10357, %rd10356, %rd10290;
	add.s64 	%rd10358, %rd10266, %rd18822;
	add.s64 	%rd10359, %rd10358, %rd18605;
	add.s64 	%rd10360, %rd10359, %rd10357;
	add.s64 	%rd10361, %rd10360, %rd10354;
	add.s64 	%rd10362, %rd10361, %rd10277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7022,%dummy}, %rd10349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7023}, %rd10349;
	}
	shf.r.wrap.b32 	%r7024, %r7023, %r7022, 28;
	shf.r.wrap.b32 	%r7025, %r7022, %r7023, 28;
	mov.b64 	%rd10363, {%r7025, %r7024};
	shf.l.wrap.b32 	%r7026, %r7022, %r7023, 30;
	shf.l.wrap.b32 	%r7027, %r7023, %r7022, 30;
	mov.b64 	%rd10364, {%r7027, %r7026};
	xor.b64  	%rd10365, %rd10364, %rd10363;
	shf.l.wrap.b32 	%r7028, %r7022, %r7023, 25;
	shf.l.wrap.b32 	%r7029, %r7023, %r7022, 25;
	mov.b64 	%rd10366, {%r7029, %r7028};
	xor.b64  	%rd10367, %rd10365, %rd10366;
	and.b64  	%rd10368, %rd10349, %rd10325;
	xor.b64  	%rd10369, %rd10349, %rd10325;
	and.b64  	%rd10370, %rd10369, %rd10301;
	or.b64  	%rd10371, %rd10370, %rd10368;
	add.s64 	%rd10372, %rd10361, %rd10371;
	add.s64 	%rd10373, %rd10372, %rd10367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7030,%dummy}, %rd10362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7031}, %rd10362;
	}
	shf.r.wrap.b32 	%r7032, %r7031, %r7030, 14;
	shf.r.wrap.b32 	%r7033, %r7030, %r7031, 14;
	mov.b64 	%rd10374, {%r7033, %r7032};
	shf.r.wrap.b32 	%r7034, %r7031, %r7030, 18;
	shf.r.wrap.b32 	%r7035, %r7030, %r7031, 18;
	mov.b64 	%rd10375, {%r7035, %r7034};
	xor.b64  	%rd10376, %rd10375, %rd10374;
	shf.l.wrap.b32 	%r7036, %r7030, %r7031, 23;
	shf.l.wrap.b32 	%r7037, %r7031, %r7030, 23;
	mov.b64 	%rd10377, {%r7037, %r7036};
	xor.b64  	%rd10378, %rd10376, %rd10377;
	xor.b64  	%rd10379, %rd10338, %rd10314;
	and.b64  	%rd10380, %rd10362, %rd10379;
	xor.b64  	%rd10381, %rd10380, %rd10314;
	add.s64 	%rd10382, %rd10290, %rd18823;
	add.s64 	%rd10383, %rd10382, %rd18604;
	add.s64 	%rd10384, %rd10383, %rd10381;
	add.s64 	%rd10385, %rd10384, %rd10378;
	add.s64 	%rd10386, %rd10385, %rd10301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7038,%dummy}, %rd10373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7039}, %rd10373;
	}
	shf.r.wrap.b32 	%r7040, %r7039, %r7038, 28;
	shf.r.wrap.b32 	%r7041, %r7038, %r7039, 28;
	mov.b64 	%rd10387, {%r7041, %r7040};
	shf.l.wrap.b32 	%r7042, %r7038, %r7039, 30;
	shf.l.wrap.b32 	%r7043, %r7039, %r7038, 30;
	mov.b64 	%rd10388, {%r7043, %r7042};
	xor.b64  	%rd10389, %rd10388, %rd10387;
	shf.l.wrap.b32 	%r7044, %r7038, %r7039, 25;
	shf.l.wrap.b32 	%r7045, %r7039, %r7038, 25;
	mov.b64 	%rd10390, {%r7045, %r7044};
	xor.b64  	%rd10391, %rd10389, %rd10390;
	and.b64  	%rd10392, %rd10373, %rd10349;
	xor.b64  	%rd10393, %rd10373, %rd10349;
	and.b64  	%rd10394, %rd10393, %rd10325;
	or.b64  	%rd10395, %rd10394, %rd10392;
	add.s64 	%rd10396, %rd10385, %rd10395;
	add.s64 	%rd10397, %rd10396, %rd10391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7046,%dummy}, %rd10386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7047}, %rd10386;
	}
	shf.r.wrap.b32 	%r7048, %r7047, %r7046, 14;
	shf.r.wrap.b32 	%r7049, %r7046, %r7047, 14;
	mov.b64 	%rd10398, {%r7049, %r7048};
	shf.r.wrap.b32 	%r7050, %r7047, %r7046, 18;
	shf.r.wrap.b32 	%r7051, %r7046, %r7047, 18;
	mov.b64 	%rd10399, {%r7051, %r7050};
	xor.b64  	%rd10400, %rd10399, %rd10398;
	shf.l.wrap.b32 	%r7052, %r7046, %r7047, 23;
	shf.l.wrap.b32 	%r7053, %r7047, %r7046, 23;
	mov.b64 	%rd10401, {%r7053, %r7052};
	xor.b64  	%rd10402, %rd10400, %rd10401;
	xor.b64  	%rd10403, %rd10362, %rd10338;
	and.b64  	%rd10404, %rd10386, %rd10403;
	xor.b64  	%rd10405, %rd10404, %rd10338;
	add.s64 	%rd10406, %rd10314, %rd18824;
	add.s64 	%rd10407, %rd10406, %rd18603;
	add.s64 	%rd10408, %rd10407, %rd10405;
	add.s64 	%rd10409, %rd10408, %rd10402;
	add.s64 	%rd10410, %rd10409, %rd10325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7054,%dummy}, %rd10397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7055}, %rd10397;
	}
	shf.r.wrap.b32 	%r7056, %r7055, %r7054, 28;
	shf.r.wrap.b32 	%r7057, %r7054, %r7055, 28;
	mov.b64 	%rd10411, {%r7057, %r7056};
	shf.l.wrap.b32 	%r7058, %r7054, %r7055, 30;
	shf.l.wrap.b32 	%r7059, %r7055, %r7054, 30;
	mov.b64 	%rd10412, {%r7059, %r7058};
	xor.b64  	%rd10413, %rd10412, %rd10411;
	shf.l.wrap.b32 	%r7060, %r7054, %r7055, 25;
	shf.l.wrap.b32 	%r7061, %r7055, %r7054, 25;
	mov.b64 	%rd10414, {%r7061, %r7060};
	xor.b64  	%rd10415, %rd10413, %rd10414;
	and.b64  	%rd10416, %rd10397, %rd10373;
	xor.b64  	%rd10417, %rd10397, %rd10373;
	and.b64  	%rd10418, %rd10417, %rd10349;
	or.b64  	%rd10419, %rd10418, %rd10416;
	add.s64 	%rd10420, %rd10409, %rd10419;
	add.s64 	%rd10421, %rd10420, %rd10415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7062,%dummy}, %rd10410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7063}, %rd10410;
	}
	shf.r.wrap.b32 	%r7064, %r7063, %r7062, 14;
	shf.r.wrap.b32 	%r7065, %r7062, %r7063, 14;
	mov.b64 	%rd10422, {%r7065, %r7064};
	shf.r.wrap.b32 	%r7066, %r7063, %r7062, 18;
	shf.r.wrap.b32 	%r7067, %r7062, %r7063, 18;
	mov.b64 	%rd10423, {%r7067, %r7066};
	xor.b64  	%rd10424, %rd10423, %rd10422;
	shf.l.wrap.b32 	%r7068, %r7062, %r7063, 23;
	shf.l.wrap.b32 	%r7069, %r7063, %r7062, 23;
	mov.b64 	%rd10425, {%r7069, %r7068};
	xor.b64  	%rd10426, %rd10424, %rd10425;
	xor.b64  	%rd10427, %rd10386, %rd10362;
	and.b64  	%rd10428, %rd10410, %rd10427;
	xor.b64  	%rd10429, %rd10428, %rd10362;
	add.s64 	%rd10430, %rd10338, %rd18808;
	add.s64 	%rd10431, %rd10430, %rd18602;
	add.s64 	%rd10432, %rd10431, %rd10429;
	add.s64 	%rd10433, %rd10432, %rd10426;
	add.s64 	%rd10434, %rd10433, %rd10349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7070,%dummy}, %rd10421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7071}, %rd10421;
	}
	shf.r.wrap.b32 	%r7072, %r7071, %r7070, 28;
	shf.r.wrap.b32 	%r7073, %r7070, %r7071, 28;
	mov.b64 	%rd10435, {%r7073, %r7072};
	shf.l.wrap.b32 	%r7074, %r7070, %r7071, 30;
	shf.l.wrap.b32 	%r7075, %r7071, %r7070, 30;
	mov.b64 	%rd10436, {%r7075, %r7074};
	xor.b64  	%rd10437, %rd10436, %rd10435;
	shf.l.wrap.b32 	%r7076, %r7070, %r7071, 25;
	shf.l.wrap.b32 	%r7077, %r7071, %r7070, 25;
	mov.b64 	%rd10438, {%r7077, %r7076};
	xor.b64  	%rd10439, %rd10437, %rd10438;
	and.b64  	%rd10440, %rd10421, %rd10397;
	xor.b64  	%rd10441, %rd10421, %rd10397;
	and.b64  	%rd10442, %rd10441, %rd10373;
	or.b64  	%rd10443, %rd10442, %rd10440;
	add.s64 	%rd10444, %rd10433, %rd10443;
	add.s64 	%rd10445, %rd10444, %rd10439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7078,%dummy}, %rd10434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7079}, %rd10434;
	}
	shf.r.wrap.b32 	%r7080, %r7079, %r7078, 14;
	shf.r.wrap.b32 	%r7081, %r7078, %r7079, 14;
	mov.b64 	%rd10446, {%r7081, %r7080};
	shf.r.wrap.b32 	%r7082, %r7079, %r7078, 18;
	shf.r.wrap.b32 	%r7083, %r7078, %r7079, 18;
	mov.b64 	%rd10447, {%r7083, %r7082};
	xor.b64  	%rd10448, %rd10447, %rd10446;
	shf.l.wrap.b32 	%r7084, %r7078, %r7079, 23;
	shf.l.wrap.b32 	%r7085, %r7079, %r7078, 23;
	mov.b64 	%rd10449, {%r7085, %r7084};
	xor.b64  	%rd10450, %rd10448, %rd10449;
	xor.b64  	%rd10451, %rd10410, %rd10386;
	and.b64  	%rd10452, %rd10434, %rd10451;
	xor.b64  	%rd10453, %rd10452, %rd10386;
	add.s64 	%rd10454, %rd10362, %rd18807;
	add.s64 	%rd10455, %rd10454, %rd18601;
	add.s64 	%rd10456, %rd10455, %rd10453;
	add.s64 	%rd10457, %rd10456, %rd10450;
	add.s64 	%rd10458, %rd10457, %rd10373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7086,%dummy}, %rd10445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7087}, %rd10445;
	}
	shf.r.wrap.b32 	%r7088, %r7087, %r7086, 28;
	shf.r.wrap.b32 	%r7089, %r7086, %r7087, 28;
	mov.b64 	%rd10459, {%r7089, %r7088};
	shf.l.wrap.b32 	%r7090, %r7086, %r7087, 30;
	shf.l.wrap.b32 	%r7091, %r7087, %r7086, 30;
	mov.b64 	%rd10460, {%r7091, %r7090};
	xor.b64  	%rd10461, %rd10460, %rd10459;
	shf.l.wrap.b32 	%r7092, %r7086, %r7087, 25;
	shf.l.wrap.b32 	%r7093, %r7087, %r7086, 25;
	mov.b64 	%rd10462, {%r7093, %r7092};
	xor.b64  	%rd10463, %rd10461, %rd10462;
	and.b64  	%rd10464, %rd10445, %rd10421;
	xor.b64  	%rd10465, %rd10445, %rd10421;
	and.b64  	%rd10466, %rd10465, %rd10397;
	or.b64  	%rd10467, %rd10466, %rd10464;
	add.s64 	%rd10468, %rd10457, %rd10467;
	add.s64 	%rd10469, %rd10468, %rd10463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7094,%dummy}, %rd10458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7095}, %rd10458;
	}
	shf.r.wrap.b32 	%r7096, %r7095, %r7094, 14;
	shf.r.wrap.b32 	%r7097, %r7094, %r7095, 14;
	mov.b64 	%rd10470, {%r7097, %r7096};
	shf.r.wrap.b32 	%r7098, %r7095, %r7094, 18;
	shf.r.wrap.b32 	%r7099, %r7094, %r7095, 18;
	mov.b64 	%rd10471, {%r7099, %r7098};
	xor.b64  	%rd10472, %rd10471, %rd10470;
	shf.l.wrap.b32 	%r7100, %r7094, %r7095, 23;
	shf.l.wrap.b32 	%r7101, %r7095, %r7094, 23;
	mov.b64 	%rd10473, {%r7101, %r7100};
	xor.b64  	%rd10474, %rd10472, %rd10473;
	xor.b64  	%rd10475, %rd10434, %rd10410;
	and.b64  	%rd10476, %rd10458, %rd10475;
	xor.b64  	%rd10477, %rd10476, %rd10410;
	add.s64 	%rd10478, %rd10386, %rd18806;
	add.s64 	%rd10479, %rd10478, %rd18600;
	add.s64 	%rd10480, %rd10479, %rd10477;
	add.s64 	%rd10481, %rd10480, %rd10474;
	add.s64 	%rd10482, %rd10481, %rd10397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7102,%dummy}, %rd10469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7103}, %rd10469;
	}
	shf.r.wrap.b32 	%r7104, %r7103, %r7102, 28;
	shf.r.wrap.b32 	%r7105, %r7102, %r7103, 28;
	mov.b64 	%rd10483, {%r7105, %r7104};
	shf.l.wrap.b32 	%r7106, %r7102, %r7103, 30;
	shf.l.wrap.b32 	%r7107, %r7103, %r7102, 30;
	mov.b64 	%rd10484, {%r7107, %r7106};
	xor.b64  	%rd10485, %rd10484, %rd10483;
	shf.l.wrap.b32 	%r7108, %r7102, %r7103, 25;
	shf.l.wrap.b32 	%r7109, %r7103, %r7102, 25;
	mov.b64 	%rd10486, {%r7109, %r7108};
	xor.b64  	%rd10487, %rd10485, %rd10486;
	and.b64  	%rd10488, %rd10469, %rd10445;
	xor.b64  	%rd10489, %rd10469, %rd10445;
	and.b64  	%rd10490, %rd10489, %rd10421;
	or.b64  	%rd10491, %rd10490, %rd10488;
	add.s64 	%rd10492, %rd10481, %rd10491;
	add.s64 	%rd10493, %rd10492, %rd10487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7110,%dummy}, %rd10482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7111}, %rd10482;
	}
	shf.r.wrap.b32 	%r7112, %r7111, %r7110, 14;
	shf.r.wrap.b32 	%r7113, %r7110, %r7111, 14;
	mov.b64 	%rd10494, {%r7113, %r7112};
	shf.r.wrap.b32 	%r7114, %r7111, %r7110, 18;
	shf.r.wrap.b32 	%r7115, %r7110, %r7111, 18;
	mov.b64 	%rd10495, {%r7115, %r7114};
	xor.b64  	%rd10496, %rd10495, %rd10494;
	shf.l.wrap.b32 	%r7116, %r7110, %r7111, 23;
	shf.l.wrap.b32 	%r7117, %r7111, %r7110, 23;
	mov.b64 	%rd10497, {%r7117, %r7116};
	xor.b64  	%rd10498, %rd10496, %rd10497;
	xor.b64  	%rd10499, %rd10458, %rd10434;
	and.b64  	%rd10500, %rd10482, %rd10499;
	xor.b64  	%rd10501, %rd10500, %rd10434;
	add.s64 	%rd10502, %rd10410, %rd18805;
	add.s64 	%rd10503, %rd10502, %rd18599;
	add.s64 	%rd10504, %rd10503, %rd10501;
	add.s64 	%rd10505, %rd10504, %rd10498;
	add.s64 	%rd10506, %rd10505, %rd10421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7118,%dummy}, %rd10493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7119}, %rd10493;
	}
	shf.r.wrap.b32 	%r7120, %r7119, %r7118, 28;
	shf.r.wrap.b32 	%r7121, %r7118, %r7119, 28;
	mov.b64 	%rd10507, {%r7121, %r7120};
	shf.l.wrap.b32 	%r7122, %r7118, %r7119, 30;
	shf.l.wrap.b32 	%r7123, %r7119, %r7118, 30;
	mov.b64 	%rd10508, {%r7123, %r7122};
	xor.b64  	%rd10509, %rd10508, %rd10507;
	shf.l.wrap.b32 	%r7124, %r7118, %r7119, 25;
	shf.l.wrap.b32 	%r7125, %r7119, %r7118, 25;
	mov.b64 	%rd10510, {%r7125, %r7124};
	xor.b64  	%rd10511, %rd10509, %rd10510;
	and.b64  	%rd10512, %rd10493, %rd10469;
	xor.b64  	%rd10513, %rd10493, %rd10469;
	and.b64  	%rd10514, %rd10513, %rd10445;
	or.b64  	%rd10515, %rd10514, %rd10512;
	add.s64 	%rd10516, %rd10505, %rd10515;
	add.s64 	%rd10517, %rd10516, %rd10511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7126,%dummy}, %rd10506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7127}, %rd10506;
	}
	shf.r.wrap.b32 	%r7128, %r7127, %r7126, 14;
	shf.r.wrap.b32 	%r7129, %r7126, %r7127, 14;
	mov.b64 	%rd10518, {%r7129, %r7128};
	shf.r.wrap.b32 	%r7130, %r7127, %r7126, 18;
	shf.r.wrap.b32 	%r7131, %r7126, %r7127, 18;
	mov.b64 	%rd10519, {%r7131, %r7130};
	xor.b64  	%rd10520, %rd10519, %rd10518;
	shf.l.wrap.b32 	%r7132, %r7126, %r7127, 23;
	shf.l.wrap.b32 	%r7133, %r7127, %r7126, 23;
	mov.b64 	%rd10521, {%r7133, %r7132};
	xor.b64  	%rd10522, %rd10520, %rd10521;
	xor.b64  	%rd10523, %rd10482, %rd10458;
	and.b64  	%rd10524, %rd10506, %rd10523;
	xor.b64  	%rd10525, %rd10524, %rd10458;
	add.s64 	%rd10526, %rd10434, %rd18804;
	add.s64 	%rd10527, %rd10526, %rd18598;
	add.s64 	%rd10528, %rd10527, %rd10525;
	add.s64 	%rd10529, %rd10528, %rd10522;
	add.s64 	%rd18769, %rd10529, %rd10445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7134,%dummy}, %rd10517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7135}, %rd10517;
	}
	shf.r.wrap.b32 	%r7136, %r7135, %r7134, 28;
	shf.r.wrap.b32 	%r7137, %r7134, %r7135, 28;
	mov.b64 	%rd10530, {%r7137, %r7136};
	shf.l.wrap.b32 	%r7138, %r7134, %r7135, 30;
	shf.l.wrap.b32 	%r7139, %r7135, %r7134, 30;
	mov.b64 	%rd10531, {%r7139, %r7138};
	xor.b64  	%rd10532, %rd10531, %rd10530;
	shf.l.wrap.b32 	%r7140, %r7134, %r7135, 25;
	shf.l.wrap.b32 	%r7141, %r7135, %r7134, 25;
	mov.b64 	%rd10533, {%r7141, %r7140};
	xor.b64  	%rd10534, %rd10532, %rd10533;
	and.b64  	%rd10535, %rd10517, %rd10493;
	xor.b64  	%rd10536, %rd10517, %rd10493;
	and.b64  	%rd10537, %rd10536, %rd10469;
	or.b64  	%rd10538, %rd10537, %rd10535;
	add.s64 	%rd10539, %rd10529, %rd10538;
	add.s64 	%rd18765, %rd10539, %rd10534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7142,%dummy}, %rd18769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7143}, %rd18769;
	}
	shf.r.wrap.b32 	%r7144, %r7143, %r7142, 14;
	shf.r.wrap.b32 	%r7145, %r7142, %r7143, 14;
	mov.b64 	%rd10540, {%r7145, %r7144};
	shf.r.wrap.b32 	%r7146, %r7143, %r7142, 18;
	shf.r.wrap.b32 	%r7147, %r7142, %r7143, 18;
	mov.b64 	%rd10541, {%r7147, %r7146};
	xor.b64  	%rd10542, %rd10541, %rd10540;
	shf.l.wrap.b32 	%r7148, %r7142, %r7143, 23;
	shf.l.wrap.b32 	%r7149, %r7143, %r7142, 23;
	mov.b64 	%rd10543, {%r7149, %r7148};
	xor.b64  	%rd10544, %rd10542, %rd10543;
	xor.b64  	%rd10545, %rd10506, %rd10482;
	and.b64  	%rd10546, %rd18769, %rd10545;
	xor.b64  	%rd10547, %rd10546, %rd10482;
	add.s64 	%rd10548, %rd10458, %rd18803;
	add.s64 	%rd10549, %rd10548, %rd18597;
	add.s64 	%rd10550, %rd10549, %rd10547;
	add.s64 	%rd10551, %rd10550, %rd10544;
	add.s64 	%rd18768, %rd10551, %rd10469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7150,%dummy}, %rd18765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7151}, %rd18765;
	}
	shf.r.wrap.b32 	%r7152, %r7151, %r7150, 28;
	shf.r.wrap.b32 	%r7153, %r7150, %r7151, 28;
	mov.b64 	%rd10552, {%r7153, %r7152};
	shf.l.wrap.b32 	%r7154, %r7150, %r7151, 30;
	shf.l.wrap.b32 	%r7155, %r7151, %r7150, 30;
	mov.b64 	%rd10553, {%r7155, %r7154};
	xor.b64  	%rd10554, %rd10553, %rd10552;
	shf.l.wrap.b32 	%r7156, %r7150, %r7151, 25;
	shf.l.wrap.b32 	%r7157, %r7151, %r7150, 25;
	mov.b64 	%rd10555, {%r7157, %r7156};
	xor.b64  	%rd10556, %rd10554, %rd10555;
	and.b64  	%rd10557, %rd18765, %rd10517;
	xor.b64  	%rd10558, %rd18765, %rd10517;
	and.b64  	%rd10559, %rd10558, %rd10493;
	or.b64  	%rd10560, %rd10559, %rd10557;
	add.s64 	%rd10561, %rd10551, %rd10560;
	add.s64 	%rd18764, %rd10561, %rd10556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7158,%dummy}, %rd18768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7159}, %rd18768;
	}
	shf.r.wrap.b32 	%r7160, %r7159, %r7158, 14;
	shf.r.wrap.b32 	%r7161, %r7158, %r7159, 14;
	mov.b64 	%rd10562, {%r7161, %r7160};
	shf.r.wrap.b32 	%r7162, %r7159, %r7158, 18;
	shf.r.wrap.b32 	%r7163, %r7158, %r7159, 18;
	mov.b64 	%rd10563, {%r7163, %r7162};
	xor.b64  	%rd10564, %rd10563, %rd10562;
	shf.l.wrap.b32 	%r7164, %r7158, %r7159, 23;
	shf.l.wrap.b32 	%r7165, %r7159, %r7158, 23;
	mov.b64 	%rd10565, {%r7165, %r7164};
	xor.b64  	%rd10566, %rd10564, %rd10565;
	xor.b64  	%rd10567, %rd18769, %rd10506;
	and.b64  	%rd10568, %rd18768, %rd10567;
	xor.b64  	%rd10569, %rd10568, %rd10506;
	add.s64 	%rd10570, %rd10482, %rd18802;
	add.s64 	%rd10571, %rd10570, %rd18596;
	add.s64 	%rd10572, %rd10571, %rd10569;
	add.s64 	%rd10573, %rd10572, %rd10566;
	add.s64 	%rd18767, %rd10573, %rd10493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7166,%dummy}, %rd18764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7167}, %rd18764;
	}
	shf.r.wrap.b32 	%r7168, %r7167, %r7166, 28;
	shf.r.wrap.b32 	%r7169, %r7166, %r7167, 28;
	mov.b64 	%rd10574, {%r7169, %r7168};
	shf.l.wrap.b32 	%r7170, %r7166, %r7167, 30;
	shf.l.wrap.b32 	%r7171, %r7167, %r7166, 30;
	mov.b64 	%rd10575, {%r7171, %r7170};
	xor.b64  	%rd10576, %rd10575, %rd10574;
	shf.l.wrap.b32 	%r7172, %r7166, %r7167, 25;
	shf.l.wrap.b32 	%r7173, %r7167, %r7166, 25;
	mov.b64 	%rd10577, {%r7173, %r7172};
	xor.b64  	%rd10578, %rd10576, %rd10577;
	and.b64  	%rd10579, %rd18764, %rd18765;
	xor.b64  	%rd10580, %rd18764, %rd18765;
	and.b64  	%rd10581, %rd10580, %rd10517;
	or.b64  	%rd10582, %rd10581, %rd10579;
	add.s64 	%rd10583, %rd10573, %rd10582;
	add.s64 	%rd18763, %rd10583, %rd10578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7174,%dummy}, %rd18767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7175}, %rd18767;
	}
	shf.r.wrap.b32 	%r7176, %r7175, %r7174, 14;
	shf.r.wrap.b32 	%r7177, %r7174, %r7175, 14;
	mov.b64 	%rd10584, {%r7177, %r7176};
	shf.r.wrap.b32 	%r7178, %r7175, %r7174, 18;
	shf.r.wrap.b32 	%r7179, %r7174, %r7175, 18;
	mov.b64 	%rd10585, {%r7179, %r7178};
	xor.b64  	%rd10586, %rd10585, %rd10584;
	shf.l.wrap.b32 	%r7180, %r7174, %r7175, 23;
	shf.l.wrap.b32 	%r7181, %r7175, %r7174, 23;
	mov.b64 	%rd10587, {%r7181, %r7180};
	xor.b64  	%rd10588, %rd10586, %rd10587;
	xor.b64  	%rd10589, %rd18768, %rd18769;
	and.b64  	%rd10590, %rd18767, %rd10589;
	xor.b64  	%rd10591, %rd10590, %rd18769;
	ld.local.u64 	%rd18754, [%rd1+184];
	add.s64 	%rd10592, %rd10506, %rd18754;
	add.s64 	%rd10593, %rd10592, %rd18595;
	add.s64 	%rd10594, %rd10593, %rd10591;
	add.s64 	%rd10595, %rd10594, %rd10588;
	add.s64 	%rd18766, %rd10595, %rd10517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7182,%dummy}, %rd18763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7183}, %rd18763;
	}
	shf.r.wrap.b32 	%r7184, %r7183, %r7182, 28;
	shf.r.wrap.b32 	%r7185, %r7182, %r7183, 28;
	mov.b64 	%rd10596, {%r7185, %r7184};
	shf.l.wrap.b32 	%r7186, %r7182, %r7183, 30;
	shf.l.wrap.b32 	%r7187, %r7183, %r7182, 30;
	mov.b64 	%rd10597, {%r7187, %r7186};
	xor.b64  	%rd10598, %rd10597, %rd10596;
	shf.l.wrap.b32 	%r7188, %r7182, %r7183, 25;
	shf.l.wrap.b32 	%r7189, %r7183, %r7182, 25;
	mov.b64 	%rd10599, {%r7189, %r7188};
	xor.b64  	%rd10600, %rd10598, %rd10599;
	and.b64  	%rd10601, %rd18763, %rd18764;
	xor.b64  	%rd10602, %rd18763, %rd18764;
	and.b64  	%rd10603, %rd10602, %rd18765;
	or.b64  	%rd10604, %rd10603, %rd10601;
	add.s64 	%rd10605, %rd10595, %rd10604;
	add.s64 	%rd18762, %rd10605, %rd10600;
	mov.u32 	%r13014, 16;

BB0_230:
	shr.u64 	%rd10606, %rd18802, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7190,%dummy}, %rd18802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7191}, %rd18802;
	}
	shf.r.wrap.b32 	%r7192, %r7191, %r7190, 19;
	shf.r.wrap.b32 	%r7193, %r7190, %r7191, 19;
	mov.b64 	%rd10607, {%r7193, %r7192};
	xor.b64  	%rd10608, %rd10607, %rd10606;
	shf.l.wrap.b32 	%r7194, %r7190, %r7191, 3;
	shf.l.wrap.b32 	%r7195, %r7191, %r7190, 3;
	mov.b64 	%rd10609, {%r7195, %r7194};
	xor.b64  	%rd10610, %rd10608, %rd10609;
	shr.u64 	%rd10611, %rd18818, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7196,%dummy}, %rd18818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7197}, %rd18818;
	}
	shf.r.wrap.b32 	%r7198, %r7197, %r7196, 1;
	shf.r.wrap.b32 	%r7199, %r7196, %r7197, 1;
	mov.b64 	%rd10612, {%r7199, %r7198};
	xor.b64  	%rd10613, %rd10612, %rd10611;
	shf.r.wrap.b32 	%r7200, %r7197, %r7196, 8;
	shf.r.wrap.b32 	%r7201, %r7196, %r7197, 8;
	mov.b64 	%rd10614, {%r7201, %r7200};
	xor.b64  	%rd10615, %rd10613, %rd10614;
	add.s64 	%rd10616, %rd18817, %rd18807;
	add.s64 	%rd10617, %rd10616, %rd10610;
	add.s64 	%rd18817, %rd10617, %rd10615;
	shr.u64 	%rd10618, %rd18754, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7202,%dummy}, %rd18754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7203}, %rd18754;
	}
	shf.r.wrap.b32 	%r7204, %r7203, %r7202, 19;
	shf.r.wrap.b32 	%r7205, %r7202, %r7203, 19;
	mov.b64 	%rd10619, {%r7205, %r7204};
	xor.b64  	%rd10620, %rd10619, %rd10618;
	shf.l.wrap.b32 	%r7206, %r7202, %r7203, 3;
	shf.l.wrap.b32 	%r7207, %r7203, %r7202, 3;
	mov.b64 	%rd10621, {%r7207, %r7206};
	xor.b64  	%rd10622, %rd10620, %rd10621;
	shr.u64 	%rd10623, %rd18819, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7208,%dummy}, %rd18819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7209}, %rd18819;
	}
	shf.r.wrap.b32 	%r7210, %r7209, %r7208, 1;
	shf.r.wrap.b32 	%r7211, %r7208, %r7209, 1;
	mov.b64 	%rd10624, {%r7211, %r7210};
	xor.b64  	%rd10625, %rd10624, %rd10623;
	shf.r.wrap.b32 	%r7212, %r7209, %r7208, 8;
	shf.r.wrap.b32 	%r7213, %r7208, %r7209, 8;
	mov.b64 	%rd10626, {%r7213, %r7212};
	xor.b64  	%rd10627, %rd10625, %rd10626;
	add.s64 	%rd10628, %rd18818, %rd18806;
	add.s64 	%rd10629, %rd10628, %rd10622;
	add.s64 	%rd18818, %rd10629, %rd10627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7214,%dummy}, %rd18817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7215}, %rd18817;
	}
	shf.r.wrap.b32 	%r7216, %r7215, %r7214, 19;
	shf.r.wrap.b32 	%r7217, %r7214, %r7215, 19;
	mov.b64 	%rd10630, {%r7217, %r7216};
	shf.l.wrap.b32 	%r7218, %r7214, %r7215, 3;
	shf.l.wrap.b32 	%r7219, %r7215, %r7214, 3;
	mov.b64 	%rd10631, {%r7219, %r7218};
	shr.u64 	%rd10632, %rd18817, 6;
	xor.b64  	%rd10633, %rd10630, %rd10632;
	xor.b64  	%rd10634, %rd10633, %rd10631;
	shr.u64 	%rd10635, %rd18820, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7220,%dummy}, %rd18820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7221}, %rd18820;
	}
	shf.r.wrap.b32 	%r7222, %r7221, %r7220, 1;
	shf.r.wrap.b32 	%r7223, %r7220, %r7221, 1;
	mov.b64 	%rd10636, {%r7223, %r7222};
	xor.b64  	%rd10637, %rd10636, %rd10635;
	shf.r.wrap.b32 	%r7224, %r7221, %r7220, 8;
	shf.r.wrap.b32 	%r7225, %r7220, %r7221, 8;
	mov.b64 	%rd10638, {%r7225, %r7224};
	xor.b64  	%rd10639, %rd10637, %rd10638;
	add.s64 	%rd10640, %rd18819, %rd18805;
	add.s64 	%rd10641, %rd10640, %rd10634;
	add.s64 	%rd18819, %rd10641, %rd10639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7226,%dummy}, %rd18818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7227}, %rd18818;
	}
	shf.r.wrap.b32 	%r7228, %r7227, %r7226, 19;
	shf.r.wrap.b32 	%r7229, %r7226, %r7227, 19;
	mov.b64 	%rd10642, {%r7229, %r7228};
	shf.l.wrap.b32 	%r7230, %r7226, %r7227, 3;
	shf.l.wrap.b32 	%r7231, %r7227, %r7226, 3;
	mov.b64 	%rd10643, {%r7231, %r7230};
	shr.u64 	%rd10644, %rd18818, 6;
	xor.b64  	%rd10645, %rd10642, %rd10644;
	xor.b64  	%rd10646, %rd10645, %rd10643;
	shr.u64 	%rd10647, %rd18821, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7232,%dummy}, %rd18821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7233}, %rd18821;
	}
	shf.r.wrap.b32 	%r7234, %r7233, %r7232, 1;
	shf.r.wrap.b32 	%r7235, %r7232, %r7233, 1;
	mov.b64 	%rd10648, {%r7235, %r7234};
	xor.b64  	%rd10649, %rd10648, %rd10647;
	shf.r.wrap.b32 	%r7236, %r7233, %r7232, 8;
	shf.r.wrap.b32 	%r7237, %r7232, %r7233, 8;
	mov.b64 	%rd10650, {%r7237, %r7236};
	xor.b64  	%rd10651, %rd10649, %rd10650;
	add.s64 	%rd10652, %rd18820, %rd18804;
	add.s64 	%rd10653, %rd10652, %rd10646;
	add.s64 	%rd18820, %rd10653, %rd10651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7238,%dummy}, %rd18819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7239}, %rd18819;
	}
	shf.r.wrap.b32 	%r7240, %r7239, %r7238, 19;
	shf.r.wrap.b32 	%r7241, %r7238, %r7239, 19;
	mov.b64 	%rd10654, {%r7241, %r7240};
	shf.l.wrap.b32 	%r7242, %r7238, %r7239, 3;
	shf.l.wrap.b32 	%r7243, %r7239, %r7238, 3;
	mov.b64 	%rd10655, {%r7243, %r7242};
	shr.u64 	%rd10656, %rd18819, 6;
	xor.b64  	%rd10657, %rd10654, %rd10656;
	xor.b64  	%rd10658, %rd10657, %rd10655;
	shr.u64 	%rd10659, %rd18822, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7244,%dummy}, %rd18822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7245}, %rd18822;
	}
	shf.r.wrap.b32 	%r7246, %r7245, %r7244, 1;
	shf.r.wrap.b32 	%r7247, %r7244, %r7245, 1;
	mov.b64 	%rd10660, {%r7247, %r7246};
	xor.b64  	%rd10661, %rd10660, %rd10659;
	shf.r.wrap.b32 	%r7248, %r7245, %r7244, 8;
	shf.r.wrap.b32 	%r7249, %r7244, %r7245, 8;
	mov.b64 	%rd10662, {%r7249, %r7248};
	xor.b64  	%rd10663, %rd10661, %rd10662;
	add.s64 	%rd10664, %rd18821, %rd18803;
	add.s64 	%rd10665, %rd10664, %rd10658;
	add.s64 	%rd18821, %rd10665, %rd10663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7250,%dummy}, %rd18820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7251}, %rd18820;
	}
	shf.r.wrap.b32 	%r7252, %r7251, %r7250, 19;
	shf.r.wrap.b32 	%r7253, %r7250, %r7251, 19;
	mov.b64 	%rd10666, {%r7253, %r7252};
	shf.l.wrap.b32 	%r7254, %r7250, %r7251, 3;
	shf.l.wrap.b32 	%r7255, %r7251, %r7250, 3;
	mov.b64 	%rd10667, {%r7255, %r7254};
	shr.u64 	%rd10668, %rd18820, 6;
	xor.b64  	%rd10669, %rd10666, %rd10668;
	xor.b64  	%rd10670, %rd10669, %rd10667;
	shr.u64 	%rd10671, %rd18823, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7256,%dummy}, %rd18823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7257}, %rd18823;
	}
	shf.r.wrap.b32 	%r7258, %r7257, %r7256, 1;
	shf.r.wrap.b32 	%r7259, %r7256, %r7257, 1;
	mov.b64 	%rd10672, {%r7259, %r7258};
	xor.b64  	%rd10673, %rd10672, %rd10671;
	shf.r.wrap.b32 	%r7260, %r7257, %r7256, 8;
	shf.r.wrap.b32 	%r7261, %r7256, %r7257, 8;
	mov.b64 	%rd10674, {%r7261, %r7260};
	xor.b64  	%rd10675, %rd10673, %rd10674;
	add.s64 	%rd10676, %rd18822, %rd18802;
	add.s64 	%rd10677, %rd10676, %rd10670;
	add.s64 	%rd18822, %rd10677, %rd10675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7262,%dummy}, %rd18821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7263}, %rd18821;
	}
	shf.r.wrap.b32 	%r7264, %r7263, %r7262, 19;
	shf.r.wrap.b32 	%r7265, %r7262, %r7263, 19;
	mov.b64 	%rd10678, {%r7265, %r7264};
	shf.l.wrap.b32 	%r7266, %r7262, %r7263, 3;
	shf.l.wrap.b32 	%r7267, %r7263, %r7262, 3;
	mov.b64 	%rd10679, {%r7267, %r7266};
	shr.u64 	%rd10680, %rd18821, 6;
	xor.b64  	%rd10681, %rd10678, %rd10680;
	xor.b64  	%rd10682, %rd10681, %rd10679;
	shr.u64 	%rd10683, %rd18824, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7268,%dummy}, %rd18824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7269}, %rd18824;
	}
	shf.r.wrap.b32 	%r7270, %r7269, %r7268, 1;
	shf.r.wrap.b32 	%r7271, %r7268, %r7269, 1;
	mov.b64 	%rd10684, {%r7271, %r7270};
	xor.b64  	%rd10685, %rd10684, %rd10683;
	shf.r.wrap.b32 	%r7272, %r7269, %r7268, 8;
	shf.r.wrap.b32 	%r7273, %r7268, %r7269, 8;
	mov.b64 	%rd10686, {%r7273, %r7272};
	xor.b64  	%rd10687, %rd10685, %rd10686;
	add.s64 	%rd10688, %rd18823, %rd18754;
	add.s64 	%rd10689, %rd10688, %rd10682;
	add.s64 	%rd18823, %rd10689, %rd10687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7274,%dummy}, %rd18822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7275}, %rd18822;
	}
	shf.r.wrap.b32 	%r7276, %r7275, %r7274, 19;
	shf.r.wrap.b32 	%r7277, %r7274, %r7275, 19;
	mov.b64 	%rd10690, {%r7277, %r7276};
	shf.l.wrap.b32 	%r7278, %r7274, %r7275, 3;
	shf.l.wrap.b32 	%r7279, %r7275, %r7274, 3;
	mov.b64 	%rd10691, {%r7279, %r7278};
	shr.u64 	%rd10692, %rd18822, 6;
	xor.b64  	%rd10693, %rd10690, %rd10692;
	xor.b64  	%rd10694, %rd10693, %rd10691;
	shr.u64 	%rd10695, %rd18808, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7280,%dummy}, %rd18808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7281}, %rd18808;
	}
	shf.r.wrap.b32 	%r7282, %r7281, %r7280, 1;
	shf.r.wrap.b32 	%r7283, %r7280, %r7281, 1;
	mov.b64 	%rd10696, {%r7283, %r7282};
	xor.b64  	%rd10697, %rd10696, %rd10695;
	shf.r.wrap.b32 	%r7284, %r7281, %r7280, 8;
	shf.r.wrap.b32 	%r7285, %r7280, %r7281, 8;
	mov.b64 	%rd10698, {%r7285, %r7284};
	xor.b64  	%rd10699, %rd10697, %rd10698;
	add.s64 	%rd10700, %rd18817, %rd18824;
	add.s64 	%rd10701, %rd10700, %rd10694;
	add.s64 	%rd18824, %rd10701, %rd10699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7286,%dummy}, %rd18823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7287}, %rd18823;
	}
	shf.r.wrap.b32 	%r7288, %r7287, %r7286, 19;
	shf.r.wrap.b32 	%r7289, %r7286, %r7287, 19;
	mov.b64 	%rd10702, {%r7289, %r7288};
	shf.l.wrap.b32 	%r7290, %r7286, %r7287, 3;
	shf.l.wrap.b32 	%r7291, %r7287, %r7286, 3;
	mov.b64 	%rd10703, {%r7291, %r7290};
	shr.u64 	%rd10704, %rd18823, 6;
	xor.b64  	%rd10705, %rd10702, %rd10704;
	xor.b64  	%rd10706, %rd10705, %rd10703;
	shr.u64 	%rd10707, %rd18807, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7292,%dummy}, %rd18807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7293}, %rd18807;
	}
	shf.r.wrap.b32 	%r7294, %r7293, %r7292, 1;
	shf.r.wrap.b32 	%r7295, %r7292, %r7293, 1;
	mov.b64 	%rd10708, {%r7295, %r7294};
	xor.b64  	%rd10709, %rd10708, %rd10707;
	shf.r.wrap.b32 	%r7296, %r7293, %r7292, 8;
	shf.r.wrap.b32 	%r7297, %r7292, %r7293, 8;
	mov.b64 	%rd10710, {%r7297, %r7296};
	xor.b64  	%rd10711, %rd10709, %rd10710;
	add.s64 	%rd10712, %rd18818, %rd18808;
	add.s64 	%rd10713, %rd10712, %rd10706;
	add.s64 	%rd18808, %rd10713, %rd10711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7298,%dummy}, %rd18824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7299}, %rd18824;
	}
	shf.r.wrap.b32 	%r7300, %r7299, %r7298, 19;
	shf.r.wrap.b32 	%r7301, %r7298, %r7299, 19;
	mov.b64 	%rd10714, {%r7301, %r7300};
	shf.l.wrap.b32 	%r7302, %r7298, %r7299, 3;
	shf.l.wrap.b32 	%r7303, %r7299, %r7298, 3;
	mov.b64 	%rd10715, {%r7303, %r7302};
	shr.u64 	%rd10716, %rd18824, 6;
	xor.b64  	%rd10717, %rd10714, %rd10716;
	xor.b64  	%rd10718, %rd10717, %rd10715;
	shr.u64 	%rd10719, %rd18806, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7304,%dummy}, %rd18806;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7305}, %rd18806;
	}
	shf.r.wrap.b32 	%r7306, %r7305, %r7304, 1;
	shf.r.wrap.b32 	%r7307, %r7304, %r7305, 1;
	mov.b64 	%rd10720, {%r7307, %r7306};
	xor.b64  	%rd10721, %rd10720, %rd10719;
	shf.r.wrap.b32 	%r7308, %r7305, %r7304, 8;
	shf.r.wrap.b32 	%r7309, %r7304, %r7305, 8;
	mov.b64 	%rd10722, {%r7309, %r7308};
	xor.b64  	%rd10723, %rd10721, %rd10722;
	add.s64 	%rd10724, %rd18819, %rd18807;
	add.s64 	%rd10725, %rd10724, %rd10718;
	add.s64 	%rd18807, %rd10725, %rd10723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7310,%dummy}, %rd18808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7311}, %rd18808;
	}
	shf.r.wrap.b32 	%r7312, %r7311, %r7310, 19;
	shf.r.wrap.b32 	%r7313, %r7310, %r7311, 19;
	mov.b64 	%rd10726, {%r7313, %r7312};
	shf.l.wrap.b32 	%r7314, %r7310, %r7311, 3;
	shf.l.wrap.b32 	%r7315, %r7311, %r7310, 3;
	mov.b64 	%rd10727, {%r7315, %r7314};
	shr.u64 	%rd10728, %rd18808, 6;
	xor.b64  	%rd10729, %rd10726, %rd10728;
	xor.b64  	%rd10730, %rd10729, %rd10727;
	shr.u64 	%rd10731, %rd18805, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7316,%dummy}, %rd18805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7317}, %rd18805;
	}
	shf.r.wrap.b32 	%r7318, %r7317, %r7316, 1;
	shf.r.wrap.b32 	%r7319, %r7316, %r7317, 1;
	mov.b64 	%rd10732, {%r7319, %r7318};
	xor.b64  	%rd10733, %rd10732, %rd10731;
	shf.r.wrap.b32 	%r7320, %r7317, %r7316, 8;
	shf.r.wrap.b32 	%r7321, %r7316, %r7317, 8;
	mov.b64 	%rd10734, {%r7321, %r7320};
	xor.b64  	%rd10735, %rd10733, %rd10734;
	add.s64 	%rd10736, %rd18820, %rd18806;
	add.s64 	%rd10737, %rd10736, %rd10730;
	add.s64 	%rd18806, %rd10737, %rd10735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7322,%dummy}, %rd18807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7323}, %rd18807;
	}
	shf.r.wrap.b32 	%r7324, %r7323, %r7322, 19;
	shf.r.wrap.b32 	%r7325, %r7322, %r7323, 19;
	mov.b64 	%rd10738, {%r7325, %r7324};
	shf.l.wrap.b32 	%r7326, %r7322, %r7323, 3;
	shf.l.wrap.b32 	%r7327, %r7323, %r7322, 3;
	mov.b64 	%rd10739, {%r7327, %r7326};
	shr.u64 	%rd10740, %rd18807, 6;
	xor.b64  	%rd10741, %rd10738, %rd10740;
	xor.b64  	%rd10742, %rd10741, %rd10739;
	shr.u64 	%rd10743, %rd18804, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7328,%dummy}, %rd18804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7329}, %rd18804;
	}
	shf.r.wrap.b32 	%r7330, %r7329, %r7328, 1;
	shf.r.wrap.b32 	%r7331, %r7328, %r7329, 1;
	mov.b64 	%rd10744, {%r7331, %r7330};
	xor.b64  	%rd10745, %rd10744, %rd10743;
	shf.r.wrap.b32 	%r7332, %r7329, %r7328, 8;
	shf.r.wrap.b32 	%r7333, %r7328, %r7329, 8;
	mov.b64 	%rd10746, {%r7333, %r7332};
	xor.b64  	%rd10747, %rd10745, %rd10746;
	add.s64 	%rd10748, %rd18821, %rd18805;
	add.s64 	%rd10749, %rd10748, %rd10742;
	add.s64 	%rd18805, %rd10749, %rd10747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7334,%dummy}, %rd18806;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7335}, %rd18806;
	}
	shf.r.wrap.b32 	%r7336, %r7335, %r7334, 19;
	shf.r.wrap.b32 	%r7337, %r7334, %r7335, 19;
	mov.b64 	%rd10750, {%r7337, %r7336};
	shf.l.wrap.b32 	%r7338, %r7334, %r7335, 3;
	shf.l.wrap.b32 	%r7339, %r7335, %r7334, 3;
	mov.b64 	%rd10751, {%r7339, %r7338};
	shr.u64 	%rd10752, %rd18806, 6;
	xor.b64  	%rd10753, %rd10750, %rd10752;
	xor.b64  	%rd10754, %rd10753, %rd10751;
	shr.u64 	%rd10755, %rd18803, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7340,%dummy}, %rd18803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7341}, %rd18803;
	}
	shf.r.wrap.b32 	%r7342, %r7341, %r7340, 1;
	shf.r.wrap.b32 	%r7343, %r7340, %r7341, 1;
	mov.b64 	%rd10756, {%r7343, %r7342};
	xor.b64  	%rd10757, %rd10756, %rd10755;
	shf.r.wrap.b32 	%r7344, %r7341, %r7340, 8;
	shf.r.wrap.b32 	%r7345, %r7340, %r7341, 8;
	mov.b64 	%rd10758, {%r7345, %r7344};
	xor.b64  	%rd10759, %rd10757, %rd10758;
	add.s64 	%rd10760, %rd18822, %rd18804;
	add.s64 	%rd10761, %rd10760, %rd10754;
	add.s64 	%rd18804, %rd10761, %rd10759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7346,%dummy}, %rd18805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7347}, %rd18805;
	}
	shf.r.wrap.b32 	%r7348, %r7347, %r7346, 19;
	shf.r.wrap.b32 	%r7349, %r7346, %r7347, 19;
	mov.b64 	%rd10762, {%r7349, %r7348};
	shf.l.wrap.b32 	%r7350, %r7346, %r7347, 3;
	shf.l.wrap.b32 	%r7351, %r7347, %r7346, 3;
	mov.b64 	%rd10763, {%r7351, %r7350};
	shr.u64 	%rd10764, %rd18805, 6;
	xor.b64  	%rd10765, %rd10762, %rd10764;
	xor.b64  	%rd10766, %rd10765, %rd10763;
	shr.u64 	%rd10767, %rd18802, 7;
	shf.r.wrap.b32 	%r7352, %r7191, %r7190, 1;
	shf.r.wrap.b32 	%r7353, %r7190, %r7191, 1;
	mov.b64 	%rd10768, {%r7353, %r7352};
	xor.b64  	%rd10769, %rd10768, %rd10767;
	shf.r.wrap.b32 	%r7354, %r7191, %r7190, 8;
	shf.r.wrap.b32 	%r7355, %r7190, %r7191, 8;
	mov.b64 	%rd10770, {%r7355, %r7354};
	xor.b64  	%rd10771, %rd10769, %rd10770;
	add.s64 	%rd10772, %rd18823, %rd18803;
	add.s64 	%rd10773, %rd10772, %rd10766;
	add.s64 	%rd18803, %rd10773, %rd10771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7356,%dummy}, %rd18804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7357}, %rd18804;
	}
	shf.r.wrap.b32 	%r7358, %r7357, %r7356, 19;
	shf.r.wrap.b32 	%r7359, %r7356, %r7357, 19;
	mov.b64 	%rd10774, {%r7359, %r7358};
	shf.l.wrap.b32 	%r7360, %r7356, %r7357, 3;
	shf.l.wrap.b32 	%r7361, %r7357, %r7356, 3;
	mov.b64 	%rd10775, {%r7361, %r7360};
	shr.u64 	%rd10776, %rd18804, 6;
	xor.b64  	%rd10777, %rd10774, %rd10776;
	xor.b64  	%rd10778, %rd10777, %rd10775;
	shr.u64 	%rd10779, %rd18754, 7;
	shf.r.wrap.b32 	%r7362, %r7203, %r7202, 1;
	shf.r.wrap.b32 	%r7363, %r7202, %r7203, 1;
	mov.b64 	%rd10780, {%r7363, %r7362};
	xor.b64  	%rd10781, %rd10780, %rd10779;
	shf.r.wrap.b32 	%r7364, %r7203, %r7202, 8;
	shf.r.wrap.b32 	%r7365, %r7202, %r7203, 8;
	mov.b64 	%rd10782, {%r7365, %r7364};
	xor.b64  	%rd10783, %rd10781, %rd10782;
	add.s64 	%rd10784, %rd18824, %rd18802;
	add.s64 	%rd10785, %rd10784, %rd10778;
	add.s64 	%rd18802, %rd10785, %rd10783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7366,%dummy}, %rd18803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7367}, %rd18803;
	}
	shf.r.wrap.b32 	%r7368, %r7367, %r7366, 19;
	shf.r.wrap.b32 	%r7369, %r7366, %r7367, 19;
	mov.b64 	%rd10786, {%r7369, %r7368};
	shf.l.wrap.b32 	%r7370, %r7366, %r7367, 3;
	shf.l.wrap.b32 	%r7371, %r7367, %r7366, 3;
	mov.b64 	%rd10787, {%r7371, %r7370};
	shr.u64 	%rd10788, %rd18803, 6;
	xor.b64  	%rd10789, %rd10786, %rd10788;
	xor.b64  	%rd10790, %rd10789, %rd10787;
	shf.r.wrap.b32 	%r7372, %r7215, %r7214, 1;
	shf.r.wrap.b32 	%r7373, %r7214, %r7215, 1;
	mov.b64 	%rd10791, {%r7373, %r7372};
	shf.r.wrap.b32 	%r7374, %r7215, %r7214, 8;
	shf.r.wrap.b32 	%r7375, %r7214, %r7215, 8;
	mov.b64 	%rd10792, {%r7375, %r7374};
	shr.u64 	%rd10793, %rd18817, 7;
	xor.b64  	%rd10794, %rd10791, %rd10793;
	xor.b64  	%rd10795, %rd10794, %rd10792;
	add.s64 	%rd10796, %rd18808, %rd18754;
	add.s64 	%rd10797, %rd10796, %rd10790;
	add.s64 	%rd18754, %rd10797, %rd10795;
	mul.wide.s32 	%rd10798, %r13014, 8;
	mov.u64 	%rd10799, k_sha512;
	add.s64 	%rd10800, %rd10799, %rd10798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7376,%dummy}, %rd18766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7377}, %rd18766;
	}
	shf.r.wrap.b32 	%r7378, %r7377, %r7376, 18;
	shf.r.wrap.b32 	%r7379, %r7376, %r7377, 18;
	mov.b64 	%rd10801, {%r7379, %r7378};
	shf.r.wrap.b32 	%r7380, %r7377, %r7376, 14;
	shf.r.wrap.b32 	%r7381, %r7376, %r7377, 14;
	mov.b64 	%rd10802, {%r7381, %r7380};
	xor.b64  	%rd10803, %rd10801, %rd10802;
	shf.l.wrap.b32 	%r7382, %r7376, %r7377, 23;
	shf.l.wrap.b32 	%r7383, %r7377, %r7376, 23;
	mov.b64 	%rd10804, {%r7383, %r7382};
	xor.b64  	%rd10805, %rd10803, %rd10804;
	xor.b64  	%rd10806, %rd18768, %rd18767;
	and.b64  	%rd10807, %rd10806, %rd18766;
	xor.b64  	%rd10808, %rd10807, %rd18768;
	add.s64 	%rd10809, %rd10808, %rd18769;
	add.s64 	%rd10810, %rd10809, %rd18817;
	ld.const.u64 	%rd10811, [%rd10800];
	add.s64 	%rd10812, %rd10810, %rd10811;
	add.s64 	%rd10813, %rd10812, %rd10805;
	add.s64 	%rd10814, %rd10813, %rd18765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7384}, %rd18762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7385,%dummy}, %rd18762;
	}
	shf.l.wrap.b32 	%r7386, %r7385, %r7384, 30;
	shf.l.wrap.b32 	%r7387, %r7384, %r7385, 30;
	mov.b64 	%rd10815, {%r7387, %r7386};
	shf.r.wrap.b32 	%r7388, %r7384, %r7385, 28;
	shf.r.wrap.b32 	%r7389, %r7385, %r7384, 28;
	mov.b64 	%rd10816, {%r7389, %r7388};
	xor.b64  	%rd10817, %rd10815, %rd10816;
	shf.l.wrap.b32 	%r7390, %r7385, %r7384, 25;
	shf.l.wrap.b32 	%r7391, %r7384, %r7385, 25;
	mov.b64 	%rd10818, {%r7391, %r7390};
	xor.b64  	%rd10819, %rd10817, %rd10818;
	xor.b64  	%rd10820, %rd18763, %rd18762;
	and.b64  	%rd10821, %rd10820, %rd18764;
	and.b64  	%rd10822, %rd18763, %rd18762;
	or.b64  	%rd10823, %rd10821, %rd10822;
	add.s64 	%rd10824, %rd10813, %rd10823;
	add.s64 	%rd10825, %rd10824, %rd10819;
	add.s32 	%r7392, %r13014, 1;
	mul.wide.s32 	%rd10826, %r7392, 8;
	add.s64 	%rd10827, %rd10799, %rd10826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7393,%dummy}, %rd10814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7394}, %rd10814;
	}
	shf.r.wrap.b32 	%r7395, %r7394, %r7393, 14;
	shf.r.wrap.b32 	%r7396, %r7393, %r7394, 14;
	mov.b64 	%rd10828, {%r7396, %r7395};
	shf.r.wrap.b32 	%r7397, %r7394, %r7393, 18;
	shf.r.wrap.b32 	%r7398, %r7393, %r7394, 18;
	mov.b64 	%rd10829, {%r7398, %r7397};
	xor.b64  	%rd10830, %rd10829, %rd10828;
	shf.l.wrap.b32 	%r7399, %r7393, %r7394, 23;
	shf.l.wrap.b32 	%r7400, %r7394, %r7393, 23;
	mov.b64 	%rd10831, {%r7400, %r7399};
	xor.b64  	%rd10832, %rd10830, %rd10831;
	xor.b64  	%rd10833, %rd18767, %rd18766;
	and.b64  	%rd10834, %rd10814, %rd10833;
	xor.b64  	%rd10835, %rd10834, %rd18767;
	add.s64 	%rd10836, %rd18818, %rd18768;
	ld.const.u64 	%rd10837, [%rd10827];
	add.s64 	%rd10838, %rd10836, %rd10837;
	add.s64 	%rd10839, %rd10838, %rd10835;
	add.s64 	%rd10840, %rd10839, %rd10832;
	add.s64 	%rd10841, %rd10840, %rd18764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7401,%dummy}, %rd10825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7402}, %rd10825;
	}
	shf.r.wrap.b32 	%r7403, %r7402, %r7401, 28;
	shf.r.wrap.b32 	%r7404, %r7401, %r7402, 28;
	mov.b64 	%rd10842, {%r7404, %r7403};
	shf.l.wrap.b32 	%r7405, %r7401, %r7402, 30;
	shf.l.wrap.b32 	%r7406, %r7402, %r7401, 30;
	mov.b64 	%rd10843, {%r7406, %r7405};
	xor.b64  	%rd10844, %rd10843, %rd10842;
	shf.l.wrap.b32 	%r7407, %r7401, %r7402, 25;
	shf.l.wrap.b32 	%r7408, %r7402, %r7401, 25;
	mov.b64 	%rd10845, {%r7408, %r7407};
	xor.b64  	%rd10846, %rd10844, %rd10845;
	and.b64  	%rd10847, %rd10825, %rd18762;
	xor.b64  	%rd10848, %rd10825, %rd18762;
	and.b64  	%rd10849, %rd10848, %rd18763;
	or.b64  	%rd10850, %rd10849, %rd10847;
	add.s64 	%rd10851, %rd10840, %rd10850;
	add.s64 	%rd10852, %rd10851, %rd10846;
	add.s32 	%r7409, %r13014, 2;
	mul.wide.s32 	%rd10853, %r7409, 8;
	add.s64 	%rd10854, %rd10799, %rd10853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7410,%dummy}, %rd10841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7411}, %rd10841;
	}
	shf.r.wrap.b32 	%r7412, %r7411, %r7410, 14;
	shf.r.wrap.b32 	%r7413, %r7410, %r7411, 14;
	mov.b64 	%rd10855, {%r7413, %r7412};
	shf.r.wrap.b32 	%r7414, %r7411, %r7410, 18;
	shf.r.wrap.b32 	%r7415, %r7410, %r7411, 18;
	mov.b64 	%rd10856, {%r7415, %r7414};
	xor.b64  	%rd10857, %rd10856, %rd10855;
	shf.l.wrap.b32 	%r7416, %r7410, %r7411, 23;
	shf.l.wrap.b32 	%r7417, %r7411, %r7410, 23;
	mov.b64 	%rd10858, {%r7417, %r7416};
	xor.b64  	%rd10859, %rd10857, %rd10858;
	xor.b64  	%rd10860, %rd10814, %rd18766;
	and.b64  	%rd10861, %rd10841, %rd10860;
	xor.b64  	%rd10862, %rd10861, %rd18766;
	add.s64 	%rd10863, %rd18819, %rd18767;
	ld.const.u64 	%rd10864, [%rd10854];
	add.s64 	%rd10865, %rd10863, %rd10864;
	add.s64 	%rd10866, %rd10865, %rd10862;
	add.s64 	%rd10867, %rd10866, %rd10859;
	add.s64 	%rd10868, %rd10867, %rd18763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7418,%dummy}, %rd10852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7419}, %rd10852;
	}
	shf.r.wrap.b32 	%r7420, %r7419, %r7418, 28;
	shf.r.wrap.b32 	%r7421, %r7418, %r7419, 28;
	mov.b64 	%rd10869, {%r7421, %r7420};
	shf.l.wrap.b32 	%r7422, %r7418, %r7419, 30;
	shf.l.wrap.b32 	%r7423, %r7419, %r7418, 30;
	mov.b64 	%rd10870, {%r7423, %r7422};
	xor.b64  	%rd10871, %rd10870, %rd10869;
	shf.l.wrap.b32 	%r7424, %r7418, %r7419, 25;
	shf.l.wrap.b32 	%r7425, %r7419, %r7418, 25;
	mov.b64 	%rd10872, {%r7425, %r7424};
	xor.b64  	%rd10873, %rd10871, %rd10872;
	and.b64  	%rd10874, %rd10852, %rd10825;
	xor.b64  	%rd10875, %rd10852, %rd10825;
	and.b64  	%rd10876, %rd10875, %rd18762;
	or.b64  	%rd10877, %rd10876, %rd10874;
	add.s64 	%rd10878, %rd10867, %rd10877;
	add.s64 	%rd10879, %rd10878, %rd10873;
	add.s32 	%r7426, %r13014, 3;
	mul.wide.s32 	%rd10880, %r7426, 8;
	add.s64 	%rd10881, %rd10799, %rd10880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7427,%dummy}, %rd10868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7428}, %rd10868;
	}
	shf.r.wrap.b32 	%r7429, %r7428, %r7427, 14;
	shf.r.wrap.b32 	%r7430, %r7427, %r7428, 14;
	mov.b64 	%rd10882, {%r7430, %r7429};
	shf.r.wrap.b32 	%r7431, %r7428, %r7427, 18;
	shf.r.wrap.b32 	%r7432, %r7427, %r7428, 18;
	mov.b64 	%rd10883, {%r7432, %r7431};
	xor.b64  	%rd10884, %rd10883, %rd10882;
	shf.l.wrap.b32 	%r7433, %r7427, %r7428, 23;
	shf.l.wrap.b32 	%r7434, %r7428, %r7427, 23;
	mov.b64 	%rd10885, {%r7434, %r7433};
	xor.b64  	%rd10886, %rd10884, %rd10885;
	xor.b64  	%rd10887, %rd10841, %rd10814;
	and.b64  	%rd10888, %rd10868, %rd10887;
	xor.b64  	%rd10889, %rd10888, %rd10814;
	add.s64 	%rd10890, %rd18820, %rd18766;
	ld.const.u64 	%rd10891, [%rd10881];
	add.s64 	%rd10892, %rd10890, %rd10891;
	add.s64 	%rd10893, %rd10892, %rd10889;
	add.s64 	%rd10894, %rd10893, %rd10886;
	add.s64 	%rd10895, %rd10894, %rd18762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7435,%dummy}, %rd10879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7436}, %rd10879;
	}
	shf.r.wrap.b32 	%r7437, %r7436, %r7435, 28;
	shf.r.wrap.b32 	%r7438, %r7435, %r7436, 28;
	mov.b64 	%rd10896, {%r7438, %r7437};
	shf.l.wrap.b32 	%r7439, %r7435, %r7436, 30;
	shf.l.wrap.b32 	%r7440, %r7436, %r7435, 30;
	mov.b64 	%rd10897, {%r7440, %r7439};
	xor.b64  	%rd10898, %rd10897, %rd10896;
	shf.l.wrap.b32 	%r7441, %r7435, %r7436, 25;
	shf.l.wrap.b32 	%r7442, %r7436, %r7435, 25;
	mov.b64 	%rd10899, {%r7442, %r7441};
	xor.b64  	%rd10900, %rd10898, %rd10899;
	and.b64  	%rd10901, %rd10879, %rd10852;
	xor.b64  	%rd10902, %rd10879, %rd10852;
	and.b64  	%rd10903, %rd10902, %rd10825;
	or.b64  	%rd10904, %rd10903, %rd10901;
	add.s64 	%rd10905, %rd10894, %rd10904;
	add.s64 	%rd10906, %rd10905, %rd10900;
	add.s32 	%r7443, %r13014, 4;
	mul.wide.s32 	%rd10907, %r7443, 8;
	add.s64 	%rd10908, %rd10799, %rd10907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7444,%dummy}, %rd10895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7445}, %rd10895;
	}
	shf.r.wrap.b32 	%r7446, %r7445, %r7444, 14;
	shf.r.wrap.b32 	%r7447, %r7444, %r7445, 14;
	mov.b64 	%rd10909, {%r7447, %r7446};
	shf.r.wrap.b32 	%r7448, %r7445, %r7444, 18;
	shf.r.wrap.b32 	%r7449, %r7444, %r7445, 18;
	mov.b64 	%rd10910, {%r7449, %r7448};
	xor.b64  	%rd10911, %rd10910, %rd10909;
	shf.l.wrap.b32 	%r7450, %r7444, %r7445, 23;
	shf.l.wrap.b32 	%r7451, %r7445, %r7444, 23;
	mov.b64 	%rd10912, {%r7451, %r7450};
	xor.b64  	%rd10913, %rd10911, %rd10912;
	xor.b64  	%rd10914, %rd10868, %rd10841;
	and.b64  	%rd10915, %rd10895, %rd10914;
	xor.b64  	%rd10916, %rd10915, %rd10841;
	add.s64 	%rd10917, %rd10814, %rd18821;
	ld.const.u64 	%rd10918, [%rd10908];
	add.s64 	%rd10919, %rd10917, %rd10918;
	add.s64 	%rd10920, %rd10919, %rd10916;
	add.s64 	%rd10921, %rd10920, %rd10913;
	add.s64 	%rd10922, %rd10921, %rd10825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7452,%dummy}, %rd10906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7453}, %rd10906;
	}
	shf.r.wrap.b32 	%r7454, %r7453, %r7452, 28;
	shf.r.wrap.b32 	%r7455, %r7452, %r7453, 28;
	mov.b64 	%rd10923, {%r7455, %r7454};
	shf.l.wrap.b32 	%r7456, %r7452, %r7453, 30;
	shf.l.wrap.b32 	%r7457, %r7453, %r7452, 30;
	mov.b64 	%rd10924, {%r7457, %r7456};
	xor.b64  	%rd10925, %rd10924, %rd10923;
	shf.l.wrap.b32 	%r7458, %r7452, %r7453, 25;
	shf.l.wrap.b32 	%r7459, %r7453, %r7452, 25;
	mov.b64 	%rd10926, {%r7459, %r7458};
	xor.b64  	%rd10927, %rd10925, %rd10926;
	and.b64  	%rd10928, %rd10906, %rd10879;
	xor.b64  	%rd10929, %rd10906, %rd10879;
	and.b64  	%rd10930, %rd10929, %rd10852;
	or.b64  	%rd10931, %rd10930, %rd10928;
	add.s64 	%rd10932, %rd10921, %rd10931;
	add.s64 	%rd10933, %rd10932, %rd10927;
	add.s32 	%r7460, %r13014, 5;
	mul.wide.s32 	%rd10934, %r7460, 8;
	add.s64 	%rd10935, %rd10799, %rd10934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7461,%dummy}, %rd10922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7462}, %rd10922;
	}
	shf.r.wrap.b32 	%r7463, %r7462, %r7461, 14;
	shf.r.wrap.b32 	%r7464, %r7461, %r7462, 14;
	mov.b64 	%rd10936, {%r7464, %r7463};
	shf.r.wrap.b32 	%r7465, %r7462, %r7461, 18;
	shf.r.wrap.b32 	%r7466, %r7461, %r7462, 18;
	mov.b64 	%rd10937, {%r7466, %r7465};
	xor.b64  	%rd10938, %rd10937, %rd10936;
	shf.l.wrap.b32 	%r7467, %r7461, %r7462, 23;
	shf.l.wrap.b32 	%r7468, %r7462, %r7461, 23;
	mov.b64 	%rd10939, {%r7468, %r7467};
	xor.b64  	%rd10940, %rd10938, %rd10939;
	xor.b64  	%rd10941, %rd10895, %rd10868;
	and.b64  	%rd10942, %rd10922, %rd10941;
	xor.b64  	%rd10943, %rd10942, %rd10868;
	add.s64 	%rd10944, %rd10841, %rd18822;
	ld.const.u64 	%rd10945, [%rd10935];
	add.s64 	%rd10946, %rd10944, %rd10945;
	add.s64 	%rd10947, %rd10946, %rd10943;
	add.s64 	%rd10948, %rd10947, %rd10940;
	add.s64 	%rd10949, %rd10948, %rd10852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7469,%dummy}, %rd10933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7470}, %rd10933;
	}
	shf.r.wrap.b32 	%r7471, %r7470, %r7469, 28;
	shf.r.wrap.b32 	%r7472, %r7469, %r7470, 28;
	mov.b64 	%rd10950, {%r7472, %r7471};
	shf.l.wrap.b32 	%r7473, %r7469, %r7470, 30;
	shf.l.wrap.b32 	%r7474, %r7470, %r7469, 30;
	mov.b64 	%rd10951, {%r7474, %r7473};
	xor.b64  	%rd10952, %rd10951, %rd10950;
	shf.l.wrap.b32 	%r7475, %r7469, %r7470, 25;
	shf.l.wrap.b32 	%r7476, %r7470, %r7469, 25;
	mov.b64 	%rd10953, {%r7476, %r7475};
	xor.b64  	%rd10954, %rd10952, %rd10953;
	and.b64  	%rd10955, %rd10933, %rd10906;
	xor.b64  	%rd10956, %rd10933, %rd10906;
	and.b64  	%rd10957, %rd10956, %rd10879;
	or.b64  	%rd10958, %rd10957, %rd10955;
	add.s64 	%rd10959, %rd10948, %rd10958;
	add.s64 	%rd10960, %rd10959, %rd10954;
	add.s32 	%r7477, %r13014, 6;
	mul.wide.s32 	%rd10961, %r7477, 8;
	add.s64 	%rd10962, %rd10799, %rd10961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7478,%dummy}, %rd10949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7479}, %rd10949;
	}
	shf.r.wrap.b32 	%r7480, %r7479, %r7478, 14;
	shf.r.wrap.b32 	%r7481, %r7478, %r7479, 14;
	mov.b64 	%rd10963, {%r7481, %r7480};
	shf.r.wrap.b32 	%r7482, %r7479, %r7478, 18;
	shf.r.wrap.b32 	%r7483, %r7478, %r7479, 18;
	mov.b64 	%rd10964, {%r7483, %r7482};
	xor.b64  	%rd10965, %rd10964, %rd10963;
	shf.l.wrap.b32 	%r7484, %r7478, %r7479, 23;
	shf.l.wrap.b32 	%r7485, %r7479, %r7478, 23;
	mov.b64 	%rd10966, {%r7485, %r7484};
	xor.b64  	%rd10967, %rd10965, %rd10966;
	xor.b64  	%rd10968, %rd10922, %rd10895;
	and.b64  	%rd10969, %rd10949, %rd10968;
	xor.b64  	%rd10970, %rd10969, %rd10895;
	add.s64 	%rd10971, %rd10868, %rd18823;
	ld.const.u64 	%rd10972, [%rd10962];
	add.s64 	%rd10973, %rd10971, %rd10972;
	add.s64 	%rd10974, %rd10973, %rd10970;
	add.s64 	%rd10975, %rd10974, %rd10967;
	add.s64 	%rd10976, %rd10975, %rd10879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7486,%dummy}, %rd10960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7487}, %rd10960;
	}
	shf.r.wrap.b32 	%r7488, %r7487, %r7486, 28;
	shf.r.wrap.b32 	%r7489, %r7486, %r7487, 28;
	mov.b64 	%rd10977, {%r7489, %r7488};
	shf.l.wrap.b32 	%r7490, %r7486, %r7487, 30;
	shf.l.wrap.b32 	%r7491, %r7487, %r7486, 30;
	mov.b64 	%rd10978, {%r7491, %r7490};
	xor.b64  	%rd10979, %rd10978, %rd10977;
	shf.l.wrap.b32 	%r7492, %r7486, %r7487, 25;
	shf.l.wrap.b32 	%r7493, %r7487, %r7486, 25;
	mov.b64 	%rd10980, {%r7493, %r7492};
	xor.b64  	%rd10981, %rd10979, %rd10980;
	and.b64  	%rd10982, %rd10960, %rd10933;
	xor.b64  	%rd10983, %rd10960, %rd10933;
	and.b64  	%rd10984, %rd10983, %rd10906;
	or.b64  	%rd10985, %rd10984, %rd10982;
	add.s64 	%rd10986, %rd10975, %rd10985;
	add.s64 	%rd10987, %rd10986, %rd10981;
	add.s32 	%r7494, %r13014, 7;
	mul.wide.s32 	%rd10988, %r7494, 8;
	add.s64 	%rd10989, %rd10799, %rd10988;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7495,%dummy}, %rd10976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7496}, %rd10976;
	}
	shf.r.wrap.b32 	%r7497, %r7496, %r7495, 14;
	shf.r.wrap.b32 	%r7498, %r7495, %r7496, 14;
	mov.b64 	%rd10990, {%r7498, %r7497};
	shf.r.wrap.b32 	%r7499, %r7496, %r7495, 18;
	shf.r.wrap.b32 	%r7500, %r7495, %r7496, 18;
	mov.b64 	%rd10991, {%r7500, %r7499};
	xor.b64  	%rd10992, %rd10991, %rd10990;
	shf.l.wrap.b32 	%r7501, %r7495, %r7496, 23;
	shf.l.wrap.b32 	%r7502, %r7496, %r7495, 23;
	mov.b64 	%rd10993, {%r7502, %r7501};
	xor.b64  	%rd10994, %rd10992, %rd10993;
	xor.b64  	%rd10995, %rd10949, %rd10922;
	and.b64  	%rd10996, %rd10976, %rd10995;
	xor.b64  	%rd10997, %rd10996, %rd10922;
	add.s64 	%rd10998, %rd10895, %rd18824;
	ld.const.u64 	%rd10999, [%rd10989];
	add.s64 	%rd11000, %rd10998, %rd10999;
	add.s64 	%rd11001, %rd11000, %rd10997;
	add.s64 	%rd11002, %rd11001, %rd10994;
	add.s64 	%rd11003, %rd11002, %rd10906;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7503,%dummy}, %rd10987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7504}, %rd10987;
	}
	shf.r.wrap.b32 	%r7505, %r7504, %r7503, 28;
	shf.r.wrap.b32 	%r7506, %r7503, %r7504, 28;
	mov.b64 	%rd11004, {%r7506, %r7505};
	shf.l.wrap.b32 	%r7507, %r7503, %r7504, 30;
	shf.l.wrap.b32 	%r7508, %r7504, %r7503, 30;
	mov.b64 	%rd11005, {%r7508, %r7507};
	xor.b64  	%rd11006, %rd11005, %rd11004;
	shf.l.wrap.b32 	%r7509, %r7503, %r7504, 25;
	shf.l.wrap.b32 	%r7510, %r7504, %r7503, 25;
	mov.b64 	%rd11007, {%r7510, %r7509};
	xor.b64  	%rd11008, %rd11006, %rd11007;
	and.b64  	%rd11009, %rd10987, %rd10960;
	xor.b64  	%rd11010, %rd10987, %rd10960;
	and.b64  	%rd11011, %rd11010, %rd10933;
	or.b64  	%rd11012, %rd11011, %rd11009;
	add.s64 	%rd11013, %rd11002, %rd11012;
	add.s64 	%rd11014, %rd11013, %rd11008;
	add.s32 	%r7511, %r13014, 8;
	mul.wide.s32 	%rd11015, %r7511, 8;
	add.s64 	%rd11016, %rd10799, %rd11015;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7512,%dummy}, %rd11003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7513}, %rd11003;
	}
	shf.r.wrap.b32 	%r7514, %r7513, %r7512, 14;
	shf.r.wrap.b32 	%r7515, %r7512, %r7513, 14;
	mov.b64 	%rd11017, {%r7515, %r7514};
	shf.r.wrap.b32 	%r7516, %r7513, %r7512, 18;
	shf.r.wrap.b32 	%r7517, %r7512, %r7513, 18;
	mov.b64 	%rd11018, {%r7517, %r7516};
	xor.b64  	%rd11019, %rd11018, %rd11017;
	shf.l.wrap.b32 	%r7518, %r7512, %r7513, 23;
	shf.l.wrap.b32 	%r7519, %r7513, %r7512, 23;
	mov.b64 	%rd11020, {%r7519, %r7518};
	xor.b64  	%rd11021, %rd11019, %rd11020;
	xor.b64  	%rd11022, %rd10976, %rd10949;
	and.b64  	%rd11023, %rd11003, %rd11022;
	xor.b64  	%rd11024, %rd11023, %rd10949;
	add.s64 	%rd11025, %rd10922, %rd18808;
	ld.const.u64 	%rd11026, [%rd11016];
	add.s64 	%rd11027, %rd11025, %rd11026;
	add.s64 	%rd11028, %rd11027, %rd11024;
	add.s64 	%rd11029, %rd11028, %rd11021;
	add.s64 	%rd11030, %rd11029, %rd10933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7520,%dummy}, %rd11014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7521}, %rd11014;
	}
	shf.r.wrap.b32 	%r7522, %r7521, %r7520, 28;
	shf.r.wrap.b32 	%r7523, %r7520, %r7521, 28;
	mov.b64 	%rd11031, {%r7523, %r7522};
	shf.l.wrap.b32 	%r7524, %r7520, %r7521, 30;
	shf.l.wrap.b32 	%r7525, %r7521, %r7520, 30;
	mov.b64 	%rd11032, {%r7525, %r7524};
	xor.b64  	%rd11033, %rd11032, %rd11031;
	shf.l.wrap.b32 	%r7526, %r7520, %r7521, 25;
	shf.l.wrap.b32 	%r7527, %r7521, %r7520, 25;
	mov.b64 	%rd11034, {%r7527, %r7526};
	xor.b64  	%rd11035, %rd11033, %rd11034;
	and.b64  	%rd11036, %rd11014, %rd10987;
	xor.b64  	%rd11037, %rd11014, %rd10987;
	and.b64  	%rd11038, %rd11037, %rd10960;
	or.b64  	%rd11039, %rd11038, %rd11036;
	add.s64 	%rd11040, %rd11029, %rd11039;
	add.s64 	%rd11041, %rd11040, %rd11035;
	add.s32 	%r7528, %r13014, 9;
	mul.wide.s32 	%rd11042, %r7528, 8;
	add.s64 	%rd11043, %rd10799, %rd11042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7529,%dummy}, %rd11030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7530}, %rd11030;
	}
	shf.r.wrap.b32 	%r7531, %r7530, %r7529, 14;
	shf.r.wrap.b32 	%r7532, %r7529, %r7530, 14;
	mov.b64 	%rd11044, {%r7532, %r7531};
	shf.r.wrap.b32 	%r7533, %r7530, %r7529, 18;
	shf.r.wrap.b32 	%r7534, %r7529, %r7530, 18;
	mov.b64 	%rd11045, {%r7534, %r7533};
	xor.b64  	%rd11046, %rd11045, %rd11044;
	shf.l.wrap.b32 	%r7535, %r7529, %r7530, 23;
	shf.l.wrap.b32 	%r7536, %r7530, %r7529, 23;
	mov.b64 	%rd11047, {%r7536, %r7535};
	xor.b64  	%rd11048, %rd11046, %rd11047;
	xor.b64  	%rd11049, %rd11003, %rd10976;
	and.b64  	%rd11050, %rd11030, %rd11049;
	xor.b64  	%rd11051, %rd11050, %rd10976;
	add.s64 	%rd11052, %rd10949, %rd18807;
	ld.const.u64 	%rd11053, [%rd11043];
	add.s64 	%rd11054, %rd11052, %rd11053;
	add.s64 	%rd11055, %rd11054, %rd11051;
	add.s64 	%rd11056, %rd11055, %rd11048;
	add.s64 	%rd11057, %rd11056, %rd10960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7537,%dummy}, %rd11041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7538}, %rd11041;
	}
	shf.r.wrap.b32 	%r7539, %r7538, %r7537, 28;
	shf.r.wrap.b32 	%r7540, %r7537, %r7538, 28;
	mov.b64 	%rd11058, {%r7540, %r7539};
	shf.l.wrap.b32 	%r7541, %r7537, %r7538, 30;
	shf.l.wrap.b32 	%r7542, %r7538, %r7537, 30;
	mov.b64 	%rd11059, {%r7542, %r7541};
	xor.b64  	%rd11060, %rd11059, %rd11058;
	shf.l.wrap.b32 	%r7543, %r7537, %r7538, 25;
	shf.l.wrap.b32 	%r7544, %r7538, %r7537, 25;
	mov.b64 	%rd11061, {%r7544, %r7543};
	xor.b64  	%rd11062, %rd11060, %rd11061;
	and.b64  	%rd11063, %rd11041, %rd11014;
	xor.b64  	%rd11064, %rd11041, %rd11014;
	and.b64  	%rd11065, %rd11064, %rd10987;
	or.b64  	%rd11066, %rd11065, %rd11063;
	add.s64 	%rd11067, %rd11056, %rd11066;
	add.s64 	%rd11068, %rd11067, %rd11062;
	add.s32 	%r7545, %r13014, 10;
	mul.wide.s32 	%rd11069, %r7545, 8;
	add.s64 	%rd11070, %rd10799, %rd11069;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7546,%dummy}, %rd11057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7547}, %rd11057;
	}
	shf.r.wrap.b32 	%r7548, %r7547, %r7546, 14;
	shf.r.wrap.b32 	%r7549, %r7546, %r7547, 14;
	mov.b64 	%rd11071, {%r7549, %r7548};
	shf.r.wrap.b32 	%r7550, %r7547, %r7546, 18;
	shf.r.wrap.b32 	%r7551, %r7546, %r7547, 18;
	mov.b64 	%rd11072, {%r7551, %r7550};
	xor.b64  	%rd11073, %rd11072, %rd11071;
	shf.l.wrap.b32 	%r7552, %r7546, %r7547, 23;
	shf.l.wrap.b32 	%r7553, %r7547, %r7546, 23;
	mov.b64 	%rd11074, {%r7553, %r7552};
	xor.b64  	%rd11075, %rd11073, %rd11074;
	xor.b64  	%rd11076, %rd11030, %rd11003;
	and.b64  	%rd11077, %rd11057, %rd11076;
	xor.b64  	%rd11078, %rd11077, %rd11003;
	add.s64 	%rd11079, %rd10976, %rd18806;
	ld.const.u64 	%rd11080, [%rd11070];
	add.s64 	%rd11081, %rd11079, %rd11080;
	add.s64 	%rd11082, %rd11081, %rd11078;
	add.s64 	%rd11083, %rd11082, %rd11075;
	add.s64 	%rd11084, %rd11083, %rd10987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7554,%dummy}, %rd11068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7555}, %rd11068;
	}
	shf.r.wrap.b32 	%r7556, %r7555, %r7554, 28;
	shf.r.wrap.b32 	%r7557, %r7554, %r7555, 28;
	mov.b64 	%rd11085, {%r7557, %r7556};
	shf.l.wrap.b32 	%r7558, %r7554, %r7555, 30;
	shf.l.wrap.b32 	%r7559, %r7555, %r7554, 30;
	mov.b64 	%rd11086, {%r7559, %r7558};
	xor.b64  	%rd11087, %rd11086, %rd11085;
	shf.l.wrap.b32 	%r7560, %r7554, %r7555, 25;
	shf.l.wrap.b32 	%r7561, %r7555, %r7554, 25;
	mov.b64 	%rd11088, {%r7561, %r7560};
	xor.b64  	%rd11089, %rd11087, %rd11088;
	and.b64  	%rd11090, %rd11068, %rd11041;
	xor.b64  	%rd11091, %rd11068, %rd11041;
	and.b64  	%rd11092, %rd11091, %rd11014;
	or.b64  	%rd11093, %rd11092, %rd11090;
	add.s64 	%rd11094, %rd11083, %rd11093;
	add.s64 	%rd11095, %rd11094, %rd11089;
	add.s32 	%r7562, %r13014, 11;
	mul.wide.s32 	%rd11096, %r7562, 8;
	add.s64 	%rd11097, %rd10799, %rd11096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7563,%dummy}, %rd11084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7564}, %rd11084;
	}
	shf.r.wrap.b32 	%r7565, %r7564, %r7563, 14;
	shf.r.wrap.b32 	%r7566, %r7563, %r7564, 14;
	mov.b64 	%rd11098, {%r7566, %r7565};
	shf.r.wrap.b32 	%r7567, %r7564, %r7563, 18;
	shf.r.wrap.b32 	%r7568, %r7563, %r7564, 18;
	mov.b64 	%rd11099, {%r7568, %r7567};
	xor.b64  	%rd11100, %rd11099, %rd11098;
	shf.l.wrap.b32 	%r7569, %r7563, %r7564, 23;
	shf.l.wrap.b32 	%r7570, %r7564, %r7563, 23;
	mov.b64 	%rd11101, {%r7570, %r7569};
	xor.b64  	%rd11102, %rd11100, %rd11101;
	xor.b64  	%rd11103, %rd11057, %rd11030;
	and.b64  	%rd11104, %rd11084, %rd11103;
	xor.b64  	%rd11105, %rd11104, %rd11030;
	add.s64 	%rd11106, %rd11003, %rd18805;
	ld.const.u64 	%rd11107, [%rd11097];
	add.s64 	%rd11108, %rd11106, %rd11107;
	add.s64 	%rd11109, %rd11108, %rd11105;
	add.s64 	%rd11110, %rd11109, %rd11102;
	add.s64 	%rd11111, %rd11110, %rd11014;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7571,%dummy}, %rd11095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7572}, %rd11095;
	}
	shf.r.wrap.b32 	%r7573, %r7572, %r7571, 28;
	shf.r.wrap.b32 	%r7574, %r7571, %r7572, 28;
	mov.b64 	%rd11112, {%r7574, %r7573};
	shf.l.wrap.b32 	%r7575, %r7571, %r7572, 30;
	shf.l.wrap.b32 	%r7576, %r7572, %r7571, 30;
	mov.b64 	%rd11113, {%r7576, %r7575};
	xor.b64  	%rd11114, %rd11113, %rd11112;
	shf.l.wrap.b32 	%r7577, %r7571, %r7572, 25;
	shf.l.wrap.b32 	%r7578, %r7572, %r7571, 25;
	mov.b64 	%rd11115, {%r7578, %r7577};
	xor.b64  	%rd11116, %rd11114, %rd11115;
	and.b64  	%rd11117, %rd11095, %rd11068;
	xor.b64  	%rd11118, %rd11095, %rd11068;
	and.b64  	%rd11119, %rd11118, %rd11041;
	or.b64  	%rd11120, %rd11119, %rd11117;
	add.s64 	%rd11121, %rd11110, %rd11120;
	add.s64 	%rd11122, %rd11121, %rd11116;
	add.s32 	%r7579, %r13014, 12;
	mul.wide.s32 	%rd11123, %r7579, 8;
	add.s64 	%rd11124, %rd10799, %rd11123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7580,%dummy}, %rd11111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7581}, %rd11111;
	}
	shf.r.wrap.b32 	%r7582, %r7581, %r7580, 14;
	shf.r.wrap.b32 	%r7583, %r7580, %r7581, 14;
	mov.b64 	%rd11125, {%r7583, %r7582};
	shf.r.wrap.b32 	%r7584, %r7581, %r7580, 18;
	shf.r.wrap.b32 	%r7585, %r7580, %r7581, 18;
	mov.b64 	%rd11126, {%r7585, %r7584};
	xor.b64  	%rd11127, %rd11126, %rd11125;
	shf.l.wrap.b32 	%r7586, %r7580, %r7581, 23;
	shf.l.wrap.b32 	%r7587, %r7581, %r7580, 23;
	mov.b64 	%rd11128, {%r7587, %r7586};
	xor.b64  	%rd11129, %rd11127, %rd11128;
	xor.b64  	%rd11130, %rd11084, %rd11057;
	and.b64  	%rd11131, %rd11111, %rd11130;
	xor.b64  	%rd11132, %rd11131, %rd11057;
	add.s64 	%rd11133, %rd11030, %rd18804;
	ld.const.u64 	%rd11134, [%rd11124];
	add.s64 	%rd11135, %rd11133, %rd11134;
	add.s64 	%rd11136, %rd11135, %rd11132;
	add.s64 	%rd11137, %rd11136, %rd11129;
	add.s64 	%rd18769, %rd11137, %rd11041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7588,%dummy}, %rd11122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7589}, %rd11122;
	}
	shf.r.wrap.b32 	%r7590, %r7589, %r7588, 28;
	shf.r.wrap.b32 	%r7591, %r7588, %r7589, 28;
	mov.b64 	%rd11138, {%r7591, %r7590};
	shf.l.wrap.b32 	%r7592, %r7588, %r7589, 30;
	shf.l.wrap.b32 	%r7593, %r7589, %r7588, 30;
	mov.b64 	%rd11139, {%r7593, %r7592};
	xor.b64  	%rd11140, %rd11139, %rd11138;
	shf.l.wrap.b32 	%r7594, %r7588, %r7589, 25;
	shf.l.wrap.b32 	%r7595, %r7589, %r7588, 25;
	mov.b64 	%rd11141, {%r7595, %r7594};
	xor.b64  	%rd11142, %rd11140, %rd11141;
	and.b64  	%rd11143, %rd11122, %rd11095;
	xor.b64  	%rd11144, %rd11122, %rd11095;
	and.b64  	%rd11145, %rd11144, %rd11068;
	or.b64  	%rd11146, %rd11145, %rd11143;
	add.s64 	%rd11147, %rd11137, %rd11146;
	add.s64 	%rd18765, %rd11147, %rd11142;
	add.s32 	%r7596, %r13014, 13;
	mul.wide.s32 	%rd11148, %r7596, 8;
	add.s64 	%rd11149, %rd10799, %rd11148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7597,%dummy}, %rd18769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7598}, %rd18769;
	}
	shf.r.wrap.b32 	%r7599, %r7598, %r7597, 14;
	shf.r.wrap.b32 	%r7600, %r7597, %r7598, 14;
	mov.b64 	%rd11150, {%r7600, %r7599};
	shf.r.wrap.b32 	%r7601, %r7598, %r7597, 18;
	shf.r.wrap.b32 	%r7602, %r7597, %r7598, 18;
	mov.b64 	%rd11151, {%r7602, %r7601};
	xor.b64  	%rd11152, %rd11151, %rd11150;
	shf.l.wrap.b32 	%r7603, %r7597, %r7598, 23;
	shf.l.wrap.b32 	%r7604, %r7598, %r7597, 23;
	mov.b64 	%rd11153, {%r7604, %r7603};
	xor.b64  	%rd11154, %rd11152, %rd11153;
	xor.b64  	%rd11155, %rd11111, %rd11084;
	and.b64  	%rd11156, %rd18769, %rd11155;
	xor.b64  	%rd11157, %rd11156, %rd11084;
	add.s64 	%rd11158, %rd11057, %rd18803;
	ld.const.u64 	%rd11159, [%rd11149];
	add.s64 	%rd11160, %rd11158, %rd11159;
	add.s64 	%rd11161, %rd11160, %rd11157;
	add.s64 	%rd11162, %rd11161, %rd11154;
	add.s64 	%rd18768, %rd11162, %rd11068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7605,%dummy}, %rd18765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7606}, %rd18765;
	}
	shf.r.wrap.b32 	%r7607, %r7606, %r7605, 28;
	shf.r.wrap.b32 	%r7608, %r7605, %r7606, 28;
	mov.b64 	%rd11163, {%r7608, %r7607};
	shf.l.wrap.b32 	%r7609, %r7605, %r7606, 30;
	shf.l.wrap.b32 	%r7610, %r7606, %r7605, 30;
	mov.b64 	%rd11164, {%r7610, %r7609};
	xor.b64  	%rd11165, %rd11164, %rd11163;
	shf.l.wrap.b32 	%r7611, %r7605, %r7606, 25;
	shf.l.wrap.b32 	%r7612, %r7606, %r7605, 25;
	mov.b64 	%rd11166, {%r7612, %r7611};
	xor.b64  	%rd11167, %rd11165, %rd11166;
	and.b64  	%rd11168, %rd18765, %rd11122;
	xor.b64  	%rd11169, %rd18765, %rd11122;
	and.b64  	%rd11170, %rd11169, %rd11095;
	or.b64  	%rd11171, %rd11170, %rd11168;
	add.s64 	%rd11172, %rd11162, %rd11171;
	add.s64 	%rd18764, %rd11172, %rd11167;
	add.s32 	%r7613, %r13014, 14;
	mul.wide.s32 	%rd11173, %r7613, 8;
	add.s64 	%rd11174, %rd10799, %rd11173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7614,%dummy}, %rd18768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7615}, %rd18768;
	}
	shf.r.wrap.b32 	%r7616, %r7615, %r7614, 14;
	shf.r.wrap.b32 	%r7617, %r7614, %r7615, 14;
	mov.b64 	%rd11175, {%r7617, %r7616};
	shf.r.wrap.b32 	%r7618, %r7615, %r7614, 18;
	shf.r.wrap.b32 	%r7619, %r7614, %r7615, 18;
	mov.b64 	%rd11176, {%r7619, %r7618};
	xor.b64  	%rd11177, %rd11176, %rd11175;
	shf.l.wrap.b32 	%r7620, %r7614, %r7615, 23;
	shf.l.wrap.b32 	%r7621, %r7615, %r7614, 23;
	mov.b64 	%rd11178, {%r7621, %r7620};
	xor.b64  	%rd11179, %rd11177, %rd11178;
	xor.b64  	%rd11180, %rd18769, %rd11111;
	and.b64  	%rd11181, %rd18768, %rd11180;
	xor.b64  	%rd11182, %rd11181, %rd11111;
	add.s64 	%rd11183, %rd11084, %rd18802;
	ld.const.u64 	%rd11184, [%rd11174];
	add.s64 	%rd11185, %rd11183, %rd11184;
	add.s64 	%rd11186, %rd11185, %rd11182;
	add.s64 	%rd11187, %rd11186, %rd11179;
	add.s64 	%rd18767, %rd11187, %rd11095;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7622,%dummy}, %rd18764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7623}, %rd18764;
	}
	shf.r.wrap.b32 	%r7624, %r7623, %r7622, 28;
	shf.r.wrap.b32 	%r7625, %r7622, %r7623, 28;
	mov.b64 	%rd11188, {%r7625, %r7624};
	shf.l.wrap.b32 	%r7626, %r7622, %r7623, 30;
	shf.l.wrap.b32 	%r7627, %r7623, %r7622, 30;
	mov.b64 	%rd11189, {%r7627, %r7626};
	xor.b64  	%rd11190, %rd11189, %rd11188;
	shf.l.wrap.b32 	%r7628, %r7622, %r7623, 25;
	shf.l.wrap.b32 	%r7629, %r7623, %r7622, 25;
	mov.b64 	%rd11191, {%r7629, %r7628};
	xor.b64  	%rd11192, %rd11190, %rd11191;
	and.b64  	%rd11193, %rd18764, %rd18765;
	xor.b64  	%rd11194, %rd18764, %rd18765;
	and.b64  	%rd11195, %rd11194, %rd11122;
	or.b64  	%rd11196, %rd11195, %rd11193;
	add.s64 	%rd11197, %rd11187, %rd11196;
	add.s64 	%rd18763, %rd11197, %rd11192;
	add.s32 	%r7630, %r13014, 15;
	mul.wide.s32 	%rd11198, %r7630, 8;
	add.s64 	%rd11199, %rd10799, %rd11198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7631,%dummy}, %rd18767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7632}, %rd18767;
	}
	shf.r.wrap.b32 	%r7633, %r7632, %r7631, 14;
	shf.r.wrap.b32 	%r7634, %r7631, %r7632, 14;
	mov.b64 	%rd11200, {%r7634, %r7633};
	shf.r.wrap.b32 	%r7635, %r7632, %r7631, 18;
	shf.r.wrap.b32 	%r7636, %r7631, %r7632, 18;
	mov.b64 	%rd11201, {%r7636, %r7635};
	xor.b64  	%rd11202, %rd11201, %rd11200;
	shf.l.wrap.b32 	%r7637, %r7631, %r7632, 23;
	shf.l.wrap.b32 	%r7638, %r7632, %r7631, 23;
	mov.b64 	%rd11203, {%r7638, %r7637};
	xor.b64  	%rd11204, %rd11202, %rd11203;
	xor.b64  	%rd11205, %rd18768, %rd18769;
	and.b64  	%rd11206, %rd18767, %rd11205;
	xor.b64  	%rd11207, %rd11206, %rd18769;
	add.s64 	%rd11208, %rd11111, %rd18754;
	ld.const.u64 	%rd11209, [%rd11199];
	add.s64 	%rd11210, %rd11208, %rd11209;
	add.s64 	%rd11211, %rd11210, %rd11207;
	add.s64 	%rd11212, %rd11211, %rd11204;
	add.s64 	%rd18766, %rd11212, %rd11122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7639,%dummy}, %rd18763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7640}, %rd18763;
	}
	shf.r.wrap.b32 	%r7641, %r7640, %r7639, 28;
	shf.r.wrap.b32 	%r7642, %r7639, %r7640, 28;
	mov.b64 	%rd11213, {%r7642, %r7641};
	shf.l.wrap.b32 	%r7643, %r7639, %r7640, 30;
	shf.l.wrap.b32 	%r7644, %r7640, %r7639, 30;
	mov.b64 	%rd11214, {%r7644, %r7643};
	xor.b64  	%rd11215, %rd11214, %rd11213;
	shf.l.wrap.b32 	%r7645, %r7639, %r7640, 25;
	shf.l.wrap.b32 	%r7646, %r7640, %r7639, 25;
	mov.b64 	%rd11216, {%r7646, %r7645};
	xor.b64  	%rd11217, %rd11215, %rd11216;
	and.b64  	%rd11218, %rd18763, %rd18764;
	xor.b64  	%rd11219, %rd18763, %rd18764;
	and.b64  	%rd11220, %rd11219, %rd18765;
	or.b64  	%rd11221, %rd11220, %rd11218;
	add.s64 	%rd11222, %rd11212, %rd11221;
	add.s64 	%rd18762, %rd11222, %rd11217;
	add.s32 	%r13014, %r13014, 16;
	setp.lt.s32	%p143, %r13014, 80;
	@%p143 bra 	BB0_230;

	add.s64 	%rd18785, %rd18762, %rd773;
	st.local.u64 	[%rd1], %rd18785;
	add.s64 	%rd18784, %rd18763, %rd774;
	st.local.u64 	[%rd1+8], %rd18784;
	add.s64 	%rd18783, %rd18764, %rd775;
	st.local.u64 	[%rd1+16], %rd18783;
	add.s64 	%rd18782, %rd18765, %rd772;
	st.local.u64 	[%rd1+24], %rd18782;
	add.s64 	%rd18781, %rd18766, %rd768;
	st.local.u64 	[%rd1+32], %rd18781;
	add.s64 	%rd18780, %rd18767, %rd770;
	st.local.u64 	[%rd1+40], %rd18780;
	add.s64 	%rd18779, %rd18768, %rd769;
	st.local.u64 	[%rd1+48], %rd18779;
	add.s64 	%rd18778, %rd18769, %rd771;
	st.local.u64 	[%rd1+56], %rd18778;
	mov.u64 	%rd18802, 0;
	st.local.u64 	[%rd1+64], %rd18802;
	st.local.u64 	[%rd1+72], %rd18802;
	st.local.u64 	[%rd1+80], %rd18802;
	st.local.u64 	[%rd1+88], %rd18802;
	st.local.u64 	[%rd1+96], %rd18802;
	st.local.u64 	[%rd1+104], %rd18802;
	st.local.u64 	[%rd1+112], %rd18802;
	st.local.u64 	[%rd1+120], %rd18802;
	st.local.u64 	[%rd1+128], %rd18802;
	st.local.u64 	[%rd1+136], %rd18802;
	st.local.u64 	[%rd1+144], %rd18802;
	st.local.u64 	[%rd1+152], %rd18802;
	st.local.u64 	[%rd1+160], %rd18802;
	st.local.u64 	[%rd1+168], %rd18802;
	st.local.u64 	[%rd1+176], %rd18802;
	st.local.u64 	[%rd1+184], %rd18802;
	mov.u64 	%rd18803, %rd18802;
	mov.u64 	%rd18804, %rd18802;
	mov.u64 	%rd18805, %rd18802;
	mov.u64 	%rd18806, %rd18802;
	mov.u64 	%rd18807, %rd18802;
	mov.u64 	%rd18808, %rd18802;
	mov.u64 	%rd18824, %rd18802;
	mov.u64 	%rd18823, %rd18802;
	mov.u64 	%rd18822, %rd18802;
	mov.u64 	%rd18821, %rd18802;
	mov.u64 	%rd18820, %rd18802;
	mov.u64 	%rd18819, %rd18802;
	mov.u64 	%rd18818, %rd18802;
	mov.u64 	%rd18817, %rd18802;
	bra.uni 	BB0_232;

BB0_228:
	ld.local.u64 	%rd18785, [%rd1];
	ld.local.u64 	%rd18784, [%rd1+8];
	ld.local.u64 	%rd18783, [%rd1+16];
	ld.local.u64 	%rd18782, [%rd1+24];
	ld.local.u64 	%rd18781, [%rd1+32];
	ld.local.u64 	%rd18780, [%rd1+40];
	ld.local.u64 	%rd18779, [%rd1+48];
	ld.local.u64 	%rd18778, [%rd1+56];

BB0_232:
	ld.local.u32 	%r7648, [%rd1+192];
	shl.b32 	%r7649, %r7648, 3;
	cvt.s64.s32	%rd18801, %r7649;
	st.local.u64 	[%rd1+184], %rd18801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7650,%dummy}, %rd18781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7651}, %rd18781;
	}
	shf.r.wrap.b32 	%r7652, %r7651, %r7650, 18;
	shf.r.wrap.b32 	%r7653, %r7650, %r7651, 18;
	mov.b64 	%rd11238, {%r7653, %r7652};
	shf.r.wrap.b32 	%r7654, %r7651, %r7650, 14;
	shf.r.wrap.b32 	%r7655, %r7650, %r7651, 14;
	mov.b64 	%rd11239, {%r7655, %r7654};
	xor.b64  	%rd11240, %rd11238, %rd11239;
	shf.l.wrap.b32 	%r7656, %r7650, %r7651, 23;
	shf.l.wrap.b32 	%r7657, %r7651, %r7650, 23;
	mov.b64 	%rd11241, {%r7657, %r7656};
	xor.b64  	%rd11242, %rd11240, %rd11241;
	xor.b64  	%rd11243, %rd18780, %rd18779;
	and.b64  	%rd11244, %rd11243, %rd18781;
	xor.b64  	%rd11245, %rd11244, %rd18779;
	add.s64 	%rd11246, %rd18778, %rd18610;
	add.s64 	%rd11247, %rd11246, %rd11245;
	add.s64 	%rd11248, %rd11247, %rd18817;
	add.s64 	%rd11249, %rd11248, %rd11242;
	add.s64 	%rd11250, %rd11249, %rd18782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7658}, %rd18785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7659,%dummy}, %rd18785;
	}
	shf.l.wrap.b32 	%r7660, %r7659, %r7658, 30;
	shf.l.wrap.b32 	%r7661, %r7658, %r7659, 30;
	mov.b64 	%rd11251, {%r7661, %r7660};
	shf.r.wrap.b32 	%r7662, %r7658, %r7659, 28;
	shf.r.wrap.b32 	%r7663, %r7659, %r7658, 28;
	mov.b64 	%rd11252, {%r7663, %r7662};
	xor.b64  	%rd11253, %rd11251, %rd11252;
	shf.l.wrap.b32 	%r7664, %r7659, %r7658, 25;
	shf.l.wrap.b32 	%r7665, %r7658, %r7659, 25;
	mov.b64 	%rd11254, {%r7665, %r7664};
	xor.b64  	%rd11255, %rd11253, %rd11254;
	xor.b64  	%rd11256, %rd18785, %rd18784;
	and.b64  	%rd11257, %rd11256, %rd18783;
	and.b64  	%rd11258, %rd18785, %rd18784;
	or.b64  	%rd11259, %rd11257, %rd11258;
	add.s64 	%rd11260, %rd11249, %rd11259;
	add.s64 	%rd11261, %rd11260, %rd11255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7666,%dummy}, %rd11250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7667}, %rd11250;
	}
	shf.r.wrap.b32 	%r7668, %r7667, %r7666, 14;
	shf.r.wrap.b32 	%r7669, %r7666, %r7667, 14;
	mov.b64 	%rd11262, {%r7669, %r7668};
	shf.r.wrap.b32 	%r7670, %r7667, %r7666, 18;
	shf.r.wrap.b32 	%r7671, %r7666, %r7667, 18;
	mov.b64 	%rd11263, {%r7671, %r7670};
	xor.b64  	%rd11264, %rd11263, %rd11262;
	shf.l.wrap.b32 	%r7672, %r7666, %r7667, 23;
	shf.l.wrap.b32 	%r7673, %r7667, %r7666, 23;
	mov.b64 	%rd11265, {%r7673, %r7672};
	xor.b64  	%rd11266, %rd11264, %rd11265;
	xor.b64  	%rd11267, %rd18781, %rd18780;
	and.b64  	%rd11268, %rd11250, %rd11267;
	xor.b64  	%rd11269, %rd11268, %rd18780;
	add.s64 	%rd11270, %rd18779, %rd18609;
	add.s64 	%rd11271, %rd11270, %rd18818;
	add.s64 	%rd11272, %rd11271, %rd11269;
	add.s64 	%rd11273, %rd11272, %rd11266;
	add.s64 	%rd11274, %rd11273, %rd18783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7674,%dummy}, %rd11261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7675}, %rd11261;
	}
	shf.r.wrap.b32 	%r7676, %r7675, %r7674, 28;
	shf.r.wrap.b32 	%r7677, %r7674, %r7675, 28;
	mov.b64 	%rd11275, {%r7677, %r7676};
	shf.l.wrap.b32 	%r7678, %r7674, %r7675, 30;
	shf.l.wrap.b32 	%r7679, %r7675, %r7674, 30;
	mov.b64 	%rd11276, {%r7679, %r7678};
	xor.b64  	%rd11277, %rd11276, %rd11275;
	shf.l.wrap.b32 	%r7680, %r7674, %r7675, 25;
	shf.l.wrap.b32 	%r7681, %r7675, %r7674, 25;
	mov.b64 	%rd11278, {%r7681, %r7680};
	xor.b64  	%rd11279, %rd11277, %rd11278;
	and.b64  	%rd11280, %rd11261, %rd18785;
	xor.b64  	%rd11281, %rd11261, %rd18785;
	and.b64  	%rd11282, %rd11281, %rd18784;
	or.b64  	%rd11283, %rd11282, %rd11280;
	add.s64 	%rd11284, %rd11273, %rd11283;
	add.s64 	%rd11285, %rd11284, %rd11279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7682,%dummy}, %rd11274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7683}, %rd11274;
	}
	shf.r.wrap.b32 	%r7684, %r7683, %r7682, 14;
	shf.r.wrap.b32 	%r7685, %r7682, %r7683, 14;
	mov.b64 	%rd11286, {%r7685, %r7684};
	shf.r.wrap.b32 	%r7686, %r7683, %r7682, 18;
	shf.r.wrap.b32 	%r7687, %r7682, %r7683, 18;
	mov.b64 	%rd11287, {%r7687, %r7686};
	xor.b64  	%rd11288, %rd11287, %rd11286;
	shf.l.wrap.b32 	%r7688, %r7682, %r7683, 23;
	shf.l.wrap.b32 	%r7689, %r7683, %r7682, 23;
	mov.b64 	%rd11289, {%r7689, %r7688};
	xor.b64  	%rd11290, %rd11288, %rd11289;
	xor.b64  	%rd11291, %rd11250, %rd18781;
	and.b64  	%rd11292, %rd11274, %rd11291;
	xor.b64  	%rd11293, %rd11292, %rd18781;
	add.s64 	%rd11294, %rd18780, %rd18608;
	add.s64 	%rd11295, %rd11294, %rd18819;
	add.s64 	%rd11296, %rd11295, %rd11293;
	add.s64 	%rd11297, %rd11296, %rd11290;
	add.s64 	%rd11298, %rd11297, %rd18784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7690,%dummy}, %rd11285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7691}, %rd11285;
	}
	shf.r.wrap.b32 	%r7692, %r7691, %r7690, 28;
	shf.r.wrap.b32 	%r7693, %r7690, %r7691, 28;
	mov.b64 	%rd11299, {%r7693, %r7692};
	shf.l.wrap.b32 	%r7694, %r7690, %r7691, 30;
	shf.l.wrap.b32 	%r7695, %r7691, %r7690, 30;
	mov.b64 	%rd11300, {%r7695, %r7694};
	xor.b64  	%rd11301, %rd11300, %rd11299;
	shf.l.wrap.b32 	%r7696, %r7690, %r7691, 25;
	shf.l.wrap.b32 	%r7697, %r7691, %r7690, 25;
	mov.b64 	%rd11302, {%r7697, %r7696};
	xor.b64  	%rd11303, %rd11301, %rd11302;
	and.b64  	%rd11304, %rd11285, %rd11261;
	xor.b64  	%rd11305, %rd11285, %rd11261;
	and.b64  	%rd11306, %rd11305, %rd18785;
	or.b64  	%rd11307, %rd11306, %rd11304;
	add.s64 	%rd11308, %rd11297, %rd11307;
	add.s64 	%rd11309, %rd11308, %rd11303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7698,%dummy}, %rd11298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7699}, %rd11298;
	}
	shf.r.wrap.b32 	%r7700, %r7699, %r7698, 14;
	shf.r.wrap.b32 	%r7701, %r7698, %r7699, 14;
	mov.b64 	%rd11310, {%r7701, %r7700};
	shf.r.wrap.b32 	%r7702, %r7699, %r7698, 18;
	shf.r.wrap.b32 	%r7703, %r7698, %r7699, 18;
	mov.b64 	%rd11311, {%r7703, %r7702};
	xor.b64  	%rd11312, %rd11311, %rd11310;
	shf.l.wrap.b32 	%r7704, %r7698, %r7699, 23;
	shf.l.wrap.b32 	%r7705, %r7699, %r7698, 23;
	mov.b64 	%rd11313, {%r7705, %r7704};
	xor.b64  	%rd11314, %rd11312, %rd11313;
	xor.b64  	%rd11315, %rd11274, %rd11250;
	and.b64  	%rd11316, %rd11298, %rd11315;
	xor.b64  	%rd11317, %rd11316, %rd11250;
	add.s64 	%rd11318, %rd18781, %rd18607;
	add.s64 	%rd11319, %rd11318, %rd18820;
	add.s64 	%rd11320, %rd11319, %rd11317;
	add.s64 	%rd11321, %rd11320, %rd11314;
	add.s64 	%rd11322, %rd11321, %rd18785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7706,%dummy}, %rd11309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7707}, %rd11309;
	}
	shf.r.wrap.b32 	%r7708, %r7707, %r7706, 28;
	shf.r.wrap.b32 	%r7709, %r7706, %r7707, 28;
	mov.b64 	%rd11323, {%r7709, %r7708};
	shf.l.wrap.b32 	%r7710, %r7706, %r7707, 30;
	shf.l.wrap.b32 	%r7711, %r7707, %r7706, 30;
	mov.b64 	%rd11324, {%r7711, %r7710};
	xor.b64  	%rd11325, %rd11324, %rd11323;
	shf.l.wrap.b32 	%r7712, %r7706, %r7707, 25;
	shf.l.wrap.b32 	%r7713, %r7707, %r7706, 25;
	mov.b64 	%rd11326, {%r7713, %r7712};
	xor.b64  	%rd11327, %rd11325, %rd11326;
	and.b64  	%rd11328, %rd11309, %rd11285;
	xor.b64  	%rd11329, %rd11309, %rd11285;
	and.b64  	%rd11330, %rd11329, %rd11261;
	or.b64  	%rd11331, %rd11330, %rd11328;
	add.s64 	%rd11332, %rd11321, %rd11331;
	add.s64 	%rd11333, %rd11332, %rd11327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7714,%dummy}, %rd11322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7715}, %rd11322;
	}
	shf.r.wrap.b32 	%r7716, %r7715, %r7714, 14;
	shf.r.wrap.b32 	%r7717, %r7714, %r7715, 14;
	mov.b64 	%rd11334, {%r7717, %r7716};
	shf.r.wrap.b32 	%r7718, %r7715, %r7714, 18;
	shf.r.wrap.b32 	%r7719, %r7714, %r7715, 18;
	mov.b64 	%rd11335, {%r7719, %r7718};
	xor.b64  	%rd11336, %rd11335, %rd11334;
	shf.l.wrap.b32 	%r7720, %r7714, %r7715, 23;
	shf.l.wrap.b32 	%r7721, %r7715, %r7714, 23;
	mov.b64 	%rd11337, {%r7721, %r7720};
	xor.b64  	%rd11338, %rd11336, %rd11337;
	xor.b64  	%rd11339, %rd11298, %rd11274;
	and.b64  	%rd11340, %rd11322, %rd11339;
	xor.b64  	%rd11341, %rd11340, %rd11274;
	add.s64 	%rd11342, %rd18821, %rd18606;
	add.s64 	%rd11343, %rd11342, %rd11250;
	add.s64 	%rd11344, %rd11343, %rd11341;
	add.s64 	%rd11345, %rd11344, %rd11338;
	add.s64 	%rd11346, %rd11345, %rd11261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7722,%dummy}, %rd11333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7723}, %rd11333;
	}
	shf.r.wrap.b32 	%r7724, %r7723, %r7722, 28;
	shf.r.wrap.b32 	%r7725, %r7722, %r7723, 28;
	mov.b64 	%rd11347, {%r7725, %r7724};
	shf.l.wrap.b32 	%r7726, %r7722, %r7723, 30;
	shf.l.wrap.b32 	%r7727, %r7723, %r7722, 30;
	mov.b64 	%rd11348, {%r7727, %r7726};
	xor.b64  	%rd11349, %rd11348, %rd11347;
	shf.l.wrap.b32 	%r7728, %r7722, %r7723, 25;
	shf.l.wrap.b32 	%r7729, %r7723, %r7722, 25;
	mov.b64 	%rd11350, {%r7729, %r7728};
	xor.b64  	%rd11351, %rd11349, %rd11350;
	and.b64  	%rd11352, %rd11333, %rd11309;
	xor.b64  	%rd11353, %rd11333, %rd11309;
	and.b64  	%rd11354, %rd11353, %rd11285;
	or.b64  	%rd11355, %rd11354, %rd11352;
	add.s64 	%rd11356, %rd11345, %rd11355;
	add.s64 	%rd11357, %rd11356, %rd11351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7730,%dummy}, %rd11346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7731}, %rd11346;
	}
	shf.r.wrap.b32 	%r7732, %r7731, %r7730, 14;
	shf.r.wrap.b32 	%r7733, %r7730, %r7731, 14;
	mov.b64 	%rd11358, {%r7733, %r7732};
	shf.r.wrap.b32 	%r7734, %r7731, %r7730, 18;
	shf.r.wrap.b32 	%r7735, %r7730, %r7731, 18;
	mov.b64 	%rd11359, {%r7735, %r7734};
	xor.b64  	%rd11360, %rd11359, %rd11358;
	shf.l.wrap.b32 	%r7736, %r7730, %r7731, 23;
	shf.l.wrap.b32 	%r7737, %r7731, %r7730, 23;
	mov.b64 	%rd11361, {%r7737, %r7736};
	xor.b64  	%rd11362, %rd11360, %rd11361;
	xor.b64  	%rd11363, %rd11322, %rd11298;
	and.b64  	%rd11364, %rd11346, %rd11363;
	xor.b64  	%rd11365, %rd11364, %rd11298;
	add.s64 	%rd11366, %rd18822, %rd18605;
	add.s64 	%rd11367, %rd11366, %rd11274;
	add.s64 	%rd11368, %rd11367, %rd11365;
	add.s64 	%rd11369, %rd11368, %rd11362;
	add.s64 	%rd11370, %rd11369, %rd11285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7738,%dummy}, %rd11357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7739}, %rd11357;
	}
	shf.r.wrap.b32 	%r7740, %r7739, %r7738, 28;
	shf.r.wrap.b32 	%r7741, %r7738, %r7739, 28;
	mov.b64 	%rd11371, {%r7741, %r7740};
	shf.l.wrap.b32 	%r7742, %r7738, %r7739, 30;
	shf.l.wrap.b32 	%r7743, %r7739, %r7738, 30;
	mov.b64 	%rd11372, {%r7743, %r7742};
	xor.b64  	%rd11373, %rd11372, %rd11371;
	shf.l.wrap.b32 	%r7744, %r7738, %r7739, 25;
	shf.l.wrap.b32 	%r7745, %r7739, %r7738, 25;
	mov.b64 	%rd11374, {%r7745, %r7744};
	xor.b64  	%rd11375, %rd11373, %rd11374;
	and.b64  	%rd11376, %rd11357, %rd11333;
	xor.b64  	%rd11377, %rd11357, %rd11333;
	and.b64  	%rd11378, %rd11377, %rd11309;
	or.b64  	%rd11379, %rd11378, %rd11376;
	add.s64 	%rd11380, %rd11369, %rd11379;
	add.s64 	%rd11381, %rd11380, %rd11375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7746,%dummy}, %rd11370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7747}, %rd11370;
	}
	shf.r.wrap.b32 	%r7748, %r7747, %r7746, 14;
	shf.r.wrap.b32 	%r7749, %r7746, %r7747, 14;
	mov.b64 	%rd11382, {%r7749, %r7748};
	shf.r.wrap.b32 	%r7750, %r7747, %r7746, 18;
	shf.r.wrap.b32 	%r7751, %r7746, %r7747, 18;
	mov.b64 	%rd11383, {%r7751, %r7750};
	xor.b64  	%rd11384, %rd11383, %rd11382;
	shf.l.wrap.b32 	%r7752, %r7746, %r7747, 23;
	shf.l.wrap.b32 	%r7753, %r7747, %r7746, 23;
	mov.b64 	%rd11385, {%r7753, %r7752};
	xor.b64  	%rd11386, %rd11384, %rd11385;
	xor.b64  	%rd11387, %rd11346, %rd11322;
	and.b64  	%rd11388, %rd11370, %rd11387;
	xor.b64  	%rd11389, %rd11388, %rd11322;
	add.s64 	%rd11390, %rd18823, %rd18604;
	add.s64 	%rd11391, %rd11390, %rd11298;
	add.s64 	%rd11392, %rd11391, %rd11389;
	add.s64 	%rd11393, %rd11392, %rd11386;
	add.s64 	%rd11394, %rd11393, %rd11309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7754,%dummy}, %rd11381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7755}, %rd11381;
	}
	shf.r.wrap.b32 	%r7756, %r7755, %r7754, 28;
	shf.r.wrap.b32 	%r7757, %r7754, %r7755, 28;
	mov.b64 	%rd11395, {%r7757, %r7756};
	shf.l.wrap.b32 	%r7758, %r7754, %r7755, 30;
	shf.l.wrap.b32 	%r7759, %r7755, %r7754, 30;
	mov.b64 	%rd11396, {%r7759, %r7758};
	xor.b64  	%rd11397, %rd11396, %rd11395;
	shf.l.wrap.b32 	%r7760, %r7754, %r7755, 25;
	shf.l.wrap.b32 	%r7761, %r7755, %r7754, 25;
	mov.b64 	%rd11398, {%r7761, %r7760};
	xor.b64  	%rd11399, %rd11397, %rd11398;
	and.b64  	%rd11400, %rd11381, %rd11357;
	xor.b64  	%rd11401, %rd11381, %rd11357;
	and.b64  	%rd11402, %rd11401, %rd11333;
	or.b64  	%rd11403, %rd11402, %rd11400;
	add.s64 	%rd11404, %rd11393, %rd11403;
	add.s64 	%rd11405, %rd11404, %rd11399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7762,%dummy}, %rd11394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7763}, %rd11394;
	}
	shf.r.wrap.b32 	%r7764, %r7763, %r7762, 14;
	shf.r.wrap.b32 	%r7765, %r7762, %r7763, 14;
	mov.b64 	%rd11406, {%r7765, %r7764};
	shf.r.wrap.b32 	%r7766, %r7763, %r7762, 18;
	shf.r.wrap.b32 	%r7767, %r7762, %r7763, 18;
	mov.b64 	%rd11407, {%r7767, %r7766};
	xor.b64  	%rd11408, %rd11407, %rd11406;
	shf.l.wrap.b32 	%r7768, %r7762, %r7763, 23;
	shf.l.wrap.b32 	%r7769, %r7763, %r7762, 23;
	mov.b64 	%rd11409, {%r7769, %r7768};
	xor.b64  	%rd11410, %rd11408, %rd11409;
	xor.b64  	%rd11411, %rd11370, %rd11346;
	and.b64  	%rd11412, %rd11394, %rd11411;
	xor.b64  	%rd11413, %rd11412, %rd11346;
	add.s64 	%rd11414, %rd18824, %rd18603;
	add.s64 	%rd11415, %rd11414, %rd11322;
	add.s64 	%rd11416, %rd11415, %rd11413;
	add.s64 	%rd11417, %rd11416, %rd11410;
	add.s64 	%rd11418, %rd11417, %rd11333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7770,%dummy}, %rd11405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7771}, %rd11405;
	}
	shf.r.wrap.b32 	%r7772, %r7771, %r7770, 28;
	shf.r.wrap.b32 	%r7773, %r7770, %r7771, 28;
	mov.b64 	%rd11419, {%r7773, %r7772};
	shf.l.wrap.b32 	%r7774, %r7770, %r7771, 30;
	shf.l.wrap.b32 	%r7775, %r7771, %r7770, 30;
	mov.b64 	%rd11420, {%r7775, %r7774};
	xor.b64  	%rd11421, %rd11420, %rd11419;
	shf.l.wrap.b32 	%r7776, %r7770, %r7771, 25;
	shf.l.wrap.b32 	%r7777, %r7771, %r7770, 25;
	mov.b64 	%rd11422, {%r7777, %r7776};
	xor.b64  	%rd11423, %rd11421, %rd11422;
	and.b64  	%rd11424, %rd11405, %rd11381;
	xor.b64  	%rd11425, %rd11405, %rd11381;
	and.b64  	%rd11426, %rd11425, %rd11357;
	or.b64  	%rd11427, %rd11426, %rd11424;
	add.s64 	%rd11428, %rd11417, %rd11427;
	add.s64 	%rd11429, %rd11428, %rd11423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7778,%dummy}, %rd11418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7779}, %rd11418;
	}
	shf.r.wrap.b32 	%r7780, %r7779, %r7778, 14;
	shf.r.wrap.b32 	%r7781, %r7778, %r7779, 14;
	mov.b64 	%rd11430, {%r7781, %r7780};
	shf.r.wrap.b32 	%r7782, %r7779, %r7778, 18;
	shf.r.wrap.b32 	%r7783, %r7778, %r7779, 18;
	mov.b64 	%rd11431, {%r7783, %r7782};
	xor.b64  	%rd11432, %rd11431, %rd11430;
	shf.l.wrap.b32 	%r7784, %r7778, %r7779, 23;
	shf.l.wrap.b32 	%r7785, %r7779, %r7778, 23;
	mov.b64 	%rd11433, {%r7785, %r7784};
	xor.b64  	%rd11434, %rd11432, %rd11433;
	xor.b64  	%rd11435, %rd11394, %rd11370;
	and.b64  	%rd11436, %rd11418, %rd11435;
	xor.b64  	%rd11437, %rd11436, %rd11370;
	add.s64 	%rd11438, %rd18808, %rd18602;
	add.s64 	%rd11439, %rd11438, %rd11346;
	add.s64 	%rd11440, %rd11439, %rd11437;
	add.s64 	%rd11441, %rd11440, %rd11434;
	add.s64 	%rd11442, %rd11441, %rd11357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7786,%dummy}, %rd11429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7787}, %rd11429;
	}
	shf.r.wrap.b32 	%r7788, %r7787, %r7786, 28;
	shf.r.wrap.b32 	%r7789, %r7786, %r7787, 28;
	mov.b64 	%rd11443, {%r7789, %r7788};
	shf.l.wrap.b32 	%r7790, %r7786, %r7787, 30;
	shf.l.wrap.b32 	%r7791, %r7787, %r7786, 30;
	mov.b64 	%rd11444, {%r7791, %r7790};
	xor.b64  	%rd11445, %rd11444, %rd11443;
	shf.l.wrap.b32 	%r7792, %r7786, %r7787, 25;
	shf.l.wrap.b32 	%r7793, %r7787, %r7786, 25;
	mov.b64 	%rd11446, {%r7793, %r7792};
	xor.b64  	%rd11447, %rd11445, %rd11446;
	and.b64  	%rd11448, %rd11429, %rd11405;
	xor.b64  	%rd11449, %rd11429, %rd11405;
	and.b64  	%rd11450, %rd11449, %rd11381;
	or.b64  	%rd11451, %rd11450, %rd11448;
	add.s64 	%rd11452, %rd11441, %rd11451;
	add.s64 	%rd11453, %rd11452, %rd11447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7794,%dummy}, %rd11442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7795}, %rd11442;
	}
	shf.r.wrap.b32 	%r7796, %r7795, %r7794, 14;
	shf.r.wrap.b32 	%r7797, %r7794, %r7795, 14;
	mov.b64 	%rd11454, {%r7797, %r7796};
	shf.r.wrap.b32 	%r7798, %r7795, %r7794, 18;
	shf.r.wrap.b32 	%r7799, %r7794, %r7795, 18;
	mov.b64 	%rd11455, {%r7799, %r7798};
	xor.b64  	%rd11456, %rd11455, %rd11454;
	shf.l.wrap.b32 	%r7800, %r7794, %r7795, 23;
	shf.l.wrap.b32 	%r7801, %r7795, %r7794, 23;
	mov.b64 	%rd11457, {%r7801, %r7800};
	xor.b64  	%rd11458, %rd11456, %rd11457;
	xor.b64  	%rd11459, %rd11418, %rd11394;
	and.b64  	%rd11460, %rd11442, %rd11459;
	xor.b64  	%rd11461, %rd11460, %rd11394;
	add.s64 	%rd11462, %rd18807, %rd18601;
	add.s64 	%rd11463, %rd11462, %rd11370;
	add.s64 	%rd11464, %rd11463, %rd11461;
	add.s64 	%rd11465, %rd11464, %rd11458;
	add.s64 	%rd11466, %rd11465, %rd11381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7802,%dummy}, %rd11453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7803}, %rd11453;
	}
	shf.r.wrap.b32 	%r7804, %r7803, %r7802, 28;
	shf.r.wrap.b32 	%r7805, %r7802, %r7803, 28;
	mov.b64 	%rd11467, {%r7805, %r7804};
	shf.l.wrap.b32 	%r7806, %r7802, %r7803, 30;
	shf.l.wrap.b32 	%r7807, %r7803, %r7802, 30;
	mov.b64 	%rd11468, {%r7807, %r7806};
	xor.b64  	%rd11469, %rd11468, %rd11467;
	shf.l.wrap.b32 	%r7808, %r7802, %r7803, 25;
	shf.l.wrap.b32 	%r7809, %r7803, %r7802, 25;
	mov.b64 	%rd11470, {%r7809, %r7808};
	xor.b64  	%rd11471, %rd11469, %rd11470;
	and.b64  	%rd11472, %rd11453, %rd11429;
	xor.b64  	%rd11473, %rd11453, %rd11429;
	and.b64  	%rd11474, %rd11473, %rd11405;
	or.b64  	%rd11475, %rd11474, %rd11472;
	add.s64 	%rd11476, %rd11465, %rd11475;
	add.s64 	%rd11477, %rd11476, %rd11471;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7810,%dummy}, %rd11466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7811}, %rd11466;
	}
	shf.r.wrap.b32 	%r7812, %r7811, %r7810, 14;
	shf.r.wrap.b32 	%r7813, %r7810, %r7811, 14;
	mov.b64 	%rd11478, {%r7813, %r7812};
	shf.r.wrap.b32 	%r7814, %r7811, %r7810, 18;
	shf.r.wrap.b32 	%r7815, %r7810, %r7811, 18;
	mov.b64 	%rd11479, {%r7815, %r7814};
	xor.b64  	%rd11480, %rd11479, %rd11478;
	shf.l.wrap.b32 	%r7816, %r7810, %r7811, 23;
	shf.l.wrap.b32 	%r7817, %r7811, %r7810, 23;
	mov.b64 	%rd11481, {%r7817, %r7816};
	xor.b64  	%rd11482, %rd11480, %rd11481;
	xor.b64  	%rd11483, %rd11442, %rd11418;
	and.b64  	%rd11484, %rd11466, %rd11483;
	xor.b64  	%rd11485, %rd11484, %rd11418;
	add.s64 	%rd11486, %rd18806, %rd18600;
	add.s64 	%rd11487, %rd11486, %rd11394;
	add.s64 	%rd11488, %rd11487, %rd11485;
	add.s64 	%rd11489, %rd11488, %rd11482;
	add.s64 	%rd11490, %rd11489, %rd11405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7818,%dummy}, %rd11477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7819}, %rd11477;
	}
	shf.r.wrap.b32 	%r7820, %r7819, %r7818, 28;
	shf.r.wrap.b32 	%r7821, %r7818, %r7819, 28;
	mov.b64 	%rd11491, {%r7821, %r7820};
	shf.l.wrap.b32 	%r7822, %r7818, %r7819, 30;
	shf.l.wrap.b32 	%r7823, %r7819, %r7818, 30;
	mov.b64 	%rd11492, {%r7823, %r7822};
	xor.b64  	%rd11493, %rd11492, %rd11491;
	shf.l.wrap.b32 	%r7824, %r7818, %r7819, 25;
	shf.l.wrap.b32 	%r7825, %r7819, %r7818, 25;
	mov.b64 	%rd11494, {%r7825, %r7824};
	xor.b64  	%rd11495, %rd11493, %rd11494;
	and.b64  	%rd11496, %rd11477, %rd11453;
	xor.b64  	%rd11497, %rd11477, %rd11453;
	and.b64  	%rd11498, %rd11497, %rd11429;
	or.b64  	%rd11499, %rd11498, %rd11496;
	add.s64 	%rd11500, %rd11489, %rd11499;
	add.s64 	%rd11501, %rd11500, %rd11495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7826,%dummy}, %rd11490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7827}, %rd11490;
	}
	shf.r.wrap.b32 	%r7828, %r7827, %r7826, 14;
	shf.r.wrap.b32 	%r7829, %r7826, %r7827, 14;
	mov.b64 	%rd11502, {%r7829, %r7828};
	shf.r.wrap.b32 	%r7830, %r7827, %r7826, 18;
	shf.r.wrap.b32 	%r7831, %r7826, %r7827, 18;
	mov.b64 	%rd11503, {%r7831, %r7830};
	xor.b64  	%rd11504, %rd11503, %rd11502;
	shf.l.wrap.b32 	%r7832, %r7826, %r7827, 23;
	shf.l.wrap.b32 	%r7833, %r7827, %r7826, 23;
	mov.b64 	%rd11505, {%r7833, %r7832};
	xor.b64  	%rd11506, %rd11504, %rd11505;
	xor.b64  	%rd11507, %rd11466, %rd11442;
	and.b64  	%rd11508, %rd11490, %rd11507;
	xor.b64  	%rd11509, %rd11508, %rd11442;
	add.s64 	%rd11510, %rd18805, %rd18599;
	add.s64 	%rd11511, %rd11510, %rd11418;
	add.s64 	%rd11512, %rd11511, %rd11509;
	add.s64 	%rd11513, %rd11512, %rd11506;
	add.s64 	%rd11514, %rd11513, %rd11429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7834,%dummy}, %rd11501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7835}, %rd11501;
	}
	shf.r.wrap.b32 	%r7836, %r7835, %r7834, 28;
	shf.r.wrap.b32 	%r7837, %r7834, %r7835, 28;
	mov.b64 	%rd11515, {%r7837, %r7836};
	shf.l.wrap.b32 	%r7838, %r7834, %r7835, 30;
	shf.l.wrap.b32 	%r7839, %r7835, %r7834, 30;
	mov.b64 	%rd11516, {%r7839, %r7838};
	xor.b64  	%rd11517, %rd11516, %rd11515;
	shf.l.wrap.b32 	%r7840, %r7834, %r7835, 25;
	shf.l.wrap.b32 	%r7841, %r7835, %r7834, 25;
	mov.b64 	%rd11518, {%r7841, %r7840};
	xor.b64  	%rd11519, %rd11517, %rd11518;
	and.b64  	%rd11520, %rd11501, %rd11477;
	xor.b64  	%rd11521, %rd11501, %rd11477;
	and.b64  	%rd11522, %rd11521, %rd11453;
	or.b64  	%rd11523, %rd11522, %rd11520;
	add.s64 	%rd11524, %rd11513, %rd11523;
	add.s64 	%rd11525, %rd11524, %rd11519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7842,%dummy}, %rd11514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7843}, %rd11514;
	}
	shf.r.wrap.b32 	%r7844, %r7843, %r7842, 14;
	shf.r.wrap.b32 	%r7845, %r7842, %r7843, 14;
	mov.b64 	%rd11526, {%r7845, %r7844};
	shf.r.wrap.b32 	%r7846, %r7843, %r7842, 18;
	shf.r.wrap.b32 	%r7847, %r7842, %r7843, 18;
	mov.b64 	%rd11527, {%r7847, %r7846};
	xor.b64  	%rd11528, %rd11527, %rd11526;
	shf.l.wrap.b32 	%r7848, %r7842, %r7843, 23;
	shf.l.wrap.b32 	%r7849, %r7843, %r7842, 23;
	mov.b64 	%rd11529, {%r7849, %r7848};
	xor.b64  	%rd11530, %rd11528, %rd11529;
	xor.b64  	%rd11531, %rd11490, %rd11466;
	and.b64  	%rd11532, %rd11514, %rd11531;
	xor.b64  	%rd11533, %rd11532, %rd11466;
	add.s64 	%rd11534, %rd18804, %rd18598;
	add.s64 	%rd11535, %rd11534, %rd11442;
	add.s64 	%rd11536, %rd11535, %rd11533;
	add.s64 	%rd11537, %rd11536, %rd11530;
	add.s64 	%rd18816, %rd11537, %rd11453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7850,%dummy}, %rd11525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7851}, %rd11525;
	}
	shf.r.wrap.b32 	%r7852, %r7851, %r7850, 28;
	shf.r.wrap.b32 	%r7853, %r7850, %r7851, 28;
	mov.b64 	%rd11538, {%r7853, %r7852};
	shf.l.wrap.b32 	%r7854, %r7850, %r7851, 30;
	shf.l.wrap.b32 	%r7855, %r7851, %r7850, 30;
	mov.b64 	%rd11539, {%r7855, %r7854};
	xor.b64  	%rd11540, %rd11539, %rd11538;
	shf.l.wrap.b32 	%r7856, %r7850, %r7851, 25;
	shf.l.wrap.b32 	%r7857, %r7851, %r7850, 25;
	mov.b64 	%rd11541, {%r7857, %r7856};
	xor.b64  	%rd11542, %rd11540, %rd11541;
	and.b64  	%rd11543, %rd11525, %rd11501;
	xor.b64  	%rd11544, %rd11525, %rd11501;
	and.b64  	%rd11545, %rd11544, %rd11477;
	or.b64  	%rd11546, %rd11545, %rd11543;
	add.s64 	%rd11547, %rd11537, %rd11546;
	add.s64 	%rd18812, %rd11547, %rd11542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7858,%dummy}, %rd18816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7859}, %rd18816;
	}
	shf.r.wrap.b32 	%r7860, %r7859, %r7858, 14;
	shf.r.wrap.b32 	%r7861, %r7858, %r7859, 14;
	mov.b64 	%rd11548, {%r7861, %r7860};
	shf.r.wrap.b32 	%r7862, %r7859, %r7858, 18;
	shf.r.wrap.b32 	%r7863, %r7858, %r7859, 18;
	mov.b64 	%rd11549, {%r7863, %r7862};
	xor.b64  	%rd11550, %rd11549, %rd11548;
	shf.l.wrap.b32 	%r7864, %r7858, %r7859, 23;
	shf.l.wrap.b32 	%r7865, %r7859, %r7858, 23;
	mov.b64 	%rd11551, {%r7865, %r7864};
	xor.b64  	%rd11552, %rd11550, %rd11551;
	xor.b64  	%rd11553, %rd11514, %rd11490;
	and.b64  	%rd11554, %rd18816, %rd11553;
	xor.b64  	%rd11555, %rd11554, %rd11490;
	add.s64 	%rd11556, %rd18803, %rd18597;
	add.s64 	%rd11557, %rd11556, %rd11466;
	add.s64 	%rd11558, %rd11557, %rd11555;
	add.s64 	%rd11559, %rd11558, %rd11552;
	add.s64 	%rd18815, %rd11559, %rd11477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7866,%dummy}, %rd18812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7867}, %rd18812;
	}
	shf.r.wrap.b32 	%r7868, %r7867, %r7866, 28;
	shf.r.wrap.b32 	%r7869, %r7866, %r7867, 28;
	mov.b64 	%rd11560, {%r7869, %r7868};
	shf.l.wrap.b32 	%r7870, %r7866, %r7867, 30;
	shf.l.wrap.b32 	%r7871, %r7867, %r7866, 30;
	mov.b64 	%rd11561, {%r7871, %r7870};
	xor.b64  	%rd11562, %rd11561, %rd11560;
	shf.l.wrap.b32 	%r7872, %r7866, %r7867, 25;
	shf.l.wrap.b32 	%r7873, %r7867, %r7866, 25;
	mov.b64 	%rd11563, {%r7873, %r7872};
	xor.b64  	%rd11564, %rd11562, %rd11563;
	and.b64  	%rd11565, %rd18812, %rd11525;
	xor.b64  	%rd11566, %rd18812, %rd11525;
	and.b64  	%rd11567, %rd11566, %rd11501;
	or.b64  	%rd11568, %rd11567, %rd11565;
	add.s64 	%rd11569, %rd11559, %rd11568;
	add.s64 	%rd18811, %rd11569, %rd11564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7874,%dummy}, %rd18815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7875}, %rd18815;
	}
	shf.r.wrap.b32 	%r7876, %r7875, %r7874, 14;
	shf.r.wrap.b32 	%r7877, %r7874, %r7875, 14;
	mov.b64 	%rd11570, {%r7877, %r7876};
	shf.r.wrap.b32 	%r7878, %r7875, %r7874, 18;
	shf.r.wrap.b32 	%r7879, %r7874, %r7875, 18;
	mov.b64 	%rd11571, {%r7879, %r7878};
	xor.b64  	%rd11572, %rd11571, %rd11570;
	shf.l.wrap.b32 	%r7880, %r7874, %r7875, 23;
	shf.l.wrap.b32 	%r7881, %r7875, %r7874, 23;
	mov.b64 	%rd11573, {%r7881, %r7880};
	xor.b64  	%rd11574, %rd11572, %rd11573;
	xor.b64  	%rd11575, %rd18816, %rd11514;
	and.b64  	%rd11576, %rd18815, %rd11575;
	xor.b64  	%rd11577, %rd11576, %rd11514;
	add.s64 	%rd11578, %rd18802, %rd18596;
	add.s64 	%rd11579, %rd11578, %rd11490;
	add.s64 	%rd11580, %rd11579, %rd11577;
	add.s64 	%rd11581, %rd11580, %rd11574;
	add.s64 	%rd18814, %rd11581, %rd11501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7882,%dummy}, %rd18811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7883}, %rd18811;
	}
	shf.r.wrap.b32 	%r7884, %r7883, %r7882, 28;
	shf.r.wrap.b32 	%r7885, %r7882, %r7883, 28;
	mov.b64 	%rd11582, {%r7885, %r7884};
	shf.l.wrap.b32 	%r7886, %r7882, %r7883, 30;
	shf.l.wrap.b32 	%r7887, %r7883, %r7882, 30;
	mov.b64 	%rd11583, {%r7887, %r7886};
	xor.b64  	%rd11584, %rd11583, %rd11582;
	shf.l.wrap.b32 	%r7888, %r7882, %r7883, 25;
	shf.l.wrap.b32 	%r7889, %r7883, %r7882, 25;
	mov.b64 	%rd11585, {%r7889, %r7888};
	xor.b64  	%rd11586, %rd11584, %rd11585;
	and.b64  	%rd11587, %rd18811, %rd18812;
	xor.b64  	%rd11588, %rd18811, %rd18812;
	and.b64  	%rd11589, %rd11588, %rd11525;
	or.b64  	%rd11590, %rd11589, %rd11587;
	add.s64 	%rd11591, %rd11581, %rd11590;
	add.s64 	%rd18810, %rd11591, %rd11586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7890,%dummy}, %rd18814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7891}, %rd18814;
	}
	shf.r.wrap.b32 	%r7892, %r7891, %r7890, 14;
	shf.r.wrap.b32 	%r7893, %r7890, %r7891, 14;
	mov.b64 	%rd11592, {%r7893, %r7892};
	shf.r.wrap.b32 	%r7894, %r7891, %r7890, 18;
	shf.r.wrap.b32 	%r7895, %r7890, %r7891, 18;
	mov.b64 	%rd11593, {%r7895, %r7894};
	xor.b64  	%rd11594, %rd11593, %rd11592;
	shf.l.wrap.b32 	%r7896, %r7890, %r7891, 23;
	shf.l.wrap.b32 	%r7897, %r7891, %r7890, 23;
	mov.b64 	%rd11595, {%r7897, %r7896};
	xor.b64  	%rd11596, %rd11594, %rd11595;
	xor.b64  	%rd11597, %rd18815, %rd18816;
	and.b64  	%rd11598, %rd18814, %rd11597;
	xor.b64  	%rd11599, %rd11598, %rd18816;
	add.s64 	%rd11600, %rd18801, %rd18595;
	add.s64 	%rd11601, %rd11600, %rd11514;
	add.s64 	%rd11602, %rd11601, %rd11599;
	add.s64 	%rd11603, %rd11602, %rd11596;
	add.s64 	%rd18813, %rd11603, %rd11525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7898,%dummy}, %rd18810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7899}, %rd18810;
	}
	shf.r.wrap.b32 	%r7900, %r7899, %r7898, 28;
	shf.r.wrap.b32 	%r7901, %r7898, %r7899, 28;
	mov.b64 	%rd11604, {%r7901, %r7900};
	shf.l.wrap.b32 	%r7902, %r7898, %r7899, 30;
	shf.l.wrap.b32 	%r7903, %r7899, %r7898, 30;
	mov.b64 	%rd11605, {%r7903, %r7902};
	xor.b64  	%rd11606, %rd11605, %rd11604;
	shf.l.wrap.b32 	%r7904, %r7898, %r7899, 25;
	shf.l.wrap.b32 	%r7905, %r7899, %r7898, 25;
	mov.b64 	%rd11607, {%r7905, %r7904};
	xor.b64  	%rd11608, %rd11606, %rd11607;
	and.b64  	%rd11609, %rd18810, %rd18811;
	xor.b64  	%rd11610, %rd18810, %rd18811;
	and.b64  	%rd11611, %rd11610, %rd18812;
	or.b64  	%rd11612, %rd11611, %rd11609;
	add.s64 	%rd11613, %rd11603, %rd11612;
	add.s64 	%rd18809, %rd11613, %rd11608;
	mov.u32 	%r13015, 16;

BB0_233:
	mov.u64 	%rd18514, k_sha512;
	shr.u64 	%rd11614, %rd18802, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7906,%dummy}, %rd18802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7907}, %rd18802;
	}
	shf.r.wrap.b32 	%r7908, %r7907, %r7906, 19;
	shf.r.wrap.b32 	%r7909, %r7906, %r7907, 19;
	mov.b64 	%rd11615, {%r7909, %r7908};
	xor.b64  	%rd11616, %rd11615, %rd11614;
	shf.l.wrap.b32 	%r7910, %r7906, %r7907, 3;
	shf.l.wrap.b32 	%r7911, %r7907, %r7906, 3;
	mov.b64 	%rd11617, {%r7911, %r7910};
	xor.b64  	%rd11618, %rd11616, %rd11617;
	shr.u64 	%rd11619, %rd18818, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7912,%dummy}, %rd18818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7913}, %rd18818;
	}
	shf.r.wrap.b32 	%r7914, %r7913, %r7912, 1;
	shf.r.wrap.b32 	%r7915, %r7912, %r7913, 1;
	mov.b64 	%rd11620, {%r7915, %r7914};
	xor.b64  	%rd11621, %rd11620, %rd11619;
	shf.r.wrap.b32 	%r7916, %r7913, %r7912, 8;
	shf.r.wrap.b32 	%r7917, %r7912, %r7913, 8;
	mov.b64 	%rd11622, {%r7917, %r7916};
	xor.b64  	%rd11623, %rd11621, %rd11622;
	add.s64 	%rd11624, %rd18817, %rd18807;
	add.s64 	%rd11625, %rd11624, %rd11618;
	add.s64 	%rd18817, %rd11625, %rd11623;
	shr.u64 	%rd11626, %rd18801, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7918,%dummy}, %rd18801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7919}, %rd18801;
	}
	shf.r.wrap.b32 	%r7920, %r7919, %r7918, 19;
	shf.r.wrap.b32 	%r7921, %r7918, %r7919, 19;
	mov.b64 	%rd11627, {%r7921, %r7920};
	xor.b64  	%rd11628, %rd11627, %rd11626;
	shf.l.wrap.b32 	%r7922, %r7918, %r7919, 3;
	shf.l.wrap.b32 	%r7923, %r7919, %r7918, 3;
	mov.b64 	%rd11629, {%r7923, %r7922};
	xor.b64  	%rd11630, %rd11628, %rd11629;
	shr.u64 	%rd11631, %rd18819, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7924,%dummy}, %rd18819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7925}, %rd18819;
	}
	shf.r.wrap.b32 	%r7926, %r7925, %r7924, 1;
	shf.r.wrap.b32 	%r7927, %r7924, %r7925, 1;
	mov.b64 	%rd11632, {%r7927, %r7926};
	xor.b64  	%rd11633, %rd11632, %rd11631;
	shf.r.wrap.b32 	%r7928, %r7925, %r7924, 8;
	shf.r.wrap.b32 	%r7929, %r7924, %r7925, 8;
	mov.b64 	%rd11634, {%r7929, %r7928};
	xor.b64  	%rd11635, %rd11633, %rd11634;
	add.s64 	%rd11636, %rd18818, %rd18806;
	add.s64 	%rd11637, %rd11636, %rd11630;
	add.s64 	%rd18818, %rd11637, %rd11635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7930,%dummy}, %rd18817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7931}, %rd18817;
	}
	shf.r.wrap.b32 	%r7932, %r7931, %r7930, 19;
	shf.r.wrap.b32 	%r7933, %r7930, %r7931, 19;
	mov.b64 	%rd11638, {%r7933, %r7932};
	shf.l.wrap.b32 	%r7934, %r7930, %r7931, 3;
	shf.l.wrap.b32 	%r7935, %r7931, %r7930, 3;
	mov.b64 	%rd11639, {%r7935, %r7934};
	shr.u64 	%rd11640, %rd18817, 6;
	xor.b64  	%rd11641, %rd11638, %rd11640;
	xor.b64  	%rd11642, %rd11641, %rd11639;
	shr.u64 	%rd11643, %rd18820, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7936,%dummy}, %rd18820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7937}, %rd18820;
	}
	shf.r.wrap.b32 	%r7938, %r7937, %r7936, 1;
	shf.r.wrap.b32 	%r7939, %r7936, %r7937, 1;
	mov.b64 	%rd11644, {%r7939, %r7938};
	xor.b64  	%rd11645, %rd11644, %rd11643;
	shf.r.wrap.b32 	%r7940, %r7937, %r7936, 8;
	shf.r.wrap.b32 	%r7941, %r7936, %r7937, 8;
	mov.b64 	%rd11646, {%r7941, %r7940};
	xor.b64  	%rd11647, %rd11645, %rd11646;
	add.s64 	%rd11648, %rd18819, %rd18805;
	add.s64 	%rd11649, %rd11648, %rd11642;
	add.s64 	%rd18819, %rd11649, %rd11647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7942,%dummy}, %rd18818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7943}, %rd18818;
	}
	shf.r.wrap.b32 	%r7944, %r7943, %r7942, 19;
	shf.r.wrap.b32 	%r7945, %r7942, %r7943, 19;
	mov.b64 	%rd11650, {%r7945, %r7944};
	shf.l.wrap.b32 	%r7946, %r7942, %r7943, 3;
	shf.l.wrap.b32 	%r7947, %r7943, %r7942, 3;
	mov.b64 	%rd11651, {%r7947, %r7946};
	shr.u64 	%rd11652, %rd18818, 6;
	xor.b64  	%rd11653, %rd11650, %rd11652;
	xor.b64  	%rd11654, %rd11653, %rd11651;
	shr.u64 	%rd11655, %rd18821, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7948,%dummy}, %rd18821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7949}, %rd18821;
	}
	shf.r.wrap.b32 	%r7950, %r7949, %r7948, 1;
	shf.r.wrap.b32 	%r7951, %r7948, %r7949, 1;
	mov.b64 	%rd11656, {%r7951, %r7950};
	xor.b64  	%rd11657, %rd11656, %rd11655;
	shf.r.wrap.b32 	%r7952, %r7949, %r7948, 8;
	shf.r.wrap.b32 	%r7953, %r7948, %r7949, 8;
	mov.b64 	%rd11658, {%r7953, %r7952};
	xor.b64  	%rd11659, %rd11657, %rd11658;
	add.s64 	%rd11660, %rd18820, %rd18804;
	add.s64 	%rd11661, %rd11660, %rd11654;
	add.s64 	%rd18820, %rd11661, %rd11659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7954,%dummy}, %rd18819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7955}, %rd18819;
	}
	shf.r.wrap.b32 	%r7956, %r7955, %r7954, 19;
	shf.r.wrap.b32 	%r7957, %r7954, %r7955, 19;
	mov.b64 	%rd11662, {%r7957, %r7956};
	shf.l.wrap.b32 	%r7958, %r7954, %r7955, 3;
	shf.l.wrap.b32 	%r7959, %r7955, %r7954, 3;
	mov.b64 	%rd11663, {%r7959, %r7958};
	shr.u64 	%rd11664, %rd18819, 6;
	xor.b64  	%rd11665, %rd11662, %rd11664;
	xor.b64  	%rd11666, %rd11665, %rd11663;
	shr.u64 	%rd11667, %rd18822, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7960,%dummy}, %rd18822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7961}, %rd18822;
	}
	shf.r.wrap.b32 	%r7962, %r7961, %r7960, 1;
	shf.r.wrap.b32 	%r7963, %r7960, %r7961, 1;
	mov.b64 	%rd11668, {%r7963, %r7962};
	xor.b64  	%rd11669, %rd11668, %rd11667;
	shf.r.wrap.b32 	%r7964, %r7961, %r7960, 8;
	shf.r.wrap.b32 	%r7965, %r7960, %r7961, 8;
	mov.b64 	%rd11670, {%r7965, %r7964};
	xor.b64  	%rd11671, %rd11669, %rd11670;
	add.s64 	%rd11672, %rd18821, %rd18803;
	add.s64 	%rd11673, %rd11672, %rd11666;
	add.s64 	%rd18821, %rd11673, %rd11671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7966,%dummy}, %rd18820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7967}, %rd18820;
	}
	shf.r.wrap.b32 	%r7968, %r7967, %r7966, 19;
	shf.r.wrap.b32 	%r7969, %r7966, %r7967, 19;
	mov.b64 	%rd11674, {%r7969, %r7968};
	shf.l.wrap.b32 	%r7970, %r7966, %r7967, 3;
	shf.l.wrap.b32 	%r7971, %r7967, %r7966, 3;
	mov.b64 	%rd11675, {%r7971, %r7970};
	shr.u64 	%rd11676, %rd18820, 6;
	xor.b64  	%rd11677, %rd11674, %rd11676;
	xor.b64  	%rd11678, %rd11677, %rd11675;
	shr.u64 	%rd11679, %rd18823, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7972,%dummy}, %rd18823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7973}, %rd18823;
	}
	shf.r.wrap.b32 	%r7974, %r7973, %r7972, 1;
	shf.r.wrap.b32 	%r7975, %r7972, %r7973, 1;
	mov.b64 	%rd11680, {%r7975, %r7974};
	xor.b64  	%rd11681, %rd11680, %rd11679;
	shf.r.wrap.b32 	%r7976, %r7973, %r7972, 8;
	shf.r.wrap.b32 	%r7977, %r7972, %r7973, 8;
	mov.b64 	%rd11682, {%r7977, %r7976};
	xor.b64  	%rd11683, %rd11681, %rd11682;
	add.s64 	%rd11684, %rd18822, %rd18802;
	add.s64 	%rd11685, %rd11684, %rd11678;
	add.s64 	%rd18822, %rd11685, %rd11683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7978,%dummy}, %rd18821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7979}, %rd18821;
	}
	shf.r.wrap.b32 	%r7980, %r7979, %r7978, 19;
	shf.r.wrap.b32 	%r7981, %r7978, %r7979, 19;
	mov.b64 	%rd11686, {%r7981, %r7980};
	shf.l.wrap.b32 	%r7982, %r7978, %r7979, 3;
	shf.l.wrap.b32 	%r7983, %r7979, %r7978, 3;
	mov.b64 	%rd11687, {%r7983, %r7982};
	shr.u64 	%rd11688, %rd18821, 6;
	xor.b64  	%rd11689, %rd11686, %rd11688;
	xor.b64  	%rd11690, %rd11689, %rd11687;
	shr.u64 	%rd11691, %rd18824, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7984,%dummy}, %rd18824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7985}, %rd18824;
	}
	shf.r.wrap.b32 	%r7986, %r7985, %r7984, 1;
	shf.r.wrap.b32 	%r7987, %r7984, %r7985, 1;
	mov.b64 	%rd11692, {%r7987, %r7986};
	xor.b64  	%rd11693, %rd11692, %rd11691;
	shf.r.wrap.b32 	%r7988, %r7985, %r7984, 8;
	shf.r.wrap.b32 	%r7989, %r7984, %r7985, 8;
	mov.b64 	%rd11694, {%r7989, %r7988};
	xor.b64  	%rd11695, %rd11693, %rd11694;
	add.s64 	%rd11696, %rd18823, %rd18801;
	add.s64 	%rd11697, %rd11696, %rd11690;
	add.s64 	%rd18823, %rd11697, %rd11695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7990,%dummy}, %rd18822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7991}, %rd18822;
	}
	shf.r.wrap.b32 	%r7992, %r7991, %r7990, 19;
	shf.r.wrap.b32 	%r7993, %r7990, %r7991, 19;
	mov.b64 	%rd11698, {%r7993, %r7992};
	shf.l.wrap.b32 	%r7994, %r7990, %r7991, 3;
	shf.l.wrap.b32 	%r7995, %r7991, %r7990, 3;
	mov.b64 	%rd11699, {%r7995, %r7994};
	shr.u64 	%rd11700, %rd18822, 6;
	xor.b64  	%rd11701, %rd11698, %rd11700;
	xor.b64  	%rd11702, %rd11701, %rd11699;
	shr.u64 	%rd11703, %rd18808, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7996,%dummy}, %rd18808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7997}, %rd18808;
	}
	shf.r.wrap.b32 	%r7998, %r7997, %r7996, 1;
	shf.r.wrap.b32 	%r7999, %r7996, %r7997, 1;
	mov.b64 	%rd11704, {%r7999, %r7998};
	xor.b64  	%rd11705, %rd11704, %rd11703;
	shf.r.wrap.b32 	%r8000, %r7997, %r7996, 8;
	shf.r.wrap.b32 	%r8001, %r7996, %r7997, 8;
	mov.b64 	%rd11706, {%r8001, %r8000};
	xor.b64  	%rd11707, %rd11705, %rd11706;
	add.s64 	%rd11708, %rd18817, %rd18824;
	add.s64 	%rd11709, %rd11708, %rd11702;
	add.s64 	%rd18824, %rd11709, %rd11707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8002,%dummy}, %rd18823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8003}, %rd18823;
	}
	shf.r.wrap.b32 	%r8004, %r8003, %r8002, 19;
	shf.r.wrap.b32 	%r8005, %r8002, %r8003, 19;
	mov.b64 	%rd11710, {%r8005, %r8004};
	shf.l.wrap.b32 	%r8006, %r8002, %r8003, 3;
	shf.l.wrap.b32 	%r8007, %r8003, %r8002, 3;
	mov.b64 	%rd11711, {%r8007, %r8006};
	shr.u64 	%rd11712, %rd18823, 6;
	xor.b64  	%rd11713, %rd11710, %rd11712;
	xor.b64  	%rd11714, %rd11713, %rd11711;
	shr.u64 	%rd11715, %rd18807, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8008,%dummy}, %rd18807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8009}, %rd18807;
	}
	shf.r.wrap.b32 	%r8010, %r8009, %r8008, 1;
	shf.r.wrap.b32 	%r8011, %r8008, %r8009, 1;
	mov.b64 	%rd11716, {%r8011, %r8010};
	xor.b64  	%rd11717, %rd11716, %rd11715;
	shf.r.wrap.b32 	%r8012, %r8009, %r8008, 8;
	shf.r.wrap.b32 	%r8013, %r8008, %r8009, 8;
	mov.b64 	%rd11718, {%r8013, %r8012};
	xor.b64  	%rd11719, %rd11717, %rd11718;
	add.s64 	%rd11720, %rd18818, %rd18808;
	add.s64 	%rd11721, %rd11720, %rd11714;
	add.s64 	%rd18808, %rd11721, %rd11719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8014,%dummy}, %rd18824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8015}, %rd18824;
	}
	shf.r.wrap.b32 	%r8016, %r8015, %r8014, 19;
	shf.r.wrap.b32 	%r8017, %r8014, %r8015, 19;
	mov.b64 	%rd11722, {%r8017, %r8016};
	shf.l.wrap.b32 	%r8018, %r8014, %r8015, 3;
	shf.l.wrap.b32 	%r8019, %r8015, %r8014, 3;
	mov.b64 	%rd11723, {%r8019, %r8018};
	shr.u64 	%rd11724, %rd18824, 6;
	xor.b64  	%rd11725, %rd11722, %rd11724;
	xor.b64  	%rd11726, %rd11725, %rd11723;
	shr.u64 	%rd11727, %rd18806, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8020,%dummy}, %rd18806;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8021}, %rd18806;
	}
	shf.r.wrap.b32 	%r8022, %r8021, %r8020, 1;
	shf.r.wrap.b32 	%r8023, %r8020, %r8021, 1;
	mov.b64 	%rd11728, {%r8023, %r8022};
	xor.b64  	%rd11729, %rd11728, %rd11727;
	shf.r.wrap.b32 	%r8024, %r8021, %r8020, 8;
	shf.r.wrap.b32 	%r8025, %r8020, %r8021, 8;
	mov.b64 	%rd11730, {%r8025, %r8024};
	xor.b64  	%rd11731, %rd11729, %rd11730;
	add.s64 	%rd11732, %rd18819, %rd18807;
	add.s64 	%rd11733, %rd11732, %rd11726;
	add.s64 	%rd18807, %rd11733, %rd11731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8026,%dummy}, %rd18808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8027}, %rd18808;
	}
	shf.r.wrap.b32 	%r8028, %r8027, %r8026, 19;
	shf.r.wrap.b32 	%r8029, %r8026, %r8027, 19;
	mov.b64 	%rd11734, {%r8029, %r8028};
	shf.l.wrap.b32 	%r8030, %r8026, %r8027, 3;
	shf.l.wrap.b32 	%r8031, %r8027, %r8026, 3;
	mov.b64 	%rd11735, {%r8031, %r8030};
	shr.u64 	%rd11736, %rd18808, 6;
	xor.b64  	%rd11737, %rd11734, %rd11736;
	xor.b64  	%rd11738, %rd11737, %rd11735;
	shr.u64 	%rd11739, %rd18805, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8032,%dummy}, %rd18805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8033}, %rd18805;
	}
	shf.r.wrap.b32 	%r8034, %r8033, %r8032, 1;
	shf.r.wrap.b32 	%r8035, %r8032, %r8033, 1;
	mov.b64 	%rd11740, {%r8035, %r8034};
	xor.b64  	%rd11741, %rd11740, %rd11739;
	shf.r.wrap.b32 	%r8036, %r8033, %r8032, 8;
	shf.r.wrap.b32 	%r8037, %r8032, %r8033, 8;
	mov.b64 	%rd11742, {%r8037, %r8036};
	xor.b64  	%rd11743, %rd11741, %rd11742;
	add.s64 	%rd11744, %rd18820, %rd18806;
	add.s64 	%rd11745, %rd11744, %rd11738;
	add.s64 	%rd18806, %rd11745, %rd11743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8038,%dummy}, %rd18807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8039}, %rd18807;
	}
	shf.r.wrap.b32 	%r8040, %r8039, %r8038, 19;
	shf.r.wrap.b32 	%r8041, %r8038, %r8039, 19;
	mov.b64 	%rd11746, {%r8041, %r8040};
	shf.l.wrap.b32 	%r8042, %r8038, %r8039, 3;
	shf.l.wrap.b32 	%r8043, %r8039, %r8038, 3;
	mov.b64 	%rd11747, {%r8043, %r8042};
	shr.u64 	%rd11748, %rd18807, 6;
	xor.b64  	%rd11749, %rd11746, %rd11748;
	xor.b64  	%rd11750, %rd11749, %rd11747;
	shr.u64 	%rd11751, %rd18804, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8044,%dummy}, %rd18804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8045}, %rd18804;
	}
	shf.r.wrap.b32 	%r8046, %r8045, %r8044, 1;
	shf.r.wrap.b32 	%r8047, %r8044, %r8045, 1;
	mov.b64 	%rd11752, {%r8047, %r8046};
	xor.b64  	%rd11753, %rd11752, %rd11751;
	shf.r.wrap.b32 	%r8048, %r8045, %r8044, 8;
	shf.r.wrap.b32 	%r8049, %r8044, %r8045, 8;
	mov.b64 	%rd11754, {%r8049, %r8048};
	xor.b64  	%rd11755, %rd11753, %rd11754;
	add.s64 	%rd11756, %rd18821, %rd18805;
	add.s64 	%rd11757, %rd11756, %rd11750;
	add.s64 	%rd18805, %rd11757, %rd11755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8050,%dummy}, %rd18806;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8051}, %rd18806;
	}
	shf.r.wrap.b32 	%r8052, %r8051, %r8050, 19;
	shf.r.wrap.b32 	%r8053, %r8050, %r8051, 19;
	mov.b64 	%rd11758, {%r8053, %r8052};
	shf.l.wrap.b32 	%r8054, %r8050, %r8051, 3;
	shf.l.wrap.b32 	%r8055, %r8051, %r8050, 3;
	mov.b64 	%rd11759, {%r8055, %r8054};
	shr.u64 	%rd11760, %rd18806, 6;
	xor.b64  	%rd11761, %rd11758, %rd11760;
	xor.b64  	%rd11762, %rd11761, %rd11759;
	shr.u64 	%rd11763, %rd18803, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8056,%dummy}, %rd18803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8057}, %rd18803;
	}
	shf.r.wrap.b32 	%r8058, %r8057, %r8056, 1;
	shf.r.wrap.b32 	%r8059, %r8056, %r8057, 1;
	mov.b64 	%rd11764, {%r8059, %r8058};
	xor.b64  	%rd11765, %rd11764, %rd11763;
	shf.r.wrap.b32 	%r8060, %r8057, %r8056, 8;
	shf.r.wrap.b32 	%r8061, %r8056, %r8057, 8;
	mov.b64 	%rd11766, {%r8061, %r8060};
	xor.b64  	%rd11767, %rd11765, %rd11766;
	add.s64 	%rd11768, %rd18822, %rd18804;
	add.s64 	%rd11769, %rd11768, %rd11762;
	add.s64 	%rd18804, %rd11769, %rd11767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8062,%dummy}, %rd18805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8063}, %rd18805;
	}
	shf.r.wrap.b32 	%r8064, %r8063, %r8062, 19;
	shf.r.wrap.b32 	%r8065, %r8062, %r8063, 19;
	mov.b64 	%rd11770, {%r8065, %r8064};
	shf.l.wrap.b32 	%r8066, %r8062, %r8063, 3;
	shf.l.wrap.b32 	%r8067, %r8063, %r8062, 3;
	mov.b64 	%rd11771, {%r8067, %r8066};
	shr.u64 	%rd11772, %rd18805, 6;
	xor.b64  	%rd11773, %rd11770, %rd11772;
	xor.b64  	%rd11774, %rd11773, %rd11771;
	shr.u64 	%rd11775, %rd18802, 7;
	shf.r.wrap.b32 	%r8068, %r7907, %r7906, 1;
	shf.r.wrap.b32 	%r8069, %r7906, %r7907, 1;
	mov.b64 	%rd11776, {%r8069, %r8068};
	xor.b64  	%rd11777, %rd11776, %rd11775;
	shf.r.wrap.b32 	%r8070, %r7907, %r7906, 8;
	shf.r.wrap.b32 	%r8071, %r7906, %r7907, 8;
	mov.b64 	%rd11778, {%r8071, %r8070};
	xor.b64  	%rd11779, %rd11777, %rd11778;
	add.s64 	%rd11780, %rd18823, %rd18803;
	add.s64 	%rd11781, %rd11780, %rd11774;
	add.s64 	%rd18803, %rd11781, %rd11779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8072,%dummy}, %rd18804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8073}, %rd18804;
	}
	shf.r.wrap.b32 	%r8074, %r8073, %r8072, 19;
	shf.r.wrap.b32 	%r8075, %r8072, %r8073, 19;
	mov.b64 	%rd11782, {%r8075, %r8074};
	shf.l.wrap.b32 	%r8076, %r8072, %r8073, 3;
	shf.l.wrap.b32 	%r8077, %r8073, %r8072, 3;
	mov.b64 	%rd11783, {%r8077, %r8076};
	shr.u64 	%rd11784, %rd18804, 6;
	xor.b64  	%rd11785, %rd11782, %rd11784;
	xor.b64  	%rd11786, %rd11785, %rd11783;
	shr.u64 	%rd11787, %rd18801, 7;
	shf.r.wrap.b32 	%r8078, %r7919, %r7918, 1;
	shf.r.wrap.b32 	%r8079, %r7918, %r7919, 1;
	mov.b64 	%rd11788, {%r8079, %r8078};
	xor.b64  	%rd11789, %rd11788, %rd11787;
	shf.r.wrap.b32 	%r8080, %r7919, %r7918, 8;
	shf.r.wrap.b32 	%r8081, %r7918, %r7919, 8;
	mov.b64 	%rd11790, {%r8081, %r8080};
	xor.b64  	%rd11791, %rd11789, %rd11790;
	add.s64 	%rd11792, %rd18824, %rd18802;
	add.s64 	%rd11793, %rd11792, %rd11786;
	add.s64 	%rd18802, %rd11793, %rd11791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8082,%dummy}, %rd18803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8083}, %rd18803;
	}
	shf.r.wrap.b32 	%r8084, %r8083, %r8082, 19;
	shf.r.wrap.b32 	%r8085, %r8082, %r8083, 19;
	mov.b64 	%rd11794, {%r8085, %r8084};
	shf.l.wrap.b32 	%r8086, %r8082, %r8083, 3;
	shf.l.wrap.b32 	%r8087, %r8083, %r8082, 3;
	mov.b64 	%rd11795, {%r8087, %r8086};
	shr.u64 	%rd11796, %rd18803, 6;
	xor.b64  	%rd11797, %rd11794, %rd11796;
	xor.b64  	%rd11798, %rd11797, %rd11795;
	shf.r.wrap.b32 	%r8088, %r7931, %r7930, 1;
	shf.r.wrap.b32 	%r8089, %r7930, %r7931, 1;
	mov.b64 	%rd11799, {%r8089, %r8088};
	shf.r.wrap.b32 	%r8090, %r7931, %r7930, 8;
	shf.r.wrap.b32 	%r8091, %r7930, %r7931, 8;
	mov.b64 	%rd11800, {%r8091, %r8090};
	shr.u64 	%rd11801, %rd18817, 7;
	xor.b64  	%rd11802, %rd11799, %rd11801;
	xor.b64  	%rd11803, %rd11802, %rd11800;
	add.s64 	%rd11804, %rd18808, %rd18801;
	add.s64 	%rd11805, %rd11804, %rd11798;
	add.s64 	%rd18801, %rd11805, %rd11803;
	mul.wide.s32 	%rd11806, %r13015, 8;
	add.s64 	%rd11808, %rd18514, %rd11806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8092,%dummy}, %rd18813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8093}, %rd18813;
	}
	shf.r.wrap.b32 	%r8094, %r8093, %r8092, 18;
	shf.r.wrap.b32 	%r8095, %r8092, %r8093, 18;
	mov.b64 	%rd11809, {%r8095, %r8094};
	shf.r.wrap.b32 	%r8096, %r8093, %r8092, 14;
	shf.r.wrap.b32 	%r8097, %r8092, %r8093, 14;
	mov.b64 	%rd11810, {%r8097, %r8096};
	xor.b64  	%rd11811, %rd11809, %rd11810;
	shf.l.wrap.b32 	%r8098, %r8092, %r8093, 23;
	shf.l.wrap.b32 	%r8099, %r8093, %r8092, 23;
	mov.b64 	%rd11812, {%r8099, %r8098};
	xor.b64  	%rd11813, %rd11811, %rd11812;
	xor.b64  	%rd11814, %rd18815, %rd18814;
	and.b64  	%rd11815, %rd11814, %rd18813;
	xor.b64  	%rd11816, %rd11815, %rd18815;
	add.s64 	%rd11817, %rd11816, %rd18816;
	add.s64 	%rd11818, %rd11817, %rd18817;
	ld.const.u64 	%rd11819, [%rd11808];
	add.s64 	%rd11820, %rd11818, %rd11819;
	add.s64 	%rd11821, %rd11820, %rd11813;
	add.s64 	%rd11822, %rd11821, %rd18812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8100}, %rd18809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8101,%dummy}, %rd18809;
	}
	shf.l.wrap.b32 	%r8102, %r8101, %r8100, 30;
	shf.l.wrap.b32 	%r8103, %r8100, %r8101, 30;
	mov.b64 	%rd11823, {%r8103, %r8102};
	shf.r.wrap.b32 	%r8104, %r8100, %r8101, 28;
	shf.r.wrap.b32 	%r8105, %r8101, %r8100, 28;
	mov.b64 	%rd11824, {%r8105, %r8104};
	xor.b64  	%rd11825, %rd11823, %rd11824;
	shf.l.wrap.b32 	%r8106, %r8101, %r8100, 25;
	shf.l.wrap.b32 	%r8107, %r8100, %r8101, 25;
	mov.b64 	%rd11826, {%r8107, %r8106};
	xor.b64  	%rd11827, %rd11825, %rd11826;
	xor.b64  	%rd11828, %rd18810, %rd18809;
	and.b64  	%rd11829, %rd11828, %rd18811;
	and.b64  	%rd11830, %rd18810, %rd18809;
	or.b64  	%rd11831, %rd11829, %rd11830;
	add.s64 	%rd11832, %rd11821, %rd11831;
	add.s64 	%rd11833, %rd11832, %rd11827;
	add.s32 	%r8108, %r13015, 1;
	mul.wide.s32 	%rd11834, %r8108, 8;
	add.s64 	%rd11835, %rd18514, %rd11834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8109,%dummy}, %rd11822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8110}, %rd11822;
	}
	shf.r.wrap.b32 	%r8111, %r8110, %r8109, 14;
	shf.r.wrap.b32 	%r8112, %r8109, %r8110, 14;
	mov.b64 	%rd11836, {%r8112, %r8111};
	shf.r.wrap.b32 	%r8113, %r8110, %r8109, 18;
	shf.r.wrap.b32 	%r8114, %r8109, %r8110, 18;
	mov.b64 	%rd11837, {%r8114, %r8113};
	xor.b64  	%rd11838, %rd11837, %rd11836;
	shf.l.wrap.b32 	%r8115, %r8109, %r8110, 23;
	shf.l.wrap.b32 	%r8116, %r8110, %r8109, 23;
	mov.b64 	%rd11839, {%r8116, %r8115};
	xor.b64  	%rd11840, %rd11838, %rd11839;
	xor.b64  	%rd11841, %rd18814, %rd18813;
	and.b64  	%rd11842, %rd11822, %rd11841;
	xor.b64  	%rd11843, %rd11842, %rd18814;
	add.s64 	%rd11844, %rd18818, %rd18815;
	ld.const.u64 	%rd11845, [%rd11835];
	add.s64 	%rd11846, %rd11844, %rd11845;
	add.s64 	%rd11847, %rd11846, %rd11843;
	add.s64 	%rd11848, %rd11847, %rd11840;
	add.s64 	%rd11849, %rd11848, %rd18811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8117,%dummy}, %rd11833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8118}, %rd11833;
	}
	shf.r.wrap.b32 	%r8119, %r8118, %r8117, 28;
	shf.r.wrap.b32 	%r8120, %r8117, %r8118, 28;
	mov.b64 	%rd11850, {%r8120, %r8119};
	shf.l.wrap.b32 	%r8121, %r8117, %r8118, 30;
	shf.l.wrap.b32 	%r8122, %r8118, %r8117, 30;
	mov.b64 	%rd11851, {%r8122, %r8121};
	xor.b64  	%rd11852, %rd11851, %rd11850;
	shf.l.wrap.b32 	%r8123, %r8117, %r8118, 25;
	shf.l.wrap.b32 	%r8124, %r8118, %r8117, 25;
	mov.b64 	%rd11853, {%r8124, %r8123};
	xor.b64  	%rd11854, %rd11852, %rd11853;
	and.b64  	%rd11855, %rd11833, %rd18809;
	xor.b64  	%rd11856, %rd11833, %rd18809;
	and.b64  	%rd11857, %rd11856, %rd18810;
	or.b64  	%rd11858, %rd11857, %rd11855;
	add.s64 	%rd11859, %rd11848, %rd11858;
	add.s64 	%rd11860, %rd11859, %rd11854;
	add.s32 	%r8125, %r13015, 2;
	mul.wide.s32 	%rd11861, %r8125, 8;
	add.s64 	%rd11862, %rd18514, %rd11861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8126,%dummy}, %rd11849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8127}, %rd11849;
	}
	shf.r.wrap.b32 	%r8128, %r8127, %r8126, 14;
	shf.r.wrap.b32 	%r8129, %r8126, %r8127, 14;
	mov.b64 	%rd11863, {%r8129, %r8128};
	shf.r.wrap.b32 	%r8130, %r8127, %r8126, 18;
	shf.r.wrap.b32 	%r8131, %r8126, %r8127, 18;
	mov.b64 	%rd11864, {%r8131, %r8130};
	xor.b64  	%rd11865, %rd11864, %rd11863;
	shf.l.wrap.b32 	%r8132, %r8126, %r8127, 23;
	shf.l.wrap.b32 	%r8133, %r8127, %r8126, 23;
	mov.b64 	%rd11866, {%r8133, %r8132};
	xor.b64  	%rd11867, %rd11865, %rd11866;
	xor.b64  	%rd11868, %rd11822, %rd18813;
	and.b64  	%rd11869, %rd11849, %rd11868;
	xor.b64  	%rd11870, %rd11869, %rd18813;
	add.s64 	%rd11871, %rd18819, %rd18814;
	ld.const.u64 	%rd11872, [%rd11862];
	add.s64 	%rd11873, %rd11871, %rd11872;
	add.s64 	%rd11874, %rd11873, %rd11870;
	add.s64 	%rd11875, %rd11874, %rd11867;
	add.s64 	%rd11876, %rd11875, %rd18810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8134,%dummy}, %rd11860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8135}, %rd11860;
	}
	shf.r.wrap.b32 	%r8136, %r8135, %r8134, 28;
	shf.r.wrap.b32 	%r8137, %r8134, %r8135, 28;
	mov.b64 	%rd11877, {%r8137, %r8136};
	shf.l.wrap.b32 	%r8138, %r8134, %r8135, 30;
	shf.l.wrap.b32 	%r8139, %r8135, %r8134, 30;
	mov.b64 	%rd11878, {%r8139, %r8138};
	xor.b64  	%rd11879, %rd11878, %rd11877;
	shf.l.wrap.b32 	%r8140, %r8134, %r8135, 25;
	shf.l.wrap.b32 	%r8141, %r8135, %r8134, 25;
	mov.b64 	%rd11880, {%r8141, %r8140};
	xor.b64  	%rd11881, %rd11879, %rd11880;
	and.b64  	%rd11882, %rd11860, %rd11833;
	xor.b64  	%rd11883, %rd11860, %rd11833;
	and.b64  	%rd11884, %rd11883, %rd18809;
	or.b64  	%rd11885, %rd11884, %rd11882;
	add.s64 	%rd11886, %rd11875, %rd11885;
	add.s64 	%rd11887, %rd11886, %rd11881;
	add.s32 	%r8142, %r13015, 3;
	mul.wide.s32 	%rd11888, %r8142, 8;
	add.s64 	%rd11889, %rd18514, %rd11888;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8143,%dummy}, %rd11876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8144}, %rd11876;
	}
	shf.r.wrap.b32 	%r8145, %r8144, %r8143, 14;
	shf.r.wrap.b32 	%r8146, %r8143, %r8144, 14;
	mov.b64 	%rd11890, {%r8146, %r8145};
	shf.r.wrap.b32 	%r8147, %r8144, %r8143, 18;
	shf.r.wrap.b32 	%r8148, %r8143, %r8144, 18;
	mov.b64 	%rd11891, {%r8148, %r8147};
	xor.b64  	%rd11892, %rd11891, %rd11890;
	shf.l.wrap.b32 	%r8149, %r8143, %r8144, 23;
	shf.l.wrap.b32 	%r8150, %r8144, %r8143, 23;
	mov.b64 	%rd11893, {%r8150, %r8149};
	xor.b64  	%rd11894, %rd11892, %rd11893;
	xor.b64  	%rd11895, %rd11849, %rd11822;
	and.b64  	%rd11896, %rd11876, %rd11895;
	xor.b64  	%rd11897, %rd11896, %rd11822;
	add.s64 	%rd11898, %rd18820, %rd18813;
	ld.const.u64 	%rd11899, [%rd11889];
	add.s64 	%rd11900, %rd11898, %rd11899;
	add.s64 	%rd11901, %rd11900, %rd11897;
	add.s64 	%rd11902, %rd11901, %rd11894;
	add.s64 	%rd11903, %rd11902, %rd18809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8151,%dummy}, %rd11887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8152}, %rd11887;
	}
	shf.r.wrap.b32 	%r8153, %r8152, %r8151, 28;
	shf.r.wrap.b32 	%r8154, %r8151, %r8152, 28;
	mov.b64 	%rd11904, {%r8154, %r8153};
	shf.l.wrap.b32 	%r8155, %r8151, %r8152, 30;
	shf.l.wrap.b32 	%r8156, %r8152, %r8151, 30;
	mov.b64 	%rd11905, {%r8156, %r8155};
	xor.b64  	%rd11906, %rd11905, %rd11904;
	shf.l.wrap.b32 	%r8157, %r8151, %r8152, 25;
	shf.l.wrap.b32 	%r8158, %r8152, %r8151, 25;
	mov.b64 	%rd11907, {%r8158, %r8157};
	xor.b64  	%rd11908, %rd11906, %rd11907;
	and.b64  	%rd11909, %rd11887, %rd11860;
	xor.b64  	%rd11910, %rd11887, %rd11860;
	and.b64  	%rd11911, %rd11910, %rd11833;
	or.b64  	%rd11912, %rd11911, %rd11909;
	add.s64 	%rd11913, %rd11902, %rd11912;
	add.s64 	%rd11914, %rd11913, %rd11908;
	add.s32 	%r8159, %r13015, 4;
	mul.wide.s32 	%rd11915, %r8159, 8;
	add.s64 	%rd11916, %rd18514, %rd11915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8160,%dummy}, %rd11903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8161}, %rd11903;
	}
	shf.r.wrap.b32 	%r8162, %r8161, %r8160, 14;
	shf.r.wrap.b32 	%r8163, %r8160, %r8161, 14;
	mov.b64 	%rd11917, {%r8163, %r8162};
	shf.r.wrap.b32 	%r8164, %r8161, %r8160, 18;
	shf.r.wrap.b32 	%r8165, %r8160, %r8161, 18;
	mov.b64 	%rd11918, {%r8165, %r8164};
	xor.b64  	%rd11919, %rd11918, %rd11917;
	shf.l.wrap.b32 	%r8166, %r8160, %r8161, 23;
	shf.l.wrap.b32 	%r8167, %r8161, %r8160, 23;
	mov.b64 	%rd11920, {%r8167, %r8166};
	xor.b64  	%rd11921, %rd11919, %rd11920;
	xor.b64  	%rd11922, %rd11876, %rd11849;
	and.b64  	%rd11923, %rd11903, %rd11922;
	xor.b64  	%rd11924, %rd11923, %rd11849;
	add.s64 	%rd11925, %rd11822, %rd18821;
	ld.const.u64 	%rd11926, [%rd11916];
	add.s64 	%rd11927, %rd11925, %rd11926;
	add.s64 	%rd11928, %rd11927, %rd11924;
	add.s64 	%rd11929, %rd11928, %rd11921;
	add.s64 	%rd11930, %rd11929, %rd11833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8168,%dummy}, %rd11914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8169}, %rd11914;
	}
	shf.r.wrap.b32 	%r8170, %r8169, %r8168, 28;
	shf.r.wrap.b32 	%r8171, %r8168, %r8169, 28;
	mov.b64 	%rd11931, {%r8171, %r8170};
	shf.l.wrap.b32 	%r8172, %r8168, %r8169, 30;
	shf.l.wrap.b32 	%r8173, %r8169, %r8168, 30;
	mov.b64 	%rd11932, {%r8173, %r8172};
	xor.b64  	%rd11933, %rd11932, %rd11931;
	shf.l.wrap.b32 	%r8174, %r8168, %r8169, 25;
	shf.l.wrap.b32 	%r8175, %r8169, %r8168, 25;
	mov.b64 	%rd11934, {%r8175, %r8174};
	xor.b64  	%rd11935, %rd11933, %rd11934;
	and.b64  	%rd11936, %rd11914, %rd11887;
	xor.b64  	%rd11937, %rd11914, %rd11887;
	and.b64  	%rd11938, %rd11937, %rd11860;
	or.b64  	%rd11939, %rd11938, %rd11936;
	add.s64 	%rd11940, %rd11929, %rd11939;
	add.s64 	%rd11941, %rd11940, %rd11935;
	add.s32 	%r8176, %r13015, 5;
	mul.wide.s32 	%rd11942, %r8176, 8;
	add.s64 	%rd11943, %rd18514, %rd11942;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8177,%dummy}, %rd11930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8178}, %rd11930;
	}
	shf.r.wrap.b32 	%r8179, %r8178, %r8177, 14;
	shf.r.wrap.b32 	%r8180, %r8177, %r8178, 14;
	mov.b64 	%rd11944, {%r8180, %r8179};
	shf.r.wrap.b32 	%r8181, %r8178, %r8177, 18;
	shf.r.wrap.b32 	%r8182, %r8177, %r8178, 18;
	mov.b64 	%rd11945, {%r8182, %r8181};
	xor.b64  	%rd11946, %rd11945, %rd11944;
	shf.l.wrap.b32 	%r8183, %r8177, %r8178, 23;
	shf.l.wrap.b32 	%r8184, %r8178, %r8177, 23;
	mov.b64 	%rd11947, {%r8184, %r8183};
	xor.b64  	%rd11948, %rd11946, %rd11947;
	xor.b64  	%rd11949, %rd11903, %rd11876;
	and.b64  	%rd11950, %rd11930, %rd11949;
	xor.b64  	%rd11951, %rd11950, %rd11876;
	add.s64 	%rd11952, %rd11849, %rd18822;
	ld.const.u64 	%rd11953, [%rd11943];
	add.s64 	%rd11954, %rd11952, %rd11953;
	add.s64 	%rd11955, %rd11954, %rd11951;
	add.s64 	%rd11956, %rd11955, %rd11948;
	add.s64 	%rd11957, %rd11956, %rd11860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8185,%dummy}, %rd11941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8186}, %rd11941;
	}
	shf.r.wrap.b32 	%r8187, %r8186, %r8185, 28;
	shf.r.wrap.b32 	%r8188, %r8185, %r8186, 28;
	mov.b64 	%rd11958, {%r8188, %r8187};
	shf.l.wrap.b32 	%r8189, %r8185, %r8186, 30;
	shf.l.wrap.b32 	%r8190, %r8186, %r8185, 30;
	mov.b64 	%rd11959, {%r8190, %r8189};
	xor.b64  	%rd11960, %rd11959, %rd11958;
	shf.l.wrap.b32 	%r8191, %r8185, %r8186, 25;
	shf.l.wrap.b32 	%r8192, %r8186, %r8185, 25;
	mov.b64 	%rd11961, {%r8192, %r8191};
	xor.b64  	%rd11962, %rd11960, %rd11961;
	and.b64  	%rd11963, %rd11941, %rd11914;
	xor.b64  	%rd11964, %rd11941, %rd11914;
	and.b64  	%rd11965, %rd11964, %rd11887;
	or.b64  	%rd11966, %rd11965, %rd11963;
	add.s64 	%rd11967, %rd11956, %rd11966;
	add.s64 	%rd11968, %rd11967, %rd11962;
	add.s32 	%r8193, %r13015, 6;
	mul.wide.s32 	%rd11969, %r8193, 8;
	add.s64 	%rd11970, %rd18514, %rd11969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8194,%dummy}, %rd11957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8195}, %rd11957;
	}
	shf.r.wrap.b32 	%r8196, %r8195, %r8194, 14;
	shf.r.wrap.b32 	%r8197, %r8194, %r8195, 14;
	mov.b64 	%rd11971, {%r8197, %r8196};
	shf.r.wrap.b32 	%r8198, %r8195, %r8194, 18;
	shf.r.wrap.b32 	%r8199, %r8194, %r8195, 18;
	mov.b64 	%rd11972, {%r8199, %r8198};
	xor.b64  	%rd11973, %rd11972, %rd11971;
	shf.l.wrap.b32 	%r8200, %r8194, %r8195, 23;
	shf.l.wrap.b32 	%r8201, %r8195, %r8194, 23;
	mov.b64 	%rd11974, {%r8201, %r8200};
	xor.b64  	%rd11975, %rd11973, %rd11974;
	xor.b64  	%rd11976, %rd11930, %rd11903;
	and.b64  	%rd11977, %rd11957, %rd11976;
	xor.b64  	%rd11978, %rd11977, %rd11903;
	add.s64 	%rd11979, %rd11876, %rd18823;
	ld.const.u64 	%rd11980, [%rd11970];
	add.s64 	%rd11981, %rd11979, %rd11980;
	add.s64 	%rd11982, %rd11981, %rd11978;
	add.s64 	%rd11983, %rd11982, %rd11975;
	add.s64 	%rd11984, %rd11983, %rd11887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8202,%dummy}, %rd11968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8203}, %rd11968;
	}
	shf.r.wrap.b32 	%r8204, %r8203, %r8202, 28;
	shf.r.wrap.b32 	%r8205, %r8202, %r8203, 28;
	mov.b64 	%rd11985, {%r8205, %r8204};
	shf.l.wrap.b32 	%r8206, %r8202, %r8203, 30;
	shf.l.wrap.b32 	%r8207, %r8203, %r8202, 30;
	mov.b64 	%rd11986, {%r8207, %r8206};
	xor.b64  	%rd11987, %rd11986, %rd11985;
	shf.l.wrap.b32 	%r8208, %r8202, %r8203, 25;
	shf.l.wrap.b32 	%r8209, %r8203, %r8202, 25;
	mov.b64 	%rd11988, {%r8209, %r8208};
	xor.b64  	%rd11989, %rd11987, %rd11988;
	and.b64  	%rd11990, %rd11968, %rd11941;
	xor.b64  	%rd11991, %rd11968, %rd11941;
	and.b64  	%rd11992, %rd11991, %rd11914;
	or.b64  	%rd11993, %rd11992, %rd11990;
	add.s64 	%rd11994, %rd11983, %rd11993;
	add.s64 	%rd11995, %rd11994, %rd11989;
	add.s32 	%r8210, %r13015, 7;
	mul.wide.s32 	%rd11996, %r8210, 8;
	add.s64 	%rd11997, %rd18514, %rd11996;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8211,%dummy}, %rd11984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8212}, %rd11984;
	}
	shf.r.wrap.b32 	%r8213, %r8212, %r8211, 14;
	shf.r.wrap.b32 	%r8214, %r8211, %r8212, 14;
	mov.b64 	%rd11998, {%r8214, %r8213};
	shf.r.wrap.b32 	%r8215, %r8212, %r8211, 18;
	shf.r.wrap.b32 	%r8216, %r8211, %r8212, 18;
	mov.b64 	%rd11999, {%r8216, %r8215};
	xor.b64  	%rd12000, %rd11999, %rd11998;
	shf.l.wrap.b32 	%r8217, %r8211, %r8212, 23;
	shf.l.wrap.b32 	%r8218, %r8212, %r8211, 23;
	mov.b64 	%rd12001, {%r8218, %r8217};
	xor.b64  	%rd12002, %rd12000, %rd12001;
	xor.b64  	%rd12003, %rd11957, %rd11930;
	and.b64  	%rd12004, %rd11984, %rd12003;
	xor.b64  	%rd12005, %rd12004, %rd11930;
	add.s64 	%rd12006, %rd11903, %rd18824;
	ld.const.u64 	%rd12007, [%rd11997];
	add.s64 	%rd12008, %rd12006, %rd12007;
	add.s64 	%rd12009, %rd12008, %rd12005;
	add.s64 	%rd12010, %rd12009, %rd12002;
	add.s64 	%rd12011, %rd12010, %rd11914;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8219,%dummy}, %rd11995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8220}, %rd11995;
	}
	shf.r.wrap.b32 	%r8221, %r8220, %r8219, 28;
	shf.r.wrap.b32 	%r8222, %r8219, %r8220, 28;
	mov.b64 	%rd12012, {%r8222, %r8221};
	shf.l.wrap.b32 	%r8223, %r8219, %r8220, 30;
	shf.l.wrap.b32 	%r8224, %r8220, %r8219, 30;
	mov.b64 	%rd12013, {%r8224, %r8223};
	xor.b64  	%rd12014, %rd12013, %rd12012;
	shf.l.wrap.b32 	%r8225, %r8219, %r8220, 25;
	shf.l.wrap.b32 	%r8226, %r8220, %r8219, 25;
	mov.b64 	%rd12015, {%r8226, %r8225};
	xor.b64  	%rd12016, %rd12014, %rd12015;
	and.b64  	%rd12017, %rd11995, %rd11968;
	xor.b64  	%rd12018, %rd11995, %rd11968;
	and.b64  	%rd12019, %rd12018, %rd11941;
	or.b64  	%rd12020, %rd12019, %rd12017;
	add.s64 	%rd12021, %rd12010, %rd12020;
	add.s64 	%rd12022, %rd12021, %rd12016;
	add.s32 	%r8227, %r13015, 8;
	mul.wide.s32 	%rd12023, %r8227, 8;
	add.s64 	%rd12024, %rd18514, %rd12023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8228,%dummy}, %rd12011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8229}, %rd12011;
	}
	shf.r.wrap.b32 	%r8230, %r8229, %r8228, 14;
	shf.r.wrap.b32 	%r8231, %r8228, %r8229, 14;
	mov.b64 	%rd12025, {%r8231, %r8230};
	shf.r.wrap.b32 	%r8232, %r8229, %r8228, 18;
	shf.r.wrap.b32 	%r8233, %r8228, %r8229, 18;
	mov.b64 	%rd12026, {%r8233, %r8232};
	xor.b64  	%rd12027, %rd12026, %rd12025;
	shf.l.wrap.b32 	%r8234, %r8228, %r8229, 23;
	shf.l.wrap.b32 	%r8235, %r8229, %r8228, 23;
	mov.b64 	%rd12028, {%r8235, %r8234};
	xor.b64  	%rd12029, %rd12027, %rd12028;
	xor.b64  	%rd12030, %rd11984, %rd11957;
	and.b64  	%rd12031, %rd12011, %rd12030;
	xor.b64  	%rd12032, %rd12031, %rd11957;
	add.s64 	%rd12033, %rd11930, %rd18808;
	ld.const.u64 	%rd12034, [%rd12024];
	add.s64 	%rd12035, %rd12033, %rd12034;
	add.s64 	%rd12036, %rd12035, %rd12032;
	add.s64 	%rd12037, %rd12036, %rd12029;
	add.s64 	%rd12038, %rd12037, %rd11941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8236,%dummy}, %rd12022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8237}, %rd12022;
	}
	shf.r.wrap.b32 	%r8238, %r8237, %r8236, 28;
	shf.r.wrap.b32 	%r8239, %r8236, %r8237, 28;
	mov.b64 	%rd12039, {%r8239, %r8238};
	shf.l.wrap.b32 	%r8240, %r8236, %r8237, 30;
	shf.l.wrap.b32 	%r8241, %r8237, %r8236, 30;
	mov.b64 	%rd12040, {%r8241, %r8240};
	xor.b64  	%rd12041, %rd12040, %rd12039;
	shf.l.wrap.b32 	%r8242, %r8236, %r8237, 25;
	shf.l.wrap.b32 	%r8243, %r8237, %r8236, 25;
	mov.b64 	%rd12042, {%r8243, %r8242};
	xor.b64  	%rd12043, %rd12041, %rd12042;
	and.b64  	%rd12044, %rd12022, %rd11995;
	xor.b64  	%rd12045, %rd12022, %rd11995;
	and.b64  	%rd12046, %rd12045, %rd11968;
	or.b64  	%rd12047, %rd12046, %rd12044;
	add.s64 	%rd12048, %rd12037, %rd12047;
	add.s64 	%rd12049, %rd12048, %rd12043;
	add.s32 	%r8244, %r13015, 9;
	mul.wide.s32 	%rd12050, %r8244, 8;
	add.s64 	%rd12051, %rd18514, %rd12050;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8245,%dummy}, %rd12038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8246}, %rd12038;
	}
	shf.r.wrap.b32 	%r8247, %r8246, %r8245, 14;
	shf.r.wrap.b32 	%r8248, %r8245, %r8246, 14;
	mov.b64 	%rd12052, {%r8248, %r8247};
	shf.r.wrap.b32 	%r8249, %r8246, %r8245, 18;
	shf.r.wrap.b32 	%r8250, %r8245, %r8246, 18;
	mov.b64 	%rd12053, {%r8250, %r8249};
	xor.b64  	%rd12054, %rd12053, %rd12052;
	shf.l.wrap.b32 	%r8251, %r8245, %r8246, 23;
	shf.l.wrap.b32 	%r8252, %r8246, %r8245, 23;
	mov.b64 	%rd12055, {%r8252, %r8251};
	xor.b64  	%rd12056, %rd12054, %rd12055;
	xor.b64  	%rd12057, %rd12011, %rd11984;
	and.b64  	%rd12058, %rd12038, %rd12057;
	xor.b64  	%rd12059, %rd12058, %rd11984;
	add.s64 	%rd12060, %rd11957, %rd18807;
	ld.const.u64 	%rd12061, [%rd12051];
	add.s64 	%rd12062, %rd12060, %rd12061;
	add.s64 	%rd12063, %rd12062, %rd12059;
	add.s64 	%rd12064, %rd12063, %rd12056;
	add.s64 	%rd12065, %rd12064, %rd11968;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8253,%dummy}, %rd12049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8254}, %rd12049;
	}
	shf.r.wrap.b32 	%r8255, %r8254, %r8253, 28;
	shf.r.wrap.b32 	%r8256, %r8253, %r8254, 28;
	mov.b64 	%rd12066, {%r8256, %r8255};
	shf.l.wrap.b32 	%r8257, %r8253, %r8254, 30;
	shf.l.wrap.b32 	%r8258, %r8254, %r8253, 30;
	mov.b64 	%rd12067, {%r8258, %r8257};
	xor.b64  	%rd12068, %rd12067, %rd12066;
	shf.l.wrap.b32 	%r8259, %r8253, %r8254, 25;
	shf.l.wrap.b32 	%r8260, %r8254, %r8253, 25;
	mov.b64 	%rd12069, {%r8260, %r8259};
	xor.b64  	%rd12070, %rd12068, %rd12069;
	and.b64  	%rd12071, %rd12049, %rd12022;
	xor.b64  	%rd12072, %rd12049, %rd12022;
	and.b64  	%rd12073, %rd12072, %rd11995;
	or.b64  	%rd12074, %rd12073, %rd12071;
	add.s64 	%rd12075, %rd12064, %rd12074;
	add.s64 	%rd12076, %rd12075, %rd12070;
	add.s32 	%r8261, %r13015, 10;
	mul.wide.s32 	%rd12077, %r8261, 8;
	add.s64 	%rd12078, %rd18514, %rd12077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8262,%dummy}, %rd12065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8263}, %rd12065;
	}
	shf.r.wrap.b32 	%r8264, %r8263, %r8262, 14;
	shf.r.wrap.b32 	%r8265, %r8262, %r8263, 14;
	mov.b64 	%rd12079, {%r8265, %r8264};
	shf.r.wrap.b32 	%r8266, %r8263, %r8262, 18;
	shf.r.wrap.b32 	%r8267, %r8262, %r8263, 18;
	mov.b64 	%rd12080, {%r8267, %r8266};
	xor.b64  	%rd12081, %rd12080, %rd12079;
	shf.l.wrap.b32 	%r8268, %r8262, %r8263, 23;
	shf.l.wrap.b32 	%r8269, %r8263, %r8262, 23;
	mov.b64 	%rd12082, {%r8269, %r8268};
	xor.b64  	%rd12083, %rd12081, %rd12082;
	xor.b64  	%rd12084, %rd12038, %rd12011;
	and.b64  	%rd12085, %rd12065, %rd12084;
	xor.b64  	%rd12086, %rd12085, %rd12011;
	add.s64 	%rd12087, %rd11984, %rd18806;
	ld.const.u64 	%rd12088, [%rd12078];
	add.s64 	%rd12089, %rd12087, %rd12088;
	add.s64 	%rd12090, %rd12089, %rd12086;
	add.s64 	%rd12091, %rd12090, %rd12083;
	add.s64 	%rd12092, %rd12091, %rd11995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8270,%dummy}, %rd12076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8271}, %rd12076;
	}
	shf.r.wrap.b32 	%r8272, %r8271, %r8270, 28;
	shf.r.wrap.b32 	%r8273, %r8270, %r8271, 28;
	mov.b64 	%rd12093, {%r8273, %r8272};
	shf.l.wrap.b32 	%r8274, %r8270, %r8271, 30;
	shf.l.wrap.b32 	%r8275, %r8271, %r8270, 30;
	mov.b64 	%rd12094, {%r8275, %r8274};
	xor.b64  	%rd12095, %rd12094, %rd12093;
	shf.l.wrap.b32 	%r8276, %r8270, %r8271, 25;
	shf.l.wrap.b32 	%r8277, %r8271, %r8270, 25;
	mov.b64 	%rd12096, {%r8277, %r8276};
	xor.b64  	%rd12097, %rd12095, %rd12096;
	and.b64  	%rd12098, %rd12076, %rd12049;
	xor.b64  	%rd12099, %rd12076, %rd12049;
	and.b64  	%rd12100, %rd12099, %rd12022;
	or.b64  	%rd12101, %rd12100, %rd12098;
	add.s64 	%rd12102, %rd12091, %rd12101;
	add.s64 	%rd12103, %rd12102, %rd12097;
	add.s32 	%r8278, %r13015, 11;
	mul.wide.s32 	%rd12104, %r8278, 8;
	add.s64 	%rd12105, %rd18514, %rd12104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8279,%dummy}, %rd12092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8280}, %rd12092;
	}
	shf.r.wrap.b32 	%r8281, %r8280, %r8279, 14;
	shf.r.wrap.b32 	%r8282, %r8279, %r8280, 14;
	mov.b64 	%rd12106, {%r8282, %r8281};
	shf.r.wrap.b32 	%r8283, %r8280, %r8279, 18;
	shf.r.wrap.b32 	%r8284, %r8279, %r8280, 18;
	mov.b64 	%rd12107, {%r8284, %r8283};
	xor.b64  	%rd12108, %rd12107, %rd12106;
	shf.l.wrap.b32 	%r8285, %r8279, %r8280, 23;
	shf.l.wrap.b32 	%r8286, %r8280, %r8279, 23;
	mov.b64 	%rd12109, {%r8286, %r8285};
	xor.b64  	%rd12110, %rd12108, %rd12109;
	xor.b64  	%rd12111, %rd12065, %rd12038;
	and.b64  	%rd12112, %rd12092, %rd12111;
	xor.b64  	%rd12113, %rd12112, %rd12038;
	add.s64 	%rd12114, %rd12011, %rd18805;
	ld.const.u64 	%rd12115, [%rd12105];
	add.s64 	%rd12116, %rd12114, %rd12115;
	add.s64 	%rd12117, %rd12116, %rd12113;
	add.s64 	%rd12118, %rd12117, %rd12110;
	add.s64 	%rd12119, %rd12118, %rd12022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8287,%dummy}, %rd12103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8288}, %rd12103;
	}
	shf.r.wrap.b32 	%r8289, %r8288, %r8287, 28;
	shf.r.wrap.b32 	%r8290, %r8287, %r8288, 28;
	mov.b64 	%rd12120, {%r8290, %r8289};
	shf.l.wrap.b32 	%r8291, %r8287, %r8288, 30;
	shf.l.wrap.b32 	%r8292, %r8288, %r8287, 30;
	mov.b64 	%rd12121, {%r8292, %r8291};
	xor.b64  	%rd12122, %rd12121, %rd12120;
	shf.l.wrap.b32 	%r8293, %r8287, %r8288, 25;
	shf.l.wrap.b32 	%r8294, %r8288, %r8287, 25;
	mov.b64 	%rd12123, {%r8294, %r8293};
	xor.b64  	%rd12124, %rd12122, %rd12123;
	and.b64  	%rd12125, %rd12103, %rd12076;
	xor.b64  	%rd12126, %rd12103, %rd12076;
	and.b64  	%rd12127, %rd12126, %rd12049;
	or.b64  	%rd12128, %rd12127, %rd12125;
	add.s64 	%rd12129, %rd12118, %rd12128;
	add.s64 	%rd12130, %rd12129, %rd12124;
	add.s32 	%r8295, %r13015, 12;
	mul.wide.s32 	%rd12131, %r8295, 8;
	add.s64 	%rd12132, %rd18514, %rd12131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8296,%dummy}, %rd12119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8297}, %rd12119;
	}
	shf.r.wrap.b32 	%r8298, %r8297, %r8296, 14;
	shf.r.wrap.b32 	%r8299, %r8296, %r8297, 14;
	mov.b64 	%rd12133, {%r8299, %r8298};
	shf.r.wrap.b32 	%r8300, %r8297, %r8296, 18;
	shf.r.wrap.b32 	%r8301, %r8296, %r8297, 18;
	mov.b64 	%rd12134, {%r8301, %r8300};
	xor.b64  	%rd12135, %rd12134, %rd12133;
	shf.l.wrap.b32 	%r8302, %r8296, %r8297, 23;
	shf.l.wrap.b32 	%r8303, %r8297, %r8296, 23;
	mov.b64 	%rd12136, {%r8303, %r8302};
	xor.b64  	%rd12137, %rd12135, %rd12136;
	xor.b64  	%rd12138, %rd12092, %rd12065;
	and.b64  	%rd12139, %rd12119, %rd12138;
	xor.b64  	%rd12140, %rd12139, %rd12065;
	add.s64 	%rd12141, %rd12038, %rd18804;
	ld.const.u64 	%rd12142, [%rd12132];
	add.s64 	%rd12143, %rd12141, %rd12142;
	add.s64 	%rd12144, %rd12143, %rd12140;
	add.s64 	%rd12145, %rd12144, %rd12137;
	add.s64 	%rd18816, %rd12145, %rd12049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8304,%dummy}, %rd12130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8305}, %rd12130;
	}
	shf.r.wrap.b32 	%r8306, %r8305, %r8304, 28;
	shf.r.wrap.b32 	%r8307, %r8304, %r8305, 28;
	mov.b64 	%rd12146, {%r8307, %r8306};
	shf.l.wrap.b32 	%r8308, %r8304, %r8305, 30;
	shf.l.wrap.b32 	%r8309, %r8305, %r8304, 30;
	mov.b64 	%rd12147, {%r8309, %r8308};
	xor.b64  	%rd12148, %rd12147, %rd12146;
	shf.l.wrap.b32 	%r8310, %r8304, %r8305, 25;
	shf.l.wrap.b32 	%r8311, %r8305, %r8304, 25;
	mov.b64 	%rd12149, {%r8311, %r8310};
	xor.b64  	%rd12150, %rd12148, %rd12149;
	and.b64  	%rd12151, %rd12130, %rd12103;
	xor.b64  	%rd12152, %rd12130, %rd12103;
	and.b64  	%rd12153, %rd12152, %rd12076;
	or.b64  	%rd12154, %rd12153, %rd12151;
	add.s64 	%rd12155, %rd12145, %rd12154;
	add.s64 	%rd18812, %rd12155, %rd12150;
	add.s32 	%r8312, %r13015, 13;
	mul.wide.s32 	%rd12156, %r8312, 8;
	add.s64 	%rd12157, %rd18514, %rd12156;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8313,%dummy}, %rd18816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8314}, %rd18816;
	}
	shf.r.wrap.b32 	%r8315, %r8314, %r8313, 14;
	shf.r.wrap.b32 	%r8316, %r8313, %r8314, 14;
	mov.b64 	%rd12158, {%r8316, %r8315};
	shf.r.wrap.b32 	%r8317, %r8314, %r8313, 18;
	shf.r.wrap.b32 	%r8318, %r8313, %r8314, 18;
	mov.b64 	%rd12159, {%r8318, %r8317};
	xor.b64  	%rd12160, %rd12159, %rd12158;
	shf.l.wrap.b32 	%r8319, %r8313, %r8314, 23;
	shf.l.wrap.b32 	%r8320, %r8314, %r8313, 23;
	mov.b64 	%rd12161, {%r8320, %r8319};
	xor.b64  	%rd12162, %rd12160, %rd12161;
	xor.b64  	%rd12163, %rd12119, %rd12092;
	and.b64  	%rd12164, %rd18816, %rd12163;
	xor.b64  	%rd12165, %rd12164, %rd12092;
	add.s64 	%rd12166, %rd12065, %rd18803;
	ld.const.u64 	%rd12167, [%rd12157];
	add.s64 	%rd12168, %rd12166, %rd12167;
	add.s64 	%rd12169, %rd12168, %rd12165;
	add.s64 	%rd12170, %rd12169, %rd12162;
	add.s64 	%rd18815, %rd12170, %rd12076;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8321,%dummy}, %rd18812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8322}, %rd18812;
	}
	shf.r.wrap.b32 	%r8323, %r8322, %r8321, 28;
	shf.r.wrap.b32 	%r8324, %r8321, %r8322, 28;
	mov.b64 	%rd12171, {%r8324, %r8323};
	shf.l.wrap.b32 	%r8325, %r8321, %r8322, 30;
	shf.l.wrap.b32 	%r8326, %r8322, %r8321, 30;
	mov.b64 	%rd12172, {%r8326, %r8325};
	xor.b64  	%rd12173, %rd12172, %rd12171;
	shf.l.wrap.b32 	%r8327, %r8321, %r8322, 25;
	shf.l.wrap.b32 	%r8328, %r8322, %r8321, 25;
	mov.b64 	%rd12174, {%r8328, %r8327};
	xor.b64  	%rd12175, %rd12173, %rd12174;
	and.b64  	%rd12176, %rd18812, %rd12130;
	xor.b64  	%rd12177, %rd18812, %rd12130;
	and.b64  	%rd12178, %rd12177, %rd12103;
	or.b64  	%rd12179, %rd12178, %rd12176;
	add.s64 	%rd12180, %rd12170, %rd12179;
	add.s64 	%rd18811, %rd12180, %rd12175;
	add.s32 	%r8329, %r13015, 14;
	mul.wide.s32 	%rd12181, %r8329, 8;
	add.s64 	%rd12182, %rd18514, %rd12181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8330,%dummy}, %rd18815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8331}, %rd18815;
	}
	shf.r.wrap.b32 	%r8332, %r8331, %r8330, 14;
	shf.r.wrap.b32 	%r8333, %r8330, %r8331, 14;
	mov.b64 	%rd12183, {%r8333, %r8332};
	shf.r.wrap.b32 	%r8334, %r8331, %r8330, 18;
	shf.r.wrap.b32 	%r8335, %r8330, %r8331, 18;
	mov.b64 	%rd12184, {%r8335, %r8334};
	xor.b64  	%rd12185, %rd12184, %rd12183;
	shf.l.wrap.b32 	%r8336, %r8330, %r8331, 23;
	shf.l.wrap.b32 	%r8337, %r8331, %r8330, 23;
	mov.b64 	%rd12186, {%r8337, %r8336};
	xor.b64  	%rd12187, %rd12185, %rd12186;
	xor.b64  	%rd12188, %rd18816, %rd12119;
	and.b64  	%rd12189, %rd18815, %rd12188;
	xor.b64  	%rd12190, %rd12189, %rd12119;
	add.s64 	%rd12191, %rd12092, %rd18802;
	ld.const.u64 	%rd12192, [%rd12182];
	add.s64 	%rd12193, %rd12191, %rd12192;
	add.s64 	%rd12194, %rd12193, %rd12190;
	add.s64 	%rd12195, %rd12194, %rd12187;
	add.s64 	%rd18814, %rd12195, %rd12103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8338,%dummy}, %rd18811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8339}, %rd18811;
	}
	shf.r.wrap.b32 	%r8340, %r8339, %r8338, 28;
	shf.r.wrap.b32 	%r8341, %r8338, %r8339, 28;
	mov.b64 	%rd12196, {%r8341, %r8340};
	shf.l.wrap.b32 	%r8342, %r8338, %r8339, 30;
	shf.l.wrap.b32 	%r8343, %r8339, %r8338, 30;
	mov.b64 	%rd12197, {%r8343, %r8342};
	xor.b64  	%rd12198, %rd12197, %rd12196;
	shf.l.wrap.b32 	%r8344, %r8338, %r8339, 25;
	shf.l.wrap.b32 	%r8345, %r8339, %r8338, 25;
	mov.b64 	%rd12199, {%r8345, %r8344};
	xor.b64  	%rd12200, %rd12198, %rd12199;
	and.b64  	%rd12201, %rd18811, %rd18812;
	xor.b64  	%rd12202, %rd18811, %rd18812;
	and.b64  	%rd12203, %rd12202, %rd12130;
	or.b64  	%rd12204, %rd12203, %rd12201;
	add.s64 	%rd12205, %rd12195, %rd12204;
	add.s64 	%rd18810, %rd12205, %rd12200;
	add.s32 	%r8346, %r13015, 15;
	mul.wide.s32 	%rd12206, %r8346, 8;
	add.s64 	%rd12207, %rd18514, %rd12206;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8347,%dummy}, %rd18814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8348}, %rd18814;
	}
	shf.r.wrap.b32 	%r8349, %r8348, %r8347, 14;
	shf.r.wrap.b32 	%r8350, %r8347, %r8348, 14;
	mov.b64 	%rd12208, {%r8350, %r8349};
	shf.r.wrap.b32 	%r8351, %r8348, %r8347, 18;
	shf.r.wrap.b32 	%r8352, %r8347, %r8348, 18;
	mov.b64 	%rd12209, {%r8352, %r8351};
	xor.b64  	%rd12210, %rd12209, %rd12208;
	shf.l.wrap.b32 	%r8353, %r8347, %r8348, 23;
	shf.l.wrap.b32 	%r8354, %r8348, %r8347, 23;
	mov.b64 	%rd12211, {%r8354, %r8353};
	xor.b64  	%rd12212, %rd12210, %rd12211;
	xor.b64  	%rd12213, %rd18815, %rd18816;
	and.b64  	%rd12214, %rd18814, %rd12213;
	xor.b64  	%rd12215, %rd12214, %rd18816;
	add.s64 	%rd12216, %rd12119, %rd18801;
	ld.const.u64 	%rd12217, [%rd12207];
	add.s64 	%rd12218, %rd12216, %rd12217;
	add.s64 	%rd12219, %rd12218, %rd12215;
	add.s64 	%rd12220, %rd12219, %rd12212;
	add.s64 	%rd18813, %rd12220, %rd12130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8355,%dummy}, %rd18810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8356}, %rd18810;
	}
	shf.r.wrap.b32 	%r8357, %r8356, %r8355, 28;
	shf.r.wrap.b32 	%r8358, %r8355, %r8356, 28;
	mov.b64 	%rd12221, {%r8358, %r8357};
	shf.l.wrap.b32 	%r8359, %r8355, %r8356, 30;
	shf.l.wrap.b32 	%r8360, %r8356, %r8355, 30;
	mov.b64 	%rd12222, {%r8360, %r8359};
	xor.b64  	%rd12223, %rd12222, %rd12221;
	shf.l.wrap.b32 	%r8361, %r8355, %r8356, 25;
	shf.l.wrap.b32 	%r8362, %r8356, %r8355, 25;
	mov.b64 	%rd12224, {%r8362, %r8361};
	xor.b64  	%rd12225, %rd12223, %rd12224;
	and.b64  	%rd12226, %rd18810, %rd18811;
	xor.b64  	%rd12227, %rd18810, %rd18811;
	and.b64  	%rd12228, %rd12227, %rd18812;
	or.b64  	%rd12229, %rd12228, %rd12226;
	add.s64 	%rd12230, %rd12220, %rd12229;
	add.s64 	%rd18809, %rd12230, %rd12225;
	add.s32 	%r13015, %r13015, 16;
	setp.lt.s32	%p144, %r13015, 80;
	@%p144 bra 	BB0_233;

	setp.eq.s32	%p206, %r2, 0;
	ld.param.u64 	%rd18511, [m01800_init_param_4];
	mov.u64 	%rd18510, 6620516959819538809;
	mov.u64 	%rd18488, 2270897969802886507;
	mov.u64 	%rd18487, -7276294671716946913;
	mov.u64 	%rd18486, 5840696475078001361;
	mov.u64 	%rd18485, -6534734903238641935;
	mov.u64 	%rd18484, 4354685564936845355;
	mov.u64 	%rd18483, -4942790177534073029;
	mov.u64 	%rd18482, 7640891576956012808;
	mov.u32 	%r13039, 0;
	mul.wide.s32 	%rd12231, %r1, 672;
	add.s64 	%rd12232, %rd18511, %rd12231;
	add.s64 	%rd921, %rd18809, %rd18785;
	st.global.u64 	[%rd12232], %rd921;
	add.s64 	%rd12233, %rd18810, %rd18784;
	st.global.u64 	[%rd12232+8], %rd12233;
	add.s64 	%rd12234, %rd18811, %rd18783;
	st.global.u64 	[%rd12232+16], %rd12234;
	add.s64 	%rd12235, %rd18812, %rd18782;
	st.global.u64 	[%rd12232+24], %rd12235;
	add.s64 	%rd12236, %rd18813, %rd18781;
	st.global.u64 	[%rd12232+32], %rd12236;
	add.s64 	%rd12237, %rd18814, %rd18780;
	st.global.u64 	[%rd12232+40], %rd12237;
	add.s64 	%rd12238, %rd18815, %rd18779;
	st.global.u64 	[%rd12232+48], %rd12238;
	add.s64 	%rd12239, %rd18816, %rd18778;
	st.global.u64 	[%rd12232+56], %rd12239;
	st.local.u64 	[%rd1], %rd18482;
	st.local.u64 	[%rd1+8], %rd18483;
	st.local.u64 	[%rd1+16], %rd18484;
	st.local.u64 	[%rd1+24], %rd18485;
	st.local.u64 	[%rd1+32], %rd18486;
	st.local.u64 	[%rd1+40], %rd18487;
	st.local.u64 	[%rd1+48], %rd18488;
	st.local.u64 	[%rd1+56], %rd18510;
	st.local.u32 	[%rd1+192], %r13039;
	@%p206 bra 	BB0_266;

	add.s32 	%r340, %r2, -128;
	mov.u32 	%r8366, 1;
	max.u32 	%r341, %r2, %r8366;
	and.b32  	%r342, %r341, 3;
	add.s64 	%rd925, %rd1463, 7;
	add.s64 	%rd924, %rd89, 7;
	mov.u32 	%r13016, 0;
	mov.u32 	%r13017, %r13016;
	bra.uni 	BB0_236;

BB0_339:
	ld.local.u32 	%r13016, [%rd1+192];

BB0_236:
	add.s32 	%r8367, %r13016, %r2;
	st.local.u32 	[%rd1+192], %r8367;
	and.b32  	%r345, %r13016, 127;
	add.s32 	%r8368, %r345, %r2;
	setp.lt.s32	%p146, %r8368, 128;
	@%p146 bra 	BB0_256;
	bra.uni 	BB0_237;

BB0_256:
	setp.eq.s32	%p159, %r342, 0;
	mov.u32 	%r13038, 0;
	@%p159 bra 	BB0_262;

	setp.eq.s32	%p160, %r342, 1;
	mov.u32 	%r13034, 0;
	@%p160 bra 	BB0_261;

	setp.eq.s32	%p161, %r342, 2;
	mov.u32 	%r13032, 0;
	@%p161 bra 	BB0_260;

	ld.local.u8 	%rs237, [%rd925];
	xor.b32  	%r9140, %r345, 7;
	cvt.u64.u32	%rd13302, %r9140;
	add.s64 	%rd13303, %rd89, %rd13302;
	st.local.u8 	[%rd13303], %rs237;
	add.s32 	%r345, %r345, 1;
	mov.u32 	%r13032, 1;

BB0_260:
	xor.b32  	%r9141, %r13032, 7;
	cvt.u64.u32	%rd13304, %r9141;
	add.s64 	%rd13305, %rd1463, %rd13304;
	ld.local.u8 	%rs238, [%rd13305];
	xor.b32  	%r9142, %r345, 7;
	cvt.s64.s32	%rd13306, %r9142;
	add.s64 	%rd13307, %rd89, %rd13306;
	st.local.u8 	[%rd13307], %rs238;
	add.s32 	%r345, %r345, 1;
	add.s32 	%r13034, %r13032, 1;

BB0_261:
	xor.b32  	%r9143, %r13034, 7;
	cvt.s64.s32	%rd13308, %r9143;
	add.s64 	%rd13309, %rd1463, %rd13308;
	ld.local.u8 	%rs239, [%rd13309];
	xor.b32  	%r9144, %r345, 7;
	cvt.s64.s32	%rd13310, %r9144;
	add.s64 	%rd13311, %rd89, %rd13310;
	st.local.u8 	[%rd13311], %rs239;
	add.s32 	%r345, %r345, 1;
	add.s32 	%r13038, %r13034, 1;

BB0_262:
	setp.lt.u32	%p162, %r341, 4;
	@%p162 bra 	BB0_264;

BB0_263:
	xor.b32  	%r9145, %r13038, 7;
	cvt.s64.s32	%rd13312, %r9145;
	add.s64 	%rd13313, %rd1463, %rd13312;
	ld.local.u8 	%rs240, [%rd13313];
	xor.b32  	%r9146, %r345, 7;
	cvt.s64.s32	%rd13314, %r9146;
	add.s64 	%rd13315, %rd89, %rd13314;
	st.local.u8 	[%rd13315], %rs240;
	add.s32 	%r9147, %r13038, 1;
	xor.b32  	%r9148, %r9147, 7;
	cvt.s64.s32	%rd13316, %r9148;
	add.s64 	%rd13317, %rd1463, %rd13316;
	ld.local.u8 	%rs241, [%rd13317];
	add.s32 	%r9149, %r345, 1;
	xor.b32  	%r9150, %r9149, 7;
	cvt.s64.s32	%rd13318, %r9150;
	add.s64 	%rd13319, %rd89, %rd13318;
	st.local.u8 	[%rd13319], %rs241;
	add.s32 	%r9151, %r13038, 2;
	xor.b32  	%r9152, %r9151, 7;
	cvt.s64.s32	%rd13320, %r9152;
	add.s64 	%rd13321, %rd1463, %rd13320;
	ld.local.u8 	%rs242, [%rd13321];
	add.s32 	%r9153, %r345, 2;
	xor.b32  	%r9154, %r9153, 7;
	cvt.s64.s32	%rd13322, %r9154;
	add.s64 	%rd13323, %rd89, %rd13322;
	st.local.u8 	[%rd13323], %rs242;
	add.s32 	%r9155, %r13038, 3;
	xor.b32  	%r9156, %r9155, 7;
	cvt.s64.s32	%rd13324, %r9156;
	add.s64 	%rd13325, %rd1463, %rd13324;
	ld.local.u8 	%rs243, [%rd13325];
	add.s32 	%r9157, %r345, 3;
	xor.b32  	%r9158, %r9157, 7;
	cvt.s64.s32	%rd13326, %r9158;
	add.s64 	%rd13327, %rd89, %rd13326;
	st.local.u8 	[%rd13327], %rs243;
	add.s32 	%r13038, %r13038, 4;
	setp.lt.s32	%p163, %r13038, %r2;
	add.s32 	%r345, %r345, 4;
	@%p163 bra 	BB0_263;
	bra.uni 	BB0_264;

BB0_237:
	sub.s32 	%r346, %r2137, %r345;
	max.u32 	%r347, %r346, %r8366;
	and.b32  	%r348, %r347, 3;
	setp.eq.s32	%p147, %r348, 0;
	mov.u32 	%r13024, 0;
	mov.u32 	%r13025, %r345;
	@%p147 bra 	BB0_243;

	setp.eq.s32	%p148, %r348, 1;
	mov.u32 	%r13020, 0;
	mov.u32 	%r13021, %r345;
	@%p148 bra 	BB0_242;

	setp.eq.s32	%p149, %r348, 2;
	mov.u32 	%r13018, 0;
	mov.u32 	%r13019, %r345;
	@%p149 bra 	BB0_241;

	ld.local.u8 	%rs223, [%rd925];
	xor.b32  	%r8375, %r345, 7;
	cvt.u64.u32	%rd12249, %r8375;
	add.s64 	%rd12250, %rd89, %rd12249;
	st.local.u8 	[%rd12250], %rs223;
	add.s32 	%r13019, %r345, 1;
	mov.u32 	%r13018, %r8366;

BB0_241:
	xor.b32  	%r8376, %r13018, 7;
	cvt.u64.u32	%rd12251, %r8376;
	add.s64 	%rd12252, %rd1463, %rd12251;
	ld.local.u8 	%rs224, [%rd12252];
	xor.b32  	%r8377, %r13019, 7;
	cvt.s64.s32	%rd12253, %r8377;
	add.s64 	%rd12254, %rd89, %rd12253;
	st.local.u8 	[%rd12254], %rs224;
	add.s32 	%r13021, %r13019, 1;
	add.s32 	%r13020, %r13018, 1;

BB0_242:
	xor.b32  	%r8378, %r13020, 7;
	cvt.s64.s32	%rd12255, %r8378;
	add.s64 	%rd12256, %rd1463, %rd12255;
	ld.local.u8 	%rs225, [%rd12256];
	xor.b32  	%r8379, %r13021, 7;
	cvt.s64.s32	%rd12257, %r8379;
	add.s64 	%rd12258, %rd89, %rd12257;
	st.local.u8 	[%rd12258], %rs225;
	add.s32 	%r13025, %r13021, 1;
	add.s32 	%r13024, %r13020, 1;

BB0_243:
	setp.lt.u32	%p150, %r347, 4;
	@%p150 bra 	BB0_245;

BB0_244:
	xor.b32  	%r8380, %r13024, 7;
	cvt.s64.s32	%rd12259, %r8380;
	add.s64 	%rd12260, %rd1463, %rd12259;
	ld.local.u8 	%rs226, [%rd12260];
	xor.b32  	%r8381, %r13025, 7;
	cvt.s64.s32	%rd12261, %r8381;
	add.s64 	%rd12262, %rd89, %rd12261;
	st.local.u8 	[%rd12262], %rs226;
	add.s32 	%r8382, %r13024, 1;
	xor.b32  	%r8383, %r8382, 7;
	cvt.s64.s32	%rd12263, %r8383;
	add.s64 	%rd12264, %rd1463, %rd12263;
	ld.local.u8 	%rs227, [%rd12264];
	add.s32 	%r8384, %r13025, 1;
	xor.b32  	%r8385, %r8384, 7;
	cvt.s64.s32	%rd12265, %r8385;
	add.s64 	%rd12266, %rd89, %rd12265;
	st.local.u8 	[%rd12266], %rs227;
	add.s32 	%r8386, %r13024, 2;
	xor.b32  	%r8387, %r8386, 7;
	cvt.s64.s32	%rd12267, %r8387;
	add.s64 	%rd12268, %rd1463, %rd12267;
	ld.local.u8 	%rs228, [%rd12268];
	add.s32 	%r8388, %r13025, 2;
	xor.b32  	%r8389, %r8388, 7;
	cvt.s64.s32	%rd12269, %r8389;
	add.s64 	%rd12270, %rd89, %rd12269;
	st.local.u8 	[%rd12270], %rs228;
	add.s32 	%r8390, %r13024, 3;
	xor.b32  	%r8391, %r8390, 7;
	cvt.s64.s32	%rd12271, %r8391;
	add.s64 	%rd12272, %rd1463, %rd12271;
	ld.local.u8 	%rs229, [%rd12272];
	add.s32 	%r8392, %r13025, 3;
	xor.b32  	%r8393, %r8392, 7;
	cvt.s64.s32	%rd12273, %r8393;
	add.s64 	%rd12274, %rd89, %rd12273;
	st.local.u8 	[%rd12274], %rs229;
	add.s32 	%r13024, %r13024, 4;
	setp.lt.s32	%p151, %r13024, %r346;
	add.s32 	%r13025, %r13025, 4;
	@%p151 bra 	BB0_244;

BB0_245:
	ld.local.u64 	%rd926, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8395,%dummy}, %rd926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8396}, %rd926;
	}
	shf.r.wrap.b32 	%r8397, %r8396, %r8395, 14;
	shf.r.wrap.b32 	%r8398, %r8395, %r8396, 14;
	mov.b64 	%rd12275, {%r8398, %r8397};
	shf.r.wrap.b32 	%r8399, %r8396, %r8395, 18;
	shf.r.wrap.b32 	%r8400, %r8395, %r8396, 18;
	mov.b64 	%rd12276, {%r8400, %r8399};
	xor.b64  	%rd12277, %rd12276, %rd12275;
	shf.l.wrap.b32 	%r8401, %r8395, %r8396, 23;
	shf.l.wrap.b32 	%r8402, %r8396, %r8395, 23;
	mov.b64 	%rd12278, {%r8402, %r8401};
	xor.b64  	%rd12279, %rd12277, %rd12278;
	ld.local.u64 	%rd927, [%rd1+48];
	ld.local.u64 	%rd928, [%rd1+40];
	xor.b64  	%rd12280, %rd927, %rd928;
	and.b64  	%rd12281, %rd12280, %rd926;
	xor.b64  	%rd12282, %rd12281, %rd927;
	ld.local.u64 	%rd929, [%rd1+56];
	ld.local.u64 	%rd18841, [%rd1+64];
	add.s64 	%rd12283, %rd929, %rd18841;
	add.s64 	%rd12284, %rd12283, %rd18610;
	add.s64 	%rd12285, %rd12284, %rd12282;
	add.s64 	%rd12286, %rd12285, %rd12279;
	ld.local.u64 	%rd931, [%rd1+24];
	add.s64 	%rd12287, %rd12286, %rd931;
	ld.local.u64 	%rd932, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8403,%dummy}, %rd932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8404}, %rd932;
	}
	shf.r.wrap.b32 	%r8405, %r8404, %r8403, 28;
	shf.r.wrap.b32 	%r8406, %r8403, %r8404, 28;
	mov.b64 	%rd12288, {%r8406, %r8405};
	shf.l.wrap.b32 	%r8407, %r8403, %r8404, 30;
	shf.l.wrap.b32 	%r8408, %r8404, %r8403, 30;
	mov.b64 	%rd12289, {%r8408, %r8407};
	xor.b64  	%rd12290, %rd12289, %rd12288;
	shf.l.wrap.b32 	%r8409, %r8403, %r8404, 25;
	shf.l.wrap.b32 	%r8410, %r8404, %r8403, 25;
	mov.b64 	%rd12291, {%r8410, %r8409};
	xor.b64  	%rd12292, %rd12290, %rd12291;
	ld.local.u64 	%rd933, [%rd1+8];
	and.b64  	%rd12293, %rd933, %rd932;
	xor.b64  	%rd12294, %rd933, %rd932;
	ld.local.u64 	%rd934, [%rd1+16];
	and.b64  	%rd12295, %rd934, %rd12294;
	or.b64  	%rd12296, %rd12295, %rd12293;
	add.s64 	%rd12297, %rd12286, %rd12296;
	add.s64 	%rd12298, %rd12297, %rd12292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8411,%dummy}, %rd12287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8412}, %rd12287;
	}
	shf.r.wrap.b32 	%r8413, %r8412, %r8411, 14;
	shf.r.wrap.b32 	%r8414, %r8411, %r8412, 14;
	mov.b64 	%rd12299, {%r8414, %r8413};
	shf.r.wrap.b32 	%r8415, %r8412, %r8411, 18;
	shf.r.wrap.b32 	%r8416, %r8411, %r8412, 18;
	mov.b64 	%rd12300, {%r8416, %r8415};
	xor.b64  	%rd12301, %rd12300, %rd12299;
	shf.l.wrap.b32 	%r8417, %r8411, %r8412, 23;
	shf.l.wrap.b32 	%r8418, %r8412, %r8411, 23;
	mov.b64 	%rd12302, {%r8418, %r8417};
	xor.b64  	%rd12303, %rd12301, %rd12302;
	xor.b64  	%rd12304, %rd928, %rd926;
	and.b64  	%rd12305, %rd12287, %rd12304;
	xor.b64  	%rd12306, %rd12305, %rd928;
	ld.local.u64 	%rd18842, [%rd1+72];
	add.s64 	%rd12307, %rd927, %rd18842;
	add.s64 	%rd12308, %rd12307, %rd18609;
	add.s64 	%rd12309, %rd12308, %rd12306;
	add.s64 	%rd12310, %rd12309, %rd12303;
	add.s64 	%rd12311, %rd12310, %rd934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8419,%dummy}, %rd12298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8420}, %rd12298;
	}
	shf.r.wrap.b32 	%r8421, %r8420, %r8419, 28;
	shf.r.wrap.b32 	%r8422, %r8419, %r8420, 28;
	mov.b64 	%rd12312, {%r8422, %r8421};
	shf.l.wrap.b32 	%r8423, %r8419, %r8420, 30;
	shf.l.wrap.b32 	%r8424, %r8420, %r8419, 30;
	mov.b64 	%rd12313, {%r8424, %r8423};
	xor.b64  	%rd12314, %rd12313, %rd12312;
	shf.l.wrap.b32 	%r8425, %r8419, %r8420, 25;
	shf.l.wrap.b32 	%r8426, %r8420, %r8419, 25;
	mov.b64 	%rd12315, {%r8426, %r8425};
	xor.b64  	%rd12316, %rd12314, %rd12315;
	and.b64  	%rd12317, %rd12298, %rd932;
	xor.b64  	%rd12318, %rd12298, %rd932;
	and.b64  	%rd12319, %rd12318, %rd933;
	or.b64  	%rd12320, %rd12319, %rd12317;
	add.s64 	%rd12321, %rd12310, %rd12320;
	add.s64 	%rd12322, %rd12321, %rd12316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8427,%dummy}, %rd12311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8428}, %rd12311;
	}
	shf.r.wrap.b32 	%r8429, %r8428, %r8427, 14;
	shf.r.wrap.b32 	%r8430, %r8427, %r8428, 14;
	mov.b64 	%rd12323, {%r8430, %r8429};
	shf.r.wrap.b32 	%r8431, %r8428, %r8427, 18;
	shf.r.wrap.b32 	%r8432, %r8427, %r8428, 18;
	mov.b64 	%rd12324, {%r8432, %r8431};
	xor.b64  	%rd12325, %rd12324, %rd12323;
	shf.l.wrap.b32 	%r8433, %r8427, %r8428, 23;
	shf.l.wrap.b32 	%r8434, %r8428, %r8427, 23;
	mov.b64 	%rd12326, {%r8434, %r8433};
	xor.b64  	%rd12327, %rd12325, %rd12326;
	xor.b64  	%rd12328, %rd12287, %rd926;
	and.b64  	%rd12329, %rd12311, %rd12328;
	xor.b64  	%rd12330, %rd12329, %rd926;
	ld.local.u64 	%rd18843, [%rd1+80];
	add.s64 	%rd12331, %rd928, %rd18843;
	add.s64 	%rd12332, %rd12331, %rd18608;
	add.s64 	%rd12333, %rd12332, %rd12330;
	add.s64 	%rd12334, %rd12333, %rd12327;
	add.s64 	%rd12335, %rd12334, %rd933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8435,%dummy}, %rd12322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8436}, %rd12322;
	}
	shf.r.wrap.b32 	%r8437, %r8436, %r8435, 28;
	shf.r.wrap.b32 	%r8438, %r8435, %r8436, 28;
	mov.b64 	%rd12336, {%r8438, %r8437};
	shf.l.wrap.b32 	%r8439, %r8435, %r8436, 30;
	shf.l.wrap.b32 	%r8440, %r8436, %r8435, 30;
	mov.b64 	%rd12337, {%r8440, %r8439};
	xor.b64  	%rd12338, %rd12337, %rd12336;
	shf.l.wrap.b32 	%r8441, %r8435, %r8436, 25;
	shf.l.wrap.b32 	%r8442, %r8436, %r8435, 25;
	mov.b64 	%rd12339, {%r8442, %r8441};
	xor.b64  	%rd12340, %rd12338, %rd12339;
	and.b64  	%rd12341, %rd12322, %rd12298;
	xor.b64  	%rd12342, %rd12322, %rd12298;
	and.b64  	%rd12343, %rd12342, %rd932;
	or.b64  	%rd12344, %rd12343, %rd12341;
	add.s64 	%rd12345, %rd12334, %rd12344;
	add.s64 	%rd12346, %rd12345, %rd12340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8443,%dummy}, %rd12335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8444}, %rd12335;
	}
	shf.r.wrap.b32 	%r8445, %r8444, %r8443, 14;
	shf.r.wrap.b32 	%r8446, %r8443, %r8444, 14;
	mov.b64 	%rd12347, {%r8446, %r8445};
	shf.r.wrap.b32 	%r8447, %r8444, %r8443, 18;
	shf.r.wrap.b32 	%r8448, %r8443, %r8444, 18;
	mov.b64 	%rd12348, {%r8448, %r8447};
	xor.b64  	%rd12349, %rd12348, %rd12347;
	shf.l.wrap.b32 	%r8449, %r8443, %r8444, 23;
	shf.l.wrap.b32 	%r8450, %r8444, %r8443, 23;
	mov.b64 	%rd12350, {%r8450, %r8449};
	xor.b64  	%rd12351, %rd12349, %rd12350;
	xor.b64  	%rd12352, %rd12311, %rd12287;
	and.b64  	%rd12353, %rd12335, %rd12352;
	xor.b64  	%rd12354, %rd12353, %rd12287;
	ld.local.u64 	%rd18844, [%rd1+88];
	add.s64 	%rd12355, %rd926, %rd18844;
	add.s64 	%rd12356, %rd12355, %rd18607;
	add.s64 	%rd12357, %rd12356, %rd12354;
	add.s64 	%rd12358, %rd12357, %rd12351;
	add.s64 	%rd12359, %rd12358, %rd932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8451,%dummy}, %rd12346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8452}, %rd12346;
	}
	shf.r.wrap.b32 	%r8453, %r8452, %r8451, 28;
	shf.r.wrap.b32 	%r8454, %r8451, %r8452, 28;
	mov.b64 	%rd12360, {%r8454, %r8453};
	shf.l.wrap.b32 	%r8455, %r8451, %r8452, 30;
	shf.l.wrap.b32 	%r8456, %r8452, %r8451, 30;
	mov.b64 	%rd12361, {%r8456, %r8455};
	xor.b64  	%rd12362, %rd12361, %rd12360;
	shf.l.wrap.b32 	%r8457, %r8451, %r8452, 25;
	shf.l.wrap.b32 	%r8458, %r8452, %r8451, 25;
	mov.b64 	%rd12363, {%r8458, %r8457};
	xor.b64  	%rd12364, %rd12362, %rd12363;
	and.b64  	%rd12365, %rd12346, %rd12322;
	xor.b64  	%rd12366, %rd12346, %rd12322;
	and.b64  	%rd12367, %rd12366, %rd12298;
	or.b64  	%rd12368, %rd12367, %rd12365;
	add.s64 	%rd12369, %rd12358, %rd12368;
	add.s64 	%rd12370, %rd12369, %rd12364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8459,%dummy}, %rd12359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8460}, %rd12359;
	}
	shf.r.wrap.b32 	%r8461, %r8460, %r8459, 14;
	shf.r.wrap.b32 	%r8462, %r8459, %r8460, 14;
	mov.b64 	%rd12371, {%r8462, %r8461};
	shf.r.wrap.b32 	%r8463, %r8460, %r8459, 18;
	shf.r.wrap.b32 	%r8464, %r8459, %r8460, 18;
	mov.b64 	%rd12372, {%r8464, %r8463};
	xor.b64  	%rd12373, %rd12372, %rd12371;
	shf.l.wrap.b32 	%r8465, %r8459, %r8460, 23;
	shf.l.wrap.b32 	%r8466, %r8460, %r8459, 23;
	mov.b64 	%rd12374, {%r8466, %r8465};
	xor.b64  	%rd12375, %rd12373, %rd12374;
	xor.b64  	%rd12376, %rd12335, %rd12311;
	and.b64  	%rd12377, %rd12359, %rd12376;
	xor.b64  	%rd12378, %rd12377, %rd12311;
	ld.local.u64 	%rd18845, [%rd1+96];
	add.s64 	%rd12379, %rd12287, %rd18845;
	add.s64 	%rd12380, %rd12379, %rd18606;
	add.s64 	%rd12381, %rd12380, %rd12378;
	add.s64 	%rd12382, %rd12381, %rd12375;
	add.s64 	%rd12383, %rd12382, %rd12298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8467,%dummy}, %rd12370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8468}, %rd12370;
	}
	shf.r.wrap.b32 	%r8469, %r8468, %r8467, 28;
	shf.r.wrap.b32 	%r8470, %r8467, %r8468, 28;
	mov.b64 	%rd12384, {%r8470, %r8469};
	shf.l.wrap.b32 	%r8471, %r8467, %r8468, 30;
	shf.l.wrap.b32 	%r8472, %r8468, %r8467, 30;
	mov.b64 	%rd12385, {%r8472, %r8471};
	xor.b64  	%rd12386, %rd12385, %rd12384;
	shf.l.wrap.b32 	%r8473, %r8467, %r8468, 25;
	shf.l.wrap.b32 	%r8474, %r8468, %r8467, 25;
	mov.b64 	%rd12387, {%r8474, %r8473};
	xor.b64  	%rd12388, %rd12386, %rd12387;
	and.b64  	%rd12389, %rd12370, %rd12346;
	xor.b64  	%rd12390, %rd12370, %rd12346;
	and.b64  	%rd12391, %rd12390, %rd12322;
	or.b64  	%rd12392, %rd12391, %rd12389;
	add.s64 	%rd12393, %rd12382, %rd12392;
	add.s64 	%rd12394, %rd12393, %rd12388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8475,%dummy}, %rd12383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8476}, %rd12383;
	}
	shf.r.wrap.b32 	%r8477, %r8476, %r8475, 14;
	shf.r.wrap.b32 	%r8478, %r8475, %r8476, 14;
	mov.b64 	%rd12395, {%r8478, %r8477};
	shf.r.wrap.b32 	%r8479, %r8476, %r8475, 18;
	shf.r.wrap.b32 	%r8480, %r8475, %r8476, 18;
	mov.b64 	%rd12396, {%r8480, %r8479};
	xor.b64  	%rd12397, %rd12396, %rd12395;
	shf.l.wrap.b32 	%r8481, %r8475, %r8476, 23;
	shf.l.wrap.b32 	%r8482, %r8476, %r8475, 23;
	mov.b64 	%rd12398, {%r8482, %r8481};
	xor.b64  	%rd12399, %rd12397, %rd12398;
	xor.b64  	%rd12400, %rd12359, %rd12335;
	and.b64  	%rd12401, %rd12383, %rd12400;
	xor.b64  	%rd12402, %rd12401, %rd12335;
	ld.local.u64 	%rd18846, [%rd1+104];
	add.s64 	%rd12403, %rd12311, %rd18846;
	add.s64 	%rd12404, %rd12403, %rd18605;
	add.s64 	%rd12405, %rd12404, %rd12402;
	add.s64 	%rd12406, %rd12405, %rd12399;
	add.s64 	%rd12407, %rd12406, %rd12322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8483,%dummy}, %rd12394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8484}, %rd12394;
	}
	shf.r.wrap.b32 	%r8485, %r8484, %r8483, 28;
	shf.r.wrap.b32 	%r8486, %r8483, %r8484, 28;
	mov.b64 	%rd12408, {%r8486, %r8485};
	shf.l.wrap.b32 	%r8487, %r8483, %r8484, 30;
	shf.l.wrap.b32 	%r8488, %r8484, %r8483, 30;
	mov.b64 	%rd12409, {%r8488, %r8487};
	xor.b64  	%rd12410, %rd12409, %rd12408;
	shf.l.wrap.b32 	%r8489, %r8483, %r8484, 25;
	shf.l.wrap.b32 	%r8490, %r8484, %r8483, 25;
	mov.b64 	%rd12411, {%r8490, %r8489};
	xor.b64  	%rd12412, %rd12410, %rd12411;
	and.b64  	%rd12413, %rd12394, %rd12370;
	xor.b64  	%rd12414, %rd12394, %rd12370;
	and.b64  	%rd12415, %rd12414, %rd12346;
	or.b64  	%rd12416, %rd12415, %rd12413;
	add.s64 	%rd12417, %rd12406, %rd12416;
	add.s64 	%rd12418, %rd12417, %rd12412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8491,%dummy}, %rd12407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8492}, %rd12407;
	}
	shf.r.wrap.b32 	%r8493, %r8492, %r8491, 14;
	shf.r.wrap.b32 	%r8494, %r8491, %r8492, 14;
	mov.b64 	%rd12419, {%r8494, %r8493};
	shf.r.wrap.b32 	%r8495, %r8492, %r8491, 18;
	shf.r.wrap.b32 	%r8496, %r8491, %r8492, 18;
	mov.b64 	%rd12420, {%r8496, %r8495};
	xor.b64  	%rd12421, %rd12420, %rd12419;
	shf.l.wrap.b32 	%r8497, %r8491, %r8492, 23;
	shf.l.wrap.b32 	%r8498, %r8492, %r8491, 23;
	mov.b64 	%rd12422, {%r8498, %r8497};
	xor.b64  	%rd12423, %rd12421, %rd12422;
	xor.b64  	%rd12424, %rd12383, %rd12359;
	and.b64  	%rd12425, %rd12407, %rd12424;
	xor.b64  	%rd12426, %rd12425, %rd12359;
	ld.local.u64 	%rd18847, [%rd1+112];
	add.s64 	%rd12427, %rd12335, %rd18847;
	add.s64 	%rd12428, %rd12427, %rd18604;
	add.s64 	%rd12429, %rd12428, %rd12426;
	add.s64 	%rd12430, %rd12429, %rd12423;
	add.s64 	%rd12431, %rd12430, %rd12346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8499,%dummy}, %rd12418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8500}, %rd12418;
	}
	shf.r.wrap.b32 	%r8501, %r8500, %r8499, 28;
	shf.r.wrap.b32 	%r8502, %r8499, %r8500, 28;
	mov.b64 	%rd12432, {%r8502, %r8501};
	shf.l.wrap.b32 	%r8503, %r8499, %r8500, 30;
	shf.l.wrap.b32 	%r8504, %r8500, %r8499, 30;
	mov.b64 	%rd12433, {%r8504, %r8503};
	xor.b64  	%rd12434, %rd12433, %rd12432;
	shf.l.wrap.b32 	%r8505, %r8499, %r8500, 25;
	shf.l.wrap.b32 	%r8506, %r8500, %r8499, 25;
	mov.b64 	%rd12435, {%r8506, %r8505};
	xor.b64  	%rd12436, %rd12434, %rd12435;
	and.b64  	%rd12437, %rd12418, %rd12394;
	xor.b64  	%rd12438, %rd12418, %rd12394;
	and.b64  	%rd12439, %rd12438, %rd12370;
	or.b64  	%rd12440, %rd12439, %rd12437;
	add.s64 	%rd12441, %rd12430, %rd12440;
	add.s64 	%rd12442, %rd12441, %rd12436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8507,%dummy}, %rd12431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8508}, %rd12431;
	}
	shf.r.wrap.b32 	%r8509, %r8508, %r8507, 14;
	shf.r.wrap.b32 	%r8510, %r8507, %r8508, 14;
	mov.b64 	%rd12443, {%r8510, %r8509};
	shf.r.wrap.b32 	%r8511, %r8508, %r8507, 18;
	shf.r.wrap.b32 	%r8512, %r8507, %r8508, 18;
	mov.b64 	%rd12444, {%r8512, %r8511};
	xor.b64  	%rd12445, %rd12444, %rd12443;
	shf.l.wrap.b32 	%r8513, %r8507, %r8508, 23;
	shf.l.wrap.b32 	%r8514, %r8508, %r8507, 23;
	mov.b64 	%rd12446, {%r8514, %r8513};
	xor.b64  	%rd12447, %rd12445, %rd12446;
	xor.b64  	%rd12448, %rd12407, %rd12383;
	and.b64  	%rd12449, %rd12431, %rd12448;
	xor.b64  	%rd12450, %rd12449, %rd12383;
	ld.local.u64 	%rd18848, [%rd1+120];
	add.s64 	%rd12451, %rd12359, %rd18848;
	add.s64 	%rd12452, %rd12451, %rd18603;
	add.s64 	%rd12453, %rd12452, %rd12450;
	add.s64 	%rd12454, %rd12453, %rd12447;
	add.s64 	%rd12455, %rd12454, %rd12370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8515,%dummy}, %rd12442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8516}, %rd12442;
	}
	shf.r.wrap.b32 	%r8517, %r8516, %r8515, 28;
	shf.r.wrap.b32 	%r8518, %r8515, %r8516, 28;
	mov.b64 	%rd12456, {%r8518, %r8517};
	shf.l.wrap.b32 	%r8519, %r8515, %r8516, 30;
	shf.l.wrap.b32 	%r8520, %r8516, %r8515, 30;
	mov.b64 	%rd12457, {%r8520, %r8519};
	xor.b64  	%rd12458, %rd12457, %rd12456;
	shf.l.wrap.b32 	%r8521, %r8515, %r8516, 25;
	shf.l.wrap.b32 	%r8522, %r8516, %r8515, 25;
	mov.b64 	%rd12459, {%r8522, %r8521};
	xor.b64  	%rd12460, %rd12458, %rd12459;
	and.b64  	%rd12461, %rd12442, %rd12418;
	xor.b64  	%rd12462, %rd12442, %rd12418;
	and.b64  	%rd12463, %rd12462, %rd12394;
	or.b64  	%rd12464, %rd12463, %rd12461;
	add.s64 	%rd12465, %rd12454, %rd12464;
	add.s64 	%rd12466, %rd12465, %rd12460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8523,%dummy}, %rd12455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8524}, %rd12455;
	}
	shf.r.wrap.b32 	%r8525, %r8524, %r8523, 14;
	shf.r.wrap.b32 	%r8526, %r8523, %r8524, 14;
	mov.b64 	%rd12467, {%r8526, %r8525};
	shf.r.wrap.b32 	%r8527, %r8524, %r8523, 18;
	shf.r.wrap.b32 	%r8528, %r8523, %r8524, 18;
	mov.b64 	%rd12468, {%r8528, %r8527};
	xor.b64  	%rd12469, %rd12468, %rd12467;
	shf.l.wrap.b32 	%r8529, %r8523, %r8524, 23;
	shf.l.wrap.b32 	%r8530, %r8524, %r8523, 23;
	mov.b64 	%rd12470, {%r8530, %r8529};
	xor.b64  	%rd12471, %rd12469, %rd12470;
	xor.b64  	%rd12472, %rd12431, %rd12407;
	and.b64  	%rd12473, %rd12455, %rd12472;
	xor.b64  	%rd12474, %rd12473, %rd12407;
	ld.local.u64 	%rd18832, [%rd1+128];
	add.s64 	%rd12475, %rd12383, %rd18832;
	add.s64 	%rd12476, %rd12475, %rd18602;
	add.s64 	%rd12477, %rd12476, %rd12474;
	add.s64 	%rd12478, %rd12477, %rd12471;
	add.s64 	%rd12479, %rd12478, %rd12394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8531,%dummy}, %rd12466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8532}, %rd12466;
	}
	shf.r.wrap.b32 	%r8533, %r8532, %r8531, 28;
	shf.r.wrap.b32 	%r8534, %r8531, %r8532, 28;
	mov.b64 	%rd12480, {%r8534, %r8533};
	shf.l.wrap.b32 	%r8535, %r8531, %r8532, 30;
	shf.l.wrap.b32 	%r8536, %r8532, %r8531, 30;
	mov.b64 	%rd12481, {%r8536, %r8535};
	xor.b64  	%rd12482, %rd12481, %rd12480;
	shf.l.wrap.b32 	%r8537, %r8531, %r8532, 25;
	shf.l.wrap.b32 	%r8538, %r8532, %r8531, 25;
	mov.b64 	%rd12483, {%r8538, %r8537};
	xor.b64  	%rd12484, %rd12482, %rd12483;
	and.b64  	%rd12485, %rd12466, %rd12442;
	xor.b64  	%rd12486, %rd12466, %rd12442;
	and.b64  	%rd12487, %rd12486, %rd12418;
	or.b64  	%rd12488, %rd12487, %rd12485;
	add.s64 	%rd12489, %rd12478, %rd12488;
	add.s64 	%rd12490, %rd12489, %rd12484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8539,%dummy}, %rd12479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8540}, %rd12479;
	}
	shf.r.wrap.b32 	%r8541, %r8540, %r8539, 14;
	shf.r.wrap.b32 	%r8542, %r8539, %r8540, 14;
	mov.b64 	%rd12491, {%r8542, %r8541};
	shf.r.wrap.b32 	%r8543, %r8540, %r8539, 18;
	shf.r.wrap.b32 	%r8544, %r8539, %r8540, 18;
	mov.b64 	%rd12492, {%r8544, %r8543};
	xor.b64  	%rd12493, %rd12492, %rd12491;
	shf.l.wrap.b32 	%r8545, %r8539, %r8540, 23;
	shf.l.wrap.b32 	%r8546, %r8540, %r8539, 23;
	mov.b64 	%rd12494, {%r8546, %r8545};
	xor.b64  	%rd12495, %rd12493, %rd12494;
	xor.b64  	%rd12496, %rd12455, %rd12431;
	and.b64  	%rd12497, %rd12479, %rd12496;
	xor.b64  	%rd12498, %rd12497, %rd12431;
	ld.local.u64 	%rd18831, [%rd1+136];
	add.s64 	%rd12499, %rd12407, %rd18831;
	add.s64 	%rd12500, %rd12499, %rd18601;
	add.s64 	%rd12501, %rd12500, %rd12498;
	add.s64 	%rd12502, %rd12501, %rd12495;
	add.s64 	%rd12503, %rd12502, %rd12418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8547,%dummy}, %rd12490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8548}, %rd12490;
	}
	shf.r.wrap.b32 	%r8549, %r8548, %r8547, 28;
	shf.r.wrap.b32 	%r8550, %r8547, %r8548, 28;
	mov.b64 	%rd12504, {%r8550, %r8549};
	shf.l.wrap.b32 	%r8551, %r8547, %r8548, 30;
	shf.l.wrap.b32 	%r8552, %r8548, %r8547, 30;
	mov.b64 	%rd12505, {%r8552, %r8551};
	xor.b64  	%rd12506, %rd12505, %rd12504;
	shf.l.wrap.b32 	%r8553, %r8547, %r8548, 25;
	shf.l.wrap.b32 	%r8554, %r8548, %r8547, 25;
	mov.b64 	%rd12507, {%r8554, %r8553};
	xor.b64  	%rd12508, %rd12506, %rd12507;
	and.b64  	%rd12509, %rd12490, %rd12466;
	xor.b64  	%rd12510, %rd12490, %rd12466;
	and.b64  	%rd12511, %rd12510, %rd12442;
	or.b64  	%rd12512, %rd12511, %rd12509;
	add.s64 	%rd12513, %rd12502, %rd12512;
	add.s64 	%rd12514, %rd12513, %rd12508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8555,%dummy}, %rd12503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8556}, %rd12503;
	}
	shf.r.wrap.b32 	%r8557, %r8556, %r8555, 14;
	shf.r.wrap.b32 	%r8558, %r8555, %r8556, 14;
	mov.b64 	%rd12515, {%r8558, %r8557};
	shf.r.wrap.b32 	%r8559, %r8556, %r8555, 18;
	shf.r.wrap.b32 	%r8560, %r8555, %r8556, 18;
	mov.b64 	%rd12516, {%r8560, %r8559};
	xor.b64  	%rd12517, %rd12516, %rd12515;
	shf.l.wrap.b32 	%r8561, %r8555, %r8556, 23;
	shf.l.wrap.b32 	%r8562, %r8556, %r8555, 23;
	mov.b64 	%rd12518, {%r8562, %r8561};
	xor.b64  	%rd12519, %rd12517, %rd12518;
	xor.b64  	%rd12520, %rd12479, %rd12455;
	and.b64  	%rd12521, %rd12503, %rd12520;
	xor.b64  	%rd12522, %rd12521, %rd12455;
	ld.local.u64 	%rd18830, [%rd1+144];
	add.s64 	%rd12523, %rd12431, %rd18830;
	add.s64 	%rd12524, %rd12523, %rd18600;
	add.s64 	%rd12525, %rd12524, %rd12522;
	add.s64 	%rd12526, %rd12525, %rd12519;
	add.s64 	%rd12527, %rd12526, %rd12442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8563,%dummy}, %rd12514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8564}, %rd12514;
	}
	shf.r.wrap.b32 	%r8565, %r8564, %r8563, 28;
	shf.r.wrap.b32 	%r8566, %r8563, %r8564, 28;
	mov.b64 	%rd12528, {%r8566, %r8565};
	shf.l.wrap.b32 	%r8567, %r8563, %r8564, 30;
	shf.l.wrap.b32 	%r8568, %r8564, %r8563, 30;
	mov.b64 	%rd12529, {%r8568, %r8567};
	xor.b64  	%rd12530, %rd12529, %rd12528;
	shf.l.wrap.b32 	%r8569, %r8563, %r8564, 25;
	shf.l.wrap.b32 	%r8570, %r8564, %r8563, 25;
	mov.b64 	%rd12531, {%r8570, %r8569};
	xor.b64  	%rd12532, %rd12530, %rd12531;
	and.b64  	%rd12533, %rd12514, %rd12490;
	xor.b64  	%rd12534, %rd12514, %rd12490;
	and.b64  	%rd12535, %rd12534, %rd12466;
	or.b64  	%rd12536, %rd12535, %rd12533;
	add.s64 	%rd12537, %rd12526, %rd12536;
	add.s64 	%rd12538, %rd12537, %rd12532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8571,%dummy}, %rd12527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8572}, %rd12527;
	}
	shf.r.wrap.b32 	%r8573, %r8572, %r8571, 14;
	shf.r.wrap.b32 	%r8574, %r8571, %r8572, 14;
	mov.b64 	%rd12539, {%r8574, %r8573};
	shf.r.wrap.b32 	%r8575, %r8572, %r8571, 18;
	shf.r.wrap.b32 	%r8576, %r8571, %r8572, 18;
	mov.b64 	%rd12540, {%r8576, %r8575};
	xor.b64  	%rd12541, %rd12540, %rd12539;
	shf.l.wrap.b32 	%r8577, %r8571, %r8572, 23;
	shf.l.wrap.b32 	%r8578, %r8572, %r8571, 23;
	mov.b64 	%rd12542, {%r8578, %r8577};
	xor.b64  	%rd12543, %rd12541, %rd12542;
	xor.b64  	%rd12544, %rd12503, %rd12479;
	and.b64  	%rd12545, %rd12527, %rd12544;
	xor.b64  	%rd12546, %rd12545, %rd12479;
	ld.local.u64 	%rd18829, [%rd1+152];
	add.s64 	%rd12547, %rd12455, %rd18829;
	add.s64 	%rd12548, %rd12547, %rd18599;
	add.s64 	%rd12549, %rd12548, %rd12546;
	add.s64 	%rd12550, %rd12549, %rd12543;
	add.s64 	%rd12551, %rd12550, %rd12466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8579,%dummy}, %rd12538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8580}, %rd12538;
	}
	shf.r.wrap.b32 	%r8581, %r8580, %r8579, 28;
	shf.r.wrap.b32 	%r8582, %r8579, %r8580, 28;
	mov.b64 	%rd12552, {%r8582, %r8581};
	shf.l.wrap.b32 	%r8583, %r8579, %r8580, 30;
	shf.l.wrap.b32 	%r8584, %r8580, %r8579, 30;
	mov.b64 	%rd12553, {%r8584, %r8583};
	xor.b64  	%rd12554, %rd12553, %rd12552;
	shf.l.wrap.b32 	%r8585, %r8579, %r8580, 25;
	shf.l.wrap.b32 	%r8586, %r8580, %r8579, 25;
	mov.b64 	%rd12555, {%r8586, %r8585};
	xor.b64  	%rd12556, %rd12554, %rd12555;
	and.b64  	%rd12557, %rd12538, %rd12514;
	xor.b64  	%rd12558, %rd12538, %rd12514;
	and.b64  	%rd12559, %rd12558, %rd12490;
	or.b64  	%rd12560, %rd12559, %rd12557;
	add.s64 	%rd12561, %rd12550, %rd12560;
	add.s64 	%rd12562, %rd12561, %rd12556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8587,%dummy}, %rd12551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8588}, %rd12551;
	}
	shf.r.wrap.b32 	%r8589, %r8588, %r8587, 14;
	shf.r.wrap.b32 	%r8590, %r8587, %r8588, 14;
	mov.b64 	%rd12563, {%r8590, %r8589};
	shf.r.wrap.b32 	%r8591, %r8588, %r8587, 18;
	shf.r.wrap.b32 	%r8592, %r8587, %r8588, 18;
	mov.b64 	%rd12564, {%r8592, %r8591};
	xor.b64  	%rd12565, %rd12564, %rd12563;
	shf.l.wrap.b32 	%r8593, %r8587, %r8588, 23;
	shf.l.wrap.b32 	%r8594, %r8588, %r8587, 23;
	mov.b64 	%rd12566, {%r8594, %r8593};
	xor.b64  	%rd12567, %rd12565, %rd12566;
	xor.b64  	%rd12568, %rd12527, %rd12503;
	and.b64  	%rd12569, %rd12551, %rd12568;
	xor.b64  	%rd12570, %rd12569, %rd12503;
	ld.local.u64 	%rd18828, [%rd1+160];
	add.s64 	%rd12571, %rd12479, %rd18828;
	add.s64 	%rd12572, %rd12571, %rd18598;
	add.s64 	%rd12573, %rd12572, %rd12570;
	add.s64 	%rd12574, %rd12573, %rd12567;
	add.s64 	%rd18840, %rd12574, %rd12490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8595,%dummy}, %rd12562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8596}, %rd12562;
	}
	shf.r.wrap.b32 	%r8597, %r8596, %r8595, 28;
	shf.r.wrap.b32 	%r8598, %r8595, %r8596, 28;
	mov.b64 	%rd12575, {%r8598, %r8597};
	shf.l.wrap.b32 	%r8599, %r8595, %r8596, 30;
	shf.l.wrap.b32 	%r8600, %r8596, %r8595, 30;
	mov.b64 	%rd12576, {%r8600, %r8599};
	xor.b64  	%rd12577, %rd12576, %rd12575;
	shf.l.wrap.b32 	%r8601, %r8595, %r8596, 25;
	shf.l.wrap.b32 	%r8602, %r8596, %r8595, 25;
	mov.b64 	%rd12578, {%r8602, %r8601};
	xor.b64  	%rd12579, %rd12577, %rd12578;
	and.b64  	%rd12580, %rd12562, %rd12538;
	xor.b64  	%rd12581, %rd12562, %rd12538;
	and.b64  	%rd12582, %rd12581, %rd12514;
	or.b64  	%rd12583, %rd12582, %rd12580;
	add.s64 	%rd12584, %rd12574, %rd12583;
	add.s64 	%rd18836, %rd12584, %rd12579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8603,%dummy}, %rd18840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8604}, %rd18840;
	}
	shf.r.wrap.b32 	%r8605, %r8604, %r8603, 14;
	shf.r.wrap.b32 	%r8606, %r8603, %r8604, 14;
	mov.b64 	%rd12585, {%r8606, %r8605};
	shf.r.wrap.b32 	%r8607, %r8604, %r8603, 18;
	shf.r.wrap.b32 	%r8608, %r8603, %r8604, 18;
	mov.b64 	%rd12586, {%r8608, %r8607};
	xor.b64  	%rd12587, %rd12586, %rd12585;
	shf.l.wrap.b32 	%r8609, %r8603, %r8604, 23;
	shf.l.wrap.b32 	%r8610, %r8604, %r8603, 23;
	mov.b64 	%rd12588, {%r8610, %r8609};
	xor.b64  	%rd12589, %rd12587, %rd12588;
	xor.b64  	%rd12590, %rd12551, %rd12527;
	and.b64  	%rd12591, %rd18840, %rd12590;
	xor.b64  	%rd12592, %rd12591, %rd12527;
	ld.local.u64 	%rd18827, [%rd1+168];
	add.s64 	%rd12593, %rd12503, %rd18827;
	add.s64 	%rd12594, %rd12593, %rd18597;
	add.s64 	%rd12595, %rd12594, %rd12592;
	add.s64 	%rd12596, %rd12595, %rd12589;
	add.s64 	%rd18839, %rd12596, %rd12514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8611,%dummy}, %rd18836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8612}, %rd18836;
	}
	shf.r.wrap.b32 	%r8613, %r8612, %r8611, 28;
	shf.r.wrap.b32 	%r8614, %r8611, %r8612, 28;
	mov.b64 	%rd12597, {%r8614, %r8613};
	shf.l.wrap.b32 	%r8615, %r8611, %r8612, 30;
	shf.l.wrap.b32 	%r8616, %r8612, %r8611, 30;
	mov.b64 	%rd12598, {%r8616, %r8615};
	xor.b64  	%rd12599, %rd12598, %rd12597;
	shf.l.wrap.b32 	%r8617, %r8611, %r8612, 25;
	shf.l.wrap.b32 	%r8618, %r8612, %r8611, 25;
	mov.b64 	%rd12600, {%r8618, %r8617};
	xor.b64  	%rd12601, %rd12599, %rd12600;
	and.b64  	%rd12602, %rd18836, %rd12562;
	xor.b64  	%rd12603, %rd18836, %rd12562;
	and.b64  	%rd12604, %rd12603, %rd12538;
	or.b64  	%rd12605, %rd12604, %rd12602;
	add.s64 	%rd12606, %rd12596, %rd12605;
	add.s64 	%rd18835, %rd12606, %rd12601;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8619,%dummy}, %rd18839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8620}, %rd18839;
	}
	shf.r.wrap.b32 	%r8621, %r8620, %r8619, 14;
	shf.r.wrap.b32 	%r8622, %r8619, %r8620, 14;
	mov.b64 	%rd12607, {%r8622, %r8621};
	shf.r.wrap.b32 	%r8623, %r8620, %r8619, 18;
	shf.r.wrap.b32 	%r8624, %r8619, %r8620, 18;
	mov.b64 	%rd12608, {%r8624, %r8623};
	xor.b64  	%rd12609, %rd12608, %rd12607;
	shf.l.wrap.b32 	%r8625, %r8619, %r8620, 23;
	shf.l.wrap.b32 	%r8626, %r8620, %r8619, 23;
	mov.b64 	%rd12610, {%r8626, %r8625};
	xor.b64  	%rd12611, %rd12609, %rd12610;
	xor.b64  	%rd12612, %rd18840, %rd12551;
	and.b64  	%rd12613, %rd18839, %rd12612;
	xor.b64  	%rd12614, %rd12613, %rd12551;
	ld.local.u64 	%rd18826, [%rd1+176];
	add.s64 	%rd12615, %rd12527, %rd18826;
	add.s64 	%rd12616, %rd12615, %rd18596;
	add.s64 	%rd12617, %rd12616, %rd12614;
	add.s64 	%rd12618, %rd12617, %rd12611;
	add.s64 	%rd18838, %rd12618, %rd12538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8627,%dummy}, %rd18835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8628}, %rd18835;
	}
	shf.r.wrap.b32 	%r8629, %r8628, %r8627, 28;
	shf.r.wrap.b32 	%r8630, %r8627, %r8628, 28;
	mov.b64 	%rd12619, {%r8630, %r8629};
	shf.l.wrap.b32 	%r8631, %r8627, %r8628, 30;
	shf.l.wrap.b32 	%r8632, %r8628, %r8627, 30;
	mov.b64 	%rd12620, {%r8632, %r8631};
	xor.b64  	%rd12621, %rd12620, %rd12619;
	shf.l.wrap.b32 	%r8633, %r8627, %r8628, 25;
	shf.l.wrap.b32 	%r8634, %r8628, %r8627, 25;
	mov.b64 	%rd12622, {%r8634, %r8633};
	xor.b64  	%rd12623, %rd12621, %rd12622;
	and.b64  	%rd12624, %rd18835, %rd18836;
	xor.b64  	%rd12625, %rd18835, %rd18836;
	and.b64  	%rd12626, %rd12625, %rd12562;
	or.b64  	%rd12627, %rd12626, %rd12624;
	add.s64 	%rd12628, %rd12618, %rd12627;
	add.s64 	%rd18834, %rd12628, %rd12623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8635,%dummy}, %rd18838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8636}, %rd18838;
	}
	shf.r.wrap.b32 	%r8637, %r8636, %r8635, 14;
	shf.r.wrap.b32 	%r8638, %r8635, %r8636, 14;
	mov.b64 	%rd12629, {%r8638, %r8637};
	shf.r.wrap.b32 	%r8639, %r8636, %r8635, 18;
	shf.r.wrap.b32 	%r8640, %r8635, %r8636, 18;
	mov.b64 	%rd12630, {%r8640, %r8639};
	xor.b64  	%rd12631, %rd12630, %rd12629;
	shf.l.wrap.b32 	%r8641, %r8635, %r8636, 23;
	shf.l.wrap.b32 	%r8642, %r8636, %r8635, 23;
	mov.b64 	%rd12632, {%r8642, %r8641};
	xor.b64  	%rd12633, %rd12631, %rd12632;
	xor.b64  	%rd12634, %rd18839, %rd18840;
	and.b64  	%rd12635, %rd18838, %rd12634;
	xor.b64  	%rd12636, %rd12635, %rd18840;
	ld.local.u64 	%rd18825, [%rd1+184];
	add.s64 	%rd12637, %rd12551, %rd18825;
	add.s64 	%rd12638, %rd12637, %rd18595;
	add.s64 	%rd12639, %rd12638, %rd12636;
	add.s64 	%rd12640, %rd12639, %rd12633;
	add.s64 	%rd18837, %rd12640, %rd12562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8643,%dummy}, %rd18834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8644}, %rd18834;
	}
	shf.r.wrap.b32 	%r8645, %r8644, %r8643, 28;
	shf.r.wrap.b32 	%r8646, %r8643, %r8644, 28;
	mov.b64 	%rd12641, {%r8646, %r8645};
	shf.l.wrap.b32 	%r8647, %r8643, %r8644, 30;
	shf.l.wrap.b32 	%r8648, %r8644, %r8643, 30;
	mov.b64 	%rd12642, {%r8648, %r8647};
	xor.b64  	%rd12643, %rd12642, %rd12641;
	shf.l.wrap.b32 	%r8649, %r8643, %r8644, 25;
	shf.l.wrap.b32 	%r8650, %r8644, %r8643, 25;
	mov.b64 	%rd12644, {%r8650, %r8649};
	xor.b64  	%rd12645, %rd12643, %rd12644;
	and.b64  	%rd12646, %rd18834, %rd18835;
	xor.b64  	%rd12647, %rd18834, %rd18835;
	and.b64  	%rd12648, %rd12647, %rd18836;
	or.b64  	%rd12649, %rd12648, %rd12646;
	add.s64 	%rd12650, %rd12640, %rd12649;
	add.s64 	%rd18833, %rd12650, %rd12645;
	mov.u32 	%r13026, 16;

BB0_246:
	mov.u64 	%rd18515, k_sha512;
	shr.u64 	%rd12651, %rd18826, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8651,%dummy}, %rd18826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8652}, %rd18826;
	}
	shf.r.wrap.b32 	%r8653, %r8652, %r8651, 19;
	shf.r.wrap.b32 	%r8654, %r8651, %r8652, 19;
	mov.b64 	%rd12652, {%r8654, %r8653};
	xor.b64  	%rd12653, %rd12652, %rd12651;
	shf.l.wrap.b32 	%r8655, %r8651, %r8652, 3;
	shf.l.wrap.b32 	%r8656, %r8652, %r8651, 3;
	mov.b64 	%rd12654, {%r8656, %r8655};
	xor.b64  	%rd12655, %rd12653, %rd12654;
	shr.u64 	%rd12656, %rd18842, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8657,%dummy}, %rd18842;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8658}, %rd18842;
	}
	shf.r.wrap.b32 	%r8659, %r8658, %r8657, 1;
	shf.r.wrap.b32 	%r8660, %r8657, %r8658, 1;
	mov.b64 	%rd12657, {%r8660, %r8659};
	xor.b64  	%rd12658, %rd12657, %rd12656;
	shf.r.wrap.b32 	%r8661, %r8658, %r8657, 8;
	shf.r.wrap.b32 	%r8662, %r8657, %r8658, 8;
	mov.b64 	%rd12659, {%r8662, %r8661};
	xor.b64  	%rd12660, %rd12658, %rd12659;
	add.s64 	%rd12661, %rd18831, %rd18841;
	add.s64 	%rd12662, %rd12661, %rd12655;
	add.s64 	%rd18841, %rd12662, %rd12660;
	shr.u64 	%rd12663, %rd18825, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8663,%dummy}, %rd18825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8664}, %rd18825;
	}
	shf.r.wrap.b32 	%r8665, %r8664, %r8663, 19;
	shf.r.wrap.b32 	%r8666, %r8663, %r8664, 19;
	mov.b64 	%rd12664, {%r8666, %r8665};
	xor.b64  	%rd12665, %rd12664, %rd12663;
	shf.l.wrap.b32 	%r8667, %r8663, %r8664, 3;
	shf.l.wrap.b32 	%r8668, %r8664, %r8663, 3;
	mov.b64 	%rd12666, {%r8668, %r8667};
	xor.b64  	%rd12667, %rd12665, %rd12666;
	shr.u64 	%rd12668, %rd18843, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8669,%dummy}, %rd18843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8670}, %rd18843;
	}
	shf.r.wrap.b32 	%r8671, %r8670, %r8669, 1;
	shf.r.wrap.b32 	%r8672, %r8669, %r8670, 1;
	mov.b64 	%rd12669, {%r8672, %r8671};
	xor.b64  	%rd12670, %rd12669, %rd12668;
	shf.r.wrap.b32 	%r8673, %r8670, %r8669, 8;
	shf.r.wrap.b32 	%r8674, %r8669, %r8670, 8;
	mov.b64 	%rd12671, {%r8674, %r8673};
	xor.b64  	%rd12672, %rd12670, %rd12671;
	add.s64 	%rd12673, %rd18830, %rd18842;
	add.s64 	%rd12674, %rd12673, %rd12667;
	add.s64 	%rd18842, %rd12674, %rd12672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8675,%dummy}, %rd18841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8676}, %rd18841;
	}
	shf.r.wrap.b32 	%r8677, %r8676, %r8675, 19;
	shf.r.wrap.b32 	%r8678, %r8675, %r8676, 19;
	mov.b64 	%rd12675, {%r8678, %r8677};
	shf.l.wrap.b32 	%r8679, %r8675, %r8676, 3;
	shf.l.wrap.b32 	%r8680, %r8676, %r8675, 3;
	mov.b64 	%rd12676, {%r8680, %r8679};
	shr.u64 	%rd12677, %rd18841, 6;
	xor.b64  	%rd12678, %rd12675, %rd12677;
	xor.b64  	%rd12679, %rd12678, %rd12676;
	shr.u64 	%rd12680, %rd18844, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8681,%dummy}, %rd18844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8682}, %rd18844;
	}
	shf.r.wrap.b32 	%r8683, %r8682, %r8681, 1;
	shf.r.wrap.b32 	%r8684, %r8681, %r8682, 1;
	mov.b64 	%rd12681, {%r8684, %r8683};
	xor.b64  	%rd12682, %rd12681, %rd12680;
	shf.r.wrap.b32 	%r8685, %r8682, %r8681, 8;
	shf.r.wrap.b32 	%r8686, %r8681, %r8682, 8;
	mov.b64 	%rd12683, {%r8686, %r8685};
	xor.b64  	%rd12684, %rd12682, %rd12683;
	add.s64 	%rd12685, %rd18829, %rd18843;
	add.s64 	%rd12686, %rd12685, %rd12679;
	add.s64 	%rd18843, %rd12686, %rd12684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8687,%dummy}, %rd18842;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8688}, %rd18842;
	}
	shf.r.wrap.b32 	%r8689, %r8688, %r8687, 19;
	shf.r.wrap.b32 	%r8690, %r8687, %r8688, 19;
	mov.b64 	%rd12687, {%r8690, %r8689};
	shf.l.wrap.b32 	%r8691, %r8687, %r8688, 3;
	shf.l.wrap.b32 	%r8692, %r8688, %r8687, 3;
	mov.b64 	%rd12688, {%r8692, %r8691};
	shr.u64 	%rd12689, %rd18842, 6;
	xor.b64  	%rd12690, %rd12687, %rd12689;
	xor.b64  	%rd12691, %rd12690, %rd12688;
	shr.u64 	%rd12692, %rd18845, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8693,%dummy}, %rd18845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8694}, %rd18845;
	}
	shf.r.wrap.b32 	%r8695, %r8694, %r8693, 1;
	shf.r.wrap.b32 	%r8696, %r8693, %r8694, 1;
	mov.b64 	%rd12693, {%r8696, %r8695};
	xor.b64  	%rd12694, %rd12693, %rd12692;
	shf.r.wrap.b32 	%r8697, %r8694, %r8693, 8;
	shf.r.wrap.b32 	%r8698, %r8693, %r8694, 8;
	mov.b64 	%rd12695, {%r8698, %r8697};
	xor.b64  	%rd12696, %rd12694, %rd12695;
	add.s64 	%rd12697, %rd18828, %rd18844;
	add.s64 	%rd12698, %rd12697, %rd12691;
	add.s64 	%rd18844, %rd12698, %rd12696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8699,%dummy}, %rd18843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8700}, %rd18843;
	}
	shf.r.wrap.b32 	%r8701, %r8700, %r8699, 19;
	shf.r.wrap.b32 	%r8702, %r8699, %r8700, 19;
	mov.b64 	%rd12699, {%r8702, %r8701};
	shf.l.wrap.b32 	%r8703, %r8699, %r8700, 3;
	shf.l.wrap.b32 	%r8704, %r8700, %r8699, 3;
	mov.b64 	%rd12700, {%r8704, %r8703};
	shr.u64 	%rd12701, %rd18843, 6;
	xor.b64  	%rd12702, %rd12699, %rd12701;
	xor.b64  	%rd12703, %rd12702, %rd12700;
	shr.u64 	%rd12704, %rd18846, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8705,%dummy}, %rd18846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8706}, %rd18846;
	}
	shf.r.wrap.b32 	%r8707, %r8706, %r8705, 1;
	shf.r.wrap.b32 	%r8708, %r8705, %r8706, 1;
	mov.b64 	%rd12705, {%r8708, %r8707};
	xor.b64  	%rd12706, %rd12705, %rd12704;
	shf.r.wrap.b32 	%r8709, %r8706, %r8705, 8;
	shf.r.wrap.b32 	%r8710, %r8705, %r8706, 8;
	mov.b64 	%rd12707, {%r8710, %r8709};
	xor.b64  	%rd12708, %rd12706, %rd12707;
	add.s64 	%rd12709, %rd18827, %rd18845;
	add.s64 	%rd12710, %rd12709, %rd12703;
	add.s64 	%rd18845, %rd12710, %rd12708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8711,%dummy}, %rd18844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8712}, %rd18844;
	}
	shf.r.wrap.b32 	%r8713, %r8712, %r8711, 19;
	shf.r.wrap.b32 	%r8714, %r8711, %r8712, 19;
	mov.b64 	%rd12711, {%r8714, %r8713};
	shf.l.wrap.b32 	%r8715, %r8711, %r8712, 3;
	shf.l.wrap.b32 	%r8716, %r8712, %r8711, 3;
	mov.b64 	%rd12712, {%r8716, %r8715};
	shr.u64 	%rd12713, %rd18844, 6;
	xor.b64  	%rd12714, %rd12711, %rd12713;
	xor.b64  	%rd12715, %rd12714, %rd12712;
	shr.u64 	%rd12716, %rd18847, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8717,%dummy}, %rd18847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8718}, %rd18847;
	}
	shf.r.wrap.b32 	%r8719, %r8718, %r8717, 1;
	shf.r.wrap.b32 	%r8720, %r8717, %r8718, 1;
	mov.b64 	%rd12717, {%r8720, %r8719};
	xor.b64  	%rd12718, %rd12717, %rd12716;
	shf.r.wrap.b32 	%r8721, %r8718, %r8717, 8;
	shf.r.wrap.b32 	%r8722, %r8717, %r8718, 8;
	mov.b64 	%rd12719, {%r8722, %r8721};
	xor.b64  	%rd12720, %rd12718, %rd12719;
	add.s64 	%rd12721, %rd18826, %rd18846;
	add.s64 	%rd12722, %rd12721, %rd12715;
	add.s64 	%rd18846, %rd12722, %rd12720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8723,%dummy}, %rd18845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8724}, %rd18845;
	}
	shf.r.wrap.b32 	%r8725, %r8724, %r8723, 19;
	shf.r.wrap.b32 	%r8726, %r8723, %r8724, 19;
	mov.b64 	%rd12723, {%r8726, %r8725};
	shf.l.wrap.b32 	%r8727, %r8723, %r8724, 3;
	shf.l.wrap.b32 	%r8728, %r8724, %r8723, 3;
	mov.b64 	%rd12724, {%r8728, %r8727};
	shr.u64 	%rd12725, %rd18845, 6;
	xor.b64  	%rd12726, %rd12723, %rd12725;
	xor.b64  	%rd12727, %rd12726, %rd12724;
	shr.u64 	%rd12728, %rd18848, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8729,%dummy}, %rd18848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8730}, %rd18848;
	}
	shf.r.wrap.b32 	%r8731, %r8730, %r8729, 1;
	shf.r.wrap.b32 	%r8732, %r8729, %r8730, 1;
	mov.b64 	%rd12729, {%r8732, %r8731};
	xor.b64  	%rd12730, %rd12729, %rd12728;
	shf.r.wrap.b32 	%r8733, %r8730, %r8729, 8;
	shf.r.wrap.b32 	%r8734, %r8729, %r8730, 8;
	mov.b64 	%rd12731, {%r8734, %r8733};
	xor.b64  	%rd12732, %rd12730, %rd12731;
	add.s64 	%rd12733, %rd18825, %rd18847;
	add.s64 	%rd12734, %rd12733, %rd12727;
	add.s64 	%rd18847, %rd12734, %rd12732;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8735,%dummy}, %rd18846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8736}, %rd18846;
	}
	shf.r.wrap.b32 	%r8737, %r8736, %r8735, 19;
	shf.r.wrap.b32 	%r8738, %r8735, %r8736, 19;
	mov.b64 	%rd12735, {%r8738, %r8737};
	shf.l.wrap.b32 	%r8739, %r8735, %r8736, 3;
	shf.l.wrap.b32 	%r8740, %r8736, %r8735, 3;
	mov.b64 	%rd12736, {%r8740, %r8739};
	shr.u64 	%rd12737, %rd18846, 6;
	xor.b64  	%rd12738, %rd12735, %rd12737;
	xor.b64  	%rd12739, %rd12738, %rd12736;
	shr.u64 	%rd12740, %rd18832, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8741,%dummy}, %rd18832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8742}, %rd18832;
	}
	shf.r.wrap.b32 	%r8743, %r8742, %r8741, 1;
	shf.r.wrap.b32 	%r8744, %r8741, %r8742, 1;
	mov.b64 	%rd12741, {%r8744, %r8743};
	xor.b64  	%rd12742, %rd12741, %rd12740;
	shf.r.wrap.b32 	%r8745, %r8742, %r8741, 8;
	shf.r.wrap.b32 	%r8746, %r8741, %r8742, 8;
	mov.b64 	%rd12743, {%r8746, %r8745};
	xor.b64  	%rd12744, %rd12742, %rd12743;
	add.s64 	%rd12745, %rd18841, %rd18848;
	add.s64 	%rd12746, %rd12745, %rd12739;
	add.s64 	%rd18848, %rd12746, %rd12744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8747,%dummy}, %rd18847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8748}, %rd18847;
	}
	shf.r.wrap.b32 	%r8749, %r8748, %r8747, 19;
	shf.r.wrap.b32 	%r8750, %r8747, %r8748, 19;
	mov.b64 	%rd12747, {%r8750, %r8749};
	shf.l.wrap.b32 	%r8751, %r8747, %r8748, 3;
	shf.l.wrap.b32 	%r8752, %r8748, %r8747, 3;
	mov.b64 	%rd12748, {%r8752, %r8751};
	shr.u64 	%rd12749, %rd18847, 6;
	xor.b64  	%rd12750, %rd12747, %rd12749;
	xor.b64  	%rd12751, %rd12750, %rd12748;
	shr.u64 	%rd12752, %rd18831, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8753,%dummy}, %rd18831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8754}, %rd18831;
	}
	shf.r.wrap.b32 	%r8755, %r8754, %r8753, 1;
	shf.r.wrap.b32 	%r8756, %r8753, %r8754, 1;
	mov.b64 	%rd12753, {%r8756, %r8755};
	xor.b64  	%rd12754, %rd12753, %rd12752;
	shf.r.wrap.b32 	%r8757, %r8754, %r8753, 8;
	shf.r.wrap.b32 	%r8758, %r8753, %r8754, 8;
	mov.b64 	%rd12755, {%r8758, %r8757};
	xor.b64  	%rd12756, %rd12754, %rd12755;
	add.s64 	%rd12757, %rd18842, %rd18832;
	add.s64 	%rd12758, %rd12757, %rd12751;
	add.s64 	%rd18832, %rd12758, %rd12756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8759,%dummy}, %rd18848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8760}, %rd18848;
	}
	shf.r.wrap.b32 	%r8761, %r8760, %r8759, 19;
	shf.r.wrap.b32 	%r8762, %r8759, %r8760, 19;
	mov.b64 	%rd12759, {%r8762, %r8761};
	shf.l.wrap.b32 	%r8763, %r8759, %r8760, 3;
	shf.l.wrap.b32 	%r8764, %r8760, %r8759, 3;
	mov.b64 	%rd12760, {%r8764, %r8763};
	shr.u64 	%rd12761, %rd18848, 6;
	xor.b64  	%rd12762, %rd12759, %rd12761;
	xor.b64  	%rd12763, %rd12762, %rd12760;
	shr.u64 	%rd12764, %rd18830, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8765,%dummy}, %rd18830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8766}, %rd18830;
	}
	shf.r.wrap.b32 	%r8767, %r8766, %r8765, 1;
	shf.r.wrap.b32 	%r8768, %r8765, %r8766, 1;
	mov.b64 	%rd12765, {%r8768, %r8767};
	xor.b64  	%rd12766, %rd12765, %rd12764;
	shf.r.wrap.b32 	%r8769, %r8766, %r8765, 8;
	shf.r.wrap.b32 	%r8770, %r8765, %r8766, 8;
	mov.b64 	%rd12767, {%r8770, %r8769};
	xor.b64  	%rd12768, %rd12766, %rd12767;
	add.s64 	%rd12769, %rd18843, %rd18831;
	add.s64 	%rd12770, %rd12769, %rd12763;
	add.s64 	%rd18831, %rd12770, %rd12768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8771,%dummy}, %rd18832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8772}, %rd18832;
	}
	shf.r.wrap.b32 	%r8773, %r8772, %r8771, 19;
	shf.r.wrap.b32 	%r8774, %r8771, %r8772, 19;
	mov.b64 	%rd12771, {%r8774, %r8773};
	shf.l.wrap.b32 	%r8775, %r8771, %r8772, 3;
	shf.l.wrap.b32 	%r8776, %r8772, %r8771, 3;
	mov.b64 	%rd12772, {%r8776, %r8775};
	shr.u64 	%rd12773, %rd18832, 6;
	xor.b64  	%rd12774, %rd12771, %rd12773;
	xor.b64  	%rd12775, %rd12774, %rd12772;
	shr.u64 	%rd12776, %rd18829, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8777,%dummy}, %rd18829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8778}, %rd18829;
	}
	shf.r.wrap.b32 	%r8779, %r8778, %r8777, 1;
	shf.r.wrap.b32 	%r8780, %r8777, %r8778, 1;
	mov.b64 	%rd12777, {%r8780, %r8779};
	xor.b64  	%rd12778, %rd12777, %rd12776;
	shf.r.wrap.b32 	%r8781, %r8778, %r8777, 8;
	shf.r.wrap.b32 	%r8782, %r8777, %r8778, 8;
	mov.b64 	%rd12779, {%r8782, %r8781};
	xor.b64  	%rd12780, %rd12778, %rd12779;
	add.s64 	%rd12781, %rd18844, %rd18830;
	add.s64 	%rd12782, %rd12781, %rd12775;
	add.s64 	%rd18830, %rd12782, %rd12780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8783,%dummy}, %rd18831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8784}, %rd18831;
	}
	shf.r.wrap.b32 	%r8785, %r8784, %r8783, 19;
	shf.r.wrap.b32 	%r8786, %r8783, %r8784, 19;
	mov.b64 	%rd12783, {%r8786, %r8785};
	shf.l.wrap.b32 	%r8787, %r8783, %r8784, 3;
	shf.l.wrap.b32 	%r8788, %r8784, %r8783, 3;
	mov.b64 	%rd12784, {%r8788, %r8787};
	shr.u64 	%rd12785, %rd18831, 6;
	xor.b64  	%rd12786, %rd12783, %rd12785;
	xor.b64  	%rd12787, %rd12786, %rd12784;
	shr.u64 	%rd12788, %rd18828, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8789,%dummy}, %rd18828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8790}, %rd18828;
	}
	shf.r.wrap.b32 	%r8791, %r8790, %r8789, 1;
	shf.r.wrap.b32 	%r8792, %r8789, %r8790, 1;
	mov.b64 	%rd12789, {%r8792, %r8791};
	xor.b64  	%rd12790, %rd12789, %rd12788;
	shf.r.wrap.b32 	%r8793, %r8790, %r8789, 8;
	shf.r.wrap.b32 	%r8794, %r8789, %r8790, 8;
	mov.b64 	%rd12791, {%r8794, %r8793};
	xor.b64  	%rd12792, %rd12790, %rd12791;
	add.s64 	%rd12793, %rd18845, %rd18829;
	add.s64 	%rd12794, %rd12793, %rd12787;
	add.s64 	%rd18829, %rd12794, %rd12792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8795,%dummy}, %rd18830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8796}, %rd18830;
	}
	shf.r.wrap.b32 	%r8797, %r8796, %r8795, 19;
	shf.r.wrap.b32 	%r8798, %r8795, %r8796, 19;
	mov.b64 	%rd12795, {%r8798, %r8797};
	shf.l.wrap.b32 	%r8799, %r8795, %r8796, 3;
	shf.l.wrap.b32 	%r8800, %r8796, %r8795, 3;
	mov.b64 	%rd12796, {%r8800, %r8799};
	shr.u64 	%rd12797, %rd18830, 6;
	xor.b64  	%rd12798, %rd12795, %rd12797;
	xor.b64  	%rd12799, %rd12798, %rd12796;
	shr.u64 	%rd12800, %rd18827, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8801,%dummy}, %rd18827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8802}, %rd18827;
	}
	shf.r.wrap.b32 	%r8803, %r8802, %r8801, 1;
	shf.r.wrap.b32 	%r8804, %r8801, %r8802, 1;
	mov.b64 	%rd12801, {%r8804, %r8803};
	xor.b64  	%rd12802, %rd12801, %rd12800;
	shf.r.wrap.b32 	%r8805, %r8802, %r8801, 8;
	shf.r.wrap.b32 	%r8806, %r8801, %r8802, 8;
	mov.b64 	%rd12803, {%r8806, %r8805};
	xor.b64  	%rd12804, %rd12802, %rd12803;
	add.s64 	%rd12805, %rd18846, %rd18828;
	add.s64 	%rd12806, %rd12805, %rd12799;
	add.s64 	%rd18828, %rd12806, %rd12804;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8807,%dummy}, %rd18829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8808}, %rd18829;
	}
	shf.r.wrap.b32 	%r8809, %r8808, %r8807, 19;
	shf.r.wrap.b32 	%r8810, %r8807, %r8808, 19;
	mov.b64 	%rd12807, {%r8810, %r8809};
	shf.l.wrap.b32 	%r8811, %r8807, %r8808, 3;
	shf.l.wrap.b32 	%r8812, %r8808, %r8807, 3;
	mov.b64 	%rd12808, {%r8812, %r8811};
	shr.u64 	%rd12809, %rd18829, 6;
	xor.b64  	%rd12810, %rd12807, %rd12809;
	xor.b64  	%rd12811, %rd12810, %rd12808;
	shr.u64 	%rd12812, %rd18826, 7;
	shf.r.wrap.b32 	%r8813, %r8652, %r8651, 1;
	shf.r.wrap.b32 	%r8814, %r8651, %r8652, 1;
	mov.b64 	%rd12813, {%r8814, %r8813};
	xor.b64  	%rd12814, %rd12813, %rd12812;
	shf.r.wrap.b32 	%r8815, %r8652, %r8651, 8;
	shf.r.wrap.b32 	%r8816, %r8651, %r8652, 8;
	mov.b64 	%rd12815, {%r8816, %r8815};
	xor.b64  	%rd12816, %rd12814, %rd12815;
	add.s64 	%rd12817, %rd18847, %rd18827;
	add.s64 	%rd12818, %rd12817, %rd12811;
	add.s64 	%rd18827, %rd12818, %rd12816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8817,%dummy}, %rd18828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8818}, %rd18828;
	}
	shf.r.wrap.b32 	%r8819, %r8818, %r8817, 19;
	shf.r.wrap.b32 	%r8820, %r8817, %r8818, 19;
	mov.b64 	%rd12819, {%r8820, %r8819};
	shf.l.wrap.b32 	%r8821, %r8817, %r8818, 3;
	shf.l.wrap.b32 	%r8822, %r8818, %r8817, 3;
	mov.b64 	%rd12820, {%r8822, %r8821};
	shr.u64 	%rd12821, %rd18828, 6;
	xor.b64  	%rd12822, %rd12819, %rd12821;
	xor.b64  	%rd12823, %rd12822, %rd12820;
	shr.u64 	%rd12824, %rd18825, 7;
	shf.r.wrap.b32 	%r8823, %r8664, %r8663, 1;
	shf.r.wrap.b32 	%r8824, %r8663, %r8664, 1;
	mov.b64 	%rd12825, {%r8824, %r8823};
	xor.b64  	%rd12826, %rd12825, %rd12824;
	shf.r.wrap.b32 	%r8825, %r8664, %r8663, 8;
	shf.r.wrap.b32 	%r8826, %r8663, %r8664, 8;
	mov.b64 	%rd12827, {%r8826, %r8825};
	xor.b64  	%rd12828, %rd12826, %rd12827;
	add.s64 	%rd12829, %rd18848, %rd18826;
	add.s64 	%rd12830, %rd12829, %rd12823;
	add.s64 	%rd18826, %rd12830, %rd12828;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8827,%dummy}, %rd18827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8828}, %rd18827;
	}
	shf.r.wrap.b32 	%r8829, %r8828, %r8827, 19;
	shf.r.wrap.b32 	%r8830, %r8827, %r8828, 19;
	mov.b64 	%rd12831, {%r8830, %r8829};
	shf.l.wrap.b32 	%r8831, %r8827, %r8828, 3;
	shf.l.wrap.b32 	%r8832, %r8828, %r8827, 3;
	mov.b64 	%rd12832, {%r8832, %r8831};
	shr.u64 	%rd12833, %rd18827, 6;
	xor.b64  	%rd12834, %rd12831, %rd12833;
	xor.b64  	%rd12835, %rd12834, %rd12832;
	shf.r.wrap.b32 	%r8833, %r8676, %r8675, 1;
	shf.r.wrap.b32 	%r8834, %r8675, %r8676, 1;
	mov.b64 	%rd12836, {%r8834, %r8833};
	shf.r.wrap.b32 	%r8835, %r8676, %r8675, 8;
	shf.r.wrap.b32 	%r8836, %r8675, %r8676, 8;
	mov.b64 	%rd12837, {%r8836, %r8835};
	shr.u64 	%rd12838, %rd18841, 7;
	xor.b64  	%rd12839, %rd12836, %rd12838;
	xor.b64  	%rd12840, %rd12839, %rd12837;
	add.s64 	%rd12841, %rd18832, %rd18825;
	add.s64 	%rd12842, %rd12841, %rd12835;
	add.s64 	%rd18825, %rd12842, %rd12840;
	mul.wide.s32 	%rd12843, %r13026, 8;
	add.s64 	%rd12845, %rd18515, %rd12843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8837,%dummy}, %rd18837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8838}, %rd18837;
	}
	shf.r.wrap.b32 	%r8839, %r8838, %r8837, 18;
	shf.r.wrap.b32 	%r8840, %r8837, %r8838, 18;
	mov.b64 	%rd12846, {%r8840, %r8839};
	shf.r.wrap.b32 	%r8841, %r8838, %r8837, 14;
	shf.r.wrap.b32 	%r8842, %r8837, %r8838, 14;
	mov.b64 	%rd12847, {%r8842, %r8841};
	xor.b64  	%rd12848, %rd12846, %rd12847;
	shf.l.wrap.b32 	%r8843, %r8837, %r8838, 23;
	shf.l.wrap.b32 	%r8844, %r8838, %r8837, 23;
	mov.b64 	%rd12849, {%r8844, %r8843};
	xor.b64  	%rd12850, %rd12848, %rd12849;
	xor.b64  	%rd12851, %rd18838, %rd18839;
	and.b64  	%rd12852, %rd18837, %rd12851;
	xor.b64  	%rd12853, %rd12852, %rd18839;
	add.s64 	%rd12854, %rd12853, %rd18840;
	add.s64 	%rd12855, %rd12854, %rd18841;
	ld.const.u64 	%rd12856, [%rd12845];
	add.s64 	%rd12857, %rd12855, %rd12856;
	add.s64 	%rd12858, %rd12857, %rd12850;
	add.s64 	%rd12859, %rd12858, %rd18836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8845}, %rd18833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8846,%dummy}, %rd18833;
	}
	shf.l.wrap.b32 	%r8847, %r8846, %r8845, 30;
	shf.l.wrap.b32 	%r8848, %r8845, %r8846, 30;
	mov.b64 	%rd12860, {%r8848, %r8847};
	shf.r.wrap.b32 	%r8849, %r8845, %r8846, 28;
	shf.r.wrap.b32 	%r8850, %r8846, %r8845, 28;
	mov.b64 	%rd12861, {%r8850, %r8849};
	xor.b64  	%rd12862, %rd12860, %rd12861;
	shf.l.wrap.b32 	%r8851, %r8846, %r8845, 25;
	shf.l.wrap.b32 	%r8852, %r8845, %r8846, 25;
	mov.b64 	%rd12863, {%r8852, %r8851};
	xor.b64  	%rd12864, %rd12862, %rd12863;
	xor.b64  	%rd12865, %rd18833, %rd18834;
	and.b64  	%rd12866, %rd12865, %rd18835;
	and.b64  	%rd12867, %rd18833, %rd18834;
	or.b64  	%rd12868, %rd12866, %rd12867;
	add.s64 	%rd12869, %rd12858, %rd12868;
	add.s64 	%rd12870, %rd12869, %rd12864;
	add.s32 	%r8853, %r13026, 1;
	mul.wide.s32 	%rd12871, %r8853, 8;
	add.s64 	%rd12872, %rd18515, %rd12871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8854,%dummy}, %rd12859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8855}, %rd12859;
	}
	shf.r.wrap.b32 	%r8856, %r8855, %r8854, 14;
	shf.r.wrap.b32 	%r8857, %r8854, %r8855, 14;
	mov.b64 	%rd12873, {%r8857, %r8856};
	shf.r.wrap.b32 	%r8858, %r8855, %r8854, 18;
	shf.r.wrap.b32 	%r8859, %r8854, %r8855, 18;
	mov.b64 	%rd12874, {%r8859, %r8858};
	xor.b64  	%rd12875, %rd12874, %rd12873;
	shf.l.wrap.b32 	%r8860, %r8854, %r8855, 23;
	shf.l.wrap.b32 	%r8861, %r8855, %r8854, 23;
	mov.b64 	%rd12876, {%r8861, %r8860};
	xor.b64  	%rd12877, %rd12875, %rd12876;
	xor.b64  	%rd12878, %rd18837, %rd18838;
	and.b64  	%rd12879, %rd12859, %rd12878;
	xor.b64  	%rd12880, %rd12879, %rd18838;
	add.s64 	%rd12881, %rd18842, %rd18839;
	ld.const.u64 	%rd12882, [%rd12872];
	add.s64 	%rd12883, %rd12881, %rd12882;
	add.s64 	%rd12884, %rd12883, %rd12880;
	add.s64 	%rd12885, %rd12884, %rd12877;
	add.s64 	%rd12886, %rd12885, %rd18835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8862,%dummy}, %rd12870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8863}, %rd12870;
	}
	shf.r.wrap.b32 	%r8864, %r8863, %r8862, 28;
	shf.r.wrap.b32 	%r8865, %r8862, %r8863, 28;
	mov.b64 	%rd12887, {%r8865, %r8864};
	shf.l.wrap.b32 	%r8866, %r8862, %r8863, 30;
	shf.l.wrap.b32 	%r8867, %r8863, %r8862, 30;
	mov.b64 	%rd12888, {%r8867, %r8866};
	xor.b64  	%rd12889, %rd12888, %rd12887;
	shf.l.wrap.b32 	%r8868, %r8862, %r8863, 25;
	shf.l.wrap.b32 	%r8869, %r8863, %r8862, 25;
	mov.b64 	%rd12890, {%r8869, %r8868};
	xor.b64  	%rd12891, %rd12889, %rd12890;
	and.b64  	%rd12892, %rd12870, %rd18833;
	xor.b64  	%rd12893, %rd12870, %rd18833;
	and.b64  	%rd12894, %rd12893, %rd18834;
	or.b64  	%rd12895, %rd12894, %rd12892;
	add.s64 	%rd12896, %rd12885, %rd12895;
	add.s64 	%rd12897, %rd12896, %rd12891;
	add.s32 	%r8870, %r13026, 2;
	mul.wide.s32 	%rd12898, %r8870, 8;
	add.s64 	%rd12899, %rd18515, %rd12898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8871,%dummy}, %rd12886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8872}, %rd12886;
	}
	shf.r.wrap.b32 	%r8873, %r8872, %r8871, 14;
	shf.r.wrap.b32 	%r8874, %r8871, %r8872, 14;
	mov.b64 	%rd12900, {%r8874, %r8873};
	shf.r.wrap.b32 	%r8875, %r8872, %r8871, 18;
	shf.r.wrap.b32 	%r8876, %r8871, %r8872, 18;
	mov.b64 	%rd12901, {%r8876, %r8875};
	xor.b64  	%rd12902, %rd12901, %rd12900;
	shf.l.wrap.b32 	%r8877, %r8871, %r8872, 23;
	shf.l.wrap.b32 	%r8878, %r8872, %r8871, 23;
	mov.b64 	%rd12903, {%r8878, %r8877};
	xor.b64  	%rd12904, %rd12902, %rd12903;
	xor.b64  	%rd12905, %rd12859, %rd18837;
	and.b64  	%rd12906, %rd12886, %rd12905;
	xor.b64  	%rd12907, %rd12906, %rd18837;
	add.s64 	%rd12908, %rd18843, %rd18838;
	ld.const.u64 	%rd12909, [%rd12899];
	add.s64 	%rd12910, %rd12908, %rd12909;
	add.s64 	%rd12911, %rd12910, %rd12907;
	add.s64 	%rd12912, %rd12911, %rd12904;
	add.s64 	%rd12913, %rd12912, %rd18834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8879,%dummy}, %rd12897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8880}, %rd12897;
	}
	shf.r.wrap.b32 	%r8881, %r8880, %r8879, 28;
	shf.r.wrap.b32 	%r8882, %r8879, %r8880, 28;
	mov.b64 	%rd12914, {%r8882, %r8881};
	shf.l.wrap.b32 	%r8883, %r8879, %r8880, 30;
	shf.l.wrap.b32 	%r8884, %r8880, %r8879, 30;
	mov.b64 	%rd12915, {%r8884, %r8883};
	xor.b64  	%rd12916, %rd12915, %rd12914;
	shf.l.wrap.b32 	%r8885, %r8879, %r8880, 25;
	shf.l.wrap.b32 	%r8886, %r8880, %r8879, 25;
	mov.b64 	%rd12917, {%r8886, %r8885};
	xor.b64  	%rd12918, %rd12916, %rd12917;
	and.b64  	%rd12919, %rd12897, %rd12870;
	xor.b64  	%rd12920, %rd12897, %rd12870;
	and.b64  	%rd12921, %rd12920, %rd18833;
	or.b64  	%rd12922, %rd12921, %rd12919;
	add.s64 	%rd12923, %rd12912, %rd12922;
	add.s64 	%rd12924, %rd12923, %rd12918;
	add.s32 	%r8887, %r13026, 3;
	mul.wide.s32 	%rd12925, %r8887, 8;
	add.s64 	%rd12926, %rd18515, %rd12925;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8888,%dummy}, %rd12913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8889}, %rd12913;
	}
	shf.r.wrap.b32 	%r8890, %r8889, %r8888, 14;
	shf.r.wrap.b32 	%r8891, %r8888, %r8889, 14;
	mov.b64 	%rd12927, {%r8891, %r8890};
	shf.r.wrap.b32 	%r8892, %r8889, %r8888, 18;
	shf.r.wrap.b32 	%r8893, %r8888, %r8889, 18;
	mov.b64 	%rd12928, {%r8893, %r8892};
	xor.b64  	%rd12929, %rd12928, %rd12927;
	shf.l.wrap.b32 	%r8894, %r8888, %r8889, 23;
	shf.l.wrap.b32 	%r8895, %r8889, %r8888, 23;
	mov.b64 	%rd12930, {%r8895, %r8894};
	xor.b64  	%rd12931, %rd12929, %rd12930;
	xor.b64  	%rd12932, %rd12886, %rd12859;
	and.b64  	%rd12933, %rd12913, %rd12932;
	xor.b64  	%rd12934, %rd12933, %rd12859;
	add.s64 	%rd12935, %rd18844, %rd18837;
	ld.const.u64 	%rd12936, [%rd12926];
	add.s64 	%rd12937, %rd12935, %rd12936;
	add.s64 	%rd12938, %rd12937, %rd12934;
	add.s64 	%rd12939, %rd12938, %rd12931;
	add.s64 	%rd12940, %rd12939, %rd18833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8896,%dummy}, %rd12924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8897}, %rd12924;
	}
	shf.r.wrap.b32 	%r8898, %r8897, %r8896, 28;
	shf.r.wrap.b32 	%r8899, %r8896, %r8897, 28;
	mov.b64 	%rd12941, {%r8899, %r8898};
	shf.l.wrap.b32 	%r8900, %r8896, %r8897, 30;
	shf.l.wrap.b32 	%r8901, %r8897, %r8896, 30;
	mov.b64 	%rd12942, {%r8901, %r8900};
	xor.b64  	%rd12943, %rd12942, %rd12941;
	shf.l.wrap.b32 	%r8902, %r8896, %r8897, 25;
	shf.l.wrap.b32 	%r8903, %r8897, %r8896, 25;
	mov.b64 	%rd12944, {%r8903, %r8902};
	xor.b64  	%rd12945, %rd12943, %rd12944;
	and.b64  	%rd12946, %rd12924, %rd12897;
	xor.b64  	%rd12947, %rd12924, %rd12897;
	and.b64  	%rd12948, %rd12947, %rd12870;
	or.b64  	%rd12949, %rd12948, %rd12946;
	add.s64 	%rd12950, %rd12939, %rd12949;
	add.s64 	%rd12951, %rd12950, %rd12945;
	add.s32 	%r8904, %r13026, 4;
	mul.wide.s32 	%rd12952, %r8904, 8;
	add.s64 	%rd12953, %rd18515, %rd12952;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8905,%dummy}, %rd12940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8906}, %rd12940;
	}
	shf.r.wrap.b32 	%r8907, %r8906, %r8905, 14;
	shf.r.wrap.b32 	%r8908, %r8905, %r8906, 14;
	mov.b64 	%rd12954, {%r8908, %r8907};
	shf.r.wrap.b32 	%r8909, %r8906, %r8905, 18;
	shf.r.wrap.b32 	%r8910, %r8905, %r8906, 18;
	mov.b64 	%rd12955, {%r8910, %r8909};
	xor.b64  	%rd12956, %rd12955, %rd12954;
	shf.l.wrap.b32 	%r8911, %r8905, %r8906, 23;
	shf.l.wrap.b32 	%r8912, %r8906, %r8905, 23;
	mov.b64 	%rd12957, {%r8912, %r8911};
	xor.b64  	%rd12958, %rd12956, %rd12957;
	xor.b64  	%rd12959, %rd12913, %rd12886;
	and.b64  	%rd12960, %rd12940, %rd12959;
	xor.b64  	%rd12961, %rd12960, %rd12886;
	add.s64 	%rd12962, %rd12859, %rd18845;
	ld.const.u64 	%rd12963, [%rd12953];
	add.s64 	%rd12964, %rd12962, %rd12963;
	add.s64 	%rd12965, %rd12964, %rd12961;
	add.s64 	%rd12966, %rd12965, %rd12958;
	add.s64 	%rd12967, %rd12966, %rd12870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8913,%dummy}, %rd12951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8914}, %rd12951;
	}
	shf.r.wrap.b32 	%r8915, %r8914, %r8913, 28;
	shf.r.wrap.b32 	%r8916, %r8913, %r8914, 28;
	mov.b64 	%rd12968, {%r8916, %r8915};
	shf.l.wrap.b32 	%r8917, %r8913, %r8914, 30;
	shf.l.wrap.b32 	%r8918, %r8914, %r8913, 30;
	mov.b64 	%rd12969, {%r8918, %r8917};
	xor.b64  	%rd12970, %rd12969, %rd12968;
	shf.l.wrap.b32 	%r8919, %r8913, %r8914, 25;
	shf.l.wrap.b32 	%r8920, %r8914, %r8913, 25;
	mov.b64 	%rd12971, {%r8920, %r8919};
	xor.b64  	%rd12972, %rd12970, %rd12971;
	and.b64  	%rd12973, %rd12951, %rd12924;
	xor.b64  	%rd12974, %rd12951, %rd12924;
	and.b64  	%rd12975, %rd12974, %rd12897;
	or.b64  	%rd12976, %rd12975, %rd12973;
	add.s64 	%rd12977, %rd12966, %rd12976;
	add.s64 	%rd12978, %rd12977, %rd12972;
	add.s32 	%r8921, %r13026, 5;
	mul.wide.s32 	%rd12979, %r8921, 8;
	add.s64 	%rd12980, %rd18515, %rd12979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8922,%dummy}, %rd12967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8923}, %rd12967;
	}
	shf.r.wrap.b32 	%r8924, %r8923, %r8922, 14;
	shf.r.wrap.b32 	%r8925, %r8922, %r8923, 14;
	mov.b64 	%rd12981, {%r8925, %r8924};
	shf.r.wrap.b32 	%r8926, %r8923, %r8922, 18;
	shf.r.wrap.b32 	%r8927, %r8922, %r8923, 18;
	mov.b64 	%rd12982, {%r8927, %r8926};
	xor.b64  	%rd12983, %rd12982, %rd12981;
	shf.l.wrap.b32 	%r8928, %r8922, %r8923, 23;
	shf.l.wrap.b32 	%r8929, %r8923, %r8922, 23;
	mov.b64 	%rd12984, {%r8929, %r8928};
	xor.b64  	%rd12985, %rd12983, %rd12984;
	xor.b64  	%rd12986, %rd12940, %rd12913;
	and.b64  	%rd12987, %rd12967, %rd12986;
	xor.b64  	%rd12988, %rd12987, %rd12913;
	add.s64 	%rd12989, %rd12886, %rd18846;
	ld.const.u64 	%rd12990, [%rd12980];
	add.s64 	%rd12991, %rd12989, %rd12990;
	add.s64 	%rd12992, %rd12991, %rd12988;
	add.s64 	%rd12993, %rd12992, %rd12985;
	add.s64 	%rd12994, %rd12993, %rd12897;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8930,%dummy}, %rd12978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8931}, %rd12978;
	}
	shf.r.wrap.b32 	%r8932, %r8931, %r8930, 28;
	shf.r.wrap.b32 	%r8933, %r8930, %r8931, 28;
	mov.b64 	%rd12995, {%r8933, %r8932};
	shf.l.wrap.b32 	%r8934, %r8930, %r8931, 30;
	shf.l.wrap.b32 	%r8935, %r8931, %r8930, 30;
	mov.b64 	%rd12996, {%r8935, %r8934};
	xor.b64  	%rd12997, %rd12996, %rd12995;
	shf.l.wrap.b32 	%r8936, %r8930, %r8931, 25;
	shf.l.wrap.b32 	%r8937, %r8931, %r8930, 25;
	mov.b64 	%rd12998, {%r8937, %r8936};
	xor.b64  	%rd12999, %rd12997, %rd12998;
	and.b64  	%rd13000, %rd12978, %rd12951;
	xor.b64  	%rd13001, %rd12978, %rd12951;
	and.b64  	%rd13002, %rd13001, %rd12924;
	or.b64  	%rd13003, %rd13002, %rd13000;
	add.s64 	%rd13004, %rd12993, %rd13003;
	add.s64 	%rd13005, %rd13004, %rd12999;
	add.s32 	%r8938, %r13026, 6;
	mul.wide.s32 	%rd13006, %r8938, 8;
	add.s64 	%rd13007, %rd18515, %rd13006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8939,%dummy}, %rd12994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8940}, %rd12994;
	}
	shf.r.wrap.b32 	%r8941, %r8940, %r8939, 14;
	shf.r.wrap.b32 	%r8942, %r8939, %r8940, 14;
	mov.b64 	%rd13008, {%r8942, %r8941};
	shf.r.wrap.b32 	%r8943, %r8940, %r8939, 18;
	shf.r.wrap.b32 	%r8944, %r8939, %r8940, 18;
	mov.b64 	%rd13009, {%r8944, %r8943};
	xor.b64  	%rd13010, %rd13009, %rd13008;
	shf.l.wrap.b32 	%r8945, %r8939, %r8940, 23;
	shf.l.wrap.b32 	%r8946, %r8940, %r8939, 23;
	mov.b64 	%rd13011, {%r8946, %r8945};
	xor.b64  	%rd13012, %rd13010, %rd13011;
	xor.b64  	%rd13013, %rd12967, %rd12940;
	and.b64  	%rd13014, %rd12994, %rd13013;
	xor.b64  	%rd13015, %rd13014, %rd12940;
	add.s64 	%rd13016, %rd12913, %rd18847;
	ld.const.u64 	%rd13017, [%rd13007];
	add.s64 	%rd13018, %rd13016, %rd13017;
	add.s64 	%rd13019, %rd13018, %rd13015;
	add.s64 	%rd13020, %rd13019, %rd13012;
	add.s64 	%rd13021, %rd13020, %rd12924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8947,%dummy}, %rd13005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8948}, %rd13005;
	}
	shf.r.wrap.b32 	%r8949, %r8948, %r8947, 28;
	shf.r.wrap.b32 	%r8950, %r8947, %r8948, 28;
	mov.b64 	%rd13022, {%r8950, %r8949};
	shf.l.wrap.b32 	%r8951, %r8947, %r8948, 30;
	shf.l.wrap.b32 	%r8952, %r8948, %r8947, 30;
	mov.b64 	%rd13023, {%r8952, %r8951};
	xor.b64  	%rd13024, %rd13023, %rd13022;
	shf.l.wrap.b32 	%r8953, %r8947, %r8948, 25;
	shf.l.wrap.b32 	%r8954, %r8948, %r8947, 25;
	mov.b64 	%rd13025, {%r8954, %r8953};
	xor.b64  	%rd13026, %rd13024, %rd13025;
	and.b64  	%rd13027, %rd13005, %rd12978;
	xor.b64  	%rd13028, %rd13005, %rd12978;
	and.b64  	%rd13029, %rd13028, %rd12951;
	or.b64  	%rd13030, %rd13029, %rd13027;
	add.s64 	%rd13031, %rd13020, %rd13030;
	add.s64 	%rd13032, %rd13031, %rd13026;
	add.s32 	%r8955, %r13026, 7;
	mul.wide.s32 	%rd13033, %r8955, 8;
	add.s64 	%rd13034, %rd18515, %rd13033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8956,%dummy}, %rd13021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8957}, %rd13021;
	}
	shf.r.wrap.b32 	%r8958, %r8957, %r8956, 14;
	shf.r.wrap.b32 	%r8959, %r8956, %r8957, 14;
	mov.b64 	%rd13035, {%r8959, %r8958};
	shf.r.wrap.b32 	%r8960, %r8957, %r8956, 18;
	shf.r.wrap.b32 	%r8961, %r8956, %r8957, 18;
	mov.b64 	%rd13036, {%r8961, %r8960};
	xor.b64  	%rd13037, %rd13036, %rd13035;
	shf.l.wrap.b32 	%r8962, %r8956, %r8957, 23;
	shf.l.wrap.b32 	%r8963, %r8957, %r8956, 23;
	mov.b64 	%rd13038, {%r8963, %r8962};
	xor.b64  	%rd13039, %rd13037, %rd13038;
	xor.b64  	%rd13040, %rd12994, %rd12967;
	and.b64  	%rd13041, %rd13021, %rd13040;
	xor.b64  	%rd13042, %rd13041, %rd12967;
	add.s64 	%rd13043, %rd12940, %rd18848;
	ld.const.u64 	%rd13044, [%rd13034];
	add.s64 	%rd13045, %rd13043, %rd13044;
	add.s64 	%rd13046, %rd13045, %rd13042;
	add.s64 	%rd13047, %rd13046, %rd13039;
	add.s64 	%rd13048, %rd13047, %rd12951;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8964,%dummy}, %rd13032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8965}, %rd13032;
	}
	shf.r.wrap.b32 	%r8966, %r8965, %r8964, 28;
	shf.r.wrap.b32 	%r8967, %r8964, %r8965, 28;
	mov.b64 	%rd13049, {%r8967, %r8966};
	shf.l.wrap.b32 	%r8968, %r8964, %r8965, 30;
	shf.l.wrap.b32 	%r8969, %r8965, %r8964, 30;
	mov.b64 	%rd13050, {%r8969, %r8968};
	xor.b64  	%rd13051, %rd13050, %rd13049;
	shf.l.wrap.b32 	%r8970, %r8964, %r8965, 25;
	shf.l.wrap.b32 	%r8971, %r8965, %r8964, 25;
	mov.b64 	%rd13052, {%r8971, %r8970};
	xor.b64  	%rd13053, %rd13051, %rd13052;
	and.b64  	%rd13054, %rd13032, %rd13005;
	xor.b64  	%rd13055, %rd13032, %rd13005;
	and.b64  	%rd13056, %rd13055, %rd12978;
	or.b64  	%rd13057, %rd13056, %rd13054;
	add.s64 	%rd13058, %rd13047, %rd13057;
	add.s64 	%rd13059, %rd13058, %rd13053;
	add.s32 	%r8972, %r13026, 8;
	mul.wide.s32 	%rd13060, %r8972, 8;
	add.s64 	%rd13061, %rd18515, %rd13060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8973,%dummy}, %rd13048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8974}, %rd13048;
	}
	shf.r.wrap.b32 	%r8975, %r8974, %r8973, 14;
	shf.r.wrap.b32 	%r8976, %r8973, %r8974, 14;
	mov.b64 	%rd13062, {%r8976, %r8975};
	shf.r.wrap.b32 	%r8977, %r8974, %r8973, 18;
	shf.r.wrap.b32 	%r8978, %r8973, %r8974, 18;
	mov.b64 	%rd13063, {%r8978, %r8977};
	xor.b64  	%rd13064, %rd13063, %rd13062;
	shf.l.wrap.b32 	%r8979, %r8973, %r8974, 23;
	shf.l.wrap.b32 	%r8980, %r8974, %r8973, 23;
	mov.b64 	%rd13065, {%r8980, %r8979};
	xor.b64  	%rd13066, %rd13064, %rd13065;
	xor.b64  	%rd13067, %rd13021, %rd12994;
	and.b64  	%rd13068, %rd13048, %rd13067;
	xor.b64  	%rd13069, %rd13068, %rd12994;
	add.s64 	%rd13070, %rd12967, %rd18832;
	ld.const.u64 	%rd13071, [%rd13061];
	add.s64 	%rd13072, %rd13070, %rd13071;
	add.s64 	%rd13073, %rd13072, %rd13069;
	add.s64 	%rd13074, %rd13073, %rd13066;
	add.s64 	%rd13075, %rd13074, %rd12978;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8981,%dummy}, %rd13059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8982}, %rd13059;
	}
	shf.r.wrap.b32 	%r8983, %r8982, %r8981, 28;
	shf.r.wrap.b32 	%r8984, %r8981, %r8982, 28;
	mov.b64 	%rd13076, {%r8984, %r8983};
	shf.l.wrap.b32 	%r8985, %r8981, %r8982, 30;
	shf.l.wrap.b32 	%r8986, %r8982, %r8981, 30;
	mov.b64 	%rd13077, {%r8986, %r8985};
	xor.b64  	%rd13078, %rd13077, %rd13076;
	shf.l.wrap.b32 	%r8987, %r8981, %r8982, 25;
	shf.l.wrap.b32 	%r8988, %r8982, %r8981, 25;
	mov.b64 	%rd13079, {%r8988, %r8987};
	xor.b64  	%rd13080, %rd13078, %rd13079;
	and.b64  	%rd13081, %rd13059, %rd13032;
	xor.b64  	%rd13082, %rd13059, %rd13032;
	and.b64  	%rd13083, %rd13082, %rd13005;
	or.b64  	%rd13084, %rd13083, %rd13081;
	add.s64 	%rd13085, %rd13074, %rd13084;
	add.s64 	%rd13086, %rd13085, %rd13080;
	add.s32 	%r8989, %r13026, 9;
	mul.wide.s32 	%rd13087, %r8989, 8;
	add.s64 	%rd13088, %rd18515, %rd13087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8990,%dummy}, %rd13075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8991}, %rd13075;
	}
	shf.r.wrap.b32 	%r8992, %r8991, %r8990, 14;
	shf.r.wrap.b32 	%r8993, %r8990, %r8991, 14;
	mov.b64 	%rd13089, {%r8993, %r8992};
	shf.r.wrap.b32 	%r8994, %r8991, %r8990, 18;
	shf.r.wrap.b32 	%r8995, %r8990, %r8991, 18;
	mov.b64 	%rd13090, {%r8995, %r8994};
	xor.b64  	%rd13091, %rd13090, %rd13089;
	shf.l.wrap.b32 	%r8996, %r8990, %r8991, 23;
	shf.l.wrap.b32 	%r8997, %r8991, %r8990, 23;
	mov.b64 	%rd13092, {%r8997, %r8996};
	xor.b64  	%rd13093, %rd13091, %rd13092;
	xor.b64  	%rd13094, %rd13048, %rd13021;
	and.b64  	%rd13095, %rd13075, %rd13094;
	xor.b64  	%rd13096, %rd13095, %rd13021;
	add.s64 	%rd13097, %rd12994, %rd18831;
	ld.const.u64 	%rd13098, [%rd13088];
	add.s64 	%rd13099, %rd13097, %rd13098;
	add.s64 	%rd13100, %rd13099, %rd13096;
	add.s64 	%rd13101, %rd13100, %rd13093;
	add.s64 	%rd13102, %rd13101, %rd13005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8998,%dummy}, %rd13086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8999}, %rd13086;
	}
	shf.r.wrap.b32 	%r9000, %r8999, %r8998, 28;
	shf.r.wrap.b32 	%r9001, %r8998, %r8999, 28;
	mov.b64 	%rd13103, {%r9001, %r9000};
	shf.l.wrap.b32 	%r9002, %r8998, %r8999, 30;
	shf.l.wrap.b32 	%r9003, %r8999, %r8998, 30;
	mov.b64 	%rd13104, {%r9003, %r9002};
	xor.b64  	%rd13105, %rd13104, %rd13103;
	shf.l.wrap.b32 	%r9004, %r8998, %r8999, 25;
	shf.l.wrap.b32 	%r9005, %r8999, %r8998, 25;
	mov.b64 	%rd13106, {%r9005, %r9004};
	xor.b64  	%rd13107, %rd13105, %rd13106;
	and.b64  	%rd13108, %rd13086, %rd13059;
	xor.b64  	%rd13109, %rd13086, %rd13059;
	and.b64  	%rd13110, %rd13109, %rd13032;
	or.b64  	%rd13111, %rd13110, %rd13108;
	add.s64 	%rd13112, %rd13101, %rd13111;
	add.s64 	%rd13113, %rd13112, %rd13107;
	add.s32 	%r9006, %r13026, 10;
	mul.wide.s32 	%rd13114, %r9006, 8;
	add.s64 	%rd13115, %rd18515, %rd13114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9007,%dummy}, %rd13102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9008}, %rd13102;
	}
	shf.r.wrap.b32 	%r9009, %r9008, %r9007, 14;
	shf.r.wrap.b32 	%r9010, %r9007, %r9008, 14;
	mov.b64 	%rd13116, {%r9010, %r9009};
	shf.r.wrap.b32 	%r9011, %r9008, %r9007, 18;
	shf.r.wrap.b32 	%r9012, %r9007, %r9008, 18;
	mov.b64 	%rd13117, {%r9012, %r9011};
	xor.b64  	%rd13118, %rd13117, %rd13116;
	shf.l.wrap.b32 	%r9013, %r9007, %r9008, 23;
	shf.l.wrap.b32 	%r9014, %r9008, %r9007, 23;
	mov.b64 	%rd13119, {%r9014, %r9013};
	xor.b64  	%rd13120, %rd13118, %rd13119;
	xor.b64  	%rd13121, %rd13075, %rd13048;
	and.b64  	%rd13122, %rd13102, %rd13121;
	xor.b64  	%rd13123, %rd13122, %rd13048;
	add.s64 	%rd13124, %rd13021, %rd18830;
	ld.const.u64 	%rd13125, [%rd13115];
	add.s64 	%rd13126, %rd13124, %rd13125;
	add.s64 	%rd13127, %rd13126, %rd13123;
	add.s64 	%rd13128, %rd13127, %rd13120;
	add.s64 	%rd13129, %rd13128, %rd13032;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9015,%dummy}, %rd13113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9016}, %rd13113;
	}
	shf.r.wrap.b32 	%r9017, %r9016, %r9015, 28;
	shf.r.wrap.b32 	%r9018, %r9015, %r9016, 28;
	mov.b64 	%rd13130, {%r9018, %r9017};
	shf.l.wrap.b32 	%r9019, %r9015, %r9016, 30;
	shf.l.wrap.b32 	%r9020, %r9016, %r9015, 30;
	mov.b64 	%rd13131, {%r9020, %r9019};
	xor.b64  	%rd13132, %rd13131, %rd13130;
	shf.l.wrap.b32 	%r9021, %r9015, %r9016, 25;
	shf.l.wrap.b32 	%r9022, %r9016, %r9015, 25;
	mov.b64 	%rd13133, {%r9022, %r9021};
	xor.b64  	%rd13134, %rd13132, %rd13133;
	and.b64  	%rd13135, %rd13113, %rd13086;
	xor.b64  	%rd13136, %rd13113, %rd13086;
	and.b64  	%rd13137, %rd13136, %rd13059;
	or.b64  	%rd13138, %rd13137, %rd13135;
	add.s64 	%rd13139, %rd13128, %rd13138;
	add.s64 	%rd13140, %rd13139, %rd13134;
	add.s32 	%r9023, %r13026, 11;
	mul.wide.s32 	%rd13141, %r9023, 8;
	add.s64 	%rd13142, %rd18515, %rd13141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9024,%dummy}, %rd13129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9025}, %rd13129;
	}
	shf.r.wrap.b32 	%r9026, %r9025, %r9024, 14;
	shf.r.wrap.b32 	%r9027, %r9024, %r9025, 14;
	mov.b64 	%rd13143, {%r9027, %r9026};
	shf.r.wrap.b32 	%r9028, %r9025, %r9024, 18;
	shf.r.wrap.b32 	%r9029, %r9024, %r9025, 18;
	mov.b64 	%rd13144, {%r9029, %r9028};
	xor.b64  	%rd13145, %rd13144, %rd13143;
	shf.l.wrap.b32 	%r9030, %r9024, %r9025, 23;
	shf.l.wrap.b32 	%r9031, %r9025, %r9024, 23;
	mov.b64 	%rd13146, {%r9031, %r9030};
	xor.b64  	%rd13147, %rd13145, %rd13146;
	xor.b64  	%rd13148, %rd13102, %rd13075;
	and.b64  	%rd13149, %rd13129, %rd13148;
	xor.b64  	%rd13150, %rd13149, %rd13075;
	add.s64 	%rd13151, %rd13048, %rd18829;
	ld.const.u64 	%rd13152, [%rd13142];
	add.s64 	%rd13153, %rd13151, %rd13152;
	add.s64 	%rd13154, %rd13153, %rd13150;
	add.s64 	%rd13155, %rd13154, %rd13147;
	add.s64 	%rd13156, %rd13155, %rd13059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9032,%dummy}, %rd13140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9033}, %rd13140;
	}
	shf.r.wrap.b32 	%r9034, %r9033, %r9032, 28;
	shf.r.wrap.b32 	%r9035, %r9032, %r9033, 28;
	mov.b64 	%rd13157, {%r9035, %r9034};
	shf.l.wrap.b32 	%r9036, %r9032, %r9033, 30;
	shf.l.wrap.b32 	%r9037, %r9033, %r9032, 30;
	mov.b64 	%rd13158, {%r9037, %r9036};
	xor.b64  	%rd13159, %rd13158, %rd13157;
	shf.l.wrap.b32 	%r9038, %r9032, %r9033, 25;
	shf.l.wrap.b32 	%r9039, %r9033, %r9032, 25;
	mov.b64 	%rd13160, {%r9039, %r9038};
	xor.b64  	%rd13161, %rd13159, %rd13160;
	and.b64  	%rd13162, %rd13140, %rd13113;
	xor.b64  	%rd13163, %rd13140, %rd13113;
	and.b64  	%rd13164, %rd13163, %rd13086;
	or.b64  	%rd13165, %rd13164, %rd13162;
	add.s64 	%rd13166, %rd13155, %rd13165;
	add.s64 	%rd13167, %rd13166, %rd13161;
	add.s32 	%r9040, %r13026, 12;
	mul.wide.s32 	%rd13168, %r9040, 8;
	add.s64 	%rd13169, %rd18515, %rd13168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9041,%dummy}, %rd13156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9042}, %rd13156;
	}
	shf.r.wrap.b32 	%r9043, %r9042, %r9041, 14;
	shf.r.wrap.b32 	%r9044, %r9041, %r9042, 14;
	mov.b64 	%rd13170, {%r9044, %r9043};
	shf.r.wrap.b32 	%r9045, %r9042, %r9041, 18;
	shf.r.wrap.b32 	%r9046, %r9041, %r9042, 18;
	mov.b64 	%rd13171, {%r9046, %r9045};
	xor.b64  	%rd13172, %rd13171, %rd13170;
	shf.l.wrap.b32 	%r9047, %r9041, %r9042, 23;
	shf.l.wrap.b32 	%r9048, %r9042, %r9041, 23;
	mov.b64 	%rd13173, {%r9048, %r9047};
	xor.b64  	%rd13174, %rd13172, %rd13173;
	xor.b64  	%rd13175, %rd13129, %rd13102;
	and.b64  	%rd13176, %rd13156, %rd13175;
	xor.b64  	%rd13177, %rd13176, %rd13102;
	add.s64 	%rd13178, %rd13075, %rd18828;
	ld.const.u64 	%rd13179, [%rd13169];
	add.s64 	%rd13180, %rd13178, %rd13179;
	add.s64 	%rd13181, %rd13180, %rd13177;
	add.s64 	%rd13182, %rd13181, %rd13174;
	add.s64 	%rd18840, %rd13182, %rd13086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9049,%dummy}, %rd13167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9050}, %rd13167;
	}
	shf.r.wrap.b32 	%r9051, %r9050, %r9049, 28;
	shf.r.wrap.b32 	%r9052, %r9049, %r9050, 28;
	mov.b64 	%rd13183, {%r9052, %r9051};
	shf.l.wrap.b32 	%r9053, %r9049, %r9050, 30;
	shf.l.wrap.b32 	%r9054, %r9050, %r9049, 30;
	mov.b64 	%rd13184, {%r9054, %r9053};
	xor.b64  	%rd13185, %rd13184, %rd13183;
	shf.l.wrap.b32 	%r9055, %r9049, %r9050, 25;
	shf.l.wrap.b32 	%r9056, %r9050, %r9049, 25;
	mov.b64 	%rd13186, {%r9056, %r9055};
	xor.b64  	%rd13187, %rd13185, %rd13186;
	and.b64  	%rd13188, %rd13167, %rd13140;
	xor.b64  	%rd13189, %rd13167, %rd13140;
	and.b64  	%rd13190, %rd13189, %rd13113;
	or.b64  	%rd13191, %rd13190, %rd13188;
	add.s64 	%rd13192, %rd13182, %rd13191;
	add.s64 	%rd18836, %rd13192, %rd13187;
	add.s32 	%r9057, %r13026, 13;
	mul.wide.s32 	%rd13193, %r9057, 8;
	add.s64 	%rd13194, %rd18515, %rd13193;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9058,%dummy}, %rd18840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9059}, %rd18840;
	}
	shf.r.wrap.b32 	%r9060, %r9059, %r9058, 14;
	shf.r.wrap.b32 	%r9061, %r9058, %r9059, 14;
	mov.b64 	%rd13195, {%r9061, %r9060};
	shf.r.wrap.b32 	%r9062, %r9059, %r9058, 18;
	shf.r.wrap.b32 	%r9063, %r9058, %r9059, 18;
	mov.b64 	%rd13196, {%r9063, %r9062};
	xor.b64  	%rd13197, %rd13196, %rd13195;
	shf.l.wrap.b32 	%r9064, %r9058, %r9059, 23;
	shf.l.wrap.b32 	%r9065, %r9059, %r9058, 23;
	mov.b64 	%rd13198, {%r9065, %r9064};
	xor.b64  	%rd13199, %rd13197, %rd13198;
	xor.b64  	%rd13200, %rd13156, %rd13129;
	and.b64  	%rd13201, %rd18840, %rd13200;
	xor.b64  	%rd13202, %rd13201, %rd13129;
	add.s64 	%rd13203, %rd13102, %rd18827;
	ld.const.u64 	%rd13204, [%rd13194];
	add.s64 	%rd13205, %rd13203, %rd13204;
	add.s64 	%rd13206, %rd13205, %rd13202;
	add.s64 	%rd13207, %rd13206, %rd13199;
	add.s64 	%rd18839, %rd13207, %rd13113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9066,%dummy}, %rd18836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9067}, %rd18836;
	}
	shf.r.wrap.b32 	%r9068, %r9067, %r9066, 28;
	shf.r.wrap.b32 	%r9069, %r9066, %r9067, 28;
	mov.b64 	%rd13208, {%r9069, %r9068};
	shf.l.wrap.b32 	%r9070, %r9066, %r9067, 30;
	shf.l.wrap.b32 	%r9071, %r9067, %r9066, 30;
	mov.b64 	%rd13209, {%r9071, %r9070};
	xor.b64  	%rd13210, %rd13209, %rd13208;
	shf.l.wrap.b32 	%r9072, %r9066, %r9067, 25;
	shf.l.wrap.b32 	%r9073, %r9067, %r9066, 25;
	mov.b64 	%rd13211, {%r9073, %r9072};
	xor.b64  	%rd13212, %rd13210, %rd13211;
	and.b64  	%rd13213, %rd18836, %rd13167;
	xor.b64  	%rd13214, %rd18836, %rd13167;
	and.b64  	%rd13215, %rd13214, %rd13140;
	or.b64  	%rd13216, %rd13215, %rd13213;
	add.s64 	%rd13217, %rd13207, %rd13216;
	add.s64 	%rd18835, %rd13217, %rd13212;
	add.s32 	%r9074, %r13026, 14;
	mul.wide.s32 	%rd13218, %r9074, 8;
	add.s64 	%rd13219, %rd18515, %rd13218;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9075,%dummy}, %rd18839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9076}, %rd18839;
	}
	shf.r.wrap.b32 	%r9077, %r9076, %r9075, 14;
	shf.r.wrap.b32 	%r9078, %r9075, %r9076, 14;
	mov.b64 	%rd13220, {%r9078, %r9077};
	shf.r.wrap.b32 	%r9079, %r9076, %r9075, 18;
	shf.r.wrap.b32 	%r9080, %r9075, %r9076, 18;
	mov.b64 	%rd13221, {%r9080, %r9079};
	xor.b64  	%rd13222, %rd13221, %rd13220;
	shf.l.wrap.b32 	%r9081, %r9075, %r9076, 23;
	shf.l.wrap.b32 	%r9082, %r9076, %r9075, 23;
	mov.b64 	%rd13223, {%r9082, %r9081};
	xor.b64  	%rd13224, %rd13222, %rd13223;
	xor.b64  	%rd13225, %rd18840, %rd13156;
	and.b64  	%rd13226, %rd18839, %rd13225;
	xor.b64  	%rd13227, %rd13226, %rd13156;
	add.s64 	%rd13228, %rd13129, %rd18826;
	ld.const.u64 	%rd13229, [%rd13219];
	add.s64 	%rd13230, %rd13228, %rd13229;
	add.s64 	%rd13231, %rd13230, %rd13227;
	add.s64 	%rd13232, %rd13231, %rd13224;
	add.s64 	%rd18838, %rd13232, %rd13140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9083,%dummy}, %rd18835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9084}, %rd18835;
	}
	shf.r.wrap.b32 	%r9085, %r9084, %r9083, 28;
	shf.r.wrap.b32 	%r9086, %r9083, %r9084, 28;
	mov.b64 	%rd13233, {%r9086, %r9085};
	shf.l.wrap.b32 	%r9087, %r9083, %r9084, 30;
	shf.l.wrap.b32 	%r9088, %r9084, %r9083, 30;
	mov.b64 	%rd13234, {%r9088, %r9087};
	xor.b64  	%rd13235, %rd13234, %rd13233;
	shf.l.wrap.b32 	%r9089, %r9083, %r9084, 25;
	shf.l.wrap.b32 	%r9090, %r9084, %r9083, 25;
	mov.b64 	%rd13236, {%r9090, %r9089};
	xor.b64  	%rd13237, %rd13235, %rd13236;
	and.b64  	%rd13238, %rd18835, %rd18836;
	xor.b64  	%rd13239, %rd18835, %rd18836;
	and.b64  	%rd13240, %rd13239, %rd13167;
	or.b64  	%rd13241, %rd13240, %rd13238;
	add.s64 	%rd13242, %rd13232, %rd13241;
	add.s64 	%rd18834, %rd13242, %rd13237;
	add.s32 	%r9091, %r13026, 15;
	mul.wide.s32 	%rd13243, %r9091, 8;
	add.s64 	%rd13244, %rd18515, %rd13243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9092,%dummy}, %rd18838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9093}, %rd18838;
	}
	shf.r.wrap.b32 	%r9094, %r9093, %r9092, 14;
	shf.r.wrap.b32 	%r9095, %r9092, %r9093, 14;
	mov.b64 	%rd13245, {%r9095, %r9094};
	shf.r.wrap.b32 	%r9096, %r9093, %r9092, 18;
	shf.r.wrap.b32 	%r9097, %r9092, %r9093, 18;
	mov.b64 	%rd13246, {%r9097, %r9096};
	xor.b64  	%rd13247, %rd13246, %rd13245;
	shf.l.wrap.b32 	%r9098, %r9092, %r9093, 23;
	shf.l.wrap.b32 	%r9099, %r9093, %r9092, 23;
	mov.b64 	%rd13248, {%r9099, %r9098};
	xor.b64  	%rd13249, %rd13247, %rd13248;
	xor.b64  	%rd13250, %rd18839, %rd18840;
	and.b64  	%rd13251, %rd18838, %rd13250;
	xor.b64  	%rd13252, %rd13251, %rd18840;
	add.s64 	%rd13253, %rd13156, %rd18825;
	ld.const.u64 	%rd13254, [%rd13244];
	add.s64 	%rd13255, %rd13253, %rd13254;
	add.s64 	%rd13256, %rd13255, %rd13252;
	add.s64 	%rd13257, %rd13256, %rd13249;
	add.s64 	%rd18837, %rd13257, %rd13167;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9100,%dummy}, %rd18834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9101}, %rd18834;
	}
	shf.r.wrap.b32 	%r9102, %r9101, %r9100, 28;
	shf.r.wrap.b32 	%r9103, %r9100, %r9101, 28;
	mov.b64 	%rd13258, {%r9103, %r9102};
	shf.l.wrap.b32 	%r9104, %r9100, %r9101, 30;
	shf.l.wrap.b32 	%r9105, %r9101, %r9100, 30;
	mov.b64 	%rd13259, {%r9105, %r9104};
	xor.b64  	%rd13260, %rd13259, %rd13258;
	shf.l.wrap.b32 	%r9106, %r9100, %r9101, 25;
	shf.l.wrap.b32 	%r9107, %r9101, %r9100, 25;
	mov.b64 	%rd13261, {%r9107, %r9106};
	xor.b64  	%rd13262, %rd13260, %rd13261;
	and.b64  	%rd13263, %rd18834, %rd18835;
	xor.b64  	%rd13264, %rd18834, %rd18835;
	and.b64  	%rd13265, %rd13264, %rd18836;
	or.b64  	%rd13266, %rd13265, %rd13263;
	add.s64 	%rd13267, %rd13257, %rd13266;
	add.s64 	%rd18833, %rd13267, %rd13262;
	add.s32 	%r13026, %r13026, 16;
	setp.lt.s32	%p152, %r13026, 80;
	@%p152 bra 	BB0_246;

	add.s64 	%rd13268, %rd932, %rd18833;
	st.local.u64 	[%rd1], %rd13268;
	add.s64 	%rd13269, %rd933, %rd18834;
	st.local.u64 	[%rd1+8], %rd13269;
	add.s64 	%rd13270, %rd934, %rd18835;
	st.local.u64 	[%rd1+16], %rd13270;
	add.s64 	%rd13271, %rd931, %rd18836;
	st.local.u64 	[%rd1+24], %rd13271;
	add.s64 	%rd13272, %rd926, %rd18837;
	st.local.u64 	[%rd1+32], %rd13272;
	add.s64 	%rd13273, %rd928, %rd18838;
	st.local.u64 	[%rd1+40], %rd13273;
	add.s64 	%rd13274, %rd927, %rd18839;
	st.local.u64 	[%rd1+48], %rd13274;
	add.s64 	%rd13275, %rd929, %rd18840;
	st.local.u64 	[%rd1+56], %rd13275;
	sub.s32 	%r366, %r2, %r346;
	setp.lt.s32	%p153, %r366, 1;
	@%p153 bra 	BB0_264;

	add.s32 	%r9109, %r13016, %r340;
	and.b32  	%r367, %r9109, 3;
	setp.eq.s32	%p154, %r367, 0;
	mov.u32 	%r13030, 0;
	@%p154 bra 	BB0_254;

	setp.eq.s32	%p155, %r367, 1;
	mov.u32 	%r13028, 0;
	@%p155 bra 	BB0_253;

	setp.eq.s32	%p156, %r367, 2;
	mov.u32 	%r13027, 0;
	@%p156 bra 	BB0_252;

	xor.b32  	%r9113, %r346, 7;
	cvt.u64.u32	%rd13276, %r9113;
	add.s64 	%rd13277, %rd1463, %rd13276;
	ld.local.u8 	%rs230, [%rd13277];
	st.local.u8 	[%rd924], %rs230;
	mov.u32 	%r13027, 1;

BB0_252:
	add.s32 	%r9114, %r13027, %r346;
	xor.b32  	%r9115, %r9114, 7;
	cvt.s64.s32	%rd13278, %r9115;
	add.s64 	%rd13279, %rd1463, %rd13278;
	ld.local.u8 	%rs231, [%rd13279];
	xor.b32  	%r9116, %r13027, 7;
	cvt.u64.u32	%rd13280, %r9116;
	add.s64 	%rd13281, %rd89, %rd13280;
	st.local.u8 	[%rd13281], %rs231;
	add.s32 	%r13028, %r13027, 1;

BB0_253:
	add.s32 	%r9117, %r13028, %r346;
	xor.b32  	%r9118, %r9117, 7;
	cvt.s64.s32	%rd13282, %r9118;
	add.s64 	%rd13283, %rd1463, %rd13282;
	ld.local.u8 	%rs232, [%rd13283];
	xor.b32  	%r9119, %r13028, 7;
	cvt.s64.s32	%rd13284, %r9119;
	add.s64 	%rd13285, %rd89, %rd13284;
	st.local.u8 	[%rd13285], %rs232;
	add.s32 	%r13030, %r13028, 1;

BB0_254:
	add.s32 	%r9120, %r340, %r345;
	setp.lt.u32	%p157, %r9120, 4;
	@%p157 bra 	BB0_264;

BB0_255:
	add.s32 	%r9121, %r13030, %r346;
	xor.b32  	%r9122, %r9121, 7;
	cvt.s64.s32	%rd13286, %r9122;
	add.s64 	%rd13287, %rd1463, %rd13286;
	ld.local.u8 	%rs233, [%rd13287];
	xor.b32  	%r9123, %r13030, 7;
	cvt.s64.s32	%rd13288, %r9123;
	add.s64 	%rd13289, %rd89, %rd13288;
	st.local.u8 	[%rd13289], %rs233;
	add.s32 	%r9124, %r13030, 1;
	add.s32 	%r9125, %r9124, %r346;
	xor.b32  	%r9126, %r9125, 7;
	cvt.s64.s32	%rd13290, %r9126;
	add.s64 	%rd13291, %rd1463, %rd13290;
	ld.local.u8 	%rs234, [%rd13291];
	xor.b32  	%r9127, %r9124, 7;
	cvt.s64.s32	%rd13292, %r9127;
	add.s64 	%rd13293, %rd89, %rd13292;
	st.local.u8 	[%rd13293], %rs234;
	add.s32 	%r9128, %r13030, 2;
	add.s32 	%r9129, %r9128, %r346;
	xor.b32  	%r9130, %r9129, 7;
	cvt.s64.s32	%rd13294, %r9130;
	add.s64 	%rd13295, %rd1463, %rd13294;
	ld.local.u8 	%rs235, [%rd13295];
	xor.b32  	%r9131, %r9128, 7;
	cvt.s64.s32	%rd13296, %r9131;
	add.s64 	%rd13297, %rd89, %rd13296;
	st.local.u8 	[%rd13297], %rs235;
	add.s32 	%r9132, %r13030, 3;
	add.s32 	%r9133, %r9132, %r346;
	xor.b32  	%r9134, %r9133, 7;
	cvt.s64.s32	%rd13298, %r9134;
	add.s64 	%rd13299, %rd1463, %rd13298;
	ld.local.u8 	%rs236, [%rd13299];
	xor.b32  	%r9135, %r9132, 7;
	cvt.s64.s32	%rd13300, %r9135;
	add.s64 	%rd13301, %rd89, %rd13300;
	st.local.u8 	[%rd13301], %rs236;
	add.s32 	%r13030, %r13030, 4;
	setp.lt.s32	%p158, %r13030, %r366;
	@%p158 bra 	BB0_255;

BB0_264:
	add.s32 	%r13017, %r13017, 1;
	setp.lt.u32	%p164, %r13017, %r2;
	@%p164 bra 	BB0_339;

	ld.local.u32 	%r13039, [%rd1+192];

BB0_266:
	and.b32  	%r394, %r13039, 127;
	sub.s32 	%r395, %r2137, %r394;
	and.b32  	%r396, %r395, 3;
	setp.eq.s32	%p165, %r396, 0;
	mov.u32 	%r402, %r394;
	@%p165 bra 	BB0_272;

	setp.eq.s32	%p166, %r396, 1;
	mov.u32 	%r13041, %r394;
	@%p166 bra 	BB0_271;

	setp.eq.s32	%p167, %r396, 2;
	mov.u32 	%r13040, %r394;
	@%p167 bra 	BB0_270;

	xor.b32  	%r9160, %r394, 7;
	cvt.u64.u32	%rd13328, %r9160;
	add.s64 	%rd13329, %rd89, %rd13328;
	mov.u16 	%rs244, 0;
	st.local.u8 	[%rd13329], %rs244;
	add.s32 	%r13040, %r394, 1;

BB0_270:
	xor.b32  	%r9161, %r13040, 7;
	cvt.s64.s32	%rd13330, %r9161;
	add.s64 	%rd13331, %rd89, %rd13330;
	mov.u16 	%rs245, 0;
	st.local.u8 	[%rd13331], %rs245;
	add.s32 	%r13041, %r13040, 1;

BB0_271:
	xor.b32  	%r9162, %r13041, 7;
	cvt.s64.s32	%rd13332, %r9162;
	add.s64 	%rd13333, %rd89, %rd13332;
	mov.u16 	%rs246, 0;
	st.local.u8 	[%rd13333], %rs246;
	add.s32 	%r402, %r13041, 1;

BB0_272:
	setp.lt.u32	%p168, %r395, 4;
	@%p168 bra 	BB0_282;

	add.s32 	%r403, %r402, 4;
	setp.gt.s32	%p169, %r403, 128;
	add.s32 	%r404, %r402, 3;
	selp.b32	%r9163, %r404, 127, %p169;
	sub.s32 	%r9164, %r9163, %r402;
	shr.u32 	%r9165, %r9164, 2;
	add.s32 	%r405, %r9165, 1;
	and.b32  	%r406, %r405, 3;
	setp.eq.s32	%p170, %r406, 0;
	@%p170 bra 	BB0_280;

	setp.eq.s32	%p171, %r406, 1;
	@%p171 bra 	BB0_279;

	setp.eq.s32	%p172, %r406, 2;
	@%p172 bra 	BB0_276;
	bra.uni 	BB0_277;

BB0_276:
	mov.u32 	%r403, %r402;
	bra.uni 	BB0_278;

BB0_277:
	xor.b32  	%r9166, %r402, 7;
	cvt.s64.s32	%rd13334, %r9166;
	add.s64 	%rd13335, %rd89, %rd13334;
	mov.u16 	%rs247, 0;
	st.local.u8 	[%rd13335], %rs247;
	add.s32 	%r9167, %r402, 1;
	xor.b32  	%r9168, %r9167, 7;
	cvt.s64.s32	%rd13336, %r9168;
	add.s64 	%rd13337, %rd89, %rd13336;
	st.local.u8 	[%rd13337], %rs247;
	add.s32 	%r9169, %r402, 2;
	xor.b32  	%r9170, %r9169, 7;
	cvt.s64.s32	%rd13338, %r9170;
	add.s64 	%rd13339, %rd89, %rd13338;
	st.local.u8 	[%rd13339], %rs247;
	xor.b32  	%r9171, %r404, 7;
	cvt.s64.s32	%rd13340, %r9171;
	add.s64 	%rd13341, %rd89, %rd13340;
	st.local.u8 	[%rd13341], %rs247;

BB0_278:
	xor.b32  	%r9172, %r403, 7;
	cvt.s64.s32	%rd13342, %r9172;
	add.s64 	%rd13343, %rd89, %rd13342;
	mov.u16 	%rs248, 0;
	st.local.u8 	[%rd13343], %rs248;
	add.s32 	%r9173, %r403, 1;
	xor.b32  	%r9174, %r9173, 7;
	cvt.s64.s32	%rd13344, %r9174;
	add.s64 	%rd13345, %rd89, %rd13344;
	st.local.u8 	[%rd13345], %rs248;
	add.s32 	%r9175, %r403, 2;
	xor.b32  	%r9176, %r9175, 7;
	cvt.s64.s32	%rd13346, %r9176;
	add.s64 	%rd13347, %rd89, %rd13346;
	st.local.u8 	[%rd13347], %rs248;
	add.s32 	%r9177, %r403, 3;
	xor.b32  	%r9178, %r9177, 7;
	cvt.s64.s32	%rd13348, %r9178;
	add.s64 	%rd13349, %rd89, %rd13348;
	st.local.u8 	[%rd13349], %rs248;
	add.s32 	%r402, %r403, 4;

BB0_279:
	xor.b32  	%r9179, %r402, 7;
	cvt.s64.s32	%rd13350, %r9179;
	add.s64 	%rd13351, %rd89, %rd13350;
	mov.u16 	%rs249, 0;
	st.local.u8 	[%rd13351], %rs249;
	add.s32 	%r9180, %r402, 1;
	xor.b32  	%r9181, %r9180, 7;
	cvt.s64.s32	%rd13352, %r9181;
	add.s64 	%rd13353, %rd89, %rd13352;
	st.local.u8 	[%rd13353], %rs249;
	add.s32 	%r9182, %r402, 2;
	xor.b32  	%r9183, %r9182, 7;
	cvt.s64.s32	%rd13354, %r9183;
	add.s64 	%rd13355, %rd89, %rd13354;
	st.local.u8 	[%rd13355], %rs249;
	add.s32 	%r9184, %r402, 3;
	xor.b32  	%r9185, %r9184, 7;
	cvt.s64.s32	%rd13356, %r9185;
	add.s64 	%rd13357, %rd89, %rd13356;
	st.local.u8 	[%rd13357], %rs249;
	add.s32 	%r402, %r402, 4;

BB0_280:
	setp.lt.u32	%p173, %r405, 4;
	@%p173 bra 	BB0_282;

BB0_281:
	xor.b32  	%r9186, %r402, 7;
	cvt.s64.s32	%rd13358, %r9186;
	add.s64 	%rd13359, %rd89, %rd13358;
	mov.u16 	%rs250, 0;
	st.local.u8 	[%rd13359], %rs250;
	add.s32 	%r9187, %r402, 1;
	xor.b32  	%r9188, %r9187, 7;
	cvt.s64.s32	%rd13360, %r9188;
	add.s64 	%rd13361, %rd89, %rd13360;
	st.local.u8 	[%rd13361], %rs250;
	add.s32 	%r9189, %r402, 2;
	xor.b32  	%r9190, %r9189, 7;
	cvt.s64.s32	%rd13362, %r9190;
	add.s64 	%rd13363, %rd89, %rd13362;
	st.local.u8 	[%rd13363], %rs250;
	add.s32 	%r9191, %r402, 3;
	xor.b32  	%r9192, %r9191, 7;
	cvt.s64.s32	%rd13364, %r9192;
	add.s64 	%rd13365, %rd89, %rd13364;
	st.local.u8 	[%rd13365], %rs250;
	add.s32 	%r9193, %r402, 4;
	xor.b32  	%r9194, %r9193, 7;
	cvt.s64.s32	%rd13366, %r9194;
	add.s64 	%rd13367, %rd89, %rd13366;
	st.local.u8 	[%rd13367], %rs250;
	add.s32 	%r9195, %r402, 5;
	xor.b32  	%r9196, %r9195, 7;
	cvt.s64.s32	%rd13368, %r9196;
	add.s64 	%rd13369, %rd89, %rd13368;
	st.local.u8 	[%rd13369], %rs250;
	add.s32 	%r9197, %r402, 6;
	xor.b32  	%r9198, %r9197, 7;
	cvt.s64.s32	%rd13370, %r9198;
	add.s64 	%rd13371, %rd89, %rd13370;
	st.local.u8 	[%rd13371], %rs250;
	add.s32 	%r9199, %r402, 7;
	xor.b32  	%r9200, %r9199, 7;
	cvt.s64.s32	%rd13372, %r9200;
	add.s64 	%rd13373, %rd89, %rd13372;
	st.local.u8 	[%rd13373], %rs250;
	add.s32 	%r9201, %r402, 8;
	xor.b32  	%r9202, %r9201, 7;
	cvt.s64.s32	%rd13374, %r9202;
	add.s64 	%rd13375, %rd89, %rd13374;
	st.local.u8 	[%rd13375], %rs250;
	add.s32 	%r9203, %r402, 9;
	xor.b32  	%r9204, %r9203, 7;
	cvt.s64.s32	%rd13376, %r9204;
	add.s64 	%rd13377, %rd89, %rd13376;
	st.local.u8 	[%rd13377], %rs250;
	add.s32 	%r9205, %r402, 10;
	xor.b32  	%r9206, %r9205, 7;
	cvt.s64.s32	%rd13378, %r9206;
	add.s64 	%rd13379, %rd89, %rd13378;
	st.local.u8 	[%rd13379], %rs250;
	add.s32 	%r9207, %r402, 11;
	xor.b32  	%r9208, %r9207, 7;
	cvt.s64.s32	%rd13380, %r9208;
	add.s64 	%rd13381, %rd89, %rd13380;
	st.local.u8 	[%rd13381], %rs250;
	add.s32 	%r9209, %r402, 12;
	xor.b32  	%r9210, %r9209, 7;
	cvt.s64.s32	%rd13382, %r9210;
	add.s64 	%rd13383, %rd89, %rd13382;
	st.local.u8 	[%rd13383], %rs250;
	add.s32 	%r9211, %r402, 13;
	xor.b32  	%r9212, %r9211, 7;
	cvt.s64.s32	%rd13384, %r9212;
	add.s64 	%rd13385, %rd89, %rd13384;
	st.local.u8 	[%rd13385], %rs250;
	add.s32 	%r9213, %r402, 14;
	xor.b32  	%r9214, %r9213, 7;
	cvt.s64.s32	%rd13386, %r9214;
	add.s64 	%rd13387, %rd89, %rd13386;
	st.local.u8 	[%rd13387], %rs250;
	add.s32 	%r9215, %r402, 15;
	xor.b32  	%r9216, %r9215, 7;
	cvt.s64.s32	%rd13388, %r9216;
	add.s64 	%rd13389, %rd89, %rd13388;
	st.local.u8 	[%rd13389], %rs250;
	add.s32 	%r402, %r402, 16;
	setp.lt.s32	%p174, %r402, 128;
	@%p174 bra 	BB0_281;

BB0_282:
	mov.u16 	%rs279, 128;
	xor.b32  	%r9217, %r394, 7;
	cvt.u64.u32	%rd13390, %r9217;
	add.s64 	%rd13391, %rd89, %rd13390;
	st.local.u8 	[%rd13391], %rs279;
	ld.local.u64 	%rd18912, [%rd1+64];
	ld.local.u64 	%rd18913, [%rd1+72];
	ld.local.u64 	%rd18914, [%rd1+80];
	ld.local.u64 	%rd18915, [%rd1+88];
	ld.local.u64 	%rd18916, [%rd1+96];
	ld.local.u64 	%rd18917, [%rd1+104];
	ld.local.u64 	%rd18918, [%rd1+112];
	ld.local.u64 	%rd18919, [%rd1+120];
	ld.local.u64 	%rd18903, [%rd1+128];
	ld.local.u64 	%rd18902, [%rd1+136];
	ld.local.u64 	%rd18901, [%rd1+144];
	ld.local.u64 	%rd18900, [%rd1+152];
	ld.local.u64 	%rd18899, [%rd1+160];
	ld.local.u64 	%rd18898, [%rd1+168];
	ld.local.u64 	%rd18897, [%rd1+176];
	setp.gt.u32	%p175, %r394, 111;
	@%p175 bra 	BB0_284;
	bra.uni 	BB0_283;

BB0_284:
	ld.local.u64 	%rd1029, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9219,%dummy}, %rd1029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9220}, %rd1029;
	}
	shf.r.wrap.b32 	%r9221, %r9220, %r9219, 14;
	shf.r.wrap.b32 	%r9222, %r9219, %r9220, 14;
	mov.b64 	%rd13392, {%r9222, %r9221};
	shf.r.wrap.b32 	%r9223, %r9220, %r9219, 18;
	shf.r.wrap.b32 	%r9224, %r9219, %r9220, 18;
	mov.b64 	%rd13393, {%r9224, %r9223};
	xor.b64  	%rd13394, %rd13393, %rd13392;
	shf.l.wrap.b32 	%r9225, %r9219, %r9220, 23;
	shf.l.wrap.b32 	%r9226, %r9220, %r9219, 23;
	mov.b64 	%rd13395, {%r9226, %r9225};
	xor.b64  	%rd13396, %rd13394, %rd13395;
	ld.local.u64 	%rd1030, [%rd1+48];
	ld.local.u64 	%rd1031, [%rd1+40];
	xor.b64  	%rd13397, %rd1030, %rd1031;
	and.b64  	%rd13398, %rd13397, %rd1029;
	xor.b64  	%rd13399, %rd13398, %rd1030;
	ld.local.u64 	%rd1032, [%rd1+56];
	add.s64 	%rd13400, %rd1032, %rd18912;
	add.s64 	%rd13401, %rd13400, %rd18610;
	add.s64 	%rd13402, %rd13401, %rd13399;
	add.s64 	%rd13403, %rd13402, %rd13396;
	ld.local.u64 	%rd1033, [%rd1+24];
	add.s64 	%rd13404, %rd13403, %rd1033;
	ld.local.u64 	%rd1034, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9227,%dummy}, %rd1034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9228}, %rd1034;
	}
	shf.r.wrap.b32 	%r9229, %r9228, %r9227, 28;
	shf.r.wrap.b32 	%r9230, %r9227, %r9228, 28;
	mov.b64 	%rd13405, {%r9230, %r9229};
	shf.l.wrap.b32 	%r9231, %r9227, %r9228, 30;
	shf.l.wrap.b32 	%r9232, %r9228, %r9227, 30;
	mov.b64 	%rd13406, {%r9232, %r9231};
	xor.b64  	%rd13407, %rd13406, %rd13405;
	shf.l.wrap.b32 	%r9233, %r9227, %r9228, 25;
	shf.l.wrap.b32 	%r9234, %r9228, %r9227, 25;
	mov.b64 	%rd13408, {%r9234, %r9233};
	xor.b64  	%rd13409, %rd13407, %rd13408;
	ld.local.u64 	%rd1035, [%rd1+8];
	and.b64  	%rd13410, %rd1035, %rd1034;
	xor.b64  	%rd13411, %rd1035, %rd1034;
	ld.local.u64 	%rd1036, [%rd1+16];
	and.b64  	%rd13412, %rd1036, %rd13411;
	or.b64  	%rd13413, %rd13412, %rd13410;
	add.s64 	%rd13414, %rd13403, %rd13413;
	add.s64 	%rd13415, %rd13414, %rd13409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9235,%dummy}, %rd13404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9236}, %rd13404;
	}
	shf.r.wrap.b32 	%r9237, %r9236, %r9235, 14;
	shf.r.wrap.b32 	%r9238, %r9235, %r9236, 14;
	mov.b64 	%rd13416, {%r9238, %r9237};
	shf.r.wrap.b32 	%r9239, %r9236, %r9235, 18;
	shf.r.wrap.b32 	%r9240, %r9235, %r9236, 18;
	mov.b64 	%rd13417, {%r9240, %r9239};
	xor.b64  	%rd13418, %rd13417, %rd13416;
	shf.l.wrap.b32 	%r9241, %r9235, %r9236, 23;
	shf.l.wrap.b32 	%r9242, %r9236, %r9235, 23;
	mov.b64 	%rd13419, {%r9242, %r9241};
	xor.b64  	%rd13420, %rd13418, %rd13419;
	xor.b64  	%rd13421, %rd1031, %rd1029;
	and.b64  	%rd13422, %rd13404, %rd13421;
	xor.b64  	%rd13423, %rd13422, %rd1031;
	add.s64 	%rd13424, %rd1030, %rd18913;
	add.s64 	%rd13425, %rd13424, %rd18609;
	add.s64 	%rd13426, %rd13425, %rd13423;
	add.s64 	%rd13427, %rd13426, %rd13420;
	add.s64 	%rd13428, %rd13427, %rd1036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9243,%dummy}, %rd13415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9244}, %rd13415;
	}
	shf.r.wrap.b32 	%r9245, %r9244, %r9243, 28;
	shf.r.wrap.b32 	%r9246, %r9243, %r9244, 28;
	mov.b64 	%rd13429, {%r9246, %r9245};
	shf.l.wrap.b32 	%r9247, %r9243, %r9244, 30;
	shf.l.wrap.b32 	%r9248, %r9244, %r9243, 30;
	mov.b64 	%rd13430, {%r9248, %r9247};
	xor.b64  	%rd13431, %rd13430, %rd13429;
	shf.l.wrap.b32 	%r9249, %r9243, %r9244, 25;
	shf.l.wrap.b32 	%r9250, %r9244, %r9243, 25;
	mov.b64 	%rd13432, {%r9250, %r9249};
	xor.b64  	%rd13433, %rd13431, %rd13432;
	and.b64  	%rd13434, %rd13415, %rd1034;
	xor.b64  	%rd13435, %rd13415, %rd1034;
	and.b64  	%rd13436, %rd13435, %rd1035;
	or.b64  	%rd13437, %rd13436, %rd13434;
	add.s64 	%rd13438, %rd13427, %rd13437;
	add.s64 	%rd13439, %rd13438, %rd13433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9251,%dummy}, %rd13428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9252}, %rd13428;
	}
	shf.r.wrap.b32 	%r9253, %r9252, %r9251, 14;
	shf.r.wrap.b32 	%r9254, %r9251, %r9252, 14;
	mov.b64 	%rd13440, {%r9254, %r9253};
	shf.r.wrap.b32 	%r9255, %r9252, %r9251, 18;
	shf.r.wrap.b32 	%r9256, %r9251, %r9252, 18;
	mov.b64 	%rd13441, {%r9256, %r9255};
	xor.b64  	%rd13442, %rd13441, %rd13440;
	shf.l.wrap.b32 	%r9257, %r9251, %r9252, 23;
	shf.l.wrap.b32 	%r9258, %r9252, %r9251, 23;
	mov.b64 	%rd13443, {%r9258, %r9257};
	xor.b64  	%rd13444, %rd13442, %rd13443;
	xor.b64  	%rd13445, %rd13404, %rd1029;
	and.b64  	%rd13446, %rd13428, %rd13445;
	xor.b64  	%rd13447, %rd13446, %rd1029;
	add.s64 	%rd13448, %rd1031, %rd18914;
	add.s64 	%rd13449, %rd13448, %rd18608;
	add.s64 	%rd13450, %rd13449, %rd13447;
	add.s64 	%rd13451, %rd13450, %rd13444;
	add.s64 	%rd13452, %rd13451, %rd1035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9259,%dummy}, %rd13439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9260}, %rd13439;
	}
	shf.r.wrap.b32 	%r9261, %r9260, %r9259, 28;
	shf.r.wrap.b32 	%r9262, %r9259, %r9260, 28;
	mov.b64 	%rd13453, {%r9262, %r9261};
	shf.l.wrap.b32 	%r9263, %r9259, %r9260, 30;
	shf.l.wrap.b32 	%r9264, %r9260, %r9259, 30;
	mov.b64 	%rd13454, {%r9264, %r9263};
	xor.b64  	%rd13455, %rd13454, %rd13453;
	shf.l.wrap.b32 	%r9265, %r9259, %r9260, 25;
	shf.l.wrap.b32 	%r9266, %r9260, %r9259, 25;
	mov.b64 	%rd13456, {%r9266, %r9265};
	xor.b64  	%rd13457, %rd13455, %rd13456;
	and.b64  	%rd13458, %rd13439, %rd13415;
	xor.b64  	%rd13459, %rd13439, %rd13415;
	and.b64  	%rd13460, %rd13459, %rd1034;
	or.b64  	%rd13461, %rd13460, %rd13458;
	add.s64 	%rd13462, %rd13451, %rd13461;
	add.s64 	%rd13463, %rd13462, %rd13457;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9267,%dummy}, %rd13452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9268}, %rd13452;
	}
	shf.r.wrap.b32 	%r9269, %r9268, %r9267, 14;
	shf.r.wrap.b32 	%r9270, %r9267, %r9268, 14;
	mov.b64 	%rd13464, {%r9270, %r9269};
	shf.r.wrap.b32 	%r9271, %r9268, %r9267, 18;
	shf.r.wrap.b32 	%r9272, %r9267, %r9268, 18;
	mov.b64 	%rd13465, {%r9272, %r9271};
	xor.b64  	%rd13466, %rd13465, %rd13464;
	shf.l.wrap.b32 	%r9273, %r9267, %r9268, 23;
	shf.l.wrap.b32 	%r9274, %r9268, %r9267, 23;
	mov.b64 	%rd13467, {%r9274, %r9273};
	xor.b64  	%rd13468, %rd13466, %rd13467;
	xor.b64  	%rd13469, %rd13428, %rd13404;
	and.b64  	%rd13470, %rd13452, %rd13469;
	xor.b64  	%rd13471, %rd13470, %rd13404;
	add.s64 	%rd13472, %rd1029, %rd18915;
	add.s64 	%rd13473, %rd13472, %rd18607;
	add.s64 	%rd13474, %rd13473, %rd13471;
	add.s64 	%rd13475, %rd13474, %rd13468;
	add.s64 	%rd13476, %rd13475, %rd1034;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9275,%dummy}, %rd13463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9276}, %rd13463;
	}
	shf.r.wrap.b32 	%r9277, %r9276, %r9275, 28;
	shf.r.wrap.b32 	%r9278, %r9275, %r9276, 28;
	mov.b64 	%rd13477, {%r9278, %r9277};
	shf.l.wrap.b32 	%r9279, %r9275, %r9276, 30;
	shf.l.wrap.b32 	%r9280, %r9276, %r9275, 30;
	mov.b64 	%rd13478, {%r9280, %r9279};
	xor.b64  	%rd13479, %rd13478, %rd13477;
	shf.l.wrap.b32 	%r9281, %r9275, %r9276, 25;
	shf.l.wrap.b32 	%r9282, %r9276, %r9275, 25;
	mov.b64 	%rd13480, {%r9282, %r9281};
	xor.b64  	%rd13481, %rd13479, %rd13480;
	and.b64  	%rd13482, %rd13463, %rd13439;
	xor.b64  	%rd13483, %rd13463, %rd13439;
	and.b64  	%rd13484, %rd13483, %rd13415;
	or.b64  	%rd13485, %rd13484, %rd13482;
	add.s64 	%rd13486, %rd13475, %rd13485;
	add.s64 	%rd13487, %rd13486, %rd13481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9283,%dummy}, %rd13476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9284}, %rd13476;
	}
	shf.r.wrap.b32 	%r9285, %r9284, %r9283, 14;
	shf.r.wrap.b32 	%r9286, %r9283, %r9284, 14;
	mov.b64 	%rd13488, {%r9286, %r9285};
	shf.r.wrap.b32 	%r9287, %r9284, %r9283, 18;
	shf.r.wrap.b32 	%r9288, %r9283, %r9284, 18;
	mov.b64 	%rd13489, {%r9288, %r9287};
	xor.b64  	%rd13490, %rd13489, %rd13488;
	shf.l.wrap.b32 	%r9289, %r9283, %r9284, 23;
	shf.l.wrap.b32 	%r9290, %r9284, %r9283, 23;
	mov.b64 	%rd13491, {%r9290, %r9289};
	xor.b64  	%rd13492, %rd13490, %rd13491;
	xor.b64  	%rd13493, %rd13452, %rd13428;
	and.b64  	%rd13494, %rd13476, %rd13493;
	xor.b64  	%rd13495, %rd13494, %rd13428;
	add.s64 	%rd13496, %rd13404, %rd18916;
	add.s64 	%rd13497, %rd13496, %rd18606;
	add.s64 	%rd13498, %rd13497, %rd13495;
	add.s64 	%rd13499, %rd13498, %rd13492;
	add.s64 	%rd13500, %rd13499, %rd13415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9291,%dummy}, %rd13487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9292}, %rd13487;
	}
	shf.r.wrap.b32 	%r9293, %r9292, %r9291, 28;
	shf.r.wrap.b32 	%r9294, %r9291, %r9292, 28;
	mov.b64 	%rd13501, {%r9294, %r9293};
	shf.l.wrap.b32 	%r9295, %r9291, %r9292, 30;
	shf.l.wrap.b32 	%r9296, %r9292, %r9291, 30;
	mov.b64 	%rd13502, {%r9296, %r9295};
	xor.b64  	%rd13503, %rd13502, %rd13501;
	shf.l.wrap.b32 	%r9297, %r9291, %r9292, 25;
	shf.l.wrap.b32 	%r9298, %r9292, %r9291, 25;
	mov.b64 	%rd13504, {%r9298, %r9297};
	xor.b64  	%rd13505, %rd13503, %rd13504;
	and.b64  	%rd13506, %rd13487, %rd13463;
	xor.b64  	%rd13507, %rd13487, %rd13463;
	and.b64  	%rd13508, %rd13507, %rd13439;
	or.b64  	%rd13509, %rd13508, %rd13506;
	add.s64 	%rd13510, %rd13499, %rd13509;
	add.s64 	%rd13511, %rd13510, %rd13505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9299,%dummy}, %rd13500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9300}, %rd13500;
	}
	shf.r.wrap.b32 	%r9301, %r9300, %r9299, 14;
	shf.r.wrap.b32 	%r9302, %r9299, %r9300, 14;
	mov.b64 	%rd13512, {%r9302, %r9301};
	shf.r.wrap.b32 	%r9303, %r9300, %r9299, 18;
	shf.r.wrap.b32 	%r9304, %r9299, %r9300, 18;
	mov.b64 	%rd13513, {%r9304, %r9303};
	xor.b64  	%rd13514, %rd13513, %rd13512;
	shf.l.wrap.b32 	%r9305, %r9299, %r9300, 23;
	shf.l.wrap.b32 	%r9306, %r9300, %r9299, 23;
	mov.b64 	%rd13515, {%r9306, %r9305};
	xor.b64  	%rd13516, %rd13514, %rd13515;
	xor.b64  	%rd13517, %rd13476, %rd13452;
	and.b64  	%rd13518, %rd13500, %rd13517;
	xor.b64  	%rd13519, %rd13518, %rd13452;
	add.s64 	%rd13520, %rd13428, %rd18917;
	add.s64 	%rd13521, %rd13520, %rd18605;
	add.s64 	%rd13522, %rd13521, %rd13519;
	add.s64 	%rd13523, %rd13522, %rd13516;
	add.s64 	%rd13524, %rd13523, %rd13439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9307,%dummy}, %rd13511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9308}, %rd13511;
	}
	shf.r.wrap.b32 	%r9309, %r9308, %r9307, 28;
	shf.r.wrap.b32 	%r9310, %r9307, %r9308, 28;
	mov.b64 	%rd13525, {%r9310, %r9309};
	shf.l.wrap.b32 	%r9311, %r9307, %r9308, 30;
	shf.l.wrap.b32 	%r9312, %r9308, %r9307, 30;
	mov.b64 	%rd13526, {%r9312, %r9311};
	xor.b64  	%rd13527, %rd13526, %rd13525;
	shf.l.wrap.b32 	%r9313, %r9307, %r9308, 25;
	shf.l.wrap.b32 	%r9314, %r9308, %r9307, 25;
	mov.b64 	%rd13528, {%r9314, %r9313};
	xor.b64  	%rd13529, %rd13527, %rd13528;
	and.b64  	%rd13530, %rd13511, %rd13487;
	xor.b64  	%rd13531, %rd13511, %rd13487;
	and.b64  	%rd13532, %rd13531, %rd13463;
	or.b64  	%rd13533, %rd13532, %rd13530;
	add.s64 	%rd13534, %rd13523, %rd13533;
	add.s64 	%rd13535, %rd13534, %rd13529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9315,%dummy}, %rd13524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9316}, %rd13524;
	}
	shf.r.wrap.b32 	%r9317, %r9316, %r9315, 14;
	shf.r.wrap.b32 	%r9318, %r9315, %r9316, 14;
	mov.b64 	%rd13536, {%r9318, %r9317};
	shf.r.wrap.b32 	%r9319, %r9316, %r9315, 18;
	shf.r.wrap.b32 	%r9320, %r9315, %r9316, 18;
	mov.b64 	%rd13537, {%r9320, %r9319};
	xor.b64  	%rd13538, %rd13537, %rd13536;
	shf.l.wrap.b32 	%r9321, %r9315, %r9316, 23;
	shf.l.wrap.b32 	%r9322, %r9316, %r9315, 23;
	mov.b64 	%rd13539, {%r9322, %r9321};
	xor.b64  	%rd13540, %rd13538, %rd13539;
	xor.b64  	%rd13541, %rd13500, %rd13476;
	and.b64  	%rd13542, %rd13524, %rd13541;
	xor.b64  	%rd13543, %rd13542, %rd13476;
	add.s64 	%rd13544, %rd13452, %rd18918;
	add.s64 	%rd13545, %rd13544, %rd18604;
	add.s64 	%rd13546, %rd13545, %rd13543;
	add.s64 	%rd13547, %rd13546, %rd13540;
	add.s64 	%rd13548, %rd13547, %rd13463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9323,%dummy}, %rd13535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9324}, %rd13535;
	}
	shf.r.wrap.b32 	%r9325, %r9324, %r9323, 28;
	shf.r.wrap.b32 	%r9326, %r9323, %r9324, 28;
	mov.b64 	%rd13549, {%r9326, %r9325};
	shf.l.wrap.b32 	%r9327, %r9323, %r9324, 30;
	shf.l.wrap.b32 	%r9328, %r9324, %r9323, 30;
	mov.b64 	%rd13550, {%r9328, %r9327};
	xor.b64  	%rd13551, %rd13550, %rd13549;
	shf.l.wrap.b32 	%r9329, %r9323, %r9324, 25;
	shf.l.wrap.b32 	%r9330, %r9324, %r9323, 25;
	mov.b64 	%rd13552, {%r9330, %r9329};
	xor.b64  	%rd13553, %rd13551, %rd13552;
	and.b64  	%rd13554, %rd13535, %rd13511;
	xor.b64  	%rd13555, %rd13535, %rd13511;
	and.b64  	%rd13556, %rd13555, %rd13487;
	or.b64  	%rd13557, %rd13556, %rd13554;
	add.s64 	%rd13558, %rd13547, %rd13557;
	add.s64 	%rd13559, %rd13558, %rd13553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9331,%dummy}, %rd13548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9332}, %rd13548;
	}
	shf.r.wrap.b32 	%r9333, %r9332, %r9331, 14;
	shf.r.wrap.b32 	%r9334, %r9331, %r9332, 14;
	mov.b64 	%rd13560, {%r9334, %r9333};
	shf.r.wrap.b32 	%r9335, %r9332, %r9331, 18;
	shf.r.wrap.b32 	%r9336, %r9331, %r9332, 18;
	mov.b64 	%rd13561, {%r9336, %r9335};
	xor.b64  	%rd13562, %rd13561, %rd13560;
	shf.l.wrap.b32 	%r9337, %r9331, %r9332, 23;
	shf.l.wrap.b32 	%r9338, %r9332, %r9331, 23;
	mov.b64 	%rd13563, {%r9338, %r9337};
	xor.b64  	%rd13564, %rd13562, %rd13563;
	xor.b64  	%rd13565, %rd13524, %rd13500;
	and.b64  	%rd13566, %rd13548, %rd13565;
	xor.b64  	%rd13567, %rd13566, %rd13500;
	add.s64 	%rd13568, %rd13476, %rd18919;
	add.s64 	%rd13569, %rd13568, %rd18603;
	add.s64 	%rd13570, %rd13569, %rd13567;
	add.s64 	%rd13571, %rd13570, %rd13564;
	add.s64 	%rd13572, %rd13571, %rd13487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9339,%dummy}, %rd13559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9340}, %rd13559;
	}
	shf.r.wrap.b32 	%r9341, %r9340, %r9339, 28;
	shf.r.wrap.b32 	%r9342, %r9339, %r9340, 28;
	mov.b64 	%rd13573, {%r9342, %r9341};
	shf.l.wrap.b32 	%r9343, %r9339, %r9340, 30;
	shf.l.wrap.b32 	%r9344, %r9340, %r9339, 30;
	mov.b64 	%rd13574, {%r9344, %r9343};
	xor.b64  	%rd13575, %rd13574, %rd13573;
	shf.l.wrap.b32 	%r9345, %r9339, %r9340, 25;
	shf.l.wrap.b32 	%r9346, %r9340, %r9339, 25;
	mov.b64 	%rd13576, {%r9346, %r9345};
	xor.b64  	%rd13577, %rd13575, %rd13576;
	and.b64  	%rd13578, %rd13559, %rd13535;
	xor.b64  	%rd13579, %rd13559, %rd13535;
	and.b64  	%rd13580, %rd13579, %rd13511;
	or.b64  	%rd13581, %rd13580, %rd13578;
	add.s64 	%rd13582, %rd13571, %rd13581;
	add.s64 	%rd13583, %rd13582, %rd13577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9347,%dummy}, %rd13572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9348}, %rd13572;
	}
	shf.r.wrap.b32 	%r9349, %r9348, %r9347, 14;
	shf.r.wrap.b32 	%r9350, %r9347, %r9348, 14;
	mov.b64 	%rd13584, {%r9350, %r9349};
	shf.r.wrap.b32 	%r9351, %r9348, %r9347, 18;
	shf.r.wrap.b32 	%r9352, %r9347, %r9348, 18;
	mov.b64 	%rd13585, {%r9352, %r9351};
	xor.b64  	%rd13586, %rd13585, %rd13584;
	shf.l.wrap.b32 	%r9353, %r9347, %r9348, 23;
	shf.l.wrap.b32 	%r9354, %r9348, %r9347, 23;
	mov.b64 	%rd13587, {%r9354, %r9353};
	xor.b64  	%rd13588, %rd13586, %rd13587;
	xor.b64  	%rd13589, %rd13548, %rd13524;
	and.b64  	%rd13590, %rd13572, %rd13589;
	xor.b64  	%rd13591, %rd13590, %rd13524;
	add.s64 	%rd13592, %rd13500, %rd18903;
	add.s64 	%rd13593, %rd13592, %rd18602;
	add.s64 	%rd13594, %rd13593, %rd13591;
	add.s64 	%rd13595, %rd13594, %rd13588;
	add.s64 	%rd13596, %rd13595, %rd13511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9355,%dummy}, %rd13583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9356}, %rd13583;
	}
	shf.r.wrap.b32 	%r9357, %r9356, %r9355, 28;
	shf.r.wrap.b32 	%r9358, %r9355, %r9356, 28;
	mov.b64 	%rd13597, {%r9358, %r9357};
	shf.l.wrap.b32 	%r9359, %r9355, %r9356, 30;
	shf.l.wrap.b32 	%r9360, %r9356, %r9355, 30;
	mov.b64 	%rd13598, {%r9360, %r9359};
	xor.b64  	%rd13599, %rd13598, %rd13597;
	shf.l.wrap.b32 	%r9361, %r9355, %r9356, 25;
	shf.l.wrap.b32 	%r9362, %r9356, %r9355, 25;
	mov.b64 	%rd13600, {%r9362, %r9361};
	xor.b64  	%rd13601, %rd13599, %rd13600;
	and.b64  	%rd13602, %rd13583, %rd13559;
	xor.b64  	%rd13603, %rd13583, %rd13559;
	and.b64  	%rd13604, %rd13603, %rd13535;
	or.b64  	%rd13605, %rd13604, %rd13602;
	add.s64 	%rd13606, %rd13595, %rd13605;
	add.s64 	%rd13607, %rd13606, %rd13601;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9363,%dummy}, %rd13596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9364}, %rd13596;
	}
	shf.r.wrap.b32 	%r9365, %r9364, %r9363, 14;
	shf.r.wrap.b32 	%r9366, %r9363, %r9364, 14;
	mov.b64 	%rd13608, {%r9366, %r9365};
	shf.r.wrap.b32 	%r9367, %r9364, %r9363, 18;
	shf.r.wrap.b32 	%r9368, %r9363, %r9364, 18;
	mov.b64 	%rd13609, {%r9368, %r9367};
	xor.b64  	%rd13610, %rd13609, %rd13608;
	shf.l.wrap.b32 	%r9369, %r9363, %r9364, 23;
	shf.l.wrap.b32 	%r9370, %r9364, %r9363, 23;
	mov.b64 	%rd13611, {%r9370, %r9369};
	xor.b64  	%rd13612, %rd13610, %rd13611;
	xor.b64  	%rd13613, %rd13572, %rd13548;
	and.b64  	%rd13614, %rd13596, %rd13613;
	xor.b64  	%rd13615, %rd13614, %rd13548;
	add.s64 	%rd13616, %rd13524, %rd18902;
	add.s64 	%rd13617, %rd13616, %rd18601;
	add.s64 	%rd13618, %rd13617, %rd13615;
	add.s64 	%rd13619, %rd13618, %rd13612;
	add.s64 	%rd13620, %rd13619, %rd13535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9371,%dummy}, %rd13607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9372}, %rd13607;
	}
	shf.r.wrap.b32 	%r9373, %r9372, %r9371, 28;
	shf.r.wrap.b32 	%r9374, %r9371, %r9372, 28;
	mov.b64 	%rd13621, {%r9374, %r9373};
	shf.l.wrap.b32 	%r9375, %r9371, %r9372, 30;
	shf.l.wrap.b32 	%r9376, %r9372, %r9371, 30;
	mov.b64 	%rd13622, {%r9376, %r9375};
	xor.b64  	%rd13623, %rd13622, %rd13621;
	shf.l.wrap.b32 	%r9377, %r9371, %r9372, 25;
	shf.l.wrap.b32 	%r9378, %r9372, %r9371, 25;
	mov.b64 	%rd13624, {%r9378, %r9377};
	xor.b64  	%rd13625, %rd13623, %rd13624;
	and.b64  	%rd13626, %rd13607, %rd13583;
	xor.b64  	%rd13627, %rd13607, %rd13583;
	and.b64  	%rd13628, %rd13627, %rd13559;
	or.b64  	%rd13629, %rd13628, %rd13626;
	add.s64 	%rd13630, %rd13619, %rd13629;
	add.s64 	%rd13631, %rd13630, %rd13625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9379,%dummy}, %rd13620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9380}, %rd13620;
	}
	shf.r.wrap.b32 	%r9381, %r9380, %r9379, 14;
	shf.r.wrap.b32 	%r9382, %r9379, %r9380, 14;
	mov.b64 	%rd13632, {%r9382, %r9381};
	shf.r.wrap.b32 	%r9383, %r9380, %r9379, 18;
	shf.r.wrap.b32 	%r9384, %r9379, %r9380, 18;
	mov.b64 	%rd13633, {%r9384, %r9383};
	xor.b64  	%rd13634, %rd13633, %rd13632;
	shf.l.wrap.b32 	%r9385, %r9379, %r9380, 23;
	shf.l.wrap.b32 	%r9386, %r9380, %r9379, 23;
	mov.b64 	%rd13635, {%r9386, %r9385};
	xor.b64  	%rd13636, %rd13634, %rd13635;
	xor.b64  	%rd13637, %rd13596, %rd13572;
	and.b64  	%rd13638, %rd13620, %rd13637;
	xor.b64  	%rd13639, %rd13638, %rd13572;
	add.s64 	%rd13640, %rd13548, %rd18901;
	add.s64 	%rd13641, %rd13640, %rd18600;
	add.s64 	%rd13642, %rd13641, %rd13639;
	add.s64 	%rd13643, %rd13642, %rd13636;
	add.s64 	%rd13644, %rd13643, %rd13559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9387,%dummy}, %rd13631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9388}, %rd13631;
	}
	shf.r.wrap.b32 	%r9389, %r9388, %r9387, 28;
	shf.r.wrap.b32 	%r9390, %r9387, %r9388, 28;
	mov.b64 	%rd13645, {%r9390, %r9389};
	shf.l.wrap.b32 	%r9391, %r9387, %r9388, 30;
	shf.l.wrap.b32 	%r9392, %r9388, %r9387, 30;
	mov.b64 	%rd13646, {%r9392, %r9391};
	xor.b64  	%rd13647, %rd13646, %rd13645;
	shf.l.wrap.b32 	%r9393, %r9387, %r9388, 25;
	shf.l.wrap.b32 	%r9394, %r9388, %r9387, 25;
	mov.b64 	%rd13648, {%r9394, %r9393};
	xor.b64  	%rd13649, %rd13647, %rd13648;
	and.b64  	%rd13650, %rd13631, %rd13607;
	xor.b64  	%rd13651, %rd13631, %rd13607;
	and.b64  	%rd13652, %rd13651, %rd13583;
	or.b64  	%rd13653, %rd13652, %rd13650;
	add.s64 	%rd13654, %rd13643, %rd13653;
	add.s64 	%rd13655, %rd13654, %rd13649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9395,%dummy}, %rd13644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9396}, %rd13644;
	}
	shf.r.wrap.b32 	%r9397, %r9396, %r9395, 14;
	shf.r.wrap.b32 	%r9398, %r9395, %r9396, 14;
	mov.b64 	%rd13656, {%r9398, %r9397};
	shf.r.wrap.b32 	%r9399, %r9396, %r9395, 18;
	shf.r.wrap.b32 	%r9400, %r9395, %r9396, 18;
	mov.b64 	%rd13657, {%r9400, %r9399};
	xor.b64  	%rd13658, %rd13657, %rd13656;
	shf.l.wrap.b32 	%r9401, %r9395, %r9396, 23;
	shf.l.wrap.b32 	%r9402, %r9396, %r9395, 23;
	mov.b64 	%rd13659, {%r9402, %r9401};
	xor.b64  	%rd13660, %rd13658, %rd13659;
	xor.b64  	%rd13661, %rd13620, %rd13596;
	and.b64  	%rd13662, %rd13644, %rd13661;
	xor.b64  	%rd13663, %rd13662, %rd13596;
	add.s64 	%rd13664, %rd13572, %rd18900;
	add.s64 	%rd13665, %rd13664, %rd18599;
	add.s64 	%rd13666, %rd13665, %rd13663;
	add.s64 	%rd13667, %rd13666, %rd13660;
	add.s64 	%rd13668, %rd13667, %rd13583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9403,%dummy}, %rd13655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9404}, %rd13655;
	}
	shf.r.wrap.b32 	%r9405, %r9404, %r9403, 28;
	shf.r.wrap.b32 	%r9406, %r9403, %r9404, 28;
	mov.b64 	%rd13669, {%r9406, %r9405};
	shf.l.wrap.b32 	%r9407, %r9403, %r9404, 30;
	shf.l.wrap.b32 	%r9408, %r9404, %r9403, 30;
	mov.b64 	%rd13670, {%r9408, %r9407};
	xor.b64  	%rd13671, %rd13670, %rd13669;
	shf.l.wrap.b32 	%r9409, %r9403, %r9404, 25;
	shf.l.wrap.b32 	%r9410, %r9404, %r9403, 25;
	mov.b64 	%rd13672, {%r9410, %r9409};
	xor.b64  	%rd13673, %rd13671, %rd13672;
	and.b64  	%rd13674, %rd13655, %rd13631;
	xor.b64  	%rd13675, %rd13655, %rd13631;
	and.b64  	%rd13676, %rd13675, %rd13607;
	or.b64  	%rd13677, %rd13676, %rd13674;
	add.s64 	%rd13678, %rd13667, %rd13677;
	add.s64 	%rd13679, %rd13678, %rd13673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9411,%dummy}, %rd13668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9412}, %rd13668;
	}
	shf.r.wrap.b32 	%r9413, %r9412, %r9411, 14;
	shf.r.wrap.b32 	%r9414, %r9411, %r9412, 14;
	mov.b64 	%rd13680, {%r9414, %r9413};
	shf.r.wrap.b32 	%r9415, %r9412, %r9411, 18;
	shf.r.wrap.b32 	%r9416, %r9411, %r9412, 18;
	mov.b64 	%rd13681, {%r9416, %r9415};
	xor.b64  	%rd13682, %rd13681, %rd13680;
	shf.l.wrap.b32 	%r9417, %r9411, %r9412, 23;
	shf.l.wrap.b32 	%r9418, %r9412, %r9411, 23;
	mov.b64 	%rd13683, {%r9418, %r9417};
	xor.b64  	%rd13684, %rd13682, %rd13683;
	xor.b64  	%rd13685, %rd13644, %rd13620;
	and.b64  	%rd13686, %rd13668, %rd13685;
	xor.b64  	%rd13687, %rd13686, %rd13620;
	add.s64 	%rd13688, %rd13596, %rd18899;
	add.s64 	%rd13689, %rd13688, %rd18598;
	add.s64 	%rd13690, %rd13689, %rd13687;
	add.s64 	%rd13691, %rd13690, %rd13684;
	add.s64 	%rd18864, %rd13691, %rd13607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9419,%dummy}, %rd13679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9420}, %rd13679;
	}
	shf.r.wrap.b32 	%r9421, %r9420, %r9419, 28;
	shf.r.wrap.b32 	%r9422, %r9419, %r9420, 28;
	mov.b64 	%rd13692, {%r9422, %r9421};
	shf.l.wrap.b32 	%r9423, %r9419, %r9420, 30;
	shf.l.wrap.b32 	%r9424, %r9420, %r9419, 30;
	mov.b64 	%rd13693, {%r9424, %r9423};
	xor.b64  	%rd13694, %rd13693, %rd13692;
	shf.l.wrap.b32 	%r9425, %r9419, %r9420, 25;
	shf.l.wrap.b32 	%r9426, %r9420, %r9419, 25;
	mov.b64 	%rd13695, {%r9426, %r9425};
	xor.b64  	%rd13696, %rd13694, %rd13695;
	and.b64  	%rd13697, %rd13679, %rd13655;
	xor.b64  	%rd13698, %rd13679, %rd13655;
	and.b64  	%rd13699, %rd13698, %rd13631;
	or.b64  	%rd13700, %rd13699, %rd13697;
	add.s64 	%rd13701, %rd13691, %rd13700;
	add.s64 	%rd18860, %rd13701, %rd13696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9427,%dummy}, %rd18864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9428}, %rd18864;
	}
	shf.r.wrap.b32 	%r9429, %r9428, %r9427, 14;
	shf.r.wrap.b32 	%r9430, %r9427, %r9428, 14;
	mov.b64 	%rd13702, {%r9430, %r9429};
	shf.r.wrap.b32 	%r9431, %r9428, %r9427, 18;
	shf.r.wrap.b32 	%r9432, %r9427, %r9428, 18;
	mov.b64 	%rd13703, {%r9432, %r9431};
	xor.b64  	%rd13704, %rd13703, %rd13702;
	shf.l.wrap.b32 	%r9433, %r9427, %r9428, 23;
	shf.l.wrap.b32 	%r9434, %r9428, %r9427, 23;
	mov.b64 	%rd13705, {%r9434, %r9433};
	xor.b64  	%rd13706, %rd13704, %rd13705;
	xor.b64  	%rd13707, %rd13668, %rd13644;
	and.b64  	%rd13708, %rd18864, %rd13707;
	xor.b64  	%rd13709, %rd13708, %rd13644;
	add.s64 	%rd13710, %rd13620, %rd18898;
	add.s64 	%rd13711, %rd13710, %rd18597;
	add.s64 	%rd13712, %rd13711, %rd13709;
	add.s64 	%rd13713, %rd13712, %rd13706;
	add.s64 	%rd18863, %rd13713, %rd13631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9435,%dummy}, %rd18860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9436}, %rd18860;
	}
	shf.r.wrap.b32 	%r9437, %r9436, %r9435, 28;
	shf.r.wrap.b32 	%r9438, %r9435, %r9436, 28;
	mov.b64 	%rd13714, {%r9438, %r9437};
	shf.l.wrap.b32 	%r9439, %r9435, %r9436, 30;
	shf.l.wrap.b32 	%r9440, %r9436, %r9435, 30;
	mov.b64 	%rd13715, {%r9440, %r9439};
	xor.b64  	%rd13716, %rd13715, %rd13714;
	shf.l.wrap.b32 	%r9441, %r9435, %r9436, 25;
	shf.l.wrap.b32 	%r9442, %r9436, %r9435, 25;
	mov.b64 	%rd13717, {%r9442, %r9441};
	xor.b64  	%rd13718, %rd13716, %rd13717;
	and.b64  	%rd13719, %rd18860, %rd13679;
	xor.b64  	%rd13720, %rd18860, %rd13679;
	and.b64  	%rd13721, %rd13720, %rd13655;
	or.b64  	%rd13722, %rd13721, %rd13719;
	add.s64 	%rd13723, %rd13713, %rd13722;
	add.s64 	%rd18859, %rd13723, %rd13718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9443,%dummy}, %rd18863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9444}, %rd18863;
	}
	shf.r.wrap.b32 	%r9445, %r9444, %r9443, 14;
	shf.r.wrap.b32 	%r9446, %r9443, %r9444, 14;
	mov.b64 	%rd13724, {%r9446, %r9445};
	shf.r.wrap.b32 	%r9447, %r9444, %r9443, 18;
	shf.r.wrap.b32 	%r9448, %r9443, %r9444, 18;
	mov.b64 	%rd13725, {%r9448, %r9447};
	xor.b64  	%rd13726, %rd13725, %rd13724;
	shf.l.wrap.b32 	%r9449, %r9443, %r9444, 23;
	shf.l.wrap.b32 	%r9450, %r9444, %r9443, 23;
	mov.b64 	%rd13727, {%r9450, %r9449};
	xor.b64  	%rd13728, %rd13726, %rd13727;
	xor.b64  	%rd13729, %rd18864, %rd13668;
	and.b64  	%rd13730, %rd18863, %rd13729;
	xor.b64  	%rd13731, %rd13730, %rd13668;
	add.s64 	%rd13732, %rd13644, %rd18897;
	add.s64 	%rd13733, %rd13732, %rd18596;
	add.s64 	%rd13734, %rd13733, %rd13731;
	add.s64 	%rd13735, %rd13734, %rd13728;
	add.s64 	%rd18862, %rd13735, %rd13655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9451,%dummy}, %rd18859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9452}, %rd18859;
	}
	shf.r.wrap.b32 	%r9453, %r9452, %r9451, 28;
	shf.r.wrap.b32 	%r9454, %r9451, %r9452, 28;
	mov.b64 	%rd13736, {%r9454, %r9453};
	shf.l.wrap.b32 	%r9455, %r9451, %r9452, 30;
	shf.l.wrap.b32 	%r9456, %r9452, %r9451, 30;
	mov.b64 	%rd13737, {%r9456, %r9455};
	xor.b64  	%rd13738, %rd13737, %rd13736;
	shf.l.wrap.b32 	%r9457, %r9451, %r9452, 25;
	shf.l.wrap.b32 	%r9458, %r9452, %r9451, 25;
	mov.b64 	%rd13739, {%r9458, %r9457};
	xor.b64  	%rd13740, %rd13738, %rd13739;
	and.b64  	%rd13741, %rd18859, %rd18860;
	xor.b64  	%rd13742, %rd18859, %rd18860;
	and.b64  	%rd13743, %rd13742, %rd13679;
	or.b64  	%rd13744, %rd13743, %rd13741;
	add.s64 	%rd13745, %rd13735, %rd13744;
	add.s64 	%rd18858, %rd13745, %rd13740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9459,%dummy}, %rd18862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9460}, %rd18862;
	}
	shf.r.wrap.b32 	%r9461, %r9460, %r9459, 14;
	shf.r.wrap.b32 	%r9462, %r9459, %r9460, 14;
	mov.b64 	%rd13746, {%r9462, %r9461};
	shf.r.wrap.b32 	%r9463, %r9460, %r9459, 18;
	shf.r.wrap.b32 	%r9464, %r9459, %r9460, 18;
	mov.b64 	%rd13747, {%r9464, %r9463};
	xor.b64  	%rd13748, %rd13747, %rd13746;
	shf.l.wrap.b32 	%r9465, %r9459, %r9460, 23;
	shf.l.wrap.b32 	%r9466, %r9460, %r9459, 23;
	mov.b64 	%rd13749, {%r9466, %r9465};
	xor.b64  	%rd13750, %rd13748, %rd13749;
	xor.b64  	%rd13751, %rd18863, %rd18864;
	and.b64  	%rd13752, %rd18862, %rd13751;
	xor.b64  	%rd13753, %rd13752, %rd18864;
	ld.local.u64 	%rd18849, [%rd1+184];
	add.s64 	%rd13754, %rd13668, %rd18849;
	add.s64 	%rd13755, %rd13754, %rd18595;
	add.s64 	%rd13756, %rd13755, %rd13753;
	add.s64 	%rd13757, %rd13756, %rd13750;
	add.s64 	%rd18861, %rd13757, %rd13679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9467,%dummy}, %rd18858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9468}, %rd18858;
	}
	shf.r.wrap.b32 	%r9469, %r9468, %r9467, 28;
	shf.r.wrap.b32 	%r9470, %r9467, %r9468, 28;
	mov.b64 	%rd13758, {%r9470, %r9469};
	shf.l.wrap.b32 	%r9471, %r9467, %r9468, 30;
	shf.l.wrap.b32 	%r9472, %r9468, %r9467, 30;
	mov.b64 	%rd13759, {%r9472, %r9471};
	xor.b64  	%rd13760, %rd13759, %rd13758;
	shf.l.wrap.b32 	%r9473, %r9467, %r9468, 25;
	shf.l.wrap.b32 	%r9474, %r9468, %r9467, 25;
	mov.b64 	%rd13761, {%r9474, %r9473};
	xor.b64  	%rd13762, %rd13760, %rd13761;
	and.b64  	%rd13763, %rd18858, %rd18859;
	xor.b64  	%rd13764, %rd18858, %rd18859;
	and.b64  	%rd13765, %rd13764, %rd18860;
	or.b64  	%rd13766, %rd13765, %rd13763;
	add.s64 	%rd13767, %rd13757, %rd13766;
	add.s64 	%rd18857, %rd13767, %rd13762;
	mov.u32 	%r13047, 16;

BB0_285:
	shr.u64 	%rd13768, %rd18897, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9475,%dummy}, %rd18897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9476}, %rd18897;
	}
	shf.r.wrap.b32 	%r9477, %r9476, %r9475, 19;
	shf.r.wrap.b32 	%r9478, %r9475, %r9476, 19;
	mov.b64 	%rd13769, {%r9478, %r9477};
	xor.b64  	%rd13770, %rd13769, %rd13768;
	shf.l.wrap.b32 	%r9479, %r9475, %r9476, 3;
	shf.l.wrap.b32 	%r9480, %r9476, %r9475, 3;
	mov.b64 	%rd13771, {%r9480, %r9479};
	xor.b64  	%rd13772, %rd13770, %rd13771;
	shr.u64 	%rd13773, %rd18913, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9481,%dummy}, %rd18913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9482}, %rd18913;
	}
	shf.r.wrap.b32 	%r9483, %r9482, %r9481, 1;
	shf.r.wrap.b32 	%r9484, %r9481, %r9482, 1;
	mov.b64 	%rd13774, {%r9484, %r9483};
	xor.b64  	%rd13775, %rd13774, %rd13773;
	shf.r.wrap.b32 	%r9485, %r9482, %r9481, 8;
	shf.r.wrap.b32 	%r9486, %r9481, %r9482, 8;
	mov.b64 	%rd13776, {%r9486, %r9485};
	xor.b64  	%rd13777, %rd13775, %rd13776;
	add.s64 	%rd13778, %rd18912, %rd18902;
	add.s64 	%rd13779, %rd13778, %rd13772;
	add.s64 	%rd18912, %rd13779, %rd13777;
	shr.u64 	%rd13780, %rd18849, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9487,%dummy}, %rd18849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9488}, %rd18849;
	}
	shf.r.wrap.b32 	%r9489, %r9488, %r9487, 19;
	shf.r.wrap.b32 	%r9490, %r9487, %r9488, 19;
	mov.b64 	%rd13781, {%r9490, %r9489};
	xor.b64  	%rd13782, %rd13781, %rd13780;
	shf.l.wrap.b32 	%r9491, %r9487, %r9488, 3;
	shf.l.wrap.b32 	%r9492, %r9488, %r9487, 3;
	mov.b64 	%rd13783, {%r9492, %r9491};
	xor.b64  	%rd13784, %rd13782, %rd13783;
	shr.u64 	%rd13785, %rd18914, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9493,%dummy}, %rd18914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9494}, %rd18914;
	}
	shf.r.wrap.b32 	%r9495, %r9494, %r9493, 1;
	shf.r.wrap.b32 	%r9496, %r9493, %r9494, 1;
	mov.b64 	%rd13786, {%r9496, %r9495};
	xor.b64  	%rd13787, %rd13786, %rd13785;
	shf.r.wrap.b32 	%r9497, %r9494, %r9493, 8;
	shf.r.wrap.b32 	%r9498, %r9493, %r9494, 8;
	mov.b64 	%rd13788, {%r9498, %r9497};
	xor.b64  	%rd13789, %rd13787, %rd13788;
	add.s64 	%rd13790, %rd18913, %rd18901;
	add.s64 	%rd13791, %rd13790, %rd13784;
	add.s64 	%rd18913, %rd13791, %rd13789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9499,%dummy}, %rd18912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9500}, %rd18912;
	}
	shf.r.wrap.b32 	%r9501, %r9500, %r9499, 19;
	shf.r.wrap.b32 	%r9502, %r9499, %r9500, 19;
	mov.b64 	%rd13792, {%r9502, %r9501};
	shf.l.wrap.b32 	%r9503, %r9499, %r9500, 3;
	shf.l.wrap.b32 	%r9504, %r9500, %r9499, 3;
	mov.b64 	%rd13793, {%r9504, %r9503};
	shr.u64 	%rd13794, %rd18912, 6;
	xor.b64  	%rd13795, %rd13792, %rd13794;
	xor.b64  	%rd13796, %rd13795, %rd13793;
	shr.u64 	%rd13797, %rd18915, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9505,%dummy}, %rd18915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9506}, %rd18915;
	}
	shf.r.wrap.b32 	%r9507, %r9506, %r9505, 1;
	shf.r.wrap.b32 	%r9508, %r9505, %r9506, 1;
	mov.b64 	%rd13798, {%r9508, %r9507};
	xor.b64  	%rd13799, %rd13798, %rd13797;
	shf.r.wrap.b32 	%r9509, %r9506, %r9505, 8;
	shf.r.wrap.b32 	%r9510, %r9505, %r9506, 8;
	mov.b64 	%rd13800, {%r9510, %r9509};
	xor.b64  	%rd13801, %rd13799, %rd13800;
	add.s64 	%rd13802, %rd18914, %rd18900;
	add.s64 	%rd13803, %rd13802, %rd13796;
	add.s64 	%rd18914, %rd13803, %rd13801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9511,%dummy}, %rd18913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9512}, %rd18913;
	}
	shf.r.wrap.b32 	%r9513, %r9512, %r9511, 19;
	shf.r.wrap.b32 	%r9514, %r9511, %r9512, 19;
	mov.b64 	%rd13804, {%r9514, %r9513};
	shf.l.wrap.b32 	%r9515, %r9511, %r9512, 3;
	shf.l.wrap.b32 	%r9516, %r9512, %r9511, 3;
	mov.b64 	%rd13805, {%r9516, %r9515};
	shr.u64 	%rd13806, %rd18913, 6;
	xor.b64  	%rd13807, %rd13804, %rd13806;
	xor.b64  	%rd13808, %rd13807, %rd13805;
	shr.u64 	%rd13809, %rd18916, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9517,%dummy}, %rd18916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9518}, %rd18916;
	}
	shf.r.wrap.b32 	%r9519, %r9518, %r9517, 1;
	shf.r.wrap.b32 	%r9520, %r9517, %r9518, 1;
	mov.b64 	%rd13810, {%r9520, %r9519};
	xor.b64  	%rd13811, %rd13810, %rd13809;
	shf.r.wrap.b32 	%r9521, %r9518, %r9517, 8;
	shf.r.wrap.b32 	%r9522, %r9517, %r9518, 8;
	mov.b64 	%rd13812, {%r9522, %r9521};
	xor.b64  	%rd13813, %rd13811, %rd13812;
	add.s64 	%rd13814, %rd18915, %rd18899;
	add.s64 	%rd13815, %rd13814, %rd13808;
	add.s64 	%rd18915, %rd13815, %rd13813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9523,%dummy}, %rd18914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9524}, %rd18914;
	}
	shf.r.wrap.b32 	%r9525, %r9524, %r9523, 19;
	shf.r.wrap.b32 	%r9526, %r9523, %r9524, 19;
	mov.b64 	%rd13816, {%r9526, %r9525};
	shf.l.wrap.b32 	%r9527, %r9523, %r9524, 3;
	shf.l.wrap.b32 	%r9528, %r9524, %r9523, 3;
	mov.b64 	%rd13817, {%r9528, %r9527};
	shr.u64 	%rd13818, %rd18914, 6;
	xor.b64  	%rd13819, %rd13816, %rd13818;
	xor.b64  	%rd13820, %rd13819, %rd13817;
	shr.u64 	%rd13821, %rd18917, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9529,%dummy}, %rd18917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9530}, %rd18917;
	}
	shf.r.wrap.b32 	%r9531, %r9530, %r9529, 1;
	shf.r.wrap.b32 	%r9532, %r9529, %r9530, 1;
	mov.b64 	%rd13822, {%r9532, %r9531};
	xor.b64  	%rd13823, %rd13822, %rd13821;
	shf.r.wrap.b32 	%r9533, %r9530, %r9529, 8;
	shf.r.wrap.b32 	%r9534, %r9529, %r9530, 8;
	mov.b64 	%rd13824, {%r9534, %r9533};
	xor.b64  	%rd13825, %rd13823, %rd13824;
	add.s64 	%rd13826, %rd18916, %rd18898;
	add.s64 	%rd13827, %rd13826, %rd13820;
	add.s64 	%rd18916, %rd13827, %rd13825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9535,%dummy}, %rd18915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9536}, %rd18915;
	}
	shf.r.wrap.b32 	%r9537, %r9536, %r9535, 19;
	shf.r.wrap.b32 	%r9538, %r9535, %r9536, 19;
	mov.b64 	%rd13828, {%r9538, %r9537};
	shf.l.wrap.b32 	%r9539, %r9535, %r9536, 3;
	shf.l.wrap.b32 	%r9540, %r9536, %r9535, 3;
	mov.b64 	%rd13829, {%r9540, %r9539};
	shr.u64 	%rd13830, %rd18915, 6;
	xor.b64  	%rd13831, %rd13828, %rd13830;
	xor.b64  	%rd13832, %rd13831, %rd13829;
	shr.u64 	%rd13833, %rd18918, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9541,%dummy}, %rd18918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9542}, %rd18918;
	}
	shf.r.wrap.b32 	%r9543, %r9542, %r9541, 1;
	shf.r.wrap.b32 	%r9544, %r9541, %r9542, 1;
	mov.b64 	%rd13834, {%r9544, %r9543};
	xor.b64  	%rd13835, %rd13834, %rd13833;
	shf.r.wrap.b32 	%r9545, %r9542, %r9541, 8;
	shf.r.wrap.b32 	%r9546, %r9541, %r9542, 8;
	mov.b64 	%rd13836, {%r9546, %r9545};
	xor.b64  	%rd13837, %rd13835, %rd13836;
	add.s64 	%rd13838, %rd18917, %rd18897;
	add.s64 	%rd13839, %rd13838, %rd13832;
	add.s64 	%rd18917, %rd13839, %rd13837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9547,%dummy}, %rd18916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9548}, %rd18916;
	}
	shf.r.wrap.b32 	%r9549, %r9548, %r9547, 19;
	shf.r.wrap.b32 	%r9550, %r9547, %r9548, 19;
	mov.b64 	%rd13840, {%r9550, %r9549};
	shf.l.wrap.b32 	%r9551, %r9547, %r9548, 3;
	shf.l.wrap.b32 	%r9552, %r9548, %r9547, 3;
	mov.b64 	%rd13841, {%r9552, %r9551};
	shr.u64 	%rd13842, %rd18916, 6;
	xor.b64  	%rd13843, %rd13840, %rd13842;
	xor.b64  	%rd13844, %rd13843, %rd13841;
	shr.u64 	%rd13845, %rd18919, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9553,%dummy}, %rd18919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9554}, %rd18919;
	}
	shf.r.wrap.b32 	%r9555, %r9554, %r9553, 1;
	shf.r.wrap.b32 	%r9556, %r9553, %r9554, 1;
	mov.b64 	%rd13846, {%r9556, %r9555};
	xor.b64  	%rd13847, %rd13846, %rd13845;
	shf.r.wrap.b32 	%r9557, %r9554, %r9553, 8;
	shf.r.wrap.b32 	%r9558, %r9553, %r9554, 8;
	mov.b64 	%rd13848, {%r9558, %r9557};
	xor.b64  	%rd13849, %rd13847, %rd13848;
	add.s64 	%rd13850, %rd18918, %rd18849;
	add.s64 	%rd13851, %rd13850, %rd13844;
	add.s64 	%rd18918, %rd13851, %rd13849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9559,%dummy}, %rd18917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9560}, %rd18917;
	}
	shf.r.wrap.b32 	%r9561, %r9560, %r9559, 19;
	shf.r.wrap.b32 	%r9562, %r9559, %r9560, 19;
	mov.b64 	%rd13852, {%r9562, %r9561};
	shf.l.wrap.b32 	%r9563, %r9559, %r9560, 3;
	shf.l.wrap.b32 	%r9564, %r9560, %r9559, 3;
	mov.b64 	%rd13853, {%r9564, %r9563};
	shr.u64 	%rd13854, %rd18917, 6;
	xor.b64  	%rd13855, %rd13852, %rd13854;
	xor.b64  	%rd13856, %rd13855, %rd13853;
	shr.u64 	%rd13857, %rd18903, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9565,%dummy}, %rd18903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9566}, %rd18903;
	}
	shf.r.wrap.b32 	%r9567, %r9566, %r9565, 1;
	shf.r.wrap.b32 	%r9568, %r9565, %r9566, 1;
	mov.b64 	%rd13858, {%r9568, %r9567};
	xor.b64  	%rd13859, %rd13858, %rd13857;
	shf.r.wrap.b32 	%r9569, %r9566, %r9565, 8;
	shf.r.wrap.b32 	%r9570, %r9565, %r9566, 8;
	mov.b64 	%rd13860, {%r9570, %r9569};
	xor.b64  	%rd13861, %rd13859, %rd13860;
	add.s64 	%rd13862, %rd18912, %rd18919;
	add.s64 	%rd13863, %rd13862, %rd13856;
	add.s64 	%rd18919, %rd13863, %rd13861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9571,%dummy}, %rd18918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9572}, %rd18918;
	}
	shf.r.wrap.b32 	%r9573, %r9572, %r9571, 19;
	shf.r.wrap.b32 	%r9574, %r9571, %r9572, 19;
	mov.b64 	%rd13864, {%r9574, %r9573};
	shf.l.wrap.b32 	%r9575, %r9571, %r9572, 3;
	shf.l.wrap.b32 	%r9576, %r9572, %r9571, 3;
	mov.b64 	%rd13865, {%r9576, %r9575};
	shr.u64 	%rd13866, %rd18918, 6;
	xor.b64  	%rd13867, %rd13864, %rd13866;
	xor.b64  	%rd13868, %rd13867, %rd13865;
	shr.u64 	%rd13869, %rd18902, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9577,%dummy}, %rd18902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9578}, %rd18902;
	}
	shf.r.wrap.b32 	%r9579, %r9578, %r9577, 1;
	shf.r.wrap.b32 	%r9580, %r9577, %r9578, 1;
	mov.b64 	%rd13870, {%r9580, %r9579};
	xor.b64  	%rd13871, %rd13870, %rd13869;
	shf.r.wrap.b32 	%r9581, %r9578, %r9577, 8;
	shf.r.wrap.b32 	%r9582, %r9577, %r9578, 8;
	mov.b64 	%rd13872, {%r9582, %r9581};
	xor.b64  	%rd13873, %rd13871, %rd13872;
	add.s64 	%rd13874, %rd18913, %rd18903;
	add.s64 	%rd13875, %rd13874, %rd13868;
	add.s64 	%rd18903, %rd13875, %rd13873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9583,%dummy}, %rd18919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9584}, %rd18919;
	}
	shf.r.wrap.b32 	%r9585, %r9584, %r9583, 19;
	shf.r.wrap.b32 	%r9586, %r9583, %r9584, 19;
	mov.b64 	%rd13876, {%r9586, %r9585};
	shf.l.wrap.b32 	%r9587, %r9583, %r9584, 3;
	shf.l.wrap.b32 	%r9588, %r9584, %r9583, 3;
	mov.b64 	%rd13877, {%r9588, %r9587};
	shr.u64 	%rd13878, %rd18919, 6;
	xor.b64  	%rd13879, %rd13876, %rd13878;
	xor.b64  	%rd13880, %rd13879, %rd13877;
	shr.u64 	%rd13881, %rd18901, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9589,%dummy}, %rd18901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9590}, %rd18901;
	}
	shf.r.wrap.b32 	%r9591, %r9590, %r9589, 1;
	shf.r.wrap.b32 	%r9592, %r9589, %r9590, 1;
	mov.b64 	%rd13882, {%r9592, %r9591};
	xor.b64  	%rd13883, %rd13882, %rd13881;
	shf.r.wrap.b32 	%r9593, %r9590, %r9589, 8;
	shf.r.wrap.b32 	%r9594, %r9589, %r9590, 8;
	mov.b64 	%rd13884, {%r9594, %r9593};
	xor.b64  	%rd13885, %rd13883, %rd13884;
	add.s64 	%rd13886, %rd18914, %rd18902;
	add.s64 	%rd13887, %rd13886, %rd13880;
	add.s64 	%rd18902, %rd13887, %rd13885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9595,%dummy}, %rd18903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9596}, %rd18903;
	}
	shf.r.wrap.b32 	%r9597, %r9596, %r9595, 19;
	shf.r.wrap.b32 	%r9598, %r9595, %r9596, 19;
	mov.b64 	%rd13888, {%r9598, %r9597};
	shf.l.wrap.b32 	%r9599, %r9595, %r9596, 3;
	shf.l.wrap.b32 	%r9600, %r9596, %r9595, 3;
	mov.b64 	%rd13889, {%r9600, %r9599};
	shr.u64 	%rd13890, %rd18903, 6;
	xor.b64  	%rd13891, %rd13888, %rd13890;
	xor.b64  	%rd13892, %rd13891, %rd13889;
	shr.u64 	%rd13893, %rd18900, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9601,%dummy}, %rd18900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9602}, %rd18900;
	}
	shf.r.wrap.b32 	%r9603, %r9602, %r9601, 1;
	shf.r.wrap.b32 	%r9604, %r9601, %r9602, 1;
	mov.b64 	%rd13894, {%r9604, %r9603};
	xor.b64  	%rd13895, %rd13894, %rd13893;
	shf.r.wrap.b32 	%r9605, %r9602, %r9601, 8;
	shf.r.wrap.b32 	%r9606, %r9601, %r9602, 8;
	mov.b64 	%rd13896, {%r9606, %r9605};
	xor.b64  	%rd13897, %rd13895, %rd13896;
	add.s64 	%rd13898, %rd18915, %rd18901;
	add.s64 	%rd13899, %rd13898, %rd13892;
	add.s64 	%rd18901, %rd13899, %rd13897;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9607,%dummy}, %rd18902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9608}, %rd18902;
	}
	shf.r.wrap.b32 	%r9609, %r9608, %r9607, 19;
	shf.r.wrap.b32 	%r9610, %r9607, %r9608, 19;
	mov.b64 	%rd13900, {%r9610, %r9609};
	shf.l.wrap.b32 	%r9611, %r9607, %r9608, 3;
	shf.l.wrap.b32 	%r9612, %r9608, %r9607, 3;
	mov.b64 	%rd13901, {%r9612, %r9611};
	shr.u64 	%rd13902, %rd18902, 6;
	xor.b64  	%rd13903, %rd13900, %rd13902;
	xor.b64  	%rd13904, %rd13903, %rd13901;
	shr.u64 	%rd13905, %rd18899, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9613,%dummy}, %rd18899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9614}, %rd18899;
	}
	shf.r.wrap.b32 	%r9615, %r9614, %r9613, 1;
	shf.r.wrap.b32 	%r9616, %r9613, %r9614, 1;
	mov.b64 	%rd13906, {%r9616, %r9615};
	xor.b64  	%rd13907, %rd13906, %rd13905;
	shf.r.wrap.b32 	%r9617, %r9614, %r9613, 8;
	shf.r.wrap.b32 	%r9618, %r9613, %r9614, 8;
	mov.b64 	%rd13908, {%r9618, %r9617};
	xor.b64  	%rd13909, %rd13907, %rd13908;
	add.s64 	%rd13910, %rd18916, %rd18900;
	add.s64 	%rd13911, %rd13910, %rd13904;
	add.s64 	%rd18900, %rd13911, %rd13909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9619,%dummy}, %rd18901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9620}, %rd18901;
	}
	shf.r.wrap.b32 	%r9621, %r9620, %r9619, 19;
	shf.r.wrap.b32 	%r9622, %r9619, %r9620, 19;
	mov.b64 	%rd13912, {%r9622, %r9621};
	shf.l.wrap.b32 	%r9623, %r9619, %r9620, 3;
	shf.l.wrap.b32 	%r9624, %r9620, %r9619, 3;
	mov.b64 	%rd13913, {%r9624, %r9623};
	shr.u64 	%rd13914, %rd18901, 6;
	xor.b64  	%rd13915, %rd13912, %rd13914;
	xor.b64  	%rd13916, %rd13915, %rd13913;
	shr.u64 	%rd13917, %rd18898, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9625,%dummy}, %rd18898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9626}, %rd18898;
	}
	shf.r.wrap.b32 	%r9627, %r9626, %r9625, 1;
	shf.r.wrap.b32 	%r9628, %r9625, %r9626, 1;
	mov.b64 	%rd13918, {%r9628, %r9627};
	xor.b64  	%rd13919, %rd13918, %rd13917;
	shf.r.wrap.b32 	%r9629, %r9626, %r9625, 8;
	shf.r.wrap.b32 	%r9630, %r9625, %r9626, 8;
	mov.b64 	%rd13920, {%r9630, %r9629};
	xor.b64  	%rd13921, %rd13919, %rd13920;
	add.s64 	%rd13922, %rd18917, %rd18899;
	add.s64 	%rd13923, %rd13922, %rd13916;
	add.s64 	%rd18899, %rd13923, %rd13921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9631,%dummy}, %rd18900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9632}, %rd18900;
	}
	shf.r.wrap.b32 	%r9633, %r9632, %r9631, 19;
	shf.r.wrap.b32 	%r9634, %r9631, %r9632, 19;
	mov.b64 	%rd13924, {%r9634, %r9633};
	shf.l.wrap.b32 	%r9635, %r9631, %r9632, 3;
	shf.l.wrap.b32 	%r9636, %r9632, %r9631, 3;
	mov.b64 	%rd13925, {%r9636, %r9635};
	shr.u64 	%rd13926, %rd18900, 6;
	xor.b64  	%rd13927, %rd13924, %rd13926;
	xor.b64  	%rd13928, %rd13927, %rd13925;
	shr.u64 	%rd13929, %rd18897, 7;
	shf.r.wrap.b32 	%r9637, %r9476, %r9475, 1;
	shf.r.wrap.b32 	%r9638, %r9475, %r9476, 1;
	mov.b64 	%rd13930, {%r9638, %r9637};
	xor.b64  	%rd13931, %rd13930, %rd13929;
	shf.r.wrap.b32 	%r9639, %r9476, %r9475, 8;
	shf.r.wrap.b32 	%r9640, %r9475, %r9476, 8;
	mov.b64 	%rd13932, {%r9640, %r9639};
	xor.b64  	%rd13933, %rd13931, %rd13932;
	add.s64 	%rd13934, %rd18918, %rd18898;
	add.s64 	%rd13935, %rd13934, %rd13928;
	add.s64 	%rd18898, %rd13935, %rd13933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9641,%dummy}, %rd18899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9642}, %rd18899;
	}
	shf.r.wrap.b32 	%r9643, %r9642, %r9641, 19;
	shf.r.wrap.b32 	%r9644, %r9641, %r9642, 19;
	mov.b64 	%rd13936, {%r9644, %r9643};
	shf.l.wrap.b32 	%r9645, %r9641, %r9642, 3;
	shf.l.wrap.b32 	%r9646, %r9642, %r9641, 3;
	mov.b64 	%rd13937, {%r9646, %r9645};
	shr.u64 	%rd13938, %rd18899, 6;
	xor.b64  	%rd13939, %rd13936, %rd13938;
	xor.b64  	%rd13940, %rd13939, %rd13937;
	shr.u64 	%rd13941, %rd18849, 7;
	shf.r.wrap.b32 	%r9647, %r9488, %r9487, 1;
	shf.r.wrap.b32 	%r9648, %r9487, %r9488, 1;
	mov.b64 	%rd13942, {%r9648, %r9647};
	xor.b64  	%rd13943, %rd13942, %rd13941;
	shf.r.wrap.b32 	%r9649, %r9488, %r9487, 8;
	shf.r.wrap.b32 	%r9650, %r9487, %r9488, 8;
	mov.b64 	%rd13944, {%r9650, %r9649};
	xor.b64  	%rd13945, %rd13943, %rd13944;
	add.s64 	%rd13946, %rd18919, %rd18897;
	add.s64 	%rd13947, %rd13946, %rd13940;
	add.s64 	%rd18897, %rd13947, %rd13945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9651,%dummy}, %rd18898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9652}, %rd18898;
	}
	shf.r.wrap.b32 	%r9653, %r9652, %r9651, 19;
	shf.r.wrap.b32 	%r9654, %r9651, %r9652, 19;
	mov.b64 	%rd13948, {%r9654, %r9653};
	shf.l.wrap.b32 	%r9655, %r9651, %r9652, 3;
	shf.l.wrap.b32 	%r9656, %r9652, %r9651, 3;
	mov.b64 	%rd13949, {%r9656, %r9655};
	shr.u64 	%rd13950, %rd18898, 6;
	xor.b64  	%rd13951, %rd13948, %rd13950;
	xor.b64  	%rd13952, %rd13951, %rd13949;
	shf.r.wrap.b32 	%r9657, %r9500, %r9499, 1;
	shf.r.wrap.b32 	%r9658, %r9499, %r9500, 1;
	mov.b64 	%rd13953, {%r9658, %r9657};
	shf.r.wrap.b32 	%r9659, %r9500, %r9499, 8;
	shf.r.wrap.b32 	%r9660, %r9499, %r9500, 8;
	mov.b64 	%rd13954, {%r9660, %r9659};
	shr.u64 	%rd13955, %rd18912, 7;
	xor.b64  	%rd13956, %rd13953, %rd13955;
	xor.b64  	%rd13957, %rd13956, %rd13954;
	add.s64 	%rd13958, %rd18903, %rd18849;
	add.s64 	%rd13959, %rd13958, %rd13952;
	add.s64 	%rd18849, %rd13959, %rd13957;
	mul.wide.s32 	%rd13960, %r13047, 8;
	mov.u64 	%rd13961, k_sha512;
	add.s64 	%rd13962, %rd13961, %rd13960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9661,%dummy}, %rd18861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9662}, %rd18861;
	}
	shf.r.wrap.b32 	%r9663, %r9662, %r9661, 18;
	shf.r.wrap.b32 	%r9664, %r9661, %r9662, 18;
	mov.b64 	%rd13963, {%r9664, %r9663};
	shf.r.wrap.b32 	%r9665, %r9662, %r9661, 14;
	shf.r.wrap.b32 	%r9666, %r9661, %r9662, 14;
	mov.b64 	%rd13964, {%r9666, %r9665};
	xor.b64  	%rd13965, %rd13963, %rd13964;
	shf.l.wrap.b32 	%r9667, %r9661, %r9662, 23;
	shf.l.wrap.b32 	%r9668, %r9662, %r9661, 23;
	mov.b64 	%rd13966, {%r9668, %r9667};
	xor.b64  	%rd13967, %rd13965, %rd13966;
	xor.b64  	%rd13968, %rd18863, %rd18862;
	and.b64  	%rd13969, %rd13968, %rd18861;
	xor.b64  	%rd13970, %rd13969, %rd18863;
	add.s64 	%rd13971, %rd13970, %rd18864;
	add.s64 	%rd13972, %rd13971, %rd18912;
	ld.const.u64 	%rd13973, [%rd13962];
	add.s64 	%rd13974, %rd13972, %rd13973;
	add.s64 	%rd13975, %rd13974, %rd13967;
	add.s64 	%rd13976, %rd13975, %rd18860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9669}, %rd18857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9670,%dummy}, %rd18857;
	}
	shf.l.wrap.b32 	%r9671, %r9670, %r9669, 30;
	shf.l.wrap.b32 	%r9672, %r9669, %r9670, 30;
	mov.b64 	%rd13977, {%r9672, %r9671};
	shf.r.wrap.b32 	%r9673, %r9669, %r9670, 28;
	shf.r.wrap.b32 	%r9674, %r9670, %r9669, 28;
	mov.b64 	%rd13978, {%r9674, %r9673};
	xor.b64  	%rd13979, %rd13977, %rd13978;
	shf.l.wrap.b32 	%r9675, %r9670, %r9669, 25;
	shf.l.wrap.b32 	%r9676, %r9669, %r9670, 25;
	mov.b64 	%rd13980, {%r9676, %r9675};
	xor.b64  	%rd13981, %rd13979, %rd13980;
	xor.b64  	%rd13982, %rd18858, %rd18857;
	and.b64  	%rd13983, %rd13982, %rd18859;
	and.b64  	%rd13984, %rd18858, %rd18857;
	or.b64  	%rd13985, %rd13983, %rd13984;
	add.s64 	%rd13986, %rd13975, %rd13985;
	add.s64 	%rd13987, %rd13986, %rd13981;
	add.s32 	%r9677, %r13047, 1;
	mul.wide.s32 	%rd13988, %r9677, 8;
	add.s64 	%rd13989, %rd13961, %rd13988;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9678,%dummy}, %rd13976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9679}, %rd13976;
	}
	shf.r.wrap.b32 	%r9680, %r9679, %r9678, 14;
	shf.r.wrap.b32 	%r9681, %r9678, %r9679, 14;
	mov.b64 	%rd13990, {%r9681, %r9680};
	shf.r.wrap.b32 	%r9682, %r9679, %r9678, 18;
	shf.r.wrap.b32 	%r9683, %r9678, %r9679, 18;
	mov.b64 	%rd13991, {%r9683, %r9682};
	xor.b64  	%rd13992, %rd13991, %rd13990;
	shf.l.wrap.b32 	%r9684, %r9678, %r9679, 23;
	shf.l.wrap.b32 	%r9685, %r9679, %r9678, 23;
	mov.b64 	%rd13993, {%r9685, %r9684};
	xor.b64  	%rd13994, %rd13992, %rd13993;
	xor.b64  	%rd13995, %rd18862, %rd18861;
	and.b64  	%rd13996, %rd13976, %rd13995;
	xor.b64  	%rd13997, %rd13996, %rd18862;
	add.s64 	%rd13998, %rd18913, %rd18863;
	ld.const.u64 	%rd13999, [%rd13989];
	add.s64 	%rd14000, %rd13998, %rd13999;
	add.s64 	%rd14001, %rd14000, %rd13997;
	add.s64 	%rd14002, %rd14001, %rd13994;
	add.s64 	%rd14003, %rd14002, %rd18859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9686,%dummy}, %rd13987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9687}, %rd13987;
	}
	shf.r.wrap.b32 	%r9688, %r9687, %r9686, 28;
	shf.r.wrap.b32 	%r9689, %r9686, %r9687, 28;
	mov.b64 	%rd14004, {%r9689, %r9688};
	shf.l.wrap.b32 	%r9690, %r9686, %r9687, 30;
	shf.l.wrap.b32 	%r9691, %r9687, %r9686, 30;
	mov.b64 	%rd14005, {%r9691, %r9690};
	xor.b64  	%rd14006, %rd14005, %rd14004;
	shf.l.wrap.b32 	%r9692, %r9686, %r9687, 25;
	shf.l.wrap.b32 	%r9693, %r9687, %r9686, 25;
	mov.b64 	%rd14007, {%r9693, %r9692};
	xor.b64  	%rd14008, %rd14006, %rd14007;
	and.b64  	%rd14009, %rd13987, %rd18857;
	xor.b64  	%rd14010, %rd13987, %rd18857;
	and.b64  	%rd14011, %rd14010, %rd18858;
	or.b64  	%rd14012, %rd14011, %rd14009;
	add.s64 	%rd14013, %rd14002, %rd14012;
	add.s64 	%rd14014, %rd14013, %rd14008;
	add.s32 	%r9694, %r13047, 2;
	mul.wide.s32 	%rd14015, %r9694, 8;
	add.s64 	%rd14016, %rd13961, %rd14015;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9695,%dummy}, %rd14003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9696}, %rd14003;
	}
	shf.r.wrap.b32 	%r9697, %r9696, %r9695, 14;
	shf.r.wrap.b32 	%r9698, %r9695, %r9696, 14;
	mov.b64 	%rd14017, {%r9698, %r9697};
	shf.r.wrap.b32 	%r9699, %r9696, %r9695, 18;
	shf.r.wrap.b32 	%r9700, %r9695, %r9696, 18;
	mov.b64 	%rd14018, {%r9700, %r9699};
	xor.b64  	%rd14019, %rd14018, %rd14017;
	shf.l.wrap.b32 	%r9701, %r9695, %r9696, 23;
	shf.l.wrap.b32 	%r9702, %r9696, %r9695, 23;
	mov.b64 	%rd14020, {%r9702, %r9701};
	xor.b64  	%rd14021, %rd14019, %rd14020;
	xor.b64  	%rd14022, %rd13976, %rd18861;
	and.b64  	%rd14023, %rd14003, %rd14022;
	xor.b64  	%rd14024, %rd14023, %rd18861;
	add.s64 	%rd14025, %rd18914, %rd18862;
	ld.const.u64 	%rd14026, [%rd14016];
	add.s64 	%rd14027, %rd14025, %rd14026;
	add.s64 	%rd14028, %rd14027, %rd14024;
	add.s64 	%rd14029, %rd14028, %rd14021;
	add.s64 	%rd14030, %rd14029, %rd18858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9703,%dummy}, %rd14014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9704}, %rd14014;
	}
	shf.r.wrap.b32 	%r9705, %r9704, %r9703, 28;
	shf.r.wrap.b32 	%r9706, %r9703, %r9704, 28;
	mov.b64 	%rd14031, {%r9706, %r9705};
	shf.l.wrap.b32 	%r9707, %r9703, %r9704, 30;
	shf.l.wrap.b32 	%r9708, %r9704, %r9703, 30;
	mov.b64 	%rd14032, {%r9708, %r9707};
	xor.b64  	%rd14033, %rd14032, %rd14031;
	shf.l.wrap.b32 	%r9709, %r9703, %r9704, 25;
	shf.l.wrap.b32 	%r9710, %r9704, %r9703, 25;
	mov.b64 	%rd14034, {%r9710, %r9709};
	xor.b64  	%rd14035, %rd14033, %rd14034;
	and.b64  	%rd14036, %rd14014, %rd13987;
	xor.b64  	%rd14037, %rd14014, %rd13987;
	and.b64  	%rd14038, %rd14037, %rd18857;
	or.b64  	%rd14039, %rd14038, %rd14036;
	add.s64 	%rd14040, %rd14029, %rd14039;
	add.s64 	%rd14041, %rd14040, %rd14035;
	add.s32 	%r9711, %r13047, 3;
	mul.wide.s32 	%rd14042, %r9711, 8;
	add.s64 	%rd14043, %rd13961, %rd14042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9712,%dummy}, %rd14030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9713}, %rd14030;
	}
	shf.r.wrap.b32 	%r9714, %r9713, %r9712, 14;
	shf.r.wrap.b32 	%r9715, %r9712, %r9713, 14;
	mov.b64 	%rd14044, {%r9715, %r9714};
	shf.r.wrap.b32 	%r9716, %r9713, %r9712, 18;
	shf.r.wrap.b32 	%r9717, %r9712, %r9713, 18;
	mov.b64 	%rd14045, {%r9717, %r9716};
	xor.b64  	%rd14046, %rd14045, %rd14044;
	shf.l.wrap.b32 	%r9718, %r9712, %r9713, 23;
	shf.l.wrap.b32 	%r9719, %r9713, %r9712, 23;
	mov.b64 	%rd14047, {%r9719, %r9718};
	xor.b64  	%rd14048, %rd14046, %rd14047;
	xor.b64  	%rd14049, %rd14003, %rd13976;
	and.b64  	%rd14050, %rd14030, %rd14049;
	xor.b64  	%rd14051, %rd14050, %rd13976;
	add.s64 	%rd14052, %rd18915, %rd18861;
	ld.const.u64 	%rd14053, [%rd14043];
	add.s64 	%rd14054, %rd14052, %rd14053;
	add.s64 	%rd14055, %rd14054, %rd14051;
	add.s64 	%rd14056, %rd14055, %rd14048;
	add.s64 	%rd14057, %rd14056, %rd18857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9720,%dummy}, %rd14041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9721}, %rd14041;
	}
	shf.r.wrap.b32 	%r9722, %r9721, %r9720, 28;
	shf.r.wrap.b32 	%r9723, %r9720, %r9721, 28;
	mov.b64 	%rd14058, {%r9723, %r9722};
	shf.l.wrap.b32 	%r9724, %r9720, %r9721, 30;
	shf.l.wrap.b32 	%r9725, %r9721, %r9720, 30;
	mov.b64 	%rd14059, {%r9725, %r9724};
	xor.b64  	%rd14060, %rd14059, %rd14058;
	shf.l.wrap.b32 	%r9726, %r9720, %r9721, 25;
	shf.l.wrap.b32 	%r9727, %r9721, %r9720, 25;
	mov.b64 	%rd14061, {%r9727, %r9726};
	xor.b64  	%rd14062, %rd14060, %rd14061;
	and.b64  	%rd14063, %rd14041, %rd14014;
	xor.b64  	%rd14064, %rd14041, %rd14014;
	and.b64  	%rd14065, %rd14064, %rd13987;
	or.b64  	%rd14066, %rd14065, %rd14063;
	add.s64 	%rd14067, %rd14056, %rd14066;
	add.s64 	%rd14068, %rd14067, %rd14062;
	add.s32 	%r9728, %r13047, 4;
	mul.wide.s32 	%rd14069, %r9728, 8;
	add.s64 	%rd14070, %rd13961, %rd14069;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9729,%dummy}, %rd14057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9730}, %rd14057;
	}
	shf.r.wrap.b32 	%r9731, %r9730, %r9729, 14;
	shf.r.wrap.b32 	%r9732, %r9729, %r9730, 14;
	mov.b64 	%rd14071, {%r9732, %r9731};
	shf.r.wrap.b32 	%r9733, %r9730, %r9729, 18;
	shf.r.wrap.b32 	%r9734, %r9729, %r9730, 18;
	mov.b64 	%rd14072, {%r9734, %r9733};
	xor.b64  	%rd14073, %rd14072, %rd14071;
	shf.l.wrap.b32 	%r9735, %r9729, %r9730, 23;
	shf.l.wrap.b32 	%r9736, %r9730, %r9729, 23;
	mov.b64 	%rd14074, {%r9736, %r9735};
	xor.b64  	%rd14075, %rd14073, %rd14074;
	xor.b64  	%rd14076, %rd14030, %rd14003;
	and.b64  	%rd14077, %rd14057, %rd14076;
	xor.b64  	%rd14078, %rd14077, %rd14003;
	add.s64 	%rd14079, %rd13976, %rd18916;
	ld.const.u64 	%rd14080, [%rd14070];
	add.s64 	%rd14081, %rd14079, %rd14080;
	add.s64 	%rd14082, %rd14081, %rd14078;
	add.s64 	%rd14083, %rd14082, %rd14075;
	add.s64 	%rd14084, %rd14083, %rd13987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9737,%dummy}, %rd14068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9738}, %rd14068;
	}
	shf.r.wrap.b32 	%r9739, %r9738, %r9737, 28;
	shf.r.wrap.b32 	%r9740, %r9737, %r9738, 28;
	mov.b64 	%rd14085, {%r9740, %r9739};
	shf.l.wrap.b32 	%r9741, %r9737, %r9738, 30;
	shf.l.wrap.b32 	%r9742, %r9738, %r9737, 30;
	mov.b64 	%rd14086, {%r9742, %r9741};
	xor.b64  	%rd14087, %rd14086, %rd14085;
	shf.l.wrap.b32 	%r9743, %r9737, %r9738, 25;
	shf.l.wrap.b32 	%r9744, %r9738, %r9737, 25;
	mov.b64 	%rd14088, {%r9744, %r9743};
	xor.b64  	%rd14089, %rd14087, %rd14088;
	and.b64  	%rd14090, %rd14068, %rd14041;
	xor.b64  	%rd14091, %rd14068, %rd14041;
	and.b64  	%rd14092, %rd14091, %rd14014;
	or.b64  	%rd14093, %rd14092, %rd14090;
	add.s64 	%rd14094, %rd14083, %rd14093;
	add.s64 	%rd14095, %rd14094, %rd14089;
	add.s32 	%r9745, %r13047, 5;
	mul.wide.s32 	%rd14096, %r9745, 8;
	add.s64 	%rd14097, %rd13961, %rd14096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9746,%dummy}, %rd14084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9747}, %rd14084;
	}
	shf.r.wrap.b32 	%r9748, %r9747, %r9746, 14;
	shf.r.wrap.b32 	%r9749, %r9746, %r9747, 14;
	mov.b64 	%rd14098, {%r9749, %r9748};
	shf.r.wrap.b32 	%r9750, %r9747, %r9746, 18;
	shf.r.wrap.b32 	%r9751, %r9746, %r9747, 18;
	mov.b64 	%rd14099, {%r9751, %r9750};
	xor.b64  	%rd14100, %rd14099, %rd14098;
	shf.l.wrap.b32 	%r9752, %r9746, %r9747, 23;
	shf.l.wrap.b32 	%r9753, %r9747, %r9746, 23;
	mov.b64 	%rd14101, {%r9753, %r9752};
	xor.b64  	%rd14102, %rd14100, %rd14101;
	xor.b64  	%rd14103, %rd14057, %rd14030;
	and.b64  	%rd14104, %rd14084, %rd14103;
	xor.b64  	%rd14105, %rd14104, %rd14030;
	add.s64 	%rd14106, %rd14003, %rd18917;
	ld.const.u64 	%rd14107, [%rd14097];
	add.s64 	%rd14108, %rd14106, %rd14107;
	add.s64 	%rd14109, %rd14108, %rd14105;
	add.s64 	%rd14110, %rd14109, %rd14102;
	add.s64 	%rd14111, %rd14110, %rd14014;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9754,%dummy}, %rd14095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9755}, %rd14095;
	}
	shf.r.wrap.b32 	%r9756, %r9755, %r9754, 28;
	shf.r.wrap.b32 	%r9757, %r9754, %r9755, 28;
	mov.b64 	%rd14112, {%r9757, %r9756};
	shf.l.wrap.b32 	%r9758, %r9754, %r9755, 30;
	shf.l.wrap.b32 	%r9759, %r9755, %r9754, 30;
	mov.b64 	%rd14113, {%r9759, %r9758};
	xor.b64  	%rd14114, %rd14113, %rd14112;
	shf.l.wrap.b32 	%r9760, %r9754, %r9755, 25;
	shf.l.wrap.b32 	%r9761, %r9755, %r9754, 25;
	mov.b64 	%rd14115, {%r9761, %r9760};
	xor.b64  	%rd14116, %rd14114, %rd14115;
	and.b64  	%rd14117, %rd14095, %rd14068;
	xor.b64  	%rd14118, %rd14095, %rd14068;
	and.b64  	%rd14119, %rd14118, %rd14041;
	or.b64  	%rd14120, %rd14119, %rd14117;
	add.s64 	%rd14121, %rd14110, %rd14120;
	add.s64 	%rd14122, %rd14121, %rd14116;
	add.s32 	%r9762, %r13047, 6;
	mul.wide.s32 	%rd14123, %r9762, 8;
	add.s64 	%rd14124, %rd13961, %rd14123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9763,%dummy}, %rd14111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9764}, %rd14111;
	}
	shf.r.wrap.b32 	%r9765, %r9764, %r9763, 14;
	shf.r.wrap.b32 	%r9766, %r9763, %r9764, 14;
	mov.b64 	%rd14125, {%r9766, %r9765};
	shf.r.wrap.b32 	%r9767, %r9764, %r9763, 18;
	shf.r.wrap.b32 	%r9768, %r9763, %r9764, 18;
	mov.b64 	%rd14126, {%r9768, %r9767};
	xor.b64  	%rd14127, %rd14126, %rd14125;
	shf.l.wrap.b32 	%r9769, %r9763, %r9764, 23;
	shf.l.wrap.b32 	%r9770, %r9764, %r9763, 23;
	mov.b64 	%rd14128, {%r9770, %r9769};
	xor.b64  	%rd14129, %rd14127, %rd14128;
	xor.b64  	%rd14130, %rd14084, %rd14057;
	and.b64  	%rd14131, %rd14111, %rd14130;
	xor.b64  	%rd14132, %rd14131, %rd14057;
	add.s64 	%rd14133, %rd14030, %rd18918;
	ld.const.u64 	%rd14134, [%rd14124];
	add.s64 	%rd14135, %rd14133, %rd14134;
	add.s64 	%rd14136, %rd14135, %rd14132;
	add.s64 	%rd14137, %rd14136, %rd14129;
	add.s64 	%rd14138, %rd14137, %rd14041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9771,%dummy}, %rd14122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9772}, %rd14122;
	}
	shf.r.wrap.b32 	%r9773, %r9772, %r9771, 28;
	shf.r.wrap.b32 	%r9774, %r9771, %r9772, 28;
	mov.b64 	%rd14139, {%r9774, %r9773};
	shf.l.wrap.b32 	%r9775, %r9771, %r9772, 30;
	shf.l.wrap.b32 	%r9776, %r9772, %r9771, 30;
	mov.b64 	%rd14140, {%r9776, %r9775};
	xor.b64  	%rd14141, %rd14140, %rd14139;
	shf.l.wrap.b32 	%r9777, %r9771, %r9772, 25;
	shf.l.wrap.b32 	%r9778, %r9772, %r9771, 25;
	mov.b64 	%rd14142, {%r9778, %r9777};
	xor.b64  	%rd14143, %rd14141, %rd14142;
	and.b64  	%rd14144, %rd14122, %rd14095;
	xor.b64  	%rd14145, %rd14122, %rd14095;
	and.b64  	%rd14146, %rd14145, %rd14068;
	or.b64  	%rd14147, %rd14146, %rd14144;
	add.s64 	%rd14148, %rd14137, %rd14147;
	add.s64 	%rd14149, %rd14148, %rd14143;
	add.s32 	%r9779, %r13047, 7;
	mul.wide.s32 	%rd14150, %r9779, 8;
	add.s64 	%rd14151, %rd13961, %rd14150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9780,%dummy}, %rd14138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9781}, %rd14138;
	}
	shf.r.wrap.b32 	%r9782, %r9781, %r9780, 14;
	shf.r.wrap.b32 	%r9783, %r9780, %r9781, 14;
	mov.b64 	%rd14152, {%r9783, %r9782};
	shf.r.wrap.b32 	%r9784, %r9781, %r9780, 18;
	shf.r.wrap.b32 	%r9785, %r9780, %r9781, 18;
	mov.b64 	%rd14153, {%r9785, %r9784};
	xor.b64  	%rd14154, %rd14153, %rd14152;
	shf.l.wrap.b32 	%r9786, %r9780, %r9781, 23;
	shf.l.wrap.b32 	%r9787, %r9781, %r9780, 23;
	mov.b64 	%rd14155, {%r9787, %r9786};
	xor.b64  	%rd14156, %rd14154, %rd14155;
	xor.b64  	%rd14157, %rd14111, %rd14084;
	and.b64  	%rd14158, %rd14138, %rd14157;
	xor.b64  	%rd14159, %rd14158, %rd14084;
	add.s64 	%rd14160, %rd14057, %rd18919;
	ld.const.u64 	%rd14161, [%rd14151];
	add.s64 	%rd14162, %rd14160, %rd14161;
	add.s64 	%rd14163, %rd14162, %rd14159;
	add.s64 	%rd14164, %rd14163, %rd14156;
	add.s64 	%rd14165, %rd14164, %rd14068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9788,%dummy}, %rd14149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9789}, %rd14149;
	}
	shf.r.wrap.b32 	%r9790, %r9789, %r9788, 28;
	shf.r.wrap.b32 	%r9791, %r9788, %r9789, 28;
	mov.b64 	%rd14166, {%r9791, %r9790};
	shf.l.wrap.b32 	%r9792, %r9788, %r9789, 30;
	shf.l.wrap.b32 	%r9793, %r9789, %r9788, 30;
	mov.b64 	%rd14167, {%r9793, %r9792};
	xor.b64  	%rd14168, %rd14167, %rd14166;
	shf.l.wrap.b32 	%r9794, %r9788, %r9789, 25;
	shf.l.wrap.b32 	%r9795, %r9789, %r9788, 25;
	mov.b64 	%rd14169, {%r9795, %r9794};
	xor.b64  	%rd14170, %rd14168, %rd14169;
	and.b64  	%rd14171, %rd14149, %rd14122;
	xor.b64  	%rd14172, %rd14149, %rd14122;
	and.b64  	%rd14173, %rd14172, %rd14095;
	or.b64  	%rd14174, %rd14173, %rd14171;
	add.s64 	%rd14175, %rd14164, %rd14174;
	add.s64 	%rd14176, %rd14175, %rd14170;
	add.s32 	%r9796, %r13047, 8;
	mul.wide.s32 	%rd14177, %r9796, 8;
	add.s64 	%rd14178, %rd13961, %rd14177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9797,%dummy}, %rd14165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9798}, %rd14165;
	}
	shf.r.wrap.b32 	%r9799, %r9798, %r9797, 14;
	shf.r.wrap.b32 	%r9800, %r9797, %r9798, 14;
	mov.b64 	%rd14179, {%r9800, %r9799};
	shf.r.wrap.b32 	%r9801, %r9798, %r9797, 18;
	shf.r.wrap.b32 	%r9802, %r9797, %r9798, 18;
	mov.b64 	%rd14180, {%r9802, %r9801};
	xor.b64  	%rd14181, %rd14180, %rd14179;
	shf.l.wrap.b32 	%r9803, %r9797, %r9798, 23;
	shf.l.wrap.b32 	%r9804, %r9798, %r9797, 23;
	mov.b64 	%rd14182, {%r9804, %r9803};
	xor.b64  	%rd14183, %rd14181, %rd14182;
	xor.b64  	%rd14184, %rd14138, %rd14111;
	and.b64  	%rd14185, %rd14165, %rd14184;
	xor.b64  	%rd14186, %rd14185, %rd14111;
	add.s64 	%rd14187, %rd14084, %rd18903;
	ld.const.u64 	%rd14188, [%rd14178];
	add.s64 	%rd14189, %rd14187, %rd14188;
	add.s64 	%rd14190, %rd14189, %rd14186;
	add.s64 	%rd14191, %rd14190, %rd14183;
	add.s64 	%rd14192, %rd14191, %rd14095;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9805,%dummy}, %rd14176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9806}, %rd14176;
	}
	shf.r.wrap.b32 	%r9807, %r9806, %r9805, 28;
	shf.r.wrap.b32 	%r9808, %r9805, %r9806, 28;
	mov.b64 	%rd14193, {%r9808, %r9807};
	shf.l.wrap.b32 	%r9809, %r9805, %r9806, 30;
	shf.l.wrap.b32 	%r9810, %r9806, %r9805, 30;
	mov.b64 	%rd14194, {%r9810, %r9809};
	xor.b64  	%rd14195, %rd14194, %rd14193;
	shf.l.wrap.b32 	%r9811, %r9805, %r9806, 25;
	shf.l.wrap.b32 	%r9812, %r9806, %r9805, 25;
	mov.b64 	%rd14196, {%r9812, %r9811};
	xor.b64  	%rd14197, %rd14195, %rd14196;
	and.b64  	%rd14198, %rd14176, %rd14149;
	xor.b64  	%rd14199, %rd14176, %rd14149;
	and.b64  	%rd14200, %rd14199, %rd14122;
	or.b64  	%rd14201, %rd14200, %rd14198;
	add.s64 	%rd14202, %rd14191, %rd14201;
	add.s64 	%rd14203, %rd14202, %rd14197;
	add.s32 	%r9813, %r13047, 9;
	mul.wide.s32 	%rd14204, %r9813, 8;
	add.s64 	%rd14205, %rd13961, %rd14204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9814,%dummy}, %rd14192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9815}, %rd14192;
	}
	shf.r.wrap.b32 	%r9816, %r9815, %r9814, 14;
	shf.r.wrap.b32 	%r9817, %r9814, %r9815, 14;
	mov.b64 	%rd14206, {%r9817, %r9816};
	shf.r.wrap.b32 	%r9818, %r9815, %r9814, 18;
	shf.r.wrap.b32 	%r9819, %r9814, %r9815, 18;
	mov.b64 	%rd14207, {%r9819, %r9818};
	xor.b64  	%rd14208, %rd14207, %rd14206;
	shf.l.wrap.b32 	%r9820, %r9814, %r9815, 23;
	shf.l.wrap.b32 	%r9821, %r9815, %r9814, 23;
	mov.b64 	%rd14209, {%r9821, %r9820};
	xor.b64  	%rd14210, %rd14208, %rd14209;
	xor.b64  	%rd14211, %rd14165, %rd14138;
	and.b64  	%rd14212, %rd14192, %rd14211;
	xor.b64  	%rd14213, %rd14212, %rd14138;
	add.s64 	%rd14214, %rd14111, %rd18902;
	ld.const.u64 	%rd14215, [%rd14205];
	add.s64 	%rd14216, %rd14214, %rd14215;
	add.s64 	%rd14217, %rd14216, %rd14213;
	add.s64 	%rd14218, %rd14217, %rd14210;
	add.s64 	%rd14219, %rd14218, %rd14122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9822,%dummy}, %rd14203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9823}, %rd14203;
	}
	shf.r.wrap.b32 	%r9824, %r9823, %r9822, 28;
	shf.r.wrap.b32 	%r9825, %r9822, %r9823, 28;
	mov.b64 	%rd14220, {%r9825, %r9824};
	shf.l.wrap.b32 	%r9826, %r9822, %r9823, 30;
	shf.l.wrap.b32 	%r9827, %r9823, %r9822, 30;
	mov.b64 	%rd14221, {%r9827, %r9826};
	xor.b64  	%rd14222, %rd14221, %rd14220;
	shf.l.wrap.b32 	%r9828, %r9822, %r9823, 25;
	shf.l.wrap.b32 	%r9829, %r9823, %r9822, 25;
	mov.b64 	%rd14223, {%r9829, %r9828};
	xor.b64  	%rd14224, %rd14222, %rd14223;
	and.b64  	%rd14225, %rd14203, %rd14176;
	xor.b64  	%rd14226, %rd14203, %rd14176;
	and.b64  	%rd14227, %rd14226, %rd14149;
	or.b64  	%rd14228, %rd14227, %rd14225;
	add.s64 	%rd14229, %rd14218, %rd14228;
	add.s64 	%rd14230, %rd14229, %rd14224;
	add.s32 	%r9830, %r13047, 10;
	mul.wide.s32 	%rd14231, %r9830, 8;
	add.s64 	%rd14232, %rd13961, %rd14231;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9831,%dummy}, %rd14219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9832}, %rd14219;
	}
	shf.r.wrap.b32 	%r9833, %r9832, %r9831, 14;
	shf.r.wrap.b32 	%r9834, %r9831, %r9832, 14;
	mov.b64 	%rd14233, {%r9834, %r9833};
	shf.r.wrap.b32 	%r9835, %r9832, %r9831, 18;
	shf.r.wrap.b32 	%r9836, %r9831, %r9832, 18;
	mov.b64 	%rd14234, {%r9836, %r9835};
	xor.b64  	%rd14235, %rd14234, %rd14233;
	shf.l.wrap.b32 	%r9837, %r9831, %r9832, 23;
	shf.l.wrap.b32 	%r9838, %r9832, %r9831, 23;
	mov.b64 	%rd14236, {%r9838, %r9837};
	xor.b64  	%rd14237, %rd14235, %rd14236;
	xor.b64  	%rd14238, %rd14192, %rd14165;
	and.b64  	%rd14239, %rd14219, %rd14238;
	xor.b64  	%rd14240, %rd14239, %rd14165;
	add.s64 	%rd14241, %rd14138, %rd18901;
	ld.const.u64 	%rd14242, [%rd14232];
	add.s64 	%rd14243, %rd14241, %rd14242;
	add.s64 	%rd14244, %rd14243, %rd14240;
	add.s64 	%rd14245, %rd14244, %rd14237;
	add.s64 	%rd14246, %rd14245, %rd14149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9839,%dummy}, %rd14230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9840}, %rd14230;
	}
	shf.r.wrap.b32 	%r9841, %r9840, %r9839, 28;
	shf.r.wrap.b32 	%r9842, %r9839, %r9840, 28;
	mov.b64 	%rd14247, {%r9842, %r9841};
	shf.l.wrap.b32 	%r9843, %r9839, %r9840, 30;
	shf.l.wrap.b32 	%r9844, %r9840, %r9839, 30;
	mov.b64 	%rd14248, {%r9844, %r9843};
	xor.b64  	%rd14249, %rd14248, %rd14247;
	shf.l.wrap.b32 	%r9845, %r9839, %r9840, 25;
	shf.l.wrap.b32 	%r9846, %r9840, %r9839, 25;
	mov.b64 	%rd14250, {%r9846, %r9845};
	xor.b64  	%rd14251, %rd14249, %rd14250;
	and.b64  	%rd14252, %rd14230, %rd14203;
	xor.b64  	%rd14253, %rd14230, %rd14203;
	and.b64  	%rd14254, %rd14253, %rd14176;
	or.b64  	%rd14255, %rd14254, %rd14252;
	add.s64 	%rd14256, %rd14245, %rd14255;
	add.s64 	%rd14257, %rd14256, %rd14251;
	add.s32 	%r9847, %r13047, 11;
	mul.wide.s32 	%rd14258, %r9847, 8;
	add.s64 	%rd14259, %rd13961, %rd14258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9848,%dummy}, %rd14246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9849}, %rd14246;
	}
	shf.r.wrap.b32 	%r9850, %r9849, %r9848, 14;
	shf.r.wrap.b32 	%r9851, %r9848, %r9849, 14;
	mov.b64 	%rd14260, {%r9851, %r9850};
	shf.r.wrap.b32 	%r9852, %r9849, %r9848, 18;
	shf.r.wrap.b32 	%r9853, %r9848, %r9849, 18;
	mov.b64 	%rd14261, {%r9853, %r9852};
	xor.b64  	%rd14262, %rd14261, %rd14260;
	shf.l.wrap.b32 	%r9854, %r9848, %r9849, 23;
	shf.l.wrap.b32 	%r9855, %r9849, %r9848, 23;
	mov.b64 	%rd14263, {%r9855, %r9854};
	xor.b64  	%rd14264, %rd14262, %rd14263;
	xor.b64  	%rd14265, %rd14219, %rd14192;
	and.b64  	%rd14266, %rd14246, %rd14265;
	xor.b64  	%rd14267, %rd14266, %rd14192;
	add.s64 	%rd14268, %rd14165, %rd18900;
	ld.const.u64 	%rd14269, [%rd14259];
	add.s64 	%rd14270, %rd14268, %rd14269;
	add.s64 	%rd14271, %rd14270, %rd14267;
	add.s64 	%rd14272, %rd14271, %rd14264;
	add.s64 	%rd14273, %rd14272, %rd14176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9856,%dummy}, %rd14257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9857}, %rd14257;
	}
	shf.r.wrap.b32 	%r9858, %r9857, %r9856, 28;
	shf.r.wrap.b32 	%r9859, %r9856, %r9857, 28;
	mov.b64 	%rd14274, {%r9859, %r9858};
	shf.l.wrap.b32 	%r9860, %r9856, %r9857, 30;
	shf.l.wrap.b32 	%r9861, %r9857, %r9856, 30;
	mov.b64 	%rd14275, {%r9861, %r9860};
	xor.b64  	%rd14276, %rd14275, %rd14274;
	shf.l.wrap.b32 	%r9862, %r9856, %r9857, 25;
	shf.l.wrap.b32 	%r9863, %r9857, %r9856, 25;
	mov.b64 	%rd14277, {%r9863, %r9862};
	xor.b64  	%rd14278, %rd14276, %rd14277;
	and.b64  	%rd14279, %rd14257, %rd14230;
	xor.b64  	%rd14280, %rd14257, %rd14230;
	and.b64  	%rd14281, %rd14280, %rd14203;
	or.b64  	%rd14282, %rd14281, %rd14279;
	add.s64 	%rd14283, %rd14272, %rd14282;
	add.s64 	%rd14284, %rd14283, %rd14278;
	add.s32 	%r9864, %r13047, 12;
	mul.wide.s32 	%rd14285, %r9864, 8;
	add.s64 	%rd14286, %rd13961, %rd14285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9865,%dummy}, %rd14273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9866}, %rd14273;
	}
	shf.r.wrap.b32 	%r9867, %r9866, %r9865, 14;
	shf.r.wrap.b32 	%r9868, %r9865, %r9866, 14;
	mov.b64 	%rd14287, {%r9868, %r9867};
	shf.r.wrap.b32 	%r9869, %r9866, %r9865, 18;
	shf.r.wrap.b32 	%r9870, %r9865, %r9866, 18;
	mov.b64 	%rd14288, {%r9870, %r9869};
	xor.b64  	%rd14289, %rd14288, %rd14287;
	shf.l.wrap.b32 	%r9871, %r9865, %r9866, 23;
	shf.l.wrap.b32 	%r9872, %r9866, %r9865, 23;
	mov.b64 	%rd14290, {%r9872, %r9871};
	xor.b64  	%rd14291, %rd14289, %rd14290;
	xor.b64  	%rd14292, %rd14246, %rd14219;
	and.b64  	%rd14293, %rd14273, %rd14292;
	xor.b64  	%rd14294, %rd14293, %rd14219;
	add.s64 	%rd14295, %rd14192, %rd18899;
	ld.const.u64 	%rd14296, [%rd14286];
	add.s64 	%rd14297, %rd14295, %rd14296;
	add.s64 	%rd14298, %rd14297, %rd14294;
	add.s64 	%rd14299, %rd14298, %rd14291;
	add.s64 	%rd18864, %rd14299, %rd14203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9873,%dummy}, %rd14284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9874}, %rd14284;
	}
	shf.r.wrap.b32 	%r9875, %r9874, %r9873, 28;
	shf.r.wrap.b32 	%r9876, %r9873, %r9874, 28;
	mov.b64 	%rd14300, {%r9876, %r9875};
	shf.l.wrap.b32 	%r9877, %r9873, %r9874, 30;
	shf.l.wrap.b32 	%r9878, %r9874, %r9873, 30;
	mov.b64 	%rd14301, {%r9878, %r9877};
	xor.b64  	%rd14302, %rd14301, %rd14300;
	shf.l.wrap.b32 	%r9879, %r9873, %r9874, 25;
	shf.l.wrap.b32 	%r9880, %r9874, %r9873, 25;
	mov.b64 	%rd14303, {%r9880, %r9879};
	xor.b64  	%rd14304, %rd14302, %rd14303;
	and.b64  	%rd14305, %rd14284, %rd14257;
	xor.b64  	%rd14306, %rd14284, %rd14257;
	and.b64  	%rd14307, %rd14306, %rd14230;
	or.b64  	%rd14308, %rd14307, %rd14305;
	add.s64 	%rd14309, %rd14299, %rd14308;
	add.s64 	%rd18860, %rd14309, %rd14304;
	add.s32 	%r9881, %r13047, 13;
	mul.wide.s32 	%rd14310, %r9881, 8;
	add.s64 	%rd14311, %rd13961, %rd14310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9882,%dummy}, %rd18864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9883}, %rd18864;
	}
	shf.r.wrap.b32 	%r9884, %r9883, %r9882, 14;
	shf.r.wrap.b32 	%r9885, %r9882, %r9883, 14;
	mov.b64 	%rd14312, {%r9885, %r9884};
	shf.r.wrap.b32 	%r9886, %r9883, %r9882, 18;
	shf.r.wrap.b32 	%r9887, %r9882, %r9883, 18;
	mov.b64 	%rd14313, {%r9887, %r9886};
	xor.b64  	%rd14314, %rd14313, %rd14312;
	shf.l.wrap.b32 	%r9888, %r9882, %r9883, 23;
	shf.l.wrap.b32 	%r9889, %r9883, %r9882, 23;
	mov.b64 	%rd14315, {%r9889, %r9888};
	xor.b64  	%rd14316, %rd14314, %rd14315;
	xor.b64  	%rd14317, %rd14273, %rd14246;
	and.b64  	%rd14318, %rd18864, %rd14317;
	xor.b64  	%rd14319, %rd14318, %rd14246;
	add.s64 	%rd14320, %rd14219, %rd18898;
	ld.const.u64 	%rd14321, [%rd14311];
	add.s64 	%rd14322, %rd14320, %rd14321;
	add.s64 	%rd14323, %rd14322, %rd14319;
	add.s64 	%rd14324, %rd14323, %rd14316;
	add.s64 	%rd18863, %rd14324, %rd14230;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9890,%dummy}, %rd18860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9891}, %rd18860;
	}
	shf.r.wrap.b32 	%r9892, %r9891, %r9890, 28;
	shf.r.wrap.b32 	%r9893, %r9890, %r9891, 28;
	mov.b64 	%rd14325, {%r9893, %r9892};
	shf.l.wrap.b32 	%r9894, %r9890, %r9891, 30;
	shf.l.wrap.b32 	%r9895, %r9891, %r9890, 30;
	mov.b64 	%rd14326, {%r9895, %r9894};
	xor.b64  	%rd14327, %rd14326, %rd14325;
	shf.l.wrap.b32 	%r9896, %r9890, %r9891, 25;
	shf.l.wrap.b32 	%r9897, %r9891, %r9890, 25;
	mov.b64 	%rd14328, {%r9897, %r9896};
	xor.b64  	%rd14329, %rd14327, %rd14328;
	and.b64  	%rd14330, %rd18860, %rd14284;
	xor.b64  	%rd14331, %rd18860, %rd14284;
	and.b64  	%rd14332, %rd14331, %rd14257;
	or.b64  	%rd14333, %rd14332, %rd14330;
	add.s64 	%rd14334, %rd14324, %rd14333;
	add.s64 	%rd18859, %rd14334, %rd14329;
	add.s32 	%r9898, %r13047, 14;
	mul.wide.s32 	%rd14335, %r9898, 8;
	add.s64 	%rd14336, %rd13961, %rd14335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9899,%dummy}, %rd18863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9900}, %rd18863;
	}
	shf.r.wrap.b32 	%r9901, %r9900, %r9899, 14;
	shf.r.wrap.b32 	%r9902, %r9899, %r9900, 14;
	mov.b64 	%rd14337, {%r9902, %r9901};
	shf.r.wrap.b32 	%r9903, %r9900, %r9899, 18;
	shf.r.wrap.b32 	%r9904, %r9899, %r9900, 18;
	mov.b64 	%rd14338, {%r9904, %r9903};
	xor.b64  	%rd14339, %rd14338, %rd14337;
	shf.l.wrap.b32 	%r9905, %r9899, %r9900, 23;
	shf.l.wrap.b32 	%r9906, %r9900, %r9899, 23;
	mov.b64 	%rd14340, {%r9906, %r9905};
	xor.b64  	%rd14341, %rd14339, %rd14340;
	xor.b64  	%rd14342, %rd18864, %rd14273;
	and.b64  	%rd14343, %rd18863, %rd14342;
	xor.b64  	%rd14344, %rd14343, %rd14273;
	add.s64 	%rd14345, %rd14246, %rd18897;
	ld.const.u64 	%rd14346, [%rd14336];
	add.s64 	%rd14347, %rd14345, %rd14346;
	add.s64 	%rd14348, %rd14347, %rd14344;
	add.s64 	%rd14349, %rd14348, %rd14341;
	add.s64 	%rd18862, %rd14349, %rd14257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9907,%dummy}, %rd18859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9908}, %rd18859;
	}
	shf.r.wrap.b32 	%r9909, %r9908, %r9907, 28;
	shf.r.wrap.b32 	%r9910, %r9907, %r9908, 28;
	mov.b64 	%rd14350, {%r9910, %r9909};
	shf.l.wrap.b32 	%r9911, %r9907, %r9908, 30;
	shf.l.wrap.b32 	%r9912, %r9908, %r9907, 30;
	mov.b64 	%rd14351, {%r9912, %r9911};
	xor.b64  	%rd14352, %rd14351, %rd14350;
	shf.l.wrap.b32 	%r9913, %r9907, %r9908, 25;
	shf.l.wrap.b32 	%r9914, %r9908, %r9907, 25;
	mov.b64 	%rd14353, {%r9914, %r9913};
	xor.b64  	%rd14354, %rd14352, %rd14353;
	and.b64  	%rd14355, %rd18859, %rd18860;
	xor.b64  	%rd14356, %rd18859, %rd18860;
	and.b64  	%rd14357, %rd14356, %rd14284;
	or.b64  	%rd14358, %rd14357, %rd14355;
	add.s64 	%rd14359, %rd14349, %rd14358;
	add.s64 	%rd18858, %rd14359, %rd14354;
	add.s32 	%r9915, %r13047, 15;
	mul.wide.s32 	%rd14360, %r9915, 8;
	add.s64 	%rd14361, %rd13961, %rd14360;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9916,%dummy}, %rd18862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9917}, %rd18862;
	}
	shf.r.wrap.b32 	%r9918, %r9917, %r9916, 14;
	shf.r.wrap.b32 	%r9919, %r9916, %r9917, 14;
	mov.b64 	%rd14362, {%r9919, %r9918};
	shf.r.wrap.b32 	%r9920, %r9917, %r9916, 18;
	shf.r.wrap.b32 	%r9921, %r9916, %r9917, 18;
	mov.b64 	%rd14363, {%r9921, %r9920};
	xor.b64  	%rd14364, %rd14363, %rd14362;
	shf.l.wrap.b32 	%r9922, %r9916, %r9917, 23;
	shf.l.wrap.b32 	%r9923, %r9917, %r9916, 23;
	mov.b64 	%rd14365, {%r9923, %r9922};
	xor.b64  	%rd14366, %rd14364, %rd14365;
	xor.b64  	%rd14367, %rd18863, %rd18864;
	and.b64  	%rd14368, %rd18862, %rd14367;
	xor.b64  	%rd14369, %rd14368, %rd18864;
	add.s64 	%rd14370, %rd14273, %rd18849;
	ld.const.u64 	%rd14371, [%rd14361];
	add.s64 	%rd14372, %rd14370, %rd14371;
	add.s64 	%rd14373, %rd14372, %rd14369;
	add.s64 	%rd14374, %rd14373, %rd14366;
	add.s64 	%rd18861, %rd14374, %rd14284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9924,%dummy}, %rd18858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9925}, %rd18858;
	}
	shf.r.wrap.b32 	%r9926, %r9925, %r9924, 28;
	shf.r.wrap.b32 	%r9927, %r9924, %r9925, 28;
	mov.b64 	%rd14375, {%r9927, %r9926};
	shf.l.wrap.b32 	%r9928, %r9924, %r9925, 30;
	shf.l.wrap.b32 	%r9929, %r9925, %r9924, 30;
	mov.b64 	%rd14376, {%r9929, %r9928};
	xor.b64  	%rd14377, %rd14376, %rd14375;
	shf.l.wrap.b32 	%r9930, %r9924, %r9925, 25;
	shf.l.wrap.b32 	%r9931, %r9925, %r9924, 25;
	mov.b64 	%rd14378, {%r9931, %r9930};
	xor.b64  	%rd14379, %rd14377, %rd14378;
	and.b64  	%rd14380, %rd18858, %rd18859;
	xor.b64  	%rd14381, %rd18858, %rd18859;
	and.b64  	%rd14382, %rd14381, %rd18860;
	or.b64  	%rd14383, %rd14382, %rd14380;
	add.s64 	%rd14384, %rd14374, %rd14383;
	add.s64 	%rd18857, %rd14384, %rd14379;
	add.s32 	%r13047, %r13047, 16;
	setp.lt.s32	%p176, %r13047, 80;
	@%p176 bra 	BB0_285;

	add.s64 	%rd18880, %rd18857, %rd1034;
	st.local.u64 	[%rd1], %rd18880;
	add.s64 	%rd18879, %rd18858, %rd1035;
	st.local.u64 	[%rd1+8], %rd18879;
	add.s64 	%rd18878, %rd18859, %rd1036;
	st.local.u64 	[%rd1+16], %rd18878;
	add.s64 	%rd18877, %rd18860, %rd1033;
	st.local.u64 	[%rd1+24], %rd18877;
	add.s64 	%rd18876, %rd18861, %rd1029;
	st.local.u64 	[%rd1+32], %rd18876;
	add.s64 	%rd18875, %rd18862, %rd1031;
	st.local.u64 	[%rd1+40], %rd18875;
	add.s64 	%rd18874, %rd18863, %rd1030;
	st.local.u64 	[%rd1+48], %rd18874;
	add.s64 	%rd18873, %rd18864, %rd1032;
	st.local.u64 	[%rd1+56], %rd18873;
	mov.u64 	%rd18897, 0;
	st.local.u64 	[%rd1+64], %rd18897;
	st.local.u64 	[%rd1+72], %rd18897;
	st.local.u64 	[%rd1+80], %rd18897;
	st.local.u64 	[%rd1+88], %rd18897;
	st.local.u64 	[%rd1+96], %rd18897;
	st.local.u64 	[%rd1+104], %rd18897;
	st.local.u64 	[%rd1+112], %rd18897;
	st.local.u64 	[%rd1+120], %rd18897;
	st.local.u64 	[%rd1+128], %rd18897;
	st.local.u64 	[%rd1+136], %rd18897;
	st.local.u64 	[%rd1+144], %rd18897;
	st.local.u64 	[%rd1+152], %rd18897;
	st.local.u64 	[%rd1+160], %rd18897;
	st.local.u64 	[%rd1+168], %rd18897;
	st.local.u64 	[%rd1+176], %rd18897;
	st.local.u64 	[%rd1+184], %rd18897;
	mov.u64 	%rd18898, %rd18897;
	mov.u64 	%rd18899, %rd18897;
	mov.u64 	%rd18900, %rd18897;
	mov.u64 	%rd18901, %rd18897;
	mov.u64 	%rd18902, %rd18897;
	mov.u64 	%rd18903, %rd18897;
	mov.u64 	%rd18919, %rd18897;
	mov.u64 	%rd18918, %rd18897;
	mov.u64 	%rd18917, %rd18897;
	mov.u64 	%rd18916, %rd18897;
	mov.u64 	%rd18915, %rd18897;
	mov.u64 	%rd18914, %rd18897;
	mov.u64 	%rd18913, %rd18897;
	mov.u64 	%rd18912, %rd18897;
	bra.uni 	BB0_287;

BB0_283:
	ld.local.u64 	%rd18880, [%rd1];
	ld.local.u64 	%rd18879, [%rd1+8];
	ld.local.u64 	%rd18878, [%rd1+16];
	ld.local.u64 	%rd18877, [%rd1+24];
	ld.local.u64 	%rd18876, [%rd1+32];
	ld.local.u64 	%rd18875, [%rd1+40];
	ld.local.u64 	%rd18874, [%rd1+48];
	ld.local.u64 	%rd18873, [%rd1+56];

BB0_287:
	ld.local.u32 	%r9933, [%rd1+192];
	shl.b32 	%r9934, %r9933, 3;
	cvt.s64.s32	%rd18896, %r9934;
	st.local.u64 	[%rd1+184], %rd18896;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9935,%dummy}, %rd18876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9936}, %rd18876;
	}
	shf.r.wrap.b32 	%r9937, %r9936, %r9935, 18;
	shf.r.wrap.b32 	%r9938, %r9935, %r9936, 18;
	mov.b64 	%rd14400, {%r9938, %r9937};
	shf.r.wrap.b32 	%r9939, %r9936, %r9935, 14;
	shf.r.wrap.b32 	%r9940, %r9935, %r9936, 14;
	mov.b64 	%rd14401, {%r9940, %r9939};
	xor.b64  	%rd14402, %rd14400, %rd14401;
	shf.l.wrap.b32 	%r9941, %r9935, %r9936, 23;
	shf.l.wrap.b32 	%r9942, %r9936, %r9935, 23;
	mov.b64 	%rd14403, {%r9942, %r9941};
	xor.b64  	%rd14404, %rd14402, %rd14403;
	xor.b64  	%rd14405, %rd18875, %rd18874;
	and.b64  	%rd14406, %rd14405, %rd18876;
	xor.b64  	%rd14407, %rd14406, %rd18874;
	add.s64 	%rd14408, %rd18873, %rd18610;
	add.s64 	%rd14409, %rd14408, %rd14407;
	add.s64 	%rd14410, %rd14409, %rd18912;
	add.s64 	%rd14411, %rd14410, %rd14404;
	add.s64 	%rd14412, %rd14411, %rd18877;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9943}, %rd18880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9944,%dummy}, %rd18880;
	}
	shf.l.wrap.b32 	%r9945, %r9944, %r9943, 30;
	shf.l.wrap.b32 	%r9946, %r9943, %r9944, 30;
	mov.b64 	%rd14413, {%r9946, %r9945};
	shf.r.wrap.b32 	%r9947, %r9943, %r9944, 28;
	shf.r.wrap.b32 	%r9948, %r9944, %r9943, 28;
	mov.b64 	%rd14414, {%r9948, %r9947};
	xor.b64  	%rd14415, %rd14413, %rd14414;
	shf.l.wrap.b32 	%r9949, %r9944, %r9943, 25;
	shf.l.wrap.b32 	%r9950, %r9943, %r9944, 25;
	mov.b64 	%rd14416, {%r9950, %r9949};
	xor.b64  	%rd14417, %rd14415, %rd14416;
	xor.b64  	%rd14418, %rd18880, %rd18879;
	and.b64  	%rd14419, %rd14418, %rd18878;
	and.b64  	%rd14420, %rd18880, %rd18879;
	or.b64  	%rd14421, %rd14419, %rd14420;
	add.s64 	%rd14422, %rd14411, %rd14421;
	add.s64 	%rd14423, %rd14422, %rd14417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9951,%dummy}, %rd14412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9952}, %rd14412;
	}
	shf.r.wrap.b32 	%r9953, %r9952, %r9951, 14;
	shf.r.wrap.b32 	%r9954, %r9951, %r9952, 14;
	mov.b64 	%rd14424, {%r9954, %r9953};
	shf.r.wrap.b32 	%r9955, %r9952, %r9951, 18;
	shf.r.wrap.b32 	%r9956, %r9951, %r9952, 18;
	mov.b64 	%rd14425, {%r9956, %r9955};
	xor.b64  	%rd14426, %rd14425, %rd14424;
	shf.l.wrap.b32 	%r9957, %r9951, %r9952, 23;
	shf.l.wrap.b32 	%r9958, %r9952, %r9951, 23;
	mov.b64 	%rd14427, {%r9958, %r9957};
	xor.b64  	%rd14428, %rd14426, %rd14427;
	xor.b64  	%rd14429, %rd18876, %rd18875;
	and.b64  	%rd14430, %rd14412, %rd14429;
	xor.b64  	%rd14431, %rd14430, %rd18875;
	add.s64 	%rd14432, %rd18874, %rd18609;
	add.s64 	%rd14433, %rd14432, %rd18913;
	add.s64 	%rd14434, %rd14433, %rd14431;
	add.s64 	%rd14435, %rd14434, %rd14428;
	add.s64 	%rd14436, %rd14435, %rd18878;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9959,%dummy}, %rd14423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9960}, %rd14423;
	}
	shf.r.wrap.b32 	%r9961, %r9960, %r9959, 28;
	shf.r.wrap.b32 	%r9962, %r9959, %r9960, 28;
	mov.b64 	%rd14437, {%r9962, %r9961};
	shf.l.wrap.b32 	%r9963, %r9959, %r9960, 30;
	shf.l.wrap.b32 	%r9964, %r9960, %r9959, 30;
	mov.b64 	%rd14438, {%r9964, %r9963};
	xor.b64  	%rd14439, %rd14438, %rd14437;
	shf.l.wrap.b32 	%r9965, %r9959, %r9960, 25;
	shf.l.wrap.b32 	%r9966, %r9960, %r9959, 25;
	mov.b64 	%rd14440, {%r9966, %r9965};
	xor.b64  	%rd14441, %rd14439, %rd14440;
	and.b64  	%rd14442, %rd14423, %rd18880;
	xor.b64  	%rd14443, %rd14423, %rd18880;
	and.b64  	%rd14444, %rd14443, %rd18879;
	or.b64  	%rd14445, %rd14444, %rd14442;
	add.s64 	%rd14446, %rd14435, %rd14445;
	add.s64 	%rd14447, %rd14446, %rd14441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9967,%dummy}, %rd14436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9968}, %rd14436;
	}
	shf.r.wrap.b32 	%r9969, %r9968, %r9967, 14;
	shf.r.wrap.b32 	%r9970, %r9967, %r9968, 14;
	mov.b64 	%rd14448, {%r9970, %r9969};
	shf.r.wrap.b32 	%r9971, %r9968, %r9967, 18;
	shf.r.wrap.b32 	%r9972, %r9967, %r9968, 18;
	mov.b64 	%rd14449, {%r9972, %r9971};
	xor.b64  	%rd14450, %rd14449, %rd14448;
	shf.l.wrap.b32 	%r9973, %r9967, %r9968, 23;
	shf.l.wrap.b32 	%r9974, %r9968, %r9967, 23;
	mov.b64 	%rd14451, {%r9974, %r9973};
	xor.b64  	%rd14452, %rd14450, %rd14451;
	xor.b64  	%rd14453, %rd14412, %rd18876;
	and.b64  	%rd14454, %rd14436, %rd14453;
	xor.b64  	%rd14455, %rd14454, %rd18876;
	add.s64 	%rd14456, %rd18875, %rd18608;
	add.s64 	%rd14457, %rd14456, %rd18914;
	add.s64 	%rd14458, %rd14457, %rd14455;
	add.s64 	%rd14459, %rd14458, %rd14452;
	add.s64 	%rd14460, %rd14459, %rd18879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9975,%dummy}, %rd14447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9976}, %rd14447;
	}
	shf.r.wrap.b32 	%r9977, %r9976, %r9975, 28;
	shf.r.wrap.b32 	%r9978, %r9975, %r9976, 28;
	mov.b64 	%rd14461, {%r9978, %r9977};
	shf.l.wrap.b32 	%r9979, %r9975, %r9976, 30;
	shf.l.wrap.b32 	%r9980, %r9976, %r9975, 30;
	mov.b64 	%rd14462, {%r9980, %r9979};
	xor.b64  	%rd14463, %rd14462, %rd14461;
	shf.l.wrap.b32 	%r9981, %r9975, %r9976, 25;
	shf.l.wrap.b32 	%r9982, %r9976, %r9975, 25;
	mov.b64 	%rd14464, {%r9982, %r9981};
	xor.b64  	%rd14465, %rd14463, %rd14464;
	and.b64  	%rd14466, %rd14447, %rd14423;
	xor.b64  	%rd14467, %rd14447, %rd14423;
	and.b64  	%rd14468, %rd14467, %rd18880;
	or.b64  	%rd14469, %rd14468, %rd14466;
	add.s64 	%rd14470, %rd14459, %rd14469;
	add.s64 	%rd14471, %rd14470, %rd14465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9983,%dummy}, %rd14460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9984}, %rd14460;
	}
	shf.r.wrap.b32 	%r9985, %r9984, %r9983, 14;
	shf.r.wrap.b32 	%r9986, %r9983, %r9984, 14;
	mov.b64 	%rd14472, {%r9986, %r9985};
	shf.r.wrap.b32 	%r9987, %r9984, %r9983, 18;
	shf.r.wrap.b32 	%r9988, %r9983, %r9984, 18;
	mov.b64 	%rd14473, {%r9988, %r9987};
	xor.b64  	%rd14474, %rd14473, %rd14472;
	shf.l.wrap.b32 	%r9989, %r9983, %r9984, 23;
	shf.l.wrap.b32 	%r9990, %r9984, %r9983, 23;
	mov.b64 	%rd14475, {%r9990, %r9989};
	xor.b64  	%rd14476, %rd14474, %rd14475;
	xor.b64  	%rd14477, %rd14436, %rd14412;
	and.b64  	%rd14478, %rd14460, %rd14477;
	xor.b64  	%rd14479, %rd14478, %rd14412;
	add.s64 	%rd14480, %rd18876, %rd18607;
	add.s64 	%rd14481, %rd14480, %rd18915;
	add.s64 	%rd14482, %rd14481, %rd14479;
	add.s64 	%rd14483, %rd14482, %rd14476;
	add.s64 	%rd14484, %rd14483, %rd18880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9991,%dummy}, %rd14471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9992}, %rd14471;
	}
	shf.r.wrap.b32 	%r9993, %r9992, %r9991, 28;
	shf.r.wrap.b32 	%r9994, %r9991, %r9992, 28;
	mov.b64 	%rd14485, {%r9994, %r9993};
	shf.l.wrap.b32 	%r9995, %r9991, %r9992, 30;
	shf.l.wrap.b32 	%r9996, %r9992, %r9991, 30;
	mov.b64 	%rd14486, {%r9996, %r9995};
	xor.b64  	%rd14487, %rd14486, %rd14485;
	shf.l.wrap.b32 	%r9997, %r9991, %r9992, 25;
	shf.l.wrap.b32 	%r9998, %r9992, %r9991, 25;
	mov.b64 	%rd14488, {%r9998, %r9997};
	xor.b64  	%rd14489, %rd14487, %rd14488;
	and.b64  	%rd14490, %rd14471, %rd14447;
	xor.b64  	%rd14491, %rd14471, %rd14447;
	and.b64  	%rd14492, %rd14491, %rd14423;
	or.b64  	%rd14493, %rd14492, %rd14490;
	add.s64 	%rd14494, %rd14483, %rd14493;
	add.s64 	%rd14495, %rd14494, %rd14489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9999,%dummy}, %rd14484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10000}, %rd14484;
	}
	shf.r.wrap.b32 	%r10001, %r10000, %r9999, 14;
	shf.r.wrap.b32 	%r10002, %r9999, %r10000, 14;
	mov.b64 	%rd14496, {%r10002, %r10001};
	shf.r.wrap.b32 	%r10003, %r10000, %r9999, 18;
	shf.r.wrap.b32 	%r10004, %r9999, %r10000, 18;
	mov.b64 	%rd14497, {%r10004, %r10003};
	xor.b64  	%rd14498, %rd14497, %rd14496;
	shf.l.wrap.b32 	%r10005, %r9999, %r10000, 23;
	shf.l.wrap.b32 	%r10006, %r10000, %r9999, 23;
	mov.b64 	%rd14499, {%r10006, %r10005};
	xor.b64  	%rd14500, %rd14498, %rd14499;
	xor.b64  	%rd14501, %rd14460, %rd14436;
	and.b64  	%rd14502, %rd14484, %rd14501;
	xor.b64  	%rd14503, %rd14502, %rd14436;
	add.s64 	%rd14504, %rd18916, %rd18606;
	add.s64 	%rd14505, %rd14504, %rd14412;
	add.s64 	%rd14506, %rd14505, %rd14503;
	add.s64 	%rd14507, %rd14506, %rd14500;
	add.s64 	%rd14508, %rd14507, %rd14423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10007,%dummy}, %rd14495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10008}, %rd14495;
	}
	shf.r.wrap.b32 	%r10009, %r10008, %r10007, 28;
	shf.r.wrap.b32 	%r10010, %r10007, %r10008, 28;
	mov.b64 	%rd14509, {%r10010, %r10009};
	shf.l.wrap.b32 	%r10011, %r10007, %r10008, 30;
	shf.l.wrap.b32 	%r10012, %r10008, %r10007, 30;
	mov.b64 	%rd14510, {%r10012, %r10011};
	xor.b64  	%rd14511, %rd14510, %rd14509;
	shf.l.wrap.b32 	%r10013, %r10007, %r10008, 25;
	shf.l.wrap.b32 	%r10014, %r10008, %r10007, 25;
	mov.b64 	%rd14512, {%r10014, %r10013};
	xor.b64  	%rd14513, %rd14511, %rd14512;
	and.b64  	%rd14514, %rd14495, %rd14471;
	xor.b64  	%rd14515, %rd14495, %rd14471;
	and.b64  	%rd14516, %rd14515, %rd14447;
	or.b64  	%rd14517, %rd14516, %rd14514;
	add.s64 	%rd14518, %rd14507, %rd14517;
	add.s64 	%rd14519, %rd14518, %rd14513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10015,%dummy}, %rd14508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10016}, %rd14508;
	}
	shf.r.wrap.b32 	%r10017, %r10016, %r10015, 14;
	shf.r.wrap.b32 	%r10018, %r10015, %r10016, 14;
	mov.b64 	%rd14520, {%r10018, %r10017};
	shf.r.wrap.b32 	%r10019, %r10016, %r10015, 18;
	shf.r.wrap.b32 	%r10020, %r10015, %r10016, 18;
	mov.b64 	%rd14521, {%r10020, %r10019};
	xor.b64  	%rd14522, %rd14521, %rd14520;
	shf.l.wrap.b32 	%r10021, %r10015, %r10016, 23;
	shf.l.wrap.b32 	%r10022, %r10016, %r10015, 23;
	mov.b64 	%rd14523, {%r10022, %r10021};
	xor.b64  	%rd14524, %rd14522, %rd14523;
	xor.b64  	%rd14525, %rd14484, %rd14460;
	and.b64  	%rd14526, %rd14508, %rd14525;
	xor.b64  	%rd14527, %rd14526, %rd14460;
	add.s64 	%rd14528, %rd18917, %rd18605;
	add.s64 	%rd14529, %rd14528, %rd14436;
	add.s64 	%rd14530, %rd14529, %rd14527;
	add.s64 	%rd14531, %rd14530, %rd14524;
	add.s64 	%rd14532, %rd14531, %rd14447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10023,%dummy}, %rd14519;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10024}, %rd14519;
	}
	shf.r.wrap.b32 	%r10025, %r10024, %r10023, 28;
	shf.r.wrap.b32 	%r10026, %r10023, %r10024, 28;
	mov.b64 	%rd14533, {%r10026, %r10025};
	shf.l.wrap.b32 	%r10027, %r10023, %r10024, 30;
	shf.l.wrap.b32 	%r10028, %r10024, %r10023, 30;
	mov.b64 	%rd14534, {%r10028, %r10027};
	xor.b64  	%rd14535, %rd14534, %rd14533;
	shf.l.wrap.b32 	%r10029, %r10023, %r10024, 25;
	shf.l.wrap.b32 	%r10030, %r10024, %r10023, 25;
	mov.b64 	%rd14536, {%r10030, %r10029};
	xor.b64  	%rd14537, %rd14535, %rd14536;
	and.b64  	%rd14538, %rd14519, %rd14495;
	xor.b64  	%rd14539, %rd14519, %rd14495;
	and.b64  	%rd14540, %rd14539, %rd14471;
	or.b64  	%rd14541, %rd14540, %rd14538;
	add.s64 	%rd14542, %rd14531, %rd14541;
	add.s64 	%rd14543, %rd14542, %rd14537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10031,%dummy}, %rd14532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10032}, %rd14532;
	}
	shf.r.wrap.b32 	%r10033, %r10032, %r10031, 14;
	shf.r.wrap.b32 	%r10034, %r10031, %r10032, 14;
	mov.b64 	%rd14544, {%r10034, %r10033};
	shf.r.wrap.b32 	%r10035, %r10032, %r10031, 18;
	shf.r.wrap.b32 	%r10036, %r10031, %r10032, 18;
	mov.b64 	%rd14545, {%r10036, %r10035};
	xor.b64  	%rd14546, %rd14545, %rd14544;
	shf.l.wrap.b32 	%r10037, %r10031, %r10032, 23;
	shf.l.wrap.b32 	%r10038, %r10032, %r10031, 23;
	mov.b64 	%rd14547, {%r10038, %r10037};
	xor.b64  	%rd14548, %rd14546, %rd14547;
	xor.b64  	%rd14549, %rd14508, %rd14484;
	and.b64  	%rd14550, %rd14532, %rd14549;
	xor.b64  	%rd14551, %rd14550, %rd14484;
	add.s64 	%rd14552, %rd18918, %rd18604;
	add.s64 	%rd14553, %rd14552, %rd14460;
	add.s64 	%rd14554, %rd14553, %rd14551;
	add.s64 	%rd14555, %rd14554, %rd14548;
	add.s64 	%rd14556, %rd14555, %rd14471;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10039,%dummy}, %rd14543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10040}, %rd14543;
	}
	shf.r.wrap.b32 	%r10041, %r10040, %r10039, 28;
	shf.r.wrap.b32 	%r10042, %r10039, %r10040, 28;
	mov.b64 	%rd14557, {%r10042, %r10041};
	shf.l.wrap.b32 	%r10043, %r10039, %r10040, 30;
	shf.l.wrap.b32 	%r10044, %r10040, %r10039, 30;
	mov.b64 	%rd14558, {%r10044, %r10043};
	xor.b64  	%rd14559, %rd14558, %rd14557;
	shf.l.wrap.b32 	%r10045, %r10039, %r10040, 25;
	shf.l.wrap.b32 	%r10046, %r10040, %r10039, 25;
	mov.b64 	%rd14560, {%r10046, %r10045};
	xor.b64  	%rd14561, %rd14559, %rd14560;
	and.b64  	%rd14562, %rd14543, %rd14519;
	xor.b64  	%rd14563, %rd14543, %rd14519;
	and.b64  	%rd14564, %rd14563, %rd14495;
	or.b64  	%rd14565, %rd14564, %rd14562;
	add.s64 	%rd14566, %rd14555, %rd14565;
	add.s64 	%rd14567, %rd14566, %rd14561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10047,%dummy}, %rd14556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10048}, %rd14556;
	}
	shf.r.wrap.b32 	%r10049, %r10048, %r10047, 14;
	shf.r.wrap.b32 	%r10050, %r10047, %r10048, 14;
	mov.b64 	%rd14568, {%r10050, %r10049};
	shf.r.wrap.b32 	%r10051, %r10048, %r10047, 18;
	shf.r.wrap.b32 	%r10052, %r10047, %r10048, 18;
	mov.b64 	%rd14569, {%r10052, %r10051};
	xor.b64  	%rd14570, %rd14569, %rd14568;
	shf.l.wrap.b32 	%r10053, %r10047, %r10048, 23;
	shf.l.wrap.b32 	%r10054, %r10048, %r10047, 23;
	mov.b64 	%rd14571, {%r10054, %r10053};
	xor.b64  	%rd14572, %rd14570, %rd14571;
	xor.b64  	%rd14573, %rd14532, %rd14508;
	and.b64  	%rd14574, %rd14556, %rd14573;
	xor.b64  	%rd14575, %rd14574, %rd14508;
	add.s64 	%rd14576, %rd18919, %rd18603;
	add.s64 	%rd14577, %rd14576, %rd14484;
	add.s64 	%rd14578, %rd14577, %rd14575;
	add.s64 	%rd14579, %rd14578, %rd14572;
	add.s64 	%rd14580, %rd14579, %rd14495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10055,%dummy}, %rd14567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10056}, %rd14567;
	}
	shf.r.wrap.b32 	%r10057, %r10056, %r10055, 28;
	shf.r.wrap.b32 	%r10058, %r10055, %r10056, 28;
	mov.b64 	%rd14581, {%r10058, %r10057};
	shf.l.wrap.b32 	%r10059, %r10055, %r10056, 30;
	shf.l.wrap.b32 	%r10060, %r10056, %r10055, 30;
	mov.b64 	%rd14582, {%r10060, %r10059};
	xor.b64  	%rd14583, %rd14582, %rd14581;
	shf.l.wrap.b32 	%r10061, %r10055, %r10056, 25;
	shf.l.wrap.b32 	%r10062, %r10056, %r10055, 25;
	mov.b64 	%rd14584, {%r10062, %r10061};
	xor.b64  	%rd14585, %rd14583, %rd14584;
	and.b64  	%rd14586, %rd14567, %rd14543;
	xor.b64  	%rd14587, %rd14567, %rd14543;
	and.b64  	%rd14588, %rd14587, %rd14519;
	or.b64  	%rd14589, %rd14588, %rd14586;
	add.s64 	%rd14590, %rd14579, %rd14589;
	add.s64 	%rd14591, %rd14590, %rd14585;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10063,%dummy}, %rd14580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10064}, %rd14580;
	}
	shf.r.wrap.b32 	%r10065, %r10064, %r10063, 14;
	shf.r.wrap.b32 	%r10066, %r10063, %r10064, 14;
	mov.b64 	%rd14592, {%r10066, %r10065};
	shf.r.wrap.b32 	%r10067, %r10064, %r10063, 18;
	shf.r.wrap.b32 	%r10068, %r10063, %r10064, 18;
	mov.b64 	%rd14593, {%r10068, %r10067};
	xor.b64  	%rd14594, %rd14593, %rd14592;
	shf.l.wrap.b32 	%r10069, %r10063, %r10064, 23;
	shf.l.wrap.b32 	%r10070, %r10064, %r10063, 23;
	mov.b64 	%rd14595, {%r10070, %r10069};
	xor.b64  	%rd14596, %rd14594, %rd14595;
	xor.b64  	%rd14597, %rd14556, %rd14532;
	and.b64  	%rd14598, %rd14580, %rd14597;
	xor.b64  	%rd14599, %rd14598, %rd14532;
	add.s64 	%rd14600, %rd18903, %rd18602;
	add.s64 	%rd14601, %rd14600, %rd14508;
	add.s64 	%rd14602, %rd14601, %rd14599;
	add.s64 	%rd14603, %rd14602, %rd14596;
	add.s64 	%rd14604, %rd14603, %rd14519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10071,%dummy}, %rd14591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10072}, %rd14591;
	}
	shf.r.wrap.b32 	%r10073, %r10072, %r10071, 28;
	shf.r.wrap.b32 	%r10074, %r10071, %r10072, 28;
	mov.b64 	%rd14605, {%r10074, %r10073};
	shf.l.wrap.b32 	%r10075, %r10071, %r10072, 30;
	shf.l.wrap.b32 	%r10076, %r10072, %r10071, 30;
	mov.b64 	%rd14606, {%r10076, %r10075};
	xor.b64  	%rd14607, %rd14606, %rd14605;
	shf.l.wrap.b32 	%r10077, %r10071, %r10072, 25;
	shf.l.wrap.b32 	%r10078, %r10072, %r10071, 25;
	mov.b64 	%rd14608, {%r10078, %r10077};
	xor.b64  	%rd14609, %rd14607, %rd14608;
	and.b64  	%rd14610, %rd14591, %rd14567;
	xor.b64  	%rd14611, %rd14591, %rd14567;
	and.b64  	%rd14612, %rd14611, %rd14543;
	or.b64  	%rd14613, %rd14612, %rd14610;
	add.s64 	%rd14614, %rd14603, %rd14613;
	add.s64 	%rd14615, %rd14614, %rd14609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10079,%dummy}, %rd14604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10080}, %rd14604;
	}
	shf.r.wrap.b32 	%r10081, %r10080, %r10079, 14;
	shf.r.wrap.b32 	%r10082, %r10079, %r10080, 14;
	mov.b64 	%rd14616, {%r10082, %r10081};
	shf.r.wrap.b32 	%r10083, %r10080, %r10079, 18;
	shf.r.wrap.b32 	%r10084, %r10079, %r10080, 18;
	mov.b64 	%rd14617, {%r10084, %r10083};
	xor.b64  	%rd14618, %rd14617, %rd14616;
	shf.l.wrap.b32 	%r10085, %r10079, %r10080, 23;
	shf.l.wrap.b32 	%r10086, %r10080, %r10079, 23;
	mov.b64 	%rd14619, {%r10086, %r10085};
	xor.b64  	%rd14620, %rd14618, %rd14619;
	xor.b64  	%rd14621, %rd14580, %rd14556;
	and.b64  	%rd14622, %rd14604, %rd14621;
	xor.b64  	%rd14623, %rd14622, %rd14556;
	add.s64 	%rd14624, %rd18902, %rd18601;
	add.s64 	%rd14625, %rd14624, %rd14532;
	add.s64 	%rd14626, %rd14625, %rd14623;
	add.s64 	%rd14627, %rd14626, %rd14620;
	add.s64 	%rd14628, %rd14627, %rd14543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10087,%dummy}, %rd14615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10088}, %rd14615;
	}
	shf.r.wrap.b32 	%r10089, %r10088, %r10087, 28;
	shf.r.wrap.b32 	%r10090, %r10087, %r10088, 28;
	mov.b64 	%rd14629, {%r10090, %r10089};
	shf.l.wrap.b32 	%r10091, %r10087, %r10088, 30;
	shf.l.wrap.b32 	%r10092, %r10088, %r10087, 30;
	mov.b64 	%rd14630, {%r10092, %r10091};
	xor.b64  	%rd14631, %rd14630, %rd14629;
	shf.l.wrap.b32 	%r10093, %r10087, %r10088, 25;
	shf.l.wrap.b32 	%r10094, %r10088, %r10087, 25;
	mov.b64 	%rd14632, {%r10094, %r10093};
	xor.b64  	%rd14633, %rd14631, %rd14632;
	and.b64  	%rd14634, %rd14615, %rd14591;
	xor.b64  	%rd14635, %rd14615, %rd14591;
	and.b64  	%rd14636, %rd14635, %rd14567;
	or.b64  	%rd14637, %rd14636, %rd14634;
	add.s64 	%rd14638, %rd14627, %rd14637;
	add.s64 	%rd14639, %rd14638, %rd14633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10095,%dummy}, %rd14628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10096}, %rd14628;
	}
	shf.r.wrap.b32 	%r10097, %r10096, %r10095, 14;
	shf.r.wrap.b32 	%r10098, %r10095, %r10096, 14;
	mov.b64 	%rd14640, {%r10098, %r10097};
	shf.r.wrap.b32 	%r10099, %r10096, %r10095, 18;
	shf.r.wrap.b32 	%r10100, %r10095, %r10096, 18;
	mov.b64 	%rd14641, {%r10100, %r10099};
	xor.b64  	%rd14642, %rd14641, %rd14640;
	shf.l.wrap.b32 	%r10101, %r10095, %r10096, 23;
	shf.l.wrap.b32 	%r10102, %r10096, %r10095, 23;
	mov.b64 	%rd14643, {%r10102, %r10101};
	xor.b64  	%rd14644, %rd14642, %rd14643;
	xor.b64  	%rd14645, %rd14604, %rd14580;
	and.b64  	%rd14646, %rd14628, %rd14645;
	xor.b64  	%rd14647, %rd14646, %rd14580;
	add.s64 	%rd14648, %rd18901, %rd18600;
	add.s64 	%rd14649, %rd14648, %rd14556;
	add.s64 	%rd14650, %rd14649, %rd14647;
	add.s64 	%rd14651, %rd14650, %rd14644;
	add.s64 	%rd14652, %rd14651, %rd14567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10103,%dummy}, %rd14639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10104}, %rd14639;
	}
	shf.r.wrap.b32 	%r10105, %r10104, %r10103, 28;
	shf.r.wrap.b32 	%r10106, %r10103, %r10104, 28;
	mov.b64 	%rd14653, {%r10106, %r10105};
	shf.l.wrap.b32 	%r10107, %r10103, %r10104, 30;
	shf.l.wrap.b32 	%r10108, %r10104, %r10103, 30;
	mov.b64 	%rd14654, {%r10108, %r10107};
	xor.b64  	%rd14655, %rd14654, %rd14653;
	shf.l.wrap.b32 	%r10109, %r10103, %r10104, 25;
	shf.l.wrap.b32 	%r10110, %r10104, %r10103, 25;
	mov.b64 	%rd14656, {%r10110, %r10109};
	xor.b64  	%rd14657, %rd14655, %rd14656;
	and.b64  	%rd14658, %rd14639, %rd14615;
	xor.b64  	%rd14659, %rd14639, %rd14615;
	and.b64  	%rd14660, %rd14659, %rd14591;
	or.b64  	%rd14661, %rd14660, %rd14658;
	add.s64 	%rd14662, %rd14651, %rd14661;
	add.s64 	%rd14663, %rd14662, %rd14657;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10111,%dummy}, %rd14652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10112}, %rd14652;
	}
	shf.r.wrap.b32 	%r10113, %r10112, %r10111, 14;
	shf.r.wrap.b32 	%r10114, %r10111, %r10112, 14;
	mov.b64 	%rd14664, {%r10114, %r10113};
	shf.r.wrap.b32 	%r10115, %r10112, %r10111, 18;
	shf.r.wrap.b32 	%r10116, %r10111, %r10112, 18;
	mov.b64 	%rd14665, {%r10116, %r10115};
	xor.b64  	%rd14666, %rd14665, %rd14664;
	shf.l.wrap.b32 	%r10117, %r10111, %r10112, 23;
	shf.l.wrap.b32 	%r10118, %r10112, %r10111, 23;
	mov.b64 	%rd14667, {%r10118, %r10117};
	xor.b64  	%rd14668, %rd14666, %rd14667;
	xor.b64  	%rd14669, %rd14628, %rd14604;
	and.b64  	%rd14670, %rd14652, %rd14669;
	xor.b64  	%rd14671, %rd14670, %rd14604;
	add.s64 	%rd14672, %rd18900, %rd18599;
	add.s64 	%rd14673, %rd14672, %rd14580;
	add.s64 	%rd14674, %rd14673, %rd14671;
	add.s64 	%rd14675, %rd14674, %rd14668;
	add.s64 	%rd14676, %rd14675, %rd14591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10119,%dummy}, %rd14663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10120}, %rd14663;
	}
	shf.r.wrap.b32 	%r10121, %r10120, %r10119, 28;
	shf.r.wrap.b32 	%r10122, %r10119, %r10120, 28;
	mov.b64 	%rd14677, {%r10122, %r10121};
	shf.l.wrap.b32 	%r10123, %r10119, %r10120, 30;
	shf.l.wrap.b32 	%r10124, %r10120, %r10119, 30;
	mov.b64 	%rd14678, {%r10124, %r10123};
	xor.b64  	%rd14679, %rd14678, %rd14677;
	shf.l.wrap.b32 	%r10125, %r10119, %r10120, 25;
	shf.l.wrap.b32 	%r10126, %r10120, %r10119, 25;
	mov.b64 	%rd14680, {%r10126, %r10125};
	xor.b64  	%rd14681, %rd14679, %rd14680;
	and.b64  	%rd14682, %rd14663, %rd14639;
	xor.b64  	%rd14683, %rd14663, %rd14639;
	and.b64  	%rd14684, %rd14683, %rd14615;
	or.b64  	%rd14685, %rd14684, %rd14682;
	add.s64 	%rd14686, %rd14675, %rd14685;
	add.s64 	%rd14687, %rd14686, %rd14681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10127,%dummy}, %rd14676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10128}, %rd14676;
	}
	shf.r.wrap.b32 	%r10129, %r10128, %r10127, 14;
	shf.r.wrap.b32 	%r10130, %r10127, %r10128, 14;
	mov.b64 	%rd14688, {%r10130, %r10129};
	shf.r.wrap.b32 	%r10131, %r10128, %r10127, 18;
	shf.r.wrap.b32 	%r10132, %r10127, %r10128, 18;
	mov.b64 	%rd14689, {%r10132, %r10131};
	xor.b64  	%rd14690, %rd14689, %rd14688;
	shf.l.wrap.b32 	%r10133, %r10127, %r10128, 23;
	shf.l.wrap.b32 	%r10134, %r10128, %r10127, 23;
	mov.b64 	%rd14691, {%r10134, %r10133};
	xor.b64  	%rd14692, %rd14690, %rd14691;
	xor.b64  	%rd14693, %rd14652, %rd14628;
	and.b64  	%rd14694, %rd14676, %rd14693;
	xor.b64  	%rd14695, %rd14694, %rd14628;
	add.s64 	%rd14696, %rd18899, %rd18598;
	add.s64 	%rd14697, %rd14696, %rd14604;
	add.s64 	%rd14698, %rd14697, %rd14695;
	add.s64 	%rd14699, %rd14698, %rd14692;
	add.s64 	%rd18911, %rd14699, %rd14615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10135,%dummy}, %rd14687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10136}, %rd14687;
	}
	shf.r.wrap.b32 	%r10137, %r10136, %r10135, 28;
	shf.r.wrap.b32 	%r10138, %r10135, %r10136, 28;
	mov.b64 	%rd14700, {%r10138, %r10137};
	shf.l.wrap.b32 	%r10139, %r10135, %r10136, 30;
	shf.l.wrap.b32 	%r10140, %r10136, %r10135, 30;
	mov.b64 	%rd14701, {%r10140, %r10139};
	xor.b64  	%rd14702, %rd14701, %rd14700;
	shf.l.wrap.b32 	%r10141, %r10135, %r10136, 25;
	shf.l.wrap.b32 	%r10142, %r10136, %r10135, 25;
	mov.b64 	%rd14703, {%r10142, %r10141};
	xor.b64  	%rd14704, %rd14702, %rd14703;
	and.b64  	%rd14705, %rd14687, %rd14663;
	xor.b64  	%rd14706, %rd14687, %rd14663;
	and.b64  	%rd14707, %rd14706, %rd14639;
	or.b64  	%rd14708, %rd14707, %rd14705;
	add.s64 	%rd14709, %rd14699, %rd14708;
	add.s64 	%rd18907, %rd14709, %rd14704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10143,%dummy}, %rd18911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10144}, %rd18911;
	}
	shf.r.wrap.b32 	%r10145, %r10144, %r10143, 14;
	shf.r.wrap.b32 	%r10146, %r10143, %r10144, 14;
	mov.b64 	%rd14710, {%r10146, %r10145};
	shf.r.wrap.b32 	%r10147, %r10144, %r10143, 18;
	shf.r.wrap.b32 	%r10148, %r10143, %r10144, 18;
	mov.b64 	%rd14711, {%r10148, %r10147};
	xor.b64  	%rd14712, %rd14711, %rd14710;
	shf.l.wrap.b32 	%r10149, %r10143, %r10144, 23;
	shf.l.wrap.b32 	%r10150, %r10144, %r10143, 23;
	mov.b64 	%rd14713, {%r10150, %r10149};
	xor.b64  	%rd14714, %rd14712, %rd14713;
	xor.b64  	%rd14715, %rd14676, %rd14652;
	and.b64  	%rd14716, %rd18911, %rd14715;
	xor.b64  	%rd14717, %rd14716, %rd14652;
	add.s64 	%rd14718, %rd18898, %rd18597;
	add.s64 	%rd14719, %rd14718, %rd14628;
	add.s64 	%rd14720, %rd14719, %rd14717;
	add.s64 	%rd14721, %rd14720, %rd14714;
	add.s64 	%rd18910, %rd14721, %rd14639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10151,%dummy}, %rd18907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10152}, %rd18907;
	}
	shf.r.wrap.b32 	%r10153, %r10152, %r10151, 28;
	shf.r.wrap.b32 	%r10154, %r10151, %r10152, 28;
	mov.b64 	%rd14722, {%r10154, %r10153};
	shf.l.wrap.b32 	%r10155, %r10151, %r10152, 30;
	shf.l.wrap.b32 	%r10156, %r10152, %r10151, 30;
	mov.b64 	%rd14723, {%r10156, %r10155};
	xor.b64  	%rd14724, %rd14723, %rd14722;
	shf.l.wrap.b32 	%r10157, %r10151, %r10152, 25;
	shf.l.wrap.b32 	%r10158, %r10152, %r10151, 25;
	mov.b64 	%rd14725, {%r10158, %r10157};
	xor.b64  	%rd14726, %rd14724, %rd14725;
	and.b64  	%rd14727, %rd18907, %rd14687;
	xor.b64  	%rd14728, %rd18907, %rd14687;
	and.b64  	%rd14729, %rd14728, %rd14663;
	or.b64  	%rd14730, %rd14729, %rd14727;
	add.s64 	%rd14731, %rd14721, %rd14730;
	add.s64 	%rd18906, %rd14731, %rd14726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10159,%dummy}, %rd18910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10160}, %rd18910;
	}
	shf.r.wrap.b32 	%r10161, %r10160, %r10159, 14;
	shf.r.wrap.b32 	%r10162, %r10159, %r10160, 14;
	mov.b64 	%rd14732, {%r10162, %r10161};
	shf.r.wrap.b32 	%r10163, %r10160, %r10159, 18;
	shf.r.wrap.b32 	%r10164, %r10159, %r10160, 18;
	mov.b64 	%rd14733, {%r10164, %r10163};
	xor.b64  	%rd14734, %rd14733, %rd14732;
	shf.l.wrap.b32 	%r10165, %r10159, %r10160, 23;
	shf.l.wrap.b32 	%r10166, %r10160, %r10159, 23;
	mov.b64 	%rd14735, {%r10166, %r10165};
	xor.b64  	%rd14736, %rd14734, %rd14735;
	xor.b64  	%rd14737, %rd18911, %rd14676;
	and.b64  	%rd14738, %rd18910, %rd14737;
	xor.b64  	%rd14739, %rd14738, %rd14676;
	add.s64 	%rd14740, %rd18897, %rd18596;
	add.s64 	%rd14741, %rd14740, %rd14652;
	add.s64 	%rd14742, %rd14741, %rd14739;
	add.s64 	%rd14743, %rd14742, %rd14736;
	add.s64 	%rd18909, %rd14743, %rd14663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10167,%dummy}, %rd18906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10168}, %rd18906;
	}
	shf.r.wrap.b32 	%r10169, %r10168, %r10167, 28;
	shf.r.wrap.b32 	%r10170, %r10167, %r10168, 28;
	mov.b64 	%rd14744, {%r10170, %r10169};
	shf.l.wrap.b32 	%r10171, %r10167, %r10168, 30;
	shf.l.wrap.b32 	%r10172, %r10168, %r10167, 30;
	mov.b64 	%rd14745, {%r10172, %r10171};
	xor.b64  	%rd14746, %rd14745, %rd14744;
	shf.l.wrap.b32 	%r10173, %r10167, %r10168, 25;
	shf.l.wrap.b32 	%r10174, %r10168, %r10167, 25;
	mov.b64 	%rd14747, {%r10174, %r10173};
	xor.b64  	%rd14748, %rd14746, %rd14747;
	and.b64  	%rd14749, %rd18906, %rd18907;
	xor.b64  	%rd14750, %rd18906, %rd18907;
	and.b64  	%rd14751, %rd14750, %rd14687;
	or.b64  	%rd14752, %rd14751, %rd14749;
	add.s64 	%rd14753, %rd14743, %rd14752;
	add.s64 	%rd18905, %rd14753, %rd14748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10175,%dummy}, %rd18909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10176}, %rd18909;
	}
	shf.r.wrap.b32 	%r10177, %r10176, %r10175, 14;
	shf.r.wrap.b32 	%r10178, %r10175, %r10176, 14;
	mov.b64 	%rd14754, {%r10178, %r10177};
	shf.r.wrap.b32 	%r10179, %r10176, %r10175, 18;
	shf.r.wrap.b32 	%r10180, %r10175, %r10176, 18;
	mov.b64 	%rd14755, {%r10180, %r10179};
	xor.b64  	%rd14756, %rd14755, %rd14754;
	shf.l.wrap.b32 	%r10181, %r10175, %r10176, 23;
	shf.l.wrap.b32 	%r10182, %r10176, %r10175, 23;
	mov.b64 	%rd14757, {%r10182, %r10181};
	xor.b64  	%rd14758, %rd14756, %rd14757;
	xor.b64  	%rd14759, %rd18910, %rd18911;
	and.b64  	%rd14760, %rd18909, %rd14759;
	xor.b64  	%rd14761, %rd14760, %rd18911;
	add.s64 	%rd14762, %rd18896, %rd18595;
	add.s64 	%rd14763, %rd14762, %rd14676;
	add.s64 	%rd14764, %rd14763, %rd14761;
	add.s64 	%rd14765, %rd14764, %rd14758;
	add.s64 	%rd18908, %rd14765, %rd14687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10183,%dummy}, %rd18905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10184}, %rd18905;
	}
	shf.r.wrap.b32 	%r10185, %r10184, %r10183, 28;
	shf.r.wrap.b32 	%r10186, %r10183, %r10184, 28;
	mov.b64 	%rd14766, {%r10186, %r10185};
	shf.l.wrap.b32 	%r10187, %r10183, %r10184, 30;
	shf.l.wrap.b32 	%r10188, %r10184, %r10183, 30;
	mov.b64 	%rd14767, {%r10188, %r10187};
	xor.b64  	%rd14768, %rd14767, %rd14766;
	shf.l.wrap.b32 	%r10189, %r10183, %r10184, 25;
	shf.l.wrap.b32 	%r10190, %r10184, %r10183, 25;
	mov.b64 	%rd14769, {%r10190, %r10189};
	xor.b64  	%rd14770, %rd14768, %rd14769;
	and.b64  	%rd14771, %rd18905, %rd18906;
	xor.b64  	%rd14772, %rd18905, %rd18906;
	and.b64  	%rd14773, %rd14772, %rd18907;
	or.b64  	%rd14774, %rd14773, %rd14771;
	add.s64 	%rd14775, %rd14765, %rd14774;
	add.s64 	%rd18904, %rd14775, %rd14770;
	mov.u32 	%r13048, 16;

BB0_288:
	mov.u64 	%rd18516, k_sha512;
	shr.u64 	%rd14776, %rd18897, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10191,%dummy}, %rd18897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10192}, %rd18897;
	}
	shf.r.wrap.b32 	%r10193, %r10192, %r10191, 19;
	shf.r.wrap.b32 	%r10194, %r10191, %r10192, 19;
	mov.b64 	%rd14777, {%r10194, %r10193};
	xor.b64  	%rd14778, %rd14777, %rd14776;
	shf.l.wrap.b32 	%r10195, %r10191, %r10192, 3;
	shf.l.wrap.b32 	%r10196, %r10192, %r10191, 3;
	mov.b64 	%rd14779, {%r10196, %r10195};
	xor.b64  	%rd14780, %rd14778, %rd14779;
	shr.u64 	%rd14781, %rd18913, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10197,%dummy}, %rd18913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10198}, %rd18913;
	}
	shf.r.wrap.b32 	%r10199, %r10198, %r10197, 1;
	shf.r.wrap.b32 	%r10200, %r10197, %r10198, 1;
	mov.b64 	%rd14782, {%r10200, %r10199};
	xor.b64  	%rd14783, %rd14782, %rd14781;
	shf.r.wrap.b32 	%r10201, %r10198, %r10197, 8;
	shf.r.wrap.b32 	%r10202, %r10197, %r10198, 8;
	mov.b64 	%rd14784, {%r10202, %r10201};
	xor.b64  	%rd14785, %rd14783, %rd14784;
	add.s64 	%rd14786, %rd18912, %rd18902;
	add.s64 	%rd14787, %rd14786, %rd14780;
	add.s64 	%rd18912, %rd14787, %rd14785;
	shr.u64 	%rd14788, %rd18896, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10203,%dummy}, %rd18896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10204}, %rd18896;
	}
	shf.r.wrap.b32 	%r10205, %r10204, %r10203, 19;
	shf.r.wrap.b32 	%r10206, %r10203, %r10204, 19;
	mov.b64 	%rd14789, {%r10206, %r10205};
	xor.b64  	%rd14790, %rd14789, %rd14788;
	shf.l.wrap.b32 	%r10207, %r10203, %r10204, 3;
	shf.l.wrap.b32 	%r10208, %r10204, %r10203, 3;
	mov.b64 	%rd14791, {%r10208, %r10207};
	xor.b64  	%rd14792, %rd14790, %rd14791;
	shr.u64 	%rd14793, %rd18914, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10209,%dummy}, %rd18914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10210}, %rd18914;
	}
	shf.r.wrap.b32 	%r10211, %r10210, %r10209, 1;
	shf.r.wrap.b32 	%r10212, %r10209, %r10210, 1;
	mov.b64 	%rd14794, {%r10212, %r10211};
	xor.b64  	%rd14795, %rd14794, %rd14793;
	shf.r.wrap.b32 	%r10213, %r10210, %r10209, 8;
	shf.r.wrap.b32 	%r10214, %r10209, %r10210, 8;
	mov.b64 	%rd14796, {%r10214, %r10213};
	xor.b64  	%rd14797, %rd14795, %rd14796;
	add.s64 	%rd14798, %rd18913, %rd18901;
	add.s64 	%rd14799, %rd14798, %rd14792;
	add.s64 	%rd18913, %rd14799, %rd14797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10215,%dummy}, %rd18912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10216}, %rd18912;
	}
	shf.r.wrap.b32 	%r10217, %r10216, %r10215, 19;
	shf.r.wrap.b32 	%r10218, %r10215, %r10216, 19;
	mov.b64 	%rd14800, {%r10218, %r10217};
	shf.l.wrap.b32 	%r10219, %r10215, %r10216, 3;
	shf.l.wrap.b32 	%r10220, %r10216, %r10215, 3;
	mov.b64 	%rd14801, {%r10220, %r10219};
	shr.u64 	%rd14802, %rd18912, 6;
	xor.b64  	%rd14803, %rd14800, %rd14802;
	xor.b64  	%rd14804, %rd14803, %rd14801;
	shr.u64 	%rd14805, %rd18915, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10221,%dummy}, %rd18915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10222}, %rd18915;
	}
	shf.r.wrap.b32 	%r10223, %r10222, %r10221, 1;
	shf.r.wrap.b32 	%r10224, %r10221, %r10222, 1;
	mov.b64 	%rd14806, {%r10224, %r10223};
	xor.b64  	%rd14807, %rd14806, %rd14805;
	shf.r.wrap.b32 	%r10225, %r10222, %r10221, 8;
	shf.r.wrap.b32 	%r10226, %r10221, %r10222, 8;
	mov.b64 	%rd14808, {%r10226, %r10225};
	xor.b64  	%rd14809, %rd14807, %rd14808;
	add.s64 	%rd14810, %rd18914, %rd18900;
	add.s64 	%rd14811, %rd14810, %rd14804;
	add.s64 	%rd18914, %rd14811, %rd14809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10227,%dummy}, %rd18913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10228}, %rd18913;
	}
	shf.r.wrap.b32 	%r10229, %r10228, %r10227, 19;
	shf.r.wrap.b32 	%r10230, %r10227, %r10228, 19;
	mov.b64 	%rd14812, {%r10230, %r10229};
	shf.l.wrap.b32 	%r10231, %r10227, %r10228, 3;
	shf.l.wrap.b32 	%r10232, %r10228, %r10227, 3;
	mov.b64 	%rd14813, {%r10232, %r10231};
	shr.u64 	%rd14814, %rd18913, 6;
	xor.b64  	%rd14815, %rd14812, %rd14814;
	xor.b64  	%rd14816, %rd14815, %rd14813;
	shr.u64 	%rd14817, %rd18916, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10233,%dummy}, %rd18916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10234}, %rd18916;
	}
	shf.r.wrap.b32 	%r10235, %r10234, %r10233, 1;
	shf.r.wrap.b32 	%r10236, %r10233, %r10234, 1;
	mov.b64 	%rd14818, {%r10236, %r10235};
	xor.b64  	%rd14819, %rd14818, %rd14817;
	shf.r.wrap.b32 	%r10237, %r10234, %r10233, 8;
	shf.r.wrap.b32 	%r10238, %r10233, %r10234, 8;
	mov.b64 	%rd14820, {%r10238, %r10237};
	xor.b64  	%rd14821, %rd14819, %rd14820;
	add.s64 	%rd14822, %rd18915, %rd18899;
	add.s64 	%rd14823, %rd14822, %rd14816;
	add.s64 	%rd18915, %rd14823, %rd14821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10239,%dummy}, %rd18914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10240}, %rd18914;
	}
	shf.r.wrap.b32 	%r10241, %r10240, %r10239, 19;
	shf.r.wrap.b32 	%r10242, %r10239, %r10240, 19;
	mov.b64 	%rd14824, {%r10242, %r10241};
	shf.l.wrap.b32 	%r10243, %r10239, %r10240, 3;
	shf.l.wrap.b32 	%r10244, %r10240, %r10239, 3;
	mov.b64 	%rd14825, {%r10244, %r10243};
	shr.u64 	%rd14826, %rd18914, 6;
	xor.b64  	%rd14827, %rd14824, %rd14826;
	xor.b64  	%rd14828, %rd14827, %rd14825;
	shr.u64 	%rd14829, %rd18917, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10245,%dummy}, %rd18917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10246}, %rd18917;
	}
	shf.r.wrap.b32 	%r10247, %r10246, %r10245, 1;
	shf.r.wrap.b32 	%r10248, %r10245, %r10246, 1;
	mov.b64 	%rd14830, {%r10248, %r10247};
	xor.b64  	%rd14831, %rd14830, %rd14829;
	shf.r.wrap.b32 	%r10249, %r10246, %r10245, 8;
	shf.r.wrap.b32 	%r10250, %r10245, %r10246, 8;
	mov.b64 	%rd14832, {%r10250, %r10249};
	xor.b64  	%rd14833, %rd14831, %rd14832;
	add.s64 	%rd14834, %rd18916, %rd18898;
	add.s64 	%rd14835, %rd14834, %rd14828;
	add.s64 	%rd18916, %rd14835, %rd14833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10251,%dummy}, %rd18915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10252}, %rd18915;
	}
	shf.r.wrap.b32 	%r10253, %r10252, %r10251, 19;
	shf.r.wrap.b32 	%r10254, %r10251, %r10252, 19;
	mov.b64 	%rd14836, {%r10254, %r10253};
	shf.l.wrap.b32 	%r10255, %r10251, %r10252, 3;
	shf.l.wrap.b32 	%r10256, %r10252, %r10251, 3;
	mov.b64 	%rd14837, {%r10256, %r10255};
	shr.u64 	%rd14838, %rd18915, 6;
	xor.b64  	%rd14839, %rd14836, %rd14838;
	xor.b64  	%rd14840, %rd14839, %rd14837;
	shr.u64 	%rd14841, %rd18918, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10257,%dummy}, %rd18918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10258}, %rd18918;
	}
	shf.r.wrap.b32 	%r10259, %r10258, %r10257, 1;
	shf.r.wrap.b32 	%r10260, %r10257, %r10258, 1;
	mov.b64 	%rd14842, {%r10260, %r10259};
	xor.b64  	%rd14843, %rd14842, %rd14841;
	shf.r.wrap.b32 	%r10261, %r10258, %r10257, 8;
	shf.r.wrap.b32 	%r10262, %r10257, %r10258, 8;
	mov.b64 	%rd14844, {%r10262, %r10261};
	xor.b64  	%rd14845, %rd14843, %rd14844;
	add.s64 	%rd14846, %rd18917, %rd18897;
	add.s64 	%rd14847, %rd14846, %rd14840;
	add.s64 	%rd18917, %rd14847, %rd14845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10263,%dummy}, %rd18916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10264}, %rd18916;
	}
	shf.r.wrap.b32 	%r10265, %r10264, %r10263, 19;
	shf.r.wrap.b32 	%r10266, %r10263, %r10264, 19;
	mov.b64 	%rd14848, {%r10266, %r10265};
	shf.l.wrap.b32 	%r10267, %r10263, %r10264, 3;
	shf.l.wrap.b32 	%r10268, %r10264, %r10263, 3;
	mov.b64 	%rd14849, {%r10268, %r10267};
	shr.u64 	%rd14850, %rd18916, 6;
	xor.b64  	%rd14851, %rd14848, %rd14850;
	xor.b64  	%rd14852, %rd14851, %rd14849;
	shr.u64 	%rd14853, %rd18919, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10269,%dummy}, %rd18919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10270}, %rd18919;
	}
	shf.r.wrap.b32 	%r10271, %r10270, %r10269, 1;
	shf.r.wrap.b32 	%r10272, %r10269, %r10270, 1;
	mov.b64 	%rd14854, {%r10272, %r10271};
	xor.b64  	%rd14855, %rd14854, %rd14853;
	shf.r.wrap.b32 	%r10273, %r10270, %r10269, 8;
	shf.r.wrap.b32 	%r10274, %r10269, %r10270, 8;
	mov.b64 	%rd14856, {%r10274, %r10273};
	xor.b64  	%rd14857, %rd14855, %rd14856;
	add.s64 	%rd14858, %rd18918, %rd18896;
	add.s64 	%rd14859, %rd14858, %rd14852;
	add.s64 	%rd18918, %rd14859, %rd14857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10275,%dummy}, %rd18917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10276}, %rd18917;
	}
	shf.r.wrap.b32 	%r10277, %r10276, %r10275, 19;
	shf.r.wrap.b32 	%r10278, %r10275, %r10276, 19;
	mov.b64 	%rd14860, {%r10278, %r10277};
	shf.l.wrap.b32 	%r10279, %r10275, %r10276, 3;
	shf.l.wrap.b32 	%r10280, %r10276, %r10275, 3;
	mov.b64 	%rd14861, {%r10280, %r10279};
	shr.u64 	%rd14862, %rd18917, 6;
	xor.b64  	%rd14863, %rd14860, %rd14862;
	xor.b64  	%rd14864, %rd14863, %rd14861;
	shr.u64 	%rd14865, %rd18903, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10281,%dummy}, %rd18903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10282}, %rd18903;
	}
	shf.r.wrap.b32 	%r10283, %r10282, %r10281, 1;
	shf.r.wrap.b32 	%r10284, %r10281, %r10282, 1;
	mov.b64 	%rd14866, {%r10284, %r10283};
	xor.b64  	%rd14867, %rd14866, %rd14865;
	shf.r.wrap.b32 	%r10285, %r10282, %r10281, 8;
	shf.r.wrap.b32 	%r10286, %r10281, %r10282, 8;
	mov.b64 	%rd14868, {%r10286, %r10285};
	xor.b64  	%rd14869, %rd14867, %rd14868;
	add.s64 	%rd14870, %rd18912, %rd18919;
	add.s64 	%rd14871, %rd14870, %rd14864;
	add.s64 	%rd18919, %rd14871, %rd14869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10287,%dummy}, %rd18918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10288}, %rd18918;
	}
	shf.r.wrap.b32 	%r10289, %r10288, %r10287, 19;
	shf.r.wrap.b32 	%r10290, %r10287, %r10288, 19;
	mov.b64 	%rd14872, {%r10290, %r10289};
	shf.l.wrap.b32 	%r10291, %r10287, %r10288, 3;
	shf.l.wrap.b32 	%r10292, %r10288, %r10287, 3;
	mov.b64 	%rd14873, {%r10292, %r10291};
	shr.u64 	%rd14874, %rd18918, 6;
	xor.b64  	%rd14875, %rd14872, %rd14874;
	xor.b64  	%rd14876, %rd14875, %rd14873;
	shr.u64 	%rd14877, %rd18902, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10293,%dummy}, %rd18902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10294}, %rd18902;
	}
	shf.r.wrap.b32 	%r10295, %r10294, %r10293, 1;
	shf.r.wrap.b32 	%r10296, %r10293, %r10294, 1;
	mov.b64 	%rd14878, {%r10296, %r10295};
	xor.b64  	%rd14879, %rd14878, %rd14877;
	shf.r.wrap.b32 	%r10297, %r10294, %r10293, 8;
	shf.r.wrap.b32 	%r10298, %r10293, %r10294, 8;
	mov.b64 	%rd14880, {%r10298, %r10297};
	xor.b64  	%rd14881, %rd14879, %rd14880;
	add.s64 	%rd14882, %rd18913, %rd18903;
	add.s64 	%rd14883, %rd14882, %rd14876;
	add.s64 	%rd18903, %rd14883, %rd14881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10299,%dummy}, %rd18919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10300}, %rd18919;
	}
	shf.r.wrap.b32 	%r10301, %r10300, %r10299, 19;
	shf.r.wrap.b32 	%r10302, %r10299, %r10300, 19;
	mov.b64 	%rd14884, {%r10302, %r10301};
	shf.l.wrap.b32 	%r10303, %r10299, %r10300, 3;
	shf.l.wrap.b32 	%r10304, %r10300, %r10299, 3;
	mov.b64 	%rd14885, {%r10304, %r10303};
	shr.u64 	%rd14886, %rd18919, 6;
	xor.b64  	%rd14887, %rd14884, %rd14886;
	xor.b64  	%rd14888, %rd14887, %rd14885;
	shr.u64 	%rd14889, %rd18901, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10305,%dummy}, %rd18901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10306}, %rd18901;
	}
	shf.r.wrap.b32 	%r10307, %r10306, %r10305, 1;
	shf.r.wrap.b32 	%r10308, %r10305, %r10306, 1;
	mov.b64 	%rd14890, {%r10308, %r10307};
	xor.b64  	%rd14891, %rd14890, %rd14889;
	shf.r.wrap.b32 	%r10309, %r10306, %r10305, 8;
	shf.r.wrap.b32 	%r10310, %r10305, %r10306, 8;
	mov.b64 	%rd14892, {%r10310, %r10309};
	xor.b64  	%rd14893, %rd14891, %rd14892;
	add.s64 	%rd14894, %rd18914, %rd18902;
	add.s64 	%rd14895, %rd14894, %rd14888;
	add.s64 	%rd18902, %rd14895, %rd14893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10311,%dummy}, %rd18903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10312}, %rd18903;
	}
	shf.r.wrap.b32 	%r10313, %r10312, %r10311, 19;
	shf.r.wrap.b32 	%r10314, %r10311, %r10312, 19;
	mov.b64 	%rd14896, {%r10314, %r10313};
	shf.l.wrap.b32 	%r10315, %r10311, %r10312, 3;
	shf.l.wrap.b32 	%r10316, %r10312, %r10311, 3;
	mov.b64 	%rd14897, {%r10316, %r10315};
	shr.u64 	%rd14898, %rd18903, 6;
	xor.b64  	%rd14899, %rd14896, %rd14898;
	xor.b64  	%rd14900, %rd14899, %rd14897;
	shr.u64 	%rd14901, %rd18900, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10317,%dummy}, %rd18900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10318}, %rd18900;
	}
	shf.r.wrap.b32 	%r10319, %r10318, %r10317, 1;
	shf.r.wrap.b32 	%r10320, %r10317, %r10318, 1;
	mov.b64 	%rd14902, {%r10320, %r10319};
	xor.b64  	%rd14903, %rd14902, %rd14901;
	shf.r.wrap.b32 	%r10321, %r10318, %r10317, 8;
	shf.r.wrap.b32 	%r10322, %r10317, %r10318, 8;
	mov.b64 	%rd14904, {%r10322, %r10321};
	xor.b64  	%rd14905, %rd14903, %rd14904;
	add.s64 	%rd14906, %rd18915, %rd18901;
	add.s64 	%rd14907, %rd14906, %rd14900;
	add.s64 	%rd18901, %rd14907, %rd14905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10323,%dummy}, %rd18902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10324}, %rd18902;
	}
	shf.r.wrap.b32 	%r10325, %r10324, %r10323, 19;
	shf.r.wrap.b32 	%r10326, %r10323, %r10324, 19;
	mov.b64 	%rd14908, {%r10326, %r10325};
	shf.l.wrap.b32 	%r10327, %r10323, %r10324, 3;
	shf.l.wrap.b32 	%r10328, %r10324, %r10323, 3;
	mov.b64 	%rd14909, {%r10328, %r10327};
	shr.u64 	%rd14910, %rd18902, 6;
	xor.b64  	%rd14911, %rd14908, %rd14910;
	xor.b64  	%rd14912, %rd14911, %rd14909;
	shr.u64 	%rd14913, %rd18899, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10329,%dummy}, %rd18899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10330}, %rd18899;
	}
	shf.r.wrap.b32 	%r10331, %r10330, %r10329, 1;
	shf.r.wrap.b32 	%r10332, %r10329, %r10330, 1;
	mov.b64 	%rd14914, {%r10332, %r10331};
	xor.b64  	%rd14915, %rd14914, %rd14913;
	shf.r.wrap.b32 	%r10333, %r10330, %r10329, 8;
	shf.r.wrap.b32 	%r10334, %r10329, %r10330, 8;
	mov.b64 	%rd14916, {%r10334, %r10333};
	xor.b64  	%rd14917, %rd14915, %rd14916;
	add.s64 	%rd14918, %rd18916, %rd18900;
	add.s64 	%rd14919, %rd14918, %rd14912;
	add.s64 	%rd18900, %rd14919, %rd14917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10335,%dummy}, %rd18901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10336}, %rd18901;
	}
	shf.r.wrap.b32 	%r10337, %r10336, %r10335, 19;
	shf.r.wrap.b32 	%r10338, %r10335, %r10336, 19;
	mov.b64 	%rd14920, {%r10338, %r10337};
	shf.l.wrap.b32 	%r10339, %r10335, %r10336, 3;
	shf.l.wrap.b32 	%r10340, %r10336, %r10335, 3;
	mov.b64 	%rd14921, {%r10340, %r10339};
	shr.u64 	%rd14922, %rd18901, 6;
	xor.b64  	%rd14923, %rd14920, %rd14922;
	xor.b64  	%rd14924, %rd14923, %rd14921;
	shr.u64 	%rd14925, %rd18898, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10341,%dummy}, %rd18898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10342}, %rd18898;
	}
	shf.r.wrap.b32 	%r10343, %r10342, %r10341, 1;
	shf.r.wrap.b32 	%r10344, %r10341, %r10342, 1;
	mov.b64 	%rd14926, {%r10344, %r10343};
	xor.b64  	%rd14927, %rd14926, %rd14925;
	shf.r.wrap.b32 	%r10345, %r10342, %r10341, 8;
	shf.r.wrap.b32 	%r10346, %r10341, %r10342, 8;
	mov.b64 	%rd14928, {%r10346, %r10345};
	xor.b64  	%rd14929, %rd14927, %rd14928;
	add.s64 	%rd14930, %rd18917, %rd18899;
	add.s64 	%rd14931, %rd14930, %rd14924;
	add.s64 	%rd18899, %rd14931, %rd14929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10347,%dummy}, %rd18900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10348}, %rd18900;
	}
	shf.r.wrap.b32 	%r10349, %r10348, %r10347, 19;
	shf.r.wrap.b32 	%r10350, %r10347, %r10348, 19;
	mov.b64 	%rd14932, {%r10350, %r10349};
	shf.l.wrap.b32 	%r10351, %r10347, %r10348, 3;
	shf.l.wrap.b32 	%r10352, %r10348, %r10347, 3;
	mov.b64 	%rd14933, {%r10352, %r10351};
	shr.u64 	%rd14934, %rd18900, 6;
	xor.b64  	%rd14935, %rd14932, %rd14934;
	xor.b64  	%rd14936, %rd14935, %rd14933;
	shr.u64 	%rd14937, %rd18897, 7;
	shf.r.wrap.b32 	%r10353, %r10192, %r10191, 1;
	shf.r.wrap.b32 	%r10354, %r10191, %r10192, 1;
	mov.b64 	%rd14938, {%r10354, %r10353};
	xor.b64  	%rd14939, %rd14938, %rd14937;
	shf.r.wrap.b32 	%r10355, %r10192, %r10191, 8;
	shf.r.wrap.b32 	%r10356, %r10191, %r10192, 8;
	mov.b64 	%rd14940, {%r10356, %r10355};
	xor.b64  	%rd14941, %rd14939, %rd14940;
	add.s64 	%rd14942, %rd18918, %rd18898;
	add.s64 	%rd14943, %rd14942, %rd14936;
	add.s64 	%rd18898, %rd14943, %rd14941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10357,%dummy}, %rd18899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10358}, %rd18899;
	}
	shf.r.wrap.b32 	%r10359, %r10358, %r10357, 19;
	shf.r.wrap.b32 	%r10360, %r10357, %r10358, 19;
	mov.b64 	%rd14944, {%r10360, %r10359};
	shf.l.wrap.b32 	%r10361, %r10357, %r10358, 3;
	shf.l.wrap.b32 	%r10362, %r10358, %r10357, 3;
	mov.b64 	%rd14945, {%r10362, %r10361};
	shr.u64 	%rd14946, %rd18899, 6;
	xor.b64  	%rd14947, %rd14944, %rd14946;
	xor.b64  	%rd14948, %rd14947, %rd14945;
	shr.u64 	%rd14949, %rd18896, 7;
	shf.r.wrap.b32 	%r10363, %r10204, %r10203, 1;
	shf.r.wrap.b32 	%r10364, %r10203, %r10204, 1;
	mov.b64 	%rd14950, {%r10364, %r10363};
	xor.b64  	%rd14951, %rd14950, %rd14949;
	shf.r.wrap.b32 	%r10365, %r10204, %r10203, 8;
	shf.r.wrap.b32 	%r10366, %r10203, %r10204, 8;
	mov.b64 	%rd14952, {%r10366, %r10365};
	xor.b64  	%rd14953, %rd14951, %rd14952;
	add.s64 	%rd14954, %rd18919, %rd18897;
	add.s64 	%rd14955, %rd14954, %rd14948;
	add.s64 	%rd18897, %rd14955, %rd14953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10367,%dummy}, %rd18898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10368}, %rd18898;
	}
	shf.r.wrap.b32 	%r10369, %r10368, %r10367, 19;
	shf.r.wrap.b32 	%r10370, %r10367, %r10368, 19;
	mov.b64 	%rd14956, {%r10370, %r10369};
	shf.l.wrap.b32 	%r10371, %r10367, %r10368, 3;
	shf.l.wrap.b32 	%r10372, %r10368, %r10367, 3;
	mov.b64 	%rd14957, {%r10372, %r10371};
	shr.u64 	%rd14958, %rd18898, 6;
	xor.b64  	%rd14959, %rd14956, %rd14958;
	xor.b64  	%rd14960, %rd14959, %rd14957;
	shf.r.wrap.b32 	%r10373, %r10216, %r10215, 1;
	shf.r.wrap.b32 	%r10374, %r10215, %r10216, 1;
	mov.b64 	%rd14961, {%r10374, %r10373};
	shf.r.wrap.b32 	%r10375, %r10216, %r10215, 8;
	shf.r.wrap.b32 	%r10376, %r10215, %r10216, 8;
	mov.b64 	%rd14962, {%r10376, %r10375};
	shr.u64 	%rd14963, %rd18912, 7;
	xor.b64  	%rd14964, %rd14961, %rd14963;
	xor.b64  	%rd14965, %rd14964, %rd14962;
	add.s64 	%rd14966, %rd18903, %rd18896;
	add.s64 	%rd14967, %rd14966, %rd14960;
	add.s64 	%rd18896, %rd14967, %rd14965;
	mul.wide.s32 	%rd14968, %r13048, 8;
	add.s64 	%rd14970, %rd18516, %rd14968;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10377,%dummy}, %rd18908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10378}, %rd18908;
	}
	shf.r.wrap.b32 	%r10379, %r10378, %r10377, 18;
	shf.r.wrap.b32 	%r10380, %r10377, %r10378, 18;
	mov.b64 	%rd14971, {%r10380, %r10379};
	shf.r.wrap.b32 	%r10381, %r10378, %r10377, 14;
	shf.r.wrap.b32 	%r10382, %r10377, %r10378, 14;
	mov.b64 	%rd14972, {%r10382, %r10381};
	xor.b64  	%rd14973, %rd14971, %rd14972;
	shf.l.wrap.b32 	%r10383, %r10377, %r10378, 23;
	shf.l.wrap.b32 	%r10384, %r10378, %r10377, 23;
	mov.b64 	%rd14974, {%r10384, %r10383};
	xor.b64  	%rd14975, %rd14973, %rd14974;
	xor.b64  	%rd14976, %rd18910, %rd18909;
	and.b64  	%rd14977, %rd14976, %rd18908;
	xor.b64  	%rd14978, %rd14977, %rd18910;
	add.s64 	%rd14979, %rd14978, %rd18911;
	add.s64 	%rd14980, %rd14979, %rd18912;
	ld.const.u64 	%rd14981, [%rd14970];
	add.s64 	%rd14982, %rd14980, %rd14981;
	add.s64 	%rd14983, %rd14982, %rd14975;
	add.s64 	%rd14984, %rd14983, %rd18907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10385}, %rd18904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10386,%dummy}, %rd18904;
	}
	shf.l.wrap.b32 	%r10387, %r10386, %r10385, 30;
	shf.l.wrap.b32 	%r10388, %r10385, %r10386, 30;
	mov.b64 	%rd14985, {%r10388, %r10387};
	shf.r.wrap.b32 	%r10389, %r10385, %r10386, 28;
	shf.r.wrap.b32 	%r10390, %r10386, %r10385, 28;
	mov.b64 	%rd14986, {%r10390, %r10389};
	xor.b64  	%rd14987, %rd14985, %rd14986;
	shf.l.wrap.b32 	%r10391, %r10386, %r10385, 25;
	shf.l.wrap.b32 	%r10392, %r10385, %r10386, 25;
	mov.b64 	%rd14988, {%r10392, %r10391};
	xor.b64  	%rd14989, %rd14987, %rd14988;
	xor.b64  	%rd14990, %rd18905, %rd18904;
	and.b64  	%rd14991, %rd14990, %rd18906;
	and.b64  	%rd14992, %rd18905, %rd18904;
	or.b64  	%rd14993, %rd14991, %rd14992;
	add.s64 	%rd14994, %rd14983, %rd14993;
	add.s64 	%rd14995, %rd14994, %rd14989;
	add.s32 	%r10393, %r13048, 1;
	mul.wide.s32 	%rd14996, %r10393, 8;
	add.s64 	%rd14997, %rd18516, %rd14996;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10394,%dummy}, %rd14984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10395}, %rd14984;
	}
	shf.r.wrap.b32 	%r10396, %r10395, %r10394, 14;
	shf.r.wrap.b32 	%r10397, %r10394, %r10395, 14;
	mov.b64 	%rd14998, {%r10397, %r10396};
	shf.r.wrap.b32 	%r10398, %r10395, %r10394, 18;
	shf.r.wrap.b32 	%r10399, %r10394, %r10395, 18;
	mov.b64 	%rd14999, {%r10399, %r10398};
	xor.b64  	%rd15000, %rd14999, %rd14998;
	shf.l.wrap.b32 	%r10400, %r10394, %r10395, 23;
	shf.l.wrap.b32 	%r10401, %r10395, %r10394, 23;
	mov.b64 	%rd15001, {%r10401, %r10400};
	xor.b64  	%rd15002, %rd15000, %rd15001;
	xor.b64  	%rd15003, %rd18909, %rd18908;
	and.b64  	%rd15004, %rd14984, %rd15003;
	xor.b64  	%rd15005, %rd15004, %rd18909;
	add.s64 	%rd15006, %rd18913, %rd18910;
	ld.const.u64 	%rd15007, [%rd14997];
	add.s64 	%rd15008, %rd15006, %rd15007;
	add.s64 	%rd15009, %rd15008, %rd15005;
	add.s64 	%rd15010, %rd15009, %rd15002;
	add.s64 	%rd15011, %rd15010, %rd18906;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10402,%dummy}, %rd14995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10403}, %rd14995;
	}
	shf.r.wrap.b32 	%r10404, %r10403, %r10402, 28;
	shf.r.wrap.b32 	%r10405, %r10402, %r10403, 28;
	mov.b64 	%rd15012, {%r10405, %r10404};
	shf.l.wrap.b32 	%r10406, %r10402, %r10403, 30;
	shf.l.wrap.b32 	%r10407, %r10403, %r10402, 30;
	mov.b64 	%rd15013, {%r10407, %r10406};
	xor.b64  	%rd15014, %rd15013, %rd15012;
	shf.l.wrap.b32 	%r10408, %r10402, %r10403, 25;
	shf.l.wrap.b32 	%r10409, %r10403, %r10402, 25;
	mov.b64 	%rd15015, {%r10409, %r10408};
	xor.b64  	%rd15016, %rd15014, %rd15015;
	and.b64  	%rd15017, %rd14995, %rd18904;
	xor.b64  	%rd15018, %rd14995, %rd18904;
	and.b64  	%rd15019, %rd15018, %rd18905;
	or.b64  	%rd15020, %rd15019, %rd15017;
	add.s64 	%rd15021, %rd15010, %rd15020;
	add.s64 	%rd15022, %rd15021, %rd15016;
	add.s32 	%r10410, %r13048, 2;
	mul.wide.s32 	%rd15023, %r10410, 8;
	add.s64 	%rd15024, %rd18516, %rd15023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10411,%dummy}, %rd15011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10412}, %rd15011;
	}
	shf.r.wrap.b32 	%r10413, %r10412, %r10411, 14;
	shf.r.wrap.b32 	%r10414, %r10411, %r10412, 14;
	mov.b64 	%rd15025, {%r10414, %r10413};
	shf.r.wrap.b32 	%r10415, %r10412, %r10411, 18;
	shf.r.wrap.b32 	%r10416, %r10411, %r10412, 18;
	mov.b64 	%rd15026, {%r10416, %r10415};
	xor.b64  	%rd15027, %rd15026, %rd15025;
	shf.l.wrap.b32 	%r10417, %r10411, %r10412, 23;
	shf.l.wrap.b32 	%r10418, %r10412, %r10411, 23;
	mov.b64 	%rd15028, {%r10418, %r10417};
	xor.b64  	%rd15029, %rd15027, %rd15028;
	xor.b64  	%rd15030, %rd14984, %rd18908;
	and.b64  	%rd15031, %rd15011, %rd15030;
	xor.b64  	%rd15032, %rd15031, %rd18908;
	add.s64 	%rd15033, %rd18914, %rd18909;
	ld.const.u64 	%rd15034, [%rd15024];
	add.s64 	%rd15035, %rd15033, %rd15034;
	add.s64 	%rd15036, %rd15035, %rd15032;
	add.s64 	%rd15037, %rd15036, %rd15029;
	add.s64 	%rd15038, %rd15037, %rd18905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10419,%dummy}, %rd15022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10420}, %rd15022;
	}
	shf.r.wrap.b32 	%r10421, %r10420, %r10419, 28;
	shf.r.wrap.b32 	%r10422, %r10419, %r10420, 28;
	mov.b64 	%rd15039, {%r10422, %r10421};
	shf.l.wrap.b32 	%r10423, %r10419, %r10420, 30;
	shf.l.wrap.b32 	%r10424, %r10420, %r10419, 30;
	mov.b64 	%rd15040, {%r10424, %r10423};
	xor.b64  	%rd15041, %rd15040, %rd15039;
	shf.l.wrap.b32 	%r10425, %r10419, %r10420, 25;
	shf.l.wrap.b32 	%r10426, %r10420, %r10419, 25;
	mov.b64 	%rd15042, {%r10426, %r10425};
	xor.b64  	%rd15043, %rd15041, %rd15042;
	and.b64  	%rd15044, %rd15022, %rd14995;
	xor.b64  	%rd15045, %rd15022, %rd14995;
	and.b64  	%rd15046, %rd15045, %rd18904;
	or.b64  	%rd15047, %rd15046, %rd15044;
	add.s64 	%rd15048, %rd15037, %rd15047;
	add.s64 	%rd15049, %rd15048, %rd15043;
	add.s32 	%r10427, %r13048, 3;
	mul.wide.s32 	%rd15050, %r10427, 8;
	add.s64 	%rd15051, %rd18516, %rd15050;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10428,%dummy}, %rd15038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10429}, %rd15038;
	}
	shf.r.wrap.b32 	%r10430, %r10429, %r10428, 14;
	shf.r.wrap.b32 	%r10431, %r10428, %r10429, 14;
	mov.b64 	%rd15052, {%r10431, %r10430};
	shf.r.wrap.b32 	%r10432, %r10429, %r10428, 18;
	shf.r.wrap.b32 	%r10433, %r10428, %r10429, 18;
	mov.b64 	%rd15053, {%r10433, %r10432};
	xor.b64  	%rd15054, %rd15053, %rd15052;
	shf.l.wrap.b32 	%r10434, %r10428, %r10429, 23;
	shf.l.wrap.b32 	%r10435, %r10429, %r10428, 23;
	mov.b64 	%rd15055, {%r10435, %r10434};
	xor.b64  	%rd15056, %rd15054, %rd15055;
	xor.b64  	%rd15057, %rd15011, %rd14984;
	and.b64  	%rd15058, %rd15038, %rd15057;
	xor.b64  	%rd15059, %rd15058, %rd14984;
	add.s64 	%rd15060, %rd18915, %rd18908;
	ld.const.u64 	%rd15061, [%rd15051];
	add.s64 	%rd15062, %rd15060, %rd15061;
	add.s64 	%rd15063, %rd15062, %rd15059;
	add.s64 	%rd15064, %rd15063, %rd15056;
	add.s64 	%rd15065, %rd15064, %rd18904;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10436,%dummy}, %rd15049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10437}, %rd15049;
	}
	shf.r.wrap.b32 	%r10438, %r10437, %r10436, 28;
	shf.r.wrap.b32 	%r10439, %r10436, %r10437, 28;
	mov.b64 	%rd15066, {%r10439, %r10438};
	shf.l.wrap.b32 	%r10440, %r10436, %r10437, 30;
	shf.l.wrap.b32 	%r10441, %r10437, %r10436, 30;
	mov.b64 	%rd15067, {%r10441, %r10440};
	xor.b64  	%rd15068, %rd15067, %rd15066;
	shf.l.wrap.b32 	%r10442, %r10436, %r10437, 25;
	shf.l.wrap.b32 	%r10443, %r10437, %r10436, 25;
	mov.b64 	%rd15069, {%r10443, %r10442};
	xor.b64  	%rd15070, %rd15068, %rd15069;
	and.b64  	%rd15071, %rd15049, %rd15022;
	xor.b64  	%rd15072, %rd15049, %rd15022;
	and.b64  	%rd15073, %rd15072, %rd14995;
	or.b64  	%rd15074, %rd15073, %rd15071;
	add.s64 	%rd15075, %rd15064, %rd15074;
	add.s64 	%rd15076, %rd15075, %rd15070;
	add.s32 	%r10444, %r13048, 4;
	mul.wide.s32 	%rd15077, %r10444, 8;
	add.s64 	%rd15078, %rd18516, %rd15077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10445,%dummy}, %rd15065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10446}, %rd15065;
	}
	shf.r.wrap.b32 	%r10447, %r10446, %r10445, 14;
	shf.r.wrap.b32 	%r10448, %r10445, %r10446, 14;
	mov.b64 	%rd15079, {%r10448, %r10447};
	shf.r.wrap.b32 	%r10449, %r10446, %r10445, 18;
	shf.r.wrap.b32 	%r10450, %r10445, %r10446, 18;
	mov.b64 	%rd15080, {%r10450, %r10449};
	xor.b64  	%rd15081, %rd15080, %rd15079;
	shf.l.wrap.b32 	%r10451, %r10445, %r10446, 23;
	shf.l.wrap.b32 	%r10452, %r10446, %r10445, 23;
	mov.b64 	%rd15082, {%r10452, %r10451};
	xor.b64  	%rd15083, %rd15081, %rd15082;
	xor.b64  	%rd15084, %rd15038, %rd15011;
	and.b64  	%rd15085, %rd15065, %rd15084;
	xor.b64  	%rd15086, %rd15085, %rd15011;
	add.s64 	%rd15087, %rd14984, %rd18916;
	ld.const.u64 	%rd15088, [%rd15078];
	add.s64 	%rd15089, %rd15087, %rd15088;
	add.s64 	%rd15090, %rd15089, %rd15086;
	add.s64 	%rd15091, %rd15090, %rd15083;
	add.s64 	%rd15092, %rd15091, %rd14995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10453,%dummy}, %rd15076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10454}, %rd15076;
	}
	shf.r.wrap.b32 	%r10455, %r10454, %r10453, 28;
	shf.r.wrap.b32 	%r10456, %r10453, %r10454, 28;
	mov.b64 	%rd15093, {%r10456, %r10455};
	shf.l.wrap.b32 	%r10457, %r10453, %r10454, 30;
	shf.l.wrap.b32 	%r10458, %r10454, %r10453, 30;
	mov.b64 	%rd15094, {%r10458, %r10457};
	xor.b64  	%rd15095, %rd15094, %rd15093;
	shf.l.wrap.b32 	%r10459, %r10453, %r10454, 25;
	shf.l.wrap.b32 	%r10460, %r10454, %r10453, 25;
	mov.b64 	%rd15096, {%r10460, %r10459};
	xor.b64  	%rd15097, %rd15095, %rd15096;
	and.b64  	%rd15098, %rd15076, %rd15049;
	xor.b64  	%rd15099, %rd15076, %rd15049;
	and.b64  	%rd15100, %rd15099, %rd15022;
	or.b64  	%rd15101, %rd15100, %rd15098;
	add.s64 	%rd15102, %rd15091, %rd15101;
	add.s64 	%rd15103, %rd15102, %rd15097;
	add.s32 	%r10461, %r13048, 5;
	mul.wide.s32 	%rd15104, %r10461, 8;
	add.s64 	%rd15105, %rd18516, %rd15104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10462,%dummy}, %rd15092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10463}, %rd15092;
	}
	shf.r.wrap.b32 	%r10464, %r10463, %r10462, 14;
	shf.r.wrap.b32 	%r10465, %r10462, %r10463, 14;
	mov.b64 	%rd15106, {%r10465, %r10464};
	shf.r.wrap.b32 	%r10466, %r10463, %r10462, 18;
	shf.r.wrap.b32 	%r10467, %r10462, %r10463, 18;
	mov.b64 	%rd15107, {%r10467, %r10466};
	xor.b64  	%rd15108, %rd15107, %rd15106;
	shf.l.wrap.b32 	%r10468, %r10462, %r10463, 23;
	shf.l.wrap.b32 	%r10469, %r10463, %r10462, 23;
	mov.b64 	%rd15109, {%r10469, %r10468};
	xor.b64  	%rd15110, %rd15108, %rd15109;
	xor.b64  	%rd15111, %rd15065, %rd15038;
	and.b64  	%rd15112, %rd15092, %rd15111;
	xor.b64  	%rd15113, %rd15112, %rd15038;
	add.s64 	%rd15114, %rd15011, %rd18917;
	ld.const.u64 	%rd15115, [%rd15105];
	add.s64 	%rd15116, %rd15114, %rd15115;
	add.s64 	%rd15117, %rd15116, %rd15113;
	add.s64 	%rd15118, %rd15117, %rd15110;
	add.s64 	%rd15119, %rd15118, %rd15022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10470,%dummy}, %rd15103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10471}, %rd15103;
	}
	shf.r.wrap.b32 	%r10472, %r10471, %r10470, 28;
	shf.r.wrap.b32 	%r10473, %r10470, %r10471, 28;
	mov.b64 	%rd15120, {%r10473, %r10472};
	shf.l.wrap.b32 	%r10474, %r10470, %r10471, 30;
	shf.l.wrap.b32 	%r10475, %r10471, %r10470, 30;
	mov.b64 	%rd15121, {%r10475, %r10474};
	xor.b64  	%rd15122, %rd15121, %rd15120;
	shf.l.wrap.b32 	%r10476, %r10470, %r10471, 25;
	shf.l.wrap.b32 	%r10477, %r10471, %r10470, 25;
	mov.b64 	%rd15123, {%r10477, %r10476};
	xor.b64  	%rd15124, %rd15122, %rd15123;
	and.b64  	%rd15125, %rd15103, %rd15076;
	xor.b64  	%rd15126, %rd15103, %rd15076;
	and.b64  	%rd15127, %rd15126, %rd15049;
	or.b64  	%rd15128, %rd15127, %rd15125;
	add.s64 	%rd15129, %rd15118, %rd15128;
	add.s64 	%rd15130, %rd15129, %rd15124;
	add.s32 	%r10478, %r13048, 6;
	mul.wide.s32 	%rd15131, %r10478, 8;
	add.s64 	%rd15132, %rd18516, %rd15131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10479,%dummy}, %rd15119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10480}, %rd15119;
	}
	shf.r.wrap.b32 	%r10481, %r10480, %r10479, 14;
	shf.r.wrap.b32 	%r10482, %r10479, %r10480, 14;
	mov.b64 	%rd15133, {%r10482, %r10481};
	shf.r.wrap.b32 	%r10483, %r10480, %r10479, 18;
	shf.r.wrap.b32 	%r10484, %r10479, %r10480, 18;
	mov.b64 	%rd15134, {%r10484, %r10483};
	xor.b64  	%rd15135, %rd15134, %rd15133;
	shf.l.wrap.b32 	%r10485, %r10479, %r10480, 23;
	shf.l.wrap.b32 	%r10486, %r10480, %r10479, 23;
	mov.b64 	%rd15136, {%r10486, %r10485};
	xor.b64  	%rd15137, %rd15135, %rd15136;
	xor.b64  	%rd15138, %rd15092, %rd15065;
	and.b64  	%rd15139, %rd15119, %rd15138;
	xor.b64  	%rd15140, %rd15139, %rd15065;
	add.s64 	%rd15141, %rd15038, %rd18918;
	ld.const.u64 	%rd15142, [%rd15132];
	add.s64 	%rd15143, %rd15141, %rd15142;
	add.s64 	%rd15144, %rd15143, %rd15140;
	add.s64 	%rd15145, %rd15144, %rd15137;
	add.s64 	%rd15146, %rd15145, %rd15049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10487,%dummy}, %rd15130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10488}, %rd15130;
	}
	shf.r.wrap.b32 	%r10489, %r10488, %r10487, 28;
	shf.r.wrap.b32 	%r10490, %r10487, %r10488, 28;
	mov.b64 	%rd15147, {%r10490, %r10489};
	shf.l.wrap.b32 	%r10491, %r10487, %r10488, 30;
	shf.l.wrap.b32 	%r10492, %r10488, %r10487, 30;
	mov.b64 	%rd15148, {%r10492, %r10491};
	xor.b64  	%rd15149, %rd15148, %rd15147;
	shf.l.wrap.b32 	%r10493, %r10487, %r10488, 25;
	shf.l.wrap.b32 	%r10494, %r10488, %r10487, 25;
	mov.b64 	%rd15150, {%r10494, %r10493};
	xor.b64  	%rd15151, %rd15149, %rd15150;
	and.b64  	%rd15152, %rd15130, %rd15103;
	xor.b64  	%rd15153, %rd15130, %rd15103;
	and.b64  	%rd15154, %rd15153, %rd15076;
	or.b64  	%rd15155, %rd15154, %rd15152;
	add.s64 	%rd15156, %rd15145, %rd15155;
	add.s64 	%rd15157, %rd15156, %rd15151;
	add.s32 	%r10495, %r13048, 7;
	mul.wide.s32 	%rd15158, %r10495, 8;
	add.s64 	%rd15159, %rd18516, %rd15158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10496,%dummy}, %rd15146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10497}, %rd15146;
	}
	shf.r.wrap.b32 	%r10498, %r10497, %r10496, 14;
	shf.r.wrap.b32 	%r10499, %r10496, %r10497, 14;
	mov.b64 	%rd15160, {%r10499, %r10498};
	shf.r.wrap.b32 	%r10500, %r10497, %r10496, 18;
	shf.r.wrap.b32 	%r10501, %r10496, %r10497, 18;
	mov.b64 	%rd15161, {%r10501, %r10500};
	xor.b64  	%rd15162, %rd15161, %rd15160;
	shf.l.wrap.b32 	%r10502, %r10496, %r10497, 23;
	shf.l.wrap.b32 	%r10503, %r10497, %r10496, 23;
	mov.b64 	%rd15163, {%r10503, %r10502};
	xor.b64  	%rd15164, %rd15162, %rd15163;
	xor.b64  	%rd15165, %rd15119, %rd15092;
	and.b64  	%rd15166, %rd15146, %rd15165;
	xor.b64  	%rd15167, %rd15166, %rd15092;
	add.s64 	%rd15168, %rd15065, %rd18919;
	ld.const.u64 	%rd15169, [%rd15159];
	add.s64 	%rd15170, %rd15168, %rd15169;
	add.s64 	%rd15171, %rd15170, %rd15167;
	add.s64 	%rd15172, %rd15171, %rd15164;
	add.s64 	%rd15173, %rd15172, %rd15076;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10504,%dummy}, %rd15157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10505}, %rd15157;
	}
	shf.r.wrap.b32 	%r10506, %r10505, %r10504, 28;
	shf.r.wrap.b32 	%r10507, %r10504, %r10505, 28;
	mov.b64 	%rd15174, {%r10507, %r10506};
	shf.l.wrap.b32 	%r10508, %r10504, %r10505, 30;
	shf.l.wrap.b32 	%r10509, %r10505, %r10504, 30;
	mov.b64 	%rd15175, {%r10509, %r10508};
	xor.b64  	%rd15176, %rd15175, %rd15174;
	shf.l.wrap.b32 	%r10510, %r10504, %r10505, 25;
	shf.l.wrap.b32 	%r10511, %r10505, %r10504, 25;
	mov.b64 	%rd15177, {%r10511, %r10510};
	xor.b64  	%rd15178, %rd15176, %rd15177;
	and.b64  	%rd15179, %rd15157, %rd15130;
	xor.b64  	%rd15180, %rd15157, %rd15130;
	and.b64  	%rd15181, %rd15180, %rd15103;
	or.b64  	%rd15182, %rd15181, %rd15179;
	add.s64 	%rd15183, %rd15172, %rd15182;
	add.s64 	%rd15184, %rd15183, %rd15178;
	add.s32 	%r10512, %r13048, 8;
	mul.wide.s32 	%rd15185, %r10512, 8;
	add.s64 	%rd15186, %rd18516, %rd15185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10513,%dummy}, %rd15173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10514}, %rd15173;
	}
	shf.r.wrap.b32 	%r10515, %r10514, %r10513, 14;
	shf.r.wrap.b32 	%r10516, %r10513, %r10514, 14;
	mov.b64 	%rd15187, {%r10516, %r10515};
	shf.r.wrap.b32 	%r10517, %r10514, %r10513, 18;
	shf.r.wrap.b32 	%r10518, %r10513, %r10514, 18;
	mov.b64 	%rd15188, {%r10518, %r10517};
	xor.b64  	%rd15189, %rd15188, %rd15187;
	shf.l.wrap.b32 	%r10519, %r10513, %r10514, 23;
	shf.l.wrap.b32 	%r10520, %r10514, %r10513, 23;
	mov.b64 	%rd15190, {%r10520, %r10519};
	xor.b64  	%rd15191, %rd15189, %rd15190;
	xor.b64  	%rd15192, %rd15146, %rd15119;
	and.b64  	%rd15193, %rd15173, %rd15192;
	xor.b64  	%rd15194, %rd15193, %rd15119;
	add.s64 	%rd15195, %rd15092, %rd18903;
	ld.const.u64 	%rd15196, [%rd15186];
	add.s64 	%rd15197, %rd15195, %rd15196;
	add.s64 	%rd15198, %rd15197, %rd15194;
	add.s64 	%rd15199, %rd15198, %rd15191;
	add.s64 	%rd15200, %rd15199, %rd15103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10521,%dummy}, %rd15184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10522}, %rd15184;
	}
	shf.r.wrap.b32 	%r10523, %r10522, %r10521, 28;
	shf.r.wrap.b32 	%r10524, %r10521, %r10522, 28;
	mov.b64 	%rd15201, {%r10524, %r10523};
	shf.l.wrap.b32 	%r10525, %r10521, %r10522, 30;
	shf.l.wrap.b32 	%r10526, %r10522, %r10521, 30;
	mov.b64 	%rd15202, {%r10526, %r10525};
	xor.b64  	%rd15203, %rd15202, %rd15201;
	shf.l.wrap.b32 	%r10527, %r10521, %r10522, 25;
	shf.l.wrap.b32 	%r10528, %r10522, %r10521, 25;
	mov.b64 	%rd15204, {%r10528, %r10527};
	xor.b64  	%rd15205, %rd15203, %rd15204;
	and.b64  	%rd15206, %rd15184, %rd15157;
	xor.b64  	%rd15207, %rd15184, %rd15157;
	and.b64  	%rd15208, %rd15207, %rd15130;
	or.b64  	%rd15209, %rd15208, %rd15206;
	add.s64 	%rd15210, %rd15199, %rd15209;
	add.s64 	%rd15211, %rd15210, %rd15205;
	add.s32 	%r10529, %r13048, 9;
	mul.wide.s32 	%rd15212, %r10529, 8;
	add.s64 	%rd15213, %rd18516, %rd15212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10530,%dummy}, %rd15200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10531}, %rd15200;
	}
	shf.r.wrap.b32 	%r10532, %r10531, %r10530, 14;
	shf.r.wrap.b32 	%r10533, %r10530, %r10531, 14;
	mov.b64 	%rd15214, {%r10533, %r10532};
	shf.r.wrap.b32 	%r10534, %r10531, %r10530, 18;
	shf.r.wrap.b32 	%r10535, %r10530, %r10531, 18;
	mov.b64 	%rd15215, {%r10535, %r10534};
	xor.b64  	%rd15216, %rd15215, %rd15214;
	shf.l.wrap.b32 	%r10536, %r10530, %r10531, 23;
	shf.l.wrap.b32 	%r10537, %r10531, %r10530, 23;
	mov.b64 	%rd15217, {%r10537, %r10536};
	xor.b64  	%rd15218, %rd15216, %rd15217;
	xor.b64  	%rd15219, %rd15173, %rd15146;
	and.b64  	%rd15220, %rd15200, %rd15219;
	xor.b64  	%rd15221, %rd15220, %rd15146;
	add.s64 	%rd15222, %rd15119, %rd18902;
	ld.const.u64 	%rd15223, [%rd15213];
	add.s64 	%rd15224, %rd15222, %rd15223;
	add.s64 	%rd15225, %rd15224, %rd15221;
	add.s64 	%rd15226, %rd15225, %rd15218;
	add.s64 	%rd15227, %rd15226, %rd15130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10538,%dummy}, %rd15211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10539}, %rd15211;
	}
	shf.r.wrap.b32 	%r10540, %r10539, %r10538, 28;
	shf.r.wrap.b32 	%r10541, %r10538, %r10539, 28;
	mov.b64 	%rd15228, {%r10541, %r10540};
	shf.l.wrap.b32 	%r10542, %r10538, %r10539, 30;
	shf.l.wrap.b32 	%r10543, %r10539, %r10538, 30;
	mov.b64 	%rd15229, {%r10543, %r10542};
	xor.b64  	%rd15230, %rd15229, %rd15228;
	shf.l.wrap.b32 	%r10544, %r10538, %r10539, 25;
	shf.l.wrap.b32 	%r10545, %r10539, %r10538, 25;
	mov.b64 	%rd15231, {%r10545, %r10544};
	xor.b64  	%rd15232, %rd15230, %rd15231;
	and.b64  	%rd15233, %rd15211, %rd15184;
	xor.b64  	%rd15234, %rd15211, %rd15184;
	and.b64  	%rd15235, %rd15234, %rd15157;
	or.b64  	%rd15236, %rd15235, %rd15233;
	add.s64 	%rd15237, %rd15226, %rd15236;
	add.s64 	%rd15238, %rd15237, %rd15232;
	add.s32 	%r10546, %r13048, 10;
	mul.wide.s32 	%rd15239, %r10546, 8;
	add.s64 	%rd15240, %rd18516, %rd15239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10547,%dummy}, %rd15227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10548}, %rd15227;
	}
	shf.r.wrap.b32 	%r10549, %r10548, %r10547, 14;
	shf.r.wrap.b32 	%r10550, %r10547, %r10548, 14;
	mov.b64 	%rd15241, {%r10550, %r10549};
	shf.r.wrap.b32 	%r10551, %r10548, %r10547, 18;
	shf.r.wrap.b32 	%r10552, %r10547, %r10548, 18;
	mov.b64 	%rd15242, {%r10552, %r10551};
	xor.b64  	%rd15243, %rd15242, %rd15241;
	shf.l.wrap.b32 	%r10553, %r10547, %r10548, 23;
	shf.l.wrap.b32 	%r10554, %r10548, %r10547, 23;
	mov.b64 	%rd15244, {%r10554, %r10553};
	xor.b64  	%rd15245, %rd15243, %rd15244;
	xor.b64  	%rd15246, %rd15200, %rd15173;
	and.b64  	%rd15247, %rd15227, %rd15246;
	xor.b64  	%rd15248, %rd15247, %rd15173;
	add.s64 	%rd15249, %rd15146, %rd18901;
	ld.const.u64 	%rd15250, [%rd15240];
	add.s64 	%rd15251, %rd15249, %rd15250;
	add.s64 	%rd15252, %rd15251, %rd15248;
	add.s64 	%rd15253, %rd15252, %rd15245;
	add.s64 	%rd15254, %rd15253, %rd15157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10555,%dummy}, %rd15238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10556}, %rd15238;
	}
	shf.r.wrap.b32 	%r10557, %r10556, %r10555, 28;
	shf.r.wrap.b32 	%r10558, %r10555, %r10556, 28;
	mov.b64 	%rd15255, {%r10558, %r10557};
	shf.l.wrap.b32 	%r10559, %r10555, %r10556, 30;
	shf.l.wrap.b32 	%r10560, %r10556, %r10555, 30;
	mov.b64 	%rd15256, {%r10560, %r10559};
	xor.b64  	%rd15257, %rd15256, %rd15255;
	shf.l.wrap.b32 	%r10561, %r10555, %r10556, 25;
	shf.l.wrap.b32 	%r10562, %r10556, %r10555, 25;
	mov.b64 	%rd15258, {%r10562, %r10561};
	xor.b64  	%rd15259, %rd15257, %rd15258;
	and.b64  	%rd15260, %rd15238, %rd15211;
	xor.b64  	%rd15261, %rd15238, %rd15211;
	and.b64  	%rd15262, %rd15261, %rd15184;
	or.b64  	%rd15263, %rd15262, %rd15260;
	add.s64 	%rd15264, %rd15253, %rd15263;
	add.s64 	%rd15265, %rd15264, %rd15259;
	add.s32 	%r10563, %r13048, 11;
	mul.wide.s32 	%rd15266, %r10563, 8;
	add.s64 	%rd15267, %rd18516, %rd15266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10564,%dummy}, %rd15254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10565}, %rd15254;
	}
	shf.r.wrap.b32 	%r10566, %r10565, %r10564, 14;
	shf.r.wrap.b32 	%r10567, %r10564, %r10565, 14;
	mov.b64 	%rd15268, {%r10567, %r10566};
	shf.r.wrap.b32 	%r10568, %r10565, %r10564, 18;
	shf.r.wrap.b32 	%r10569, %r10564, %r10565, 18;
	mov.b64 	%rd15269, {%r10569, %r10568};
	xor.b64  	%rd15270, %rd15269, %rd15268;
	shf.l.wrap.b32 	%r10570, %r10564, %r10565, 23;
	shf.l.wrap.b32 	%r10571, %r10565, %r10564, 23;
	mov.b64 	%rd15271, {%r10571, %r10570};
	xor.b64  	%rd15272, %rd15270, %rd15271;
	xor.b64  	%rd15273, %rd15227, %rd15200;
	and.b64  	%rd15274, %rd15254, %rd15273;
	xor.b64  	%rd15275, %rd15274, %rd15200;
	add.s64 	%rd15276, %rd15173, %rd18900;
	ld.const.u64 	%rd15277, [%rd15267];
	add.s64 	%rd15278, %rd15276, %rd15277;
	add.s64 	%rd15279, %rd15278, %rd15275;
	add.s64 	%rd15280, %rd15279, %rd15272;
	add.s64 	%rd15281, %rd15280, %rd15184;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10572,%dummy}, %rd15265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10573}, %rd15265;
	}
	shf.r.wrap.b32 	%r10574, %r10573, %r10572, 28;
	shf.r.wrap.b32 	%r10575, %r10572, %r10573, 28;
	mov.b64 	%rd15282, {%r10575, %r10574};
	shf.l.wrap.b32 	%r10576, %r10572, %r10573, 30;
	shf.l.wrap.b32 	%r10577, %r10573, %r10572, 30;
	mov.b64 	%rd15283, {%r10577, %r10576};
	xor.b64  	%rd15284, %rd15283, %rd15282;
	shf.l.wrap.b32 	%r10578, %r10572, %r10573, 25;
	shf.l.wrap.b32 	%r10579, %r10573, %r10572, 25;
	mov.b64 	%rd15285, {%r10579, %r10578};
	xor.b64  	%rd15286, %rd15284, %rd15285;
	and.b64  	%rd15287, %rd15265, %rd15238;
	xor.b64  	%rd15288, %rd15265, %rd15238;
	and.b64  	%rd15289, %rd15288, %rd15211;
	or.b64  	%rd15290, %rd15289, %rd15287;
	add.s64 	%rd15291, %rd15280, %rd15290;
	add.s64 	%rd15292, %rd15291, %rd15286;
	add.s32 	%r10580, %r13048, 12;
	mul.wide.s32 	%rd15293, %r10580, 8;
	add.s64 	%rd15294, %rd18516, %rd15293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10581,%dummy}, %rd15281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10582}, %rd15281;
	}
	shf.r.wrap.b32 	%r10583, %r10582, %r10581, 14;
	shf.r.wrap.b32 	%r10584, %r10581, %r10582, 14;
	mov.b64 	%rd15295, {%r10584, %r10583};
	shf.r.wrap.b32 	%r10585, %r10582, %r10581, 18;
	shf.r.wrap.b32 	%r10586, %r10581, %r10582, 18;
	mov.b64 	%rd15296, {%r10586, %r10585};
	xor.b64  	%rd15297, %rd15296, %rd15295;
	shf.l.wrap.b32 	%r10587, %r10581, %r10582, 23;
	shf.l.wrap.b32 	%r10588, %r10582, %r10581, 23;
	mov.b64 	%rd15298, {%r10588, %r10587};
	xor.b64  	%rd15299, %rd15297, %rd15298;
	xor.b64  	%rd15300, %rd15254, %rd15227;
	and.b64  	%rd15301, %rd15281, %rd15300;
	xor.b64  	%rd15302, %rd15301, %rd15227;
	add.s64 	%rd15303, %rd15200, %rd18899;
	ld.const.u64 	%rd15304, [%rd15294];
	add.s64 	%rd15305, %rd15303, %rd15304;
	add.s64 	%rd15306, %rd15305, %rd15302;
	add.s64 	%rd15307, %rd15306, %rd15299;
	add.s64 	%rd18911, %rd15307, %rd15211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10589,%dummy}, %rd15292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10590}, %rd15292;
	}
	shf.r.wrap.b32 	%r10591, %r10590, %r10589, 28;
	shf.r.wrap.b32 	%r10592, %r10589, %r10590, 28;
	mov.b64 	%rd15308, {%r10592, %r10591};
	shf.l.wrap.b32 	%r10593, %r10589, %r10590, 30;
	shf.l.wrap.b32 	%r10594, %r10590, %r10589, 30;
	mov.b64 	%rd15309, {%r10594, %r10593};
	xor.b64  	%rd15310, %rd15309, %rd15308;
	shf.l.wrap.b32 	%r10595, %r10589, %r10590, 25;
	shf.l.wrap.b32 	%r10596, %r10590, %r10589, 25;
	mov.b64 	%rd15311, {%r10596, %r10595};
	xor.b64  	%rd15312, %rd15310, %rd15311;
	and.b64  	%rd15313, %rd15292, %rd15265;
	xor.b64  	%rd15314, %rd15292, %rd15265;
	and.b64  	%rd15315, %rd15314, %rd15238;
	or.b64  	%rd15316, %rd15315, %rd15313;
	add.s64 	%rd15317, %rd15307, %rd15316;
	add.s64 	%rd18907, %rd15317, %rd15312;
	add.s32 	%r10597, %r13048, 13;
	mul.wide.s32 	%rd15318, %r10597, 8;
	add.s64 	%rd15319, %rd18516, %rd15318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10598,%dummy}, %rd18911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10599}, %rd18911;
	}
	shf.r.wrap.b32 	%r10600, %r10599, %r10598, 14;
	shf.r.wrap.b32 	%r10601, %r10598, %r10599, 14;
	mov.b64 	%rd15320, {%r10601, %r10600};
	shf.r.wrap.b32 	%r10602, %r10599, %r10598, 18;
	shf.r.wrap.b32 	%r10603, %r10598, %r10599, 18;
	mov.b64 	%rd15321, {%r10603, %r10602};
	xor.b64  	%rd15322, %rd15321, %rd15320;
	shf.l.wrap.b32 	%r10604, %r10598, %r10599, 23;
	shf.l.wrap.b32 	%r10605, %r10599, %r10598, 23;
	mov.b64 	%rd15323, {%r10605, %r10604};
	xor.b64  	%rd15324, %rd15322, %rd15323;
	xor.b64  	%rd15325, %rd15281, %rd15254;
	and.b64  	%rd15326, %rd18911, %rd15325;
	xor.b64  	%rd15327, %rd15326, %rd15254;
	add.s64 	%rd15328, %rd15227, %rd18898;
	ld.const.u64 	%rd15329, [%rd15319];
	add.s64 	%rd15330, %rd15328, %rd15329;
	add.s64 	%rd15331, %rd15330, %rd15327;
	add.s64 	%rd15332, %rd15331, %rd15324;
	add.s64 	%rd18910, %rd15332, %rd15238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10606,%dummy}, %rd18907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10607}, %rd18907;
	}
	shf.r.wrap.b32 	%r10608, %r10607, %r10606, 28;
	shf.r.wrap.b32 	%r10609, %r10606, %r10607, 28;
	mov.b64 	%rd15333, {%r10609, %r10608};
	shf.l.wrap.b32 	%r10610, %r10606, %r10607, 30;
	shf.l.wrap.b32 	%r10611, %r10607, %r10606, 30;
	mov.b64 	%rd15334, {%r10611, %r10610};
	xor.b64  	%rd15335, %rd15334, %rd15333;
	shf.l.wrap.b32 	%r10612, %r10606, %r10607, 25;
	shf.l.wrap.b32 	%r10613, %r10607, %r10606, 25;
	mov.b64 	%rd15336, {%r10613, %r10612};
	xor.b64  	%rd15337, %rd15335, %rd15336;
	and.b64  	%rd15338, %rd18907, %rd15292;
	xor.b64  	%rd15339, %rd18907, %rd15292;
	and.b64  	%rd15340, %rd15339, %rd15265;
	or.b64  	%rd15341, %rd15340, %rd15338;
	add.s64 	%rd15342, %rd15332, %rd15341;
	add.s64 	%rd18906, %rd15342, %rd15337;
	add.s32 	%r10614, %r13048, 14;
	mul.wide.s32 	%rd15343, %r10614, 8;
	add.s64 	%rd15344, %rd18516, %rd15343;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10615,%dummy}, %rd18910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10616}, %rd18910;
	}
	shf.r.wrap.b32 	%r10617, %r10616, %r10615, 14;
	shf.r.wrap.b32 	%r10618, %r10615, %r10616, 14;
	mov.b64 	%rd15345, {%r10618, %r10617};
	shf.r.wrap.b32 	%r10619, %r10616, %r10615, 18;
	shf.r.wrap.b32 	%r10620, %r10615, %r10616, 18;
	mov.b64 	%rd15346, {%r10620, %r10619};
	xor.b64  	%rd15347, %rd15346, %rd15345;
	shf.l.wrap.b32 	%r10621, %r10615, %r10616, 23;
	shf.l.wrap.b32 	%r10622, %r10616, %r10615, 23;
	mov.b64 	%rd15348, {%r10622, %r10621};
	xor.b64  	%rd15349, %rd15347, %rd15348;
	xor.b64  	%rd15350, %rd18911, %rd15281;
	and.b64  	%rd15351, %rd18910, %rd15350;
	xor.b64  	%rd15352, %rd15351, %rd15281;
	add.s64 	%rd15353, %rd15254, %rd18897;
	ld.const.u64 	%rd15354, [%rd15344];
	add.s64 	%rd15355, %rd15353, %rd15354;
	add.s64 	%rd15356, %rd15355, %rd15352;
	add.s64 	%rd15357, %rd15356, %rd15349;
	add.s64 	%rd18909, %rd15357, %rd15265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10623,%dummy}, %rd18906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10624}, %rd18906;
	}
	shf.r.wrap.b32 	%r10625, %r10624, %r10623, 28;
	shf.r.wrap.b32 	%r10626, %r10623, %r10624, 28;
	mov.b64 	%rd15358, {%r10626, %r10625};
	shf.l.wrap.b32 	%r10627, %r10623, %r10624, 30;
	shf.l.wrap.b32 	%r10628, %r10624, %r10623, 30;
	mov.b64 	%rd15359, {%r10628, %r10627};
	xor.b64  	%rd15360, %rd15359, %rd15358;
	shf.l.wrap.b32 	%r10629, %r10623, %r10624, 25;
	shf.l.wrap.b32 	%r10630, %r10624, %r10623, 25;
	mov.b64 	%rd15361, {%r10630, %r10629};
	xor.b64  	%rd15362, %rd15360, %rd15361;
	and.b64  	%rd15363, %rd18906, %rd18907;
	xor.b64  	%rd15364, %rd18906, %rd18907;
	and.b64  	%rd15365, %rd15364, %rd15292;
	or.b64  	%rd15366, %rd15365, %rd15363;
	add.s64 	%rd15367, %rd15357, %rd15366;
	add.s64 	%rd18905, %rd15367, %rd15362;
	add.s32 	%r10631, %r13048, 15;
	mul.wide.s32 	%rd15368, %r10631, 8;
	add.s64 	%rd15369, %rd18516, %rd15368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10632,%dummy}, %rd18909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10633}, %rd18909;
	}
	shf.r.wrap.b32 	%r10634, %r10633, %r10632, 14;
	shf.r.wrap.b32 	%r10635, %r10632, %r10633, 14;
	mov.b64 	%rd15370, {%r10635, %r10634};
	shf.r.wrap.b32 	%r10636, %r10633, %r10632, 18;
	shf.r.wrap.b32 	%r10637, %r10632, %r10633, 18;
	mov.b64 	%rd15371, {%r10637, %r10636};
	xor.b64  	%rd15372, %rd15371, %rd15370;
	shf.l.wrap.b32 	%r10638, %r10632, %r10633, 23;
	shf.l.wrap.b32 	%r10639, %r10633, %r10632, 23;
	mov.b64 	%rd15373, {%r10639, %r10638};
	xor.b64  	%rd15374, %rd15372, %rd15373;
	xor.b64  	%rd15375, %rd18910, %rd18911;
	and.b64  	%rd15376, %rd18909, %rd15375;
	xor.b64  	%rd15377, %rd15376, %rd18911;
	add.s64 	%rd15378, %rd15281, %rd18896;
	ld.const.u64 	%rd15379, [%rd15369];
	add.s64 	%rd15380, %rd15378, %rd15379;
	add.s64 	%rd15381, %rd15380, %rd15377;
	add.s64 	%rd15382, %rd15381, %rd15374;
	add.s64 	%rd18908, %rd15382, %rd15292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10640,%dummy}, %rd18905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10641}, %rd18905;
	}
	shf.r.wrap.b32 	%r10642, %r10641, %r10640, 28;
	shf.r.wrap.b32 	%r10643, %r10640, %r10641, 28;
	mov.b64 	%rd15383, {%r10643, %r10642};
	shf.l.wrap.b32 	%r10644, %r10640, %r10641, 30;
	shf.l.wrap.b32 	%r10645, %r10641, %r10640, 30;
	mov.b64 	%rd15384, {%r10645, %r10644};
	xor.b64  	%rd15385, %rd15384, %rd15383;
	shf.l.wrap.b32 	%r10646, %r10640, %r10641, 25;
	shf.l.wrap.b32 	%r10647, %r10641, %r10640, 25;
	mov.b64 	%rd15386, {%r10647, %r10646};
	xor.b64  	%rd15387, %rd15385, %rd15386;
	and.b64  	%rd15388, %rd18905, %rd18906;
	xor.b64  	%rd15389, %rd18905, %rd18906;
	and.b64  	%rd15390, %rd15389, %rd18907;
	or.b64  	%rd15391, %rd15390, %rd15388;
	add.s64 	%rd15392, %rd15382, %rd15391;
	add.s64 	%rd18904, %rd15392, %rd15387;
	add.s32 	%r13048, %r13048, 16;
	setp.lt.s32	%p177, %r13048, 80;
	@%p177 bra 	BB0_288;

	mov.u64 	%rd18512, 6620516959819538809;
	mov.u64 	%rd18495, 2270897969802886507;
	mov.u64 	%rd18494, -7276294671716946913;
	mov.u64 	%rd18493, 5840696475078001361;
	mov.u64 	%rd18492, -6534734903238641935;
	mov.u64 	%rd18491, 4354685564936845355;
	mov.u64 	%rd18490, -4942790177534073029;
	mov.u64 	%rd18489, 7640891576956012808;
	add.s64 	%rd15395, %rd18904, %rd18880;
	st.global.u64 	[%rd12232+64], %rd15395;
	add.s64 	%rd15396, %rd18905, %rd18879;
	st.global.u64 	[%rd12232+72], %rd15396;
	st.local.u64 	[%rd1], %rd18489;
	st.local.u64 	[%rd1+8], %rd18490;
	st.local.u64 	[%rd1+16], %rd18491;
	st.local.u64 	[%rd1+24], %rd18492;
	st.local.u64 	[%rd1+32], %rd18493;
	st.local.u64 	[%rd1+40], %rd18494;
	st.local.u64 	[%rd1+48], %rd18495;
	st.local.u64 	[%rd1+56], %rd18512;
	mov.u32 	%r13049, 0;
	st.local.u32 	[%rd1+192], %r13049;
	and.b32  	%r418, %r3, 3;
	add.s64 	%rd1183, %rd1465, 7;
	shr.u64 	%rd15406, %rd921, 56;
	add.s64 	%rd1184, %rd15406, 16;
	add.s64 	%rd1185, %rd89, 7;
	mov.u32 	%r13050, %r13049;
	bra.uni 	BB0_290;

BB0_338:
	ld.local.u32 	%r13049, [%rd1+192];

BB0_290:
	add.s32 	%r10650, %r13049, %r3;
	st.local.u32 	[%rd1+192], %r10650;
	and.b32  	%r421, %r13049, 127;
	add.s32 	%r422, %r421, %r3;
	setp.lt.s32	%p178, %r422, 128;
	@%p178 bra 	BB0_311;
	bra.uni 	BB0_291;

BB0_311:
	setp.lt.s32	%p191, %r3, 1;
	@%p191 bra 	BB0_320;

	mov.u32 	%r13065, 0;
	setp.eq.s32	%p192, %r418, 0;
	@%p192 bra 	BB0_318;

	setp.eq.s32	%p193, %r418, 1;
	@%p193 bra 	BB0_317;

	setp.eq.s32	%p194, %r418, 2;
	@%p194 bra 	BB0_316;

	ld.local.u8 	%rs266, [%rd1183];
	xor.b32  	%r11420, %r421, 7;
	cvt.u64.u32	%rd16460, %r11420;
	add.s64 	%rd16461, %rd89, %rd16460;
	st.local.u8 	[%rd16461], %rs266;
	add.s32 	%r421, %r421, 1;
	mov.u32 	%r13065, 1;

BB0_316:
	xor.b32  	%r11421, %r13065, 7;
	cvt.u64.u32	%rd16462, %r11421;
	add.s64 	%rd16463, %rd1465, %rd16462;
	ld.local.u8 	%rs267, [%rd16463];
	xor.b32  	%r11422, %r421, 7;
	cvt.s64.s32	%rd16464, %r11422;
	add.s64 	%rd16465, %rd89, %rd16464;
	st.local.u8 	[%rd16465], %rs267;
	add.s32 	%r421, %r421, 1;
	add.s32 	%r13065, %r13065, 1;

BB0_317:
	xor.b32  	%r11423, %r13065, 7;
	cvt.s64.s32	%rd16466, %r11423;
	add.s64 	%rd16467, %rd1465, %rd16466;
	ld.local.u8 	%rs268, [%rd16467];
	xor.b32  	%r11424, %r421, 7;
	cvt.s64.s32	%rd16468, %r11424;
	add.s64 	%rd16469, %rd89, %rd16468;
	st.local.u8 	[%rd16469], %rs268;
	add.s32 	%r421, %r421, 1;
	add.s32 	%r13065, %r13065, 1;

BB0_318:
	setp.lt.u32	%p195, %r3, 4;
	@%p195 bra 	BB0_320;

BB0_319:
	xor.b32  	%r11425, %r13065, 7;
	cvt.s64.s32	%rd16470, %r11425;
	add.s64 	%rd16471, %rd1465, %rd16470;
	ld.local.u8 	%rs269, [%rd16471];
	xor.b32  	%r11426, %r421, 7;
	cvt.s64.s32	%rd16472, %r11426;
	add.s64 	%rd16473, %rd89, %rd16472;
	st.local.u8 	[%rd16473], %rs269;
	add.s32 	%r11427, %r13065, 1;
	xor.b32  	%r11428, %r11427, 7;
	cvt.s64.s32	%rd16474, %r11428;
	add.s64 	%rd16475, %rd1465, %rd16474;
	ld.local.u8 	%rs270, [%rd16475];
	add.s32 	%r11429, %r421, 1;
	xor.b32  	%r11430, %r11429, 7;
	cvt.s64.s32	%rd16476, %r11430;
	add.s64 	%rd16477, %rd89, %rd16476;
	st.local.u8 	[%rd16477], %rs270;
	add.s32 	%r11431, %r13065, 2;
	xor.b32  	%r11432, %r11431, 7;
	cvt.s64.s32	%rd16478, %r11432;
	add.s64 	%rd16479, %rd1465, %rd16478;
	ld.local.u8 	%rs271, [%rd16479];
	add.s32 	%r11433, %r421, 2;
	xor.b32  	%r11434, %r11433, 7;
	cvt.s64.s32	%rd16480, %r11434;
	add.s64 	%rd16481, %rd89, %rd16480;
	st.local.u8 	[%rd16481], %rs271;
	add.s32 	%r11435, %r13065, 3;
	xor.b32  	%r11436, %r11435, 7;
	cvt.s64.s32	%rd16482, %r11436;
	add.s64 	%rd16483, %rd1465, %rd16482;
	ld.local.u8 	%rs272, [%rd16483];
	add.s32 	%r11437, %r421, 3;
	xor.b32  	%r11438, %r11437, 7;
	cvt.s64.s32	%rd16484, %r11438;
	add.s64 	%rd16485, %rd89, %rd16484;
	st.local.u8 	[%rd16485], %rs272;
	add.s32 	%r13065, %r13065, 4;
	setp.lt.s32	%p196, %r13065, %r3;
	add.s32 	%r421, %r421, 4;
	@%p196 bra 	BB0_319;
	bra.uni 	BB0_320;

BB0_291:
	sub.s32 	%r423, %r2137, %r421;
	mov.u32 	%r10653, 1;
	max.u32 	%r424, %r423, %r10653;
	and.b32  	%r425, %r424, 3;
	setp.eq.s32	%p179, %r425, 0;
	mov.u32 	%r13057, 0;
	@%p179 bra 	BB0_298;

	setp.eq.s32	%p180, %r425, 1;
	mov.u32 	%r13053, 0;
	@%p180 bra 	BB0_297;

	setp.eq.s32	%p181, %r425, 2;
	mov.u32 	%r10655, 0;
	@%p181 bra 	BB0_294;
	bra.uni 	BB0_295;

BB0_294:
	mov.u32 	%r10653, %r10655;
	bra.uni 	BB0_296;

BB0_295:
	ld.local.u8 	%rs252, [%rd1183];
	xor.b32  	%r10657, %r421, 7;
	cvt.u64.u32	%rd15407, %r10657;
	add.s64 	%rd15408, %rd89, %rd15407;
	st.local.u8 	[%rd15408], %rs252;
	add.s32 	%r421, %r421, 1;

BB0_296:
	xor.b32  	%r10658, %r10653, 7;
	cvt.u64.u32	%rd15409, %r10658;
	add.s64 	%rd15410, %rd1465, %rd15409;
	ld.local.u8 	%rs253, [%rd15410];
	xor.b32  	%r10659, %r421, 7;
	cvt.s64.s32	%rd15411, %r10659;
	add.s64 	%rd15412, %rd89, %rd15411;
	st.local.u8 	[%rd15412], %rs253;
	add.s32 	%r421, %r421, 1;
	add.s32 	%r13053, %r10653, 1;

BB0_297:
	xor.b32  	%r10660, %r13053, 7;
	cvt.s64.s32	%rd15413, %r10660;
	add.s64 	%rd15414, %rd1465, %rd15413;
	ld.local.u8 	%rs254, [%rd15414];
	xor.b32  	%r10661, %r421, 7;
	cvt.s64.s32	%rd15415, %r10661;
	add.s64 	%rd15416, %rd89, %rd15415;
	st.local.u8 	[%rd15416], %rs254;
	add.s32 	%r421, %r421, 1;
	add.s32 	%r13057, %r13053, 1;

BB0_298:
	setp.lt.u32	%p182, %r424, 4;
	@%p182 bra 	BB0_300;

BB0_299:
	xor.b32  	%r10662, %r13057, 7;
	cvt.s64.s32	%rd15417, %r10662;
	add.s64 	%rd15418, %rd1465, %rd15417;
	ld.local.u8 	%rs255, [%rd15418];
	xor.b32  	%r10663, %r421, 7;
	cvt.s64.s32	%rd15419, %r10663;
	add.s64 	%rd15420, %rd89, %rd15419;
	st.local.u8 	[%rd15420], %rs255;
	add.s32 	%r10664, %r13057, 1;
	xor.b32  	%r10665, %r10664, 7;
	cvt.s64.s32	%rd15421, %r10665;
	add.s64 	%rd15422, %rd1465, %rd15421;
	ld.local.u8 	%rs256, [%rd15422];
	add.s32 	%r10666, %r421, 1;
	xor.b32  	%r10667, %r10666, 7;
	cvt.s64.s32	%rd15423, %r10667;
	add.s64 	%rd15424, %rd89, %rd15423;
	st.local.u8 	[%rd15424], %rs256;
	add.s32 	%r10668, %r13057, 2;
	xor.b32  	%r10669, %r10668, 7;
	cvt.s64.s32	%rd15425, %r10669;
	add.s64 	%rd15426, %rd1465, %rd15425;
	ld.local.u8 	%rs257, [%rd15426];
	add.s32 	%r10670, %r421, 2;
	xor.b32  	%r10671, %r10670, 7;
	cvt.s64.s32	%rd15427, %r10671;
	add.s64 	%rd15428, %rd89, %rd15427;
	st.local.u8 	[%rd15428], %rs257;
	add.s32 	%r10672, %r13057, 3;
	xor.b32  	%r10673, %r10672, 7;
	cvt.s64.s32	%rd15429, %r10673;
	add.s64 	%rd15430, %rd1465, %rd15429;
	ld.local.u8 	%rs258, [%rd15430];
	add.s32 	%r10674, %r421, 3;
	xor.b32  	%r10675, %r10674, 7;
	cvt.s64.s32	%rd15431, %r10675;
	add.s64 	%rd15432, %rd89, %rd15431;
	st.local.u8 	[%rd15432], %rs258;
	add.s32 	%r13057, %r13057, 4;
	setp.lt.s32	%p183, %r13057, %r423;
	add.s32 	%r421, %r421, 4;
	@%p183 bra 	BB0_299;

BB0_300:
	ld.local.u64 	%rd1186, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10677,%dummy}, %rd1186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10678}, %rd1186;
	}
	shf.r.wrap.b32 	%r10679, %r10678, %r10677, 14;
	shf.r.wrap.b32 	%r10680, %r10677, %r10678, 14;
	mov.b64 	%rd15433, {%r10680, %r10679};
	shf.r.wrap.b32 	%r10681, %r10678, %r10677, 18;
	shf.r.wrap.b32 	%r10682, %r10677, %r10678, 18;
	mov.b64 	%rd15434, {%r10682, %r10681};
	xor.b64  	%rd15435, %rd15434, %rd15433;
	shf.l.wrap.b32 	%r10683, %r10677, %r10678, 23;
	shf.l.wrap.b32 	%r10684, %r10678, %r10677, 23;
	mov.b64 	%rd15436, {%r10684, %r10683};
	xor.b64  	%rd15437, %rd15435, %rd15436;
	ld.local.u64 	%rd1187, [%rd1+48];
	ld.local.u64 	%rd1188, [%rd1+40];
	xor.b64  	%rd15438, %rd1187, %rd1188;
	and.b64  	%rd15439, %rd15438, %rd1186;
	xor.b64  	%rd15440, %rd15439, %rd1187;
	ld.local.u64 	%rd1189, [%rd1+56];
	ld.local.u64 	%rd18936, [%rd1+64];
	add.s64 	%rd15441, %rd1189, %rd18936;
	add.s64 	%rd15442, %rd15441, %rd18610;
	add.s64 	%rd15443, %rd15442, %rd15440;
	add.s64 	%rd15444, %rd15443, %rd15437;
	ld.local.u64 	%rd1191, [%rd1+24];
	add.s64 	%rd15445, %rd15444, %rd1191;
	ld.local.u64 	%rd1192, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10685,%dummy}, %rd1192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10686}, %rd1192;
	}
	shf.r.wrap.b32 	%r10687, %r10686, %r10685, 28;
	shf.r.wrap.b32 	%r10688, %r10685, %r10686, 28;
	mov.b64 	%rd15446, {%r10688, %r10687};
	shf.l.wrap.b32 	%r10689, %r10685, %r10686, 30;
	shf.l.wrap.b32 	%r10690, %r10686, %r10685, 30;
	mov.b64 	%rd15447, {%r10690, %r10689};
	xor.b64  	%rd15448, %rd15447, %rd15446;
	shf.l.wrap.b32 	%r10691, %r10685, %r10686, 25;
	shf.l.wrap.b32 	%r10692, %r10686, %r10685, 25;
	mov.b64 	%rd15449, {%r10692, %r10691};
	xor.b64  	%rd15450, %rd15448, %rd15449;
	ld.local.u64 	%rd1193, [%rd1+8];
	and.b64  	%rd15451, %rd1193, %rd1192;
	xor.b64  	%rd15452, %rd1193, %rd1192;
	ld.local.u64 	%rd1194, [%rd1+16];
	and.b64  	%rd15453, %rd1194, %rd15452;
	or.b64  	%rd15454, %rd15453, %rd15451;
	add.s64 	%rd15455, %rd15444, %rd15454;
	add.s64 	%rd15456, %rd15455, %rd15450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10693,%dummy}, %rd15445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10694}, %rd15445;
	}
	shf.r.wrap.b32 	%r10695, %r10694, %r10693, 14;
	shf.r.wrap.b32 	%r10696, %r10693, %r10694, 14;
	mov.b64 	%rd15457, {%r10696, %r10695};
	shf.r.wrap.b32 	%r10697, %r10694, %r10693, 18;
	shf.r.wrap.b32 	%r10698, %r10693, %r10694, 18;
	mov.b64 	%rd15458, {%r10698, %r10697};
	xor.b64  	%rd15459, %rd15458, %rd15457;
	shf.l.wrap.b32 	%r10699, %r10693, %r10694, 23;
	shf.l.wrap.b32 	%r10700, %r10694, %r10693, 23;
	mov.b64 	%rd15460, {%r10700, %r10699};
	xor.b64  	%rd15461, %rd15459, %rd15460;
	xor.b64  	%rd15462, %rd1188, %rd1186;
	and.b64  	%rd15463, %rd15445, %rd15462;
	xor.b64  	%rd15464, %rd15463, %rd1188;
	ld.local.u64 	%rd18937, [%rd1+72];
	add.s64 	%rd15465, %rd1187, %rd18937;
	add.s64 	%rd15466, %rd15465, %rd18609;
	add.s64 	%rd15467, %rd15466, %rd15464;
	add.s64 	%rd15468, %rd15467, %rd15461;
	add.s64 	%rd15469, %rd15468, %rd1194;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10701,%dummy}, %rd15456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10702}, %rd15456;
	}
	shf.r.wrap.b32 	%r10703, %r10702, %r10701, 28;
	shf.r.wrap.b32 	%r10704, %r10701, %r10702, 28;
	mov.b64 	%rd15470, {%r10704, %r10703};
	shf.l.wrap.b32 	%r10705, %r10701, %r10702, 30;
	shf.l.wrap.b32 	%r10706, %r10702, %r10701, 30;
	mov.b64 	%rd15471, {%r10706, %r10705};
	xor.b64  	%rd15472, %rd15471, %rd15470;
	shf.l.wrap.b32 	%r10707, %r10701, %r10702, 25;
	shf.l.wrap.b32 	%r10708, %r10702, %r10701, 25;
	mov.b64 	%rd15473, {%r10708, %r10707};
	xor.b64  	%rd15474, %rd15472, %rd15473;
	and.b64  	%rd15475, %rd15456, %rd1192;
	xor.b64  	%rd15476, %rd15456, %rd1192;
	and.b64  	%rd15477, %rd15476, %rd1193;
	or.b64  	%rd15478, %rd15477, %rd15475;
	add.s64 	%rd15479, %rd15468, %rd15478;
	add.s64 	%rd15480, %rd15479, %rd15474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10709,%dummy}, %rd15469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10710}, %rd15469;
	}
	shf.r.wrap.b32 	%r10711, %r10710, %r10709, 14;
	shf.r.wrap.b32 	%r10712, %r10709, %r10710, 14;
	mov.b64 	%rd15481, {%r10712, %r10711};
	shf.r.wrap.b32 	%r10713, %r10710, %r10709, 18;
	shf.r.wrap.b32 	%r10714, %r10709, %r10710, 18;
	mov.b64 	%rd15482, {%r10714, %r10713};
	xor.b64  	%rd15483, %rd15482, %rd15481;
	shf.l.wrap.b32 	%r10715, %r10709, %r10710, 23;
	shf.l.wrap.b32 	%r10716, %r10710, %r10709, 23;
	mov.b64 	%rd15484, {%r10716, %r10715};
	xor.b64  	%rd15485, %rd15483, %rd15484;
	xor.b64  	%rd15486, %rd15445, %rd1186;
	and.b64  	%rd15487, %rd15469, %rd15486;
	xor.b64  	%rd15488, %rd15487, %rd1186;
	ld.local.u64 	%rd18938, [%rd1+80];
	add.s64 	%rd15489, %rd1188, %rd18938;
	add.s64 	%rd15490, %rd15489, %rd18608;
	add.s64 	%rd15491, %rd15490, %rd15488;
	add.s64 	%rd15492, %rd15491, %rd15485;
	add.s64 	%rd15493, %rd15492, %rd1193;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10717,%dummy}, %rd15480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10718}, %rd15480;
	}
	shf.r.wrap.b32 	%r10719, %r10718, %r10717, 28;
	shf.r.wrap.b32 	%r10720, %r10717, %r10718, 28;
	mov.b64 	%rd15494, {%r10720, %r10719};
	shf.l.wrap.b32 	%r10721, %r10717, %r10718, 30;
	shf.l.wrap.b32 	%r10722, %r10718, %r10717, 30;
	mov.b64 	%rd15495, {%r10722, %r10721};
	xor.b64  	%rd15496, %rd15495, %rd15494;
	shf.l.wrap.b32 	%r10723, %r10717, %r10718, 25;
	shf.l.wrap.b32 	%r10724, %r10718, %r10717, 25;
	mov.b64 	%rd15497, {%r10724, %r10723};
	xor.b64  	%rd15498, %rd15496, %rd15497;
	and.b64  	%rd15499, %rd15480, %rd15456;
	xor.b64  	%rd15500, %rd15480, %rd15456;
	and.b64  	%rd15501, %rd15500, %rd1192;
	or.b64  	%rd15502, %rd15501, %rd15499;
	add.s64 	%rd15503, %rd15492, %rd15502;
	add.s64 	%rd15504, %rd15503, %rd15498;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10725,%dummy}, %rd15493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10726}, %rd15493;
	}
	shf.r.wrap.b32 	%r10727, %r10726, %r10725, 14;
	shf.r.wrap.b32 	%r10728, %r10725, %r10726, 14;
	mov.b64 	%rd15505, {%r10728, %r10727};
	shf.r.wrap.b32 	%r10729, %r10726, %r10725, 18;
	shf.r.wrap.b32 	%r10730, %r10725, %r10726, 18;
	mov.b64 	%rd15506, {%r10730, %r10729};
	xor.b64  	%rd15507, %rd15506, %rd15505;
	shf.l.wrap.b32 	%r10731, %r10725, %r10726, 23;
	shf.l.wrap.b32 	%r10732, %r10726, %r10725, 23;
	mov.b64 	%rd15508, {%r10732, %r10731};
	xor.b64  	%rd15509, %rd15507, %rd15508;
	xor.b64  	%rd15510, %rd15469, %rd15445;
	and.b64  	%rd15511, %rd15493, %rd15510;
	xor.b64  	%rd15512, %rd15511, %rd15445;
	ld.local.u64 	%rd18939, [%rd1+88];
	add.s64 	%rd15513, %rd1186, %rd18939;
	add.s64 	%rd15514, %rd15513, %rd18607;
	add.s64 	%rd15515, %rd15514, %rd15512;
	add.s64 	%rd15516, %rd15515, %rd15509;
	add.s64 	%rd15517, %rd15516, %rd1192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10733,%dummy}, %rd15504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10734}, %rd15504;
	}
	shf.r.wrap.b32 	%r10735, %r10734, %r10733, 28;
	shf.r.wrap.b32 	%r10736, %r10733, %r10734, 28;
	mov.b64 	%rd15518, {%r10736, %r10735};
	shf.l.wrap.b32 	%r10737, %r10733, %r10734, 30;
	shf.l.wrap.b32 	%r10738, %r10734, %r10733, 30;
	mov.b64 	%rd15519, {%r10738, %r10737};
	xor.b64  	%rd15520, %rd15519, %rd15518;
	shf.l.wrap.b32 	%r10739, %r10733, %r10734, 25;
	shf.l.wrap.b32 	%r10740, %r10734, %r10733, 25;
	mov.b64 	%rd15521, {%r10740, %r10739};
	xor.b64  	%rd15522, %rd15520, %rd15521;
	and.b64  	%rd15523, %rd15504, %rd15480;
	xor.b64  	%rd15524, %rd15504, %rd15480;
	and.b64  	%rd15525, %rd15524, %rd15456;
	or.b64  	%rd15526, %rd15525, %rd15523;
	add.s64 	%rd15527, %rd15516, %rd15526;
	add.s64 	%rd15528, %rd15527, %rd15522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10741,%dummy}, %rd15517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10742}, %rd15517;
	}
	shf.r.wrap.b32 	%r10743, %r10742, %r10741, 14;
	shf.r.wrap.b32 	%r10744, %r10741, %r10742, 14;
	mov.b64 	%rd15529, {%r10744, %r10743};
	shf.r.wrap.b32 	%r10745, %r10742, %r10741, 18;
	shf.r.wrap.b32 	%r10746, %r10741, %r10742, 18;
	mov.b64 	%rd15530, {%r10746, %r10745};
	xor.b64  	%rd15531, %rd15530, %rd15529;
	shf.l.wrap.b32 	%r10747, %r10741, %r10742, 23;
	shf.l.wrap.b32 	%r10748, %r10742, %r10741, 23;
	mov.b64 	%rd15532, {%r10748, %r10747};
	xor.b64  	%rd15533, %rd15531, %rd15532;
	xor.b64  	%rd15534, %rd15493, %rd15469;
	and.b64  	%rd15535, %rd15517, %rd15534;
	xor.b64  	%rd15536, %rd15535, %rd15469;
	ld.local.u64 	%rd18940, [%rd1+96];
	add.s64 	%rd15537, %rd15445, %rd18940;
	add.s64 	%rd15538, %rd15537, %rd18606;
	add.s64 	%rd15539, %rd15538, %rd15536;
	add.s64 	%rd15540, %rd15539, %rd15533;
	add.s64 	%rd15541, %rd15540, %rd15456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10749,%dummy}, %rd15528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10750}, %rd15528;
	}
	shf.r.wrap.b32 	%r10751, %r10750, %r10749, 28;
	shf.r.wrap.b32 	%r10752, %r10749, %r10750, 28;
	mov.b64 	%rd15542, {%r10752, %r10751};
	shf.l.wrap.b32 	%r10753, %r10749, %r10750, 30;
	shf.l.wrap.b32 	%r10754, %r10750, %r10749, 30;
	mov.b64 	%rd15543, {%r10754, %r10753};
	xor.b64  	%rd15544, %rd15543, %rd15542;
	shf.l.wrap.b32 	%r10755, %r10749, %r10750, 25;
	shf.l.wrap.b32 	%r10756, %r10750, %r10749, 25;
	mov.b64 	%rd15545, {%r10756, %r10755};
	xor.b64  	%rd15546, %rd15544, %rd15545;
	and.b64  	%rd15547, %rd15528, %rd15504;
	xor.b64  	%rd15548, %rd15528, %rd15504;
	and.b64  	%rd15549, %rd15548, %rd15480;
	or.b64  	%rd15550, %rd15549, %rd15547;
	add.s64 	%rd15551, %rd15540, %rd15550;
	add.s64 	%rd15552, %rd15551, %rd15546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10757,%dummy}, %rd15541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10758}, %rd15541;
	}
	shf.r.wrap.b32 	%r10759, %r10758, %r10757, 14;
	shf.r.wrap.b32 	%r10760, %r10757, %r10758, 14;
	mov.b64 	%rd15553, {%r10760, %r10759};
	shf.r.wrap.b32 	%r10761, %r10758, %r10757, 18;
	shf.r.wrap.b32 	%r10762, %r10757, %r10758, 18;
	mov.b64 	%rd15554, {%r10762, %r10761};
	xor.b64  	%rd15555, %rd15554, %rd15553;
	shf.l.wrap.b32 	%r10763, %r10757, %r10758, 23;
	shf.l.wrap.b32 	%r10764, %r10758, %r10757, 23;
	mov.b64 	%rd15556, {%r10764, %r10763};
	xor.b64  	%rd15557, %rd15555, %rd15556;
	xor.b64  	%rd15558, %rd15517, %rd15493;
	and.b64  	%rd15559, %rd15541, %rd15558;
	xor.b64  	%rd15560, %rd15559, %rd15493;
	ld.local.u64 	%rd18941, [%rd1+104];
	add.s64 	%rd15561, %rd15469, %rd18941;
	add.s64 	%rd15562, %rd15561, %rd18605;
	add.s64 	%rd15563, %rd15562, %rd15560;
	add.s64 	%rd15564, %rd15563, %rd15557;
	add.s64 	%rd15565, %rd15564, %rd15480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10765,%dummy}, %rd15552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10766}, %rd15552;
	}
	shf.r.wrap.b32 	%r10767, %r10766, %r10765, 28;
	shf.r.wrap.b32 	%r10768, %r10765, %r10766, 28;
	mov.b64 	%rd15566, {%r10768, %r10767};
	shf.l.wrap.b32 	%r10769, %r10765, %r10766, 30;
	shf.l.wrap.b32 	%r10770, %r10766, %r10765, 30;
	mov.b64 	%rd15567, {%r10770, %r10769};
	xor.b64  	%rd15568, %rd15567, %rd15566;
	shf.l.wrap.b32 	%r10771, %r10765, %r10766, 25;
	shf.l.wrap.b32 	%r10772, %r10766, %r10765, 25;
	mov.b64 	%rd15569, {%r10772, %r10771};
	xor.b64  	%rd15570, %rd15568, %rd15569;
	and.b64  	%rd15571, %rd15552, %rd15528;
	xor.b64  	%rd15572, %rd15552, %rd15528;
	and.b64  	%rd15573, %rd15572, %rd15504;
	or.b64  	%rd15574, %rd15573, %rd15571;
	add.s64 	%rd15575, %rd15564, %rd15574;
	add.s64 	%rd15576, %rd15575, %rd15570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10773,%dummy}, %rd15565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10774}, %rd15565;
	}
	shf.r.wrap.b32 	%r10775, %r10774, %r10773, 14;
	shf.r.wrap.b32 	%r10776, %r10773, %r10774, 14;
	mov.b64 	%rd15577, {%r10776, %r10775};
	shf.r.wrap.b32 	%r10777, %r10774, %r10773, 18;
	shf.r.wrap.b32 	%r10778, %r10773, %r10774, 18;
	mov.b64 	%rd15578, {%r10778, %r10777};
	xor.b64  	%rd15579, %rd15578, %rd15577;
	shf.l.wrap.b32 	%r10779, %r10773, %r10774, 23;
	shf.l.wrap.b32 	%r10780, %r10774, %r10773, 23;
	mov.b64 	%rd15580, {%r10780, %r10779};
	xor.b64  	%rd15581, %rd15579, %rd15580;
	xor.b64  	%rd15582, %rd15541, %rd15517;
	and.b64  	%rd15583, %rd15565, %rd15582;
	xor.b64  	%rd15584, %rd15583, %rd15517;
	ld.local.u64 	%rd18942, [%rd1+112];
	add.s64 	%rd15585, %rd15493, %rd18942;
	add.s64 	%rd15586, %rd15585, %rd18604;
	add.s64 	%rd15587, %rd15586, %rd15584;
	add.s64 	%rd15588, %rd15587, %rd15581;
	add.s64 	%rd15589, %rd15588, %rd15504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10781,%dummy}, %rd15576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10782}, %rd15576;
	}
	shf.r.wrap.b32 	%r10783, %r10782, %r10781, 28;
	shf.r.wrap.b32 	%r10784, %r10781, %r10782, 28;
	mov.b64 	%rd15590, {%r10784, %r10783};
	shf.l.wrap.b32 	%r10785, %r10781, %r10782, 30;
	shf.l.wrap.b32 	%r10786, %r10782, %r10781, 30;
	mov.b64 	%rd15591, {%r10786, %r10785};
	xor.b64  	%rd15592, %rd15591, %rd15590;
	shf.l.wrap.b32 	%r10787, %r10781, %r10782, 25;
	shf.l.wrap.b32 	%r10788, %r10782, %r10781, 25;
	mov.b64 	%rd15593, {%r10788, %r10787};
	xor.b64  	%rd15594, %rd15592, %rd15593;
	and.b64  	%rd15595, %rd15576, %rd15552;
	xor.b64  	%rd15596, %rd15576, %rd15552;
	and.b64  	%rd15597, %rd15596, %rd15528;
	or.b64  	%rd15598, %rd15597, %rd15595;
	add.s64 	%rd15599, %rd15588, %rd15598;
	add.s64 	%rd15600, %rd15599, %rd15594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10789,%dummy}, %rd15589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10790}, %rd15589;
	}
	shf.r.wrap.b32 	%r10791, %r10790, %r10789, 14;
	shf.r.wrap.b32 	%r10792, %r10789, %r10790, 14;
	mov.b64 	%rd15601, {%r10792, %r10791};
	shf.r.wrap.b32 	%r10793, %r10790, %r10789, 18;
	shf.r.wrap.b32 	%r10794, %r10789, %r10790, 18;
	mov.b64 	%rd15602, {%r10794, %r10793};
	xor.b64  	%rd15603, %rd15602, %rd15601;
	shf.l.wrap.b32 	%r10795, %r10789, %r10790, 23;
	shf.l.wrap.b32 	%r10796, %r10790, %r10789, 23;
	mov.b64 	%rd15604, {%r10796, %r10795};
	xor.b64  	%rd15605, %rd15603, %rd15604;
	xor.b64  	%rd15606, %rd15565, %rd15541;
	and.b64  	%rd15607, %rd15589, %rd15606;
	xor.b64  	%rd15608, %rd15607, %rd15541;
	ld.local.u64 	%rd18943, [%rd1+120];
	add.s64 	%rd15609, %rd15517, %rd18943;
	add.s64 	%rd15610, %rd15609, %rd18603;
	add.s64 	%rd15611, %rd15610, %rd15608;
	add.s64 	%rd15612, %rd15611, %rd15605;
	add.s64 	%rd15613, %rd15612, %rd15528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10797,%dummy}, %rd15600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10798}, %rd15600;
	}
	shf.r.wrap.b32 	%r10799, %r10798, %r10797, 28;
	shf.r.wrap.b32 	%r10800, %r10797, %r10798, 28;
	mov.b64 	%rd15614, {%r10800, %r10799};
	shf.l.wrap.b32 	%r10801, %r10797, %r10798, 30;
	shf.l.wrap.b32 	%r10802, %r10798, %r10797, 30;
	mov.b64 	%rd15615, {%r10802, %r10801};
	xor.b64  	%rd15616, %rd15615, %rd15614;
	shf.l.wrap.b32 	%r10803, %r10797, %r10798, 25;
	shf.l.wrap.b32 	%r10804, %r10798, %r10797, 25;
	mov.b64 	%rd15617, {%r10804, %r10803};
	xor.b64  	%rd15618, %rd15616, %rd15617;
	and.b64  	%rd15619, %rd15600, %rd15576;
	xor.b64  	%rd15620, %rd15600, %rd15576;
	and.b64  	%rd15621, %rd15620, %rd15552;
	or.b64  	%rd15622, %rd15621, %rd15619;
	add.s64 	%rd15623, %rd15612, %rd15622;
	add.s64 	%rd15624, %rd15623, %rd15618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10805,%dummy}, %rd15613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10806}, %rd15613;
	}
	shf.r.wrap.b32 	%r10807, %r10806, %r10805, 14;
	shf.r.wrap.b32 	%r10808, %r10805, %r10806, 14;
	mov.b64 	%rd15625, {%r10808, %r10807};
	shf.r.wrap.b32 	%r10809, %r10806, %r10805, 18;
	shf.r.wrap.b32 	%r10810, %r10805, %r10806, 18;
	mov.b64 	%rd15626, {%r10810, %r10809};
	xor.b64  	%rd15627, %rd15626, %rd15625;
	shf.l.wrap.b32 	%r10811, %r10805, %r10806, 23;
	shf.l.wrap.b32 	%r10812, %r10806, %r10805, 23;
	mov.b64 	%rd15628, {%r10812, %r10811};
	xor.b64  	%rd15629, %rd15627, %rd15628;
	xor.b64  	%rd15630, %rd15589, %rd15565;
	and.b64  	%rd15631, %rd15613, %rd15630;
	xor.b64  	%rd15632, %rd15631, %rd15565;
	ld.local.u64 	%rd18927, [%rd1+128];
	add.s64 	%rd15633, %rd15541, %rd18927;
	add.s64 	%rd15634, %rd15633, %rd18602;
	add.s64 	%rd15635, %rd15634, %rd15632;
	add.s64 	%rd15636, %rd15635, %rd15629;
	add.s64 	%rd15637, %rd15636, %rd15552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10813,%dummy}, %rd15624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10814}, %rd15624;
	}
	shf.r.wrap.b32 	%r10815, %r10814, %r10813, 28;
	shf.r.wrap.b32 	%r10816, %r10813, %r10814, 28;
	mov.b64 	%rd15638, {%r10816, %r10815};
	shf.l.wrap.b32 	%r10817, %r10813, %r10814, 30;
	shf.l.wrap.b32 	%r10818, %r10814, %r10813, 30;
	mov.b64 	%rd15639, {%r10818, %r10817};
	xor.b64  	%rd15640, %rd15639, %rd15638;
	shf.l.wrap.b32 	%r10819, %r10813, %r10814, 25;
	shf.l.wrap.b32 	%r10820, %r10814, %r10813, 25;
	mov.b64 	%rd15641, {%r10820, %r10819};
	xor.b64  	%rd15642, %rd15640, %rd15641;
	and.b64  	%rd15643, %rd15624, %rd15600;
	xor.b64  	%rd15644, %rd15624, %rd15600;
	and.b64  	%rd15645, %rd15644, %rd15576;
	or.b64  	%rd15646, %rd15645, %rd15643;
	add.s64 	%rd15647, %rd15636, %rd15646;
	add.s64 	%rd15648, %rd15647, %rd15642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10821,%dummy}, %rd15637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10822}, %rd15637;
	}
	shf.r.wrap.b32 	%r10823, %r10822, %r10821, 14;
	shf.r.wrap.b32 	%r10824, %r10821, %r10822, 14;
	mov.b64 	%rd15649, {%r10824, %r10823};
	shf.r.wrap.b32 	%r10825, %r10822, %r10821, 18;
	shf.r.wrap.b32 	%r10826, %r10821, %r10822, 18;
	mov.b64 	%rd15650, {%r10826, %r10825};
	xor.b64  	%rd15651, %rd15650, %rd15649;
	shf.l.wrap.b32 	%r10827, %r10821, %r10822, 23;
	shf.l.wrap.b32 	%r10828, %r10822, %r10821, 23;
	mov.b64 	%rd15652, {%r10828, %r10827};
	xor.b64  	%rd15653, %rd15651, %rd15652;
	xor.b64  	%rd15654, %rd15613, %rd15589;
	and.b64  	%rd15655, %rd15637, %rd15654;
	xor.b64  	%rd15656, %rd15655, %rd15589;
	ld.local.u64 	%rd18926, [%rd1+136];
	add.s64 	%rd15657, %rd15565, %rd18926;
	add.s64 	%rd15658, %rd15657, %rd18601;
	add.s64 	%rd15659, %rd15658, %rd15656;
	add.s64 	%rd15660, %rd15659, %rd15653;
	add.s64 	%rd15661, %rd15660, %rd15576;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10829,%dummy}, %rd15648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10830}, %rd15648;
	}
	shf.r.wrap.b32 	%r10831, %r10830, %r10829, 28;
	shf.r.wrap.b32 	%r10832, %r10829, %r10830, 28;
	mov.b64 	%rd15662, {%r10832, %r10831};
	shf.l.wrap.b32 	%r10833, %r10829, %r10830, 30;
	shf.l.wrap.b32 	%r10834, %r10830, %r10829, 30;
	mov.b64 	%rd15663, {%r10834, %r10833};
	xor.b64  	%rd15664, %rd15663, %rd15662;
	shf.l.wrap.b32 	%r10835, %r10829, %r10830, 25;
	shf.l.wrap.b32 	%r10836, %r10830, %r10829, 25;
	mov.b64 	%rd15665, {%r10836, %r10835};
	xor.b64  	%rd15666, %rd15664, %rd15665;
	and.b64  	%rd15667, %rd15648, %rd15624;
	xor.b64  	%rd15668, %rd15648, %rd15624;
	and.b64  	%rd15669, %rd15668, %rd15600;
	or.b64  	%rd15670, %rd15669, %rd15667;
	add.s64 	%rd15671, %rd15660, %rd15670;
	add.s64 	%rd15672, %rd15671, %rd15666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10837,%dummy}, %rd15661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10838}, %rd15661;
	}
	shf.r.wrap.b32 	%r10839, %r10838, %r10837, 14;
	shf.r.wrap.b32 	%r10840, %r10837, %r10838, 14;
	mov.b64 	%rd15673, {%r10840, %r10839};
	shf.r.wrap.b32 	%r10841, %r10838, %r10837, 18;
	shf.r.wrap.b32 	%r10842, %r10837, %r10838, 18;
	mov.b64 	%rd15674, {%r10842, %r10841};
	xor.b64  	%rd15675, %rd15674, %rd15673;
	shf.l.wrap.b32 	%r10843, %r10837, %r10838, 23;
	shf.l.wrap.b32 	%r10844, %r10838, %r10837, 23;
	mov.b64 	%rd15676, {%r10844, %r10843};
	xor.b64  	%rd15677, %rd15675, %rd15676;
	xor.b64  	%rd15678, %rd15637, %rd15613;
	and.b64  	%rd15679, %rd15661, %rd15678;
	xor.b64  	%rd15680, %rd15679, %rd15613;
	ld.local.u64 	%rd18925, [%rd1+144];
	add.s64 	%rd15681, %rd15589, %rd18925;
	add.s64 	%rd15682, %rd15681, %rd18600;
	add.s64 	%rd15683, %rd15682, %rd15680;
	add.s64 	%rd15684, %rd15683, %rd15677;
	add.s64 	%rd15685, %rd15684, %rd15600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10845,%dummy}, %rd15672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10846}, %rd15672;
	}
	shf.r.wrap.b32 	%r10847, %r10846, %r10845, 28;
	shf.r.wrap.b32 	%r10848, %r10845, %r10846, 28;
	mov.b64 	%rd15686, {%r10848, %r10847};
	shf.l.wrap.b32 	%r10849, %r10845, %r10846, 30;
	shf.l.wrap.b32 	%r10850, %r10846, %r10845, 30;
	mov.b64 	%rd15687, {%r10850, %r10849};
	xor.b64  	%rd15688, %rd15687, %rd15686;
	shf.l.wrap.b32 	%r10851, %r10845, %r10846, 25;
	shf.l.wrap.b32 	%r10852, %r10846, %r10845, 25;
	mov.b64 	%rd15689, {%r10852, %r10851};
	xor.b64  	%rd15690, %rd15688, %rd15689;
	and.b64  	%rd15691, %rd15672, %rd15648;
	xor.b64  	%rd15692, %rd15672, %rd15648;
	and.b64  	%rd15693, %rd15692, %rd15624;
	or.b64  	%rd15694, %rd15693, %rd15691;
	add.s64 	%rd15695, %rd15684, %rd15694;
	add.s64 	%rd15696, %rd15695, %rd15690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10853,%dummy}, %rd15685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10854}, %rd15685;
	}
	shf.r.wrap.b32 	%r10855, %r10854, %r10853, 14;
	shf.r.wrap.b32 	%r10856, %r10853, %r10854, 14;
	mov.b64 	%rd15697, {%r10856, %r10855};
	shf.r.wrap.b32 	%r10857, %r10854, %r10853, 18;
	shf.r.wrap.b32 	%r10858, %r10853, %r10854, 18;
	mov.b64 	%rd15698, {%r10858, %r10857};
	xor.b64  	%rd15699, %rd15698, %rd15697;
	shf.l.wrap.b32 	%r10859, %r10853, %r10854, 23;
	shf.l.wrap.b32 	%r10860, %r10854, %r10853, 23;
	mov.b64 	%rd15700, {%r10860, %r10859};
	xor.b64  	%rd15701, %rd15699, %rd15700;
	xor.b64  	%rd15702, %rd15661, %rd15637;
	and.b64  	%rd15703, %rd15685, %rd15702;
	xor.b64  	%rd15704, %rd15703, %rd15637;
	ld.local.u64 	%rd18924, [%rd1+152];
	add.s64 	%rd15705, %rd15613, %rd18924;
	add.s64 	%rd15706, %rd15705, %rd18599;
	add.s64 	%rd15707, %rd15706, %rd15704;
	add.s64 	%rd15708, %rd15707, %rd15701;
	add.s64 	%rd15709, %rd15708, %rd15624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10861,%dummy}, %rd15696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10862}, %rd15696;
	}
	shf.r.wrap.b32 	%r10863, %r10862, %r10861, 28;
	shf.r.wrap.b32 	%r10864, %r10861, %r10862, 28;
	mov.b64 	%rd15710, {%r10864, %r10863};
	shf.l.wrap.b32 	%r10865, %r10861, %r10862, 30;
	shf.l.wrap.b32 	%r10866, %r10862, %r10861, 30;
	mov.b64 	%rd15711, {%r10866, %r10865};
	xor.b64  	%rd15712, %rd15711, %rd15710;
	shf.l.wrap.b32 	%r10867, %r10861, %r10862, 25;
	shf.l.wrap.b32 	%r10868, %r10862, %r10861, 25;
	mov.b64 	%rd15713, {%r10868, %r10867};
	xor.b64  	%rd15714, %rd15712, %rd15713;
	and.b64  	%rd15715, %rd15696, %rd15672;
	xor.b64  	%rd15716, %rd15696, %rd15672;
	and.b64  	%rd15717, %rd15716, %rd15648;
	or.b64  	%rd15718, %rd15717, %rd15715;
	add.s64 	%rd15719, %rd15708, %rd15718;
	add.s64 	%rd15720, %rd15719, %rd15714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10869,%dummy}, %rd15709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10870}, %rd15709;
	}
	shf.r.wrap.b32 	%r10871, %r10870, %r10869, 14;
	shf.r.wrap.b32 	%r10872, %r10869, %r10870, 14;
	mov.b64 	%rd15721, {%r10872, %r10871};
	shf.r.wrap.b32 	%r10873, %r10870, %r10869, 18;
	shf.r.wrap.b32 	%r10874, %r10869, %r10870, 18;
	mov.b64 	%rd15722, {%r10874, %r10873};
	xor.b64  	%rd15723, %rd15722, %rd15721;
	shf.l.wrap.b32 	%r10875, %r10869, %r10870, 23;
	shf.l.wrap.b32 	%r10876, %r10870, %r10869, 23;
	mov.b64 	%rd15724, {%r10876, %r10875};
	xor.b64  	%rd15725, %rd15723, %rd15724;
	xor.b64  	%rd15726, %rd15685, %rd15661;
	and.b64  	%rd15727, %rd15709, %rd15726;
	xor.b64  	%rd15728, %rd15727, %rd15661;
	ld.local.u64 	%rd18923, [%rd1+160];
	add.s64 	%rd15729, %rd15637, %rd18923;
	add.s64 	%rd15730, %rd15729, %rd18598;
	add.s64 	%rd15731, %rd15730, %rd15728;
	add.s64 	%rd15732, %rd15731, %rd15725;
	add.s64 	%rd18935, %rd15732, %rd15648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10877,%dummy}, %rd15720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10878}, %rd15720;
	}
	shf.r.wrap.b32 	%r10879, %r10878, %r10877, 28;
	shf.r.wrap.b32 	%r10880, %r10877, %r10878, 28;
	mov.b64 	%rd15733, {%r10880, %r10879};
	shf.l.wrap.b32 	%r10881, %r10877, %r10878, 30;
	shf.l.wrap.b32 	%r10882, %r10878, %r10877, 30;
	mov.b64 	%rd15734, {%r10882, %r10881};
	xor.b64  	%rd15735, %rd15734, %rd15733;
	shf.l.wrap.b32 	%r10883, %r10877, %r10878, 25;
	shf.l.wrap.b32 	%r10884, %r10878, %r10877, 25;
	mov.b64 	%rd15736, {%r10884, %r10883};
	xor.b64  	%rd15737, %rd15735, %rd15736;
	and.b64  	%rd15738, %rd15720, %rd15696;
	xor.b64  	%rd15739, %rd15720, %rd15696;
	and.b64  	%rd15740, %rd15739, %rd15672;
	or.b64  	%rd15741, %rd15740, %rd15738;
	add.s64 	%rd15742, %rd15732, %rd15741;
	add.s64 	%rd18931, %rd15742, %rd15737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10885,%dummy}, %rd18935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10886}, %rd18935;
	}
	shf.r.wrap.b32 	%r10887, %r10886, %r10885, 14;
	shf.r.wrap.b32 	%r10888, %r10885, %r10886, 14;
	mov.b64 	%rd15743, {%r10888, %r10887};
	shf.r.wrap.b32 	%r10889, %r10886, %r10885, 18;
	shf.r.wrap.b32 	%r10890, %r10885, %r10886, 18;
	mov.b64 	%rd15744, {%r10890, %r10889};
	xor.b64  	%rd15745, %rd15744, %rd15743;
	shf.l.wrap.b32 	%r10891, %r10885, %r10886, 23;
	shf.l.wrap.b32 	%r10892, %r10886, %r10885, 23;
	mov.b64 	%rd15746, {%r10892, %r10891};
	xor.b64  	%rd15747, %rd15745, %rd15746;
	xor.b64  	%rd15748, %rd15709, %rd15685;
	and.b64  	%rd15749, %rd18935, %rd15748;
	xor.b64  	%rd15750, %rd15749, %rd15685;
	ld.local.u64 	%rd18922, [%rd1+168];
	add.s64 	%rd15751, %rd15661, %rd18922;
	add.s64 	%rd15752, %rd15751, %rd18597;
	add.s64 	%rd15753, %rd15752, %rd15750;
	add.s64 	%rd15754, %rd15753, %rd15747;
	add.s64 	%rd18934, %rd15754, %rd15672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10893,%dummy}, %rd18931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10894}, %rd18931;
	}
	shf.r.wrap.b32 	%r10895, %r10894, %r10893, 28;
	shf.r.wrap.b32 	%r10896, %r10893, %r10894, 28;
	mov.b64 	%rd15755, {%r10896, %r10895};
	shf.l.wrap.b32 	%r10897, %r10893, %r10894, 30;
	shf.l.wrap.b32 	%r10898, %r10894, %r10893, 30;
	mov.b64 	%rd15756, {%r10898, %r10897};
	xor.b64  	%rd15757, %rd15756, %rd15755;
	shf.l.wrap.b32 	%r10899, %r10893, %r10894, 25;
	shf.l.wrap.b32 	%r10900, %r10894, %r10893, 25;
	mov.b64 	%rd15758, {%r10900, %r10899};
	xor.b64  	%rd15759, %rd15757, %rd15758;
	and.b64  	%rd15760, %rd18931, %rd15720;
	xor.b64  	%rd15761, %rd18931, %rd15720;
	and.b64  	%rd15762, %rd15761, %rd15696;
	or.b64  	%rd15763, %rd15762, %rd15760;
	add.s64 	%rd15764, %rd15754, %rd15763;
	add.s64 	%rd18930, %rd15764, %rd15759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10901,%dummy}, %rd18934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10902}, %rd18934;
	}
	shf.r.wrap.b32 	%r10903, %r10902, %r10901, 14;
	shf.r.wrap.b32 	%r10904, %r10901, %r10902, 14;
	mov.b64 	%rd15765, {%r10904, %r10903};
	shf.r.wrap.b32 	%r10905, %r10902, %r10901, 18;
	shf.r.wrap.b32 	%r10906, %r10901, %r10902, 18;
	mov.b64 	%rd15766, {%r10906, %r10905};
	xor.b64  	%rd15767, %rd15766, %rd15765;
	shf.l.wrap.b32 	%r10907, %r10901, %r10902, 23;
	shf.l.wrap.b32 	%r10908, %r10902, %r10901, 23;
	mov.b64 	%rd15768, {%r10908, %r10907};
	xor.b64  	%rd15769, %rd15767, %rd15768;
	xor.b64  	%rd15770, %rd18935, %rd15709;
	and.b64  	%rd15771, %rd18934, %rd15770;
	xor.b64  	%rd15772, %rd15771, %rd15709;
	ld.local.u64 	%rd18921, [%rd1+176];
	add.s64 	%rd15773, %rd15685, %rd18921;
	add.s64 	%rd15774, %rd15773, %rd18596;
	add.s64 	%rd15775, %rd15774, %rd15772;
	add.s64 	%rd15776, %rd15775, %rd15769;
	add.s64 	%rd18933, %rd15776, %rd15696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10909,%dummy}, %rd18930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10910}, %rd18930;
	}
	shf.r.wrap.b32 	%r10911, %r10910, %r10909, 28;
	shf.r.wrap.b32 	%r10912, %r10909, %r10910, 28;
	mov.b64 	%rd15777, {%r10912, %r10911};
	shf.l.wrap.b32 	%r10913, %r10909, %r10910, 30;
	shf.l.wrap.b32 	%r10914, %r10910, %r10909, 30;
	mov.b64 	%rd15778, {%r10914, %r10913};
	xor.b64  	%rd15779, %rd15778, %rd15777;
	shf.l.wrap.b32 	%r10915, %r10909, %r10910, 25;
	shf.l.wrap.b32 	%r10916, %r10910, %r10909, 25;
	mov.b64 	%rd15780, {%r10916, %r10915};
	xor.b64  	%rd15781, %rd15779, %rd15780;
	and.b64  	%rd15782, %rd18930, %rd18931;
	xor.b64  	%rd15783, %rd18930, %rd18931;
	and.b64  	%rd15784, %rd15783, %rd15720;
	or.b64  	%rd15785, %rd15784, %rd15782;
	add.s64 	%rd15786, %rd15776, %rd15785;
	add.s64 	%rd18929, %rd15786, %rd15781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10917,%dummy}, %rd18933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10918}, %rd18933;
	}
	shf.r.wrap.b32 	%r10919, %r10918, %r10917, 14;
	shf.r.wrap.b32 	%r10920, %r10917, %r10918, 14;
	mov.b64 	%rd15787, {%r10920, %r10919};
	shf.r.wrap.b32 	%r10921, %r10918, %r10917, 18;
	shf.r.wrap.b32 	%r10922, %r10917, %r10918, 18;
	mov.b64 	%rd15788, {%r10922, %r10921};
	xor.b64  	%rd15789, %rd15788, %rd15787;
	shf.l.wrap.b32 	%r10923, %r10917, %r10918, 23;
	shf.l.wrap.b32 	%r10924, %r10918, %r10917, 23;
	mov.b64 	%rd15790, {%r10924, %r10923};
	xor.b64  	%rd15791, %rd15789, %rd15790;
	xor.b64  	%rd15792, %rd18934, %rd18935;
	and.b64  	%rd15793, %rd18933, %rd15792;
	xor.b64  	%rd15794, %rd15793, %rd18935;
	ld.local.u64 	%rd18920, [%rd1+184];
	add.s64 	%rd15795, %rd15709, %rd18920;
	add.s64 	%rd15796, %rd15795, %rd18595;
	add.s64 	%rd15797, %rd15796, %rd15794;
	add.s64 	%rd15798, %rd15797, %rd15791;
	add.s64 	%rd18932, %rd15798, %rd15720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10925,%dummy}, %rd18929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10926}, %rd18929;
	}
	shf.r.wrap.b32 	%r10927, %r10926, %r10925, 28;
	shf.r.wrap.b32 	%r10928, %r10925, %r10926, 28;
	mov.b64 	%rd15799, {%r10928, %r10927};
	shf.l.wrap.b32 	%r10929, %r10925, %r10926, 30;
	shf.l.wrap.b32 	%r10930, %r10926, %r10925, 30;
	mov.b64 	%rd15800, {%r10930, %r10929};
	xor.b64  	%rd15801, %rd15800, %rd15799;
	shf.l.wrap.b32 	%r10931, %r10925, %r10926, 25;
	shf.l.wrap.b32 	%r10932, %r10926, %r10925, 25;
	mov.b64 	%rd15802, {%r10932, %r10931};
	xor.b64  	%rd15803, %rd15801, %rd15802;
	and.b64  	%rd15804, %rd18929, %rd18930;
	xor.b64  	%rd15805, %rd18929, %rd18930;
	and.b64  	%rd15806, %rd15805, %rd18931;
	or.b64  	%rd15807, %rd15806, %rd15804;
	add.s64 	%rd15808, %rd15798, %rd15807;
	add.s64 	%rd18928, %rd15808, %rd15803;
	mov.u32 	%r13059, 16;

BB0_301:
	mov.u64 	%rd18517, k_sha512;
	shr.u64 	%rd15809, %rd18921, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10933,%dummy}, %rd18921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10934}, %rd18921;
	}
	shf.r.wrap.b32 	%r10935, %r10934, %r10933, 19;
	shf.r.wrap.b32 	%r10936, %r10933, %r10934, 19;
	mov.b64 	%rd15810, {%r10936, %r10935};
	xor.b64  	%rd15811, %rd15810, %rd15809;
	shf.l.wrap.b32 	%r10937, %r10933, %r10934, 3;
	shf.l.wrap.b32 	%r10938, %r10934, %r10933, 3;
	mov.b64 	%rd15812, {%r10938, %r10937};
	xor.b64  	%rd15813, %rd15811, %rd15812;
	shr.u64 	%rd15814, %rd18937, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10939,%dummy}, %rd18937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10940}, %rd18937;
	}
	shf.r.wrap.b32 	%r10941, %r10940, %r10939, 1;
	shf.r.wrap.b32 	%r10942, %r10939, %r10940, 1;
	mov.b64 	%rd15815, {%r10942, %r10941};
	xor.b64  	%rd15816, %rd15815, %rd15814;
	shf.r.wrap.b32 	%r10943, %r10940, %r10939, 8;
	shf.r.wrap.b32 	%r10944, %r10939, %r10940, 8;
	mov.b64 	%rd15817, {%r10944, %r10943};
	xor.b64  	%rd15818, %rd15816, %rd15817;
	add.s64 	%rd15819, %rd18936, %rd18926;
	add.s64 	%rd15820, %rd15819, %rd15813;
	add.s64 	%rd18936, %rd15820, %rd15818;
	shr.u64 	%rd15821, %rd18920, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10945,%dummy}, %rd18920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10946}, %rd18920;
	}
	shf.r.wrap.b32 	%r10947, %r10946, %r10945, 19;
	shf.r.wrap.b32 	%r10948, %r10945, %r10946, 19;
	mov.b64 	%rd15822, {%r10948, %r10947};
	xor.b64  	%rd15823, %rd15822, %rd15821;
	shf.l.wrap.b32 	%r10949, %r10945, %r10946, 3;
	shf.l.wrap.b32 	%r10950, %r10946, %r10945, 3;
	mov.b64 	%rd15824, {%r10950, %r10949};
	xor.b64  	%rd15825, %rd15823, %rd15824;
	shr.u64 	%rd15826, %rd18938, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10951,%dummy}, %rd18938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10952}, %rd18938;
	}
	shf.r.wrap.b32 	%r10953, %r10952, %r10951, 1;
	shf.r.wrap.b32 	%r10954, %r10951, %r10952, 1;
	mov.b64 	%rd15827, {%r10954, %r10953};
	xor.b64  	%rd15828, %rd15827, %rd15826;
	shf.r.wrap.b32 	%r10955, %r10952, %r10951, 8;
	shf.r.wrap.b32 	%r10956, %r10951, %r10952, 8;
	mov.b64 	%rd15829, {%r10956, %r10955};
	xor.b64  	%rd15830, %rd15828, %rd15829;
	add.s64 	%rd15831, %rd18937, %rd18925;
	add.s64 	%rd15832, %rd15831, %rd15825;
	add.s64 	%rd18937, %rd15832, %rd15830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10957,%dummy}, %rd18936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10958}, %rd18936;
	}
	shf.r.wrap.b32 	%r10959, %r10958, %r10957, 19;
	shf.r.wrap.b32 	%r10960, %r10957, %r10958, 19;
	mov.b64 	%rd15833, {%r10960, %r10959};
	shf.l.wrap.b32 	%r10961, %r10957, %r10958, 3;
	shf.l.wrap.b32 	%r10962, %r10958, %r10957, 3;
	mov.b64 	%rd15834, {%r10962, %r10961};
	shr.u64 	%rd15835, %rd18936, 6;
	xor.b64  	%rd15836, %rd15833, %rd15835;
	xor.b64  	%rd15837, %rd15836, %rd15834;
	shr.u64 	%rd15838, %rd18939, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10963,%dummy}, %rd18939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10964}, %rd18939;
	}
	shf.r.wrap.b32 	%r10965, %r10964, %r10963, 1;
	shf.r.wrap.b32 	%r10966, %r10963, %r10964, 1;
	mov.b64 	%rd15839, {%r10966, %r10965};
	xor.b64  	%rd15840, %rd15839, %rd15838;
	shf.r.wrap.b32 	%r10967, %r10964, %r10963, 8;
	shf.r.wrap.b32 	%r10968, %r10963, %r10964, 8;
	mov.b64 	%rd15841, {%r10968, %r10967};
	xor.b64  	%rd15842, %rd15840, %rd15841;
	add.s64 	%rd15843, %rd18938, %rd18924;
	add.s64 	%rd15844, %rd15843, %rd15837;
	add.s64 	%rd18938, %rd15844, %rd15842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10969,%dummy}, %rd18937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10970}, %rd18937;
	}
	shf.r.wrap.b32 	%r10971, %r10970, %r10969, 19;
	shf.r.wrap.b32 	%r10972, %r10969, %r10970, 19;
	mov.b64 	%rd15845, {%r10972, %r10971};
	shf.l.wrap.b32 	%r10973, %r10969, %r10970, 3;
	shf.l.wrap.b32 	%r10974, %r10970, %r10969, 3;
	mov.b64 	%rd15846, {%r10974, %r10973};
	shr.u64 	%rd15847, %rd18937, 6;
	xor.b64  	%rd15848, %rd15845, %rd15847;
	xor.b64  	%rd15849, %rd15848, %rd15846;
	shr.u64 	%rd15850, %rd18940, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10975,%dummy}, %rd18940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10976}, %rd18940;
	}
	shf.r.wrap.b32 	%r10977, %r10976, %r10975, 1;
	shf.r.wrap.b32 	%r10978, %r10975, %r10976, 1;
	mov.b64 	%rd15851, {%r10978, %r10977};
	xor.b64  	%rd15852, %rd15851, %rd15850;
	shf.r.wrap.b32 	%r10979, %r10976, %r10975, 8;
	shf.r.wrap.b32 	%r10980, %r10975, %r10976, 8;
	mov.b64 	%rd15853, {%r10980, %r10979};
	xor.b64  	%rd15854, %rd15852, %rd15853;
	add.s64 	%rd15855, %rd18939, %rd18923;
	add.s64 	%rd15856, %rd15855, %rd15849;
	add.s64 	%rd18939, %rd15856, %rd15854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10981,%dummy}, %rd18938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10982}, %rd18938;
	}
	shf.r.wrap.b32 	%r10983, %r10982, %r10981, 19;
	shf.r.wrap.b32 	%r10984, %r10981, %r10982, 19;
	mov.b64 	%rd15857, {%r10984, %r10983};
	shf.l.wrap.b32 	%r10985, %r10981, %r10982, 3;
	shf.l.wrap.b32 	%r10986, %r10982, %r10981, 3;
	mov.b64 	%rd15858, {%r10986, %r10985};
	shr.u64 	%rd15859, %rd18938, 6;
	xor.b64  	%rd15860, %rd15857, %rd15859;
	xor.b64  	%rd15861, %rd15860, %rd15858;
	shr.u64 	%rd15862, %rd18941, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10987,%dummy}, %rd18941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10988}, %rd18941;
	}
	shf.r.wrap.b32 	%r10989, %r10988, %r10987, 1;
	shf.r.wrap.b32 	%r10990, %r10987, %r10988, 1;
	mov.b64 	%rd15863, {%r10990, %r10989};
	xor.b64  	%rd15864, %rd15863, %rd15862;
	shf.r.wrap.b32 	%r10991, %r10988, %r10987, 8;
	shf.r.wrap.b32 	%r10992, %r10987, %r10988, 8;
	mov.b64 	%rd15865, {%r10992, %r10991};
	xor.b64  	%rd15866, %rd15864, %rd15865;
	add.s64 	%rd15867, %rd18940, %rd18922;
	add.s64 	%rd15868, %rd15867, %rd15861;
	add.s64 	%rd18940, %rd15868, %rd15866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10993,%dummy}, %rd18939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10994}, %rd18939;
	}
	shf.r.wrap.b32 	%r10995, %r10994, %r10993, 19;
	shf.r.wrap.b32 	%r10996, %r10993, %r10994, 19;
	mov.b64 	%rd15869, {%r10996, %r10995};
	shf.l.wrap.b32 	%r10997, %r10993, %r10994, 3;
	shf.l.wrap.b32 	%r10998, %r10994, %r10993, 3;
	mov.b64 	%rd15870, {%r10998, %r10997};
	shr.u64 	%rd15871, %rd18939, 6;
	xor.b64  	%rd15872, %rd15869, %rd15871;
	xor.b64  	%rd15873, %rd15872, %rd15870;
	shr.u64 	%rd15874, %rd18942, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10999,%dummy}, %rd18942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11000}, %rd18942;
	}
	shf.r.wrap.b32 	%r11001, %r11000, %r10999, 1;
	shf.r.wrap.b32 	%r11002, %r10999, %r11000, 1;
	mov.b64 	%rd15875, {%r11002, %r11001};
	xor.b64  	%rd15876, %rd15875, %rd15874;
	shf.r.wrap.b32 	%r11003, %r11000, %r10999, 8;
	shf.r.wrap.b32 	%r11004, %r10999, %r11000, 8;
	mov.b64 	%rd15877, {%r11004, %r11003};
	xor.b64  	%rd15878, %rd15876, %rd15877;
	add.s64 	%rd15879, %rd18941, %rd18921;
	add.s64 	%rd15880, %rd15879, %rd15873;
	add.s64 	%rd18941, %rd15880, %rd15878;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11005,%dummy}, %rd18940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11006}, %rd18940;
	}
	shf.r.wrap.b32 	%r11007, %r11006, %r11005, 19;
	shf.r.wrap.b32 	%r11008, %r11005, %r11006, 19;
	mov.b64 	%rd15881, {%r11008, %r11007};
	shf.l.wrap.b32 	%r11009, %r11005, %r11006, 3;
	shf.l.wrap.b32 	%r11010, %r11006, %r11005, 3;
	mov.b64 	%rd15882, {%r11010, %r11009};
	shr.u64 	%rd15883, %rd18940, 6;
	xor.b64  	%rd15884, %rd15881, %rd15883;
	xor.b64  	%rd15885, %rd15884, %rd15882;
	shr.u64 	%rd15886, %rd18943, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11011,%dummy}, %rd18943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11012}, %rd18943;
	}
	shf.r.wrap.b32 	%r11013, %r11012, %r11011, 1;
	shf.r.wrap.b32 	%r11014, %r11011, %r11012, 1;
	mov.b64 	%rd15887, {%r11014, %r11013};
	xor.b64  	%rd15888, %rd15887, %rd15886;
	shf.r.wrap.b32 	%r11015, %r11012, %r11011, 8;
	shf.r.wrap.b32 	%r11016, %r11011, %r11012, 8;
	mov.b64 	%rd15889, {%r11016, %r11015};
	xor.b64  	%rd15890, %rd15888, %rd15889;
	add.s64 	%rd15891, %rd18942, %rd18920;
	add.s64 	%rd15892, %rd15891, %rd15885;
	add.s64 	%rd18942, %rd15892, %rd15890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11017,%dummy}, %rd18941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11018}, %rd18941;
	}
	shf.r.wrap.b32 	%r11019, %r11018, %r11017, 19;
	shf.r.wrap.b32 	%r11020, %r11017, %r11018, 19;
	mov.b64 	%rd15893, {%r11020, %r11019};
	shf.l.wrap.b32 	%r11021, %r11017, %r11018, 3;
	shf.l.wrap.b32 	%r11022, %r11018, %r11017, 3;
	mov.b64 	%rd15894, {%r11022, %r11021};
	shr.u64 	%rd15895, %rd18941, 6;
	xor.b64  	%rd15896, %rd15893, %rd15895;
	xor.b64  	%rd15897, %rd15896, %rd15894;
	shr.u64 	%rd15898, %rd18927, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11023,%dummy}, %rd18927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11024}, %rd18927;
	}
	shf.r.wrap.b32 	%r11025, %r11024, %r11023, 1;
	shf.r.wrap.b32 	%r11026, %r11023, %r11024, 1;
	mov.b64 	%rd15899, {%r11026, %r11025};
	xor.b64  	%rd15900, %rd15899, %rd15898;
	shf.r.wrap.b32 	%r11027, %r11024, %r11023, 8;
	shf.r.wrap.b32 	%r11028, %r11023, %r11024, 8;
	mov.b64 	%rd15901, {%r11028, %r11027};
	xor.b64  	%rd15902, %rd15900, %rd15901;
	add.s64 	%rd15903, %rd18936, %rd18943;
	add.s64 	%rd15904, %rd15903, %rd15897;
	add.s64 	%rd18943, %rd15904, %rd15902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11029,%dummy}, %rd18942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11030}, %rd18942;
	}
	shf.r.wrap.b32 	%r11031, %r11030, %r11029, 19;
	shf.r.wrap.b32 	%r11032, %r11029, %r11030, 19;
	mov.b64 	%rd15905, {%r11032, %r11031};
	shf.l.wrap.b32 	%r11033, %r11029, %r11030, 3;
	shf.l.wrap.b32 	%r11034, %r11030, %r11029, 3;
	mov.b64 	%rd15906, {%r11034, %r11033};
	shr.u64 	%rd15907, %rd18942, 6;
	xor.b64  	%rd15908, %rd15905, %rd15907;
	xor.b64  	%rd15909, %rd15908, %rd15906;
	shr.u64 	%rd15910, %rd18926, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11035,%dummy}, %rd18926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11036}, %rd18926;
	}
	shf.r.wrap.b32 	%r11037, %r11036, %r11035, 1;
	shf.r.wrap.b32 	%r11038, %r11035, %r11036, 1;
	mov.b64 	%rd15911, {%r11038, %r11037};
	xor.b64  	%rd15912, %rd15911, %rd15910;
	shf.r.wrap.b32 	%r11039, %r11036, %r11035, 8;
	shf.r.wrap.b32 	%r11040, %r11035, %r11036, 8;
	mov.b64 	%rd15913, {%r11040, %r11039};
	xor.b64  	%rd15914, %rd15912, %rd15913;
	add.s64 	%rd15915, %rd18937, %rd18927;
	add.s64 	%rd15916, %rd15915, %rd15909;
	add.s64 	%rd18927, %rd15916, %rd15914;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11041,%dummy}, %rd18943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11042}, %rd18943;
	}
	shf.r.wrap.b32 	%r11043, %r11042, %r11041, 19;
	shf.r.wrap.b32 	%r11044, %r11041, %r11042, 19;
	mov.b64 	%rd15917, {%r11044, %r11043};
	shf.l.wrap.b32 	%r11045, %r11041, %r11042, 3;
	shf.l.wrap.b32 	%r11046, %r11042, %r11041, 3;
	mov.b64 	%rd15918, {%r11046, %r11045};
	shr.u64 	%rd15919, %rd18943, 6;
	xor.b64  	%rd15920, %rd15917, %rd15919;
	xor.b64  	%rd15921, %rd15920, %rd15918;
	shr.u64 	%rd15922, %rd18925, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11047,%dummy}, %rd18925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11048}, %rd18925;
	}
	shf.r.wrap.b32 	%r11049, %r11048, %r11047, 1;
	shf.r.wrap.b32 	%r11050, %r11047, %r11048, 1;
	mov.b64 	%rd15923, {%r11050, %r11049};
	xor.b64  	%rd15924, %rd15923, %rd15922;
	shf.r.wrap.b32 	%r11051, %r11048, %r11047, 8;
	shf.r.wrap.b32 	%r11052, %r11047, %r11048, 8;
	mov.b64 	%rd15925, {%r11052, %r11051};
	xor.b64  	%rd15926, %rd15924, %rd15925;
	add.s64 	%rd15927, %rd18938, %rd18926;
	add.s64 	%rd15928, %rd15927, %rd15921;
	add.s64 	%rd18926, %rd15928, %rd15926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11053,%dummy}, %rd18927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11054}, %rd18927;
	}
	shf.r.wrap.b32 	%r11055, %r11054, %r11053, 19;
	shf.r.wrap.b32 	%r11056, %r11053, %r11054, 19;
	mov.b64 	%rd15929, {%r11056, %r11055};
	shf.l.wrap.b32 	%r11057, %r11053, %r11054, 3;
	shf.l.wrap.b32 	%r11058, %r11054, %r11053, 3;
	mov.b64 	%rd15930, {%r11058, %r11057};
	shr.u64 	%rd15931, %rd18927, 6;
	xor.b64  	%rd15932, %rd15929, %rd15931;
	xor.b64  	%rd15933, %rd15932, %rd15930;
	shr.u64 	%rd15934, %rd18924, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11059,%dummy}, %rd18924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11060}, %rd18924;
	}
	shf.r.wrap.b32 	%r11061, %r11060, %r11059, 1;
	shf.r.wrap.b32 	%r11062, %r11059, %r11060, 1;
	mov.b64 	%rd15935, {%r11062, %r11061};
	xor.b64  	%rd15936, %rd15935, %rd15934;
	shf.r.wrap.b32 	%r11063, %r11060, %r11059, 8;
	shf.r.wrap.b32 	%r11064, %r11059, %r11060, 8;
	mov.b64 	%rd15937, {%r11064, %r11063};
	xor.b64  	%rd15938, %rd15936, %rd15937;
	add.s64 	%rd15939, %rd18939, %rd18925;
	add.s64 	%rd15940, %rd15939, %rd15933;
	add.s64 	%rd18925, %rd15940, %rd15938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11065,%dummy}, %rd18926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11066}, %rd18926;
	}
	shf.r.wrap.b32 	%r11067, %r11066, %r11065, 19;
	shf.r.wrap.b32 	%r11068, %r11065, %r11066, 19;
	mov.b64 	%rd15941, {%r11068, %r11067};
	shf.l.wrap.b32 	%r11069, %r11065, %r11066, 3;
	shf.l.wrap.b32 	%r11070, %r11066, %r11065, 3;
	mov.b64 	%rd15942, {%r11070, %r11069};
	shr.u64 	%rd15943, %rd18926, 6;
	xor.b64  	%rd15944, %rd15941, %rd15943;
	xor.b64  	%rd15945, %rd15944, %rd15942;
	shr.u64 	%rd15946, %rd18923, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11071,%dummy}, %rd18923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11072}, %rd18923;
	}
	shf.r.wrap.b32 	%r11073, %r11072, %r11071, 1;
	shf.r.wrap.b32 	%r11074, %r11071, %r11072, 1;
	mov.b64 	%rd15947, {%r11074, %r11073};
	xor.b64  	%rd15948, %rd15947, %rd15946;
	shf.r.wrap.b32 	%r11075, %r11072, %r11071, 8;
	shf.r.wrap.b32 	%r11076, %r11071, %r11072, 8;
	mov.b64 	%rd15949, {%r11076, %r11075};
	xor.b64  	%rd15950, %rd15948, %rd15949;
	add.s64 	%rd15951, %rd18940, %rd18924;
	add.s64 	%rd15952, %rd15951, %rd15945;
	add.s64 	%rd18924, %rd15952, %rd15950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11077,%dummy}, %rd18925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11078}, %rd18925;
	}
	shf.r.wrap.b32 	%r11079, %r11078, %r11077, 19;
	shf.r.wrap.b32 	%r11080, %r11077, %r11078, 19;
	mov.b64 	%rd15953, {%r11080, %r11079};
	shf.l.wrap.b32 	%r11081, %r11077, %r11078, 3;
	shf.l.wrap.b32 	%r11082, %r11078, %r11077, 3;
	mov.b64 	%rd15954, {%r11082, %r11081};
	shr.u64 	%rd15955, %rd18925, 6;
	xor.b64  	%rd15956, %rd15953, %rd15955;
	xor.b64  	%rd15957, %rd15956, %rd15954;
	shr.u64 	%rd15958, %rd18922, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11083,%dummy}, %rd18922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11084}, %rd18922;
	}
	shf.r.wrap.b32 	%r11085, %r11084, %r11083, 1;
	shf.r.wrap.b32 	%r11086, %r11083, %r11084, 1;
	mov.b64 	%rd15959, {%r11086, %r11085};
	xor.b64  	%rd15960, %rd15959, %rd15958;
	shf.r.wrap.b32 	%r11087, %r11084, %r11083, 8;
	shf.r.wrap.b32 	%r11088, %r11083, %r11084, 8;
	mov.b64 	%rd15961, {%r11088, %r11087};
	xor.b64  	%rd15962, %rd15960, %rd15961;
	add.s64 	%rd15963, %rd18941, %rd18923;
	add.s64 	%rd15964, %rd15963, %rd15957;
	add.s64 	%rd18923, %rd15964, %rd15962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11089,%dummy}, %rd18924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11090}, %rd18924;
	}
	shf.r.wrap.b32 	%r11091, %r11090, %r11089, 19;
	shf.r.wrap.b32 	%r11092, %r11089, %r11090, 19;
	mov.b64 	%rd15965, {%r11092, %r11091};
	shf.l.wrap.b32 	%r11093, %r11089, %r11090, 3;
	shf.l.wrap.b32 	%r11094, %r11090, %r11089, 3;
	mov.b64 	%rd15966, {%r11094, %r11093};
	shr.u64 	%rd15967, %rd18924, 6;
	xor.b64  	%rd15968, %rd15965, %rd15967;
	xor.b64  	%rd15969, %rd15968, %rd15966;
	shr.u64 	%rd15970, %rd18921, 7;
	shf.r.wrap.b32 	%r11095, %r10934, %r10933, 1;
	shf.r.wrap.b32 	%r11096, %r10933, %r10934, 1;
	mov.b64 	%rd15971, {%r11096, %r11095};
	xor.b64  	%rd15972, %rd15971, %rd15970;
	shf.r.wrap.b32 	%r11097, %r10934, %r10933, 8;
	shf.r.wrap.b32 	%r11098, %r10933, %r10934, 8;
	mov.b64 	%rd15973, {%r11098, %r11097};
	xor.b64  	%rd15974, %rd15972, %rd15973;
	add.s64 	%rd15975, %rd18942, %rd18922;
	add.s64 	%rd15976, %rd15975, %rd15969;
	add.s64 	%rd18922, %rd15976, %rd15974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11099,%dummy}, %rd18923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11100}, %rd18923;
	}
	shf.r.wrap.b32 	%r11101, %r11100, %r11099, 19;
	shf.r.wrap.b32 	%r11102, %r11099, %r11100, 19;
	mov.b64 	%rd15977, {%r11102, %r11101};
	shf.l.wrap.b32 	%r11103, %r11099, %r11100, 3;
	shf.l.wrap.b32 	%r11104, %r11100, %r11099, 3;
	mov.b64 	%rd15978, {%r11104, %r11103};
	shr.u64 	%rd15979, %rd18923, 6;
	xor.b64  	%rd15980, %rd15977, %rd15979;
	xor.b64  	%rd15981, %rd15980, %rd15978;
	shr.u64 	%rd15982, %rd18920, 7;
	shf.r.wrap.b32 	%r11105, %r10946, %r10945, 1;
	shf.r.wrap.b32 	%r11106, %r10945, %r10946, 1;
	mov.b64 	%rd15983, {%r11106, %r11105};
	xor.b64  	%rd15984, %rd15983, %rd15982;
	shf.r.wrap.b32 	%r11107, %r10946, %r10945, 8;
	shf.r.wrap.b32 	%r11108, %r10945, %r10946, 8;
	mov.b64 	%rd15985, {%r11108, %r11107};
	xor.b64  	%rd15986, %rd15984, %rd15985;
	add.s64 	%rd15987, %rd18943, %rd18921;
	add.s64 	%rd15988, %rd15987, %rd15981;
	add.s64 	%rd18921, %rd15988, %rd15986;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11109,%dummy}, %rd18922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11110}, %rd18922;
	}
	shf.r.wrap.b32 	%r11111, %r11110, %r11109, 19;
	shf.r.wrap.b32 	%r11112, %r11109, %r11110, 19;
	mov.b64 	%rd15989, {%r11112, %r11111};
	shf.l.wrap.b32 	%r11113, %r11109, %r11110, 3;
	shf.l.wrap.b32 	%r11114, %r11110, %r11109, 3;
	mov.b64 	%rd15990, {%r11114, %r11113};
	shr.u64 	%rd15991, %rd18922, 6;
	xor.b64  	%rd15992, %rd15989, %rd15991;
	xor.b64  	%rd15993, %rd15992, %rd15990;
	shf.r.wrap.b32 	%r11115, %r10958, %r10957, 1;
	shf.r.wrap.b32 	%r11116, %r10957, %r10958, 1;
	mov.b64 	%rd15994, {%r11116, %r11115};
	shf.r.wrap.b32 	%r11117, %r10958, %r10957, 8;
	shf.r.wrap.b32 	%r11118, %r10957, %r10958, 8;
	mov.b64 	%rd15995, {%r11118, %r11117};
	shr.u64 	%rd15996, %rd18936, 7;
	xor.b64  	%rd15997, %rd15994, %rd15996;
	xor.b64  	%rd15998, %rd15997, %rd15995;
	add.s64 	%rd15999, %rd18927, %rd18920;
	add.s64 	%rd16000, %rd15999, %rd15993;
	add.s64 	%rd18920, %rd16000, %rd15998;
	mul.wide.s32 	%rd16001, %r13059, 8;
	add.s64 	%rd16003, %rd18517, %rd16001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11119,%dummy}, %rd18932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11120}, %rd18932;
	}
	shf.r.wrap.b32 	%r11121, %r11120, %r11119, 18;
	shf.r.wrap.b32 	%r11122, %r11119, %r11120, 18;
	mov.b64 	%rd16004, {%r11122, %r11121};
	shf.r.wrap.b32 	%r11123, %r11120, %r11119, 14;
	shf.r.wrap.b32 	%r11124, %r11119, %r11120, 14;
	mov.b64 	%rd16005, {%r11124, %r11123};
	xor.b64  	%rd16006, %rd16004, %rd16005;
	shf.l.wrap.b32 	%r11125, %r11119, %r11120, 23;
	shf.l.wrap.b32 	%r11126, %r11120, %r11119, 23;
	mov.b64 	%rd16007, {%r11126, %r11125};
	xor.b64  	%rd16008, %rd16006, %rd16007;
	xor.b64  	%rd16009, %rd18934, %rd18933;
	and.b64  	%rd16010, %rd16009, %rd18932;
	xor.b64  	%rd16011, %rd16010, %rd18934;
	add.s64 	%rd16012, %rd16011, %rd18935;
	add.s64 	%rd16013, %rd16012, %rd18936;
	ld.const.u64 	%rd16014, [%rd16003];
	add.s64 	%rd16015, %rd16013, %rd16014;
	add.s64 	%rd16016, %rd16015, %rd16008;
	add.s64 	%rd16017, %rd16016, %rd18931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11127}, %rd18928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11128,%dummy}, %rd18928;
	}
	shf.l.wrap.b32 	%r11129, %r11128, %r11127, 30;
	shf.l.wrap.b32 	%r11130, %r11127, %r11128, 30;
	mov.b64 	%rd16018, {%r11130, %r11129};
	shf.r.wrap.b32 	%r11131, %r11127, %r11128, 28;
	shf.r.wrap.b32 	%r11132, %r11128, %r11127, 28;
	mov.b64 	%rd16019, {%r11132, %r11131};
	xor.b64  	%rd16020, %rd16018, %rd16019;
	shf.l.wrap.b32 	%r11133, %r11128, %r11127, 25;
	shf.l.wrap.b32 	%r11134, %r11127, %r11128, 25;
	mov.b64 	%rd16021, {%r11134, %r11133};
	xor.b64  	%rd16022, %rd16020, %rd16021;
	xor.b64  	%rd16023, %rd18929, %rd18928;
	and.b64  	%rd16024, %rd16023, %rd18930;
	and.b64  	%rd16025, %rd18929, %rd18928;
	or.b64  	%rd16026, %rd16024, %rd16025;
	add.s64 	%rd16027, %rd16016, %rd16026;
	add.s64 	%rd16028, %rd16027, %rd16022;
	add.s32 	%r11135, %r13059, 1;
	mul.wide.s32 	%rd16029, %r11135, 8;
	add.s64 	%rd16030, %rd18517, %rd16029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11136,%dummy}, %rd16017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11137}, %rd16017;
	}
	shf.r.wrap.b32 	%r11138, %r11137, %r11136, 14;
	shf.r.wrap.b32 	%r11139, %r11136, %r11137, 14;
	mov.b64 	%rd16031, {%r11139, %r11138};
	shf.r.wrap.b32 	%r11140, %r11137, %r11136, 18;
	shf.r.wrap.b32 	%r11141, %r11136, %r11137, 18;
	mov.b64 	%rd16032, {%r11141, %r11140};
	xor.b64  	%rd16033, %rd16032, %rd16031;
	shf.l.wrap.b32 	%r11142, %r11136, %r11137, 23;
	shf.l.wrap.b32 	%r11143, %r11137, %r11136, 23;
	mov.b64 	%rd16034, {%r11143, %r11142};
	xor.b64  	%rd16035, %rd16033, %rd16034;
	xor.b64  	%rd16036, %rd18933, %rd18932;
	and.b64  	%rd16037, %rd16017, %rd16036;
	xor.b64  	%rd16038, %rd16037, %rd18933;
	add.s64 	%rd16039, %rd18937, %rd18934;
	ld.const.u64 	%rd16040, [%rd16030];
	add.s64 	%rd16041, %rd16039, %rd16040;
	add.s64 	%rd16042, %rd16041, %rd16038;
	add.s64 	%rd16043, %rd16042, %rd16035;
	add.s64 	%rd16044, %rd16043, %rd18930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11144,%dummy}, %rd16028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11145}, %rd16028;
	}
	shf.r.wrap.b32 	%r11146, %r11145, %r11144, 28;
	shf.r.wrap.b32 	%r11147, %r11144, %r11145, 28;
	mov.b64 	%rd16045, {%r11147, %r11146};
	shf.l.wrap.b32 	%r11148, %r11144, %r11145, 30;
	shf.l.wrap.b32 	%r11149, %r11145, %r11144, 30;
	mov.b64 	%rd16046, {%r11149, %r11148};
	xor.b64  	%rd16047, %rd16046, %rd16045;
	shf.l.wrap.b32 	%r11150, %r11144, %r11145, 25;
	shf.l.wrap.b32 	%r11151, %r11145, %r11144, 25;
	mov.b64 	%rd16048, {%r11151, %r11150};
	xor.b64  	%rd16049, %rd16047, %rd16048;
	and.b64  	%rd16050, %rd16028, %rd18928;
	xor.b64  	%rd16051, %rd16028, %rd18928;
	and.b64  	%rd16052, %rd16051, %rd18929;
	or.b64  	%rd16053, %rd16052, %rd16050;
	add.s64 	%rd16054, %rd16043, %rd16053;
	add.s64 	%rd16055, %rd16054, %rd16049;
	add.s32 	%r11152, %r13059, 2;
	mul.wide.s32 	%rd16056, %r11152, 8;
	add.s64 	%rd16057, %rd18517, %rd16056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11153,%dummy}, %rd16044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11154}, %rd16044;
	}
	shf.r.wrap.b32 	%r11155, %r11154, %r11153, 14;
	shf.r.wrap.b32 	%r11156, %r11153, %r11154, 14;
	mov.b64 	%rd16058, {%r11156, %r11155};
	shf.r.wrap.b32 	%r11157, %r11154, %r11153, 18;
	shf.r.wrap.b32 	%r11158, %r11153, %r11154, 18;
	mov.b64 	%rd16059, {%r11158, %r11157};
	xor.b64  	%rd16060, %rd16059, %rd16058;
	shf.l.wrap.b32 	%r11159, %r11153, %r11154, 23;
	shf.l.wrap.b32 	%r11160, %r11154, %r11153, 23;
	mov.b64 	%rd16061, {%r11160, %r11159};
	xor.b64  	%rd16062, %rd16060, %rd16061;
	xor.b64  	%rd16063, %rd16017, %rd18932;
	and.b64  	%rd16064, %rd16044, %rd16063;
	xor.b64  	%rd16065, %rd16064, %rd18932;
	add.s64 	%rd16066, %rd18938, %rd18933;
	ld.const.u64 	%rd16067, [%rd16057];
	add.s64 	%rd16068, %rd16066, %rd16067;
	add.s64 	%rd16069, %rd16068, %rd16065;
	add.s64 	%rd16070, %rd16069, %rd16062;
	add.s64 	%rd16071, %rd16070, %rd18929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11161,%dummy}, %rd16055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11162}, %rd16055;
	}
	shf.r.wrap.b32 	%r11163, %r11162, %r11161, 28;
	shf.r.wrap.b32 	%r11164, %r11161, %r11162, 28;
	mov.b64 	%rd16072, {%r11164, %r11163};
	shf.l.wrap.b32 	%r11165, %r11161, %r11162, 30;
	shf.l.wrap.b32 	%r11166, %r11162, %r11161, 30;
	mov.b64 	%rd16073, {%r11166, %r11165};
	xor.b64  	%rd16074, %rd16073, %rd16072;
	shf.l.wrap.b32 	%r11167, %r11161, %r11162, 25;
	shf.l.wrap.b32 	%r11168, %r11162, %r11161, 25;
	mov.b64 	%rd16075, {%r11168, %r11167};
	xor.b64  	%rd16076, %rd16074, %rd16075;
	and.b64  	%rd16077, %rd16055, %rd16028;
	xor.b64  	%rd16078, %rd16055, %rd16028;
	and.b64  	%rd16079, %rd16078, %rd18928;
	or.b64  	%rd16080, %rd16079, %rd16077;
	add.s64 	%rd16081, %rd16070, %rd16080;
	add.s64 	%rd16082, %rd16081, %rd16076;
	add.s32 	%r11169, %r13059, 3;
	mul.wide.s32 	%rd16083, %r11169, 8;
	add.s64 	%rd16084, %rd18517, %rd16083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11170,%dummy}, %rd16071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11171}, %rd16071;
	}
	shf.r.wrap.b32 	%r11172, %r11171, %r11170, 14;
	shf.r.wrap.b32 	%r11173, %r11170, %r11171, 14;
	mov.b64 	%rd16085, {%r11173, %r11172};
	shf.r.wrap.b32 	%r11174, %r11171, %r11170, 18;
	shf.r.wrap.b32 	%r11175, %r11170, %r11171, 18;
	mov.b64 	%rd16086, {%r11175, %r11174};
	xor.b64  	%rd16087, %rd16086, %rd16085;
	shf.l.wrap.b32 	%r11176, %r11170, %r11171, 23;
	shf.l.wrap.b32 	%r11177, %r11171, %r11170, 23;
	mov.b64 	%rd16088, {%r11177, %r11176};
	xor.b64  	%rd16089, %rd16087, %rd16088;
	xor.b64  	%rd16090, %rd16044, %rd16017;
	and.b64  	%rd16091, %rd16071, %rd16090;
	xor.b64  	%rd16092, %rd16091, %rd16017;
	add.s64 	%rd16093, %rd18939, %rd18932;
	ld.const.u64 	%rd16094, [%rd16084];
	add.s64 	%rd16095, %rd16093, %rd16094;
	add.s64 	%rd16096, %rd16095, %rd16092;
	add.s64 	%rd16097, %rd16096, %rd16089;
	add.s64 	%rd16098, %rd16097, %rd18928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11178,%dummy}, %rd16082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11179}, %rd16082;
	}
	shf.r.wrap.b32 	%r11180, %r11179, %r11178, 28;
	shf.r.wrap.b32 	%r11181, %r11178, %r11179, 28;
	mov.b64 	%rd16099, {%r11181, %r11180};
	shf.l.wrap.b32 	%r11182, %r11178, %r11179, 30;
	shf.l.wrap.b32 	%r11183, %r11179, %r11178, 30;
	mov.b64 	%rd16100, {%r11183, %r11182};
	xor.b64  	%rd16101, %rd16100, %rd16099;
	shf.l.wrap.b32 	%r11184, %r11178, %r11179, 25;
	shf.l.wrap.b32 	%r11185, %r11179, %r11178, 25;
	mov.b64 	%rd16102, {%r11185, %r11184};
	xor.b64  	%rd16103, %rd16101, %rd16102;
	and.b64  	%rd16104, %rd16082, %rd16055;
	xor.b64  	%rd16105, %rd16082, %rd16055;
	and.b64  	%rd16106, %rd16105, %rd16028;
	or.b64  	%rd16107, %rd16106, %rd16104;
	add.s64 	%rd16108, %rd16097, %rd16107;
	add.s64 	%rd16109, %rd16108, %rd16103;
	add.s32 	%r11186, %r13059, 4;
	mul.wide.s32 	%rd16110, %r11186, 8;
	add.s64 	%rd16111, %rd18517, %rd16110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11187,%dummy}, %rd16098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11188}, %rd16098;
	}
	shf.r.wrap.b32 	%r11189, %r11188, %r11187, 14;
	shf.r.wrap.b32 	%r11190, %r11187, %r11188, 14;
	mov.b64 	%rd16112, {%r11190, %r11189};
	shf.r.wrap.b32 	%r11191, %r11188, %r11187, 18;
	shf.r.wrap.b32 	%r11192, %r11187, %r11188, 18;
	mov.b64 	%rd16113, {%r11192, %r11191};
	xor.b64  	%rd16114, %rd16113, %rd16112;
	shf.l.wrap.b32 	%r11193, %r11187, %r11188, 23;
	shf.l.wrap.b32 	%r11194, %r11188, %r11187, 23;
	mov.b64 	%rd16115, {%r11194, %r11193};
	xor.b64  	%rd16116, %rd16114, %rd16115;
	xor.b64  	%rd16117, %rd16071, %rd16044;
	and.b64  	%rd16118, %rd16098, %rd16117;
	xor.b64  	%rd16119, %rd16118, %rd16044;
	add.s64 	%rd16120, %rd16017, %rd18940;
	ld.const.u64 	%rd16121, [%rd16111];
	add.s64 	%rd16122, %rd16120, %rd16121;
	add.s64 	%rd16123, %rd16122, %rd16119;
	add.s64 	%rd16124, %rd16123, %rd16116;
	add.s64 	%rd16125, %rd16124, %rd16028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11195,%dummy}, %rd16109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11196}, %rd16109;
	}
	shf.r.wrap.b32 	%r11197, %r11196, %r11195, 28;
	shf.r.wrap.b32 	%r11198, %r11195, %r11196, 28;
	mov.b64 	%rd16126, {%r11198, %r11197};
	shf.l.wrap.b32 	%r11199, %r11195, %r11196, 30;
	shf.l.wrap.b32 	%r11200, %r11196, %r11195, 30;
	mov.b64 	%rd16127, {%r11200, %r11199};
	xor.b64  	%rd16128, %rd16127, %rd16126;
	shf.l.wrap.b32 	%r11201, %r11195, %r11196, 25;
	shf.l.wrap.b32 	%r11202, %r11196, %r11195, 25;
	mov.b64 	%rd16129, {%r11202, %r11201};
	xor.b64  	%rd16130, %rd16128, %rd16129;
	and.b64  	%rd16131, %rd16109, %rd16082;
	xor.b64  	%rd16132, %rd16109, %rd16082;
	and.b64  	%rd16133, %rd16132, %rd16055;
	or.b64  	%rd16134, %rd16133, %rd16131;
	add.s64 	%rd16135, %rd16124, %rd16134;
	add.s64 	%rd16136, %rd16135, %rd16130;
	add.s32 	%r11203, %r13059, 5;
	mul.wide.s32 	%rd16137, %r11203, 8;
	add.s64 	%rd16138, %rd18517, %rd16137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11204,%dummy}, %rd16125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11205}, %rd16125;
	}
	shf.r.wrap.b32 	%r11206, %r11205, %r11204, 14;
	shf.r.wrap.b32 	%r11207, %r11204, %r11205, 14;
	mov.b64 	%rd16139, {%r11207, %r11206};
	shf.r.wrap.b32 	%r11208, %r11205, %r11204, 18;
	shf.r.wrap.b32 	%r11209, %r11204, %r11205, 18;
	mov.b64 	%rd16140, {%r11209, %r11208};
	xor.b64  	%rd16141, %rd16140, %rd16139;
	shf.l.wrap.b32 	%r11210, %r11204, %r11205, 23;
	shf.l.wrap.b32 	%r11211, %r11205, %r11204, 23;
	mov.b64 	%rd16142, {%r11211, %r11210};
	xor.b64  	%rd16143, %rd16141, %rd16142;
	xor.b64  	%rd16144, %rd16098, %rd16071;
	and.b64  	%rd16145, %rd16125, %rd16144;
	xor.b64  	%rd16146, %rd16145, %rd16071;
	add.s64 	%rd16147, %rd16044, %rd18941;
	ld.const.u64 	%rd16148, [%rd16138];
	add.s64 	%rd16149, %rd16147, %rd16148;
	add.s64 	%rd16150, %rd16149, %rd16146;
	add.s64 	%rd16151, %rd16150, %rd16143;
	add.s64 	%rd16152, %rd16151, %rd16055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11212,%dummy}, %rd16136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11213}, %rd16136;
	}
	shf.r.wrap.b32 	%r11214, %r11213, %r11212, 28;
	shf.r.wrap.b32 	%r11215, %r11212, %r11213, 28;
	mov.b64 	%rd16153, {%r11215, %r11214};
	shf.l.wrap.b32 	%r11216, %r11212, %r11213, 30;
	shf.l.wrap.b32 	%r11217, %r11213, %r11212, 30;
	mov.b64 	%rd16154, {%r11217, %r11216};
	xor.b64  	%rd16155, %rd16154, %rd16153;
	shf.l.wrap.b32 	%r11218, %r11212, %r11213, 25;
	shf.l.wrap.b32 	%r11219, %r11213, %r11212, 25;
	mov.b64 	%rd16156, {%r11219, %r11218};
	xor.b64  	%rd16157, %rd16155, %rd16156;
	and.b64  	%rd16158, %rd16136, %rd16109;
	xor.b64  	%rd16159, %rd16136, %rd16109;
	and.b64  	%rd16160, %rd16159, %rd16082;
	or.b64  	%rd16161, %rd16160, %rd16158;
	add.s64 	%rd16162, %rd16151, %rd16161;
	add.s64 	%rd16163, %rd16162, %rd16157;
	add.s32 	%r11220, %r13059, 6;
	mul.wide.s32 	%rd16164, %r11220, 8;
	add.s64 	%rd16165, %rd18517, %rd16164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11221,%dummy}, %rd16152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11222}, %rd16152;
	}
	shf.r.wrap.b32 	%r11223, %r11222, %r11221, 14;
	shf.r.wrap.b32 	%r11224, %r11221, %r11222, 14;
	mov.b64 	%rd16166, {%r11224, %r11223};
	shf.r.wrap.b32 	%r11225, %r11222, %r11221, 18;
	shf.r.wrap.b32 	%r11226, %r11221, %r11222, 18;
	mov.b64 	%rd16167, {%r11226, %r11225};
	xor.b64  	%rd16168, %rd16167, %rd16166;
	shf.l.wrap.b32 	%r11227, %r11221, %r11222, 23;
	shf.l.wrap.b32 	%r11228, %r11222, %r11221, 23;
	mov.b64 	%rd16169, {%r11228, %r11227};
	xor.b64  	%rd16170, %rd16168, %rd16169;
	xor.b64  	%rd16171, %rd16125, %rd16098;
	and.b64  	%rd16172, %rd16152, %rd16171;
	xor.b64  	%rd16173, %rd16172, %rd16098;
	add.s64 	%rd16174, %rd16071, %rd18942;
	ld.const.u64 	%rd16175, [%rd16165];
	add.s64 	%rd16176, %rd16174, %rd16175;
	add.s64 	%rd16177, %rd16176, %rd16173;
	add.s64 	%rd16178, %rd16177, %rd16170;
	add.s64 	%rd16179, %rd16178, %rd16082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11229,%dummy}, %rd16163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11230}, %rd16163;
	}
	shf.r.wrap.b32 	%r11231, %r11230, %r11229, 28;
	shf.r.wrap.b32 	%r11232, %r11229, %r11230, 28;
	mov.b64 	%rd16180, {%r11232, %r11231};
	shf.l.wrap.b32 	%r11233, %r11229, %r11230, 30;
	shf.l.wrap.b32 	%r11234, %r11230, %r11229, 30;
	mov.b64 	%rd16181, {%r11234, %r11233};
	xor.b64  	%rd16182, %rd16181, %rd16180;
	shf.l.wrap.b32 	%r11235, %r11229, %r11230, 25;
	shf.l.wrap.b32 	%r11236, %r11230, %r11229, 25;
	mov.b64 	%rd16183, {%r11236, %r11235};
	xor.b64  	%rd16184, %rd16182, %rd16183;
	and.b64  	%rd16185, %rd16163, %rd16136;
	xor.b64  	%rd16186, %rd16163, %rd16136;
	and.b64  	%rd16187, %rd16186, %rd16109;
	or.b64  	%rd16188, %rd16187, %rd16185;
	add.s64 	%rd16189, %rd16178, %rd16188;
	add.s64 	%rd16190, %rd16189, %rd16184;
	add.s32 	%r11237, %r13059, 7;
	mul.wide.s32 	%rd16191, %r11237, 8;
	add.s64 	%rd16192, %rd18517, %rd16191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11238,%dummy}, %rd16179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11239}, %rd16179;
	}
	shf.r.wrap.b32 	%r11240, %r11239, %r11238, 14;
	shf.r.wrap.b32 	%r11241, %r11238, %r11239, 14;
	mov.b64 	%rd16193, {%r11241, %r11240};
	shf.r.wrap.b32 	%r11242, %r11239, %r11238, 18;
	shf.r.wrap.b32 	%r11243, %r11238, %r11239, 18;
	mov.b64 	%rd16194, {%r11243, %r11242};
	xor.b64  	%rd16195, %rd16194, %rd16193;
	shf.l.wrap.b32 	%r11244, %r11238, %r11239, 23;
	shf.l.wrap.b32 	%r11245, %r11239, %r11238, 23;
	mov.b64 	%rd16196, {%r11245, %r11244};
	xor.b64  	%rd16197, %rd16195, %rd16196;
	xor.b64  	%rd16198, %rd16152, %rd16125;
	and.b64  	%rd16199, %rd16179, %rd16198;
	xor.b64  	%rd16200, %rd16199, %rd16125;
	add.s64 	%rd16201, %rd16098, %rd18943;
	ld.const.u64 	%rd16202, [%rd16192];
	add.s64 	%rd16203, %rd16201, %rd16202;
	add.s64 	%rd16204, %rd16203, %rd16200;
	add.s64 	%rd16205, %rd16204, %rd16197;
	add.s64 	%rd16206, %rd16205, %rd16109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11246,%dummy}, %rd16190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11247}, %rd16190;
	}
	shf.r.wrap.b32 	%r11248, %r11247, %r11246, 28;
	shf.r.wrap.b32 	%r11249, %r11246, %r11247, 28;
	mov.b64 	%rd16207, {%r11249, %r11248};
	shf.l.wrap.b32 	%r11250, %r11246, %r11247, 30;
	shf.l.wrap.b32 	%r11251, %r11247, %r11246, 30;
	mov.b64 	%rd16208, {%r11251, %r11250};
	xor.b64  	%rd16209, %rd16208, %rd16207;
	shf.l.wrap.b32 	%r11252, %r11246, %r11247, 25;
	shf.l.wrap.b32 	%r11253, %r11247, %r11246, 25;
	mov.b64 	%rd16210, {%r11253, %r11252};
	xor.b64  	%rd16211, %rd16209, %rd16210;
	and.b64  	%rd16212, %rd16190, %rd16163;
	xor.b64  	%rd16213, %rd16190, %rd16163;
	and.b64  	%rd16214, %rd16213, %rd16136;
	or.b64  	%rd16215, %rd16214, %rd16212;
	add.s64 	%rd16216, %rd16205, %rd16215;
	add.s64 	%rd16217, %rd16216, %rd16211;
	add.s32 	%r11254, %r13059, 8;
	mul.wide.s32 	%rd16218, %r11254, 8;
	add.s64 	%rd16219, %rd18517, %rd16218;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11255,%dummy}, %rd16206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11256}, %rd16206;
	}
	shf.r.wrap.b32 	%r11257, %r11256, %r11255, 14;
	shf.r.wrap.b32 	%r11258, %r11255, %r11256, 14;
	mov.b64 	%rd16220, {%r11258, %r11257};
	shf.r.wrap.b32 	%r11259, %r11256, %r11255, 18;
	shf.r.wrap.b32 	%r11260, %r11255, %r11256, 18;
	mov.b64 	%rd16221, {%r11260, %r11259};
	xor.b64  	%rd16222, %rd16221, %rd16220;
	shf.l.wrap.b32 	%r11261, %r11255, %r11256, 23;
	shf.l.wrap.b32 	%r11262, %r11256, %r11255, 23;
	mov.b64 	%rd16223, {%r11262, %r11261};
	xor.b64  	%rd16224, %rd16222, %rd16223;
	xor.b64  	%rd16225, %rd16179, %rd16152;
	and.b64  	%rd16226, %rd16206, %rd16225;
	xor.b64  	%rd16227, %rd16226, %rd16152;
	add.s64 	%rd16228, %rd16125, %rd18927;
	ld.const.u64 	%rd16229, [%rd16219];
	add.s64 	%rd16230, %rd16228, %rd16229;
	add.s64 	%rd16231, %rd16230, %rd16227;
	add.s64 	%rd16232, %rd16231, %rd16224;
	add.s64 	%rd16233, %rd16232, %rd16136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11263,%dummy}, %rd16217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11264}, %rd16217;
	}
	shf.r.wrap.b32 	%r11265, %r11264, %r11263, 28;
	shf.r.wrap.b32 	%r11266, %r11263, %r11264, 28;
	mov.b64 	%rd16234, {%r11266, %r11265};
	shf.l.wrap.b32 	%r11267, %r11263, %r11264, 30;
	shf.l.wrap.b32 	%r11268, %r11264, %r11263, 30;
	mov.b64 	%rd16235, {%r11268, %r11267};
	xor.b64  	%rd16236, %rd16235, %rd16234;
	shf.l.wrap.b32 	%r11269, %r11263, %r11264, 25;
	shf.l.wrap.b32 	%r11270, %r11264, %r11263, 25;
	mov.b64 	%rd16237, {%r11270, %r11269};
	xor.b64  	%rd16238, %rd16236, %rd16237;
	and.b64  	%rd16239, %rd16217, %rd16190;
	xor.b64  	%rd16240, %rd16217, %rd16190;
	and.b64  	%rd16241, %rd16240, %rd16163;
	or.b64  	%rd16242, %rd16241, %rd16239;
	add.s64 	%rd16243, %rd16232, %rd16242;
	add.s64 	%rd16244, %rd16243, %rd16238;
	add.s32 	%r11271, %r13059, 9;
	mul.wide.s32 	%rd16245, %r11271, 8;
	add.s64 	%rd16246, %rd18517, %rd16245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11272,%dummy}, %rd16233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11273}, %rd16233;
	}
	shf.r.wrap.b32 	%r11274, %r11273, %r11272, 14;
	shf.r.wrap.b32 	%r11275, %r11272, %r11273, 14;
	mov.b64 	%rd16247, {%r11275, %r11274};
	shf.r.wrap.b32 	%r11276, %r11273, %r11272, 18;
	shf.r.wrap.b32 	%r11277, %r11272, %r11273, 18;
	mov.b64 	%rd16248, {%r11277, %r11276};
	xor.b64  	%rd16249, %rd16248, %rd16247;
	shf.l.wrap.b32 	%r11278, %r11272, %r11273, 23;
	shf.l.wrap.b32 	%r11279, %r11273, %r11272, 23;
	mov.b64 	%rd16250, {%r11279, %r11278};
	xor.b64  	%rd16251, %rd16249, %rd16250;
	xor.b64  	%rd16252, %rd16206, %rd16179;
	and.b64  	%rd16253, %rd16233, %rd16252;
	xor.b64  	%rd16254, %rd16253, %rd16179;
	add.s64 	%rd16255, %rd16152, %rd18926;
	ld.const.u64 	%rd16256, [%rd16246];
	add.s64 	%rd16257, %rd16255, %rd16256;
	add.s64 	%rd16258, %rd16257, %rd16254;
	add.s64 	%rd16259, %rd16258, %rd16251;
	add.s64 	%rd16260, %rd16259, %rd16163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11280,%dummy}, %rd16244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11281}, %rd16244;
	}
	shf.r.wrap.b32 	%r11282, %r11281, %r11280, 28;
	shf.r.wrap.b32 	%r11283, %r11280, %r11281, 28;
	mov.b64 	%rd16261, {%r11283, %r11282};
	shf.l.wrap.b32 	%r11284, %r11280, %r11281, 30;
	shf.l.wrap.b32 	%r11285, %r11281, %r11280, 30;
	mov.b64 	%rd16262, {%r11285, %r11284};
	xor.b64  	%rd16263, %rd16262, %rd16261;
	shf.l.wrap.b32 	%r11286, %r11280, %r11281, 25;
	shf.l.wrap.b32 	%r11287, %r11281, %r11280, 25;
	mov.b64 	%rd16264, {%r11287, %r11286};
	xor.b64  	%rd16265, %rd16263, %rd16264;
	and.b64  	%rd16266, %rd16244, %rd16217;
	xor.b64  	%rd16267, %rd16244, %rd16217;
	and.b64  	%rd16268, %rd16267, %rd16190;
	or.b64  	%rd16269, %rd16268, %rd16266;
	add.s64 	%rd16270, %rd16259, %rd16269;
	add.s64 	%rd16271, %rd16270, %rd16265;
	add.s32 	%r11288, %r13059, 10;
	mul.wide.s32 	%rd16272, %r11288, 8;
	add.s64 	%rd16273, %rd18517, %rd16272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11289,%dummy}, %rd16260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11290}, %rd16260;
	}
	shf.r.wrap.b32 	%r11291, %r11290, %r11289, 14;
	shf.r.wrap.b32 	%r11292, %r11289, %r11290, 14;
	mov.b64 	%rd16274, {%r11292, %r11291};
	shf.r.wrap.b32 	%r11293, %r11290, %r11289, 18;
	shf.r.wrap.b32 	%r11294, %r11289, %r11290, 18;
	mov.b64 	%rd16275, {%r11294, %r11293};
	xor.b64  	%rd16276, %rd16275, %rd16274;
	shf.l.wrap.b32 	%r11295, %r11289, %r11290, 23;
	shf.l.wrap.b32 	%r11296, %r11290, %r11289, 23;
	mov.b64 	%rd16277, {%r11296, %r11295};
	xor.b64  	%rd16278, %rd16276, %rd16277;
	xor.b64  	%rd16279, %rd16233, %rd16206;
	and.b64  	%rd16280, %rd16260, %rd16279;
	xor.b64  	%rd16281, %rd16280, %rd16206;
	add.s64 	%rd16282, %rd16179, %rd18925;
	ld.const.u64 	%rd16283, [%rd16273];
	add.s64 	%rd16284, %rd16282, %rd16283;
	add.s64 	%rd16285, %rd16284, %rd16281;
	add.s64 	%rd16286, %rd16285, %rd16278;
	add.s64 	%rd16287, %rd16286, %rd16190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11297,%dummy}, %rd16271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11298}, %rd16271;
	}
	shf.r.wrap.b32 	%r11299, %r11298, %r11297, 28;
	shf.r.wrap.b32 	%r11300, %r11297, %r11298, 28;
	mov.b64 	%rd16288, {%r11300, %r11299};
	shf.l.wrap.b32 	%r11301, %r11297, %r11298, 30;
	shf.l.wrap.b32 	%r11302, %r11298, %r11297, 30;
	mov.b64 	%rd16289, {%r11302, %r11301};
	xor.b64  	%rd16290, %rd16289, %rd16288;
	shf.l.wrap.b32 	%r11303, %r11297, %r11298, 25;
	shf.l.wrap.b32 	%r11304, %r11298, %r11297, 25;
	mov.b64 	%rd16291, {%r11304, %r11303};
	xor.b64  	%rd16292, %rd16290, %rd16291;
	and.b64  	%rd16293, %rd16271, %rd16244;
	xor.b64  	%rd16294, %rd16271, %rd16244;
	and.b64  	%rd16295, %rd16294, %rd16217;
	or.b64  	%rd16296, %rd16295, %rd16293;
	add.s64 	%rd16297, %rd16286, %rd16296;
	add.s64 	%rd16298, %rd16297, %rd16292;
	add.s32 	%r11305, %r13059, 11;
	mul.wide.s32 	%rd16299, %r11305, 8;
	add.s64 	%rd16300, %rd18517, %rd16299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11306,%dummy}, %rd16287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11307}, %rd16287;
	}
	shf.r.wrap.b32 	%r11308, %r11307, %r11306, 14;
	shf.r.wrap.b32 	%r11309, %r11306, %r11307, 14;
	mov.b64 	%rd16301, {%r11309, %r11308};
	shf.r.wrap.b32 	%r11310, %r11307, %r11306, 18;
	shf.r.wrap.b32 	%r11311, %r11306, %r11307, 18;
	mov.b64 	%rd16302, {%r11311, %r11310};
	xor.b64  	%rd16303, %rd16302, %rd16301;
	shf.l.wrap.b32 	%r11312, %r11306, %r11307, 23;
	shf.l.wrap.b32 	%r11313, %r11307, %r11306, 23;
	mov.b64 	%rd16304, {%r11313, %r11312};
	xor.b64  	%rd16305, %rd16303, %rd16304;
	xor.b64  	%rd16306, %rd16260, %rd16233;
	and.b64  	%rd16307, %rd16287, %rd16306;
	xor.b64  	%rd16308, %rd16307, %rd16233;
	add.s64 	%rd16309, %rd16206, %rd18924;
	ld.const.u64 	%rd16310, [%rd16300];
	add.s64 	%rd16311, %rd16309, %rd16310;
	add.s64 	%rd16312, %rd16311, %rd16308;
	add.s64 	%rd16313, %rd16312, %rd16305;
	add.s64 	%rd16314, %rd16313, %rd16217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11314,%dummy}, %rd16298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11315}, %rd16298;
	}
	shf.r.wrap.b32 	%r11316, %r11315, %r11314, 28;
	shf.r.wrap.b32 	%r11317, %r11314, %r11315, 28;
	mov.b64 	%rd16315, {%r11317, %r11316};
	shf.l.wrap.b32 	%r11318, %r11314, %r11315, 30;
	shf.l.wrap.b32 	%r11319, %r11315, %r11314, 30;
	mov.b64 	%rd16316, {%r11319, %r11318};
	xor.b64  	%rd16317, %rd16316, %rd16315;
	shf.l.wrap.b32 	%r11320, %r11314, %r11315, 25;
	shf.l.wrap.b32 	%r11321, %r11315, %r11314, 25;
	mov.b64 	%rd16318, {%r11321, %r11320};
	xor.b64  	%rd16319, %rd16317, %rd16318;
	and.b64  	%rd16320, %rd16298, %rd16271;
	xor.b64  	%rd16321, %rd16298, %rd16271;
	and.b64  	%rd16322, %rd16321, %rd16244;
	or.b64  	%rd16323, %rd16322, %rd16320;
	add.s64 	%rd16324, %rd16313, %rd16323;
	add.s64 	%rd16325, %rd16324, %rd16319;
	add.s32 	%r11322, %r13059, 12;
	mul.wide.s32 	%rd16326, %r11322, 8;
	add.s64 	%rd16327, %rd18517, %rd16326;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11323,%dummy}, %rd16314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11324}, %rd16314;
	}
	shf.r.wrap.b32 	%r11325, %r11324, %r11323, 14;
	shf.r.wrap.b32 	%r11326, %r11323, %r11324, 14;
	mov.b64 	%rd16328, {%r11326, %r11325};
	shf.r.wrap.b32 	%r11327, %r11324, %r11323, 18;
	shf.r.wrap.b32 	%r11328, %r11323, %r11324, 18;
	mov.b64 	%rd16329, {%r11328, %r11327};
	xor.b64  	%rd16330, %rd16329, %rd16328;
	shf.l.wrap.b32 	%r11329, %r11323, %r11324, 23;
	shf.l.wrap.b32 	%r11330, %r11324, %r11323, 23;
	mov.b64 	%rd16331, {%r11330, %r11329};
	xor.b64  	%rd16332, %rd16330, %rd16331;
	xor.b64  	%rd16333, %rd16287, %rd16260;
	and.b64  	%rd16334, %rd16314, %rd16333;
	xor.b64  	%rd16335, %rd16334, %rd16260;
	add.s64 	%rd16336, %rd16233, %rd18923;
	ld.const.u64 	%rd16337, [%rd16327];
	add.s64 	%rd16338, %rd16336, %rd16337;
	add.s64 	%rd16339, %rd16338, %rd16335;
	add.s64 	%rd16340, %rd16339, %rd16332;
	add.s64 	%rd18935, %rd16340, %rd16244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11331,%dummy}, %rd16325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11332}, %rd16325;
	}
	shf.r.wrap.b32 	%r11333, %r11332, %r11331, 28;
	shf.r.wrap.b32 	%r11334, %r11331, %r11332, 28;
	mov.b64 	%rd16341, {%r11334, %r11333};
	shf.l.wrap.b32 	%r11335, %r11331, %r11332, 30;
	shf.l.wrap.b32 	%r11336, %r11332, %r11331, 30;
	mov.b64 	%rd16342, {%r11336, %r11335};
	xor.b64  	%rd16343, %rd16342, %rd16341;
	shf.l.wrap.b32 	%r11337, %r11331, %r11332, 25;
	shf.l.wrap.b32 	%r11338, %r11332, %r11331, 25;
	mov.b64 	%rd16344, {%r11338, %r11337};
	xor.b64  	%rd16345, %rd16343, %rd16344;
	and.b64  	%rd16346, %rd16325, %rd16298;
	xor.b64  	%rd16347, %rd16325, %rd16298;
	and.b64  	%rd16348, %rd16347, %rd16271;
	or.b64  	%rd16349, %rd16348, %rd16346;
	add.s64 	%rd16350, %rd16340, %rd16349;
	add.s64 	%rd18931, %rd16350, %rd16345;
	add.s32 	%r11339, %r13059, 13;
	mul.wide.s32 	%rd16351, %r11339, 8;
	add.s64 	%rd16352, %rd18517, %rd16351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11340,%dummy}, %rd18935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11341}, %rd18935;
	}
	shf.r.wrap.b32 	%r11342, %r11341, %r11340, 14;
	shf.r.wrap.b32 	%r11343, %r11340, %r11341, 14;
	mov.b64 	%rd16353, {%r11343, %r11342};
	shf.r.wrap.b32 	%r11344, %r11341, %r11340, 18;
	shf.r.wrap.b32 	%r11345, %r11340, %r11341, 18;
	mov.b64 	%rd16354, {%r11345, %r11344};
	xor.b64  	%rd16355, %rd16354, %rd16353;
	shf.l.wrap.b32 	%r11346, %r11340, %r11341, 23;
	shf.l.wrap.b32 	%r11347, %r11341, %r11340, 23;
	mov.b64 	%rd16356, {%r11347, %r11346};
	xor.b64  	%rd16357, %rd16355, %rd16356;
	xor.b64  	%rd16358, %rd16314, %rd16287;
	and.b64  	%rd16359, %rd18935, %rd16358;
	xor.b64  	%rd16360, %rd16359, %rd16287;
	add.s64 	%rd16361, %rd16260, %rd18922;
	ld.const.u64 	%rd16362, [%rd16352];
	add.s64 	%rd16363, %rd16361, %rd16362;
	add.s64 	%rd16364, %rd16363, %rd16360;
	add.s64 	%rd16365, %rd16364, %rd16357;
	add.s64 	%rd18934, %rd16365, %rd16271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11348,%dummy}, %rd18931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11349}, %rd18931;
	}
	shf.r.wrap.b32 	%r11350, %r11349, %r11348, 28;
	shf.r.wrap.b32 	%r11351, %r11348, %r11349, 28;
	mov.b64 	%rd16366, {%r11351, %r11350};
	shf.l.wrap.b32 	%r11352, %r11348, %r11349, 30;
	shf.l.wrap.b32 	%r11353, %r11349, %r11348, 30;
	mov.b64 	%rd16367, {%r11353, %r11352};
	xor.b64  	%rd16368, %rd16367, %rd16366;
	shf.l.wrap.b32 	%r11354, %r11348, %r11349, 25;
	shf.l.wrap.b32 	%r11355, %r11349, %r11348, 25;
	mov.b64 	%rd16369, {%r11355, %r11354};
	xor.b64  	%rd16370, %rd16368, %rd16369;
	and.b64  	%rd16371, %rd18931, %rd16325;
	xor.b64  	%rd16372, %rd18931, %rd16325;
	and.b64  	%rd16373, %rd16372, %rd16298;
	or.b64  	%rd16374, %rd16373, %rd16371;
	add.s64 	%rd16375, %rd16365, %rd16374;
	add.s64 	%rd18930, %rd16375, %rd16370;
	add.s32 	%r11356, %r13059, 14;
	mul.wide.s32 	%rd16376, %r11356, 8;
	add.s64 	%rd16377, %rd18517, %rd16376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11357,%dummy}, %rd18934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11358}, %rd18934;
	}
	shf.r.wrap.b32 	%r11359, %r11358, %r11357, 14;
	shf.r.wrap.b32 	%r11360, %r11357, %r11358, 14;
	mov.b64 	%rd16378, {%r11360, %r11359};
	shf.r.wrap.b32 	%r11361, %r11358, %r11357, 18;
	shf.r.wrap.b32 	%r11362, %r11357, %r11358, 18;
	mov.b64 	%rd16379, {%r11362, %r11361};
	xor.b64  	%rd16380, %rd16379, %rd16378;
	shf.l.wrap.b32 	%r11363, %r11357, %r11358, 23;
	shf.l.wrap.b32 	%r11364, %r11358, %r11357, 23;
	mov.b64 	%rd16381, {%r11364, %r11363};
	xor.b64  	%rd16382, %rd16380, %rd16381;
	xor.b64  	%rd16383, %rd18935, %rd16314;
	and.b64  	%rd16384, %rd18934, %rd16383;
	xor.b64  	%rd16385, %rd16384, %rd16314;
	add.s64 	%rd16386, %rd16287, %rd18921;
	ld.const.u64 	%rd16387, [%rd16377];
	add.s64 	%rd16388, %rd16386, %rd16387;
	add.s64 	%rd16389, %rd16388, %rd16385;
	add.s64 	%rd16390, %rd16389, %rd16382;
	add.s64 	%rd18933, %rd16390, %rd16298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11365,%dummy}, %rd18930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11366}, %rd18930;
	}
	shf.r.wrap.b32 	%r11367, %r11366, %r11365, 28;
	shf.r.wrap.b32 	%r11368, %r11365, %r11366, 28;
	mov.b64 	%rd16391, {%r11368, %r11367};
	shf.l.wrap.b32 	%r11369, %r11365, %r11366, 30;
	shf.l.wrap.b32 	%r11370, %r11366, %r11365, 30;
	mov.b64 	%rd16392, {%r11370, %r11369};
	xor.b64  	%rd16393, %rd16392, %rd16391;
	shf.l.wrap.b32 	%r11371, %r11365, %r11366, 25;
	shf.l.wrap.b32 	%r11372, %r11366, %r11365, 25;
	mov.b64 	%rd16394, {%r11372, %r11371};
	xor.b64  	%rd16395, %rd16393, %rd16394;
	and.b64  	%rd16396, %rd18930, %rd18931;
	xor.b64  	%rd16397, %rd18930, %rd18931;
	and.b64  	%rd16398, %rd16397, %rd16325;
	or.b64  	%rd16399, %rd16398, %rd16396;
	add.s64 	%rd16400, %rd16390, %rd16399;
	add.s64 	%rd18929, %rd16400, %rd16395;
	add.s32 	%r11373, %r13059, 15;
	mul.wide.s32 	%rd16401, %r11373, 8;
	add.s64 	%rd16402, %rd18517, %rd16401;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11374,%dummy}, %rd18933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11375}, %rd18933;
	}
	shf.r.wrap.b32 	%r11376, %r11375, %r11374, 14;
	shf.r.wrap.b32 	%r11377, %r11374, %r11375, 14;
	mov.b64 	%rd16403, {%r11377, %r11376};
	shf.r.wrap.b32 	%r11378, %r11375, %r11374, 18;
	shf.r.wrap.b32 	%r11379, %r11374, %r11375, 18;
	mov.b64 	%rd16404, {%r11379, %r11378};
	xor.b64  	%rd16405, %rd16404, %rd16403;
	shf.l.wrap.b32 	%r11380, %r11374, %r11375, 23;
	shf.l.wrap.b32 	%r11381, %r11375, %r11374, 23;
	mov.b64 	%rd16406, {%r11381, %r11380};
	xor.b64  	%rd16407, %rd16405, %rd16406;
	xor.b64  	%rd16408, %rd18934, %rd18935;
	and.b64  	%rd16409, %rd18933, %rd16408;
	xor.b64  	%rd16410, %rd16409, %rd18935;
	add.s64 	%rd16411, %rd16314, %rd18920;
	ld.const.u64 	%rd16412, [%rd16402];
	add.s64 	%rd16413, %rd16411, %rd16412;
	add.s64 	%rd16414, %rd16413, %rd16410;
	add.s64 	%rd16415, %rd16414, %rd16407;
	add.s64 	%rd18932, %rd16415, %rd16325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11382,%dummy}, %rd18929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11383}, %rd18929;
	}
	shf.r.wrap.b32 	%r11384, %r11383, %r11382, 28;
	shf.r.wrap.b32 	%r11385, %r11382, %r11383, 28;
	mov.b64 	%rd16416, {%r11385, %r11384};
	shf.l.wrap.b32 	%r11386, %r11382, %r11383, 30;
	shf.l.wrap.b32 	%r11387, %r11383, %r11382, 30;
	mov.b64 	%rd16417, {%r11387, %r11386};
	xor.b64  	%rd16418, %rd16417, %rd16416;
	shf.l.wrap.b32 	%r11388, %r11382, %r11383, 25;
	shf.l.wrap.b32 	%r11389, %r11383, %r11382, 25;
	mov.b64 	%rd16419, {%r11389, %r11388};
	xor.b64  	%rd16420, %rd16418, %rd16419;
	and.b64  	%rd16421, %rd18929, %rd18930;
	xor.b64  	%rd16422, %rd18929, %rd18930;
	and.b64  	%rd16423, %rd16422, %rd18931;
	or.b64  	%rd16424, %rd16423, %rd16421;
	add.s64 	%rd16425, %rd16415, %rd16424;
	add.s64 	%rd18928, %rd16425, %rd16420;
	add.s32 	%r13059, %r13059, 16;
	setp.lt.s32	%p184, %r13059, 80;
	@%p184 bra 	BB0_301;

	add.s64 	%rd16426, %rd18928, %rd1192;
	st.local.u64 	[%rd1], %rd16426;
	add.s64 	%rd16427, %rd18929, %rd1193;
	st.local.u64 	[%rd1+8], %rd16427;
	add.s64 	%rd16428, %rd18930, %rd1194;
	st.local.u64 	[%rd1+16], %rd16428;
	add.s64 	%rd16429, %rd18931, %rd1191;
	st.local.u64 	[%rd1+24], %rd16429;
	add.s64 	%rd16430, %rd18932, %rd1186;
	st.local.u64 	[%rd1+32], %rd16430;
	add.s64 	%rd16431, %rd18933, %rd1188;
	st.local.u64 	[%rd1+40], %rd16431;
	add.s64 	%rd16432, %rd18934, %rd1187;
	st.local.u64 	[%rd1+48], %rd16432;
	add.s64 	%rd16433, %rd18935, %rd1189;
	st.local.u64 	[%rd1+56], %rd16433;
	sub.s32 	%r443, %r3, %r423;
	setp.lt.s32	%p185, %r443, 1;
	@%p185 bra 	BB0_320;

	add.s32 	%r444, %r422, -128;
	and.b32  	%r445, %r444, 3;
	setp.eq.s32	%p186, %r445, 0;
	mov.u32 	%r13063, 0;
	@%p186 bra 	BB0_309;

	setp.eq.s32	%p187, %r445, 1;
	mov.u32 	%r13061, 0;
	@%p187 bra 	BB0_308;

	setp.eq.s32	%p188, %r445, 2;
	mov.u32 	%r13060, 0;
	@%p188 bra 	BB0_307;

	xor.b32  	%r11394, %r423, 7;
	cvt.u64.u32	%rd16434, %r11394;
	add.s64 	%rd16435, %rd1465, %rd16434;
	ld.local.u8 	%rs259, [%rd16435];
	st.local.u8 	[%rd1185], %rs259;
	mov.u32 	%r13060, 1;

BB0_307:
	add.s32 	%r11395, %r13060, %r423;
	xor.b32  	%r11396, %r11395, 7;
	cvt.s64.s32	%rd16436, %r11396;
	add.s64 	%rd16437, %rd1465, %rd16436;
	ld.local.u8 	%rs260, [%rd16437];
	xor.b32  	%r11397, %r13060, 7;
	cvt.u64.u32	%rd16438, %r11397;
	add.s64 	%rd16439, %rd89, %rd16438;
	st.local.u8 	[%rd16439], %rs260;
	add.s32 	%r13061, %r13060, 1;

BB0_308:
	add.s32 	%r11398, %r13061, %r423;
	xor.b32  	%r11399, %r11398, 7;
	cvt.s64.s32	%rd16440, %r11399;
	add.s64 	%rd16441, %rd1465, %rd16440;
	ld.local.u8 	%rs261, [%rd16441];
	xor.b32  	%r11400, %r13061, 7;
	cvt.s64.s32	%rd16442, %r11400;
	add.s64 	%rd16443, %rd89, %rd16442;
	st.local.u8 	[%rd16443], %rs261;
	add.s32 	%r13063, %r13061, 1;

BB0_309:
	setp.lt.u32	%p189, %r444, 4;
	@%p189 bra 	BB0_320;

BB0_310:
	add.s32 	%r11401, %r13063, %r423;
	xor.b32  	%r11402, %r11401, 7;
	cvt.s64.s32	%rd16444, %r11402;
	add.s64 	%rd16445, %rd1465, %rd16444;
	ld.local.u8 	%rs262, [%rd16445];
	xor.b32  	%r11403, %r13063, 7;
	cvt.s64.s32	%rd16446, %r11403;
	add.s64 	%rd16447, %rd89, %rd16446;
	st.local.u8 	[%rd16447], %rs262;
	add.s32 	%r11404, %r13063, 1;
	add.s32 	%r11405, %r11404, %r423;
	xor.b32  	%r11406, %r11405, 7;
	cvt.s64.s32	%rd16448, %r11406;
	add.s64 	%rd16449, %rd1465, %rd16448;
	ld.local.u8 	%rs263, [%rd16449];
	xor.b32  	%r11407, %r11404, 7;
	cvt.s64.s32	%rd16450, %r11407;
	add.s64 	%rd16451, %rd89, %rd16450;
	st.local.u8 	[%rd16451], %rs263;
	add.s32 	%r11408, %r13063, 2;
	add.s32 	%r11409, %r11408, %r423;
	xor.b32  	%r11410, %r11409, 7;
	cvt.s64.s32	%rd16452, %r11410;
	add.s64 	%rd16453, %rd1465, %rd16452;
	ld.local.u8 	%rs264, [%rd16453];
	xor.b32  	%r11411, %r11408, 7;
	cvt.s64.s32	%rd16454, %r11411;
	add.s64 	%rd16455, %rd89, %rd16454;
	st.local.u8 	[%rd16455], %rs264;
	add.s32 	%r11412, %r13063, 3;
	add.s32 	%r11413, %r11412, %r423;
	xor.b32  	%r11414, %r11413, 7;
	cvt.s64.s32	%rd16456, %r11414;
	add.s64 	%rd16457, %rd1465, %rd16456;
	ld.local.u8 	%rs265, [%rd16457];
	xor.b32  	%r11415, %r11412, 7;
	cvt.s64.s32	%rd16458, %r11415;
	add.s64 	%rd16459, %rd89, %rd16458;
	st.local.u8 	[%rd16459], %rs265;
	add.s32 	%r13063, %r13063, 4;
	setp.lt.s32	%p190, %r13063, %r443;
	@%p190 bra 	BB0_310;

BB0_320:
	add.s32 	%r13050, %r13050, 1;
	cvt.u64.u32	%rd16486, %r13050;
	setp.lt.u64	%p197, %rd16486, %rd1184;
	@%p197 bra 	BB0_338;

	ld.local.u32 	%r11439, [%rd1+192];
	and.b32  	%r469, %r11439, 127;
	sub.s32 	%r470, %r2137, %r469;
	and.b32  	%r471, %r470, 3;
	setp.eq.s32	%p198, %r471, 0;
	mov.u32 	%r13075, %r469;
	@%p198 bra 	BB0_327;

	setp.eq.s32	%p199, %r471, 1;
	mov.u32 	%r13073, %r469;
	@%p199 bra 	BB0_326;

	setp.eq.s32	%p200, %r471, 2;
	mov.u32 	%r13072, %r469;
	@%p200 bra 	BB0_325;

	xor.b32  	%r11441, %r469, 7;
	cvt.u64.u32	%rd16487, %r11441;
	add.s64 	%rd16488, %rd89, %rd16487;
	mov.u16 	%rs273, 0;
	st.local.u8 	[%rd16488], %rs273;
	add.s32 	%r13072, %r469, 1;

BB0_325:
	xor.b32  	%r11442, %r13072, 7;
	cvt.s64.s32	%rd16489, %r11442;
	add.s64 	%rd16490, %rd89, %rd16489;
	mov.u16 	%rs274, 0;
	st.local.u8 	[%rd16490], %rs274;
	add.s32 	%r13073, %r13072, 1;

BB0_326:
	xor.b32  	%r11443, %r13073, 7;
	cvt.s64.s32	%rd16491, %r11443;
	add.s64 	%rd16492, %rd89, %rd16491;
	mov.u16 	%rs275, 0;
	st.local.u8 	[%rd16492], %rs275;
	add.s32 	%r13075, %r13073, 1;

BB0_327:
	setp.lt.u32	%p201, %r470, 4;
	@%p201 bra 	BB0_329;

BB0_328:
	xor.b32  	%r11444, %r13075, 7;
	cvt.s64.s32	%rd16493, %r11444;
	add.s64 	%rd16494, %rd89, %rd16493;
	mov.u16 	%rs276, 0;
	st.local.u8 	[%rd16494], %rs276;
	add.s32 	%r11445, %r13075, 1;
	xor.b32  	%r11446, %r11445, 7;
	cvt.s64.s32	%rd16495, %r11446;
	add.s64 	%rd16496, %rd89, %rd16495;
	st.local.u8 	[%rd16496], %rs276;
	add.s32 	%r11447, %r13075, 2;
	xor.b32  	%r11448, %r11447, 7;
	cvt.s64.s32	%rd16497, %r11448;
	add.s64 	%rd16498, %rd89, %rd16497;
	st.local.u8 	[%rd16498], %rs276;
	add.s32 	%r11449, %r13075, 3;
	xor.b32  	%r11450, %r11449, 7;
	cvt.s64.s32	%rd16499, %r11450;
	add.s64 	%rd16500, %rd89, %rd16499;
	st.local.u8 	[%rd16500], %rs276;
	add.s32 	%r13075, %r13075, 4;
	setp.lt.s32	%p202, %r13075, 128;
	@%p202 bra 	BB0_328;

BB0_329:
	mov.u16 	%rs280, 128;
	xor.b32  	%r11451, %r469, 7;
	cvt.u64.u32	%rd16501, %r11451;
	add.s64 	%rd16502, %rd89, %rd16501;
	st.local.u8 	[%rd16502], %rs280;
	ld.local.u64 	%rd19008, [%rd1+64];
	ld.local.u64 	%rd19009, [%rd1+72];
	ld.local.u64 	%rd19010, [%rd1+80];
	ld.local.u64 	%rd19011, [%rd1+88];
	ld.local.u64 	%rd19012, [%rd1+96];
	ld.local.u64 	%rd19013, [%rd1+104];
	ld.local.u64 	%rd19014, [%rd1+112];
	ld.local.u64 	%rd19015, [%rd1+120];
	ld.local.u64 	%rd18999, [%rd1+128];
	ld.local.u64 	%rd18998, [%rd1+136];
	ld.local.u64 	%rd18997, [%rd1+144];
	ld.local.u64 	%rd18996, [%rd1+152];
	ld.local.u64 	%rd18995, [%rd1+160];
	ld.local.u64 	%rd18994, [%rd1+168];
	ld.local.u64 	%rd18993, [%rd1+176];
	setp.gt.u32	%p203, %r469, 111;
	@%p203 bra 	BB0_331;
	bra.uni 	BB0_330;

BB0_331:
	ld.local.u64 	%rd1289, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11453,%dummy}, %rd1289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11454}, %rd1289;
	}
	shf.r.wrap.b32 	%r11455, %r11454, %r11453, 14;
	shf.r.wrap.b32 	%r11456, %r11453, %r11454, 14;
	mov.b64 	%rd16503, {%r11456, %r11455};
	shf.r.wrap.b32 	%r11457, %r11454, %r11453, 18;
	shf.r.wrap.b32 	%r11458, %r11453, %r11454, 18;
	mov.b64 	%rd16504, {%r11458, %r11457};
	xor.b64  	%rd16505, %rd16504, %rd16503;
	shf.l.wrap.b32 	%r11459, %r11453, %r11454, 23;
	shf.l.wrap.b32 	%r11460, %r11454, %r11453, 23;
	mov.b64 	%rd16506, {%r11460, %r11459};
	xor.b64  	%rd16507, %rd16505, %rd16506;
	ld.local.u64 	%rd1290, [%rd1+48];
	ld.local.u64 	%rd1291, [%rd1+40];
	xor.b64  	%rd16508, %rd1290, %rd1291;
	and.b64  	%rd16509, %rd16508, %rd1289;
	xor.b64  	%rd16510, %rd16509, %rd1290;
	ld.local.u64 	%rd1292, [%rd1+56];
	add.s64 	%rd16511, %rd1292, %rd19008;
	add.s64 	%rd16512, %rd16511, %rd18610;
	add.s64 	%rd16513, %rd16512, %rd16510;
	add.s64 	%rd16514, %rd16513, %rd16507;
	ld.local.u64 	%rd1293, [%rd1+24];
	add.s64 	%rd16515, %rd16514, %rd1293;
	ld.local.u64 	%rd1294, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11461,%dummy}, %rd1294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11462}, %rd1294;
	}
	shf.r.wrap.b32 	%r11463, %r11462, %r11461, 28;
	shf.r.wrap.b32 	%r11464, %r11461, %r11462, 28;
	mov.b64 	%rd16516, {%r11464, %r11463};
	shf.l.wrap.b32 	%r11465, %r11461, %r11462, 30;
	shf.l.wrap.b32 	%r11466, %r11462, %r11461, 30;
	mov.b64 	%rd16517, {%r11466, %r11465};
	xor.b64  	%rd16518, %rd16517, %rd16516;
	shf.l.wrap.b32 	%r11467, %r11461, %r11462, 25;
	shf.l.wrap.b32 	%r11468, %r11462, %r11461, 25;
	mov.b64 	%rd16519, {%r11468, %r11467};
	xor.b64  	%rd16520, %rd16518, %rd16519;
	ld.local.u64 	%rd1295, [%rd1+8];
	and.b64  	%rd16521, %rd1295, %rd1294;
	xor.b64  	%rd16522, %rd1295, %rd1294;
	ld.local.u64 	%rd1296, [%rd1+16];
	and.b64  	%rd16523, %rd1296, %rd16522;
	or.b64  	%rd16524, %rd16523, %rd16521;
	add.s64 	%rd16525, %rd16514, %rd16524;
	add.s64 	%rd16526, %rd16525, %rd16520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11469,%dummy}, %rd16515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11470}, %rd16515;
	}
	shf.r.wrap.b32 	%r11471, %r11470, %r11469, 14;
	shf.r.wrap.b32 	%r11472, %r11469, %r11470, 14;
	mov.b64 	%rd16527, {%r11472, %r11471};
	shf.r.wrap.b32 	%r11473, %r11470, %r11469, 18;
	shf.r.wrap.b32 	%r11474, %r11469, %r11470, 18;
	mov.b64 	%rd16528, {%r11474, %r11473};
	xor.b64  	%rd16529, %rd16528, %rd16527;
	shf.l.wrap.b32 	%r11475, %r11469, %r11470, 23;
	shf.l.wrap.b32 	%r11476, %r11470, %r11469, 23;
	mov.b64 	%rd16530, {%r11476, %r11475};
	xor.b64  	%rd16531, %rd16529, %rd16530;
	xor.b64  	%rd16532, %rd1291, %rd1289;
	and.b64  	%rd16533, %rd16515, %rd16532;
	xor.b64  	%rd16534, %rd16533, %rd1291;
	add.s64 	%rd16535, %rd1290, %rd19009;
	add.s64 	%rd16536, %rd16535, %rd18609;
	add.s64 	%rd16537, %rd16536, %rd16534;
	add.s64 	%rd16538, %rd16537, %rd16531;
	add.s64 	%rd16539, %rd16538, %rd1296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11477,%dummy}, %rd16526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11478}, %rd16526;
	}
	shf.r.wrap.b32 	%r11479, %r11478, %r11477, 28;
	shf.r.wrap.b32 	%r11480, %r11477, %r11478, 28;
	mov.b64 	%rd16540, {%r11480, %r11479};
	shf.l.wrap.b32 	%r11481, %r11477, %r11478, 30;
	shf.l.wrap.b32 	%r11482, %r11478, %r11477, 30;
	mov.b64 	%rd16541, {%r11482, %r11481};
	xor.b64  	%rd16542, %rd16541, %rd16540;
	shf.l.wrap.b32 	%r11483, %r11477, %r11478, 25;
	shf.l.wrap.b32 	%r11484, %r11478, %r11477, 25;
	mov.b64 	%rd16543, {%r11484, %r11483};
	xor.b64  	%rd16544, %rd16542, %rd16543;
	and.b64  	%rd16545, %rd16526, %rd1294;
	xor.b64  	%rd16546, %rd16526, %rd1294;
	and.b64  	%rd16547, %rd16546, %rd1295;
	or.b64  	%rd16548, %rd16547, %rd16545;
	add.s64 	%rd16549, %rd16538, %rd16548;
	add.s64 	%rd16550, %rd16549, %rd16544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11485,%dummy}, %rd16539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11486}, %rd16539;
	}
	shf.r.wrap.b32 	%r11487, %r11486, %r11485, 14;
	shf.r.wrap.b32 	%r11488, %r11485, %r11486, 14;
	mov.b64 	%rd16551, {%r11488, %r11487};
	shf.r.wrap.b32 	%r11489, %r11486, %r11485, 18;
	shf.r.wrap.b32 	%r11490, %r11485, %r11486, 18;
	mov.b64 	%rd16552, {%r11490, %r11489};
	xor.b64  	%rd16553, %rd16552, %rd16551;
	shf.l.wrap.b32 	%r11491, %r11485, %r11486, 23;
	shf.l.wrap.b32 	%r11492, %r11486, %r11485, 23;
	mov.b64 	%rd16554, {%r11492, %r11491};
	xor.b64  	%rd16555, %rd16553, %rd16554;
	xor.b64  	%rd16556, %rd16515, %rd1289;
	and.b64  	%rd16557, %rd16539, %rd16556;
	xor.b64  	%rd16558, %rd16557, %rd1289;
	add.s64 	%rd16559, %rd1291, %rd19010;
	add.s64 	%rd16560, %rd16559, %rd18608;
	add.s64 	%rd16561, %rd16560, %rd16558;
	add.s64 	%rd16562, %rd16561, %rd16555;
	add.s64 	%rd16563, %rd16562, %rd1295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11493,%dummy}, %rd16550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11494}, %rd16550;
	}
	shf.r.wrap.b32 	%r11495, %r11494, %r11493, 28;
	shf.r.wrap.b32 	%r11496, %r11493, %r11494, 28;
	mov.b64 	%rd16564, {%r11496, %r11495};
	shf.l.wrap.b32 	%r11497, %r11493, %r11494, 30;
	shf.l.wrap.b32 	%r11498, %r11494, %r11493, 30;
	mov.b64 	%rd16565, {%r11498, %r11497};
	xor.b64  	%rd16566, %rd16565, %rd16564;
	shf.l.wrap.b32 	%r11499, %r11493, %r11494, 25;
	shf.l.wrap.b32 	%r11500, %r11494, %r11493, 25;
	mov.b64 	%rd16567, {%r11500, %r11499};
	xor.b64  	%rd16568, %rd16566, %rd16567;
	and.b64  	%rd16569, %rd16550, %rd16526;
	xor.b64  	%rd16570, %rd16550, %rd16526;
	and.b64  	%rd16571, %rd16570, %rd1294;
	or.b64  	%rd16572, %rd16571, %rd16569;
	add.s64 	%rd16573, %rd16562, %rd16572;
	add.s64 	%rd16574, %rd16573, %rd16568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11501,%dummy}, %rd16563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11502}, %rd16563;
	}
	shf.r.wrap.b32 	%r11503, %r11502, %r11501, 14;
	shf.r.wrap.b32 	%r11504, %r11501, %r11502, 14;
	mov.b64 	%rd16575, {%r11504, %r11503};
	shf.r.wrap.b32 	%r11505, %r11502, %r11501, 18;
	shf.r.wrap.b32 	%r11506, %r11501, %r11502, 18;
	mov.b64 	%rd16576, {%r11506, %r11505};
	xor.b64  	%rd16577, %rd16576, %rd16575;
	shf.l.wrap.b32 	%r11507, %r11501, %r11502, 23;
	shf.l.wrap.b32 	%r11508, %r11502, %r11501, 23;
	mov.b64 	%rd16578, {%r11508, %r11507};
	xor.b64  	%rd16579, %rd16577, %rd16578;
	xor.b64  	%rd16580, %rd16539, %rd16515;
	and.b64  	%rd16581, %rd16563, %rd16580;
	xor.b64  	%rd16582, %rd16581, %rd16515;
	add.s64 	%rd16583, %rd1289, %rd19011;
	add.s64 	%rd16584, %rd16583, %rd18607;
	add.s64 	%rd16585, %rd16584, %rd16582;
	add.s64 	%rd16586, %rd16585, %rd16579;
	add.s64 	%rd16587, %rd16586, %rd1294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11509,%dummy}, %rd16574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11510}, %rd16574;
	}
	shf.r.wrap.b32 	%r11511, %r11510, %r11509, 28;
	shf.r.wrap.b32 	%r11512, %r11509, %r11510, 28;
	mov.b64 	%rd16588, {%r11512, %r11511};
	shf.l.wrap.b32 	%r11513, %r11509, %r11510, 30;
	shf.l.wrap.b32 	%r11514, %r11510, %r11509, 30;
	mov.b64 	%rd16589, {%r11514, %r11513};
	xor.b64  	%rd16590, %rd16589, %rd16588;
	shf.l.wrap.b32 	%r11515, %r11509, %r11510, 25;
	shf.l.wrap.b32 	%r11516, %r11510, %r11509, 25;
	mov.b64 	%rd16591, {%r11516, %r11515};
	xor.b64  	%rd16592, %rd16590, %rd16591;
	and.b64  	%rd16593, %rd16574, %rd16550;
	xor.b64  	%rd16594, %rd16574, %rd16550;
	and.b64  	%rd16595, %rd16594, %rd16526;
	or.b64  	%rd16596, %rd16595, %rd16593;
	add.s64 	%rd16597, %rd16586, %rd16596;
	add.s64 	%rd16598, %rd16597, %rd16592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11517,%dummy}, %rd16587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11518}, %rd16587;
	}
	shf.r.wrap.b32 	%r11519, %r11518, %r11517, 14;
	shf.r.wrap.b32 	%r11520, %r11517, %r11518, 14;
	mov.b64 	%rd16599, {%r11520, %r11519};
	shf.r.wrap.b32 	%r11521, %r11518, %r11517, 18;
	shf.r.wrap.b32 	%r11522, %r11517, %r11518, 18;
	mov.b64 	%rd16600, {%r11522, %r11521};
	xor.b64  	%rd16601, %rd16600, %rd16599;
	shf.l.wrap.b32 	%r11523, %r11517, %r11518, 23;
	shf.l.wrap.b32 	%r11524, %r11518, %r11517, 23;
	mov.b64 	%rd16602, {%r11524, %r11523};
	xor.b64  	%rd16603, %rd16601, %rd16602;
	xor.b64  	%rd16604, %rd16563, %rd16539;
	and.b64  	%rd16605, %rd16587, %rd16604;
	xor.b64  	%rd16606, %rd16605, %rd16539;
	add.s64 	%rd16607, %rd16515, %rd19012;
	add.s64 	%rd16608, %rd16607, %rd18606;
	add.s64 	%rd16609, %rd16608, %rd16606;
	add.s64 	%rd16610, %rd16609, %rd16603;
	add.s64 	%rd16611, %rd16610, %rd16526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11525,%dummy}, %rd16598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11526}, %rd16598;
	}
	shf.r.wrap.b32 	%r11527, %r11526, %r11525, 28;
	shf.r.wrap.b32 	%r11528, %r11525, %r11526, 28;
	mov.b64 	%rd16612, {%r11528, %r11527};
	shf.l.wrap.b32 	%r11529, %r11525, %r11526, 30;
	shf.l.wrap.b32 	%r11530, %r11526, %r11525, 30;
	mov.b64 	%rd16613, {%r11530, %r11529};
	xor.b64  	%rd16614, %rd16613, %rd16612;
	shf.l.wrap.b32 	%r11531, %r11525, %r11526, 25;
	shf.l.wrap.b32 	%r11532, %r11526, %r11525, 25;
	mov.b64 	%rd16615, {%r11532, %r11531};
	xor.b64  	%rd16616, %rd16614, %rd16615;
	and.b64  	%rd16617, %rd16598, %rd16574;
	xor.b64  	%rd16618, %rd16598, %rd16574;
	and.b64  	%rd16619, %rd16618, %rd16550;
	or.b64  	%rd16620, %rd16619, %rd16617;
	add.s64 	%rd16621, %rd16610, %rd16620;
	add.s64 	%rd16622, %rd16621, %rd16616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11533,%dummy}, %rd16611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11534}, %rd16611;
	}
	shf.r.wrap.b32 	%r11535, %r11534, %r11533, 14;
	shf.r.wrap.b32 	%r11536, %r11533, %r11534, 14;
	mov.b64 	%rd16623, {%r11536, %r11535};
	shf.r.wrap.b32 	%r11537, %r11534, %r11533, 18;
	shf.r.wrap.b32 	%r11538, %r11533, %r11534, 18;
	mov.b64 	%rd16624, {%r11538, %r11537};
	xor.b64  	%rd16625, %rd16624, %rd16623;
	shf.l.wrap.b32 	%r11539, %r11533, %r11534, 23;
	shf.l.wrap.b32 	%r11540, %r11534, %r11533, 23;
	mov.b64 	%rd16626, {%r11540, %r11539};
	xor.b64  	%rd16627, %rd16625, %rd16626;
	xor.b64  	%rd16628, %rd16587, %rd16563;
	and.b64  	%rd16629, %rd16611, %rd16628;
	xor.b64  	%rd16630, %rd16629, %rd16563;
	add.s64 	%rd16631, %rd16539, %rd19013;
	add.s64 	%rd16632, %rd16631, %rd18605;
	add.s64 	%rd16633, %rd16632, %rd16630;
	add.s64 	%rd16634, %rd16633, %rd16627;
	add.s64 	%rd16635, %rd16634, %rd16550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11541,%dummy}, %rd16622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11542}, %rd16622;
	}
	shf.r.wrap.b32 	%r11543, %r11542, %r11541, 28;
	shf.r.wrap.b32 	%r11544, %r11541, %r11542, 28;
	mov.b64 	%rd16636, {%r11544, %r11543};
	shf.l.wrap.b32 	%r11545, %r11541, %r11542, 30;
	shf.l.wrap.b32 	%r11546, %r11542, %r11541, 30;
	mov.b64 	%rd16637, {%r11546, %r11545};
	xor.b64  	%rd16638, %rd16637, %rd16636;
	shf.l.wrap.b32 	%r11547, %r11541, %r11542, 25;
	shf.l.wrap.b32 	%r11548, %r11542, %r11541, 25;
	mov.b64 	%rd16639, {%r11548, %r11547};
	xor.b64  	%rd16640, %rd16638, %rd16639;
	and.b64  	%rd16641, %rd16622, %rd16598;
	xor.b64  	%rd16642, %rd16622, %rd16598;
	and.b64  	%rd16643, %rd16642, %rd16574;
	or.b64  	%rd16644, %rd16643, %rd16641;
	add.s64 	%rd16645, %rd16634, %rd16644;
	add.s64 	%rd16646, %rd16645, %rd16640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11549,%dummy}, %rd16635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11550}, %rd16635;
	}
	shf.r.wrap.b32 	%r11551, %r11550, %r11549, 14;
	shf.r.wrap.b32 	%r11552, %r11549, %r11550, 14;
	mov.b64 	%rd16647, {%r11552, %r11551};
	shf.r.wrap.b32 	%r11553, %r11550, %r11549, 18;
	shf.r.wrap.b32 	%r11554, %r11549, %r11550, 18;
	mov.b64 	%rd16648, {%r11554, %r11553};
	xor.b64  	%rd16649, %rd16648, %rd16647;
	shf.l.wrap.b32 	%r11555, %r11549, %r11550, 23;
	shf.l.wrap.b32 	%r11556, %r11550, %r11549, 23;
	mov.b64 	%rd16650, {%r11556, %r11555};
	xor.b64  	%rd16651, %rd16649, %rd16650;
	xor.b64  	%rd16652, %rd16611, %rd16587;
	and.b64  	%rd16653, %rd16635, %rd16652;
	xor.b64  	%rd16654, %rd16653, %rd16587;
	add.s64 	%rd16655, %rd16563, %rd19014;
	add.s64 	%rd16656, %rd16655, %rd18604;
	add.s64 	%rd16657, %rd16656, %rd16654;
	add.s64 	%rd16658, %rd16657, %rd16651;
	add.s64 	%rd16659, %rd16658, %rd16574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11557,%dummy}, %rd16646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11558}, %rd16646;
	}
	shf.r.wrap.b32 	%r11559, %r11558, %r11557, 28;
	shf.r.wrap.b32 	%r11560, %r11557, %r11558, 28;
	mov.b64 	%rd16660, {%r11560, %r11559};
	shf.l.wrap.b32 	%r11561, %r11557, %r11558, 30;
	shf.l.wrap.b32 	%r11562, %r11558, %r11557, 30;
	mov.b64 	%rd16661, {%r11562, %r11561};
	xor.b64  	%rd16662, %rd16661, %rd16660;
	shf.l.wrap.b32 	%r11563, %r11557, %r11558, 25;
	shf.l.wrap.b32 	%r11564, %r11558, %r11557, 25;
	mov.b64 	%rd16663, {%r11564, %r11563};
	xor.b64  	%rd16664, %rd16662, %rd16663;
	and.b64  	%rd16665, %rd16646, %rd16622;
	xor.b64  	%rd16666, %rd16646, %rd16622;
	and.b64  	%rd16667, %rd16666, %rd16598;
	or.b64  	%rd16668, %rd16667, %rd16665;
	add.s64 	%rd16669, %rd16658, %rd16668;
	add.s64 	%rd16670, %rd16669, %rd16664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11565,%dummy}, %rd16659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11566}, %rd16659;
	}
	shf.r.wrap.b32 	%r11567, %r11566, %r11565, 14;
	shf.r.wrap.b32 	%r11568, %r11565, %r11566, 14;
	mov.b64 	%rd16671, {%r11568, %r11567};
	shf.r.wrap.b32 	%r11569, %r11566, %r11565, 18;
	shf.r.wrap.b32 	%r11570, %r11565, %r11566, 18;
	mov.b64 	%rd16672, {%r11570, %r11569};
	xor.b64  	%rd16673, %rd16672, %rd16671;
	shf.l.wrap.b32 	%r11571, %r11565, %r11566, 23;
	shf.l.wrap.b32 	%r11572, %r11566, %r11565, 23;
	mov.b64 	%rd16674, {%r11572, %r11571};
	xor.b64  	%rd16675, %rd16673, %rd16674;
	xor.b64  	%rd16676, %rd16635, %rd16611;
	and.b64  	%rd16677, %rd16659, %rd16676;
	xor.b64  	%rd16678, %rd16677, %rd16611;
	add.s64 	%rd16679, %rd16587, %rd19015;
	add.s64 	%rd16680, %rd16679, %rd18603;
	add.s64 	%rd16681, %rd16680, %rd16678;
	add.s64 	%rd16682, %rd16681, %rd16675;
	add.s64 	%rd16683, %rd16682, %rd16598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11573,%dummy}, %rd16670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11574}, %rd16670;
	}
	shf.r.wrap.b32 	%r11575, %r11574, %r11573, 28;
	shf.r.wrap.b32 	%r11576, %r11573, %r11574, 28;
	mov.b64 	%rd16684, {%r11576, %r11575};
	shf.l.wrap.b32 	%r11577, %r11573, %r11574, 30;
	shf.l.wrap.b32 	%r11578, %r11574, %r11573, 30;
	mov.b64 	%rd16685, {%r11578, %r11577};
	xor.b64  	%rd16686, %rd16685, %rd16684;
	shf.l.wrap.b32 	%r11579, %r11573, %r11574, 25;
	shf.l.wrap.b32 	%r11580, %r11574, %r11573, 25;
	mov.b64 	%rd16687, {%r11580, %r11579};
	xor.b64  	%rd16688, %rd16686, %rd16687;
	and.b64  	%rd16689, %rd16670, %rd16646;
	xor.b64  	%rd16690, %rd16670, %rd16646;
	and.b64  	%rd16691, %rd16690, %rd16622;
	or.b64  	%rd16692, %rd16691, %rd16689;
	add.s64 	%rd16693, %rd16682, %rd16692;
	add.s64 	%rd16694, %rd16693, %rd16688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11581,%dummy}, %rd16683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11582}, %rd16683;
	}
	shf.r.wrap.b32 	%r11583, %r11582, %r11581, 14;
	shf.r.wrap.b32 	%r11584, %r11581, %r11582, 14;
	mov.b64 	%rd16695, {%r11584, %r11583};
	shf.r.wrap.b32 	%r11585, %r11582, %r11581, 18;
	shf.r.wrap.b32 	%r11586, %r11581, %r11582, 18;
	mov.b64 	%rd16696, {%r11586, %r11585};
	xor.b64  	%rd16697, %rd16696, %rd16695;
	shf.l.wrap.b32 	%r11587, %r11581, %r11582, 23;
	shf.l.wrap.b32 	%r11588, %r11582, %r11581, 23;
	mov.b64 	%rd16698, {%r11588, %r11587};
	xor.b64  	%rd16699, %rd16697, %rd16698;
	xor.b64  	%rd16700, %rd16659, %rd16635;
	and.b64  	%rd16701, %rd16683, %rd16700;
	xor.b64  	%rd16702, %rd16701, %rd16635;
	add.s64 	%rd16703, %rd16611, %rd18999;
	add.s64 	%rd16704, %rd16703, %rd18602;
	add.s64 	%rd16705, %rd16704, %rd16702;
	add.s64 	%rd16706, %rd16705, %rd16699;
	add.s64 	%rd16707, %rd16706, %rd16622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11589,%dummy}, %rd16694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11590}, %rd16694;
	}
	shf.r.wrap.b32 	%r11591, %r11590, %r11589, 28;
	shf.r.wrap.b32 	%r11592, %r11589, %r11590, 28;
	mov.b64 	%rd16708, {%r11592, %r11591};
	shf.l.wrap.b32 	%r11593, %r11589, %r11590, 30;
	shf.l.wrap.b32 	%r11594, %r11590, %r11589, 30;
	mov.b64 	%rd16709, {%r11594, %r11593};
	xor.b64  	%rd16710, %rd16709, %rd16708;
	shf.l.wrap.b32 	%r11595, %r11589, %r11590, 25;
	shf.l.wrap.b32 	%r11596, %r11590, %r11589, 25;
	mov.b64 	%rd16711, {%r11596, %r11595};
	xor.b64  	%rd16712, %rd16710, %rd16711;
	and.b64  	%rd16713, %rd16694, %rd16670;
	xor.b64  	%rd16714, %rd16694, %rd16670;
	and.b64  	%rd16715, %rd16714, %rd16646;
	or.b64  	%rd16716, %rd16715, %rd16713;
	add.s64 	%rd16717, %rd16706, %rd16716;
	add.s64 	%rd16718, %rd16717, %rd16712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11597,%dummy}, %rd16707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11598}, %rd16707;
	}
	shf.r.wrap.b32 	%r11599, %r11598, %r11597, 14;
	shf.r.wrap.b32 	%r11600, %r11597, %r11598, 14;
	mov.b64 	%rd16719, {%r11600, %r11599};
	shf.r.wrap.b32 	%r11601, %r11598, %r11597, 18;
	shf.r.wrap.b32 	%r11602, %r11597, %r11598, 18;
	mov.b64 	%rd16720, {%r11602, %r11601};
	xor.b64  	%rd16721, %rd16720, %rd16719;
	shf.l.wrap.b32 	%r11603, %r11597, %r11598, 23;
	shf.l.wrap.b32 	%r11604, %r11598, %r11597, 23;
	mov.b64 	%rd16722, {%r11604, %r11603};
	xor.b64  	%rd16723, %rd16721, %rd16722;
	xor.b64  	%rd16724, %rd16683, %rd16659;
	and.b64  	%rd16725, %rd16707, %rd16724;
	xor.b64  	%rd16726, %rd16725, %rd16659;
	add.s64 	%rd16727, %rd16635, %rd18998;
	add.s64 	%rd16728, %rd16727, %rd18601;
	add.s64 	%rd16729, %rd16728, %rd16726;
	add.s64 	%rd16730, %rd16729, %rd16723;
	add.s64 	%rd16731, %rd16730, %rd16646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11605,%dummy}, %rd16718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11606}, %rd16718;
	}
	shf.r.wrap.b32 	%r11607, %r11606, %r11605, 28;
	shf.r.wrap.b32 	%r11608, %r11605, %r11606, 28;
	mov.b64 	%rd16732, {%r11608, %r11607};
	shf.l.wrap.b32 	%r11609, %r11605, %r11606, 30;
	shf.l.wrap.b32 	%r11610, %r11606, %r11605, 30;
	mov.b64 	%rd16733, {%r11610, %r11609};
	xor.b64  	%rd16734, %rd16733, %rd16732;
	shf.l.wrap.b32 	%r11611, %r11605, %r11606, 25;
	shf.l.wrap.b32 	%r11612, %r11606, %r11605, 25;
	mov.b64 	%rd16735, {%r11612, %r11611};
	xor.b64  	%rd16736, %rd16734, %rd16735;
	and.b64  	%rd16737, %rd16718, %rd16694;
	xor.b64  	%rd16738, %rd16718, %rd16694;
	and.b64  	%rd16739, %rd16738, %rd16670;
	or.b64  	%rd16740, %rd16739, %rd16737;
	add.s64 	%rd16741, %rd16730, %rd16740;
	add.s64 	%rd16742, %rd16741, %rd16736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11613,%dummy}, %rd16731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11614}, %rd16731;
	}
	shf.r.wrap.b32 	%r11615, %r11614, %r11613, 14;
	shf.r.wrap.b32 	%r11616, %r11613, %r11614, 14;
	mov.b64 	%rd16743, {%r11616, %r11615};
	shf.r.wrap.b32 	%r11617, %r11614, %r11613, 18;
	shf.r.wrap.b32 	%r11618, %r11613, %r11614, 18;
	mov.b64 	%rd16744, {%r11618, %r11617};
	xor.b64  	%rd16745, %rd16744, %rd16743;
	shf.l.wrap.b32 	%r11619, %r11613, %r11614, 23;
	shf.l.wrap.b32 	%r11620, %r11614, %r11613, 23;
	mov.b64 	%rd16746, {%r11620, %r11619};
	xor.b64  	%rd16747, %rd16745, %rd16746;
	xor.b64  	%rd16748, %rd16707, %rd16683;
	and.b64  	%rd16749, %rd16731, %rd16748;
	xor.b64  	%rd16750, %rd16749, %rd16683;
	add.s64 	%rd16751, %rd16659, %rd18997;
	add.s64 	%rd16752, %rd16751, %rd18600;
	add.s64 	%rd16753, %rd16752, %rd16750;
	add.s64 	%rd16754, %rd16753, %rd16747;
	add.s64 	%rd16755, %rd16754, %rd16670;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11621,%dummy}, %rd16742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11622}, %rd16742;
	}
	shf.r.wrap.b32 	%r11623, %r11622, %r11621, 28;
	shf.r.wrap.b32 	%r11624, %r11621, %r11622, 28;
	mov.b64 	%rd16756, {%r11624, %r11623};
	shf.l.wrap.b32 	%r11625, %r11621, %r11622, 30;
	shf.l.wrap.b32 	%r11626, %r11622, %r11621, 30;
	mov.b64 	%rd16757, {%r11626, %r11625};
	xor.b64  	%rd16758, %rd16757, %rd16756;
	shf.l.wrap.b32 	%r11627, %r11621, %r11622, 25;
	shf.l.wrap.b32 	%r11628, %r11622, %r11621, 25;
	mov.b64 	%rd16759, {%r11628, %r11627};
	xor.b64  	%rd16760, %rd16758, %rd16759;
	and.b64  	%rd16761, %rd16742, %rd16718;
	xor.b64  	%rd16762, %rd16742, %rd16718;
	and.b64  	%rd16763, %rd16762, %rd16694;
	or.b64  	%rd16764, %rd16763, %rd16761;
	add.s64 	%rd16765, %rd16754, %rd16764;
	add.s64 	%rd16766, %rd16765, %rd16760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11629,%dummy}, %rd16755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11630}, %rd16755;
	}
	shf.r.wrap.b32 	%r11631, %r11630, %r11629, 14;
	shf.r.wrap.b32 	%r11632, %r11629, %r11630, 14;
	mov.b64 	%rd16767, {%r11632, %r11631};
	shf.r.wrap.b32 	%r11633, %r11630, %r11629, 18;
	shf.r.wrap.b32 	%r11634, %r11629, %r11630, 18;
	mov.b64 	%rd16768, {%r11634, %r11633};
	xor.b64  	%rd16769, %rd16768, %rd16767;
	shf.l.wrap.b32 	%r11635, %r11629, %r11630, 23;
	shf.l.wrap.b32 	%r11636, %r11630, %r11629, 23;
	mov.b64 	%rd16770, {%r11636, %r11635};
	xor.b64  	%rd16771, %rd16769, %rd16770;
	xor.b64  	%rd16772, %rd16731, %rd16707;
	and.b64  	%rd16773, %rd16755, %rd16772;
	xor.b64  	%rd16774, %rd16773, %rd16707;
	add.s64 	%rd16775, %rd16683, %rd18996;
	add.s64 	%rd16776, %rd16775, %rd18599;
	add.s64 	%rd16777, %rd16776, %rd16774;
	add.s64 	%rd16778, %rd16777, %rd16771;
	add.s64 	%rd16779, %rd16778, %rd16694;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11637,%dummy}, %rd16766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11638}, %rd16766;
	}
	shf.r.wrap.b32 	%r11639, %r11638, %r11637, 28;
	shf.r.wrap.b32 	%r11640, %r11637, %r11638, 28;
	mov.b64 	%rd16780, {%r11640, %r11639};
	shf.l.wrap.b32 	%r11641, %r11637, %r11638, 30;
	shf.l.wrap.b32 	%r11642, %r11638, %r11637, 30;
	mov.b64 	%rd16781, {%r11642, %r11641};
	xor.b64  	%rd16782, %rd16781, %rd16780;
	shf.l.wrap.b32 	%r11643, %r11637, %r11638, 25;
	shf.l.wrap.b32 	%r11644, %r11638, %r11637, 25;
	mov.b64 	%rd16783, {%r11644, %r11643};
	xor.b64  	%rd16784, %rd16782, %rd16783;
	and.b64  	%rd16785, %rd16766, %rd16742;
	xor.b64  	%rd16786, %rd16766, %rd16742;
	and.b64  	%rd16787, %rd16786, %rd16718;
	or.b64  	%rd16788, %rd16787, %rd16785;
	add.s64 	%rd16789, %rd16778, %rd16788;
	add.s64 	%rd16790, %rd16789, %rd16784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11645,%dummy}, %rd16779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11646}, %rd16779;
	}
	shf.r.wrap.b32 	%r11647, %r11646, %r11645, 14;
	shf.r.wrap.b32 	%r11648, %r11645, %r11646, 14;
	mov.b64 	%rd16791, {%r11648, %r11647};
	shf.r.wrap.b32 	%r11649, %r11646, %r11645, 18;
	shf.r.wrap.b32 	%r11650, %r11645, %r11646, 18;
	mov.b64 	%rd16792, {%r11650, %r11649};
	xor.b64  	%rd16793, %rd16792, %rd16791;
	shf.l.wrap.b32 	%r11651, %r11645, %r11646, 23;
	shf.l.wrap.b32 	%r11652, %r11646, %r11645, 23;
	mov.b64 	%rd16794, {%r11652, %r11651};
	xor.b64  	%rd16795, %rd16793, %rd16794;
	xor.b64  	%rd16796, %rd16755, %rd16731;
	and.b64  	%rd16797, %rd16779, %rd16796;
	xor.b64  	%rd16798, %rd16797, %rd16731;
	add.s64 	%rd16799, %rd16707, %rd18995;
	add.s64 	%rd16800, %rd16799, %rd18598;
	add.s64 	%rd16801, %rd16800, %rd16798;
	add.s64 	%rd16802, %rd16801, %rd16795;
	add.s64 	%rd18959, %rd16802, %rd16718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11653,%dummy}, %rd16790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11654}, %rd16790;
	}
	shf.r.wrap.b32 	%r11655, %r11654, %r11653, 28;
	shf.r.wrap.b32 	%r11656, %r11653, %r11654, 28;
	mov.b64 	%rd16803, {%r11656, %r11655};
	shf.l.wrap.b32 	%r11657, %r11653, %r11654, 30;
	shf.l.wrap.b32 	%r11658, %r11654, %r11653, 30;
	mov.b64 	%rd16804, {%r11658, %r11657};
	xor.b64  	%rd16805, %rd16804, %rd16803;
	shf.l.wrap.b32 	%r11659, %r11653, %r11654, 25;
	shf.l.wrap.b32 	%r11660, %r11654, %r11653, 25;
	mov.b64 	%rd16806, {%r11660, %r11659};
	xor.b64  	%rd16807, %rd16805, %rd16806;
	and.b64  	%rd16808, %rd16790, %rd16766;
	xor.b64  	%rd16809, %rd16790, %rd16766;
	and.b64  	%rd16810, %rd16809, %rd16742;
	or.b64  	%rd16811, %rd16810, %rd16808;
	add.s64 	%rd16812, %rd16802, %rd16811;
	add.s64 	%rd18955, %rd16812, %rd16807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11661,%dummy}, %rd18959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11662}, %rd18959;
	}
	shf.r.wrap.b32 	%r11663, %r11662, %r11661, 14;
	shf.r.wrap.b32 	%r11664, %r11661, %r11662, 14;
	mov.b64 	%rd16813, {%r11664, %r11663};
	shf.r.wrap.b32 	%r11665, %r11662, %r11661, 18;
	shf.r.wrap.b32 	%r11666, %r11661, %r11662, 18;
	mov.b64 	%rd16814, {%r11666, %r11665};
	xor.b64  	%rd16815, %rd16814, %rd16813;
	shf.l.wrap.b32 	%r11667, %r11661, %r11662, 23;
	shf.l.wrap.b32 	%r11668, %r11662, %r11661, 23;
	mov.b64 	%rd16816, {%r11668, %r11667};
	xor.b64  	%rd16817, %rd16815, %rd16816;
	xor.b64  	%rd16818, %rd16779, %rd16755;
	and.b64  	%rd16819, %rd18959, %rd16818;
	xor.b64  	%rd16820, %rd16819, %rd16755;
	add.s64 	%rd16821, %rd16731, %rd18994;
	add.s64 	%rd16822, %rd16821, %rd18597;
	add.s64 	%rd16823, %rd16822, %rd16820;
	add.s64 	%rd16824, %rd16823, %rd16817;
	add.s64 	%rd18958, %rd16824, %rd16742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11669,%dummy}, %rd18955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11670}, %rd18955;
	}
	shf.r.wrap.b32 	%r11671, %r11670, %r11669, 28;
	shf.r.wrap.b32 	%r11672, %r11669, %r11670, 28;
	mov.b64 	%rd16825, {%r11672, %r11671};
	shf.l.wrap.b32 	%r11673, %r11669, %r11670, 30;
	shf.l.wrap.b32 	%r11674, %r11670, %r11669, 30;
	mov.b64 	%rd16826, {%r11674, %r11673};
	xor.b64  	%rd16827, %rd16826, %rd16825;
	shf.l.wrap.b32 	%r11675, %r11669, %r11670, 25;
	shf.l.wrap.b32 	%r11676, %r11670, %r11669, 25;
	mov.b64 	%rd16828, {%r11676, %r11675};
	xor.b64  	%rd16829, %rd16827, %rd16828;
	and.b64  	%rd16830, %rd18955, %rd16790;
	xor.b64  	%rd16831, %rd18955, %rd16790;
	and.b64  	%rd16832, %rd16831, %rd16766;
	or.b64  	%rd16833, %rd16832, %rd16830;
	add.s64 	%rd16834, %rd16824, %rd16833;
	add.s64 	%rd18954, %rd16834, %rd16829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11677,%dummy}, %rd18958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11678}, %rd18958;
	}
	shf.r.wrap.b32 	%r11679, %r11678, %r11677, 14;
	shf.r.wrap.b32 	%r11680, %r11677, %r11678, 14;
	mov.b64 	%rd16835, {%r11680, %r11679};
	shf.r.wrap.b32 	%r11681, %r11678, %r11677, 18;
	shf.r.wrap.b32 	%r11682, %r11677, %r11678, 18;
	mov.b64 	%rd16836, {%r11682, %r11681};
	xor.b64  	%rd16837, %rd16836, %rd16835;
	shf.l.wrap.b32 	%r11683, %r11677, %r11678, 23;
	shf.l.wrap.b32 	%r11684, %r11678, %r11677, 23;
	mov.b64 	%rd16838, {%r11684, %r11683};
	xor.b64  	%rd16839, %rd16837, %rd16838;
	xor.b64  	%rd16840, %rd18959, %rd16779;
	and.b64  	%rd16841, %rd18958, %rd16840;
	xor.b64  	%rd16842, %rd16841, %rd16779;
	add.s64 	%rd16843, %rd16755, %rd18993;
	add.s64 	%rd16844, %rd16843, %rd18596;
	add.s64 	%rd16845, %rd16844, %rd16842;
	add.s64 	%rd16846, %rd16845, %rd16839;
	add.s64 	%rd18957, %rd16846, %rd16766;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11685,%dummy}, %rd18954;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11686}, %rd18954;
	}
	shf.r.wrap.b32 	%r11687, %r11686, %r11685, 28;
	shf.r.wrap.b32 	%r11688, %r11685, %r11686, 28;
	mov.b64 	%rd16847, {%r11688, %r11687};
	shf.l.wrap.b32 	%r11689, %r11685, %r11686, 30;
	shf.l.wrap.b32 	%r11690, %r11686, %r11685, 30;
	mov.b64 	%rd16848, {%r11690, %r11689};
	xor.b64  	%rd16849, %rd16848, %rd16847;
	shf.l.wrap.b32 	%r11691, %r11685, %r11686, 25;
	shf.l.wrap.b32 	%r11692, %r11686, %r11685, 25;
	mov.b64 	%rd16850, {%r11692, %r11691};
	xor.b64  	%rd16851, %rd16849, %rd16850;
	and.b64  	%rd16852, %rd18954, %rd18955;
	xor.b64  	%rd16853, %rd18954, %rd18955;
	and.b64  	%rd16854, %rd16853, %rd16790;
	or.b64  	%rd16855, %rd16854, %rd16852;
	add.s64 	%rd16856, %rd16846, %rd16855;
	add.s64 	%rd18953, %rd16856, %rd16851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11693,%dummy}, %rd18957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11694}, %rd18957;
	}
	shf.r.wrap.b32 	%r11695, %r11694, %r11693, 14;
	shf.r.wrap.b32 	%r11696, %r11693, %r11694, 14;
	mov.b64 	%rd16857, {%r11696, %r11695};
	shf.r.wrap.b32 	%r11697, %r11694, %r11693, 18;
	shf.r.wrap.b32 	%r11698, %r11693, %r11694, 18;
	mov.b64 	%rd16858, {%r11698, %r11697};
	xor.b64  	%rd16859, %rd16858, %rd16857;
	shf.l.wrap.b32 	%r11699, %r11693, %r11694, 23;
	shf.l.wrap.b32 	%r11700, %r11694, %r11693, 23;
	mov.b64 	%rd16860, {%r11700, %r11699};
	xor.b64  	%rd16861, %rd16859, %rd16860;
	xor.b64  	%rd16862, %rd18958, %rd18959;
	and.b64  	%rd16863, %rd18957, %rd16862;
	xor.b64  	%rd16864, %rd16863, %rd18959;
	ld.local.u64 	%rd18944, [%rd1+184];
	add.s64 	%rd16865, %rd16779, %rd18944;
	add.s64 	%rd16866, %rd16865, %rd18595;
	add.s64 	%rd16867, %rd16866, %rd16864;
	add.s64 	%rd16868, %rd16867, %rd16861;
	add.s64 	%rd18956, %rd16868, %rd16790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11701,%dummy}, %rd18953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11702}, %rd18953;
	}
	shf.r.wrap.b32 	%r11703, %r11702, %r11701, 28;
	shf.r.wrap.b32 	%r11704, %r11701, %r11702, 28;
	mov.b64 	%rd16869, {%r11704, %r11703};
	shf.l.wrap.b32 	%r11705, %r11701, %r11702, 30;
	shf.l.wrap.b32 	%r11706, %r11702, %r11701, 30;
	mov.b64 	%rd16870, {%r11706, %r11705};
	xor.b64  	%rd16871, %rd16870, %rd16869;
	shf.l.wrap.b32 	%r11707, %r11701, %r11702, 25;
	shf.l.wrap.b32 	%r11708, %r11702, %r11701, 25;
	mov.b64 	%rd16872, {%r11708, %r11707};
	xor.b64  	%rd16873, %rd16871, %rd16872;
	and.b64  	%rd16874, %rd18953, %rd18954;
	xor.b64  	%rd16875, %rd18953, %rd18954;
	and.b64  	%rd16876, %rd16875, %rd18955;
	or.b64  	%rd16877, %rd16876, %rd16874;
	add.s64 	%rd16878, %rd16868, %rd16877;
	add.s64 	%rd18952, %rd16878, %rd16873;
	mov.u32 	%r13076, 16;

BB0_332:
	shr.u64 	%rd16879, %rd18993, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11709,%dummy}, %rd18993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11710}, %rd18993;
	}
	shf.r.wrap.b32 	%r11711, %r11710, %r11709, 19;
	shf.r.wrap.b32 	%r11712, %r11709, %r11710, 19;
	mov.b64 	%rd16880, {%r11712, %r11711};
	xor.b64  	%rd16881, %rd16880, %rd16879;
	shf.l.wrap.b32 	%r11713, %r11709, %r11710, 3;
	shf.l.wrap.b32 	%r11714, %r11710, %r11709, 3;
	mov.b64 	%rd16882, {%r11714, %r11713};
	xor.b64  	%rd16883, %rd16881, %rd16882;
	shr.u64 	%rd16884, %rd19009, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11715,%dummy}, %rd19009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11716}, %rd19009;
	}
	shf.r.wrap.b32 	%r11717, %r11716, %r11715, 1;
	shf.r.wrap.b32 	%r11718, %r11715, %r11716, 1;
	mov.b64 	%rd16885, {%r11718, %r11717};
	xor.b64  	%rd16886, %rd16885, %rd16884;
	shf.r.wrap.b32 	%r11719, %r11716, %r11715, 8;
	shf.r.wrap.b32 	%r11720, %r11715, %r11716, 8;
	mov.b64 	%rd16887, {%r11720, %r11719};
	xor.b64  	%rd16888, %rd16886, %rd16887;
	add.s64 	%rd16889, %rd18998, %rd19008;
	add.s64 	%rd16890, %rd16889, %rd16883;
	add.s64 	%rd19008, %rd16890, %rd16888;
	shr.u64 	%rd16891, %rd18944, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11721,%dummy}, %rd18944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11722}, %rd18944;
	}
	shf.r.wrap.b32 	%r11723, %r11722, %r11721, 19;
	shf.r.wrap.b32 	%r11724, %r11721, %r11722, 19;
	mov.b64 	%rd16892, {%r11724, %r11723};
	xor.b64  	%rd16893, %rd16892, %rd16891;
	shf.l.wrap.b32 	%r11725, %r11721, %r11722, 3;
	shf.l.wrap.b32 	%r11726, %r11722, %r11721, 3;
	mov.b64 	%rd16894, {%r11726, %r11725};
	xor.b64  	%rd16895, %rd16893, %rd16894;
	shr.u64 	%rd16896, %rd19010, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11727,%dummy}, %rd19010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11728}, %rd19010;
	}
	shf.r.wrap.b32 	%r11729, %r11728, %r11727, 1;
	shf.r.wrap.b32 	%r11730, %r11727, %r11728, 1;
	mov.b64 	%rd16897, {%r11730, %r11729};
	xor.b64  	%rd16898, %rd16897, %rd16896;
	shf.r.wrap.b32 	%r11731, %r11728, %r11727, 8;
	shf.r.wrap.b32 	%r11732, %r11727, %r11728, 8;
	mov.b64 	%rd16899, {%r11732, %r11731};
	xor.b64  	%rd16900, %rd16898, %rd16899;
	add.s64 	%rd16901, %rd18997, %rd19009;
	add.s64 	%rd16902, %rd16901, %rd16895;
	add.s64 	%rd19009, %rd16902, %rd16900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11733,%dummy}, %rd19008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11734}, %rd19008;
	}
	shf.r.wrap.b32 	%r11735, %r11734, %r11733, 19;
	shf.r.wrap.b32 	%r11736, %r11733, %r11734, 19;
	mov.b64 	%rd16903, {%r11736, %r11735};
	shf.l.wrap.b32 	%r11737, %r11733, %r11734, 3;
	shf.l.wrap.b32 	%r11738, %r11734, %r11733, 3;
	mov.b64 	%rd16904, {%r11738, %r11737};
	shr.u64 	%rd16905, %rd19008, 6;
	xor.b64  	%rd16906, %rd16903, %rd16905;
	xor.b64  	%rd16907, %rd16906, %rd16904;
	shr.u64 	%rd16908, %rd19011, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11739,%dummy}, %rd19011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11740}, %rd19011;
	}
	shf.r.wrap.b32 	%r11741, %r11740, %r11739, 1;
	shf.r.wrap.b32 	%r11742, %r11739, %r11740, 1;
	mov.b64 	%rd16909, {%r11742, %r11741};
	xor.b64  	%rd16910, %rd16909, %rd16908;
	shf.r.wrap.b32 	%r11743, %r11740, %r11739, 8;
	shf.r.wrap.b32 	%r11744, %r11739, %r11740, 8;
	mov.b64 	%rd16911, {%r11744, %r11743};
	xor.b64  	%rd16912, %rd16910, %rd16911;
	add.s64 	%rd16913, %rd18996, %rd19010;
	add.s64 	%rd16914, %rd16913, %rd16907;
	add.s64 	%rd19010, %rd16914, %rd16912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11745,%dummy}, %rd19009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11746}, %rd19009;
	}
	shf.r.wrap.b32 	%r11747, %r11746, %r11745, 19;
	shf.r.wrap.b32 	%r11748, %r11745, %r11746, 19;
	mov.b64 	%rd16915, {%r11748, %r11747};
	shf.l.wrap.b32 	%r11749, %r11745, %r11746, 3;
	shf.l.wrap.b32 	%r11750, %r11746, %r11745, 3;
	mov.b64 	%rd16916, {%r11750, %r11749};
	shr.u64 	%rd16917, %rd19009, 6;
	xor.b64  	%rd16918, %rd16915, %rd16917;
	xor.b64  	%rd16919, %rd16918, %rd16916;
	shr.u64 	%rd16920, %rd19012, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11751,%dummy}, %rd19012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11752}, %rd19012;
	}
	shf.r.wrap.b32 	%r11753, %r11752, %r11751, 1;
	shf.r.wrap.b32 	%r11754, %r11751, %r11752, 1;
	mov.b64 	%rd16921, {%r11754, %r11753};
	xor.b64  	%rd16922, %rd16921, %rd16920;
	shf.r.wrap.b32 	%r11755, %r11752, %r11751, 8;
	shf.r.wrap.b32 	%r11756, %r11751, %r11752, 8;
	mov.b64 	%rd16923, {%r11756, %r11755};
	xor.b64  	%rd16924, %rd16922, %rd16923;
	add.s64 	%rd16925, %rd18995, %rd19011;
	add.s64 	%rd16926, %rd16925, %rd16919;
	add.s64 	%rd19011, %rd16926, %rd16924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11757,%dummy}, %rd19010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11758}, %rd19010;
	}
	shf.r.wrap.b32 	%r11759, %r11758, %r11757, 19;
	shf.r.wrap.b32 	%r11760, %r11757, %r11758, 19;
	mov.b64 	%rd16927, {%r11760, %r11759};
	shf.l.wrap.b32 	%r11761, %r11757, %r11758, 3;
	shf.l.wrap.b32 	%r11762, %r11758, %r11757, 3;
	mov.b64 	%rd16928, {%r11762, %r11761};
	shr.u64 	%rd16929, %rd19010, 6;
	xor.b64  	%rd16930, %rd16927, %rd16929;
	xor.b64  	%rd16931, %rd16930, %rd16928;
	shr.u64 	%rd16932, %rd19013, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11763,%dummy}, %rd19013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11764}, %rd19013;
	}
	shf.r.wrap.b32 	%r11765, %r11764, %r11763, 1;
	shf.r.wrap.b32 	%r11766, %r11763, %r11764, 1;
	mov.b64 	%rd16933, {%r11766, %r11765};
	xor.b64  	%rd16934, %rd16933, %rd16932;
	shf.r.wrap.b32 	%r11767, %r11764, %r11763, 8;
	shf.r.wrap.b32 	%r11768, %r11763, %r11764, 8;
	mov.b64 	%rd16935, {%r11768, %r11767};
	xor.b64  	%rd16936, %rd16934, %rd16935;
	add.s64 	%rd16937, %rd18994, %rd19012;
	add.s64 	%rd16938, %rd16937, %rd16931;
	add.s64 	%rd19012, %rd16938, %rd16936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11769,%dummy}, %rd19011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11770}, %rd19011;
	}
	shf.r.wrap.b32 	%r11771, %r11770, %r11769, 19;
	shf.r.wrap.b32 	%r11772, %r11769, %r11770, 19;
	mov.b64 	%rd16939, {%r11772, %r11771};
	shf.l.wrap.b32 	%r11773, %r11769, %r11770, 3;
	shf.l.wrap.b32 	%r11774, %r11770, %r11769, 3;
	mov.b64 	%rd16940, {%r11774, %r11773};
	shr.u64 	%rd16941, %rd19011, 6;
	xor.b64  	%rd16942, %rd16939, %rd16941;
	xor.b64  	%rd16943, %rd16942, %rd16940;
	shr.u64 	%rd16944, %rd19014, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11775,%dummy}, %rd19014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11776}, %rd19014;
	}
	shf.r.wrap.b32 	%r11777, %r11776, %r11775, 1;
	shf.r.wrap.b32 	%r11778, %r11775, %r11776, 1;
	mov.b64 	%rd16945, {%r11778, %r11777};
	xor.b64  	%rd16946, %rd16945, %rd16944;
	shf.r.wrap.b32 	%r11779, %r11776, %r11775, 8;
	shf.r.wrap.b32 	%r11780, %r11775, %r11776, 8;
	mov.b64 	%rd16947, {%r11780, %r11779};
	xor.b64  	%rd16948, %rd16946, %rd16947;
	add.s64 	%rd16949, %rd18993, %rd19013;
	add.s64 	%rd16950, %rd16949, %rd16943;
	add.s64 	%rd19013, %rd16950, %rd16948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11781,%dummy}, %rd19012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11782}, %rd19012;
	}
	shf.r.wrap.b32 	%r11783, %r11782, %r11781, 19;
	shf.r.wrap.b32 	%r11784, %r11781, %r11782, 19;
	mov.b64 	%rd16951, {%r11784, %r11783};
	shf.l.wrap.b32 	%r11785, %r11781, %r11782, 3;
	shf.l.wrap.b32 	%r11786, %r11782, %r11781, 3;
	mov.b64 	%rd16952, {%r11786, %r11785};
	shr.u64 	%rd16953, %rd19012, 6;
	xor.b64  	%rd16954, %rd16951, %rd16953;
	xor.b64  	%rd16955, %rd16954, %rd16952;
	shr.u64 	%rd16956, %rd19015, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11787,%dummy}, %rd19015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11788}, %rd19015;
	}
	shf.r.wrap.b32 	%r11789, %r11788, %r11787, 1;
	shf.r.wrap.b32 	%r11790, %r11787, %r11788, 1;
	mov.b64 	%rd16957, {%r11790, %r11789};
	xor.b64  	%rd16958, %rd16957, %rd16956;
	shf.r.wrap.b32 	%r11791, %r11788, %r11787, 8;
	shf.r.wrap.b32 	%r11792, %r11787, %r11788, 8;
	mov.b64 	%rd16959, {%r11792, %r11791};
	xor.b64  	%rd16960, %rd16958, %rd16959;
	add.s64 	%rd16961, %rd18944, %rd19014;
	add.s64 	%rd16962, %rd16961, %rd16955;
	add.s64 	%rd19014, %rd16962, %rd16960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11793,%dummy}, %rd19013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11794}, %rd19013;
	}
	shf.r.wrap.b32 	%r11795, %r11794, %r11793, 19;
	shf.r.wrap.b32 	%r11796, %r11793, %r11794, 19;
	mov.b64 	%rd16963, {%r11796, %r11795};
	shf.l.wrap.b32 	%r11797, %r11793, %r11794, 3;
	shf.l.wrap.b32 	%r11798, %r11794, %r11793, 3;
	mov.b64 	%rd16964, {%r11798, %r11797};
	shr.u64 	%rd16965, %rd19013, 6;
	xor.b64  	%rd16966, %rd16963, %rd16965;
	xor.b64  	%rd16967, %rd16966, %rd16964;
	shr.u64 	%rd16968, %rd18999, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11799,%dummy}, %rd18999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11800}, %rd18999;
	}
	shf.r.wrap.b32 	%r11801, %r11800, %r11799, 1;
	shf.r.wrap.b32 	%r11802, %r11799, %r11800, 1;
	mov.b64 	%rd16969, {%r11802, %r11801};
	xor.b64  	%rd16970, %rd16969, %rd16968;
	shf.r.wrap.b32 	%r11803, %r11800, %r11799, 8;
	shf.r.wrap.b32 	%r11804, %r11799, %r11800, 8;
	mov.b64 	%rd16971, {%r11804, %r11803};
	xor.b64  	%rd16972, %rd16970, %rd16971;
	add.s64 	%rd16973, %rd19008, %rd19015;
	add.s64 	%rd16974, %rd16973, %rd16967;
	add.s64 	%rd19015, %rd16974, %rd16972;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11805,%dummy}, %rd19014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11806}, %rd19014;
	}
	shf.r.wrap.b32 	%r11807, %r11806, %r11805, 19;
	shf.r.wrap.b32 	%r11808, %r11805, %r11806, 19;
	mov.b64 	%rd16975, {%r11808, %r11807};
	shf.l.wrap.b32 	%r11809, %r11805, %r11806, 3;
	shf.l.wrap.b32 	%r11810, %r11806, %r11805, 3;
	mov.b64 	%rd16976, {%r11810, %r11809};
	shr.u64 	%rd16977, %rd19014, 6;
	xor.b64  	%rd16978, %rd16975, %rd16977;
	xor.b64  	%rd16979, %rd16978, %rd16976;
	shr.u64 	%rd16980, %rd18998, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11811,%dummy}, %rd18998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11812}, %rd18998;
	}
	shf.r.wrap.b32 	%r11813, %r11812, %r11811, 1;
	shf.r.wrap.b32 	%r11814, %r11811, %r11812, 1;
	mov.b64 	%rd16981, {%r11814, %r11813};
	xor.b64  	%rd16982, %rd16981, %rd16980;
	shf.r.wrap.b32 	%r11815, %r11812, %r11811, 8;
	shf.r.wrap.b32 	%r11816, %r11811, %r11812, 8;
	mov.b64 	%rd16983, {%r11816, %r11815};
	xor.b64  	%rd16984, %rd16982, %rd16983;
	add.s64 	%rd16985, %rd19009, %rd18999;
	add.s64 	%rd16986, %rd16985, %rd16979;
	add.s64 	%rd18999, %rd16986, %rd16984;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11817,%dummy}, %rd19015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11818}, %rd19015;
	}
	shf.r.wrap.b32 	%r11819, %r11818, %r11817, 19;
	shf.r.wrap.b32 	%r11820, %r11817, %r11818, 19;
	mov.b64 	%rd16987, {%r11820, %r11819};
	shf.l.wrap.b32 	%r11821, %r11817, %r11818, 3;
	shf.l.wrap.b32 	%r11822, %r11818, %r11817, 3;
	mov.b64 	%rd16988, {%r11822, %r11821};
	shr.u64 	%rd16989, %rd19015, 6;
	xor.b64  	%rd16990, %rd16987, %rd16989;
	xor.b64  	%rd16991, %rd16990, %rd16988;
	shr.u64 	%rd16992, %rd18997, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11823,%dummy}, %rd18997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11824}, %rd18997;
	}
	shf.r.wrap.b32 	%r11825, %r11824, %r11823, 1;
	shf.r.wrap.b32 	%r11826, %r11823, %r11824, 1;
	mov.b64 	%rd16993, {%r11826, %r11825};
	xor.b64  	%rd16994, %rd16993, %rd16992;
	shf.r.wrap.b32 	%r11827, %r11824, %r11823, 8;
	shf.r.wrap.b32 	%r11828, %r11823, %r11824, 8;
	mov.b64 	%rd16995, {%r11828, %r11827};
	xor.b64  	%rd16996, %rd16994, %rd16995;
	add.s64 	%rd16997, %rd19010, %rd18998;
	add.s64 	%rd16998, %rd16997, %rd16991;
	add.s64 	%rd18998, %rd16998, %rd16996;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11829,%dummy}, %rd18999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11830}, %rd18999;
	}
	shf.r.wrap.b32 	%r11831, %r11830, %r11829, 19;
	shf.r.wrap.b32 	%r11832, %r11829, %r11830, 19;
	mov.b64 	%rd16999, {%r11832, %r11831};
	shf.l.wrap.b32 	%r11833, %r11829, %r11830, 3;
	shf.l.wrap.b32 	%r11834, %r11830, %r11829, 3;
	mov.b64 	%rd17000, {%r11834, %r11833};
	shr.u64 	%rd17001, %rd18999, 6;
	xor.b64  	%rd17002, %rd16999, %rd17001;
	xor.b64  	%rd17003, %rd17002, %rd17000;
	shr.u64 	%rd17004, %rd18996, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11835,%dummy}, %rd18996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11836}, %rd18996;
	}
	shf.r.wrap.b32 	%r11837, %r11836, %r11835, 1;
	shf.r.wrap.b32 	%r11838, %r11835, %r11836, 1;
	mov.b64 	%rd17005, {%r11838, %r11837};
	xor.b64  	%rd17006, %rd17005, %rd17004;
	shf.r.wrap.b32 	%r11839, %r11836, %r11835, 8;
	shf.r.wrap.b32 	%r11840, %r11835, %r11836, 8;
	mov.b64 	%rd17007, {%r11840, %r11839};
	xor.b64  	%rd17008, %rd17006, %rd17007;
	add.s64 	%rd17009, %rd19011, %rd18997;
	add.s64 	%rd17010, %rd17009, %rd17003;
	add.s64 	%rd18997, %rd17010, %rd17008;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11841,%dummy}, %rd18998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11842}, %rd18998;
	}
	shf.r.wrap.b32 	%r11843, %r11842, %r11841, 19;
	shf.r.wrap.b32 	%r11844, %r11841, %r11842, 19;
	mov.b64 	%rd17011, {%r11844, %r11843};
	shf.l.wrap.b32 	%r11845, %r11841, %r11842, 3;
	shf.l.wrap.b32 	%r11846, %r11842, %r11841, 3;
	mov.b64 	%rd17012, {%r11846, %r11845};
	shr.u64 	%rd17013, %rd18998, 6;
	xor.b64  	%rd17014, %rd17011, %rd17013;
	xor.b64  	%rd17015, %rd17014, %rd17012;
	shr.u64 	%rd17016, %rd18995, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11847,%dummy}, %rd18995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11848}, %rd18995;
	}
	shf.r.wrap.b32 	%r11849, %r11848, %r11847, 1;
	shf.r.wrap.b32 	%r11850, %r11847, %r11848, 1;
	mov.b64 	%rd17017, {%r11850, %r11849};
	xor.b64  	%rd17018, %rd17017, %rd17016;
	shf.r.wrap.b32 	%r11851, %r11848, %r11847, 8;
	shf.r.wrap.b32 	%r11852, %r11847, %r11848, 8;
	mov.b64 	%rd17019, {%r11852, %r11851};
	xor.b64  	%rd17020, %rd17018, %rd17019;
	add.s64 	%rd17021, %rd19012, %rd18996;
	add.s64 	%rd17022, %rd17021, %rd17015;
	add.s64 	%rd18996, %rd17022, %rd17020;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11853,%dummy}, %rd18997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11854}, %rd18997;
	}
	shf.r.wrap.b32 	%r11855, %r11854, %r11853, 19;
	shf.r.wrap.b32 	%r11856, %r11853, %r11854, 19;
	mov.b64 	%rd17023, {%r11856, %r11855};
	shf.l.wrap.b32 	%r11857, %r11853, %r11854, 3;
	shf.l.wrap.b32 	%r11858, %r11854, %r11853, 3;
	mov.b64 	%rd17024, {%r11858, %r11857};
	shr.u64 	%rd17025, %rd18997, 6;
	xor.b64  	%rd17026, %rd17023, %rd17025;
	xor.b64  	%rd17027, %rd17026, %rd17024;
	shr.u64 	%rd17028, %rd18994, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11859,%dummy}, %rd18994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11860}, %rd18994;
	}
	shf.r.wrap.b32 	%r11861, %r11860, %r11859, 1;
	shf.r.wrap.b32 	%r11862, %r11859, %r11860, 1;
	mov.b64 	%rd17029, {%r11862, %r11861};
	xor.b64  	%rd17030, %rd17029, %rd17028;
	shf.r.wrap.b32 	%r11863, %r11860, %r11859, 8;
	shf.r.wrap.b32 	%r11864, %r11859, %r11860, 8;
	mov.b64 	%rd17031, {%r11864, %r11863};
	xor.b64  	%rd17032, %rd17030, %rd17031;
	add.s64 	%rd17033, %rd19013, %rd18995;
	add.s64 	%rd17034, %rd17033, %rd17027;
	add.s64 	%rd18995, %rd17034, %rd17032;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11865,%dummy}, %rd18996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11866}, %rd18996;
	}
	shf.r.wrap.b32 	%r11867, %r11866, %r11865, 19;
	shf.r.wrap.b32 	%r11868, %r11865, %r11866, 19;
	mov.b64 	%rd17035, {%r11868, %r11867};
	shf.l.wrap.b32 	%r11869, %r11865, %r11866, 3;
	shf.l.wrap.b32 	%r11870, %r11866, %r11865, 3;
	mov.b64 	%rd17036, {%r11870, %r11869};
	shr.u64 	%rd17037, %rd18996, 6;
	xor.b64  	%rd17038, %rd17035, %rd17037;
	xor.b64  	%rd17039, %rd17038, %rd17036;
	shr.u64 	%rd17040, %rd18993, 7;
	shf.r.wrap.b32 	%r11871, %r11710, %r11709, 1;
	shf.r.wrap.b32 	%r11872, %r11709, %r11710, 1;
	mov.b64 	%rd17041, {%r11872, %r11871};
	xor.b64  	%rd17042, %rd17041, %rd17040;
	shf.r.wrap.b32 	%r11873, %r11710, %r11709, 8;
	shf.r.wrap.b32 	%r11874, %r11709, %r11710, 8;
	mov.b64 	%rd17043, {%r11874, %r11873};
	xor.b64  	%rd17044, %rd17042, %rd17043;
	add.s64 	%rd17045, %rd19014, %rd18994;
	add.s64 	%rd17046, %rd17045, %rd17039;
	add.s64 	%rd18994, %rd17046, %rd17044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11875,%dummy}, %rd18995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11876}, %rd18995;
	}
	shf.r.wrap.b32 	%r11877, %r11876, %r11875, 19;
	shf.r.wrap.b32 	%r11878, %r11875, %r11876, 19;
	mov.b64 	%rd17047, {%r11878, %r11877};
	shf.l.wrap.b32 	%r11879, %r11875, %r11876, 3;
	shf.l.wrap.b32 	%r11880, %r11876, %r11875, 3;
	mov.b64 	%rd17048, {%r11880, %r11879};
	shr.u64 	%rd17049, %rd18995, 6;
	xor.b64  	%rd17050, %rd17047, %rd17049;
	xor.b64  	%rd17051, %rd17050, %rd17048;
	shr.u64 	%rd17052, %rd18944, 7;
	shf.r.wrap.b32 	%r11881, %r11722, %r11721, 1;
	shf.r.wrap.b32 	%r11882, %r11721, %r11722, 1;
	mov.b64 	%rd17053, {%r11882, %r11881};
	xor.b64  	%rd17054, %rd17053, %rd17052;
	shf.r.wrap.b32 	%r11883, %r11722, %r11721, 8;
	shf.r.wrap.b32 	%r11884, %r11721, %r11722, 8;
	mov.b64 	%rd17055, {%r11884, %r11883};
	xor.b64  	%rd17056, %rd17054, %rd17055;
	add.s64 	%rd17057, %rd19015, %rd18993;
	add.s64 	%rd17058, %rd17057, %rd17051;
	add.s64 	%rd18993, %rd17058, %rd17056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11885,%dummy}, %rd18994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11886}, %rd18994;
	}
	shf.r.wrap.b32 	%r11887, %r11886, %r11885, 19;
	shf.r.wrap.b32 	%r11888, %r11885, %r11886, 19;
	mov.b64 	%rd17059, {%r11888, %r11887};
	shf.l.wrap.b32 	%r11889, %r11885, %r11886, 3;
	shf.l.wrap.b32 	%r11890, %r11886, %r11885, 3;
	mov.b64 	%rd17060, {%r11890, %r11889};
	shr.u64 	%rd17061, %rd18994, 6;
	xor.b64  	%rd17062, %rd17059, %rd17061;
	xor.b64  	%rd17063, %rd17062, %rd17060;
	shf.r.wrap.b32 	%r11891, %r11734, %r11733, 1;
	shf.r.wrap.b32 	%r11892, %r11733, %r11734, 1;
	mov.b64 	%rd17064, {%r11892, %r11891};
	shf.r.wrap.b32 	%r11893, %r11734, %r11733, 8;
	shf.r.wrap.b32 	%r11894, %r11733, %r11734, 8;
	mov.b64 	%rd17065, {%r11894, %r11893};
	shr.u64 	%rd17066, %rd19008, 7;
	xor.b64  	%rd17067, %rd17064, %rd17066;
	xor.b64  	%rd17068, %rd17067, %rd17065;
	add.s64 	%rd17069, %rd18999, %rd18944;
	add.s64 	%rd17070, %rd17069, %rd17063;
	add.s64 	%rd18944, %rd17070, %rd17068;
	mul.wide.s32 	%rd17071, %r13076, 8;
	mov.u64 	%rd17072, k_sha512;
	add.s64 	%rd17073, %rd17072, %rd17071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11895,%dummy}, %rd18956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11896}, %rd18956;
	}
	shf.r.wrap.b32 	%r11897, %r11896, %r11895, 18;
	shf.r.wrap.b32 	%r11898, %r11895, %r11896, 18;
	mov.b64 	%rd17074, {%r11898, %r11897};
	shf.r.wrap.b32 	%r11899, %r11896, %r11895, 14;
	shf.r.wrap.b32 	%r11900, %r11895, %r11896, 14;
	mov.b64 	%rd17075, {%r11900, %r11899};
	xor.b64  	%rd17076, %rd17074, %rd17075;
	shf.l.wrap.b32 	%r11901, %r11895, %r11896, 23;
	shf.l.wrap.b32 	%r11902, %r11896, %r11895, 23;
	mov.b64 	%rd17077, {%r11902, %r11901};
	xor.b64  	%rd17078, %rd17076, %rd17077;
	xor.b64  	%rd17079, %rd18957, %rd18958;
	and.b64  	%rd17080, %rd18956, %rd17079;
	xor.b64  	%rd17081, %rd17080, %rd18958;
	add.s64 	%rd17082, %rd17081, %rd18959;
	add.s64 	%rd17083, %rd17082, %rd19008;
	ld.const.u64 	%rd17084, [%rd17073];
	add.s64 	%rd17085, %rd17083, %rd17084;
	add.s64 	%rd17086, %rd17085, %rd17078;
	add.s64 	%rd17087, %rd17086, %rd18955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11903}, %rd18952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11904,%dummy}, %rd18952;
	}
	shf.l.wrap.b32 	%r11905, %r11904, %r11903, 30;
	shf.l.wrap.b32 	%r11906, %r11903, %r11904, 30;
	mov.b64 	%rd17088, {%r11906, %r11905};
	shf.r.wrap.b32 	%r11907, %r11903, %r11904, 28;
	shf.r.wrap.b32 	%r11908, %r11904, %r11903, 28;
	mov.b64 	%rd17089, {%r11908, %r11907};
	xor.b64  	%rd17090, %rd17088, %rd17089;
	shf.l.wrap.b32 	%r11909, %r11904, %r11903, 25;
	shf.l.wrap.b32 	%r11910, %r11903, %r11904, 25;
	mov.b64 	%rd17091, {%r11910, %r11909};
	xor.b64  	%rd17092, %rd17090, %rd17091;
	xor.b64  	%rd17093, %rd18952, %rd18953;
	and.b64  	%rd17094, %rd17093, %rd18954;
	and.b64  	%rd17095, %rd18952, %rd18953;
	or.b64  	%rd17096, %rd17094, %rd17095;
	add.s64 	%rd17097, %rd17086, %rd17096;
	add.s64 	%rd17098, %rd17097, %rd17092;
	add.s32 	%r11911, %r13076, 1;
	mul.wide.s32 	%rd17099, %r11911, 8;
	add.s64 	%rd17100, %rd17072, %rd17099;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11912,%dummy}, %rd17087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11913}, %rd17087;
	}
	shf.r.wrap.b32 	%r11914, %r11913, %r11912, 14;
	shf.r.wrap.b32 	%r11915, %r11912, %r11913, 14;
	mov.b64 	%rd17101, {%r11915, %r11914};
	shf.r.wrap.b32 	%r11916, %r11913, %r11912, 18;
	shf.r.wrap.b32 	%r11917, %r11912, %r11913, 18;
	mov.b64 	%rd17102, {%r11917, %r11916};
	xor.b64  	%rd17103, %rd17102, %rd17101;
	shf.l.wrap.b32 	%r11918, %r11912, %r11913, 23;
	shf.l.wrap.b32 	%r11919, %r11913, %r11912, 23;
	mov.b64 	%rd17104, {%r11919, %r11918};
	xor.b64  	%rd17105, %rd17103, %rd17104;
	xor.b64  	%rd17106, %rd18956, %rd18957;
	and.b64  	%rd17107, %rd17087, %rd17106;
	xor.b64  	%rd17108, %rd17107, %rd18957;
	add.s64 	%rd17109, %rd19009, %rd18958;
	ld.const.u64 	%rd17110, [%rd17100];
	add.s64 	%rd17111, %rd17109, %rd17110;
	add.s64 	%rd17112, %rd17111, %rd17108;
	add.s64 	%rd17113, %rd17112, %rd17105;
	add.s64 	%rd17114, %rd17113, %rd18954;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11920,%dummy}, %rd17098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11921}, %rd17098;
	}
	shf.r.wrap.b32 	%r11922, %r11921, %r11920, 28;
	shf.r.wrap.b32 	%r11923, %r11920, %r11921, 28;
	mov.b64 	%rd17115, {%r11923, %r11922};
	shf.l.wrap.b32 	%r11924, %r11920, %r11921, 30;
	shf.l.wrap.b32 	%r11925, %r11921, %r11920, 30;
	mov.b64 	%rd17116, {%r11925, %r11924};
	xor.b64  	%rd17117, %rd17116, %rd17115;
	shf.l.wrap.b32 	%r11926, %r11920, %r11921, 25;
	shf.l.wrap.b32 	%r11927, %r11921, %r11920, 25;
	mov.b64 	%rd17118, {%r11927, %r11926};
	xor.b64  	%rd17119, %rd17117, %rd17118;
	and.b64  	%rd17120, %rd17098, %rd18952;
	xor.b64  	%rd17121, %rd17098, %rd18952;
	and.b64  	%rd17122, %rd17121, %rd18953;
	or.b64  	%rd17123, %rd17122, %rd17120;
	add.s64 	%rd17124, %rd17113, %rd17123;
	add.s64 	%rd17125, %rd17124, %rd17119;
	add.s32 	%r11928, %r13076, 2;
	mul.wide.s32 	%rd17126, %r11928, 8;
	add.s64 	%rd17127, %rd17072, %rd17126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11929,%dummy}, %rd17114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11930}, %rd17114;
	}
	shf.r.wrap.b32 	%r11931, %r11930, %r11929, 14;
	shf.r.wrap.b32 	%r11932, %r11929, %r11930, 14;
	mov.b64 	%rd17128, {%r11932, %r11931};
	shf.r.wrap.b32 	%r11933, %r11930, %r11929, 18;
	shf.r.wrap.b32 	%r11934, %r11929, %r11930, 18;
	mov.b64 	%rd17129, {%r11934, %r11933};
	xor.b64  	%rd17130, %rd17129, %rd17128;
	shf.l.wrap.b32 	%r11935, %r11929, %r11930, 23;
	shf.l.wrap.b32 	%r11936, %r11930, %r11929, 23;
	mov.b64 	%rd17131, {%r11936, %r11935};
	xor.b64  	%rd17132, %rd17130, %rd17131;
	xor.b64  	%rd17133, %rd17087, %rd18956;
	and.b64  	%rd17134, %rd17114, %rd17133;
	xor.b64  	%rd17135, %rd17134, %rd18956;
	add.s64 	%rd17136, %rd19010, %rd18957;
	ld.const.u64 	%rd17137, [%rd17127];
	add.s64 	%rd17138, %rd17136, %rd17137;
	add.s64 	%rd17139, %rd17138, %rd17135;
	add.s64 	%rd17140, %rd17139, %rd17132;
	add.s64 	%rd17141, %rd17140, %rd18953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11937,%dummy}, %rd17125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11938}, %rd17125;
	}
	shf.r.wrap.b32 	%r11939, %r11938, %r11937, 28;
	shf.r.wrap.b32 	%r11940, %r11937, %r11938, 28;
	mov.b64 	%rd17142, {%r11940, %r11939};
	shf.l.wrap.b32 	%r11941, %r11937, %r11938, 30;
	shf.l.wrap.b32 	%r11942, %r11938, %r11937, 30;
	mov.b64 	%rd17143, {%r11942, %r11941};
	xor.b64  	%rd17144, %rd17143, %rd17142;
	shf.l.wrap.b32 	%r11943, %r11937, %r11938, 25;
	shf.l.wrap.b32 	%r11944, %r11938, %r11937, 25;
	mov.b64 	%rd17145, {%r11944, %r11943};
	xor.b64  	%rd17146, %rd17144, %rd17145;
	and.b64  	%rd17147, %rd17125, %rd17098;
	xor.b64  	%rd17148, %rd17125, %rd17098;
	and.b64  	%rd17149, %rd17148, %rd18952;
	or.b64  	%rd17150, %rd17149, %rd17147;
	add.s64 	%rd17151, %rd17140, %rd17150;
	add.s64 	%rd17152, %rd17151, %rd17146;
	add.s32 	%r11945, %r13076, 3;
	mul.wide.s32 	%rd17153, %r11945, 8;
	add.s64 	%rd17154, %rd17072, %rd17153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11946,%dummy}, %rd17141;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11947}, %rd17141;
	}
	shf.r.wrap.b32 	%r11948, %r11947, %r11946, 14;
	shf.r.wrap.b32 	%r11949, %r11946, %r11947, 14;
	mov.b64 	%rd17155, {%r11949, %r11948};
	shf.r.wrap.b32 	%r11950, %r11947, %r11946, 18;
	shf.r.wrap.b32 	%r11951, %r11946, %r11947, 18;
	mov.b64 	%rd17156, {%r11951, %r11950};
	xor.b64  	%rd17157, %rd17156, %rd17155;
	shf.l.wrap.b32 	%r11952, %r11946, %r11947, 23;
	shf.l.wrap.b32 	%r11953, %r11947, %r11946, 23;
	mov.b64 	%rd17158, {%r11953, %r11952};
	xor.b64  	%rd17159, %rd17157, %rd17158;
	xor.b64  	%rd17160, %rd17114, %rd17087;
	and.b64  	%rd17161, %rd17141, %rd17160;
	xor.b64  	%rd17162, %rd17161, %rd17087;
	add.s64 	%rd17163, %rd19011, %rd18956;
	ld.const.u64 	%rd17164, [%rd17154];
	add.s64 	%rd17165, %rd17163, %rd17164;
	add.s64 	%rd17166, %rd17165, %rd17162;
	add.s64 	%rd17167, %rd17166, %rd17159;
	add.s64 	%rd17168, %rd17167, %rd18952;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11954,%dummy}, %rd17152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11955}, %rd17152;
	}
	shf.r.wrap.b32 	%r11956, %r11955, %r11954, 28;
	shf.r.wrap.b32 	%r11957, %r11954, %r11955, 28;
	mov.b64 	%rd17169, {%r11957, %r11956};
	shf.l.wrap.b32 	%r11958, %r11954, %r11955, 30;
	shf.l.wrap.b32 	%r11959, %r11955, %r11954, 30;
	mov.b64 	%rd17170, {%r11959, %r11958};
	xor.b64  	%rd17171, %rd17170, %rd17169;
	shf.l.wrap.b32 	%r11960, %r11954, %r11955, 25;
	shf.l.wrap.b32 	%r11961, %r11955, %r11954, 25;
	mov.b64 	%rd17172, {%r11961, %r11960};
	xor.b64  	%rd17173, %rd17171, %rd17172;
	and.b64  	%rd17174, %rd17152, %rd17125;
	xor.b64  	%rd17175, %rd17152, %rd17125;
	and.b64  	%rd17176, %rd17175, %rd17098;
	or.b64  	%rd17177, %rd17176, %rd17174;
	add.s64 	%rd17178, %rd17167, %rd17177;
	add.s64 	%rd17179, %rd17178, %rd17173;
	add.s32 	%r11962, %r13076, 4;
	mul.wide.s32 	%rd17180, %r11962, 8;
	add.s64 	%rd17181, %rd17072, %rd17180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11963,%dummy}, %rd17168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11964}, %rd17168;
	}
	shf.r.wrap.b32 	%r11965, %r11964, %r11963, 14;
	shf.r.wrap.b32 	%r11966, %r11963, %r11964, 14;
	mov.b64 	%rd17182, {%r11966, %r11965};
	shf.r.wrap.b32 	%r11967, %r11964, %r11963, 18;
	shf.r.wrap.b32 	%r11968, %r11963, %r11964, 18;
	mov.b64 	%rd17183, {%r11968, %r11967};
	xor.b64  	%rd17184, %rd17183, %rd17182;
	shf.l.wrap.b32 	%r11969, %r11963, %r11964, 23;
	shf.l.wrap.b32 	%r11970, %r11964, %r11963, 23;
	mov.b64 	%rd17185, {%r11970, %r11969};
	xor.b64  	%rd17186, %rd17184, %rd17185;
	xor.b64  	%rd17187, %rd17141, %rd17114;
	and.b64  	%rd17188, %rd17168, %rd17187;
	xor.b64  	%rd17189, %rd17188, %rd17114;
	add.s64 	%rd17190, %rd17087, %rd19012;
	ld.const.u64 	%rd17191, [%rd17181];
	add.s64 	%rd17192, %rd17190, %rd17191;
	add.s64 	%rd17193, %rd17192, %rd17189;
	add.s64 	%rd17194, %rd17193, %rd17186;
	add.s64 	%rd17195, %rd17194, %rd17098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11971,%dummy}, %rd17179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11972}, %rd17179;
	}
	shf.r.wrap.b32 	%r11973, %r11972, %r11971, 28;
	shf.r.wrap.b32 	%r11974, %r11971, %r11972, 28;
	mov.b64 	%rd17196, {%r11974, %r11973};
	shf.l.wrap.b32 	%r11975, %r11971, %r11972, 30;
	shf.l.wrap.b32 	%r11976, %r11972, %r11971, 30;
	mov.b64 	%rd17197, {%r11976, %r11975};
	xor.b64  	%rd17198, %rd17197, %rd17196;
	shf.l.wrap.b32 	%r11977, %r11971, %r11972, 25;
	shf.l.wrap.b32 	%r11978, %r11972, %r11971, 25;
	mov.b64 	%rd17199, {%r11978, %r11977};
	xor.b64  	%rd17200, %rd17198, %rd17199;
	and.b64  	%rd17201, %rd17179, %rd17152;
	xor.b64  	%rd17202, %rd17179, %rd17152;
	and.b64  	%rd17203, %rd17202, %rd17125;
	or.b64  	%rd17204, %rd17203, %rd17201;
	add.s64 	%rd17205, %rd17194, %rd17204;
	add.s64 	%rd17206, %rd17205, %rd17200;
	add.s32 	%r11979, %r13076, 5;
	mul.wide.s32 	%rd17207, %r11979, 8;
	add.s64 	%rd17208, %rd17072, %rd17207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11980,%dummy}, %rd17195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11981}, %rd17195;
	}
	shf.r.wrap.b32 	%r11982, %r11981, %r11980, 14;
	shf.r.wrap.b32 	%r11983, %r11980, %r11981, 14;
	mov.b64 	%rd17209, {%r11983, %r11982};
	shf.r.wrap.b32 	%r11984, %r11981, %r11980, 18;
	shf.r.wrap.b32 	%r11985, %r11980, %r11981, 18;
	mov.b64 	%rd17210, {%r11985, %r11984};
	xor.b64  	%rd17211, %rd17210, %rd17209;
	shf.l.wrap.b32 	%r11986, %r11980, %r11981, 23;
	shf.l.wrap.b32 	%r11987, %r11981, %r11980, 23;
	mov.b64 	%rd17212, {%r11987, %r11986};
	xor.b64  	%rd17213, %rd17211, %rd17212;
	xor.b64  	%rd17214, %rd17168, %rd17141;
	and.b64  	%rd17215, %rd17195, %rd17214;
	xor.b64  	%rd17216, %rd17215, %rd17141;
	add.s64 	%rd17217, %rd17114, %rd19013;
	ld.const.u64 	%rd17218, [%rd17208];
	add.s64 	%rd17219, %rd17217, %rd17218;
	add.s64 	%rd17220, %rd17219, %rd17216;
	add.s64 	%rd17221, %rd17220, %rd17213;
	add.s64 	%rd17222, %rd17221, %rd17125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11988,%dummy}, %rd17206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11989}, %rd17206;
	}
	shf.r.wrap.b32 	%r11990, %r11989, %r11988, 28;
	shf.r.wrap.b32 	%r11991, %r11988, %r11989, 28;
	mov.b64 	%rd17223, {%r11991, %r11990};
	shf.l.wrap.b32 	%r11992, %r11988, %r11989, 30;
	shf.l.wrap.b32 	%r11993, %r11989, %r11988, 30;
	mov.b64 	%rd17224, {%r11993, %r11992};
	xor.b64  	%rd17225, %rd17224, %rd17223;
	shf.l.wrap.b32 	%r11994, %r11988, %r11989, 25;
	shf.l.wrap.b32 	%r11995, %r11989, %r11988, 25;
	mov.b64 	%rd17226, {%r11995, %r11994};
	xor.b64  	%rd17227, %rd17225, %rd17226;
	and.b64  	%rd17228, %rd17206, %rd17179;
	xor.b64  	%rd17229, %rd17206, %rd17179;
	and.b64  	%rd17230, %rd17229, %rd17152;
	or.b64  	%rd17231, %rd17230, %rd17228;
	add.s64 	%rd17232, %rd17221, %rd17231;
	add.s64 	%rd17233, %rd17232, %rd17227;
	add.s32 	%r11996, %r13076, 6;
	mul.wide.s32 	%rd17234, %r11996, 8;
	add.s64 	%rd17235, %rd17072, %rd17234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11997,%dummy}, %rd17222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11998}, %rd17222;
	}
	shf.r.wrap.b32 	%r11999, %r11998, %r11997, 14;
	shf.r.wrap.b32 	%r12000, %r11997, %r11998, 14;
	mov.b64 	%rd17236, {%r12000, %r11999};
	shf.r.wrap.b32 	%r12001, %r11998, %r11997, 18;
	shf.r.wrap.b32 	%r12002, %r11997, %r11998, 18;
	mov.b64 	%rd17237, {%r12002, %r12001};
	xor.b64  	%rd17238, %rd17237, %rd17236;
	shf.l.wrap.b32 	%r12003, %r11997, %r11998, 23;
	shf.l.wrap.b32 	%r12004, %r11998, %r11997, 23;
	mov.b64 	%rd17239, {%r12004, %r12003};
	xor.b64  	%rd17240, %rd17238, %rd17239;
	xor.b64  	%rd17241, %rd17195, %rd17168;
	and.b64  	%rd17242, %rd17222, %rd17241;
	xor.b64  	%rd17243, %rd17242, %rd17168;
	add.s64 	%rd17244, %rd17141, %rd19014;
	ld.const.u64 	%rd17245, [%rd17235];
	add.s64 	%rd17246, %rd17244, %rd17245;
	add.s64 	%rd17247, %rd17246, %rd17243;
	add.s64 	%rd17248, %rd17247, %rd17240;
	add.s64 	%rd17249, %rd17248, %rd17152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12005,%dummy}, %rd17233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12006}, %rd17233;
	}
	shf.r.wrap.b32 	%r12007, %r12006, %r12005, 28;
	shf.r.wrap.b32 	%r12008, %r12005, %r12006, 28;
	mov.b64 	%rd17250, {%r12008, %r12007};
	shf.l.wrap.b32 	%r12009, %r12005, %r12006, 30;
	shf.l.wrap.b32 	%r12010, %r12006, %r12005, 30;
	mov.b64 	%rd17251, {%r12010, %r12009};
	xor.b64  	%rd17252, %rd17251, %rd17250;
	shf.l.wrap.b32 	%r12011, %r12005, %r12006, 25;
	shf.l.wrap.b32 	%r12012, %r12006, %r12005, 25;
	mov.b64 	%rd17253, {%r12012, %r12011};
	xor.b64  	%rd17254, %rd17252, %rd17253;
	and.b64  	%rd17255, %rd17233, %rd17206;
	xor.b64  	%rd17256, %rd17233, %rd17206;
	and.b64  	%rd17257, %rd17256, %rd17179;
	or.b64  	%rd17258, %rd17257, %rd17255;
	add.s64 	%rd17259, %rd17248, %rd17258;
	add.s64 	%rd17260, %rd17259, %rd17254;
	add.s32 	%r12013, %r13076, 7;
	mul.wide.s32 	%rd17261, %r12013, 8;
	add.s64 	%rd17262, %rd17072, %rd17261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12014,%dummy}, %rd17249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12015}, %rd17249;
	}
	shf.r.wrap.b32 	%r12016, %r12015, %r12014, 14;
	shf.r.wrap.b32 	%r12017, %r12014, %r12015, 14;
	mov.b64 	%rd17263, {%r12017, %r12016};
	shf.r.wrap.b32 	%r12018, %r12015, %r12014, 18;
	shf.r.wrap.b32 	%r12019, %r12014, %r12015, 18;
	mov.b64 	%rd17264, {%r12019, %r12018};
	xor.b64  	%rd17265, %rd17264, %rd17263;
	shf.l.wrap.b32 	%r12020, %r12014, %r12015, 23;
	shf.l.wrap.b32 	%r12021, %r12015, %r12014, 23;
	mov.b64 	%rd17266, {%r12021, %r12020};
	xor.b64  	%rd17267, %rd17265, %rd17266;
	xor.b64  	%rd17268, %rd17222, %rd17195;
	and.b64  	%rd17269, %rd17249, %rd17268;
	xor.b64  	%rd17270, %rd17269, %rd17195;
	add.s64 	%rd17271, %rd17168, %rd19015;
	ld.const.u64 	%rd17272, [%rd17262];
	add.s64 	%rd17273, %rd17271, %rd17272;
	add.s64 	%rd17274, %rd17273, %rd17270;
	add.s64 	%rd17275, %rd17274, %rd17267;
	add.s64 	%rd17276, %rd17275, %rd17179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12022,%dummy}, %rd17260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12023}, %rd17260;
	}
	shf.r.wrap.b32 	%r12024, %r12023, %r12022, 28;
	shf.r.wrap.b32 	%r12025, %r12022, %r12023, 28;
	mov.b64 	%rd17277, {%r12025, %r12024};
	shf.l.wrap.b32 	%r12026, %r12022, %r12023, 30;
	shf.l.wrap.b32 	%r12027, %r12023, %r12022, 30;
	mov.b64 	%rd17278, {%r12027, %r12026};
	xor.b64  	%rd17279, %rd17278, %rd17277;
	shf.l.wrap.b32 	%r12028, %r12022, %r12023, 25;
	shf.l.wrap.b32 	%r12029, %r12023, %r12022, 25;
	mov.b64 	%rd17280, {%r12029, %r12028};
	xor.b64  	%rd17281, %rd17279, %rd17280;
	and.b64  	%rd17282, %rd17260, %rd17233;
	xor.b64  	%rd17283, %rd17260, %rd17233;
	and.b64  	%rd17284, %rd17283, %rd17206;
	or.b64  	%rd17285, %rd17284, %rd17282;
	add.s64 	%rd17286, %rd17275, %rd17285;
	add.s64 	%rd17287, %rd17286, %rd17281;
	add.s32 	%r12030, %r13076, 8;
	mul.wide.s32 	%rd17288, %r12030, 8;
	add.s64 	%rd17289, %rd17072, %rd17288;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12031,%dummy}, %rd17276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12032}, %rd17276;
	}
	shf.r.wrap.b32 	%r12033, %r12032, %r12031, 14;
	shf.r.wrap.b32 	%r12034, %r12031, %r12032, 14;
	mov.b64 	%rd17290, {%r12034, %r12033};
	shf.r.wrap.b32 	%r12035, %r12032, %r12031, 18;
	shf.r.wrap.b32 	%r12036, %r12031, %r12032, 18;
	mov.b64 	%rd17291, {%r12036, %r12035};
	xor.b64  	%rd17292, %rd17291, %rd17290;
	shf.l.wrap.b32 	%r12037, %r12031, %r12032, 23;
	shf.l.wrap.b32 	%r12038, %r12032, %r12031, 23;
	mov.b64 	%rd17293, {%r12038, %r12037};
	xor.b64  	%rd17294, %rd17292, %rd17293;
	xor.b64  	%rd17295, %rd17249, %rd17222;
	and.b64  	%rd17296, %rd17276, %rd17295;
	xor.b64  	%rd17297, %rd17296, %rd17222;
	add.s64 	%rd17298, %rd17195, %rd18999;
	ld.const.u64 	%rd17299, [%rd17289];
	add.s64 	%rd17300, %rd17298, %rd17299;
	add.s64 	%rd17301, %rd17300, %rd17297;
	add.s64 	%rd17302, %rd17301, %rd17294;
	add.s64 	%rd17303, %rd17302, %rd17206;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12039,%dummy}, %rd17287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12040}, %rd17287;
	}
	shf.r.wrap.b32 	%r12041, %r12040, %r12039, 28;
	shf.r.wrap.b32 	%r12042, %r12039, %r12040, 28;
	mov.b64 	%rd17304, {%r12042, %r12041};
	shf.l.wrap.b32 	%r12043, %r12039, %r12040, 30;
	shf.l.wrap.b32 	%r12044, %r12040, %r12039, 30;
	mov.b64 	%rd17305, {%r12044, %r12043};
	xor.b64  	%rd17306, %rd17305, %rd17304;
	shf.l.wrap.b32 	%r12045, %r12039, %r12040, 25;
	shf.l.wrap.b32 	%r12046, %r12040, %r12039, 25;
	mov.b64 	%rd17307, {%r12046, %r12045};
	xor.b64  	%rd17308, %rd17306, %rd17307;
	and.b64  	%rd17309, %rd17287, %rd17260;
	xor.b64  	%rd17310, %rd17287, %rd17260;
	and.b64  	%rd17311, %rd17310, %rd17233;
	or.b64  	%rd17312, %rd17311, %rd17309;
	add.s64 	%rd17313, %rd17302, %rd17312;
	add.s64 	%rd17314, %rd17313, %rd17308;
	add.s32 	%r12047, %r13076, 9;
	mul.wide.s32 	%rd17315, %r12047, 8;
	add.s64 	%rd17316, %rd17072, %rd17315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12048,%dummy}, %rd17303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12049}, %rd17303;
	}
	shf.r.wrap.b32 	%r12050, %r12049, %r12048, 14;
	shf.r.wrap.b32 	%r12051, %r12048, %r12049, 14;
	mov.b64 	%rd17317, {%r12051, %r12050};
	shf.r.wrap.b32 	%r12052, %r12049, %r12048, 18;
	shf.r.wrap.b32 	%r12053, %r12048, %r12049, 18;
	mov.b64 	%rd17318, {%r12053, %r12052};
	xor.b64  	%rd17319, %rd17318, %rd17317;
	shf.l.wrap.b32 	%r12054, %r12048, %r12049, 23;
	shf.l.wrap.b32 	%r12055, %r12049, %r12048, 23;
	mov.b64 	%rd17320, {%r12055, %r12054};
	xor.b64  	%rd17321, %rd17319, %rd17320;
	xor.b64  	%rd17322, %rd17276, %rd17249;
	and.b64  	%rd17323, %rd17303, %rd17322;
	xor.b64  	%rd17324, %rd17323, %rd17249;
	add.s64 	%rd17325, %rd17222, %rd18998;
	ld.const.u64 	%rd17326, [%rd17316];
	add.s64 	%rd17327, %rd17325, %rd17326;
	add.s64 	%rd17328, %rd17327, %rd17324;
	add.s64 	%rd17329, %rd17328, %rd17321;
	add.s64 	%rd17330, %rd17329, %rd17233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12056,%dummy}, %rd17314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12057}, %rd17314;
	}
	shf.r.wrap.b32 	%r12058, %r12057, %r12056, 28;
	shf.r.wrap.b32 	%r12059, %r12056, %r12057, 28;
	mov.b64 	%rd17331, {%r12059, %r12058};
	shf.l.wrap.b32 	%r12060, %r12056, %r12057, 30;
	shf.l.wrap.b32 	%r12061, %r12057, %r12056, 30;
	mov.b64 	%rd17332, {%r12061, %r12060};
	xor.b64  	%rd17333, %rd17332, %rd17331;
	shf.l.wrap.b32 	%r12062, %r12056, %r12057, 25;
	shf.l.wrap.b32 	%r12063, %r12057, %r12056, 25;
	mov.b64 	%rd17334, {%r12063, %r12062};
	xor.b64  	%rd17335, %rd17333, %rd17334;
	and.b64  	%rd17336, %rd17314, %rd17287;
	xor.b64  	%rd17337, %rd17314, %rd17287;
	and.b64  	%rd17338, %rd17337, %rd17260;
	or.b64  	%rd17339, %rd17338, %rd17336;
	add.s64 	%rd17340, %rd17329, %rd17339;
	add.s64 	%rd17341, %rd17340, %rd17335;
	add.s32 	%r12064, %r13076, 10;
	mul.wide.s32 	%rd17342, %r12064, 8;
	add.s64 	%rd17343, %rd17072, %rd17342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12065,%dummy}, %rd17330;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12066}, %rd17330;
	}
	shf.r.wrap.b32 	%r12067, %r12066, %r12065, 14;
	shf.r.wrap.b32 	%r12068, %r12065, %r12066, 14;
	mov.b64 	%rd17344, {%r12068, %r12067};
	shf.r.wrap.b32 	%r12069, %r12066, %r12065, 18;
	shf.r.wrap.b32 	%r12070, %r12065, %r12066, 18;
	mov.b64 	%rd17345, {%r12070, %r12069};
	xor.b64  	%rd17346, %rd17345, %rd17344;
	shf.l.wrap.b32 	%r12071, %r12065, %r12066, 23;
	shf.l.wrap.b32 	%r12072, %r12066, %r12065, 23;
	mov.b64 	%rd17347, {%r12072, %r12071};
	xor.b64  	%rd17348, %rd17346, %rd17347;
	xor.b64  	%rd17349, %rd17303, %rd17276;
	and.b64  	%rd17350, %rd17330, %rd17349;
	xor.b64  	%rd17351, %rd17350, %rd17276;
	add.s64 	%rd17352, %rd17249, %rd18997;
	ld.const.u64 	%rd17353, [%rd17343];
	add.s64 	%rd17354, %rd17352, %rd17353;
	add.s64 	%rd17355, %rd17354, %rd17351;
	add.s64 	%rd17356, %rd17355, %rd17348;
	add.s64 	%rd17357, %rd17356, %rd17260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12073,%dummy}, %rd17341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12074}, %rd17341;
	}
	shf.r.wrap.b32 	%r12075, %r12074, %r12073, 28;
	shf.r.wrap.b32 	%r12076, %r12073, %r12074, 28;
	mov.b64 	%rd17358, {%r12076, %r12075};
	shf.l.wrap.b32 	%r12077, %r12073, %r12074, 30;
	shf.l.wrap.b32 	%r12078, %r12074, %r12073, 30;
	mov.b64 	%rd17359, {%r12078, %r12077};
	xor.b64  	%rd17360, %rd17359, %rd17358;
	shf.l.wrap.b32 	%r12079, %r12073, %r12074, 25;
	shf.l.wrap.b32 	%r12080, %r12074, %r12073, 25;
	mov.b64 	%rd17361, {%r12080, %r12079};
	xor.b64  	%rd17362, %rd17360, %rd17361;
	and.b64  	%rd17363, %rd17341, %rd17314;
	xor.b64  	%rd17364, %rd17341, %rd17314;
	and.b64  	%rd17365, %rd17364, %rd17287;
	or.b64  	%rd17366, %rd17365, %rd17363;
	add.s64 	%rd17367, %rd17356, %rd17366;
	add.s64 	%rd17368, %rd17367, %rd17362;
	add.s32 	%r12081, %r13076, 11;
	mul.wide.s32 	%rd17369, %r12081, 8;
	add.s64 	%rd17370, %rd17072, %rd17369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12082,%dummy}, %rd17357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12083}, %rd17357;
	}
	shf.r.wrap.b32 	%r12084, %r12083, %r12082, 14;
	shf.r.wrap.b32 	%r12085, %r12082, %r12083, 14;
	mov.b64 	%rd17371, {%r12085, %r12084};
	shf.r.wrap.b32 	%r12086, %r12083, %r12082, 18;
	shf.r.wrap.b32 	%r12087, %r12082, %r12083, 18;
	mov.b64 	%rd17372, {%r12087, %r12086};
	xor.b64  	%rd17373, %rd17372, %rd17371;
	shf.l.wrap.b32 	%r12088, %r12082, %r12083, 23;
	shf.l.wrap.b32 	%r12089, %r12083, %r12082, 23;
	mov.b64 	%rd17374, {%r12089, %r12088};
	xor.b64  	%rd17375, %rd17373, %rd17374;
	xor.b64  	%rd17376, %rd17330, %rd17303;
	and.b64  	%rd17377, %rd17357, %rd17376;
	xor.b64  	%rd17378, %rd17377, %rd17303;
	add.s64 	%rd17379, %rd17276, %rd18996;
	ld.const.u64 	%rd17380, [%rd17370];
	add.s64 	%rd17381, %rd17379, %rd17380;
	add.s64 	%rd17382, %rd17381, %rd17378;
	add.s64 	%rd17383, %rd17382, %rd17375;
	add.s64 	%rd17384, %rd17383, %rd17287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12090,%dummy}, %rd17368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12091}, %rd17368;
	}
	shf.r.wrap.b32 	%r12092, %r12091, %r12090, 28;
	shf.r.wrap.b32 	%r12093, %r12090, %r12091, 28;
	mov.b64 	%rd17385, {%r12093, %r12092};
	shf.l.wrap.b32 	%r12094, %r12090, %r12091, 30;
	shf.l.wrap.b32 	%r12095, %r12091, %r12090, 30;
	mov.b64 	%rd17386, {%r12095, %r12094};
	xor.b64  	%rd17387, %rd17386, %rd17385;
	shf.l.wrap.b32 	%r12096, %r12090, %r12091, 25;
	shf.l.wrap.b32 	%r12097, %r12091, %r12090, 25;
	mov.b64 	%rd17388, {%r12097, %r12096};
	xor.b64  	%rd17389, %rd17387, %rd17388;
	and.b64  	%rd17390, %rd17368, %rd17341;
	xor.b64  	%rd17391, %rd17368, %rd17341;
	and.b64  	%rd17392, %rd17391, %rd17314;
	or.b64  	%rd17393, %rd17392, %rd17390;
	add.s64 	%rd17394, %rd17383, %rd17393;
	add.s64 	%rd17395, %rd17394, %rd17389;
	add.s32 	%r12098, %r13076, 12;
	mul.wide.s32 	%rd17396, %r12098, 8;
	add.s64 	%rd17397, %rd17072, %rd17396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12099,%dummy}, %rd17384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12100}, %rd17384;
	}
	shf.r.wrap.b32 	%r12101, %r12100, %r12099, 14;
	shf.r.wrap.b32 	%r12102, %r12099, %r12100, 14;
	mov.b64 	%rd17398, {%r12102, %r12101};
	shf.r.wrap.b32 	%r12103, %r12100, %r12099, 18;
	shf.r.wrap.b32 	%r12104, %r12099, %r12100, 18;
	mov.b64 	%rd17399, {%r12104, %r12103};
	xor.b64  	%rd17400, %rd17399, %rd17398;
	shf.l.wrap.b32 	%r12105, %r12099, %r12100, 23;
	shf.l.wrap.b32 	%r12106, %r12100, %r12099, 23;
	mov.b64 	%rd17401, {%r12106, %r12105};
	xor.b64  	%rd17402, %rd17400, %rd17401;
	xor.b64  	%rd17403, %rd17357, %rd17330;
	and.b64  	%rd17404, %rd17384, %rd17403;
	xor.b64  	%rd17405, %rd17404, %rd17330;
	add.s64 	%rd17406, %rd17303, %rd18995;
	ld.const.u64 	%rd17407, [%rd17397];
	add.s64 	%rd17408, %rd17406, %rd17407;
	add.s64 	%rd17409, %rd17408, %rd17405;
	add.s64 	%rd17410, %rd17409, %rd17402;
	add.s64 	%rd18959, %rd17410, %rd17314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12107,%dummy}, %rd17395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12108}, %rd17395;
	}
	shf.r.wrap.b32 	%r12109, %r12108, %r12107, 28;
	shf.r.wrap.b32 	%r12110, %r12107, %r12108, 28;
	mov.b64 	%rd17411, {%r12110, %r12109};
	shf.l.wrap.b32 	%r12111, %r12107, %r12108, 30;
	shf.l.wrap.b32 	%r12112, %r12108, %r12107, 30;
	mov.b64 	%rd17412, {%r12112, %r12111};
	xor.b64  	%rd17413, %rd17412, %rd17411;
	shf.l.wrap.b32 	%r12113, %r12107, %r12108, 25;
	shf.l.wrap.b32 	%r12114, %r12108, %r12107, 25;
	mov.b64 	%rd17414, {%r12114, %r12113};
	xor.b64  	%rd17415, %rd17413, %rd17414;
	and.b64  	%rd17416, %rd17395, %rd17368;
	xor.b64  	%rd17417, %rd17395, %rd17368;
	and.b64  	%rd17418, %rd17417, %rd17341;
	or.b64  	%rd17419, %rd17418, %rd17416;
	add.s64 	%rd17420, %rd17410, %rd17419;
	add.s64 	%rd18955, %rd17420, %rd17415;
	add.s32 	%r12115, %r13076, 13;
	mul.wide.s32 	%rd17421, %r12115, 8;
	add.s64 	%rd17422, %rd17072, %rd17421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12116,%dummy}, %rd18959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12117}, %rd18959;
	}
	shf.r.wrap.b32 	%r12118, %r12117, %r12116, 14;
	shf.r.wrap.b32 	%r12119, %r12116, %r12117, 14;
	mov.b64 	%rd17423, {%r12119, %r12118};
	shf.r.wrap.b32 	%r12120, %r12117, %r12116, 18;
	shf.r.wrap.b32 	%r12121, %r12116, %r12117, 18;
	mov.b64 	%rd17424, {%r12121, %r12120};
	xor.b64  	%rd17425, %rd17424, %rd17423;
	shf.l.wrap.b32 	%r12122, %r12116, %r12117, 23;
	shf.l.wrap.b32 	%r12123, %r12117, %r12116, 23;
	mov.b64 	%rd17426, {%r12123, %r12122};
	xor.b64  	%rd17427, %rd17425, %rd17426;
	xor.b64  	%rd17428, %rd17384, %rd17357;
	and.b64  	%rd17429, %rd18959, %rd17428;
	xor.b64  	%rd17430, %rd17429, %rd17357;
	add.s64 	%rd17431, %rd17330, %rd18994;
	ld.const.u64 	%rd17432, [%rd17422];
	add.s64 	%rd17433, %rd17431, %rd17432;
	add.s64 	%rd17434, %rd17433, %rd17430;
	add.s64 	%rd17435, %rd17434, %rd17427;
	add.s64 	%rd18958, %rd17435, %rd17341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12124,%dummy}, %rd18955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12125}, %rd18955;
	}
	shf.r.wrap.b32 	%r12126, %r12125, %r12124, 28;
	shf.r.wrap.b32 	%r12127, %r12124, %r12125, 28;
	mov.b64 	%rd17436, {%r12127, %r12126};
	shf.l.wrap.b32 	%r12128, %r12124, %r12125, 30;
	shf.l.wrap.b32 	%r12129, %r12125, %r12124, 30;
	mov.b64 	%rd17437, {%r12129, %r12128};
	xor.b64  	%rd17438, %rd17437, %rd17436;
	shf.l.wrap.b32 	%r12130, %r12124, %r12125, 25;
	shf.l.wrap.b32 	%r12131, %r12125, %r12124, 25;
	mov.b64 	%rd17439, {%r12131, %r12130};
	xor.b64  	%rd17440, %rd17438, %rd17439;
	and.b64  	%rd17441, %rd18955, %rd17395;
	xor.b64  	%rd17442, %rd18955, %rd17395;
	and.b64  	%rd17443, %rd17442, %rd17368;
	or.b64  	%rd17444, %rd17443, %rd17441;
	add.s64 	%rd17445, %rd17435, %rd17444;
	add.s64 	%rd18954, %rd17445, %rd17440;
	add.s32 	%r12132, %r13076, 14;
	mul.wide.s32 	%rd17446, %r12132, 8;
	add.s64 	%rd17447, %rd17072, %rd17446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12133,%dummy}, %rd18958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12134}, %rd18958;
	}
	shf.r.wrap.b32 	%r12135, %r12134, %r12133, 14;
	shf.r.wrap.b32 	%r12136, %r12133, %r12134, 14;
	mov.b64 	%rd17448, {%r12136, %r12135};
	shf.r.wrap.b32 	%r12137, %r12134, %r12133, 18;
	shf.r.wrap.b32 	%r12138, %r12133, %r12134, 18;
	mov.b64 	%rd17449, {%r12138, %r12137};
	xor.b64  	%rd17450, %rd17449, %rd17448;
	shf.l.wrap.b32 	%r12139, %r12133, %r12134, 23;
	shf.l.wrap.b32 	%r12140, %r12134, %r12133, 23;
	mov.b64 	%rd17451, {%r12140, %r12139};
	xor.b64  	%rd17452, %rd17450, %rd17451;
	xor.b64  	%rd17453, %rd18959, %rd17384;
	and.b64  	%rd17454, %rd18958, %rd17453;
	xor.b64  	%rd17455, %rd17454, %rd17384;
	add.s64 	%rd17456, %rd17357, %rd18993;
	ld.const.u64 	%rd17457, [%rd17447];
	add.s64 	%rd17458, %rd17456, %rd17457;
	add.s64 	%rd17459, %rd17458, %rd17455;
	add.s64 	%rd17460, %rd17459, %rd17452;
	add.s64 	%rd18957, %rd17460, %rd17368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12141,%dummy}, %rd18954;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12142}, %rd18954;
	}
	shf.r.wrap.b32 	%r12143, %r12142, %r12141, 28;
	shf.r.wrap.b32 	%r12144, %r12141, %r12142, 28;
	mov.b64 	%rd17461, {%r12144, %r12143};
	shf.l.wrap.b32 	%r12145, %r12141, %r12142, 30;
	shf.l.wrap.b32 	%r12146, %r12142, %r12141, 30;
	mov.b64 	%rd17462, {%r12146, %r12145};
	xor.b64  	%rd17463, %rd17462, %rd17461;
	shf.l.wrap.b32 	%r12147, %r12141, %r12142, 25;
	shf.l.wrap.b32 	%r12148, %r12142, %r12141, 25;
	mov.b64 	%rd17464, {%r12148, %r12147};
	xor.b64  	%rd17465, %rd17463, %rd17464;
	and.b64  	%rd17466, %rd18954, %rd18955;
	xor.b64  	%rd17467, %rd18954, %rd18955;
	and.b64  	%rd17468, %rd17467, %rd17395;
	or.b64  	%rd17469, %rd17468, %rd17466;
	add.s64 	%rd17470, %rd17460, %rd17469;
	add.s64 	%rd18953, %rd17470, %rd17465;
	add.s32 	%r12149, %r13076, 15;
	mul.wide.s32 	%rd17471, %r12149, 8;
	add.s64 	%rd17472, %rd17072, %rd17471;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12150,%dummy}, %rd18957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12151}, %rd18957;
	}
	shf.r.wrap.b32 	%r12152, %r12151, %r12150, 14;
	shf.r.wrap.b32 	%r12153, %r12150, %r12151, 14;
	mov.b64 	%rd17473, {%r12153, %r12152};
	shf.r.wrap.b32 	%r12154, %r12151, %r12150, 18;
	shf.r.wrap.b32 	%r12155, %r12150, %r12151, 18;
	mov.b64 	%rd17474, {%r12155, %r12154};
	xor.b64  	%rd17475, %rd17474, %rd17473;
	shf.l.wrap.b32 	%r12156, %r12150, %r12151, 23;
	shf.l.wrap.b32 	%r12157, %r12151, %r12150, 23;
	mov.b64 	%rd17476, {%r12157, %r12156};
	xor.b64  	%rd17477, %rd17475, %rd17476;
	xor.b64  	%rd17478, %rd18958, %rd18959;
	and.b64  	%rd17479, %rd18957, %rd17478;
	xor.b64  	%rd17480, %rd17479, %rd18959;
	add.s64 	%rd17481, %rd17384, %rd18944;
	ld.const.u64 	%rd17482, [%rd17472];
	add.s64 	%rd17483, %rd17481, %rd17482;
	add.s64 	%rd17484, %rd17483, %rd17480;
	add.s64 	%rd17485, %rd17484, %rd17477;
	add.s64 	%rd18956, %rd17485, %rd17395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12158,%dummy}, %rd18953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12159}, %rd18953;
	}
	shf.r.wrap.b32 	%r12160, %r12159, %r12158, 28;
	shf.r.wrap.b32 	%r12161, %r12158, %r12159, 28;
	mov.b64 	%rd17486, {%r12161, %r12160};
	shf.l.wrap.b32 	%r12162, %r12158, %r12159, 30;
	shf.l.wrap.b32 	%r12163, %r12159, %r12158, 30;
	mov.b64 	%rd17487, {%r12163, %r12162};
	xor.b64  	%rd17488, %rd17487, %rd17486;
	shf.l.wrap.b32 	%r12164, %r12158, %r12159, 25;
	shf.l.wrap.b32 	%r12165, %r12159, %r12158, 25;
	mov.b64 	%rd17489, {%r12165, %r12164};
	xor.b64  	%rd17490, %rd17488, %rd17489;
	and.b64  	%rd17491, %rd18953, %rd18954;
	xor.b64  	%rd17492, %rd18953, %rd18954;
	and.b64  	%rd17493, %rd17492, %rd18955;
	or.b64  	%rd17494, %rd17493, %rd17491;
	add.s64 	%rd17495, %rd17485, %rd17494;
	add.s64 	%rd18952, %rd17495, %rd17490;
	add.s32 	%r13076, %r13076, 16;
	setp.lt.s32	%p204, %r13076, 80;
	@%p204 bra 	BB0_332;

	add.s64 	%rd18975, %rd1294, %rd18952;
	st.local.u64 	[%rd1], %rd18975;
	add.s64 	%rd18974, %rd1295, %rd18953;
	st.local.u64 	[%rd1+8], %rd18974;
	add.s64 	%rd18973, %rd1296, %rd18954;
	st.local.u64 	[%rd1+16], %rd18973;
	add.s64 	%rd18972, %rd1293, %rd18955;
	st.local.u64 	[%rd1+24], %rd18972;
	add.s64 	%rd18971, %rd1289, %rd18956;
	st.local.u64 	[%rd1+32], %rd18971;
	add.s64 	%rd18970, %rd1291, %rd18957;
	st.local.u64 	[%rd1+40], %rd18970;
	add.s64 	%rd18969, %rd1290, %rd18958;
	st.local.u64 	[%rd1+48], %rd18969;
	add.s64 	%rd18968, %rd1292, %rd18959;
	st.local.u64 	[%rd1+56], %rd18968;
	mov.u64 	%rd18993, 0;
	st.local.u64 	[%rd1+64], %rd18993;
	st.local.u64 	[%rd1+72], %rd18993;
	st.local.u64 	[%rd1+80], %rd18993;
	st.local.u64 	[%rd1+88], %rd18993;
	st.local.u64 	[%rd1+96], %rd18993;
	st.local.u64 	[%rd1+104], %rd18993;
	st.local.u64 	[%rd1+112], %rd18993;
	st.local.u64 	[%rd1+120], %rd18993;
	st.local.u64 	[%rd1+128], %rd18993;
	st.local.u64 	[%rd1+136], %rd18993;
	st.local.u64 	[%rd1+144], %rd18993;
	st.local.u64 	[%rd1+152], %rd18993;
	st.local.u64 	[%rd1+160], %rd18993;
	st.local.u64 	[%rd1+168], %rd18993;
	st.local.u64 	[%rd1+176], %rd18993;
	st.local.u64 	[%rd1+184], %rd18993;
	mov.u64 	%rd18994, %rd18993;
	mov.u64 	%rd18995, %rd18993;
	mov.u64 	%rd18996, %rd18993;
	mov.u64 	%rd18997, %rd18993;
	mov.u64 	%rd18998, %rd18993;
	mov.u64 	%rd18999, %rd18993;
	mov.u64 	%rd19015, %rd18993;
	mov.u64 	%rd19014, %rd18993;
	mov.u64 	%rd19013, %rd18993;
	mov.u64 	%rd19012, %rd18993;
	mov.u64 	%rd19011, %rd18993;
	mov.u64 	%rd19010, %rd18993;
	mov.u64 	%rd19009, %rd18993;
	mov.u64 	%rd19008, %rd18993;
	bra.uni 	BB0_334;

BB0_330:
	ld.local.u64 	%rd18975, [%rd1];
	ld.local.u64 	%rd18974, [%rd1+8];
	ld.local.u64 	%rd18973, [%rd1+16];
	ld.local.u64 	%rd18972, [%rd1+24];
	ld.local.u64 	%rd18971, [%rd1+32];
	ld.local.u64 	%rd18970, [%rd1+40];
	ld.local.u64 	%rd18969, [%rd1+48];
	ld.local.u64 	%rd18968, [%rd1+56];

BB0_334:
	mov.u64 	%rd18991, k_sha512;
	ld.local.u32 	%r12167, [%rd1+192];
	shl.b32 	%r12168, %r12167, 3;
	cvt.s64.s32	%rd18992, %r12168;
	st.local.u64 	[%rd1+184], %rd18992;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12169,%dummy}, %rd18971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12170}, %rd18971;
	}
	shf.r.wrap.b32 	%r12171, %r12170, %r12169, 18;
	shf.r.wrap.b32 	%r12172, %r12169, %r12170, 18;
	mov.b64 	%rd17512, {%r12172, %r12171};
	shf.r.wrap.b32 	%r12173, %r12170, %r12169, 14;
	shf.r.wrap.b32 	%r12174, %r12169, %r12170, 14;
	mov.b64 	%rd17513, {%r12174, %r12173};
	xor.b64  	%rd17514, %rd17512, %rd17513;
	shf.l.wrap.b32 	%r12175, %r12169, %r12170, 23;
	shf.l.wrap.b32 	%r12176, %r12170, %r12169, 23;
	mov.b64 	%rd17515, {%r12176, %r12175};
	xor.b64  	%rd17516, %rd17514, %rd17515;
	xor.b64  	%rd17517, %rd18969, %rd18970;
	and.b64  	%rd17518, %rd17517, %rd18971;
	xor.b64  	%rd17519, %rd17518, %rd18969;
	add.s64 	%rd17520, %rd18968, %rd19008;
	add.s64 	%rd17521, %rd17520, %rd18610;
	add.s64 	%rd17522, %rd17521, %rd17519;
	add.s64 	%rd17523, %rd17522, %rd17516;
	add.s64 	%rd17524, %rd17523, %rd18972;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12177}, %rd18975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12178,%dummy}, %rd18975;
	}
	shf.l.wrap.b32 	%r12179, %r12178, %r12177, 30;
	shf.l.wrap.b32 	%r12180, %r12177, %r12178, 30;
	mov.b64 	%rd17525, {%r12180, %r12179};
	shf.r.wrap.b32 	%r12181, %r12177, %r12178, 28;
	shf.r.wrap.b32 	%r12182, %r12178, %r12177, 28;
	mov.b64 	%rd17526, {%r12182, %r12181};
	xor.b64  	%rd17527, %rd17525, %rd17526;
	shf.l.wrap.b32 	%r12183, %r12178, %r12177, 25;
	shf.l.wrap.b32 	%r12184, %r12177, %r12178, 25;
	mov.b64 	%rd17528, {%r12184, %r12183};
	xor.b64  	%rd17529, %rd17527, %rd17528;
	xor.b64  	%rd17530, %rd18974, %rd18975;
	and.b64  	%rd17531, %rd18973, %rd17530;
	and.b64  	%rd17532, %rd18974, %rd18975;
	or.b64  	%rd17533, %rd17531, %rd17532;
	add.s64 	%rd17534, %rd17523, %rd17533;
	add.s64 	%rd17535, %rd17534, %rd17529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12185,%dummy}, %rd17524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12186}, %rd17524;
	}
	shf.r.wrap.b32 	%r12187, %r12186, %r12185, 14;
	shf.r.wrap.b32 	%r12188, %r12185, %r12186, 14;
	mov.b64 	%rd17536, {%r12188, %r12187};
	shf.r.wrap.b32 	%r12189, %r12186, %r12185, 18;
	shf.r.wrap.b32 	%r12190, %r12185, %r12186, 18;
	mov.b64 	%rd17537, {%r12190, %r12189};
	xor.b64  	%rd17538, %rd17537, %rd17536;
	shf.l.wrap.b32 	%r12191, %r12185, %r12186, 23;
	shf.l.wrap.b32 	%r12192, %r12186, %r12185, 23;
	mov.b64 	%rd17539, {%r12192, %r12191};
	xor.b64  	%rd17540, %rd17538, %rd17539;
	xor.b64  	%rd17541, %rd18970, %rd18971;
	and.b64  	%rd17542, %rd17524, %rd17541;
	xor.b64  	%rd17543, %rd17542, %rd18970;
	add.s64 	%rd17544, %rd18969, %rd19009;
	add.s64 	%rd17545, %rd17544, %rd18609;
	add.s64 	%rd17546, %rd17545, %rd17543;
	add.s64 	%rd17547, %rd17546, %rd17540;
	add.s64 	%rd17548, %rd17547, %rd18973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12193,%dummy}, %rd17535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12194}, %rd17535;
	}
	shf.r.wrap.b32 	%r12195, %r12194, %r12193, 28;
	shf.r.wrap.b32 	%r12196, %r12193, %r12194, 28;
	mov.b64 	%rd17549, {%r12196, %r12195};
	shf.l.wrap.b32 	%r12197, %r12193, %r12194, 30;
	shf.l.wrap.b32 	%r12198, %r12194, %r12193, 30;
	mov.b64 	%rd17550, {%r12198, %r12197};
	xor.b64  	%rd17551, %rd17550, %rd17549;
	shf.l.wrap.b32 	%r12199, %r12193, %r12194, 25;
	shf.l.wrap.b32 	%r12200, %r12194, %r12193, 25;
	mov.b64 	%rd17552, {%r12200, %r12199};
	xor.b64  	%rd17553, %rd17551, %rd17552;
	and.b64  	%rd17554, %rd17535, %rd18975;
	xor.b64  	%rd17555, %rd17535, %rd18975;
	and.b64  	%rd17556, %rd17555, %rd18974;
	or.b64  	%rd17557, %rd17556, %rd17554;
	add.s64 	%rd17558, %rd17547, %rd17557;
	add.s64 	%rd17559, %rd17558, %rd17553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12201,%dummy}, %rd17548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12202}, %rd17548;
	}
	shf.r.wrap.b32 	%r12203, %r12202, %r12201, 14;
	shf.r.wrap.b32 	%r12204, %r12201, %r12202, 14;
	mov.b64 	%rd17560, {%r12204, %r12203};
	shf.r.wrap.b32 	%r12205, %r12202, %r12201, 18;
	shf.r.wrap.b32 	%r12206, %r12201, %r12202, 18;
	mov.b64 	%rd17561, {%r12206, %r12205};
	xor.b64  	%rd17562, %rd17561, %rd17560;
	shf.l.wrap.b32 	%r12207, %r12201, %r12202, 23;
	shf.l.wrap.b32 	%r12208, %r12202, %r12201, 23;
	mov.b64 	%rd17563, {%r12208, %r12207};
	xor.b64  	%rd17564, %rd17562, %rd17563;
	xor.b64  	%rd17565, %rd17524, %rd18971;
	and.b64  	%rd17566, %rd17548, %rd17565;
	xor.b64  	%rd17567, %rd17566, %rd18971;
	add.s64 	%rd17568, %rd18970, %rd19010;
	add.s64 	%rd17569, %rd17568, %rd18608;
	add.s64 	%rd17570, %rd17569, %rd17567;
	add.s64 	%rd17571, %rd17570, %rd17564;
	add.s64 	%rd17572, %rd17571, %rd18974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12209,%dummy}, %rd17559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12210}, %rd17559;
	}
	shf.r.wrap.b32 	%r12211, %r12210, %r12209, 28;
	shf.r.wrap.b32 	%r12212, %r12209, %r12210, 28;
	mov.b64 	%rd17573, {%r12212, %r12211};
	shf.l.wrap.b32 	%r12213, %r12209, %r12210, 30;
	shf.l.wrap.b32 	%r12214, %r12210, %r12209, 30;
	mov.b64 	%rd17574, {%r12214, %r12213};
	xor.b64  	%rd17575, %rd17574, %rd17573;
	shf.l.wrap.b32 	%r12215, %r12209, %r12210, 25;
	shf.l.wrap.b32 	%r12216, %r12210, %r12209, 25;
	mov.b64 	%rd17576, {%r12216, %r12215};
	xor.b64  	%rd17577, %rd17575, %rd17576;
	and.b64  	%rd17578, %rd17559, %rd17535;
	xor.b64  	%rd17579, %rd17559, %rd17535;
	and.b64  	%rd17580, %rd17579, %rd18975;
	or.b64  	%rd17581, %rd17580, %rd17578;
	add.s64 	%rd17582, %rd17571, %rd17581;
	add.s64 	%rd17583, %rd17582, %rd17577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12217,%dummy}, %rd17572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12218}, %rd17572;
	}
	shf.r.wrap.b32 	%r12219, %r12218, %r12217, 14;
	shf.r.wrap.b32 	%r12220, %r12217, %r12218, 14;
	mov.b64 	%rd17584, {%r12220, %r12219};
	shf.r.wrap.b32 	%r12221, %r12218, %r12217, 18;
	shf.r.wrap.b32 	%r12222, %r12217, %r12218, 18;
	mov.b64 	%rd17585, {%r12222, %r12221};
	xor.b64  	%rd17586, %rd17585, %rd17584;
	shf.l.wrap.b32 	%r12223, %r12217, %r12218, 23;
	shf.l.wrap.b32 	%r12224, %r12218, %r12217, 23;
	mov.b64 	%rd17587, {%r12224, %r12223};
	xor.b64  	%rd17588, %rd17586, %rd17587;
	xor.b64  	%rd17589, %rd17548, %rd17524;
	and.b64  	%rd17590, %rd17572, %rd17589;
	xor.b64  	%rd17591, %rd17590, %rd17524;
	add.s64 	%rd17592, %rd18971, %rd19011;
	add.s64 	%rd17593, %rd17592, %rd18607;
	add.s64 	%rd17594, %rd17593, %rd17591;
	add.s64 	%rd17595, %rd17594, %rd17588;
	add.s64 	%rd17596, %rd17595, %rd18975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12225,%dummy}, %rd17583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12226}, %rd17583;
	}
	shf.r.wrap.b32 	%r12227, %r12226, %r12225, 28;
	shf.r.wrap.b32 	%r12228, %r12225, %r12226, 28;
	mov.b64 	%rd17597, {%r12228, %r12227};
	shf.l.wrap.b32 	%r12229, %r12225, %r12226, 30;
	shf.l.wrap.b32 	%r12230, %r12226, %r12225, 30;
	mov.b64 	%rd17598, {%r12230, %r12229};
	xor.b64  	%rd17599, %rd17598, %rd17597;
	shf.l.wrap.b32 	%r12231, %r12225, %r12226, 25;
	shf.l.wrap.b32 	%r12232, %r12226, %r12225, 25;
	mov.b64 	%rd17600, {%r12232, %r12231};
	xor.b64  	%rd17601, %rd17599, %rd17600;
	and.b64  	%rd17602, %rd17583, %rd17559;
	xor.b64  	%rd17603, %rd17583, %rd17559;
	and.b64  	%rd17604, %rd17603, %rd17535;
	or.b64  	%rd17605, %rd17604, %rd17602;
	add.s64 	%rd17606, %rd17595, %rd17605;
	add.s64 	%rd17607, %rd17606, %rd17601;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12233,%dummy}, %rd17596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12234}, %rd17596;
	}
	shf.r.wrap.b32 	%r12235, %r12234, %r12233, 14;
	shf.r.wrap.b32 	%r12236, %r12233, %r12234, 14;
	mov.b64 	%rd17608, {%r12236, %r12235};
	shf.r.wrap.b32 	%r12237, %r12234, %r12233, 18;
	shf.r.wrap.b32 	%r12238, %r12233, %r12234, 18;
	mov.b64 	%rd17609, {%r12238, %r12237};
	xor.b64  	%rd17610, %rd17609, %rd17608;
	shf.l.wrap.b32 	%r12239, %r12233, %r12234, 23;
	shf.l.wrap.b32 	%r12240, %r12234, %r12233, 23;
	mov.b64 	%rd17611, {%r12240, %r12239};
	xor.b64  	%rd17612, %rd17610, %rd17611;
	xor.b64  	%rd17613, %rd17572, %rd17548;
	and.b64  	%rd17614, %rd17596, %rd17613;
	xor.b64  	%rd17615, %rd17614, %rd17548;
	add.s64 	%rd17616, %rd17524, %rd19012;
	add.s64 	%rd17617, %rd17616, %rd18606;
	add.s64 	%rd17618, %rd17617, %rd17615;
	add.s64 	%rd17619, %rd17618, %rd17612;
	add.s64 	%rd17620, %rd17619, %rd17535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12241,%dummy}, %rd17607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12242}, %rd17607;
	}
	shf.r.wrap.b32 	%r12243, %r12242, %r12241, 28;
	shf.r.wrap.b32 	%r12244, %r12241, %r12242, 28;
	mov.b64 	%rd17621, {%r12244, %r12243};
	shf.l.wrap.b32 	%r12245, %r12241, %r12242, 30;
	shf.l.wrap.b32 	%r12246, %r12242, %r12241, 30;
	mov.b64 	%rd17622, {%r12246, %r12245};
	xor.b64  	%rd17623, %rd17622, %rd17621;
	shf.l.wrap.b32 	%r12247, %r12241, %r12242, 25;
	shf.l.wrap.b32 	%r12248, %r12242, %r12241, 25;
	mov.b64 	%rd17624, {%r12248, %r12247};
	xor.b64  	%rd17625, %rd17623, %rd17624;
	and.b64  	%rd17626, %rd17607, %rd17583;
	xor.b64  	%rd17627, %rd17607, %rd17583;
	and.b64  	%rd17628, %rd17627, %rd17559;
	or.b64  	%rd17629, %rd17628, %rd17626;
	add.s64 	%rd17630, %rd17619, %rd17629;
	add.s64 	%rd17631, %rd17630, %rd17625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12249,%dummy}, %rd17620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12250}, %rd17620;
	}
	shf.r.wrap.b32 	%r12251, %r12250, %r12249, 14;
	shf.r.wrap.b32 	%r12252, %r12249, %r12250, 14;
	mov.b64 	%rd17632, {%r12252, %r12251};
	shf.r.wrap.b32 	%r12253, %r12250, %r12249, 18;
	shf.r.wrap.b32 	%r12254, %r12249, %r12250, 18;
	mov.b64 	%rd17633, {%r12254, %r12253};
	xor.b64  	%rd17634, %rd17633, %rd17632;
	shf.l.wrap.b32 	%r12255, %r12249, %r12250, 23;
	shf.l.wrap.b32 	%r12256, %r12250, %r12249, 23;
	mov.b64 	%rd17635, {%r12256, %r12255};
	xor.b64  	%rd17636, %rd17634, %rd17635;
	xor.b64  	%rd17637, %rd17596, %rd17572;
	and.b64  	%rd17638, %rd17620, %rd17637;
	xor.b64  	%rd17639, %rd17638, %rd17572;
	add.s64 	%rd17640, %rd17548, %rd19013;
	add.s64 	%rd17641, %rd17640, %rd18605;
	add.s64 	%rd17642, %rd17641, %rd17639;
	add.s64 	%rd17643, %rd17642, %rd17636;
	add.s64 	%rd17644, %rd17643, %rd17559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12257,%dummy}, %rd17631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12258}, %rd17631;
	}
	shf.r.wrap.b32 	%r12259, %r12258, %r12257, 28;
	shf.r.wrap.b32 	%r12260, %r12257, %r12258, 28;
	mov.b64 	%rd17645, {%r12260, %r12259};
	shf.l.wrap.b32 	%r12261, %r12257, %r12258, 30;
	shf.l.wrap.b32 	%r12262, %r12258, %r12257, 30;
	mov.b64 	%rd17646, {%r12262, %r12261};
	xor.b64  	%rd17647, %rd17646, %rd17645;
	shf.l.wrap.b32 	%r12263, %r12257, %r12258, 25;
	shf.l.wrap.b32 	%r12264, %r12258, %r12257, 25;
	mov.b64 	%rd17648, {%r12264, %r12263};
	xor.b64  	%rd17649, %rd17647, %rd17648;
	and.b64  	%rd17650, %rd17631, %rd17607;
	xor.b64  	%rd17651, %rd17631, %rd17607;
	and.b64  	%rd17652, %rd17651, %rd17583;
	or.b64  	%rd17653, %rd17652, %rd17650;
	add.s64 	%rd17654, %rd17643, %rd17653;
	add.s64 	%rd17655, %rd17654, %rd17649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12265,%dummy}, %rd17644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12266}, %rd17644;
	}
	shf.r.wrap.b32 	%r12267, %r12266, %r12265, 14;
	shf.r.wrap.b32 	%r12268, %r12265, %r12266, 14;
	mov.b64 	%rd17656, {%r12268, %r12267};
	shf.r.wrap.b32 	%r12269, %r12266, %r12265, 18;
	shf.r.wrap.b32 	%r12270, %r12265, %r12266, 18;
	mov.b64 	%rd17657, {%r12270, %r12269};
	xor.b64  	%rd17658, %rd17657, %rd17656;
	shf.l.wrap.b32 	%r12271, %r12265, %r12266, 23;
	shf.l.wrap.b32 	%r12272, %r12266, %r12265, 23;
	mov.b64 	%rd17659, {%r12272, %r12271};
	xor.b64  	%rd17660, %rd17658, %rd17659;
	xor.b64  	%rd17661, %rd17620, %rd17596;
	and.b64  	%rd17662, %rd17644, %rd17661;
	xor.b64  	%rd17663, %rd17662, %rd17596;
	add.s64 	%rd17664, %rd17572, %rd19014;
	add.s64 	%rd17665, %rd17664, %rd18604;
	add.s64 	%rd17666, %rd17665, %rd17663;
	add.s64 	%rd17667, %rd17666, %rd17660;
	add.s64 	%rd17668, %rd17667, %rd17583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12273,%dummy}, %rd17655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12274}, %rd17655;
	}
	shf.r.wrap.b32 	%r12275, %r12274, %r12273, 28;
	shf.r.wrap.b32 	%r12276, %r12273, %r12274, 28;
	mov.b64 	%rd17669, {%r12276, %r12275};
	shf.l.wrap.b32 	%r12277, %r12273, %r12274, 30;
	shf.l.wrap.b32 	%r12278, %r12274, %r12273, 30;
	mov.b64 	%rd17670, {%r12278, %r12277};
	xor.b64  	%rd17671, %rd17670, %rd17669;
	shf.l.wrap.b32 	%r12279, %r12273, %r12274, 25;
	shf.l.wrap.b32 	%r12280, %r12274, %r12273, 25;
	mov.b64 	%rd17672, {%r12280, %r12279};
	xor.b64  	%rd17673, %rd17671, %rd17672;
	and.b64  	%rd17674, %rd17655, %rd17631;
	xor.b64  	%rd17675, %rd17655, %rd17631;
	and.b64  	%rd17676, %rd17675, %rd17607;
	or.b64  	%rd17677, %rd17676, %rd17674;
	add.s64 	%rd17678, %rd17667, %rd17677;
	add.s64 	%rd17679, %rd17678, %rd17673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12281,%dummy}, %rd17668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12282}, %rd17668;
	}
	shf.r.wrap.b32 	%r12283, %r12282, %r12281, 14;
	shf.r.wrap.b32 	%r12284, %r12281, %r12282, 14;
	mov.b64 	%rd17680, {%r12284, %r12283};
	shf.r.wrap.b32 	%r12285, %r12282, %r12281, 18;
	shf.r.wrap.b32 	%r12286, %r12281, %r12282, 18;
	mov.b64 	%rd17681, {%r12286, %r12285};
	xor.b64  	%rd17682, %rd17681, %rd17680;
	shf.l.wrap.b32 	%r12287, %r12281, %r12282, 23;
	shf.l.wrap.b32 	%r12288, %r12282, %r12281, 23;
	mov.b64 	%rd17683, {%r12288, %r12287};
	xor.b64  	%rd17684, %rd17682, %rd17683;
	xor.b64  	%rd17685, %rd17644, %rd17620;
	and.b64  	%rd17686, %rd17668, %rd17685;
	xor.b64  	%rd17687, %rd17686, %rd17620;
	add.s64 	%rd17688, %rd17596, %rd19015;
	add.s64 	%rd17689, %rd17688, %rd18603;
	add.s64 	%rd17690, %rd17689, %rd17687;
	add.s64 	%rd17691, %rd17690, %rd17684;
	add.s64 	%rd17692, %rd17691, %rd17607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12289,%dummy}, %rd17679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12290}, %rd17679;
	}
	shf.r.wrap.b32 	%r12291, %r12290, %r12289, 28;
	shf.r.wrap.b32 	%r12292, %r12289, %r12290, 28;
	mov.b64 	%rd17693, {%r12292, %r12291};
	shf.l.wrap.b32 	%r12293, %r12289, %r12290, 30;
	shf.l.wrap.b32 	%r12294, %r12290, %r12289, 30;
	mov.b64 	%rd17694, {%r12294, %r12293};
	xor.b64  	%rd17695, %rd17694, %rd17693;
	shf.l.wrap.b32 	%r12295, %r12289, %r12290, 25;
	shf.l.wrap.b32 	%r12296, %r12290, %r12289, 25;
	mov.b64 	%rd17696, {%r12296, %r12295};
	xor.b64  	%rd17697, %rd17695, %rd17696;
	and.b64  	%rd17698, %rd17679, %rd17655;
	xor.b64  	%rd17699, %rd17679, %rd17655;
	and.b64  	%rd17700, %rd17699, %rd17631;
	or.b64  	%rd17701, %rd17700, %rd17698;
	add.s64 	%rd17702, %rd17691, %rd17701;
	add.s64 	%rd17703, %rd17702, %rd17697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12297,%dummy}, %rd17692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12298}, %rd17692;
	}
	shf.r.wrap.b32 	%r12299, %r12298, %r12297, 14;
	shf.r.wrap.b32 	%r12300, %r12297, %r12298, 14;
	mov.b64 	%rd17704, {%r12300, %r12299};
	shf.r.wrap.b32 	%r12301, %r12298, %r12297, 18;
	shf.r.wrap.b32 	%r12302, %r12297, %r12298, 18;
	mov.b64 	%rd17705, {%r12302, %r12301};
	xor.b64  	%rd17706, %rd17705, %rd17704;
	shf.l.wrap.b32 	%r12303, %r12297, %r12298, 23;
	shf.l.wrap.b32 	%r12304, %r12298, %r12297, 23;
	mov.b64 	%rd17707, {%r12304, %r12303};
	xor.b64  	%rd17708, %rd17706, %rd17707;
	xor.b64  	%rd17709, %rd17668, %rd17644;
	and.b64  	%rd17710, %rd17692, %rd17709;
	xor.b64  	%rd17711, %rd17710, %rd17644;
	add.s64 	%rd17712, %rd17620, %rd18999;
	add.s64 	%rd17713, %rd17712, %rd18602;
	add.s64 	%rd17714, %rd17713, %rd17711;
	add.s64 	%rd17715, %rd17714, %rd17708;
	add.s64 	%rd17716, %rd17715, %rd17631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12305,%dummy}, %rd17703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12306}, %rd17703;
	}
	shf.r.wrap.b32 	%r12307, %r12306, %r12305, 28;
	shf.r.wrap.b32 	%r12308, %r12305, %r12306, 28;
	mov.b64 	%rd17717, {%r12308, %r12307};
	shf.l.wrap.b32 	%r12309, %r12305, %r12306, 30;
	shf.l.wrap.b32 	%r12310, %r12306, %r12305, 30;
	mov.b64 	%rd17718, {%r12310, %r12309};
	xor.b64  	%rd17719, %rd17718, %rd17717;
	shf.l.wrap.b32 	%r12311, %r12305, %r12306, 25;
	shf.l.wrap.b32 	%r12312, %r12306, %r12305, 25;
	mov.b64 	%rd17720, {%r12312, %r12311};
	xor.b64  	%rd17721, %rd17719, %rd17720;
	and.b64  	%rd17722, %rd17703, %rd17679;
	xor.b64  	%rd17723, %rd17703, %rd17679;
	and.b64  	%rd17724, %rd17723, %rd17655;
	or.b64  	%rd17725, %rd17724, %rd17722;
	add.s64 	%rd17726, %rd17715, %rd17725;
	add.s64 	%rd17727, %rd17726, %rd17721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12313,%dummy}, %rd17716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12314}, %rd17716;
	}
	shf.r.wrap.b32 	%r12315, %r12314, %r12313, 14;
	shf.r.wrap.b32 	%r12316, %r12313, %r12314, 14;
	mov.b64 	%rd17728, {%r12316, %r12315};
	shf.r.wrap.b32 	%r12317, %r12314, %r12313, 18;
	shf.r.wrap.b32 	%r12318, %r12313, %r12314, 18;
	mov.b64 	%rd17729, {%r12318, %r12317};
	xor.b64  	%rd17730, %rd17729, %rd17728;
	shf.l.wrap.b32 	%r12319, %r12313, %r12314, 23;
	shf.l.wrap.b32 	%r12320, %r12314, %r12313, 23;
	mov.b64 	%rd17731, {%r12320, %r12319};
	xor.b64  	%rd17732, %rd17730, %rd17731;
	xor.b64  	%rd17733, %rd17692, %rd17668;
	and.b64  	%rd17734, %rd17716, %rd17733;
	xor.b64  	%rd17735, %rd17734, %rd17668;
	add.s64 	%rd17736, %rd17644, %rd18998;
	add.s64 	%rd17737, %rd17736, %rd18601;
	add.s64 	%rd17738, %rd17737, %rd17735;
	add.s64 	%rd17739, %rd17738, %rd17732;
	add.s64 	%rd17740, %rd17739, %rd17655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12321,%dummy}, %rd17727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12322}, %rd17727;
	}
	shf.r.wrap.b32 	%r12323, %r12322, %r12321, 28;
	shf.r.wrap.b32 	%r12324, %r12321, %r12322, 28;
	mov.b64 	%rd17741, {%r12324, %r12323};
	shf.l.wrap.b32 	%r12325, %r12321, %r12322, 30;
	shf.l.wrap.b32 	%r12326, %r12322, %r12321, 30;
	mov.b64 	%rd17742, {%r12326, %r12325};
	xor.b64  	%rd17743, %rd17742, %rd17741;
	shf.l.wrap.b32 	%r12327, %r12321, %r12322, 25;
	shf.l.wrap.b32 	%r12328, %r12322, %r12321, 25;
	mov.b64 	%rd17744, {%r12328, %r12327};
	xor.b64  	%rd17745, %rd17743, %rd17744;
	and.b64  	%rd17746, %rd17727, %rd17703;
	xor.b64  	%rd17747, %rd17727, %rd17703;
	and.b64  	%rd17748, %rd17747, %rd17679;
	or.b64  	%rd17749, %rd17748, %rd17746;
	add.s64 	%rd17750, %rd17739, %rd17749;
	add.s64 	%rd17751, %rd17750, %rd17745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12329,%dummy}, %rd17740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12330}, %rd17740;
	}
	shf.r.wrap.b32 	%r12331, %r12330, %r12329, 14;
	shf.r.wrap.b32 	%r12332, %r12329, %r12330, 14;
	mov.b64 	%rd17752, {%r12332, %r12331};
	shf.r.wrap.b32 	%r12333, %r12330, %r12329, 18;
	shf.r.wrap.b32 	%r12334, %r12329, %r12330, 18;
	mov.b64 	%rd17753, {%r12334, %r12333};
	xor.b64  	%rd17754, %rd17753, %rd17752;
	shf.l.wrap.b32 	%r12335, %r12329, %r12330, 23;
	shf.l.wrap.b32 	%r12336, %r12330, %r12329, 23;
	mov.b64 	%rd17755, {%r12336, %r12335};
	xor.b64  	%rd17756, %rd17754, %rd17755;
	xor.b64  	%rd17757, %rd17716, %rd17692;
	and.b64  	%rd17758, %rd17740, %rd17757;
	xor.b64  	%rd17759, %rd17758, %rd17692;
	add.s64 	%rd17760, %rd17668, %rd18997;
	add.s64 	%rd17761, %rd17760, %rd18600;
	add.s64 	%rd17762, %rd17761, %rd17759;
	add.s64 	%rd17763, %rd17762, %rd17756;
	add.s64 	%rd17764, %rd17763, %rd17679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12337,%dummy}, %rd17751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12338}, %rd17751;
	}
	shf.r.wrap.b32 	%r12339, %r12338, %r12337, 28;
	shf.r.wrap.b32 	%r12340, %r12337, %r12338, 28;
	mov.b64 	%rd17765, {%r12340, %r12339};
	shf.l.wrap.b32 	%r12341, %r12337, %r12338, 30;
	shf.l.wrap.b32 	%r12342, %r12338, %r12337, 30;
	mov.b64 	%rd17766, {%r12342, %r12341};
	xor.b64  	%rd17767, %rd17766, %rd17765;
	shf.l.wrap.b32 	%r12343, %r12337, %r12338, 25;
	shf.l.wrap.b32 	%r12344, %r12338, %r12337, 25;
	mov.b64 	%rd17768, {%r12344, %r12343};
	xor.b64  	%rd17769, %rd17767, %rd17768;
	and.b64  	%rd17770, %rd17751, %rd17727;
	xor.b64  	%rd17771, %rd17751, %rd17727;
	and.b64  	%rd17772, %rd17771, %rd17703;
	or.b64  	%rd17773, %rd17772, %rd17770;
	add.s64 	%rd17774, %rd17763, %rd17773;
	add.s64 	%rd17775, %rd17774, %rd17769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12345,%dummy}, %rd17764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12346}, %rd17764;
	}
	shf.r.wrap.b32 	%r12347, %r12346, %r12345, 14;
	shf.r.wrap.b32 	%r12348, %r12345, %r12346, 14;
	mov.b64 	%rd17776, {%r12348, %r12347};
	shf.r.wrap.b32 	%r12349, %r12346, %r12345, 18;
	shf.r.wrap.b32 	%r12350, %r12345, %r12346, 18;
	mov.b64 	%rd17777, {%r12350, %r12349};
	xor.b64  	%rd17778, %rd17777, %rd17776;
	shf.l.wrap.b32 	%r12351, %r12345, %r12346, 23;
	shf.l.wrap.b32 	%r12352, %r12346, %r12345, 23;
	mov.b64 	%rd17779, {%r12352, %r12351};
	xor.b64  	%rd17780, %rd17778, %rd17779;
	xor.b64  	%rd17781, %rd17740, %rd17716;
	and.b64  	%rd17782, %rd17764, %rd17781;
	xor.b64  	%rd17783, %rd17782, %rd17716;
	add.s64 	%rd17784, %rd17692, %rd18996;
	add.s64 	%rd17785, %rd17784, %rd18599;
	add.s64 	%rd17786, %rd17785, %rd17783;
	add.s64 	%rd17787, %rd17786, %rd17780;
	add.s64 	%rd17788, %rd17787, %rd17703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12353,%dummy}, %rd17775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12354}, %rd17775;
	}
	shf.r.wrap.b32 	%r12355, %r12354, %r12353, 28;
	shf.r.wrap.b32 	%r12356, %r12353, %r12354, 28;
	mov.b64 	%rd17789, {%r12356, %r12355};
	shf.l.wrap.b32 	%r12357, %r12353, %r12354, 30;
	shf.l.wrap.b32 	%r12358, %r12354, %r12353, 30;
	mov.b64 	%rd17790, {%r12358, %r12357};
	xor.b64  	%rd17791, %rd17790, %rd17789;
	shf.l.wrap.b32 	%r12359, %r12353, %r12354, 25;
	shf.l.wrap.b32 	%r12360, %r12354, %r12353, 25;
	mov.b64 	%rd17792, {%r12360, %r12359};
	xor.b64  	%rd17793, %rd17791, %rd17792;
	and.b64  	%rd17794, %rd17775, %rd17751;
	xor.b64  	%rd17795, %rd17775, %rd17751;
	and.b64  	%rd17796, %rd17795, %rd17727;
	or.b64  	%rd17797, %rd17796, %rd17794;
	add.s64 	%rd17798, %rd17787, %rd17797;
	add.s64 	%rd17799, %rd17798, %rd17793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12361,%dummy}, %rd17788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12362}, %rd17788;
	}
	shf.r.wrap.b32 	%r12363, %r12362, %r12361, 14;
	shf.r.wrap.b32 	%r12364, %r12361, %r12362, 14;
	mov.b64 	%rd17800, {%r12364, %r12363};
	shf.r.wrap.b32 	%r12365, %r12362, %r12361, 18;
	shf.r.wrap.b32 	%r12366, %r12361, %r12362, 18;
	mov.b64 	%rd17801, {%r12366, %r12365};
	xor.b64  	%rd17802, %rd17801, %rd17800;
	shf.l.wrap.b32 	%r12367, %r12361, %r12362, 23;
	shf.l.wrap.b32 	%r12368, %r12362, %r12361, 23;
	mov.b64 	%rd17803, {%r12368, %r12367};
	xor.b64  	%rd17804, %rd17802, %rd17803;
	xor.b64  	%rd17805, %rd17764, %rd17740;
	and.b64  	%rd17806, %rd17788, %rd17805;
	xor.b64  	%rd17807, %rd17806, %rd17740;
	add.s64 	%rd17808, %rd17716, %rd18995;
	add.s64 	%rd17809, %rd17808, %rd18598;
	add.s64 	%rd17810, %rd17809, %rd17807;
	add.s64 	%rd17811, %rd17810, %rd17804;
	add.s64 	%rd19007, %rd17811, %rd17727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12369,%dummy}, %rd17799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12370}, %rd17799;
	}
	shf.r.wrap.b32 	%r12371, %r12370, %r12369, 28;
	shf.r.wrap.b32 	%r12372, %r12369, %r12370, 28;
	mov.b64 	%rd17812, {%r12372, %r12371};
	shf.l.wrap.b32 	%r12373, %r12369, %r12370, 30;
	shf.l.wrap.b32 	%r12374, %r12370, %r12369, 30;
	mov.b64 	%rd17813, {%r12374, %r12373};
	xor.b64  	%rd17814, %rd17813, %rd17812;
	shf.l.wrap.b32 	%r12375, %r12369, %r12370, 25;
	shf.l.wrap.b32 	%r12376, %r12370, %r12369, 25;
	mov.b64 	%rd17815, {%r12376, %r12375};
	xor.b64  	%rd17816, %rd17814, %rd17815;
	and.b64  	%rd17817, %rd17799, %rd17775;
	xor.b64  	%rd17818, %rd17799, %rd17775;
	and.b64  	%rd17819, %rd17818, %rd17751;
	or.b64  	%rd17820, %rd17819, %rd17817;
	add.s64 	%rd17821, %rd17811, %rd17820;
	add.s64 	%rd19003, %rd17821, %rd17816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12377,%dummy}, %rd19007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12378}, %rd19007;
	}
	shf.r.wrap.b32 	%r12379, %r12378, %r12377, 14;
	shf.r.wrap.b32 	%r12380, %r12377, %r12378, 14;
	mov.b64 	%rd17822, {%r12380, %r12379};
	shf.r.wrap.b32 	%r12381, %r12378, %r12377, 18;
	shf.r.wrap.b32 	%r12382, %r12377, %r12378, 18;
	mov.b64 	%rd17823, {%r12382, %r12381};
	xor.b64  	%rd17824, %rd17823, %rd17822;
	shf.l.wrap.b32 	%r12383, %r12377, %r12378, 23;
	shf.l.wrap.b32 	%r12384, %r12378, %r12377, 23;
	mov.b64 	%rd17825, {%r12384, %r12383};
	xor.b64  	%rd17826, %rd17824, %rd17825;
	xor.b64  	%rd17827, %rd17788, %rd17764;
	and.b64  	%rd17828, %rd19007, %rd17827;
	xor.b64  	%rd17829, %rd17828, %rd17764;
	add.s64 	%rd17830, %rd17740, %rd18994;
	add.s64 	%rd17831, %rd17830, %rd18597;
	add.s64 	%rd17832, %rd17831, %rd17829;
	add.s64 	%rd17833, %rd17832, %rd17826;
	add.s64 	%rd19006, %rd17833, %rd17751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12385,%dummy}, %rd19003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12386}, %rd19003;
	}
	shf.r.wrap.b32 	%r12387, %r12386, %r12385, 28;
	shf.r.wrap.b32 	%r12388, %r12385, %r12386, 28;
	mov.b64 	%rd17834, {%r12388, %r12387};
	shf.l.wrap.b32 	%r12389, %r12385, %r12386, 30;
	shf.l.wrap.b32 	%r12390, %r12386, %r12385, 30;
	mov.b64 	%rd17835, {%r12390, %r12389};
	xor.b64  	%rd17836, %rd17835, %rd17834;
	shf.l.wrap.b32 	%r12391, %r12385, %r12386, 25;
	shf.l.wrap.b32 	%r12392, %r12386, %r12385, 25;
	mov.b64 	%rd17837, {%r12392, %r12391};
	xor.b64  	%rd17838, %rd17836, %rd17837;
	and.b64  	%rd17839, %rd19003, %rd17799;
	xor.b64  	%rd17840, %rd19003, %rd17799;
	and.b64  	%rd17841, %rd17840, %rd17775;
	or.b64  	%rd17842, %rd17841, %rd17839;
	add.s64 	%rd17843, %rd17833, %rd17842;
	add.s64 	%rd19002, %rd17843, %rd17838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12393,%dummy}, %rd19006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12394}, %rd19006;
	}
	shf.r.wrap.b32 	%r12395, %r12394, %r12393, 14;
	shf.r.wrap.b32 	%r12396, %r12393, %r12394, 14;
	mov.b64 	%rd17844, {%r12396, %r12395};
	shf.r.wrap.b32 	%r12397, %r12394, %r12393, 18;
	shf.r.wrap.b32 	%r12398, %r12393, %r12394, 18;
	mov.b64 	%rd17845, {%r12398, %r12397};
	xor.b64  	%rd17846, %rd17845, %rd17844;
	shf.l.wrap.b32 	%r12399, %r12393, %r12394, 23;
	shf.l.wrap.b32 	%r12400, %r12394, %r12393, 23;
	mov.b64 	%rd17847, {%r12400, %r12399};
	xor.b64  	%rd17848, %rd17846, %rd17847;
	xor.b64  	%rd17849, %rd19007, %rd17788;
	and.b64  	%rd17850, %rd19006, %rd17849;
	xor.b64  	%rd17851, %rd17850, %rd17788;
	add.s64 	%rd17852, %rd17764, %rd18993;
	add.s64 	%rd17853, %rd17852, %rd18596;
	add.s64 	%rd17854, %rd17853, %rd17851;
	add.s64 	%rd17855, %rd17854, %rd17848;
	add.s64 	%rd19005, %rd17855, %rd17775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12401,%dummy}, %rd19002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12402}, %rd19002;
	}
	shf.r.wrap.b32 	%r12403, %r12402, %r12401, 28;
	shf.r.wrap.b32 	%r12404, %r12401, %r12402, 28;
	mov.b64 	%rd17856, {%r12404, %r12403};
	shf.l.wrap.b32 	%r12405, %r12401, %r12402, 30;
	shf.l.wrap.b32 	%r12406, %r12402, %r12401, 30;
	mov.b64 	%rd17857, {%r12406, %r12405};
	xor.b64  	%rd17858, %rd17857, %rd17856;
	shf.l.wrap.b32 	%r12407, %r12401, %r12402, 25;
	shf.l.wrap.b32 	%r12408, %r12402, %r12401, 25;
	mov.b64 	%rd17859, {%r12408, %r12407};
	xor.b64  	%rd17860, %rd17858, %rd17859;
	and.b64  	%rd17861, %rd19002, %rd19003;
	xor.b64  	%rd17862, %rd19002, %rd19003;
	and.b64  	%rd17863, %rd17862, %rd17799;
	or.b64  	%rd17864, %rd17863, %rd17861;
	add.s64 	%rd17865, %rd17855, %rd17864;
	add.s64 	%rd19001, %rd17865, %rd17860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12409,%dummy}, %rd19005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12410}, %rd19005;
	}
	shf.r.wrap.b32 	%r12411, %r12410, %r12409, 14;
	shf.r.wrap.b32 	%r12412, %r12409, %r12410, 14;
	mov.b64 	%rd17866, {%r12412, %r12411};
	shf.r.wrap.b32 	%r12413, %r12410, %r12409, 18;
	shf.r.wrap.b32 	%r12414, %r12409, %r12410, 18;
	mov.b64 	%rd17867, {%r12414, %r12413};
	xor.b64  	%rd17868, %rd17867, %rd17866;
	shf.l.wrap.b32 	%r12415, %r12409, %r12410, 23;
	shf.l.wrap.b32 	%r12416, %r12410, %r12409, 23;
	mov.b64 	%rd17869, {%r12416, %r12415};
	xor.b64  	%rd17870, %rd17868, %rd17869;
	xor.b64  	%rd17871, %rd19006, %rd19007;
	and.b64  	%rd17872, %rd19005, %rd17871;
	xor.b64  	%rd17873, %rd17872, %rd19007;
	add.s64 	%rd17874, %rd17788, %rd18992;
	add.s64 	%rd17875, %rd17874, %rd18595;
	add.s64 	%rd17876, %rd17875, %rd17873;
	add.s64 	%rd17877, %rd17876, %rd17870;
	add.s64 	%rd19004, %rd17877, %rd17799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12417,%dummy}, %rd19001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12418}, %rd19001;
	}
	shf.r.wrap.b32 	%r12419, %r12418, %r12417, 28;
	shf.r.wrap.b32 	%r12420, %r12417, %r12418, 28;
	mov.b64 	%rd17878, {%r12420, %r12419};
	shf.l.wrap.b32 	%r12421, %r12417, %r12418, 30;
	shf.l.wrap.b32 	%r12422, %r12418, %r12417, 30;
	mov.b64 	%rd17879, {%r12422, %r12421};
	xor.b64  	%rd17880, %rd17879, %rd17878;
	shf.l.wrap.b32 	%r12423, %r12417, %r12418, 25;
	shf.l.wrap.b32 	%r12424, %r12418, %r12417, 25;
	mov.b64 	%rd17881, {%r12424, %r12423};
	xor.b64  	%rd17882, %rd17880, %rd17881;
	and.b64  	%rd17883, %rd19001, %rd19002;
	xor.b64  	%rd17884, %rd19001, %rd19002;
	and.b64  	%rd17885, %rd17884, %rd19003;
	or.b64  	%rd17886, %rd17885, %rd17883;
	add.s64 	%rd17887, %rd17877, %rd17886;
	add.s64 	%rd19000, %rd17887, %rd17882;
	mov.u32 	%r13077, 16;

BB0_335:
	shr.u64 	%rd17888, %rd18993, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12425,%dummy}, %rd18993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12426}, %rd18993;
	}
	shf.r.wrap.b32 	%r12427, %r12426, %r12425, 19;
	shf.r.wrap.b32 	%r12428, %r12425, %r12426, 19;
	mov.b64 	%rd17889, {%r12428, %r12427};
	xor.b64  	%rd17890, %rd17889, %rd17888;
	shf.l.wrap.b32 	%r12429, %r12425, %r12426, 3;
	shf.l.wrap.b32 	%r12430, %r12426, %r12425, 3;
	mov.b64 	%rd17891, {%r12430, %r12429};
	xor.b64  	%rd17892, %rd17890, %rd17891;
	shr.u64 	%rd17893, %rd19009, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12431,%dummy}, %rd19009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12432}, %rd19009;
	}
	shf.r.wrap.b32 	%r12433, %r12432, %r12431, 1;
	shf.r.wrap.b32 	%r12434, %r12431, %r12432, 1;
	mov.b64 	%rd17894, {%r12434, %r12433};
	xor.b64  	%rd17895, %rd17894, %rd17893;
	shf.r.wrap.b32 	%r12435, %r12432, %r12431, 8;
	shf.r.wrap.b32 	%r12436, %r12431, %r12432, 8;
	mov.b64 	%rd17896, {%r12436, %r12435};
	xor.b64  	%rd17897, %rd17895, %rd17896;
	add.s64 	%rd17898, %rd18998, %rd19008;
	add.s64 	%rd17899, %rd17898, %rd17892;
	add.s64 	%rd19008, %rd17899, %rd17897;
	shr.u64 	%rd17900, %rd18992, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12437,%dummy}, %rd18992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12438}, %rd18992;
	}
	shf.r.wrap.b32 	%r12439, %r12438, %r12437, 19;
	shf.r.wrap.b32 	%r12440, %r12437, %r12438, 19;
	mov.b64 	%rd17901, {%r12440, %r12439};
	xor.b64  	%rd17902, %rd17901, %rd17900;
	shf.l.wrap.b32 	%r12441, %r12437, %r12438, 3;
	shf.l.wrap.b32 	%r12442, %r12438, %r12437, 3;
	mov.b64 	%rd17903, {%r12442, %r12441};
	xor.b64  	%rd17904, %rd17902, %rd17903;
	shr.u64 	%rd17905, %rd19010, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12443,%dummy}, %rd19010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12444}, %rd19010;
	}
	shf.r.wrap.b32 	%r12445, %r12444, %r12443, 1;
	shf.r.wrap.b32 	%r12446, %r12443, %r12444, 1;
	mov.b64 	%rd17906, {%r12446, %r12445};
	xor.b64  	%rd17907, %rd17906, %rd17905;
	shf.r.wrap.b32 	%r12447, %r12444, %r12443, 8;
	shf.r.wrap.b32 	%r12448, %r12443, %r12444, 8;
	mov.b64 	%rd17908, {%r12448, %r12447};
	xor.b64  	%rd17909, %rd17907, %rd17908;
	add.s64 	%rd17910, %rd18997, %rd19009;
	add.s64 	%rd17911, %rd17910, %rd17904;
	add.s64 	%rd19009, %rd17911, %rd17909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12449,%dummy}, %rd19008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12450}, %rd19008;
	}
	shf.r.wrap.b32 	%r12451, %r12450, %r12449, 19;
	shf.r.wrap.b32 	%r12452, %r12449, %r12450, 19;
	mov.b64 	%rd17912, {%r12452, %r12451};
	shf.l.wrap.b32 	%r12453, %r12449, %r12450, 3;
	shf.l.wrap.b32 	%r12454, %r12450, %r12449, 3;
	mov.b64 	%rd17913, {%r12454, %r12453};
	shr.u64 	%rd17914, %rd19008, 6;
	xor.b64  	%rd17915, %rd17912, %rd17914;
	xor.b64  	%rd17916, %rd17915, %rd17913;
	shr.u64 	%rd17917, %rd19011, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12455,%dummy}, %rd19011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12456}, %rd19011;
	}
	shf.r.wrap.b32 	%r12457, %r12456, %r12455, 1;
	shf.r.wrap.b32 	%r12458, %r12455, %r12456, 1;
	mov.b64 	%rd17918, {%r12458, %r12457};
	xor.b64  	%rd17919, %rd17918, %rd17917;
	shf.r.wrap.b32 	%r12459, %r12456, %r12455, 8;
	shf.r.wrap.b32 	%r12460, %r12455, %r12456, 8;
	mov.b64 	%rd17920, {%r12460, %r12459};
	xor.b64  	%rd17921, %rd17919, %rd17920;
	add.s64 	%rd17922, %rd18996, %rd19010;
	add.s64 	%rd17923, %rd17922, %rd17916;
	add.s64 	%rd19010, %rd17923, %rd17921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12461,%dummy}, %rd19009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12462}, %rd19009;
	}
	shf.r.wrap.b32 	%r12463, %r12462, %r12461, 19;
	shf.r.wrap.b32 	%r12464, %r12461, %r12462, 19;
	mov.b64 	%rd17924, {%r12464, %r12463};
	shf.l.wrap.b32 	%r12465, %r12461, %r12462, 3;
	shf.l.wrap.b32 	%r12466, %r12462, %r12461, 3;
	mov.b64 	%rd17925, {%r12466, %r12465};
	shr.u64 	%rd17926, %rd19009, 6;
	xor.b64  	%rd17927, %rd17924, %rd17926;
	xor.b64  	%rd17928, %rd17927, %rd17925;
	shr.u64 	%rd17929, %rd19012, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12467,%dummy}, %rd19012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12468}, %rd19012;
	}
	shf.r.wrap.b32 	%r12469, %r12468, %r12467, 1;
	shf.r.wrap.b32 	%r12470, %r12467, %r12468, 1;
	mov.b64 	%rd17930, {%r12470, %r12469};
	xor.b64  	%rd17931, %rd17930, %rd17929;
	shf.r.wrap.b32 	%r12471, %r12468, %r12467, 8;
	shf.r.wrap.b32 	%r12472, %r12467, %r12468, 8;
	mov.b64 	%rd17932, {%r12472, %r12471};
	xor.b64  	%rd17933, %rd17931, %rd17932;
	add.s64 	%rd17934, %rd18995, %rd19011;
	add.s64 	%rd17935, %rd17934, %rd17928;
	add.s64 	%rd19011, %rd17935, %rd17933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12473,%dummy}, %rd19010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12474}, %rd19010;
	}
	shf.r.wrap.b32 	%r12475, %r12474, %r12473, 19;
	shf.r.wrap.b32 	%r12476, %r12473, %r12474, 19;
	mov.b64 	%rd17936, {%r12476, %r12475};
	shf.l.wrap.b32 	%r12477, %r12473, %r12474, 3;
	shf.l.wrap.b32 	%r12478, %r12474, %r12473, 3;
	mov.b64 	%rd17937, {%r12478, %r12477};
	shr.u64 	%rd17938, %rd19010, 6;
	xor.b64  	%rd17939, %rd17936, %rd17938;
	xor.b64  	%rd17940, %rd17939, %rd17937;
	shr.u64 	%rd17941, %rd19013, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12479,%dummy}, %rd19013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12480}, %rd19013;
	}
	shf.r.wrap.b32 	%r12481, %r12480, %r12479, 1;
	shf.r.wrap.b32 	%r12482, %r12479, %r12480, 1;
	mov.b64 	%rd17942, {%r12482, %r12481};
	xor.b64  	%rd17943, %rd17942, %rd17941;
	shf.r.wrap.b32 	%r12483, %r12480, %r12479, 8;
	shf.r.wrap.b32 	%r12484, %r12479, %r12480, 8;
	mov.b64 	%rd17944, {%r12484, %r12483};
	xor.b64  	%rd17945, %rd17943, %rd17944;
	add.s64 	%rd17946, %rd18994, %rd19012;
	add.s64 	%rd17947, %rd17946, %rd17940;
	add.s64 	%rd19012, %rd17947, %rd17945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12485,%dummy}, %rd19011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12486}, %rd19011;
	}
	shf.r.wrap.b32 	%r12487, %r12486, %r12485, 19;
	shf.r.wrap.b32 	%r12488, %r12485, %r12486, 19;
	mov.b64 	%rd17948, {%r12488, %r12487};
	shf.l.wrap.b32 	%r12489, %r12485, %r12486, 3;
	shf.l.wrap.b32 	%r12490, %r12486, %r12485, 3;
	mov.b64 	%rd17949, {%r12490, %r12489};
	shr.u64 	%rd17950, %rd19011, 6;
	xor.b64  	%rd17951, %rd17948, %rd17950;
	xor.b64  	%rd17952, %rd17951, %rd17949;
	shr.u64 	%rd17953, %rd19014, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12491,%dummy}, %rd19014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12492}, %rd19014;
	}
	shf.r.wrap.b32 	%r12493, %r12492, %r12491, 1;
	shf.r.wrap.b32 	%r12494, %r12491, %r12492, 1;
	mov.b64 	%rd17954, {%r12494, %r12493};
	xor.b64  	%rd17955, %rd17954, %rd17953;
	shf.r.wrap.b32 	%r12495, %r12492, %r12491, 8;
	shf.r.wrap.b32 	%r12496, %r12491, %r12492, 8;
	mov.b64 	%rd17956, {%r12496, %r12495};
	xor.b64  	%rd17957, %rd17955, %rd17956;
	add.s64 	%rd17958, %rd18993, %rd19013;
	add.s64 	%rd17959, %rd17958, %rd17952;
	add.s64 	%rd19013, %rd17959, %rd17957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12497,%dummy}, %rd19012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12498}, %rd19012;
	}
	shf.r.wrap.b32 	%r12499, %r12498, %r12497, 19;
	shf.r.wrap.b32 	%r12500, %r12497, %r12498, 19;
	mov.b64 	%rd17960, {%r12500, %r12499};
	shf.l.wrap.b32 	%r12501, %r12497, %r12498, 3;
	shf.l.wrap.b32 	%r12502, %r12498, %r12497, 3;
	mov.b64 	%rd17961, {%r12502, %r12501};
	shr.u64 	%rd17962, %rd19012, 6;
	xor.b64  	%rd17963, %rd17960, %rd17962;
	xor.b64  	%rd17964, %rd17963, %rd17961;
	shr.u64 	%rd17965, %rd19015, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12503,%dummy}, %rd19015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12504}, %rd19015;
	}
	shf.r.wrap.b32 	%r12505, %r12504, %r12503, 1;
	shf.r.wrap.b32 	%r12506, %r12503, %r12504, 1;
	mov.b64 	%rd17966, {%r12506, %r12505};
	xor.b64  	%rd17967, %rd17966, %rd17965;
	shf.r.wrap.b32 	%r12507, %r12504, %r12503, 8;
	shf.r.wrap.b32 	%r12508, %r12503, %r12504, 8;
	mov.b64 	%rd17968, {%r12508, %r12507};
	xor.b64  	%rd17969, %rd17967, %rd17968;
	add.s64 	%rd17970, %rd18992, %rd19014;
	add.s64 	%rd17971, %rd17970, %rd17964;
	add.s64 	%rd19014, %rd17971, %rd17969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12509,%dummy}, %rd19013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12510}, %rd19013;
	}
	shf.r.wrap.b32 	%r12511, %r12510, %r12509, 19;
	shf.r.wrap.b32 	%r12512, %r12509, %r12510, 19;
	mov.b64 	%rd17972, {%r12512, %r12511};
	shf.l.wrap.b32 	%r12513, %r12509, %r12510, 3;
	shf.l.wrap.b32 	%r12514, %r12510, %r12509, 3;
	mov.b64 	%rd17973, {%r12514, %r12513};
	shr.u64 	%rd17974, %rd19013, 6;
	xor.b64  	%rd17975, %rd17972, %rd17974;
	xor.b64  	%rd17976, %rd17975, %rd17973;
	shr.u64 	%rd17977, %rd18999, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12515,%dummy}, %rd18999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12516}, %rd18999;
	}
	shf.r.wrap.b32 	%r12517, %r12516, %r12515, 1;
	shf.r.wrap.b32 	%r12518, %r12515, %r12516, 1;
	mov.b64 	%rd17978, {%r12518, %r12517};
	xor.b64  	%rd17979, %rd17978, %rd17977;
	shf.r.wrap.b32 	%r12519, %r12516, %r12515, 8;
	shf.r.wrap.b32 	%r12520, %r12515, %r12516, 8;
	mov.b64 	%rd17980, {%r12520, %r12519};
	xor.b64  	%rd17981, %rd17979, %rd17980;
	add.s64 	%rd17982, %rd19008, %rd19015;
	add.s64 	%rd17983, %rd17982, %rd17976;
	add.s64 	%rd19015, %rd17983, %rd17981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12521,%dummy}, %rd19014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12522}, %rd19014;
	}
	shf.r.wrap.b32 	%r12523, %r12522, %r12521, 19;
	shf.r.wrap.b32 	%r12524, %r12521, %r12522, 19;
	mov.b64 	%rd17984, {%r12524, %r12523};
	shf.l.wrap.b32 	%r12525, %r12521, %r12522, 3;
	shf.l.wrap.b32 	%r12526, %r12522, %r12521, 3;
	mov.b64 	%rd17985, {%r12526, %r12525};
	shr.u64 	%rd17986, %rd19014, 6;
	xor.b64  	%rd17987, %rd17984, %rd17986;
	xor.b64  	%rd17988, %rd17987, %rd17985;
	shr.u64 	%rd17989, %rd18998, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12527,%dummy}, %rd18998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12528}, %rd18998;
	}
	shf.r.wrap.b32 	%r12529, %r12528, %r12527, 1;
	shf.r.wrap.b32 	%r12530, %r12527, %r12528, 1;
	mov.b64 	%rd17990, {%r12530, %r12529};
	xor.b64  	%rd17991, %rd17990, %rd17989;
	shf.r.wrap.b32 	%r12531, %r12528, %r12527, 8;
	shf.r.wrap.b32 	%r12532, %r12527, %r12528, 8;
	mov.b64 	%rd17992, {%r12532, %r12531};
	xor.b64  	%rd17993, %rd17991, %rd17992;
	add.s64 	%rd17994, %rd19009, %rd18999;
	add.s64 	%rd17995, %rd17994, %rd17988;
	add.s64 	%rd18999, %rd17995, %rd17993;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12533,%dummy}, %rd19015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12534}, %rd19015;
	}
	shf.r.wrap.b32 	%r12535, %r12534, %r12533, 19;
	shf.r.wrap.b32 	%r12536, %r12533, %r12534, 19;
	mov.b64 	%rd17996, {%r12536, %r12535};
	shf.l.wrap.b32 	%r12537, %r12533, %r12534, 3;
	shf.l.wrap.b32 	%r12538, %r12534, %r12533, 3;
	mov.b64 	%rd17997, {%r12538, %r12537};
	shr.u64 	%rd17998, %rd19015, 6;
	xor.b64  	%rd17999, %rd17996, %rd17998;
	xor.b64  	%rd18000, %rd17999, %rd17997;
	shr.u64 	%rd18001, %rd18997, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12539,%dummy}, %rd18997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12540}, %rd18997;
	}
	shf.r.wrap.b32 	%r12541, %r12540, %r12539, 1;
	shf.r.wrap.b32 	%r12542, %r12539, %r12540, 1;
	mov.b64 	%rd18002, {%r12542, %r12541};
	xor.b64  	%rd18003, %rd18002, %rd18001;
	shf.r.wrap.b32 	%r12543, %r12540, %r12539, 8;
	shf.r.wrap.b32 	%r12544, %r12539, %r12540, 8;
	mov.b64 	%rd18004, {%r12544, %r12543};
	xor.b64  	%rd18005, %rd18003, %rd18004;
	add.s64 	%rd18006, %rd19010, %rd18998;
	add.s64 	%rd18007, %rd18006, %rd18000;
	add.s64 	%rd18998, %rd18007, %rd18005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12545,%dummy}, %rd18999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12546}, %rd18999;
	}
	shf.r.wrap.b32 	%r12547, %r12546, %r12545, 19;
	shf.r.wrap.b32 	%r12548, %r12545, %r12546, 19;
	mov.b64 	%rd18008, {%r12548, %r12547};
	shf.l.wrap.b32 	%r12549, %r12545, %r12546, 3;
	shf.l.wrap.b32 	%r12550, %r12546, %r12545, 3;
	mov.b64 	%rd18009, {%r12550, %r12549};
	shr.u64 	%rd18010, %rd18999, 6;
	xor.b64  	%rd18011, %rd18008, %rd18010;
	xor.b64  	%rd18012, %rd18011, %rd18009;
	shr.u64 	%rd18013, %rd18996, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12551,%dummy}, %rd18996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12552}, %rd18996;
	}
	shf.r.wrap.b32 	%r12553, %r12552, %r12551, 1;
	shf.r.wrap.b32 	%r12554, %r12551, %r12552, 1;
	mov.b64 	%rd18014, {%r12554, %r12553};
	xor.b64  	%rd18015, %rd18014, %rd18013;
	shf.r.wrap.b32 	%r12555, %r12552, %r12551, 8;
	shf.r.wrap.b32 	%r12556, %r12551, %r12552, 8;
	mov.b64 	%rd18016, {%r12556, %r12555};
	xor.b64  	%rd18017, %rd18015, %rd18016;
	add.s64 	%rd18018, %rd19011, %rd18997;
	add.s64 	%rd18019, %rd18018, %rd18012;
	add.s64 	%rd18997, %rd18019, %rd18017;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12557,%dummy}, %rd18998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12558}, %rd18998;
	}
	shf.r.wrap.b32 	%r12559, %r12558, %r12557, 19;
	shf.r.wrap.b32 	%r12560, %r12557, %r12558, 19;
	mov.b64 	%rd18020, {%r12560, %r12559};
	shf.l.wrap.b32 	%r12561, %r12557, %r12558, 3;
	shf.l.wrap.b32 	%r12562, %r12558, %r12557, 3;
	mov.b64 	%rd18021, {%r12562, %r12561};
	shr.u64 	%rd18022, %rd18998, 6;
	xor.b64  	%rd18023, %rd18020, %rd18022;
	xor.b64  	%rd18024, %rd18023, %rd18021;
	shr.u64 	%rd18025, %rd18995, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12563,%dummy}, %rd18995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12564}, %rd18995;
	}
	shf.r.wrap.b32 	%r12565, %r12564, %r12563, 1;
	shf.r.wrap.b32 	%r12566, %r12563, %r12564, 1;
	mov.b64 	%rd18026, {%r12566, %r12565};
	xor.b64  	%rd18027, %rd18026, %rd18025;
	shf.r.wrap.b32 	%r12567, %r12564, %r12563, 8;
	shf.r.wrap.b32 	%r12568, %r12563, %r12564, 8;
	mov.b64 	%rd18028, {%r12568, %r12567};
	xor.b64  	%rd18029, %rd18027, %rd18028;
	add.s64 	%rd18030, %rd19012, %rd18996;
	add.s64 	%rd18031, %rd18030, %rd18024;
	add.s64 	%rd18996, %rd18031, %rd18029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12569,%dummy}, %rd18997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12570}, %rd18997;
	}
	shf.r.wrap.b32 	%r12571, %r12570, %r12569, 19;
	shf.r.wrap.b32 	%r12572, %r12569, %r12570, 19;
	mov.b64 	%rd18032, {%r12572, %r12571};
	shf.l.wrap.b32 	%r12573, %r12569, %r12570, 3;
	shf.l.wrap.b32 	%r12574, %r12570, %r12569, 3;
	mov.b64 	%rd18033, {%r12574, %r12573};
	shr.u64 	%rd18034, %rd18997, 6;
	xor.b64  	%rd18035, %rd18032, %rd18034;
	xor.b64  	%rd18036, %rd18035, %rd18033;
	shr.u64 	%rd18037, %rd18994, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12575,%dummy}, %rd18994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12576}, %rd18994;
	}
	shf.r.wrap.b32 	%r12577, %r12576, %r12575, 1;
	shf.r.wrap.b32 	%r12578, %r12575, %r12576, 1;
	mov.b64 	%rd18038, {%r12578, %r12577};
	xor.b64  	%rd18039, %rd18038, %rd18037;
	shf.r.wrap.b32 	%r12579, %r12576, %r12575, 8;
	shf.r.wrap.b32 	%r12580, %r12575, %r12576, 8;
	mov.b64 	%rd18040, {%r12580, %r12579};
	xor.b64  	%rd18041, %rd18039, %rd18040;
	add.s64 	%rd18042, %rd19013, %rd18995;
	add.s64 	%rd18043, %rd18042, %rd18036;
	add.s64 	%rd18995, %rd18043, %rd18041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12581,%dummy}, %rd18996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12582}, %rd18996;
	}
	shf.r.wrap.b32 	%r12583, %r12582, %r12581, 19;
	shf.r.wrap.b32 	%r12584, %r12581, %r12582, 19;
	mov.b64 	%rd18044, {%r12584, %r12583};
	shf.l.wrap.b32 	%r12585, %r12581, %r12582, 3;
	shf.l.wrap.b32 	%r12586, %r12582, %r12581, 3;
	mov.b64 	%rd18045, {%r12586, %r12585};
	shr.u64 	%rd18046, %rd18996, 6;
	xor.b64  	%rd18047, %rd18044, %rd18046;
	xor.b64  	%rd18048, %rd18047, %rd18045;
	shr.u64 	%rd18049, %rd18993, 7;
	shf.r.wrap.b32 	%r12587, %r12426, %r12425, 1;
	shf.r.wrap.b32 	%r12588, %r12425, %r12426, 1;
	mov.b64 	%rd18050, {%r12588, %r12587};
	xor.b64  	%rd18051, %rd18050, %rd18049;
	shf.r.wrap.b32 	%r12589, %r12426, %r12425, 8;
	shf.r.wrap.b32 	%r12590, %r12425, %r12426, 8;
	mov.b64 	%rd18052, {%r12590, %r12589};
	xor.b64  	%rd18053, %rd18051, %rd18052;
	add.s64 	%rd18054, %rd19014, %rd18994;
	add.s64 	%rd18055, %rd18054, %rd18048;
	add.s64 	%rd18994, %rd18055, %rd18053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12591,%dummy}, %rd18995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12592}, %rd18995;
	}
	shf.r.wrap.b32 	%r12593, %r12592, %r12591, 19;
	shf.r.wrap.b32 	%r12594, %r12591, %r12592, 19;
	mov.b64 	%rd18056, {%r12594, %r12593};
	shf.l.wrap.b32 	%r12595, %r12591, %r12592, 3;
	shf.l.wrap.b32 	%r12596, %r12592, %r12591, 3;
	mov.b64 	%rd18057, {%r12596, %r12595};
	shr.u64 	%rd18058, %rd18995, 6;
	xor.b64  	%rd18059, %rd18056, %rd18058;
	xor.b64  	%rd18060, %rd18059, %rd18057;
	shr.u64 	%rd18061, %rd18992, 7;
	shf.r.wrap.b32 	%r12597, %r12438, %r12437, 1;
	shf.r.wrap.b32 	%r12598, %r12437, %r12438, 1;
	mov.b64 	%rd18062, {%r12598, %r12597};
	xor.b64  	%rd18063, %rd18062, %rd18061;
	shf.r.wrap.b32 	%r12599, %r12438, %r12437, 8;
	shf.r.wrap.b32 	%r12600, %r12437, %r12438, 8;
	mov.b64 	%rd18064, {%r12600, %r12599};
	xor.b64  	%rd18065, %rd18063, %rd18064;
	add.s64 	%rd18066, %rd19015, %rd18993;
	add.s64 	%rd18067, %rd18066, %rd18060;
	add.s64 	%rd18993, %rd18067, %rd18065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12601,%dummy}, %rd18994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12602}, %rd18994;
	}
	shf.r.wrap.b32 	%r12603, %r12602, %r12601, 19;
	shf.r.wrap.b32 	%r12604, %r12601, %r12602, 19;
	mov.b64 	%rd18068, {%r12604, %r12603};
	shf.l.wrap.b32 	%r12605, %r12601, %r12602, 3;
	shf.l.wrap.b32 	%r12606, %r12602, %r12601, 3;
	mov.b64 	%rd18069, {%r12606, %r12605};
	shr.u64 	%rd18070, %rd18994, 6;
	xor.b64  	%rd18071, %rd18068, %rd18070;
	xor.b64  	%rd18072, %rd18071, %rd18069;
	shf.r.wrap.b32 	%r12607, %r12450, %r12449, 1;
	shf.r.wrap.b32 	%r12608, %r12449, %r12450, 1;
	mov.b64 	%rd18073, {%r12608, %r12607};
	shf.r.wrap.b32 	%r12609, %r12450, %r12449, 8;
	shf.r.wrap.b32 	%r12610, %r12449, %r12450, 8;
	mov.b64 	%rd18074, {%r12610, %r12609};
	shr.u64 	%rd18075, %rd19008, 7;
	xor.b64  	%rd18076, %rd18073, %rd18075;
	xor.b64  	%rd18077, %rd18076, %rd18074;
	add.s64 	%rd18078, %rd18999, %rd18992;
	add.s64 	%rd18079, %rd18078, %rd18072;
	add.s64 	%rd18992, %rd18079, %rd18077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12611,%dummy}, %rd19004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12612}, %rd19004;
	}
	shf.r.wrap.b32 	%r12613, %r12612, %r12611, 18;
	shf.r.wrap.b32 	%r12614, %r12611, %r12612, 18;
	mov.b64 	%rd18080, {%r12614, %r12613};
	shf.r.wrap.b32 	%r12615, %r12612, %r12611, 14;
	shf.r.wrap.b32 	%r12616, %r12611, %r12612, 14;
	mov.b64 	%rd18081, {%r12616, %r12615};
	xor.b64  	%rd18082, %rd18080, %rd18081;
	shf.l.wrap.b32 	%r12617, %r12611, %r12612, 23;
	shf.l.wrap.b32 	%r12618, %r12612, %r12611, 23;
	mov.b64 	%rd18083, {%r12618, %r12617};
	xor.b64  	%rd18084, %rd18082, %rd18083;
	xor.b64  	%rd18085, %rd19005, %rd19006;
	and.b64  	%rd18086, %rd19004, %rd18085;
	xor.b64  	%rd18087, %rd18086, %rd19006;
	add.s64 	%rd18088, %rd18087, %rd19007;
	add.s64 	%rd18089, %rd18088, %rd19008;
	add.s64 	%rd1443, %rd18991, 128;
	ld.const.u64 	%rd18090, [%rd18991+128];
	add.s64 	%rd18091, %rd18089, %rd18090;
	add.s64 	%rd18092, %rd18091, %rd18084;
	add.s64 	%rd18093, %rd18092, %rd19003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12619}, %rd19000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12620,%dummy}, %rd19000;
	}
	shf.l.wrap.b32 	%r12621, %r12620, %r12619, 30;
	shf.l.wrap.b32 	%r12622, %r12619, %r12620, 30;
	mov.b64 	%rd18094, {%r12622, %r12621};
	shf.r.wrap.b32 	%r12623, %r12619, %r12620, 28;
	shf.r.wrap.b32 	%r12624, %r12620, %r12619, 28;
	mov.b64 	%rd18095, {%r12624, %r12623};
	xor.b64  	%rd18096, %rd18094, %rd18095;
	shf.l.wrap.b32 	%r12625, %r12620, %r12619, 25;
	shf.l.wrap.b32 	%r12626, %r12619, %r12620, 25;
	mov.b64 	%rd18097, {%r12626, %r12625};
	xor.b64  	%rd18098, %rd18096, %rd18097;
	xor.b64  	%rd18099, %rd19000, %rd19001;
	and.b64  	%rd18100, %rd18099, %rd19002;
	and.b64  	%rd18101, %rd19000, %rd19001;
	or.b64  	%rd18102, %rd18100, %rd18101;
	add.s64 	%rd18103, %rd18092, %rd18102;
	add.s64 	%rd18104, %rd18103, %rd18098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12627,%dummy}, %rd18093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12628}, %rd18093;
	}
	shf.r.wrap.b32 	%r12629, %r12628, %r12627, 14;
	shf.r.wrap.b32 	%r12630, %r12627, %r12628, 14;
	mov.b64 	%rd18105, {%r12630, %r12629};
	shf.r.wrap.b32 	%r12631, %r12628, %r12627, 18;
	shf.r.wrap.b32 	%r12632, %r12627, %r12628, 18;
	mov.b64 	%rd18106, {%r12632, %r12631};
	xor.b64  	%rd18107, %rd18106, %rd18105;
	shf.l.wrap.b32 	%r12633, %r12627, %r12628, 23;
	shf.l.wrap.b32 	%r12634, %r12628, %r12627, 23;
	mov.b64 	%rd18108, {%r12634, %r12633};
	xor.b64  	%rd18109, %rd18107, %rd18108;
	xor.b64  	%rd18110, %rd19004, %rd19005;
	and.b64  	%rd18111, %rd18093, %rd18110;
	xor.b64  	%rd18112, %rd18111, %rd19005;
	add.s64 	%rd18113, %rd19009, %rd19006;
	ld.const.u64 	%rd18114, [%rd18991+136];
	add.s64 	%rd18115, %rd18113, %rd18114;
	add.s64 	%rd18116, %rd18115, %rd18112;
	add.s64 	%rd18117, %rd18116, %rd18109;
	add.s64 	%rd18118, %rd18117, %rd19002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12635,%dummy}, %rd18104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12636}, %rd18104;
	}
	shf.r.wrap.b32 	%r12637, %r12636, %r12635, 28;
	shf.r.wrap.b32 	%r12638, %r12635, %r12636, 28;
	mov.b64 	%rd18119, {%r12638, %r12637};
	shf.l.wrap.b32 	%r12639, %r12635, %r12636, 30;
	shf.l.wrap.b32 	%r12640, %r12636, %r12635, 30;
	mov.b64 	%rd18120, {%r12640, %r12639};
	xor.b64  	%rd18121, %rd18120, %rd18119;
	shf.l.wrap.b32 	%r12641, %r12635, %r12636, 25;
	shf.l.wrap.b32 	%r12642, %r12636, %r12635, 25;
	mov.b64 	%rd18122, {%r12642, %r12641};
	xor.b64  	%rd18123, %rd18121, %rd18122;
	and.b64  	%rd18124, %rd18104, %rd19000;
	xor.b64  	%rd18125, %rd18104, %rd19000;
	and.b64  	%rd18126, %rd18125, %rd19001;
	or.b64  	%rd18127, %rd18126, %rd18124;
	add.s64 	%rd18128, %rd18117, %rd18127;
	add.s64 	%rd18129, %rd18128, %rd18123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12643,%dummy}, %rd18118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12644}, %rd18118;
	}
	shf.r.wrap.b32 	%r12645, %r12644, %r12643, 14;
	shf.r.wrap.b32 	%r12646, %r12643, %r12644, 14;
	mov.b64 	%rd18130, {%r12646, %r12645};
	shf.r.wrap.b32 	%r12647, %r12644, %r12643, 18;
	shf.r.wrap.b32 	%r12648, %r12643, %r12644, 18;
	mov.b64 	%rd18131, {%r12648, %r12647};
	xor.b64  	%rd18132, %rd18131, %rd18130;
	shf.l.wrap.b32 	%r12649, %r12643, %r12644, 23;
	shf.l.wrap.b32 	%r12650, %r12644, %r12643, 23;
	mov.b64 	%rd18133, {%r12650, %r12649};
	xor.b64  	%rd18134, %rd18132, %rd18133;
	xor.b64  	%rd18135, %rd18093, %rd19004;
	and.b64  	%rd18136, %rd18118, %rd18135;
	xor.b64  	%rd18137, %rd18136, %rd19004;
	add.s64 	%rd18138, %rd19010, %rd19005;
	ld.const.u64 	%rd18139, [%rd18991+144];
	add.s64 	%rd18140, %rd18138, %rd18139;
	add.s64 	%rd18141, %rd18140, %rd18137;
	add.s64 	%rd18142, %rd18141, %rd18134;
	add.s64 	%rd18143, %rd18142, %rd19001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12651,%dummy}, %rd18129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12652}, %rd18129;
	}
	shf.r.wrap.b32 	%r12653, %r12652, %r12651, 28;
	shf.r.wrap.b32 	%r12654, %r12651, %r12652, 28;
	mov.b64 	%rd18144, {%r12654, %r12653};
	shf.l.wrap.b32 	%r12655, %r12651, %r12652, 30;
	shf.l.wrap.b32 	%r12656, %r12652, %r12651, 30;
	mov.b64 	%rd18145, {%r12656, %r12655};
	xor.b64  	%rd18146, %rd18145, %rd18144;
	shf.l.wrap.b32 	%r12657, %r12651, %r12652, 25;
	shf.l.wrap.b32 	%r12658, %r12652, %r12651, 25;
	mov.b64 	%rd18147, {%r12658, %r12657};
	xor.b64  	%rd18148, %rd18146, %rd18147;
	and.b64  	%rd18149, %rd18129, %rd18104;
	xor.b64  	%rd18150, %rd18129, %rd18104;
	and.b64  	%rd18151, %rd18150, %rd19000;
	or.b64  	%rd18152, %rd18151, %rd18149;
	add.s64 	%rd18153, %rd18142, %rd18152;
	add.s64 	%rd18154, %rd18153, %rd18148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12659,%dummy}, %rd18143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12660}, %rd18143;
	}
	shf.r.wrap.b32 	%r12661, %r12660, %r12659, 14;
	shf.r.wrap.b32 	%r12662, %r12659, %r12660, 14;
	mov.b64 	%rd18155, {%r12662, %r12661};
	shf.r.wrap.b32 	%r12663, %r12660, %r12659, 18;
	shf.r.wrap.b32 	%r12664, %r12659, %r12660, 18;
	mov.b64 	%rd18156, {%r12664, %r12663};
	xor.b64  	%rd18157, %rd18156, %rd18155;
	shf.l.wrap.b32 	%r12665, %r12659, %r12660, 23;
	shf.l.wrap.b32 	%r12666, %r12660, %r12659, 23;
	mov.b64 	%rd18158, {%r12666, %r12665};
	xor.b64  	%rd18159, %rd18157, %rd18158;
	xor.b64  	%rd18160, %rd18118, %rd18093;
	and.b64  	%rd18161, %rd18143, %rd18160;
	xor.b64  	%rd18162, %rd18161, %rd18093;
	add.s64 	%rd18163, %rd19011, %rd19004;
	ld.const.u64 	%rd18164, [%rd18991+152];
	add.s64 	%rd18165, %rd18163, %rd18164;
	add.s64 	%rd18166, %rd18165, %rd18162;
	add.s64 	%rd18167, %rd18166, %rd18159;
	add.s64 	%rd18168, %rd18167, %rd19000;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12667,%dummy}, %rd18154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12668}, %rd18154;
	}
	shf.r.wrap.b32 	%r12669, %r12668, %r12667, 28;
	shf.r.wrap.b32 	%r12670, %r12667, %r12668, 28;
	mov.b64 	%rd18169, {%r12670, %r12669};
	shf.l.wrap.b32 	%r12671, %r12667, %r12668, 30;
	shf.l.wrap.b32 	%r12672, %r12668, %r12667, 30;
	mov.b64 	%rd18170, {%r12672, %r12671};
	xor.b64  	%rd18171, %rd18170, %rd18169;
	shf.l.wrap.b32 	%r12673, %r12667, %r12668, 25;
	shf.l.wrap.b32 	%r12674, %r12668, %r12667, 25;
	mov.b64 	%rd18172, {%r12674, %r12673};
	xor.b64  	%rd18173, %rd18171, %rd18172;
	and.b64  	%rd18174, %rd18154, %rd18129;
	xor.b64  	%rd18175, %rd18154, %rd18129;
	and.b64  	%rd18176, %rd18175, %rd18104;
	or.b64  	%rd18177, %rd18176, %rd18174;
	add.s64 	%rd18178, %rd18167, %rd18177;
	add.s64 	%rd18179, %rd18178, %rd18173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12675,%dummy}, %rd18168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12676}, %rd18168;
	}
	shf.r.wrap.b32 	%r12677, %r12676, %r12675, 14;
	shf.r.wrap.b32 	%r12678, %r12675, %r12676, 14;
	mov.b64 	%rd18180, {%r12678, %r12677};
	shf.r.wrap.b32 	%r12679, %r12676, %r12675, 18;
	shf.r.wrap.b32 	%r12680, %r12675, %r12676, 18;
	mov.b64 	%rd18181, {%r12680, %r12679};
	xor.b64  	%rd18182, %rd18181, %rd18180;
	shf.l.wrap.b32 	%r12681, %r12675, %r12676, 23;
	shf.l.wrap.b32 	%r12682, %r12676, %r12675, 23;
	mov.b64 	%rd18183, {%r12682, %r12681};
	xor.b64  	%rd18184, %rd18182, %rd18183;
	xor.b64  	%rd18185, %rd18143, %rd18118;
	and.b64  	%rd18186, %rd18168, %rd18185;
	xor.b64  	%rd18187, %rd18186, %rd18118;
	add.s64 	%rd18188, %rd18093, %rd19012;
	ld.const.u64 	%rd18189, [%rd18991+160];
	add.s64 	%rd18190, %rd18188, %rd18189;
	add.s64 	%rd18191, %rd18190, %rd18187;
	add.s64 	%rd18192, %rd18191, %rd18184;
	add.s64 	%rd18193, %rd18192, %rd18104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12683,%dummy}, %rd18179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12684}, %rd18179;
	}
	shf.r.wrap.b32 	%r12685, %r12684, %r12683, 28;
	shf.r.wrap.b32 	%r12686, %r12683, %r12684, 28;
	mov.b64 	%rd18194, {%r12686, %r12685};
	shf.l.wrap.b32 	%r12687, %r12683, %r12684, 30;
	shf.l.wrap.b32 	%r12688, %r12684, %r12683, 30;
	mov.b64 	%rd18195, {%r12688, %r12687};
	xor.b64  	%rd18196, %rd18195, %rd18194;
	shf.l.wrap.b32 	%r12689, %r12683, %r12684, 25;
	shf.l.wrap.b32 	%r12690, %r12684, %r12683, 25;
	mov.b64 	%rd18197, {%r12690, %r12689};
	xor.b64  	%rd18198, %rd18196, %rd18197;
	and.b64  	%rd18199, %rd18179, %rd18154;
	xor.b64  	%rd18200, %rd18179, %rd18154;
	and.b64  	%rd18201, %rd18200, %rd18129;
	or.b64  	%rd18202, %rd18201, %rd18199;
	add.s64 	%rd18203, %rd18192, %rd18202;
	add.s64 	%rd18204, %rd18203, %rd18198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12691,%dummy}, %rd18193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12692}, %rd18193;
	}
	shf.r.wrap.b32 	%r12693, %r12692, %r12691, 14;
	shf.r.wrap.b32 	%r12694, %r12691, %r12692, 14;
	mov.b64 	%rd18205, {%r12694, %r12693};
	shf.r.wrap.b32 	%r12695, %r12692, %r12691, 18;
	shf.r.wrap.b32 	%r12696, %r12691, %r12692, 18;
	mov.b64 	%rd18206, {%r12696, %r12695};
	xor.b64  	%rd18207, %rd18206, %rd18205;
	shf.l.wrap.b32 	%r12697, %r12691, %r12692, 23;
	shf.l.wrap.b32 	%r12698, %r12692, %r12691, 23;
	mov.b64 	%rd18208, {%r12698, %r12697};
	xor.b64  	%rd18209, %rd18207, %rd18208;
	xor.b64  	%rd18210, %rd18168, %rd18143;
	and.b64  	%rd18211, %rd18193, %rd18210;
	xor.b64  	%rd18212, %rd18211, %rd18143;
	add.s64 	%rd18213, %rd18118, %rd19013;
	ld.const.u64 	%rd18214, [%rd18991+168];
	add.s64 	%rd18215, %rd18213, %rd18214;
	add.s64 	%rd18216, %rd18215, %rd18212;
	add.s64 	%rd18217, %rd18216, %rd18209;
	add.s64 	%rd18218, %rd18217, %rd18129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12699,%dummy}, %rd18204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12700}, %rd18204;
	}
	shf.r.wrap.b32 	%r12701, %r12700, %r12699, 28;
	shf.r.wrap.b32 	%r12702, %r12699, %r12700, 28;
	mov.b64 	%rd18219, {%r12702, %r12701};
	shf.l.wrap.b32 	%r12703, %r12699, %r12700, 30;
	shf.l.wrap.b32 	%r12704, %r12700, %r12699, 30;
	mov.b64 	%rd18220, {%r12704, %r12703};
	xor.b64  	%rd18221, %rd18220, %rd18219;
	shf.l.wrap.b32 	%r12705, %r12699, %r12700, 25;
	shf.l.wrap.b32 	%r12706, %r12700, %r12699, 25;
	mov.b64 	%rd18222, {%r12706, %r12705};
	xor.b64  	%rd18223, %rd18221, %rd18222;
	and.b64  	%rd18224, %rd18204, %rd18179;
	xor.b64  	%rd18225, %rd18204, %rd18179;
	and.b64  	%rd18226, %rd18225, %rd18154;
	or.b64  	%rd18227, %rd18226, %rd18224;
	add.s64 	%rd18228, %rd18217, %rd18227;
	add.s64 	%rd18229, %rd18228, %rd18223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12707,%dummy}, %rd18218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12708}, %rd18218;
	}
	shf.r.wrap.b32 	%r12709, %r12708, %r12707, 14;
	shf.r.wrap.b32 	%r12710, %r12707, %r12708, 14;
	mov.b64 	%rd18230, {%r12710, %r12709};
	shf.r.wrap.b32 	%r12711, %r12708, %r12707, 18;
	shf.r.wrap.b32 	%r12712, %r12707, %r12708, 18;
	mov.b64 	%rd18231, {%r12712, %r12711};
	xor.b64  	%rd18232, %rd18231, %rd18230;
	shf.l.wrap.b32 	%r12713, %r12707, %r12708, 23;
	shf.l.wrap.b32 	%r12714, %r12708, %r12707, 23;
	mov.b64 	%rd18233, {%r12714, %r12713};
	xor.b64  	%rd18234, %rd18232, %rd18233;
	xor.b64  	%rd18235, %rd18193, %rd18168;
	and.b64  	%rd18236, %rd18218, %rd18235;
	xor.b64  	%rd18237, %rd18236, %rd18168;
	add.s64 	%rd18238, %rd18143, %rd19014;
	ld.const.u64 	%rd18239, [%rd18991+176];
	add.s64 	%rd18240, %rd18238, %rd18239;
	add.s64 	%rd18241, %rd18240, %rd18237;
	add.s64 	%rd18242, %rd18241, %rd18234;
	add.s64 	%rd18243, %rd18242, %rd18154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12715,%dummy}, %rd18229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12716}, %rd18229;
	}
	shf.r.wrap.b32 	%r12717, %r12716, %r12715, 28;
	shf.r.wrap.b32 	%r12718, %r12715, %r12716, 28;
	mov.b64 	%rd18244, {%r12718, %r12717};
	shf.l.wrap.b32 	%r12719, %r12715, %r12716, 30;
	shf.l.wrap.b32 	%r12720, %r12716, %r12715, 30;
	mov.b64 	%rd18245, {%r12720, %r12719};
	xor.b64  	%rd18246, %rd18245, %rd18244;
	shf.l.wrap.b32 	%r12721, %r12715, %r12716, 25;
	shf.l.wrap.b32 	%r12722, %r12716, %r12715, 25;
	mov.b64 	%rd18247, {%r12722, %r12721};
	xor.b64  	%rd18248, %rd18246, %rd18247;
	and.b64  	%rd18249, %rd18229, %rd18204;
	xor.b64  	%rd18250, %rd18229, %rd18204;
	and.b64  	%rd18251, %rd18250, %rd18179;
	or.b64  	%rd18252, %rd18251, %rd18249;
	add.s64 	%rd18253, %rd18242, %rd18252;
	add.s64 	%rd18254, %rd18253, %rd18248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12723,%dummy}, %rd18243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12724}, %rd18243;
	}
	shf.r.wrap.b32 	%r12725, %r12724, %r12723, 14;
	shf.r.wrap.b32 	%r12726, %r12723, %r12724, 14;
	mov.b64 	%rd18255, {%r12726, %r12725};
	shf.r.wrap.b32 	%r12727, %r12724, %r12723, 18;
	shf.r.wrap.b32 	%r12728, %r12723, %r12724, 18;
	mov.b64 	%rd18256, {%r12728, %r12727};
	xor.b64  	%rd18257, %rd18256, %rd18255;
	shf.l.wrap.b32 	%r12729, %r12723, %r12724, 23;
	shf.l.wrap.b32 	%r12730, %r12724, %r12723, 23;
	mov.b64 	%rd18258, {%r12730, %r12729};
	xor.b64  	%rd18259, %rd18257, %rd18258;
	xor.b64  	%rd18260, %rd18218, %rd18193;
	and.b64  	%rd18261, %rd18243, %rd18260;
	xor.b64  	%rd18262, %rd18261, %rd18193;
	add.s64 	%rd18263, %rd18168, %rd19015;
	ld.const.u64 	%rd18264, [%rd18991+184];
	add.s64 	%rd18265, %rd18263, %rd18264;
	add.s64 	%rd18266, %rd18265, %rd18262;
	add.s64 	%rd18267, %rd18266, %rd18259;
	add.s64 	%rd18268, %rd18267, %rd18179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12731,%dummy}, %rd18254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12732}, %rd18254;
	}
	shf.r.wrap.b32 	%r12733, %r12732, %r12731, 28;
	shf.r.wrap.b32 	%r12734, %r12731, %r12732, 28;
	mov.b64 	%rd18269, {%r12734, %r12733};
	shf.l.wrap.b32 	%r12735, %r12731, %r12732, 30;
	shf.l.wrap.b32 	%r12736, %r12732, %r12731, 30;
	mov.b64 	%rd18270, {%r12736, %r12735};
	xor.b64  	%rd18271, %rd18270, %rd18269;
	shf.l.wrap.b32 	%r12737, %r12731, %r12732, 25;
	shf.l.wrap.b32 	%r12738, %r12732, %r12731, 25;
	mov.b64 	%rd18272, {%r12738, %r12737};
	xor.b64  	%rd18273, %rd18271, %rd18272;
	and.b64  	%rd18274, %rd18254, %rd18229;
	xor.b64  	%rd18275, %rd18254, %rd18229;
	and.b64  	%rd18276, %rd18275, %rd18204;
	or.b64  	%rd18277, %rd18276, %rd18274;
	add.s64 	%rd18278, %rd18267, %rd18277;
	add.s64 	%rd18279, %rd18278, %rd18273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12739,%dummy}, %rd18268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12740}, %rd18268;
	}
	shf.r.wrap.b32 	%r12741, %r12740, %r12739, 14;
	shf.r.wrap.b32 	%r12742, %r12739, %r12740, 14;
	mov.b64 	%rd18280, {%r12742, %r12741};
	shf.r.wrap.b32 	%r12743, %r12740, %r12739, 18;
	shf.r.wrap.b32 	%r12744, %r12739, %r12740, 18;
	mov.b64 	%rd18281, {%r12744, %r12743};
	xor.b64  	%rd18282, %rd18281, %rd18280;
	shf.l.wrap.b32 	%r12745, %r12739, %r12740, 23;
	shf.l.wrap.b32 	%r12746, %r12740, %r12739, 23;
	mov.b64 	%rd18283, {%r12746, %r12745};
	xor.b64  	%rd18284, %rd18282, %rd18283;
	xor.b64  	%rd18285, %rd18243, %rd18218;
	and.b64  	%rd18286, %rd18268, %rd18285;
	xor.b64  	%rd18287, %rd18286, %rd18218;
	add.s64 	%rd18288, %rd18193, %rd18999;
	ld.const.u64 	%rd18289, [%rd18991+192];
	add.s64 	%rd18290, %rd18288, %rd18289;
	add.s64 	%rd18291, %rd18290, %rd18287;
	add.s64 	%rd18292, %rd18291, %rd18284;
	add.s64 	%rd18293, %rd18292, %rd18204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12747,%dummy}, %rd18279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12748}, %rd18279;
	}
	shf.r.wrap.b32 	%r12749, %r12748, %r12747, 28;
	shf.r.wrap.b32 	%r12750, %r12747, %r12748, 28;
	mov.b64 	%rd18294, {%r12750, %r12749};
	shf.l.wrap.b32 	%r12751, %r12747, %r12748, 30;
	shf.l.wrap.b32 	%r12752, %r12748, %r12747, 30;
	mov.b64 	%rd18295, {%r12752, %r12751};
	xor.b64  	%rd18296, %rd18295, %rd18294;
	shf.l.wrap.b32 	%r12753, %r12747, %r12748, 25;
	shf.l.wrap.b32 	%r12754, %r12748, %r12747, 25;
	mov.b64 	%rd18297, {%r12754, %r12753};
	xor.b64  	%rd18298, %rd18296, %rd18297;
	and.b64  	%rd18299, %rd18279, %rd18254;
	xor.b64  	%rd18300, %rd18279, %rd18254;
	and.b64  	%rd18301, %rd18300, %rd18229;
	or.b64  	%rd18302, %rd18301, %rd18299;
	add.s64 	%rd18303, %rd18292, %rd18302;
	add.s64 	%rd18304, %rd18303, %rd18298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12755,%dummy}, %rd18293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12756}, %rd18293;
	}
	shf.r.wrap.b32 	%r12757, %r12756, %r12755, 14;
	shf.r.wrap.b32 	%r12758, %r12755, %r12756, 14;
	mov.b64 	%rd18305, {%r12758, %r12757};
	shf.r.wrap.b32 	%r12759, %r12756, %r12755, 18;
	shf.r.wrap.b32 	%r12760, %r12755, %r12756, 18;
	mov.b64 	%rd18306, {%r12760, %r12759};
	xor.b64  	%rd18307, %rd18306, %rd18305;
	shf.l.wrap.b32 	%r12761, %r12755, %r12756, 23;
	shf.l.wrap.b32 	%r12762, %r12756, %r12755, 23;
	mov.b64 	%rd18308, {%r12762, %r12761};
	xor.b64  	%rd18309, %rd18307, %rd18308;
	xor.b64  	%rd18310, %rd18268, %rd18243;
	and.b64  	%rd18311, %rd18293, %rd18310;
	xor.b64  	%rd18312, %rd18311, %rd18243;
	add.s64 	%rd18313, %rd18218, %rd18998;
	ld.const.u64 	%rd18314, [%rd18991+200];
	add.s64 	%rd18315, %rd18313, %rd18314;
	add.s64 	%rd18316, %rd18315, %rd18312;
	add.s64 	%rd18317, %rd18316, %rd18309;
	add.s64 	%rd18318, %rd18317, %rd18229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12763,%dummy}, %rd18304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12764}, %rd18304;
	}
	shf.r.wrap.b32 	%r12765, %r12764, %r12763, 28;
	shf.r.wrap.b32 	%r12766, %r12763, %r12764, 28;
	mov.b64 	%rd18319, {%r12766, %r12765};
	shf.l.wrap.b32 	%r12767, %r12763, %r12764, 30;
	shf.l.wrap.b32 	%r12768, %r12764, %r12763, 30;
	mov.b64 	%rd18320, {%r12768, %r12767};
	xor.b64  	%rd18321, %rd18320, %rd18319;
	shf.l.wrap.b32 	%r12769, %r12763, %r12764, 25;
	shf.l.wrap.b32 	%r12770, %r12764, %r12763, 25;
	mov.b64 	%rd18322, {%r12770, %r12769};
	xor.b64  	%rd18323, %rd18321, %rd18322;
	and.b64  	%rd18324, %rd18304, %rd18279;
	xor.b64  	%rd18325, %rd18304, %rd18279;
	and.b64  	%rd18326, %rd18325, %rd18254;
	or.b64  	%rd18327, %rd18326, %rd18324;
	add.s64 	%rd18328, %rd18317, %rd18327;
	add.s64 	%rd18329, %rd18328, %rd18323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12771,%dummy}, %rd18318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12772}, %rd18318;
	}
	shf.r.wrap.b32 	%r12773, %r12772, %r12771, 14;
	shf.r.wrap.b32 	%r12774, %r12771, %r12772, 14;
	mov.b64 	%rd18330, {%r12774, %r12773};
	shf.r.wrap.b32 	%r12775, %r12772, %r12771, 18;
	shf.r.wrap.b32 	%r12776, %r12771, %r12772, 18;
	mov.b64 	%rd18331, {%r12776, %r12775};
	xor.b64  	%rd18332, %rd18331, %rd18330;
	shf.l.wrap.b32 	%r12777, %r12771, %r12772, 23;
	shf.l.wrap.b32 	%r12778, %r12772, %r12771, 23;
	mov.b64 	%rd18333, {%r12778, %r12777};
	xor.b64  	%rd18334, %rd18332, %rd18333;
	xor.b64  	%rd18335, %rd18293, %rd18268;
	and.b64  	%rd18336, %rd18318, %rd18335;
	xor.b64  	%rd18337, %rd18336, %rd18268;
	add.s64 	%rd18338, %rd18243, %rd18997;
	ld.const.u64 	%rd18339, [%rd18991+208];
	add.s64 	%rd18340, %rd18338, %rd18339;
	add.s64 	%rd18341, %rd18340, %rd18337;
	add.s64 	%rd18342, %rd18341, %rd18334;
	add.s64 	%rd18343, %rd18342, %rd18254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12779,%dummy}, %rd18329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12780}, %rd18329;
	}
	shf.r.wrap.b32 	%r12781, %r12780, %r12779, 28;
	shf.r.wrap.b32 	%r12782, %r12779, %r12780, 28;
	mov.b64 	%rd18344, {%r12782, %r12781};
	shf.l.wrap.b32 	%r12783, %r12779, %r12780, 30;
	shf.l.wrap.b32 	%r12784, %r12780, %r12779, 30;
	mov.b64 	%rd18345, {%r12784, %r12783};
	xor.b64  	%rd18346, %rd18345, %rd18344;
	shf.l.wrap.b32 	%r12785, %r12779, %r12780, 25;
	shf.l.wrap.b32 	%r12786, %r12780, %r12779, 25;
	mov.b64 	%rd18347, {%r12786, %r12785};
	xor.b64  	%rd18348, %rd18346, %rd18347;
	and.b64  	%rd18349, %rd18329, %rd18304;
	xor.b64  	%rd18350, %rd18329, %rd18304;
	and.b64  	%rd18351, %rd18350, %rd18279;
	or.b64  	%rd18352, %rd18351, %rd18349;
	add.s64 	%rd18353, %rd18342, %rd18352;
	add.s64 	%rd18354, %rd18353, %rd18348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12787,%dummy}, %rd18343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12788}, %rd18343;
	}
	shf.r.wrap.b32 	%r12789, %r12788, %r12787, 14;
	shf.r.wrap.b32 	%r12790, %r12787, %r12788, 14;
	mov.b64 	%rd18355, {%r12790, %r12789};
	shf.r.wrap.b32 	%r12791, %r12788, %r12787, 18;
	shf.r.wrap.b32 	%r12792, %r12787, %r12788, 18;
	mov.b64 	%rd18356, {%r12792, %r12791};
	xor.b64  	%rd18357, %rd18356, %rd18355;
	shf.l.wrap.b32 	%r12793, %r12787, %r12788, 23;
	shf.l.wrap.b32 	%r12794, %r12788, %r12787, 23;
	mov.b64 	%rd18358, {%r12794, %r12793};
	xor.b64  	%rd18359, %rd18357, %rd18358;
	xor.b64  	%rd18360, %rd18318, %rd18293;
	and.b64  	%rd18361, %rd18343, %rd18360;
	xor.b64  	%rd18362, %rd18361, %rd18293;
	add.s64 	%rd18363, %rd18268, %rd18996;
	ld.const.u64 	%rd18364, [%rd18991+216];
	add.s64 	%rd18365, %rd18363, %rd18364;
	add.s64 	%rd18366, %rd18365, %rd18362;
	add.s64 	%rd18367, %rd18366, %rd18359;
	add.s64 	%rd18368, %rd18367, %rd18279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12795,%dummy}, %rd18354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12796}, %rd18354;
	}
	shf.r.wrap.b32 	%r12797, %r12796, %r12795, 28;
	shf.r.wrap.b32 	%r12798, %r12795, %r12796, 28;
	mov.b64 	%rd18369, {%r12798, %r12797};
	shf.l.wrap.b32 	%r12799, %r12795, %r12796, 30;
	shf.l.wrap.b32 	%r12800, %r12796, %r12795, 30;
	mov.b64 	%rd18370, {%r12800, %r12799};
	xor.b64  	%rd18371, %rd18370, %rd18369;
	shf.l.wrap.b32 	%r12801, %r12795, %r12796, 25;
	shf.l.wrap.b32 	%r12802, %r12796, %r12795, 25;
	mov.b64 	%rd18372, {%r12802, %r12801};
	xor.b64  	%rd18373, %rd18371, %rd18372;
	and.b64  	%rd18374, %rd18354, %rd18329;
	xor.b64  	%rd18375, %rd18354, %rd18329;
	and.b64  	%rd18376, %rd18375, %rd18304;
	or.b64  	%rd18377, %rd18376, %rd18374;
	add.s64 	%rd18378, %rd18367, %rd18377;
	add.s64 	%rd18379, %rd18378, %rd18373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12803,%dummy}, %rd18368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12804}, %rd18368;
	}
	shf.r.wrap.b32 	%r12805, %r12804, %r12803, 14;
	shf.r.wrap.b32 	%r12806, %r12803, %r12804, 14;
	mov.b64 	%rd18380, {%r12806, %r12805};
	shf.r.wrap.b32 	%r12807, %r12804, %r12803, 18;
	shf.r.wrap.b32 	%r12808, %r12803, %r12804, 18;
	mov.b64 	%rd18381, {%r12808, %r12807};
	xor.b64  	%rd18382, %rd18381, %rd18380;
	shf.l.wrap.b32 	%r12809, %r12803, %r12804, 23;
	shf.l.wrap.b32 	%r12810, %r12804, %r12803, 23;
	mov.b64 	%rd18383, {%r12810, %r12809};
	xor.b64  	%rd18384, %rd18382, %rd18383;
	xor.b64  	%rd18385, %rd18343, %rd18318;
	and.b64  	%rd18386, %rd18368, %rd18385;
	xor.b64  	%rd18387, %rd18386, %rd18318;
	add.s64 	%rd18388, %rd18293, %rd18995;
	ld.const.u64 	%rd18389, [%rd18991+224];
	add.s64 	%rd18390, %rd18388, %rd18389;
	add.s64 	%rd18391, %rd18390, %rd18387;
	add.s64 	%rd18392, %rd18391, %rd18384;
	add.s64 	%rd19007, %rd18392, %rd18304;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12811,%dummy}, %rd18379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12812}, %rd18379;
	}
	shf.r.wrap.b32 	%r12813, %r12812, %r12811, 28;
	shf.r.wrap.b32 	%r12814, %r12811, %r12812, 28;
	mov.b64 	%rd18393, {%r12814, %r12813};
	shf.l.wrap.b32 	%r12815, %r12811, %r12812, 30;
	shf.l.wrap.b32 	%r12816, %r12812, %r12811, 30;
	mov.b64 	%rd18394, {%r12816, %r12815};
	xor.b64  	%rd18395, %rd18394, %rd18393;
	shf.l.wrap.b32 	%r12817, %r12811, %r12812, 25;
	shf.l.wrap.b32 	%r12818, %r12812, %r12811, 25;
	mov.b64 	%rd18396, {%r12818, %r12817};
	xor.b64  	%rd18397, %rd18395, %rd18396;
	and.b64  	%rd18398, %rd18379, %rd18354;
	xor.b64  	%rd18399, %rd18379, %rd18354;
	and.b64  	%rd18400, %rd18399, %rd18329;
	or.b64  	%rd18401, %rd18400, %rd18398;
	add.s64 	%rd18402, %rd18392, %rd18401;
	add.s64 	%rd19003, %rd18402, %rd18397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12819,%dummy}, %rd19007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12820}, %rd19007;
	}
	shf.r.wrap.b32 	%r12821, %r12820, %r12819, 14;
	shf.r.wrap.b32 	%r12822, %r12819, %r12820, 14;
	mov.b64 	%rd18403, {%r12822, %r12821};
	shf.r.wrap.b32 	%r12823, %r12820, %r12819, 18;
	shf.r.wrap.b32 	%r12824, %r12819, %r12820, 18;
	mov.b64 	%rd18404, {%r12824, %r12823};
	xor.b64  	%rd18405, %rd18404, %rd18403;
	shf.l.wrap.b32 	%r12825, %r12819, %r12820, 23;
	shf.l.wrap.b32 	%r12826, %r12820, %r12819, 23;
	mov.b64 	%rd18406, {%r12826, %r12825};
	xor.b64  	%rd18407, %rd18405, %rd18406;
	xor.b64  	%rd18408, %rd18368, %rd18343;
	and.b64  	%rd18409, %rd19007, %rd18408;
	xor.b64  	%rd18410, %rd18409, %rd18343;
	add.s64 	%rd18411, %rd18318, %rd18994;
	ld.const.u64 	%rd18412, [%rd18991+232];
	add.s64 	%rd18413, %rd18411, %rd18412;
	add.s64 	%rd18414, %rd18413, %rd18410;
	add.s64 	%rd18415, %rd18414, %rd18407;
	add.s64 	%rd19006, %rd18415, %rd18329;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12827,%dummy}, %rd19003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12828}, %rd19003;
	}
	shf.r.wrap.b32 	%r12829, %r12828, %r12827, 28;
	shf.r.wrap.b32 	%r12830, %r12827, %r12828, 28;
	mov.b64 	%rd18416, {%r12830, %r12829};
	shf.l.wrap.b32 	%r12831, %r12827, %r12828, 30;
	shf.l.wrap.b32 	%r12832, %r12828, %r12827, 30;
	mov.b64 	%rd18417, {%r12832, %r12831};
	xor.b64  	%rd18418, %rd18417, %rd18416;
	shf.l.wrap.b32 	%r12833, %r12827, %r12828, 25;
	shf.l.wrap.b32 	%r12834, %r12828, %r12827, 25;
	mov.b64 	%rd18419, {%r12834, %r12833};
	xor.b64  	%rd18420, %rd18418, %rd18419;
	and.b64  	%rd18421, %rd19003, %rd18379;
	xor.b64  	%rd18422, %rd19003, %rd18379;
	and.b64  	%rd18423, %rd18422, %rd18354;
	or.b64  	%rd18424, %rd18423, %rd18421;
	add.s64 	%rd18425, %rd18415, %rd18424;
	add.s64 	%rd19002, %rd18425, %rd18420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12835,%dummy}, %rd19006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12836}, %rd19006;
	}
	shf.r.wrap.b32 	%r12837, %r12836, %r12835, 14;
	shf.r.wrap.b32 	%r12838, %r12835, %r12836, 14;
	mov.b64 	%rd18426, {%r12838, %r12837};
	shf.r.wrap.b32 	%r12839, %r12836, %r12835, 18;
	shf.r.wrap.b32 	%r12840, %r12835, %r12836, 18;
	mov.b64 	%rd18427, {%r12840, %r12839};
	xor.b64  	%rd18428, %rd18427, %rd18426;
	shf.l.wrap.b32 	%r12841, %r12835, %r12836, 23;
	shf.l.wrap.b32 	%r12842, %r12836, %r12835, 23;
	mov.b64 	%rd18429, {%r12842, %r12841};
	xor.b64  	%rd18430, %rd18428, %rd18429;
	xor.b64  	%rd18431, %rd19007, %rd18368;
	and.b64  	%rd18432, %rd19006, %rd18431;
	xor.b64  	%rd18433, %rd18432, %rd18368;
	add.s64 	%rd18434, %rd18343, %rd18993;
	ld.const.u64 	%rd18435, [%rd18991+240];
	add.s64 	%rd18436, %rd18434, %rd18435;
	add.s64 	%rd18437, %rd18436, %rd18433;
	add.s64 	%rd18438, %rd18437, %rd18430;
	add.s64 	%rd19005, %rd18438, %rd18354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12843,%dummy}, %rd19002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12844}, %rd19002;
	}
	shf.r.wrap.b32 	%r12845, %r12844, %r12843, 28;
	shf.r.wrap.b32 	%r12846, %r12843, %r12844, 28;
	mov.b64 	%rd18439, {%r12846, %r12845};
	shf.l.wrap.b32 	%r12847, %r12843, %r12844, 30;
	shf.l.wrap.b32 	%r12848, %r12844, %r12843, 30;
	mov.b64 	%rd18440, {%r12848, %r12847};
	xor.b64  	%rd18441, %rd18440, %rd18439;
	shf.l.wrap.b32 	%r12849, %r12843, %r12844, 25;
	shf.l.wrap.b32 	%r12850, %r12844, %r12843, 25;
	mov.b64 	%rd18442, {%r12850, %r12849};
	xor.b64  	%rd18443, %rd18441, %rd18442;
	and.b64  	%rd18444, %rd19002, %rd19003;
	xor.b64  	%rd18445, %rd19002, %rd19003;
	and.b64  	%rd18446, %rd18445, %rd18379;
	or.b64  	%rd18447, %rd18446, %rd18444;
	add.s64 	%rd18448, %rd18438, %rd18447;
	add.s64 	%rd19001, %rd18448, %rd18443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12851,%dummy}, %rd19005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12852}, %rd19005;
	}
	shf.r.wrap.b32 	%r12853, %r12852, %r12851, 14;
	shf.r.wrap.b32 	%r12854, %r12851, %r12852, 14;
	mov.b64 	%rd18449, {%r12854, %r12853};
	shf.r.wrap.b32 	%r12855, %r12852, %r12851, 18;
	shf.r.wrap.b32 	%r12856, %r12851, %r12852, 18;
	mov.b64 	%rd18450, {%r12856, %r12855};
	xor.b64  	%rd18451, %rd18450, %rd18449;
	shf.l.wrap.b32 	%r12857, %r12851, %r12852, 23;
	shf.l.wrap.b32 	%r12858, %r12852, %r12851, 23;
	mov.b64 	%rd18452, {%r12858, %r12857};
	xor.b64  	%rd18453, %rd18451, %rd18452;
	xor.b64  	%rd18454, %rd19006, %rd19007;
	and.b64  	%rd18455, %rd19005, %rd18454;
	xor.b64  	%rd18456, %rd18455, %rd19007;
	add.s64 	%rd18457, %rd18368, %rd18992;
	ld.const.u64 	%rd18458, [%rd18991+248];
	add.s64 	%rd18459, %rd18457, %rd18458;
	add.s64 	%rd18460, %rd18459, %rd18456;
	add.s64 	%rd18461, %rd18460, %rd18453;
	add.s64 	%rd19004, %rd18461, %rd18379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12859,%dummy}, %rd19001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12860}, %rd19001;
	}
	shf.r.wrap.b32 	%r12861, %r12860, %r12859, 28;
	shf.r.wrap.b32 	%r12862, %r12859, %r12860, 28;
	mov.b64 	%rd18462, {%r12862, %r12861};
	shf.l.wrap.b32 	%r12863, %r12859, %r12860, 30;
	shf.l.wrap.b32 	%r12864, %r12860, %r12859, 30;
	mov.b64 	%rd18463, {%r12864, %r12863};
	xor.b64  	%rd18464, %rd18463, %rd18462;
	shf.l.wrap.b32 	%r12865, %r12859, %r12860, 25;
	shf.l.wrap.b32 	%r12866, %r12860, %r12859, 25;
	mov.b64 	%rd18465, {%r12866, %r12865};
	xor.b64  	%rd18466, %rd18464, %rd18465;
	and.b64  	%rd18467, %rd19001, %rd19002;
	xor.b64  	%rd18468, %rd19001, %rd19002;
	and.b64  	%rd18469, %rd18468, %rd19003;
	or.b64  	%rd18470, %rd18469, %rd18467;
	add.s64 	%rd18471, %rd18461, %rd18470;
	add.s64 	%rd19000, %rd18471, %rd18466;
	add.s32 	%r13077, %r13077, 16;
	setp.lt.s32	%p205, %r13077, 80;
	mov.u64 	%rd18991, %rd1443;
	@%p205 bra 	BB0_335;

	add.s64 	%rd18472, %rd18975, %rd19000;
	st.local.u64 	[%rd1], %rd18472;
	add.s64 	%rd18473, %rd18974, %rd19001;
	st.local.u64 	[%rd1+8], %rd18473;
	add.s64 	%rd18474, %rd18973, %rd19002;
	st.local.u64 	[%rd1+16], %rd18474;
	add.s64 	%rd18475, %rd18972, %rd19003;
	st.local.u64 	[%rd1+24], %rd18475;
	add.s64 	%rd18476, %rd18971, %rd19004;
	st.local.u64 	[%rd1+32], %rd18476;
	add.s64 	%rd18477, %rd18970, %rd19005;
	st.local.u64 	[%rd1+40], %rd18477;
	add.s64 	%rd18478, %rd18969, %rd19006;
	st.local.u64 	[%rd1+48], %rd18478;
	add.s64 	%rd18479, %rd18968, %rd19007;
	st.local.u64 	[%rd1+56], %rd18479;
	st.global.u64 	[%rd12232+80], %rd18472;
	st.global.u64 	[%rd12232+88], %rd18473;

BB0_337:
	ret;
}

	// .globl	m01800_loop
.entry m01800_loop(
	.param .u64 .ptr .global .align 4 m01800_loop_param_0,
	.param .u64 .ptr .global .align 4 m01800_loop_param_1,
	.param .u64 .ptr .global .align 4 m01800_loop_param_2,
	.param .u64 .ptr .const .align 4 m01800_loop_param_3,
	.param .u64 .ptr .global .align 8 m01800_loop_param_4,
	.param .u64 .ptr .global .align 1 m01800_loop_param_5,
	.param .u64 .ptr .global .align 4 m01800_loop_param_6,
	.param .u64 .ptr .global .align 4 m01800_loop_param_7,
	.param .u64 .ptr .global .align 4 m01800_loop_param_8,
	.param .u64 .ptr .global .align 4 m01800_loop_param_9,
	.param .u64 .ptr .global .align 4 m01800_loop_param_10,
	.param .u64 .ptr .global .align 4 m01800_loop_param_11,
	.param .u64 .ptr .global .align 4 m01800_loop_param_12,
	.param .u64 .ptr .global .align 4 m01800_loop_param_13,
	.param .u64 .ptr .global .align 8 m01800_loop_param_14,
	.param .u64 .ptr .global .align 4 m01800_loop_param_15,
	.param .u64 .ptr .global .align 4 m01800_loop_param_16,
	.param .u64 .ptr .global .align 4 m01800_loop_param_17,
	.param .u64 .ptr .global .align 1 m01800_loop_param_18,
	.param .u64 .ptr .global .align 4 m01800_loop_param_19,
	.param .u64 .ptr .global .align 1 m01800_loop_param_20,
	.param .u64 .ptr .global .align 1 m01800_loop_param_21,
	.param .u64 .ptr .global .align 1 m01800_loop_param_22,
	.param .u64 .ptr .global .align 1 m01800_loop_param_23,
	.param .u32 m01800_loop_param_24,
	.param .u32 m01800_loop_param_25,
	.param .u32 m01800_loop_param_26,
	.param .u32 m01800_loop_param_27,
	.param .u32 m01800_loop_param_28,
	.param .u32 m01800_loop_param_29,
	.param .u32 m01800_loop_param_30,
	.param .u32 m01800_loop_param_31,
	.param .u32 m01800_loop_param_32,
	.param .u32 m01800_loop_param_33,
	.param .u64 m01800_loop_param_34
)
{
	.local .align 16 .b8 	__local_depot1[1200];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<41>;
	.reg .b16 	%rs<30>;
	.reg .b32 	%r<1102>;
	.reg .b64 	%rd<1596>;


	mov.u64 	%SPL, __local_depot1;
	ld.param.u64 	%rd171, [m01800_loop_param_0];
	ld.param.u64 	%rd172, [m01800_loop_param_4];
	ld.param.u64 	%rd173, [m01800_loop_param_17];
	ld.param.u32 	%r89, [m01800_loop_param_27];
	ld.param.u32 	%r1099, [m01800_loop_param_28];
	ld.param.u32 	%r91, [m01800_loop_param_29];
	ld.param.u64 	%rd174, [m01800_loop_param_34];
	add.u64 	%rd1, %SPL, 144;
	add.u64 	%rd2, %SPL, 176;
	mov.u32 	%r92, %ctaid.x;
	mov.u32 	%r93, %ntid.x;
	mov.b32	%r94, %envreg3;
	mad.lo.s32 	%r95, %r92, %r93, %r94;
	mov.u32 	%r96, %tid.x;
	add.s32 	%r1, %r95, %r96;
	cvt.s64.s32	%rd177, %r1;
	setp.ge.u64	%p1, %rd177, %rd174;
	@%p1 bra 	BB1_58;

	mul.wide.s32 	%rd178, %r1, 672;
	add.s64 	%rd179, %rd172, %rd178;
	mov.u32 	%r97, 0;
	ld.global.u64 	%rd180, [%rd179+72];
	ld.global.u64 	%rd181, [%rd179+64];
	add.u64 	%rd183, %SPL, 0;
	st.local.v2.u64 	[%rd183], {%rd181, %rd180};
	mul.wide.s32 	%rd184, %r1, 260;
	add.s64 	%rd185, %rd171, %rd184;
	ld.global.u32 	%r2, [%rd185+256];
	and.b32  	%r3, %r2, 63;
	ld.global.u64 	%rd186, [%rd179+88];
	ld.global.u64 	%rd187, [%rd179+80];
	add.u64 	%rd189, %SPL, 128;
	st.local.v2.u64 	[%rd189], {%rd187, %rd186};
	mul.wide.u32 	%rd190, %r89, 560;
	add.s64 	%rd191, %rd173, %rd190;
	ld.global.u32 	%r4, [%rd191+512];
	add.s32 	%r98, %r4, %r3;
	add.s32 	%r99, %r3, 64;
	add.s32 	%r100, %r99, %r4;
	add.s32 	%r101, %r98, 64;
	st.local.v4.u32 	[%rd1], {%r99, %r99, %r100, %r101};
	add.s32 	%r102, %r99, %r3;
	add.s32 	%r103, %r99, %r98;
	add.s32 	%r104, %r100, %r3;
	st.local.v4.u32 	[%rd1+16], {%r102, %r102, %r104, %r103};
	mov.u64 	%rd1539, %rd2;
	mov.u32 	%r1061, %r97;

BB1_2:
	st.local.v2.u32 	[%rd1539], {%r97, %r97};
	add.s64 	%rd1539, %rd1539, 8;
	add.s32 	%r1061, %r1061, 1;
	setp.lt.u32	%p2, %r1061, 128;
	@%p2 bra 	BB1_2;

	and.b32  	%r7, %r2, 60;
	and.b32  	%r11, %r2, 3;
	add.s64 	%rd11, %rd183, 7;
	and.b32  	%r10, %r4, 3;
	add.s64 	%rd10, %rd189, 7;
	mov.u32 	%r1062, 0;

BB1_4:
	and.b32  	%r13, %r1062, 1;
	setp.eq.s32	%p3, %r13, 0;
	setp.eq.s32	%p4, %r3, 0;
	or.pred  	%p5, %p3, %p4;
	shl.b32 	%r107, %r13, 6;
	xor.b32  	%r27, %r107, 64;
	@%p5 bra 	BB1_13;

	setp.eq.s32	%p6, %r11, 0;
	mov.u32 	%r1066, 0;
	mul.wide.u32 	%rd197, %r1062, 128;
	add.s64 	%rd12, %rd2, %rd197;
	@%p6 bra 	BB1_11;

	setp.eq.s32	%p7, %r11, 1;
	mov.u32 	%r1064, 0;
	@%p7 bra 	BB1_10;

	setp.eq.s32	%p8, %r11, 2;
	mov.u32 	%r1063, 0;
	@%p8 bra 	BB1_9;

	ld.local.u8 	%rs1, [%rd11];
	st.local.u8 	[%rd12+7], %rs1;
	mov.u32 	%r1063, 1;

BB1_9:
	xor.b32  	%r113, %r1063, 7;
	cvt.u64.u32	%rd198, %r113;
	add.s64 	%rd199, %rd183, %rd198;
	ld.local.u8 	%rs2, [%rd199];
	add.s64 	%rd200, %rd12, %rd198;
	st.local.u8 	[%rd200], %rs2;
	add.s32 	%r1064, %r1063, 1;

BB1_10:
	xor.b32  	%r114, %r1064, 7;
	cvt.u64.u32	%rd201, %r114;
	add.s64 	%rd202, %rd183, %rd201;
	ld.local.u8 	%rs3, [%rd202];
	add.s64 	%rd203, %rd12, %rd201;
	st.local.u8 	[%rd203], %rs3;
	add.s32 	%r1066, %r1064, 1;

BB1_11:
	setp.lt.u32	%p9, %r7, 4;
	mov.u32 	%r27, %r1066;
	@%p9 bra 	BB1_13;

BB1_12:
	xor.b32  	%r115, %r1066, 7;
	cvt.u64.u32	%rd204, %r115;
	add.s64 	%rd205, %rd183, %rd204;
	ld.local.u8 	%rs4, [%rd205];
	xor.b32  	%r116, %r27, 7;
	cvt.u64.u32	%rd206, %r116;
	add.s64 	%rd207, %rd12, %rd206;
	st.local.u8 	[%rd207], %rs4;
	add.s32 	%r117, %r1066, 1;
	xor.b32  	%r118, %r117, 7;
	cvt.u64.u32	%rd208, %r118;
	add.s64 	%rd209, %rd183, %rd208;
	ld.local.u8 	%rs5, [%rd209];
	add.s32 	%r119, %r27, 1;
	xor.b32  	%r120, %r119, 7;
	cvt.u64.u32	%rd210, %r120;
	add.s64 	%rd211, %rd12, %rd210;
	st.local.u8 	[%rd211], %rs5;
	add.s32 	%r121, %r1066, 2;
	xor.b32  	%r122, %r121, 7;
	cvt.u64.u32	%rd212, %r122;
	add.s64 	%rd213, %rd183, %rd212;
	ld.local.u8 	%rs6, [%rd213];
	add.s32 	%r123, %r27, 2;
	xor.b32  	%r124, %r123, 7;
	cvt.u64.u32	%rd214, %r124;
	add.s64 	%rd215, %rd12, %rd214;
	st.local.u8 	[%rd215], %rs6;
	add.s32 	%r125, %r1066, 3;
	xor.b32  	%r126, %r125, 7;
	cvt.u64.u32	%rd216, %r126;
	add.s64 	%rd217, %rd183, %rd216;
	ld.local.u8 	%rs7, [%rd217];
	add.s32 	%r127, %r27, 3;
	xor.b32  	%r128, %r127, 7;
	cvt.u64.u32	%rd218, %r128;
	add.s64 	%rd219, %rd12, %rd218;
	st.local.u8 	[%rd219], %rs7;
	add.s32 	%r27, %r27, 4;
	add.s32 	%r1066, %r1066, 4;
	setp.lt.u32	%p10, %r1066, %r3;
	@%p10 bra 	BB1_12;

BB1_13:
	and.b32  	%r129, %r1062, 2;
	setp.eq.s32	%p11, %r129, 0;
	setp.eq.s32	%p12, %r4, 0;
	or.pred  	%p13, %p11, %p12;
	@%p13 bra 	BB1_14;
	bra.uni 	BB1_15;

BB1_14:
	mov.u32 	%r44, %r27;
	bra.uni 	BB1_24;

BB1_15:
	mul.wide.u32 	%rd220, %r1062, 128;
	add.s64 	%rd13, %rd2, %rd220;
	mov.u32 	%r1069, 0;
	setp.eq.s32	%p14, %r10, 0;
	@%p14 bra 	BB1_16;

	setp.eq.s32	%p15, %r10, 1;
	@%p15 bra 	BB1_21;

	setp.eq.s32	%p16, %r10, 2;
	@%p16 bra 	BB1_20;

	ld.local.u8 	%rs8, [%rd10];
	xor.b32  	%r135, %r27, 7;
	cvt.u64.u32	%rd221, %r135;
	add.s64 	%rd222, %rd13, %rd221;
	st.local.u8 	[%rd222], %rs8;
	add.s32 	%r27, %r27, 1;
	mov.u32 	%r1069, 1;

BB1_20:
	xor.b32  	%r136, %r1069, 7;
	cvt.u64.u32	%rd223, %r136;
	add.s64 	%rd224, %rd189, %rd223;
	ld.local.u8 	%rs9, [%rd224];
	xor.b32  	%r137, %r27, 7;
	cvt.u64.u32	%rd225, %r137;
	add.s64 	%rd226, %rd13, %rd225;
	st.local.u8 	[%rd226], %rs9;
	add.s32 	%r27, %r27, 1;
	add.s32 	%r1069, %r1069, 1;

BB1_21:
	xor.b32  	%r138, %r1069, 7;
	cvt.u64.u32	%rd227, %r138;
	add.s64 	%rd228, %rd189, %rd227;
	ld.local.u8 	%rs10, [%rd228];
	xor.b32  	%r139, %r27, 7;
	cvt.u64.u32	%rd229, %r139;
	add.s64 	%rd230, %rd13, %rd229;
	st.local.u8 	[%rd230], %rs10;
	add.s32 	%r27, %r27, 1;
	add.s32 	%r1069, %r1069, 1;
	mov.u32 	%r44, %r27;
	bra.uni 	BB1_22;

BB1_16:
	mov.u32 	%r44, %r1069;

BB1_22:
	setp.lt.u32	%p17, %r4, 4;
	@%p17 bra 	BB1_24;

BB1_23:
	xor.b32  	%r140, %r1069, 7;
	cvt.u64.u32	%rd231, %r140;
	add.s64 	%rd232, %rd189, %rd231;
	ld.local.u8 	%rs11, [%rd232];
	xor.b32  	%r141, %r27, 7;
	cvt.u64.u32	%rd233, %r141;
	add.s64 	%rd234, %rd13, %rd233;
	st.local.u8 	[%rd234], %rs11;
	add.s32 	%r142, %r1069, 1;
	xor.b32  	%r143, %r142, 7;
	cvt.u64.u32	%rd235, %r143;
	add.s64 	%rd236, %rd189, %rd235;
	ld.local.u8 	%rs12, [%rd236];
	add.s32 	%r144, %r27, 1;
	xor.b32  	%r145, %r144, 7;
	cvt.u64.u32	%rd237, %r145;
	add.s64 	%rd238, %rd13, %rd237;
	st.local.u8 	[%rd238], %rs12;
	add.s32 	%r146, %r1069, 2;
	xor.b32  	%r147, %r146, 7;
	cvt.u64.u32	%rd239, %r147;
	add.s64 	%rd240, %rd189, %rd239;
	ld.local.u8 	%rs13, [%rd240];
	add.s32 	%r148, %r27, 2;
	xor.b32  	%r149, %r148, 7;
	cvt.u64.u32	%rd241, %r149;
	add.s64 	%rd242, %rd13, %rd241;
	st.local.u8 	[%rd242], %rs13;
	add.s32 	%r150, %r1069, 3;
	xor.b32  	%r151, %r150, 7;
	cvt.u64.u32	%rd243, %r151;
	add.s64 	%rd244, %rd189, %rd243;
	ld.local.u8 	%rs14, [%rd244];
	add.s32 	%r152, %r27, 3;
	xor.b32  	%r153, %r152, 7;
	cvt.u64.u32	%rd245, %r153;
	add.s64 	%rd246, %rd13, %rd245;
	st.local.u8 	[%rd246], %rs14;
	add.s32 	%r27, %r27, 4;
	add.s32 	%r1069, %r1069, 4;
	setp.lt.u32	%p18, %r1069, %r4;
	mov.u32 	%r44, %r27;
	@%p18 bra 	BB1_23;

BB1_24:
	and.b32  	%r154, %r1062, 4;
	setp.eq.s32	%p19, %r154, 0;
	or.pred  	%p21, %p19, %p4;
	@%p21 bra 	BB1_25;
	bra.uni 	BB1_26;

BB1_25:
	mov.u32 	%r62, %r44;
	bra.uni 	BB1_35;

BB1_26:
	setp.eq.s32	%p22, %r11, 0;
	mov.u32 	%r1086, 0;
	mul.wide.u32 	%rd247, %r1062, 128;
	add.s64 	%rd14, %rd2, %rd247;
	@%p22 bra 	BB1_27;
	bra.uni 	BB1_28;

BB1_27:
	mov.u32 	%r62, %r1086;
	bra.uni 	BB1_33;

BB1_28:
	setp.eq.s32	%p23, %r11, 1;
	mov.u32 	%r1081, 0;
	@%p23 bra 	BB1_32;

	setp.eq.s32	%p24, %r11, 2;
	mov.u32 	%r1079, 0;
	@%p24 bra 	BB1_31;

	ld.local.u8 	%rs15, [%rd11];
	xor.b32  	%r160, %r44, 7;
	cvt.u64.u32	%rd248, %r160;
	add.s64 	%rd249, %rd14, %rd248;
	st.local.u8 	[%rd249], %rs15;
	add.s32 	%r44, %r44, 1;
	mov.u32 	%r1079, 1;

BB1_31:
	xor.b32  	%r161, %r1079, 7;
	cvt.u64.u32	%rd250, %r161;
	add.s64 	%rd251, %rd183, %rd250;
	ld.local.u8 	%rs16, [%rd251];
	xor.b32  	%r162, %r44, 7;
	cvt.u64.u32	%rd252, %r162;
	add.s64 	%rd253, %rd14, %rd252;
	st.local.u8 	[%rd253], %rs16;
	add.s32 	%r44, %r44, 1;
	add.s32 	%r1081, %r1079, 1;

BB1_32:
	xor.b32  	%r163, %r1081, 7;
	cvt.u64.u32	%rd254, %r163;
	add.s64 	%rd255, %rd183, %rd254;
	ld.local.u8 	%rs17, [%rd255];
	xor.b32  	%r164, %r44, 7;
	cvt.u64.u32	%rd256, %r164;
	add.s64 	%rd257, %rd14, %rd256;
	st.local.u8 	[%rd257], %rs17;
	add.s32 	%r44, %r44, 1;
	add.s32 	%r1086, %r1081, 1;
	mov.u32 	%r62, %r44;

BB1_33:
	setp.lt.u32	%p25, %r7, 4;
	@%p25 bra 	BB1_35;

BB1_34:
	xor.b32  	%r165, %r1086, 7;
	cvt.u64.u32	%rd258, %r165;
	add.s64 	%rd259, %rd183, %rd258;
	ld.local.u8 	%rs18, [%rd259];
	xor.b32  	%r166, %r44, 7;
	cvt.u64.u32	%rd260, %r166;
	add.s64 	%rd261, %rd14, %rd260;
	st.local.u8 	[%rd261], %rs18;
	add.s32 	%r167, %r1086, 1;
	xor.b32  	%r168, %r167, 7;
	cvt.u64.u32	%rd262, %r168;
	add.s64 	%rd263, %rd183, %rd262;
	ld.local.u8 	%rs19, [%rd263];
	add.s32 	%r169, %r44, 1;
	xor.b32  	%r170, %r169, 7;
	cvt.u64.u32	%rd264, %r170;
	add.s64 	%rd265, %rd14, %rd264;
	st.local.u8 	[%rd265], %rs19;
	add.s32 	%r171, %r1086, 2;
	xor.b32  	%r172, %r171, 7;
	cvt.u64.u32	%rd266, %r172;
	add.s64 	%rd267, %rd183, %rd266;
	ld.local.u8 	%rs20, [%rd267];
	add.s32 	%r173, %r44, 2;
	xor.b32  	%r174, %r173, 7;
	cvt.u64.u32	%rd268, %r174;
	add.s64 	%rd269, %rd14, %rd268;
	st.local.u8 	[%rd269], %rs20;
	add.s32 	%r175, %r1086, 3;
	xor.b32  	%r176, %r175, 7;
	cvt.u64.u32	%rd270, %r176;
	add.s64 	%rd271, %rd183, %rd270;
	ld.local.u8 	%rs21, [%rd271];
	add.s32 	%r177, %r44, 3;
	xor.b32  	%r178, %r177, 7;
	cvt.u64.u32	%rd272, %r178;
	add.s64 	%rd273, %rd14, %rd272;
	st.local.u8 	[%rd273], %rs21;
	add.s32 	%r44, %r44, 4;
	add.s32 	%r1086, %r1086, 4;
	setp.lt.u32	%p26, %r1086, %r3;
	mov.u32 	%r62, %r44;
	@%p26 bra 	BB1_34;

BB1_35:
	@%p3 bra 	BB1_37;
	bra.uni 	BB1_36;

BB1_37:
	@%p4 bra 	BB1_38;
	bra.uni 	BB1_39;

BB1_38:
	mov.u32 	%r1098, %r62;
	bra.uni 	BB1_48;

BB1_36:
	add.s32 	%r1098, %r62, 64;
	bra.uni 	BB1_48;

BB1_39:
	setp.eq.s32	%p29, %r11, 0;
	mov.u32 	%r1096, 0;
	mul.wide.u32 	%rd274, %r1062, 128;
	add.s64 	%rd15, %rd2, %rd274;
	@%p29 bra 	BB1_40;
	bra.uni 	BB1_41;

BB1_40:
	mov.u32 	%r1098, %r1096;
	bra.uni 	BB1_46;

BB1_41:
	setp.eq.s32	%p30, %r11, 1;
	mov.u32 	%r1091, 0;
	@%p30 bra 	BB1_45;

	setp.eq.s32	%p31, %r11, 2;
	mov.u32 	%r1089, 0;
	@%p31 bra 	BB1_44;

	ld.local.u8 	%rs22, [%rd11];
	xor.b32  	%r184, %r62, 7;
	cvt.u64.u32	%rd275, %r184;
	add.s64 	%rd276, %rd15, %rd275;
	st.local.u8 	[%rd276], %rs22;
	add.s32 	%r62, %r62, 1;
	mov.u32 	%r1089, 1;

BB1_44:
	xor.b32  	%r185, %r1089, 7;
	cvt.u64.u32	%rd277, %r185;
	add.s64 	%rd278, %rd183, %rd277;
	ld.local.u8 	%rs23, [%rd278];
	xor.b32  	%r186, %r62, 7;
	cvt.u64.u32	%rd279, %r186;
	add.s64 	%rd280, %rd15, %rd279;
	st.local.u8 	[%rd280], %rs23;
	add.s32 	%r62, %r62, 1;
	add.s32 	%r1091, %r1089, 1;

BB1_45:
	xor.b32  	%r187, %r1091, 7;
	cvt.u64.u32	%rd281, %r187;
	add.s64 	%rd282, %rd183, %rd281;
	ld.local.u8 	%rs24, [%rd282];
	xor.b32  	%r188, %r62, 7;
	cvt.u64.u32	%rd283, %r188;
	add.s64 	%rd284, %rd15, %rd283;
	st.local.u8 	[%rd284], %rs24;
	add.s32 	%r62, %r62, 1;
	add.s32 	%r1096, %r1091, 1;
	mov.u32 	%r1098, %r62;

BB1_46:
	setp.lt.u32	%p32, %r7, 4;
	@%p32 bra 	BB1_48;

BB1_47:
	xor.b32  	%r189, %r1096, 7;
	cvt.u64.u32	%rd285, %r189;
	add.s64 	%rd286, %rd183, %rd285;
	ld.local.u8 	%rs25, [%rd286];
	xor.b32  	%r190, %r62, 7;
	cvt.u64.u32	%rd287, %r190;
	add.s64 	%rd288, %rd15, %rd287;
	st.local.u8 	[%rd288], %rs25;
	add.s32 	%r191, %r1096, 1;
	xor.b32  	%r192, %r191, 7;
	cvt.u64.u32	%rd289, %r192;
	add.s64 	%rd290, %rd183, %rd289;
	ld.local.u8 	%rs26, [%rd290];
	add.s32 	%r193, %r62, 1;
	xor.b32  	%r194, %r193, 7;
	cvt.u64.u32	%rd291, %r194;
	add.s64 	%rd292, %rd15, %rd291;
	st.local.u8 	[%rd292], %rs26;
	add.s32 	%r195, %r1096, 2;
	xor.b32  	%r196, %r195, 7;
	cvt.u64.u32	%rd293, %r196;
	add.s64 	%rd294, %rd183, %rd293;
	ld.local.u8 	%rs27, [%rd294];
	add.s32 	%r197, %r62, 2;
	xor.b32  	%r198, %r197, 7;
	cvt.u64.u32	%rd295, %r198;
	add.s64 	%rd296, %rd15, %rd295;
	st.local.u8 	[%rd296], %rs27;
	add.s32 	%r199, %r1096, 3;
	xor.b32  	%r200, %r199, 7;
	cvt.u64.u32	%rd297, %r200;
	add.s64 	%rd298, %rd183, %rd297;
	ld.local.u8 	%rs28, [%rd298];
	add.s32 	%r201, %r62, 3;
	xor.b32  	%r202, %r201, 7;
	cvt.u64.u32	%rd299, %r202;
	add.s64 	%rd300, %rd15, %rd299;
	st.local.u8 	[%rd300], %rs28;
	add.s32 	%r62, %r62, 4;
	add.s32 	%r1096, %r1096, 4;
	setp.lt.u32	%p33, %r1096, %r3;
	mov.u32 	%r1098, %r62;
	@%p33 bra 	BB1_47;

BB1_48:
	xor.b32  	%r203, %r1098, 7;
	cvt.u64.u32	%rd301, %r203;
	mul.wide.u32 	%rd302, %r1062, 128;
	add.s64 	%rd303, %rd2, %rd302;
	add.s64 	%rd304, %rd303, %rd301;
	mov.u16 	%rs29, 128;
	st.local.u8 	[%rd304], %rs29;
	shl.b32 	%r204, %r1098, 3;
	cvt.u64.u32	%rd305, %r204;
	st.local.u64 	[%rd303+120], %rd305;
	add.s32 	%r1062, %r1062, 1;
	setp.lt.u32	%p34, %r1062, 8;
	@%p34 bra 	BB1_4;

	ld.global.u64 	%rd1547, [%rd179];
	ld.global.u64 	%rd1546, [%rd179+8];
	ld.global.u64 	%rd1545, [%rd179+16];
	ld.global.u64 	%rd1544, [%rd179+24];
	ld.global.u64 	%rd1543, [%rd179+32];
	ld.global.u64 	%rd1542, [%rd179+40];
	ld.global.u64 	%rd1541, [%rd179+48];
	ld.global.u64 	%rd1540, [%rd179+56];
	setp.eq.s32	%p35, %r91, 0;
	@%p35 bra 	BB1_57;

	ld.const.u64 	%rd24, [k_sha512];
	ld.const.u64 	%rd25, [k_sha512+8];
	ld.const.u64 	%rd26, [k_sha512+16];
	ld.const.u64 	%rd27, [k_sha512+24];
	ld.const.u64 	%rd28, [k_sha512+32];
	ld.const.u64 	%rd29, [k_sha512+40];
	ld.const.u64 	%rd30, [k_sha512+48];
	ld.const.u64 	%rd31, [k_sha512+56];
	ld.const.u64 	%rd32, [k_sha512+64];
	ld.const.u64 	%rd33, [k_sha512+72];
	ld.const.u64 	%rd34, [k_sha512+80];
	ld.const.u64 	%rd35, [k_sha512+88];
	ld.const.u64 	%rd36, [k_sha512+96];
	ld.const.u64 	%rd37, [k_sha512+104];
	ld.const.u64 	%rd38, [k_sha512+112];
	ld.const.u64 	%rd39, [k_sha512+120];
	mov.u64 	%rd308, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r206,%dummy}, %rd308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r207}, %rd308;
	}
	shf.r.wrap.b32 	%r208, %r207, %r206, 18;
	shf.r.wrap.b32 	%r209, %r206, %r207, 18;
	mov.b64 	%rd309, {%r209, %r208};
	shf.r.wrap.b32 	%r210, %r207, %r206, 14;
	shf.r.wrap.b32 	%r211, %r206, %r207, 14;
	mov.b64 	%rd310, {%r211, %r210};
	xor.b64  	%rd311, %rd309, %rd310;
	shf.l.wrap.b32 	%r212, %r206, %r207, 23;
	shf.l.wrap.b32 	%r213, %r207, %r206, 23;
	mov.b64 	%rd312, {%r213, %r212};
	xor.b64  	%rd40, %rd311, %rd312;
	mov.u64 	%rd313, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r214}, %rd313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r215,%dummy}, %rd313;
	}
	shf.l.wrap.b32 	%r216, %r215, %r214, 30;
	shf.l.wrap.b32 	%r217, %r214, %r215, 30;
	mov.b64 	%rd314, {%r217, %r216};
	shf.r.wrap.b32 	%r218, %r214, %r215, 28;
	shf.r.wrap.b32 	%r219, %r215, %r214, 28;
	mov.b64 	%rd315, {%r219, %r218};
	xor.b64  	%rd316, %rd314, %rd315;
	shf.l.wrap.b32 	%r220, %r215, %r214, 25;
	shf.l.wrap.b32 	%r221, %r214, %r215, 25;
	mov.b64 	%rd317, {%r221, %r220};
	xor.b64  	%rd41, %rd316, %rd317;
	mov.u32 	%r1100, 0;

BB1_51:
	add.u64 	%rd1535, %SPL, 176;
	and.b32  	%r222, %r1099, 1;
	setp.eq.b32	%p36, %r222, 1;
	cvt.u64.u32	%rd318, %r222;
	mul.wide.u32 	%rd319, %r1099, -1431655765;
	shr.u64 	%rd320, %rd319, 33;
	cvt.u32.u64	%r223, %rd320;
	mul.lo.s32 	%r224, %r223, 3;
	sub.s32 	%r225, %r1099, %r224;
	setp.ne.s32	%p37, %r225, 0;
	selp.b64	%rd321, 2, 0, %p37;
	mul.wide.u32 	%rd322, %r1099, 613566757;
	shr.u64 	%rd323, %rd322, 32;
	cvt.u32.u64	%r226, %rd323;
	sub.s32 	%r227, %r1099, %r226;
	shr.u32 	%r228, %r227, 1;
	add.s32 	%r229, %r228, %r226;
	shr.u32 	%r230, %r229, 2;
	mul.lo.s32 	%r231, %r230, 7;
	sub.s32 	%r232, %r1099, %r231;
	setp.ne.s32	%p38, %r232, 0;
	selp.b64	%rd324, 4, 0, %p38;
	or.b64  	%rd325, %rd321, %rd318;
	or.b64  	%rd50, %rd325, %rd324;
	shl.b64 	%rd326, %rd50, 7;
	add.s64 	%rd327, %rd1535, %rd326;
	ld.local.v2.u64 	{%rd328, %rd329}, [%rd327];
	st.local.v2.u64 	[%rd183], {%rd328, %rd329};
	ld.local.v2.u64 	{%rd334, %rd335}, [%rd327+16];
	st.local.v2.u64 	[%rd183+16], {%rd334, %rd335};
	ld.local.v2.u64 	{%rd338, %rd339}, [%rd327+32];
	st.local.v2.u64 	[%rd183+32], {%rd338, %rd339};
	ld.local.v2.u64 	{%rd342, %rd343}, [%rd327+48];
	st.local.v2.u64 	[%rd183+48], {%rd342, %rd343};
	ld.local.v2.u64 	{%rd1571, %rd1570}, [%rd327+64];
	st.local.v2.u64 	[%rd183+64], {%rd1571, %rd1570};
	ld.local.v2.u64 	{%rd1569, %rd1568}, [%rd327+80];
	st.local.v2.u64 	[%rd183+80], {%rd1569, %rd1568};
	ld.local.v2.u64 	{%rd1567, %rd1566}, [%rd327+96];
	st.local.v2.u64 	[%rd183+96], {%rd1567, %rd1566};
	ld.local.v2.u64 	{%rd1565, %rd1564}, [%rd327+112];
	st.local.v2.u64 	[%rd183+112], {%rd1565, %rd1564};
	@%p36 bra 	BB1_53;
	bra.uni 	BB1_52;

BB1_53:
	add.u64 	%rd1537, %SPL, 144;
	shl.b64 	%rd356, %rd50, 2;
	add.s64 	%rd357, %rd1537, %rd356;
	ld.local.u32 	%r233, [%rd357];
	add.s32 	%r234, %r233, -64;
	shr.u64 	%rd358, %rd1547, 56;
	xor.b32  	%r235, %r234, 7;
	cvt.u64.u32	%rd359, %r235;
	add.s64 	%rd362, %rd183, %rd359;
	st.local.u8 	[%rd362], %rd358;
	add.s32 	%r236, %r233, -63;
	shr.u64 	%rd363, %rd1547, 48;
	xor.b32  	%r237, %r236, 7;
	cvt.u64.u32	%rd364, %r237;
	add.s64 	%rd365, %rd183, %rd364;
	st.local.u8 	[%rd365], %rd363;
	add.s32 	%r238, %r233, -62;
	shr.u64 	%rd366, %rd1547, 40;
	xor.b32  	%r239, %r238, 7;
	cvt.u64.u32	%rd367, %r239;
	add.s64 	%rd368, %rd183, %rd367;
	st.local.u8 	[%rd368], %rd366;
	add.s32 	%r240, %r233, -61;
	shr.u64 	%rd369, %rd1547, 32;
	xor.b32  	%r241, %r240, 7;
	cvt.u64.u32	%rd370, %r241;
	add.s64 	%rd371, %rd183, %rd370;
	st.local.u8 	[%rd371], %rd369;
	add.s32 	%r242, %r233, -60;
	shr.u64 	%rd372, %rd1547, 24;
	xor.b32  	%r243, %r242, 7;
	cvt.u64.u32	%rd373, %r243;
	add.s64 	%rd374, %rd183, %rd373;
	st.local.u8 	[%rd374], %rd372;
	add.s32 	%r244, %r233, -59;
	shr.u64 	%rd375, %rd1547, 16;
	xor.b32  	%r245, %r244, 7;
	cvt.u64.u32	%rd376, %r245;
	add.s64 	%rd377, %rd183, %rd376;
	st.local.u8 	[%rd377], %rd375;
	add.s32 	%r246, %r233, -58;
	shr.u64 	%rd378, %rd1547, 8;
	xor.b32  	%r247, %r246, 7;
	cvt.u64.u32	%rd379, %r247;
	add.s64 	%rd380, %rd183, %rd379;
	st.local.u8 	[%rd380], %rd378;
	add.s32 	%r248, %r233, -57;
	xor.b32  	%r249, %r248, 7;
	cvt.u64.u32	%rd381, %r249;
	add.s64 	%rd382, %rd183, %rd381;
	st.local.u8 	[%rd382], %rd1547;
	add.s32 	%r250, %r233, -56;
	shr.u64 	%rd383, %rd1546, 56;
	xor.b32  	%r251, %r250, 7;
	cvt.u64.u32	%rd384, %r251;
	add.s64 	%rd385, %rd183, %rd384;
	st.local.u8 	[%rd385], %rd383;
	add.s32 	%r252, %r233, -55;
	shr.u64 	%rd386, %rd1546, 48;
	xor.b32  	%r253, %r252, 7;
	cvt.u64.u32	%rd387, %r253;
	add.s64 	%rd388, %rd183, %rd387;
	st.local.u8 	[%rd388], %rd386;
	add.s32 	%r254, %r233, -54;
	shr.u64 	%rd389, %rd1546, 40;
	xor.b32  	%r255, %r254, 7;
	cvt.u64.u32	%rd390, %r255;
	add.s64 	%rd391, %rd183, %rd390;
	st.local.u8 	[%rd391], %rd389;
	add.s32 	%r256, %r233, -53;
	shr.u64 	%rd392, %rd1546, 32;
	xor.b32  	%r257, %r256, 7;
	cvt.u64.u32	%rd393, %r257;
	add.s64 	%rd394, %rd183, %rd393;
	st.local.u8 	[%rd394], %rd392;
	add.s32 	%r258, %r233, -52;
	shr.u64 	%rd395, %rd1546, 24;
	xor.b32  	%r259, %r258, 7;
	cvt.u64.u32	%rd396, %r259;
	add.s64 	%rd397, %rd183, %rd396;
	st.local.u8 	[%rd397], %rd395;
	add.s32 	%r260, %r233, -51;
	shr.u64 	%rd398, %rd1546, 16;
	xor.b32  	%r261, %r260, 7;
	cvt.u64.u32	%rd399, %r261;
	add.s64 	%rd400, %rd183, %rd399;
	st.local.u8 	[%rd400], %rd398;
	add.s32 	%r262, %r233, -50;
	shr.u64 	%rd401, %rd1546, 8;
	xor.b32  	%r263, %r262, 7;
	cvt.u64.u32	%rd402, %r263;
	add.s64 	%rd403, %rd183, %rd402;
	st.local.u8 	[%rd403], %rd401;
	add.s32 	%r264, %r233, -49;
	xor.b32  	%r265, %r264, 7;
	cvt.u64.u32	%rd404, %r265;
	add.s64 	%rd405, %rd183, %rd404;
	st.local.u8 	[%rd405], %rd1546;
	add.s32 	%r266, %r233, -48;
	shr.u64 	%rd406, %rd1545, 56;
	xor.b32  	%r267, %r266, 7;
	cvt.u64.u32	%rd407, %r267;
	add.s64 	%rd408, %rd183, %rd407;
	st.local.u8 	[%rd408], %rd406;
	add.s32 	%r268, %r233, -47;
	shr.u64 	%rd409, %rd1545, 48;
	xor.b32  	%r269, %r268, 7;
	cvt.u64.u32	%rd410, %r269;
	add.s64 	%rd411, %rd183, %rd410;
	st.local.u8 	[%rd411], %rd409;
	add.s32 	%r270, %r233, -46;
	shr.u64 	%rd412, %rd1545, 40;
	xor.b32  	%r271, %r270, 7;
	cvt.u64.u32	%rd413, %r271;
	add.s64 	%rd414, %rd183, %rd413;
	st.local.u8 	[%rd414], %rd412;
	add.s32 	%r272, %r233, -45;
	shr.u64 	%rd415, %rd1545, 32;
	xor.b32  	%r273, %r272, 7;
	cvt.u64.u32	%rd416, %r273;
	add.s64 	%rd417, %rd183, %rd416;
	st.local.u8 	[%rd417], %rd415;
	add.s32 	%r274, %r233, -44;
	shr.u64 	%rd418, %rd1545, 24;
	xor.b32  	%r275, %r274, 7;
	cvt.u64.u32	%rd419, %r275;
	add.s64 	%rd420, %rd183, %rd419;
	st.local.u8 	[%rd420], %rd418;
	add.s32 	%r276, %r233, -43;
	shr.u64 	%rd421, %rd1545, 16;
	xor.b32  	%r277, %r276, 7;
	cvt.u64.u32	%rd422, %r277;
	add.s64 	%rd423, %rd183, %rd422;
	st.local.u8 	[%rd423], %rd421;
	add.s32 	%r278, %r233, -42;
	shr.u64 	%rd424, %rd1545, 8;
	xor.b32  	%r279, %r278, 7;
	cvt.u64.u32	%rd425, %r279;
	add.s64 	%rd426, %rd183, %rd425;
	st.local.u8 	[%rd426], %rd424;
	add.s32 	%r280, %r233, -41;
	xor.b32  	%r281, %r280, 7;
	cvt.u64.u32	%rd427, %r281;
	add.s64 	%rd428, %rd183, %rd427;
	st.local.u8 	[%rd428], %rd1545;
	add.s32 	%r282, %r233, -40;
	shr.u64 	%rd429, %rd1544, 56;
	xor.b32  	%r283, %r282, 7;
	cvt.u64.u32	%rd430, %r283;
	add.s64 	%rd431, %rd183, %rd430;
	st.local.u8 	[%rd431], %rd429;
	add.s32 	%r284, %r233, -39;
	shr.u64 	%rd432, %rd1544, 48;
	xor.b32  	%r285, %r284, 7;
	cvt.u64.u32	%rd433, %r285;
	add.s64 	%rd434, %rd183, %rd433;
	st.local.u8 	[%rd434], %rd432;
	add.s32 	%r286, %r233, -38;
	shr.u64 	%rd435, %rd1544, 40;
	xor.b32  	%r287, %r286, 7;
	cvt.u64.u32	%rd436, %r287;
	add.s64 	%rd437, %rd183, %rd436;
	st.local.u8 	[%rd437], %rd435;
	add.s32 	%r288, %r233, -37;
	shr.u64 	%rd438, %rd1544, 32;
	xor.b32  	%r289, %r288, 7;
	cvt.u64.u32	%rd439, %r289;
	add.s64 	%rd440, %rd183, %rd439;
	st.local.u8 	[%rd440], %rd438;
	add.s32 	%r290, %r233, -36;
	shr.u64 	%rd441, %rd1544, 24;
	xor.b32  	%r291, %r290, 7;
	cvt.u64.u32	%rd442, %r291;
	add.s64 	%rd443, %rd183, %rd442;
	st.local.u8 	[%rd443], %rd441;
	add.s32 	%r292, %r233, -35;
	shr.u64 	%rd444, %rd1544, 16;
	xor.b32  	%r293, %r292, 7;
	cvt.u64.u32	%rd445, %r293;
	add.s64 	%rd446, %rd183, %rd445;
	st.local.u8 	[%rd446], %rd444;
	add.s32 	%r294, %r233, -34;
	shr.u64 	%rd447, %rd1544, 8;
	xor.b32  	%r295, %r294, 7;
	cvt.u64.u32	%rd448, %r295;
	add.s64 	%rd449, %rd183, %rd448;
	st.local.u8 	[%rd449], %rd447;
	add.s32 	%r296, %r233, -33;
	xor.b32  	%r297, %r296, 7;
	cvt.u64.u32	%rd450, %r297;
	add.s64 	%rd451, %rd183, %rd450;
	st.local.u8 	[%rd451], %rd1544;
	add.s32 	%r298, %r233, -32;
	shr.u64 	%rd452, %rd1543, 56;
	xor.b32  	%r299, %r298, 7;
	cvt.u64.u32	%rd453, %r299;
	add.s64 	%rd454, %rd183, %rd453;
	st.local.u8 	[%rd454], %rd452;
	add.s32 	%r300, %r233, -31;
	shr.u64 	%rd455, %rd1543, 48;
	xor.b32  	%r301, %r300, 7;
	cvt.u64.u32	%rd456, %r301;
	add.s64 	%rd457, %rd183, %rd456;
	st.local.u8 	[%rd457], %rd455;
	add.s32 	%r302, %r233, -30;
	shr.u64 	%rd458, %rd1543, 40;
	xor.b32  	%r303, %r302, 7;
	cvt.u64.u32	%rd459, %r303;
	add.s64 	%rd460, %rd183, %rd459;
	st.local.u8 	[%rd460], %rd458;
	add.s32 	%r304, %r233, -29;
	shr.u64 	%rd461, %rd1543, 32;
	xor.b32  	%r305, %r304, 7;
	cvt.u64.u32	%rd462, %r305;
	add.s64 	%rd463, %rd183, %rd462;
	st.local.u8 	[%rd463], %rd461;
	add.s32 	%r306, %r233, -28;
	shr.u64 	%rd464, %rd1543, 24;
	xor.b32  	%r307, %r306, 7;
	cvt.u64.u32	%rd465, %r307;
	add.s64 	%rd466, %rd183, %rd465;
	st.local.u8 	[%rd466], %rd464;
	add.s32 	%r308, %r233, -27;
	shr.u64 	%rd467, %rd1543, 16;
	xor.b32  	%r309, %r308, 7;
	cvt.u64.u32	%rd468, %r309;
	add.s64 	%rd469, %rd183, %rd468;
	st.local.u8 	[%rd469], %rd467;
	add.s32 	%r310, %r233, -26;
	shr.u64 	%rd470, %rd1543, 8;
	xor.b32  	%r311, %r310, 7;
	cvt.u64.u32	%rd471, %r311;
	add.s64 	%rd472, %rd183, %rd471;
	st.local.u8 	[%rd472], %rd470;
	add.s32 	%r312, %r233, -25;
	xor.b32  	%r313, %r312, 7;
	cvt.u64.u32	%rd473, %r313;
	add.s64 	%rd474, %rd183, %rd473;
	st.local.u8 	[%rd474], %rd1543;
	add.s32 	%r314, %r233, -24;
	shr.u64 	%rd475, %rd1542, 56;
	xor.b32  	%r315, %r314, 7;
	cvt.u64.u32	%rd476, %r315;
	add.s64 	%rd477, %rd183, %rd476;
	st.local.u8 	[%rd477], %rd475;
	add.s32 	%r316, %r233, -23;
	shr.u64 	%rd478, %rd1542, 48;
	xor.b32  	%r317, %r316, 7;
	cvt.u64.u32	%rd479, %r317;
	add.s64 	%rd480, %rd183, %rd479;
	st.local.u8 	[%rd480], %rd478;
	add.s32 	%r318, %r233, -22;
	shr.u64 	%rd481, %rd1542, 40;
	xor.b32  	%r319, %r318, 7;
	cvt.u64.u32	%rd482, %r319;
	add.s64 	%rd483, %rd183, %rd482;
	st.local.u8 	[%rd483], %rd481;
	add.s32 	%r320, %r233, -21;
	shr.u64 	%rd484, %rd1542, 32;
	xor.b32  	%r321, %r320, 7;
	cvt.u64.u32	%rd485, %r321;
	add.s64 	%rd486, %rd183, %rd485;
	st.local.u8 	[%rd486], %rd484;
	add.s32 	%r322, %r233, -20;
	shr.u64 	%rd487, %rd1542, 24;
	xor.b32  	%r323, %r322, 7;
	cvt.u64.u32	%rd488, %r323;
	add.s64 	%rd489, %rd183, %rd488;
	st.local.u8 	[%rd489], %rd487;
	add.s32 	%r324, %r233, -19;
	shr.u64 	%rd490, %rd1542, 16;
	xor.b32  	%r325, %r324, 7;
	cvt.u64.u32	%rd491, %r325;
	add.s64 	%rd492, %rd183, %rd491;
	st.local.u8 	[%rd492], %rd490;
	add.s32 	%r326, %r233, -18;
	shr.u64 	%rd493, %rd1542, 8;
	xor.b32  	%r327, %r326, 7;
	cvt.u64.u32	%rd494, %r327;
	add.s64 	%rd495, %rd183, %rd494;
	st.local.u8 	[%rd495], %rd493;
	add.s32 	%r328, %r233, -17;
	xor.b32  	%r329, %r328, 7;
	cvt.u64.u32	%rd496, %r329;
	add.s64 	%rd497, %rd183, %rd496;
	st.local.u8 	[%rd497], %rd1542;
	add.s32 	%r330, %r233, -16;
	shr.u64 	%rd498, %rd1541, 56;
	xor.b32  	%r331, %r330, 7;
	cvt.u64.u32	%rd499, %r331;
	add.s64 	%rd500, %rd183, %rd499;
	st.local.u8 	[%rd500], %rd498;
	add.s32 	%r332, %r233, -15;
	shr.u64 	%rd501, %rd1541, 48;
	xor.b32  	%r333, %r332, 7;
	cvt.u64.u32	%rd502, %r333;
	add.s64 	%rd503, %rd183, %rd502;
	st.local.u8 	[%rd503], %rd501;
	add.s32 	%r334, %r233, -14;
	shr.u64 	%rd504, %rd1541, 40;
	xor.b32  	%r335, %r334, 7;
	cvt.u64.u32	%rd505, %r335;
	add.s64 	%rd506, %rd183, %rd505;
	st.local.u8 	[%rd506], %rd504;
	add.s32 	%r336, %r233, -13;
	shr.u64 	%rd507, %rd1541, 32;
	xor.b32  	%r337, %r336, 7;
	cvt.u64.u32	%rd508, %r337;
	add.s64 	%rd509, %rd183, %rd508;
	st.local.u8 	[%rd509], %rd507;
	add.s32 	%r338, %r233, -12;
	shr.u64 	%rd510, %rd1541, 24;
	xor.b32  	%r339, %r338, 7;
	cvt.u64.u32	%rd511, %r339;
	add.s64 	%rd512, %rd183, %rd511;
	st.local.u8 	[%rd512], %rd510;
	add.s32 	%r340, %r233, -11;
	shr.u64 	%rd513, %rd1541, 16;
	xor.b32  	%r341, %r340, 7;
	cvt.u64.u32	%rd514, %r341;
	add.s64 	%rd515, %rd183, %rd514;
	st.local.u8 	[%rd515], %rd513;
	add.s32 	%r342, %r233, -10;
	shr.u64 	%rd516, %rd1541, 8;
	xor.b32  	%r343, %r342, 7;
	cvt.u64.u32	%rd517, %r343;
	add.s64 	%rd518, %rd183, %rd517;
	st.local.u8 	[%rd518], %rd516;
	add.s32 	%r344, %r233, -9;
	xor.b32  	%r345, %r344, 7;
	cvt.u64.u32	%rd519, %r345;
	add.s64 	%rd520, %rd183, %rd519;
	st.local.u8 	[%rd520], %rd1541;
	add.s32 	%r346, %r233, -8;
	shr.u64 	%rd521, %rd1540, 56;
	xor.b32  	%r347, %r346, 7;
	cvt.u64.u32	%rd522, %r347;
	add.s64 	%rd523, %rd183, %rd522;
	st.local.u8 	[%rd523], %rd521;
	add.s32 	%r348, %r233, -7;
	shr.u64 	%rd524, %rd1540, 48;
	xor.b32  	%r349, %r348, 7;
	cvt.u64.u32	%rd525, %r349;
	add.s64 	%rd526, %rd183, %rd525;
	st.local.u8 	[%rd526], %rd524;
	add.s32 	%r350, %r233, -6;
	shr.u64 	%rd527, %rd1540, 40;
	xor.b32  	%r351, %r350, 7;
	cvt.u64.u32	%rd528, %r351;
	add.s64 	%rd529, %rd183, %rd528;
	st.local.u8 	[%rd529], %rd527;
	add.s32 	%r352, %r233, -5;
	shr.u64 	%rd530, %rd1540, 32;
	xor.b32  	%r353, %r352, 7;
	cvt.u64.u32	%rd531, %r353;
	add.s64 	%rd532, %rd183, %rd531;
	st.local.u8 	[%rd532], %rd530;
	add.s32 	%r354, %r233, -4;
	shr.u64 	%rd533, %rd1540, 24;
	xor.b32  	%r355, %r354, 7;
	cvt.u64.u32	%rd534, %r355;
	add.s64 	%rd535, %rd183, %rd534;
	st.local.u8 	[%rd535], %rd533;
	add.s32 	%r356, %r233, -3;
	shr.u64 	%rd536, %rd1540, 16;
	xor.b32  	%r357, %r356, 7;
	cvt.u64.u32	%rd537, %r357;
	add.s64 	%rd538, %rd183, %rd537;
	st.local.u8 	[%rd538], %rd536;
	add.s32 	%r358, %r233, -2;
	shr.u64 	%rd539, %rd1540, 8;
	xor.b32  	%r359, %r358, 7;
	cvt.u64.u32	%rd540, %r359;
	add.s64 	%rd541, %rd183, %rd540;
	st.local.u8 	[%rd541], %rd539;
	add.s32 	%r360, %r233, -1;
	xor.b32  	%r361, %r360, 7;
	cvt.u64.u32	%rd542, %r361;
	add.s64 	%rd543, %rd183, %rd542;
	st.local.u8 	[%rd543], %rd1540;
	ld.local.v2.u64 	{%rd1547, %rd1546}, [%rd183];
	ld.local.v2.u64 	{%rd1545, %rd1544}, [%rd183+16];
	ld.local.v2.u64 	{%rd1543, %rd1542}, [%rd183+32];
	ld.local.v2.u64 	{%rd1541, %rd1540}, [%rd183+48];
	ld.local.v2.u64 	{%rd1571, %rd1570}, [%rd183+64];
	ld.local.v2.u64 	{%rd1569, %rd1568}, [%rd183+80];
	ld.local.v2.u64 	{%rd1567, %rd1566}, [%rd183+96];
	ld.local.v2.u64 	{%rd1565, %rd1564}, [%rd183+112];
	bra.uni 	BB1_54;

BB1_52:
	st.local.v2.u64 	[%rd183], {%rd1547, %rd1546};
	st.local.v2.u64 	[%rd183+16], {%rd1545, %rd1544};
	st.local.v2.u64 	[%rd183+32], {%rd1543, %rd1542};
	st.local.v2.u64 	[%rd183+48], {%rd1541, %rd1540};

BB1_54:
	add.s64 	%rd560, %rd1547, %rd24;
	add.s64 	%rd561, %rd560, %rd40;
	add.s64 	%rd562, %rd561, %rd41;
	add.s64 	%rd563, %rd561, 2357225248857953701;
	add.s64 	%rd564, %rd562, -5343946410804754465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r363,%dummy}, %rd563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r364}, %rd563;
	}
	shf.r.wrap.b32 	%r365, %r364, %r363, 14;
	shf.r.wrap.b32 	%r366, %r363, %r364, 14;
	mov.b64 	%rd565, {%r366, %r365};
	shf.r.wrap.b32 	%r367, %r364, %r363, 18;
	shf.r.wrap.b32 	%r368, %r363, %r364, 18;
	mov.b64 	%rd566, {%r368, %r367};
	xor.b64  	%rd567, %rd566, %rd565;
	shf.l.wrap.b32 	%r369, %r363, %r364, 23;
	shf.l.wrap.b32 	%r370, %r364, %r363, 23;
	mov.b64 	%rd568, {%r370, %r369};
	xor.b64  	%rd569, %rd567, %rd568;
	and.b64  	%rd570, %rd563, -3887949035690463538;
	xor.b64  	%rd571, %rd570, -7276294671716946913;
	add.s64 	%rd572, %rd1546, %rd25;
	add.s64 	%rd573, %rd572, %rd571;
	add.s64 	%rd574, %rd573, %rd569;
	and.b64  	%rd575, %rd564, 7640891576956012808;
	and.b64  	%rd576, %rd564, -4942790177534073029;
	xor.b64  	%rd577, %rd576, 3026882967131160840;
	or.b64  	%rd578, %rd577, %rd575;
	add.s64 	%rd579, %rd574, %rd578;
	add.s64 	%rd580, %rd574, 6625583534739731862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r371,%dummy}, %rd564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r372}, %rd564;
	}
	shf.r.wrap.b32 	%r373, %r372, %r371, 28;
	shf.r.wrap.b32 	%r374, %r371, %r372, 28;
	mov.b64 	%rd581, {%r374, %r373};
	shf.l.wrap.b32 	%r375, %r371, %r372, 30;
	shf.l.wrap.b32 	%r376, %r372, %r371, 30;
	mov.b64 	%rd582, {%r376, %r375};
	xor.b64  	%rd583, %rd582, %rd581;
	shf.l.wrap.b32 	%r377, %r371, %r372, 25;
	shf.l.wrap.b32 	%r378, %r372, %r371, 25;
	mov.b64 	%rd584, {%r378, %r377};
	xor.b64  	%rd585, %rd583, %rd584;
	add.s64 	%rd586, %rd579, %rd585;
	add.s64 	%rd587, %rd586, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r379,%dummy}, %rd580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r380}, %rd580;
	}
	shf.r.wrap.b32 	%r381, %r380, %r379, 14;
	shf.r.wrap.b32 	%r382, %r379, %r380, 14;
	mov.b64 	%rd588, {%r382, %r381};
	shf.r.wrap.b32 	%r383, %r380, %r379, 18;
	shf.r.wrap.b32 	%r384, %r379, %r380, 18;
	mov.b64 	%rd589, {%r384, %r383};
	xor.b64  	%rd590, %rd589, %rd588;
	shf.l.wrap.b32 	%r385, %r379, %r380, 23;
	shf.l.wrap.b32 	%r386, %r380, %r379, 23;
	mov.b64 	%rd591, {%r386, %r385};
	xor.b64  	%rd592, %rd590, %rd591;
	xor.b64  	%rd593, %rd563, 5840696475078001361;
	and.b64  	%rd594, %rd580, %rd593;
	xor.b64  	%rd595, %rd594, 5840696475078001361;
	add.s64 	%rd596, %rd1545, %rd26;
	add.s64 	%rd597, %rd596, %rd595;
	add.s64 	%rd598, %rd597, %rd592;
	and.b64  	%rd599, %rd587, %rd564;
	xor.b64  	%rd600, %rd587, %rd564;
	and.b64  	%rd601, %rd600, 7640891576956012808;
	or.b64  	%rd602, %rd601, %rd599;
	add.s64 	%rd603, %rd598, %rd602;
	add.s64 	%rd604, %rd598, 6227659224458531674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r387,%dummy}, %rd587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r388}, %rd587;
	}
	shf.r.wrap.b32 	%r389, %r388, %r387, 28;
	shf.r.wrap.b32 	%r390, %r387, %r388, 28;
	mov.b64 	%rd605, {%r390, %r389};
	shf.l.wrap.b32 	%r391, %r387, %r388, 30;
	shf.l.wrap.b32 	%r392, %r388, %r387, 30;
	mov.b64 	%rd606, {%r392, %r391};
	xor.b64  	%rd607, %rd606, %rd605;
	shf.l.wrap.b32 	%r393, %r387, %r388, 25;
	shf.l.wrap.b32 	%r394, %r388, %r387, 25;
	mov.b64 	%rd608, {%r394, %r393};
	xor.b64  	%rd609, %rd607, %rd608;
	add.s64 	%rd610, %rd603, %rd609;
	add.s64 	%rd611, %rd610, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r395,%dummy}, %rd604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r396}, %rd604;
	}
	shf.r.wrap.b32 	%r397, %r396, %r395, 14;
	shf.r.wrap.b32 	%r398, %r395, %r396, 14;
	mov.b64 	%rd612, {%r398, %r397};
	shf.r.wrap.b32 	%r399, %r396, %r395, 18;
	shf.r.wrap.b32 	%r400, %r395, %r396, 18;
	mov.b64 	%rd613, {%r400, %r399};
	xor.b64  	%rd614, %rd613, %rd612;
	shf.l.wrap.b32 	%r401, %r395, %r396, 23;
	shf.l.wrap.b32 	%r402, %r396, %r395, 23;
	mov.b64 	%rd615, {%r402, %r401};
	xor.b64  	%rd616, %rd614, %rd615;
	xor.b64  	%rd617, %rd580, %rd563;
	and.b64  	%rd618, %rd604, %rd617;
	xor.b64  	%rd619, %rd618, %rd563;
	add.s64 	%rd620, %rd1544, %rd27;
	add.s64 	%rd621, %rd620, %rd619;
	add.s64 	%rd622, %rd621, %rd616;
	and.b64  	%rd623, %rd611, %rd587;
	xor.b64  	%rd624, %rd611, %rd587;
	and.b64  	%rd625, %rd624, %rd564;
	or.b64  	%rd626, %rd625, %rd623;
	add.s64 	%rd627, %rd622, %rd626;
	add.s64 	%rd628, %rd622, -4965156021675537447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r403,%dummy}, %rd611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r404}, %rd611;
	}
	shf.r.wrap.b32 	%r405, %r404, %r403, 28;
	shf.r.wrap.b32 	%r406, %r403, %r404, 28;
	mov.b64 	%rd629, {%r406, %r405};
	shf.l.wrap.b32 	%r407, %r403, %r404, 30;
	shf.l.wrap.b32 	%r408, %r404, %r403, 30;
	mov.b64 	%rd630, {%r408, %r407};
	xor.b64  	%rd631, %rd630, %rd629;
	shf.l.wrap.b32 	%r409, %r403, %r404, 25;
	shf.l.wrap.b32 	%r410, %r404, %r403, 25;
	mov.b64 	%rd632, {%r410, %r409};
	xor.b64  	%rd633, %rd631, %rd632;
	add.s64 	%rd634, %rd627, %rd633;
	add.s64 	%rd635, %rd634, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r411,%dummy}, %rd628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r412}, %rd628;
	}
	shf.r.wrap.b32 	%r413, %r412, %r411, 14;
	shf.r.wrap.b32 	%r414, %r411, %r412, 14;
	mov.b64 	%rd636, {%r414, %r413};
	shf.r.wrap.b32 	%r415, %r412, %r411, 18;
	shf.r.wrap.b32 	%r416, %r411, %r412, 18;
	mov.b64 	%rd637, {%r416, %r415};
	xor.b64  	%rd638, %rd637, %rd636;
	shf.l.wrap.b32 	%r417, %r411, %r412, 23;
	shf.l.wrap.b32 	%r418, %r412, %r411, 23;
	mov.b64 	%rd639, {%r418, %r417};
	xor.b64  	%rd640, %rd638, %rd639;
	xor.b64  	%rd641, %rd604, %rd580;
	and.b64  	%rd642, %rd628, %rd641;
	xor.b64  	%rd643, %rd642, %rd580;
	add.s64 	%rd644, %rd563, %rd1543;
	add.s64 	%rd645, %rd644, %rd28;
	add.s64 	%rd646, %rd645, %rd643;
	add.s64 	%rd647, %rd646, %rd640;
	add.s64 	%rd648, %rd647, %rd564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r419,%dummy}, %rd635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r420}, %rd635;
	}
	shf.r.wrap.b32 	%r421, %r420, %r419, 28;
	shf.r.wrap.b32 	%r422, %r419, %r420, 28;
	mov.b64 	%rd649, {%r422, %r421};
	shf.l.wrap.b32 	%r423, %r419, %r420, 30;
	shf.l.wrap.b32 	%r424, %r420, %r419, 30;
	mov.b64 	%rd650, {%r424, %r423};
	xor.b64  	%rd651, %rd650, %rd649;
	shf.l.wrap.b32 	%r425, %r419, %r420, 25;
	shf.l.wrap.b32 	%r426, %r420, %r419, 25;
	mov.b64 	%rd652, {%r426, %r425};
	xor.b64  	%rd653, %rd651, %rd652;
	and.b64  	%rd654, %rd635, %rd611;
	xor.b64  	%rd655, %rd635, %rd611;
	and.b64  	%rd656, %rd655, %rd587;
	or.b64  	%rd657, %rd656, %rd654;
	add.s64 	%rd658, %rd647, %rd657;
	add.s64 	%rd659, %rd658, %rd653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r427,%dummy}, %rd648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r428}, %rd648;
	}
	shf.r.wrap.b32 	%r429, %r428, %r427, 14;
	shf.r.wrap.b32 	%r430, %r427, %r428, 14;
	mov.b64 	%rd660, {%r430, %r429};
	shf.r.wrap.b32 	%r431, %r428, %r427, 18;
	shf.r.wrap.b32 	%r432, %r427, %r428, 18;
	mov.b64 	%rd661, {%r432, %r431};
	xor.b64  	%rd662, %rd661, %rd660;
	shf.l.wrap.b32 	%r433, %r427, %r428, 23;
	shf.l.wrap.b32 	%r434, %r428, %r427, 23;
	mov.b64 	%rd663, {%r434, %r433};
	xor.b64  	%rd664, %rd662, %rd663;
	xor.b64  	%rd665, %rd628, %rd604;
	and.b64  	%rd666, %rd648, %rd665;
	xor.b64  	%rd667, %rd666, %rd604;
	add.s64 	%rd668, %rd580, %rd1542;
	add.s64 	%rd669, %rd668, %rd29;
	add.s64 	%rd670, %rd669, %rd667;
	add.s64 	%rd671, %rd670, %rd664;
	add.s64 	%rd672, %rd671, %rd587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r435,%dummy}, %rd659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r436}, %rd659;
	}
	shf.r.wrap.b32 	%r437, %r436, %r435, 28;
	shf.r.wrap.b32 	%r438, %r435, %r436, 28;
	mov.b64 	%rd673, {%r438, %r437};
	shf.l.wrap.b32 	%r439, %r435, %r436, 30;
	shf.l.wrap.b32 	%r440, %r436, %r435, 30;
	mov.b64 	%rd674, {%r440, %r439};
	xor.b64  	%rd675, %rd674, %rd673;
	shf.l.wrap.b32 	%r441, %r435, %r436, 25;
	shf.l.wrap.b32 	%r442, %r436, %r435, 25;
	mov.b64 	%rd676, {%r442, %r441};
	xor.b64  	%rd677, %rd675, %rd676;
	and.b64  	%rd678, %rd659, %rd635;
	xor.b64  	%rd679, %rd659, %rd635;
	and.b64  	%rd680, %rd679, %rd611;
	or.b64  	%rd681, %rd680, %rd678;
	add.s64 	%rd682, %rd671, %rd681;
	add.s64 	%rd683, %rd682, %rd677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r443,%dummy}, %rd672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r444}, %rd672;
	}
	shf.r.wrap.b32 	%r445, %r444, %r443, 14;
	shf.r.wrap.b32 	%r446, %r443, %r444, 14;
	mov.b64 	%rd684, {%r446, %r445};
	shf.r.wrap.b32 	%r447, %r444, %r443, 18;
	shf.r.wrap.b32 	%r448, %r443, %r444, 18;
	mov.b64 	%rd685, {%r448, %r447};
	xor.b64  	%rd686, %rd685, %rd684;
	shf.l.wrap.b32 	%r449, %r443, %r444, 23;
	shf.l.wrap.b32 	%r450, %r444, %r443, 23;
	mov.b64 	%rd687, {%r450, %r449};
	xor.b64  	%rd688, %rd686, %rd687;
	xor.b64  	%rd689, %rd648, %rd628;
	and.b64  	%rd690, %rd672, %rd689;
	xor.b64  	%rd691, %rd690, %rd628;
	add.s64 	%rd692, %rd604, %rd1541;
	add.s64 	%rd693, %rd692, %rd30;
	add.s64 	%rd694, %rd693, %rd691;
	add.s64 	%rd695, %rd694, %rd688;
	add.s64 	%rd696, %rd695, %rd611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r451,%dummy}, %rd683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r452}, %rd683;
	}
	shf.r.wrap.b32 	%r453, %r452, %r451, 28;
	shf.r.wrap.b32 	%r454, %r451, %r452, 28;
	mov.b64 	%rd697, {%r454, %r453};
	shf.l.wrap.b32 	%r455, %r451, %r452, 30;
	shf.l.wrap.b32 	%r456, %r452, %r451, 30;
	mov.b64 	%rd698, {%r456, %r455};
	xor.b64  	%rd699, %rd698, %rd697;
	shf.l.wrap.b32 	%r457, %r451, %r452, 25;
	shf.l.wrap.b32 	%r458, %r452, %r451, 25;
	mov.b64 	%rd700, {%r458, %r457};
	xor.b64  	%rd701, %rd699, %rd700;
	and.b64  	%rd702, %rd683, %rd659;
	xor.b64  	%rd703, %rd683, %rd659;
	and.b64  	%rd704, %rd703, %rd635;
	or.b64  	%rd705, %rd704, %rd702;
	add.s64 	%rd706, %rd695, %rd705;
	add.s64 	%rd707, %rd706, %rd701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r459,%dummy}, %rd696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r460}, %rd696;
	}
	shf.r.wrap.b32 	%r461, %r460, %r459, 14;
	shf.r.wrap.b32 	%r462, %r459, %r460, 14;
	mov.b64 	%rd708, {%r462, %r461};
	shf.r.wrap.b32 	%r463, %r460, %r459, 18;
	shf.r.wrap.b32 	%r464, %r459, %r460, 18;
	mov.b64 	%rd709, {%r464, %r463};
	xor.b64  	%rd710, %rd709, %rd708;
	shf.l.wrap.b32 	%r465, %r459, %r460, 23;
	shf.l.wrap.b32 	%r466, %r460, %r459, 23;
	mov.b64 	%rd711, {%r466, %r465};
	xor.b64  	%rd712, %rd710, %rd711;
	xor.b64  	%rd713, %rd672, %rd648;
	and.b64  	%rd714, %rd696, %rd713;
	xor.b64  	%rd715, %rd714, %rd648;
	add.s64 	%rd716, %rd628, %rd1540;
	add.s64 	%rd717, %rd716, %rd31;
	add.s64 	%rd718, %rd717, %rd715;
	add.s64 	%rd719, %rd718, %rd712;
	add.s64 	%rd720, %rd719, %rd635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r467,%dummy}, %rd707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r468}, %rd707;
	}
	shf.r.wrap.b32 	%r469, %r468, %r467, 28;
	shf.r.wrap.b32 	%r470, %r467, %r468, 28;
	mov.b64 	%rd721, {%r470, %r469};
	shf.l.wrap.b32 	%r471, %r467, %r468, 30;
	shf.l.wrap.b32 	%r472, %r468, %r467, 30;
	mov.b64 	%rd722, {%r472, %r471};
	xor.b64  	%rd723, %rd722, %rd721;
	shf.l.wrap.b32 	%r473, %r467, %r468, 25;
	shf.l.wrap.b32 	%r474, %r468, %r467, 25;
	mov.b64 	%rd724, {%r474, %r473};
	xor.b64  	%rd725, %rd723, %rd724;
	and.b64  	%rd726, %rd707, %rd683;
	xor.b64  	%rd727, %rd707, %rd683;
	and.b64  	%rd728, %rd727, %rd659;
	or.b64  	%rd729, %rd728, %rd726;
	add.s64 	%rd730, %rd719, %rd729;
	add.s64 	%rd731, %rd730, %rd725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r475,%dummy}, %rd720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r476}, %rd720;
	}
	shf.r.wrap.b32 	%r477, %r476, %r475, 14;
	shf.r.wrap.b32 	%r478, %r475, %r476, 14;
	mov.b64 	%rd732, {%r478, %r477};
	shf.r.wrap.b32 	%r479, %r476, %r475, 18;
	shf.r.wrap.b32 	%r480, %r475, %r476, 18;
	mov.b64 	%rd733, {%r480, %r479};
	xor.b64  	%rd734, %rd733, %rd732;
	shf.l.wrap.b32 	%r481, %r475, %r476, 23;
	shf.l.wrap.b32 	%r482, %r476, %r475, 23;
	mov.b64 	%rd735, {%r482, %r481};
	xor.b64  	%rd736, %rd734, %rd735;
	xor.b64  	%rd737, %rd696, %rd672;
	and.b64  	%rd738, %rd720, %rd737;
	xor.b64  	%rd739, %rd738, %rd672;
	add.s64 	%rd740, %rd648, %rd1571;
	add.s64 	%rd741, %rd740, %rd32;
	add.s64 	%rd742, %rd741, %rd739;
	add.s64 	%rd743, %rd742, %rd736;
	add.s64 	%rd744, %rd743, %rd659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r483,%dummy}, %rd731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r484}, %rd731;
	}
	shf.r.wrap.b32 	%r485, %r484, %r483, 28;
	shf.r.wrap.b32 	%r486, %r483, %r484, 28;
	mov.b64 	%rd745, {%r486, %r485};
	shf.l.wrap.b32 	%r487, %r483, %r484, 30;
	shf.l.wrap.b32 	%r488, %r484, %r483, 30;
	mov.b64 	%rd746, {%r488, %r487};
	xor.b64  	%rd747, %rd746, %rd745;
	shf.l.wrap.b32 	%r489, %r483, %r484, 25;
	shf.l.wrap.b32 	%r490, %r484, %r483, 25;
	mov.b64 	%rd748, {%r490, %r489};
	xor.b64  	%rd749, %rd747, %rd748;
	and.b64  	%rd750, %rd731, %rd707;
	xor.b64  	%rd751, %rd731, %rd707;
	and.b64  	%rd752, %rd751, %rd683;
	or.b64  	%rd753, %rd752, %rd750;
	add.s64 	%rd754, %rd743, %rd753;
	add.s64 	%rd755, %rd754, %rd749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r491,%dummy}, %rd744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r492}, %rd744;
	}
	shf.r.wrap.b32 	%r493, %r492, %r491, 14;
	shf.r.wrap.b32 	%r494, %r491, %r492, 14;
	mov.b64 	%rd756, {%r494, %r493};
	shf.r.wrap.b32 	%r495, %r492, %r491, 18;
	shf.r.wrap.b32 	%r496, %r491, %r492, 18;
	mov.b64 	%rd757, {%r496, %r495};
	xor.b64  	%rd758, %rd757, %rd756;
	shf.l.wrap.b32 	%r497, %r491, %r492, 23;
	shf.l.wrap.b32 	%r498, %r492, %r491, 23;
	mov.b64 	%rd759, {%r498, %r497};
	xor.b64  	%rd760, %rd758, %rd759;
	xor.b64  	%rd761, %rd720, %rd696;
	and.b64  	%rd762, %rd744, %rd761;
	xor.b64  	%rd763, %rd762, %rd696;
	add.s64 	%rd764, %rd672, %rd1570;
	add.s64 	%rd765, %rd764, %rd33;
	add.s64 	%rd766, %rd765, %rd763;
	add.s64 	%rd767, %rd766, %rd760;
	add.s64 	%rd768, %rd767, %rd683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r499,%dummy}, %rd755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r500}, %rd755;
	}
	shf.r.wrap.b32 	%r501, %r500, %r499, 28;
	shf.r.wrap.b32 	%r502, %r499, %r500, 28;
	mov.b64 	%rd769, {%r502, %r501};
	shf.l.wrap.b32 	%r503, %r499, %r500, 30;
	shf.l.wrap.b32 	%r504, %r500, %r499, 30;
	mov.b64 	%rd770, {%r504, %r503};
	xor.b64  	%rd771, %rd770, %rd769;
	shf.l.wrap.b32 	%r505, %r499, %r500, 25;
	shf.l.wrap.b32 	%r506, %r500, %r499, 25;
	mov.b64 	%rd772, {%r506, %r505};
	xor.b64  	%rd773, %rd771, %rd772;
	and.b64  	%rd774, %rd755, %rd731;
	xor.b64  	%rd775, %rd755, %rd731;
	and.b64  	%rd776, %rd775, %rd707;
	or.b64  	%rd777, %rd776, %rd774;
	add.s64 	%rd778, %rd767, %rd777;
	add.s64 	%rd779, %rd778, %rd773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r507,%dummy}, %rd768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r508}, %rd768;
	}
	shf.r.wrap.b32 	%r509, %r508, %r507, 14;
	shf.r.wrap.b32 	%r510, %r507, %r508, 14;
	mov.b64 	%rd780, {%r510, %r509};
	shf.r.wrap.b32 	%r511, %r508, %r507, 18;
	shf.r.wrap.b32 	%r512, %r507, %r508, 18;
	mov.b64 	%rd781, {%r512, %r511};
	xor.b64  	%rd782, %rd781, %rd780;
	shf.l.wrap.b32 	%r513, %r507, %r508, 23;
	shf.l.wrap.b32 	%r514, %r508, %r507, 23;
	mov.b64 	%rd783, {%r514, %r513};
	xor.b64  	%rd784, %rd782, %rd783;
	xor.b64  	%rd785, %rd744, %rd720;
	and.b64  	%rd786, %rd768, %rd785;
	xor.b64  	%rd787, %rd786, %rd720;
	add.s64 	%rd788, %rd696, %rd1569;
	add.s64 	%rd789, %rd788, %rd34;
	add.s64 	%rd790, %rd789, %rd787;
	add.s64 	%rd791, %rd790, %rd784;
	add.s64 	%rd792, %rd791, %rd707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r515,%dummy}, %rd779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r516}, %rd779;
	}
	shf.r.wrap.b32 	%r517, %r516, %r515, 28;
	shf.r.wrap.b32 	%r518, %r515, %r516, 28;
	mov.b64 	%rd793, {%r518, %r517};
	shf.l.wrap.b32 	%r519, %r515, %r516, 30;
	shf.l.wrap.b32 	%r520, %r516, %r515, 30;
	mov.b64 	%rd794, {%r520, %r519};
	xor.b64  	%rd795, %rd794, %rd793;
	shf.l.wrap.b32 	%r521, %r515, %r516, 25;
	shf.l.wrap.b32 	%r522, %r516, %r515, 25;
	mov.b64 	%rd796, {%r522, %r521};
	xor.b64  	%rd797, %rd795, %rd796;
	and.b64  	%rd798, %rd779, %rd755;
	xor.b64  	%rd799, %rd779, %rd755;
	and.b64  	%rd800, %rd799, %rd731;
	or.b64  	%rd801, %rd800, %rd798;
	add.s64 	%rd802, %rd791, %rd801;
	add.s64 	%rd803, %rd802, %rd797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r523,%dummy}, %rd792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r524}, %rd792;
	}
	shf.r.wrap.b32 	%r525, %r524, %r523, 14;
	shf.r.wrap.b32 	%r526, %r523, %r524, 14;
	mov.b64 	%rd804, {%r526, %r525};
	shf.r.wrap.b32 	%r527, %r524, %r523, 18;
	shf.r.wrap.b32 	%r528, %r523, %r524, 18;
	mov.b64 	%rd805, {%r528, %r527};
	xor.b64  	%rd806, %rd805, %rd804;
	shf.l.wrap.b32 	%r529, %r523, %r524, 23;
	shf.l.wrap.b32 	%r530, %r524, %r523, 23;
	mov.b64 	%rd807, {%r530, %r529};
	xor.b64  	%rd808, %rd806, %rd807;
	xor.b64  	%rd809, %rd768, %rd744;
	and.b64  	%rd810, %rd792, %rd809;
	xor.b64  	%rd811, %rd810, %rd744;
	add.s64 	%rd812, %rd720, %rd1568;
	add.s64 	%rd813, %rd812, %rd35;
	add.s64 	%rd814, %rd813, %rd811;
	add.s64 	%rd815, %rd814, %rd808;
	add.s64 	%rd816, %rd815, %rd731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r531,%dummy}, %rd803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r532}, %rd803;
	}
	shf.r.wrap.b32 	%r533, %r532, %r531, 28;
	shf.r.wrap.b32 	%r534, %r531, %r532, 28;
	mov.b64 	%rd817, {%r534, %r533};
	shf.l.wrap.b32 	%r535, %r531, %r532, 30;
	shf.l.wrap.b32 	%r536, %r532, %r531, 30;
	mov.b64 	%rd818, {%r536, %r535};
	xor.b64  	%rd819, %rd818, %rd817;
	shf.l.wrap.b32 	%r537, %r531, %r532, 25;
	shf.l.wrap.b32 	%r538, %r532, %r531, 25;
	mov.b64 	%rd820, {%r538, %r537};
	xor.b64  	%rd821, %rd819, %rd820;
	and.b64  	%rd822, %rd803, %rd779;
	xor.b64  	%rd823, %rd803, %rd779;
	and.b64  	%rd824, %rd823, %rd755;
	or.b64  	%rd825, %rd824, %rd822;
	add.s64 	%rd826, %rd815, %rd825;
	add.s64 	%rd827, %rd826, %rd821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r539,%dummy}, %rd816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r540}, %rd816;
	}
	shf.r.wrap.b32 	%r541, %r540, %r539, 14;
	shf.r.wrap.b32 	%r542, %r539, %r540, 14;
	mov.b64 	%rd828, {%r542, %r541};
	shf.r.wrap.b32 	%r543, %r540, %r539, 18;
	shf.r.wrap.b32 	%r544, %r539, %r540, 18;
	mov.b64 	%rd829, {%r544, %r543};
	xor.b64  	%rd830, %rd829, %rd828;
	shf.l.wrap.b32 	%r545, %r539, %r540, 23;
	shf.l.wrap.b32 	%r546, %r540, %r539, 23;
	mov.b64 	%rd831, {%r546, %r545};
	xor.b64  	%rd832, %rd830, %rd831;
	xor.b64  	%rd833, %rd792, %rd768;
	and.b64  	%rd834, %rd816, %rd833;
	xor.b64  	%rd835, %rd834, %rd768;
	add.s64 	%rd836, %rd744, %rd1567;
	add.s64 	%rd837, %rd836, %rd36;
	add.s64 	%rd838, %rd837, %rd835;
	add.s64 	%rd839, %rd838, %rd832;
	add.s64 	%rd1579, %rd839, %rd755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r547,%dummy}, %rd827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r548}, %rd827;
	}
	shf.r.wrap.b32 	%r549, %r548, %r547, 28;
	shf.r.wrap.b32 	%r550, %r547, %r548, 28;
	mov.b64 	%rd840, {%r550, %r549};
	shf.l.wrap.b32 	%r551, %r547, %r548, 30;
	shf.l.wrap.b32 	%r552, %r548, %r547, 30;
	mov.b64 	%rd841, {%r552, %r551};
	xor.b64  	%rd842, %rd841, %rd840;
	shf.l.wrap.b32 	%r553, %r547, %r548, 25;
	shf.l.wrap.b32 	%r554, %r548, %r547, 25;
	mov.b64 	%rd843, {%r554, %r553};
	xor.b64  	%rd844, %rd842, %rd843;
	and.b64  	%rd845, %rd827, %rd803;
	xor.b64  	%rd846, %rd827, %rd803;
	and.b64  	%rd847, %rd846, %rd779;
	or.b64  	%rd848, %rd847, %rd845;
	add.s64 	%rd849, %rd839, %rd848;
	add.s64 	%rd1575, %rd849, %rd844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r555,%dummy}, %rd1579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r556}, %rd1579;
	}
	shf.r.wrap.b32 	%r557, %r556, %r555, 14;
	shf.r.wrap.b32 	%r558, %r555, %r556, 14;
	mov.b64 	%rd850, {%r558, %r557};
	shf.r.wrap.b32 	%r559, %r556, %r555, 18;
	shf.r.wrap.b32 	%r560, %r555, %r556, 18;
	mov.b64 	%rd851, {%r560, %r559};
	xor.b64  	%rd852, %rd851, %rd850;
	shf.l.wrap.b32 	%r561, %r555, %r556, 23;
	shf.l.wrap.b32 	%r562, %r556, %r555, 23;
	mov.b64 	%rd853, {%r562, %r561};
	xor.b64  	%rd854, %rd852, %rd853;
	xor.b64  	%rd855, %rd816, %rd792;
	and.b64  	%rd856, %rd1579, %rd855;
	xor.b64  	%rd857, %rd856, %rd792;
	add.s64 	%rd858, %rd768, %rd1566;
	add.s64 	%rd859, %rd858, %rd37;
	add.s64 	%rd860, %rd859, %rd857;
	add.s64 	%rd861, %rd860, %rd854;
	add.s64 	%rd1578, %rd861, %rd779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r563,%dummy}, %rd1575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r564}, %rd1575;
	}
	shf.r.wrap.b32 	%r565, %r564, %r563, 28;
	shf.r.wrap.b32 	%r566, %r563, %r564, 28;
	mov.b64 	%rd862, {%r566, %r565};
	shf.l.wrap.b32 	%r567, %r563, %r564, 30;
	shf.l.wrap.b32 	%r568, %r564, %r563, 30;
	mov.b64 	%rd863, {%r568, %r567};
	xor.b64  	%rd864, %rd863, %rd862;
	shf.l.wrap.b32 	%r569, %r563, %r564, 25;
	shf.l.wrap.b32 	%r570, %r564, %r563, 25;
	mov.b64 	%rd865, {%r570, %r569};
	xor.b64  	%rd866, %rd864, %rd865;
	and.b64  	%rd867, %rd1575, %rd827;
	xor.b64  	%rd868, %rd1575, %rd827;
	and.b64  	%rd869, %rd868, %rd803;
	or.b64  	%rd870, %rd869, %rd867;
	add.s64 	%rd871, %rd861, %rd870;
	add.s64 	%rd1574, %rd871, %rd866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r571,%dummy}, %rd1578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r572}, %rd1578;
	}
	shf.r.wrap.b32 	%r573, %r572, %r571, 14;
	shf.r.wrap.b32 	%r574, %r571, %r572, 14;
	mov.b64 	%rd872, {%r574, %r573};
	shf.r.wrap.b32 	%r575, %r572, %r571, 18;
	shf.r.wrap.b32 	%r576, %r571, %r572, 18;
	mov.b64 	%rd873, {%r576, %r575};
	xor.b64  	%rd874, %rd873, %rd872;
	shf.l.wrap.b32 	%r577, %r571, %r572, 23;
	shf.l.wrap.b32 	%r578, %r572, %r571, 23;
	mov.b64 	%rd875, {%r578, %r577};
	xor.b64  	%rd876, %rd874, %rd875;
	xor.b64  	%rd877, %rd1579, %rd816;
	and.b64  	%rd878, %rd1578, %rd877;
	xor.b64  	%rd879, %rd878, %rd816;
	add.s64 	%rd880, %rd792, %rd1565;
	add.s64 	%rd881, %rd880, %rd38;
	add.s64 	%rd882, %rd881, %rd879;
	add.s64 	%rd883, %rd882, %rd876;
	add.s64 	%rd1577, %rd883, %rd803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r579,%dummy}, %rd1574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r580}, %rd1574;
	}
	shf.r.wrap.b32 	%r581, %r580, %r579, 28;
	shf.r.wrap.b32 	%r582, %r579, %r580, 28;
	mov.b64 	%rd884, {%r582, %r581};
	shf.l.wrap.b32 	%r583, %r579, %r580, 30;
	shf.l.wrap.b32 	%r584, %r580, %r579, 30;
	mov.b64 	%rd885, {%r584, %r583};
	xor.b64  	%rd886, %rd885, %rd884;
	shf.l.wrap.b32 	%r585, %r579, %r580, 25;
	shf.l.wrap.b32 	%r586, %r580, %r579, 25;
	mov.b64 	%rd887, {%r586, %r585};
	xor.b64  	%rd888, %rd886, %rd887;
	and.b64  	%rd889, %rd1574, %rd1575;
	xor.b64  	%rd890, %rd1574, %rd1575;
	and.b64  	%rd891, %rd890, %rd827;
	or.b64  	%rd892, %rd891, %rd889;
	add.s64 	%rd893, %rd883, %rd892;
	add.s64 	%rd1573, %rd893, %rd888;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r587,%dummy}, %rd1577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r588}, %rd1577;
	}
	shf.r.wrap.b32 	%r589, %r588, %r587, 14;
	shf.r.wrap.b32 	%r590, %r587, %r588, 14;
	mov.b64 	%rd894, {%r590, %r589};
	shf.r.wrap.b32 	%r591, %r588, %r587, 18;
	shf.r.wrap.b32 	%r592, %r587, %r588, 18;
	mov.b64 	%rd895, {%r592, %r591};
	xor.b64  	%rd896, %rd895, %rd894;
	shf.l.wrap.b32 	%r593, %r587, %r588, 23;
	shf.l.wrap.b32 	%r594, %r588, %r587, 23;
	mov.b64 	%rd897, {%r594, %r593};
	xor.b64  	%rd898, %rd896, %rd897;
	xor.b64  	%rd899, %rd1578, %rd1579;
	and.b64  	%rd900, %rd1577, %rd899;
	xor.b64  	%rd901, %rd900, %rd1579;
	add.s64 	%rd902, %rd816, %rd1564;
	add.s64 	%rd903, %rd902, %rd39;
	add.s64 	%rd904, %rd903, %rd901;
	add.s64 	%rd905, %rd904, %rd898;
	add.s64 	%rd1576, %rd905, %rd827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r595,%dummy}, %rd1573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r596}, %rd1573;
	}
	shf.r.wrap.b32 	%r597, %r596, %r595, 28;
	shf.r.wrap.b32 	%r598, %r595, %r596, 28;
	mov.b64 	%rd906, {%r598, %r597};
	shf.l.wrap.b32 	%r599, %r595, %r596, 30;
	shf.l.wrap.b32 	%r600, %r596, %r595, 30;
	mov.b64 	%rd907, {%r600, %r599};
	xor.b64  	%rd908, %rd907, %rd906;
	shf.l.wrap.b32 	%r601, %r595, %r596, 25;
	shf.l.wrap.b32 	%r602, %r596, %r595, 25;
	mov.b64 	%rd909, {%r602, %r601};
	xor.b64  	%rd910, %rd908, %rd909;
	and.b64  	%rd911, %rd1573, %rd1574;
	xor.b64  	%rd912, %rd1573, %rd1574;
	and.b64  	%rd913, %rd912, %rd1575;
	or.b64  	%rd914, %rd913, %rd911;
	add.s64 	%rd915, %rd905, %rd914;
	add.s64 	%rd1572, %rd915, %rd910;
	mov.u32 	%r1101, 16;

BB1_55:
	shr.u64 	%rd916, %rd1565, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r603,%dummy}, %rd1565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r604}, %rd1565;
	}
	shf.r.wrap.b32 	%r605, %r604, %r603, 19;
	shf.r.wrap.b32 	%r606, %r603, %r604, 19;
	mov.b64 	%rd917, {%r606, %r605};
	xor.b64  	%rd918, %rd917, %rd916;
	shf.l.wrap.b32 	%r607, %r603, %r604, 3;
	shf.l.wrap.b32 	%r608, %r604, %r603, 3;
	mov.b64 	%rd919, {%r608, %r607};
	xor.b64  	%rd920, %rd918, %rd919;
	shr.u64 	%rd921, %rd1546, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r609,%dummy}, %rd1546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r610}, %rd1546;
	}
	shf.r.wrap.b32 	%r611, %r610, %r609, 1;
	shf.r.wrap.b32 	%r612, %r609, %r610, 1;
	mov.b64 	%rd922, {%r612, %r611};
	xor.b64  	%rd923, %rd922, %rd921;
	shf.r.wrap.b32 	%r613, %r610, %r609, 8;
	shf.r.wrap.b32 	%r614, %r609, %r610, 8;
	mov.b64 	%rd924, {%r614, %r613};
	xor.b64  	%rd925, %rd923, %rd924;
	add.s64 	%rd926, %rd1570, %rd1547;
	add.s64 	%rd927, %rd926, %rd920;
	add.s64 	%rd1547, %rd927, %rd925;
	shr.u64 	%rd928, %rd1564, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r615,%dummy}, %rd1564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r616}, %rd1564;
	}
	shf.r.wrap.b32 	%r617, %r616, %r615, 19;
	shf.r.wrap.b32 	%r618, %r615, %r616, 19;
	mov.b64 	%rd929, {%r618, %r617};
	xor.b64  	%rd930, %rd929, %rd928;
	shf.l.wrap.b32 	%r619, %r615, %r616, 3;
	shf.l.wrap.b32 	%r620, %r616, %r615, 3;
	mov.b64 	%rd931, {%r620, %r619};
	xor.b64  	%rd932, %rd930, %rd931;
	shr.u64 	%rd933, %rd1545, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r621,%dummy}, %rd1545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r622}, %rd1545;
	}
	shf.r.wrap.b32 	%r623, %r622, %r621, 1;
	shf.r.wrap.b32 	%r624, %r621, %r622, 1;
	mov.b64 	%rd934, {%r624, %r623};
	xor.b64  	%rd935, %rd934, %rd933;
	shf.r.wrap.b32 	%r625, %r622, %r621, 8;
	shf.r.wrap.b32 	%r626, %r621, %r622, 8;
	mov.b64 	%rd936, {%r626, %r625};
	xor.b64  	%rd937, %rd935, %rd936;
	add.s64 	%rd938, %rd1569, %rd1546;
	add.s64 	%rd939, %rd938, %rd932;
	add.s64 	%rd1546, %rd939, %rd937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r627,%dummy}, %rd1547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r628}, %rd1547;
	}
	shf.r.wrap.b32 	%r629, %r628, %r627, 19;
	shf.r.wrap.b32 	%r630, %r627, %r628, 19;
	mov.b64 	%rd940, {%r630, %r629};
	shf.l.wrap.b32 	%r631, %r627, %r628, 3;
	shf.l.wrap.b32 	%r632, %r628, %r627, 3;
	mov.b64 	%rd941, {%r632, %r631};
	shr.u64 	%rd942, %rd1547, 6;
	xor.b64  	%rd943, %rd940, %rd942;
	xor.b64  	%rd944, %rd943, %rd941;
	shr.u64 	%rd945, %rd1544, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r633,%dummy}, %rd1544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r634}, %rd1544;
	}
	shf.r.wrap.b32 	%r635, %r634, %r633, 1;
	shf.r.wrap.b32 	%r636, %r633, %r634, 1;
	mov.b64 	%rd946, {%r636, %r635};
	xor.b64  	%rd947, %rd946, %rd945;
	shf.r.wrap.b32 	%r637, %r634, %r633, 8;
	shf.r.wrap.b32 	%r638, %r633, %r634, 8;
	mov.b64 	%rd948, {%r638, %r637};
	xor.b64  	%rd949, %rd947, %rd948;
	add.s64 	%rd950, %rd1568, %rd1545;
	add.s64 	%rd951, %rd950, %rd944;
	add.s64 	%rd1545, %rd951, %rd949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r639,%dummy}, %rd1546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r640}, %rd1546;
	}
	shf.r.wrap.b32 	%r641, %r640, %r639, 19;
	shf.r.wrap.b32 	%r642, %r639, %r640, 19;
	mov.b64 	%rd952, {%r642, %r641};
	shf.l.wrap.b32 	%r643, %r639, %r640, 3;
	shf.l.wrap.b32 	%r644, %r640, %r639, 3;
	mov.b64 	%rd953, {%r644, %r643};
	shr.u64 	%rd954, %rd1546, 6;
	xor.b64  	%rd955, %rd952, %rd954;
	xor.b64  	%rd956, %rd955, %rd953;
	shr.u64 	%rd957, %rd1543, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r645,%dummy}, %rd1543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r646}, %rd1543;
	}
	shf.r.wrap.b32 	%r647, %r646, %r645, 1;
	shf.r.wrap.b32 	%r648, %r645, %r646, 1;
	mov.b64 	%rd958, {%r648, %r647};
	xor.b64  	%rd959, %rd958, %rd957;
	shf.r.wrap.b32 	%r649, %r646, %r645, 8;
	shf.r.wrap.b32 	%r650, %r645, %r646, 8;
	mov.b64 	%rd960, {%r650, %r649};
	xor.b64  	%rd961, %rd959, %rd960;
	add.s64 	%rd962, %rd1567, %rd1544;
	add.s64 	%rd963, %rd962, %rd956;
	add.s64 	%rd1544, %rd963, %rd961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r651,%dummy}, %rd1545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r652}, %rd1545;
	}
	shf.r.wrap.b32 	%r653, %r652, %r651, 19;
	shf.r.wrap.b32 	%r654, %r651, %r652, 19;
	mov.b64 	%rd964, {%r654, %r653};
	shf.l.wrap.b32 	%r655, %r651, %r652, 3;
	shf.l.wrap.b32 	%r656, %r652, %r651, 3;
	mov.b64 	%rd965, {%r656, %r655};
	shr.u64 	%rd966, %rd1545, 6;
	xor.b64  	%rd967, %rd964, %rd966;
	xor.b64  	%rd968, %rd967, %rd965;
	shr.u64 	%rd969, %rd1542, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r657,%dummy}, %rd1542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r658}, %rd1542;
	}
	shf.r.wrap.b32 	%r659, %r658, %r657, 1;
	shf.r.wrap.b32 	%r660, %r657, %r658, 1;
	mov.b64 	%rd970, {%r660, %r659};
	xor.b64  	%rd971, %rd970, %rd969;
	shf.r.wrap.b32 	%r661, %r658, %r657, 8;
	shf.r.wrap.b32 	%r662, %r657, %r658, 8;
	mov.b64 	%rd972, {%r662, %r661};
	xor.b64  	%rd973, %rd971, %rd972;
	add.s64 	%rd974, %rd1566, %rd1543;
	add.s64 	%rd975, %rd974, %rd968;
	add.s64 	%rd1543, %rd975, %rd973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r663,%dummy}, %rd1544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r664}, %rd1544;
	}
	shf.r.wrap.b32 	%r665, %r664, %r663, 19;
	shf.r.wrap.b32 	%r666, %r663, %r664, 19;
	mov.b64 	%rd976, {%r666, %r665};
	shf.l.wrap.b32 	%r667, %r663, %r664, 3;
	shf.l.wrap.b32 	%r668, %r664, %r663, 3;
	mov.b64 	%rd977, {%r668, %r667};
	shr.u64 	%rd978, %rd1544, 6;
	xor.b64  	%rd979, %rd976, %rd978;
	xor.b64  	%rd980, %rd979, %rd977;
	shr.u64 	%rd981, %rd1541, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r669,%dummy}, %rd1541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r670}, %rd1541;
	}
	shf.r.wrap.b32 	%r671, %r670, %r669, 1;
	shf.r.wrap.b32 	%r672, %r669, %r670, 1;
	mov.b64 	%rd982, {%r672, %r671};
	xor.b64  	%rd983, %rd982, %rd981;
	shf.r.wrap.b32 	%r673, %r670, %r669, 8;
	shf.r.wrap.b32 	%r674, %r669, %r670, 8;
	mov.b64 	%rd984, {%r674, %r673};
	xor.b64  	%rd985, %rd983, %rd984;
	add.s64 	%rd986, %rd1565, %rd1542;
	add.s64 	%rd987, %rd986, %rd980;
	add.s64 	%rd1542, %rd987, %rd985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r675,%dummy}, %rd1543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r676}, %rd1543;
	}
	shf.r.wrap.b32 	%r677, %r676, %r675, 19;
	shf.r.wrap.b32 	%r678, %r675, %r676, 19;
	mov.b64 	%rd988, {%r678, %r677};
	shf.l.wrap.b32 	%r679, %r675, %r676, 3;
	shf.l.wrap.b32 	%r680, %r676, %r675, 3;
	mov.b64 	%rd989, {%r680, %r679};
	shr.u64 	%rd990, %rd1543, 6;
	xor.b64  	%rd991, %rd988, %rd990;
	xor.b64  	%rd992, %rd991, %rd989;
	shr.u64 	%rd993, %rd1540, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r681,%dummy}, %rd1540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r682}, %rd1540;
	}
	shf.r.wrap.b32 	%r683, %r682, %r681, 1;
	shf.r.wrap.b32 	%r684, %r681, %r682, 1;
	mov.b64 	%rd994, {%r684, %r683};
	xor.b64  	%rd995, %rd994, %rd993;
	shf.r.wrap.b32 	%r685, %r682, %r681, 8;
	shf.r.wrap.b32 	%r686, %r681, %r682, 8;
	mov.b64 	%rd996, {%r686, %r685};
	xor.b64  	%rd997, %rd995, %rd996;
	add.s64 	%rd998, %rd1564, %rd1541;
	add.s64 	%rd999, %rd998, %rd992;
	add.s64 	%rd1541, %rd999, %rd997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r687,%dummy}, %rd1542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r688}, %rd1542;
	}
	shf.r.wrap.b32 	%r689, %r688, %r687, 19;
	shf.r.wrap.b32 	%r690, %r687, %r688, 19;
	mov.b64 	%rd1000, {%r690, %r689};
	shf.l.wrap.b32 	%r691, %r687, %r688, 3;
	shf.l.wrap.b32 	%r692, %r688, %r687, 3;
	mov.b64 	%rd1001, {%r692, %r691};
	shr.u64 	%rd1002, %rd1542, 6;
	xor.b64  	%rd1003, %rd1000, %rd1002;
	xor.b64  	%rd1004, %rd1003, %rd1001;
	shr.u64 	%rd1005, %rd1571, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r693,%dummy}, %rd1571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r694}, %rd1571;
	}
	shf.r.wrap.b32 	%r695, %r694, %r693, 1;
	shf.r.wrap.b32 	%r696, %r693, %r694, 1;
	mov.b64 	%rd1006, {%r696, %r695};
	xor.b64  	%rd1007, %rd1006, %rd1005;
	shf.r.wrap.b32 	%r697, %r694, %r693, 8;
	shf.r.wrap.b32 	%r698, %r693, %r694, 8;
	mov.b64 	%rd1008, {%r698, %r697};
	xor.b64  	%rd1009, %rd1007, %rd1008;
	add.s64 	%rd1010, %rd1547, %rd1540;
	add.s64 	%rd1011, %rd1010, %rd1004;
	add.s64 	%rd1540, %rd1011, %rd1009;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r699,%dummy}, %rd1541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r700}, %rd1541;
	}
	shf.r.wrap.b32 	%r701, %r700, %r699, 19;
	shf.r.wrap.b32 	%r702, %r699, %r700, 19;
	mov.b64 	%rd1012, {%r702, %r701};
	shf.l.wrap.b32 	%r703, %r699, %r700, 3;
	shf.l.wrap.b32 	%r704, %r700, %r699, 3;
	mov.b64 	%rd1013, {%r704, %r703};
	shr.u64 	%rd1014, %rd1541, 6;
	xor.b64  	%rd1015, %rd1012, %rd1014;
	xor.b64  	%rd1016, %rd1015, %rd1013;
	shr.u64 	%rd1017, %rd1570, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r705,%dummy}, %rd1570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r706}, %rd1570;
	}
	shf.r.wrap.b32 	%r707, %r706, %r705, 1;
	shf.r.wrap.b32 	%r708, %r705, %r706, 1;
	mov.b64 	%rd1018, {%r708, %r707};
	xor.b64  	%rd1019, %rd1018, %rd1017;
	shf.r.wrap.b32 	%r709, %r706, %r705, 8;
	shf.r.wrap.b32 	%r710, %r705, %r706, 8;
	mov.b64 	%rd1020, {%r710, %r709};
	xor.b64  	%rd1021, %rd1019, %rd1020;
	add.s64 	%rd1022, %rd1546, %rd1571;
	add.s64 	%rd1023, %rd1022, %rd1016;
	add.s64 	%rd1571, %rd1023, %rd1021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r711,%dummy}, %rd1540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r712}, %rd1540;
	}
	shf.r.wrap.b32 	%r713, %r712, %r711, 19;
	shf.r.wrap.b32 	%r714, %r711, %r712, 19;
	mov.b64 	%rd1024, {%r714, %r713};
	shf.l.wrap.b32 	%r715, %r711, %r712, 3;
	shf.l.wrap.b32 	%r716, %r712, %r711, 3;
	mov.b64 	%rd1025, {%r716, %r715};
	shr.u64 	%rd1026, %rd1540, 6;
	xor.b64  	%rd1027, %rd1024, %rd1026;
	xor.b64  	%rd1028, %rd1027, %rd1025;
	shr.u64 	%rd1029, %rd1569, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r717,%dummy}, %rd1569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r718}, %rd1569;
	}
	shf.r.wrap.b32 	%r719, %r718, %r717, 1;
	shf.r.wrap.b32 	%r720, %r717, %r718, 1;
	mov.b64 	%rd1030, {%r720, %r719};
	xor.b64  	%rd1031, %rd1030, %rd1029;
	shf.r.wrap.b32 	%r721, %r718, %r717, 8;
	shf.r.wrap.b32 	%r722, %r717, %r718, 8;
	mov.b64 	%rd1032, {%r722, %r721};
	xor.b64  	%rd1033, %rd1031, %rd1032;
	add.s64 	%rd1034, %rd1545, %rd1570;
	add.s64 	%rd1035, %rd1034, %rd1028;
	add.s64 	%rd1570, %rd1035, %rd1033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r723,%dummy}, %rd1571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r724}, %rd1571;
	}
	shf.r.wrap.b32 	%r725, %r724, %r723, 19;
	shf.r.wrap.b32 	%r726, %r723, %r724, 19;
	mov.b64 	%rd1036, {%r726, %r725};
	shf.l.wrap.b32 	%r727, %r723, %r724, 3;
	shf.l.wrap.b32 	%r728, %r724, %r723, 3;
	mov.b64 	%rd1037, {%r728, %r727};
	shr.u64 	%rd1038, %rd1571, 6;
	xor.b64  	%rd1039, %rd1036, %rd1038;
	xor.b64  	%rd1040, %rd1039, %rd1037;
	shr.u64 	%rd1041, %rd1568, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r729,%dummy}, %rd1568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r730}, %rd1568;
	}
	shf.r.wrap.b32 	%r731, %r730, %r729, 1;
	shf.r.wrap.b32 	%r732, %r729, %r730, 1;
	mov.b64 	%rd1042, {%r732, %r731};
	xor.b64  	%rd1043, %rd1042, %rd1041;
	shf.r.wrap.b32 	%r733, %r730, %r729, 8;
	shf.r.wrap.b32 	%r734, %r729, %r730, 8;
	mov.b64 	%rd1044, {%r734, %r733};
	xor.b64  	%rd1045, %rd1043, %rd1044;
	add.s64 	%rd1046, %rd1544, %rd1569;
	add.s64 	%rd1047, %rd1046, %rd1040;
	add.s64 	%rd1569, %rd1047, %rd1045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r735,%dummy}, %rd1570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r736}, %rd1570;
	}
	shf.r.wrap.b32 	%r737, %r736, %r735, 19;
	shf.r.wrap.b32 	%r738, %r735, %r736, 19;
	mov.b64 	%rd1048, {%r738, %r737};
	shf.l.wrap.b32 	%r739, %r735, %r736, 3;
	shf.l.wrap.b32 	%r740, %r736, %r735, 3;
	mov.b64 	%rd1049, {%r740, %r739};
	shr.u64 	%rd1050, %rd1570, 6;
	xor.b64  	%rd1051, %rd1048, %rd1050;
	xor.b64  	%rd1052, %rd1051, %rd1049;
	shr.u64 	%rd1053, %rd1567, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r741,%dummy}, %rd1567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r742}, %rd1567;
	}
	shf.r.wrap.b32 	%r743, %r742, %r741, 1;
	shf.r.wrap.b32 	%r744, %r741, %r742, 1;
	mov.b64 	%rd1054, {%r744, %r743};
	xor.b64  	%rd1055, %rd1054, %rd1053;
	shf.r.wrap.b32 	%r745, %r742, %r741, 8;
	shf.r.wrap.b32 	%r746, %r741, %r742, 8;
	mov.b64 	%rd1056, {%r746, %r745};
	xor.b64  	%rd1057, %rd1055, %rd1056;
	add.s64 	%rd1058, %rd1543, %rd1568;
	add.s64 	%rd1059, %rd1058, %rd1052;
	add.s64 	%rd1568, %rd1059, %rd1057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r747,%dummy}, %rd1569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r748}, %rd1569;
	}
	shf.r.wrap.b32 	%r749, %r748, %r747, 19;
	shf.r.wrap.b32 	%r750, %r747, %r748, 19;
	mov.b64 	%rd1060, {%r750, %r749};
	shf.l.wrap.b32 	%r751, %r747, %r748, 3;
	shf.l.wrap.b32 	%r752, %r748, %r747, 3;
	mov.b64 	%rd1061, {%r752, %r751};
	shr.u64 	%rd1062, %rd1569, 6;
	xor.b64  	%rd1063, %rd1060, %rd1062;
	xor.b64  	%rd1064, %rd1063, %rd1061;
	shr.u64 	%rd1065, %rd1566, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r753,%dummy}, %rd1566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r754}, %rd1566;
	}
	shf.r.wrap.b32 	%r755, %r754, %r753, 1;
	shf.r.wrap.b32 	%r756, %r753, %r754, 1;
	mov.b64 	%rd1066, {%r756, %r755};
	xor.b64  	%rd1067, %rd1066, %rd1065;
	shf.r.wrap.b32 	%r757, %r754, %r753, 8;
	shf.r.wrap.b32 	%r758, %r753, %r754, 8;
	mov.b64 	%rd1068, {%r758, %r757};
	xor.b64  	%rd1069, %rd1067, %rd1068;
	add.s64 	%rd1070, %rd1542, %rd1567;
	add.s64 	%rd1071, %rd1070, %rd1064;
	add.s64 	%rd1567, %rd1071, %rd1069;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r759,%dummy}, %rd1568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r760}, %rd1568;
	}
	shf.r.wrap.b32 	%r761, %r760, %r759, 19;
	shf.r.wrap.b32 	%r762, %r759, %r760, 19;
	mov.b64 	%rd1072, {%r762, %r761};
	shf.l.wrap.b32 	%r763, %r759, %r760, 3;
	shf.l.wrap.b32 	%r764, %r760, %r759, 3;
	mov.b64 	%rd1073, {%r764, %r763};
	shr.u64 	%rd1074, %rd1568, 6;
	xor.b64  	%rd1075, %rd1072, %rd1074;
	xor.b64  	%rd1076, %rd1075, %rd1073;
	shr.u64 	%rd1077, %rd1565, 7;
	shf.r.wrap.b32 	%r765, %r604, %r603, 1;
	shf.r.wrap.b32 	%r766, %r603, %r604, 1;
	mov.b64 	%rd1078, {%r766, %r765};
	xor.b64  	%rd1079, %rd1078, %rd1077;
	shf.r.wrap.b32 	%r767, %r604, %r603, 8;
	shf.r.wrap.b32 	%r768, %r603, %r604, 8;
	mov.b64 	%rd1080, {%r768, %r767};
	xor.b64  	%rd1081, %rd1079, %rd1080;
	add.s64 	%rd1082, %rd1541, %rd1566;
	add.s64 	%rd1083, %rd1082, %rd1076;
	add.s64 	%rd1566, %rd1083, %rd1081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r769,%dummy}, %rd1567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r770}, %rd1567;
	}
	shf.r.wrap.b32 	%r771, %r770, %r769, 19;
	shf.r.wrap.b32 	%r772, %r769, %r770, 19;
	mov.b64 	%rd1084, {%r772, %r771};
	shf.l.wrap.b32 	%r773, %r769, %r770, 3;
	shf.l.wrap.b32 	%r774, %r770, %r769, 3;
	mov.b64 	%rd1085, {%r774, %r773};
	shr.u64 	%rd1086, %rd1567, 6;
	xor.b64  	%rd1087, %rd1084, %rd1086;
	xor.b64  	%rd1088, %rd1087, %rd1085;
	shr.u64 	%rd1089, %rd1564, 7;
	shf.r.wrap.b32 	%r775, %r616, %r615, 1;
	shf.r.wrap.b32 	%r776, %r615, %r616, 1;
	mov.b64 	%rd1090, {%r776, %r775};
	xor.b64  	%rd1091, %rd1090, %rd1089;
	shf.r.wrap.b32 	%r777, %r616, %r615, 8;
	shf.r.wrap.b32 	%r778, %r615, %r616, 8;
	mov.b64 	%rd1092, {%r778, %r777};
	xor.b64  	%rd1093, %rd1091, %rd1092;
	add.s64 	%rd1094, %rd1540, %rd1565;
	add.s64 	%rd1095, %rd1094, %rd1088;
	add.s64 	%rd1565, %rd1095, %rd1093;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r779,%dummy}, %rd1566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r780}, %rd1566;
	}
	shf.r.wrap.b32 	%r781, %r780, %r779, 19;
	shf.r.wrap.b32 	%r782, %r779, %r780, 19;
	mov.b64 	%rd1096, {%r782, %r781};
	shf.l.wrap.b32 	%r783, %r779, %r780, 3;
	shf.l.wrap.b32 	%r784, %r780, %r779, 3;
	mov.b64 	%rd1097, {%r784, %r783};
	shr.u64 	%rd1098, %rd1566, 6;
	xor.b64  	%rd1099, %rd1096, %rd1098;
	xor.b64  	%rd1100, %rd1099, %rd1097;
	shf.r.wrap.b32 	%r785, %r628, %r627, 1;
	shf.r.wrap.b32 	%r786, %r627, %r628, 1;
	mov.b64 	%rd1101, {%r786, %r785};
	shf.r.wrap.b32 	%r787, %r628, %r627, 8;
	shf.r.wrap.b32 	%r788, %r627, %r628, 8;
	mov.b64 	%rd1102, {%r788, %r787};
	shr.u64 	%rd1103, %rd1547, 7;
	xor.b64  	%rd1104, %rd1101, %rd1103;
	xor.b64  	%rd1105, %rd1104, %rd1102;
	add.s64 	%rd1106, %rd1571, %rd1564;
	add.s64 	%rd1107, %rd1106, %rd1100;
	add.s64 	%rd1564, %rd1107, %rd1105;
	mul.wide.s32 	%rd1108, %r1101, 8;
	mov.u64 	%rd1109, k_sha512;
	add.s64 	%rd1110, %rd1109, %rd1108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r789,%dummy}, %rd1576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r790}, %rd1576;
	}
	shf.r.wrap.b32 	%r791, %r790, %r789, 18;
	shf.r.wrap.b32 	%r792, %r789, %r790, 18;
	mov.b64 	%rd1111, {%r792, %r791};
	shf.r.wrap.b32 	%r793, %r790, %r789, 14;
	shf.r.wrap.b32 	%r794, %r789, %r790, 14;
	mov.b64 	%rd1112, {%r794, %r793};
	xor.b64  	%rd1113, %rd1111, %rd1112;
	shf.l.wrap.b32 	%r795, %r789, %r790, 23;
	shf.l.wrap.b32 	%r796, %r790, %r789, 23;
	mov.b64 	%rd1114, {%r796, %r795};
	xor.b64  	%rd1115, %rd1113, %rd1114;
	xor.b64  	%rd1116, %rd1577, %rd1578;
	and.b64  	%rd1117, %rd1576, %rd1116;
	xor.b64  	%rd1118, %rd1117, %rd1578;
	add.s64 	%rd1119, %rd1118, %rd1579;
	add.s64 	%rd1120, %rd1119, %rd1547;
	ld.const.u64 	%rd1121, [%rd1110];
	add.s64 	%rd1122, %rd1120, %rd1121;
	add.s64 	%rd1123, %rd1122, %rd1115;
	add.s64 	%rd1124, %rd1123, %rd1575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r797}, %rd1572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r798,%dummy}, %rd1572;
	}
	shf.l.wrap.b32 	%r799, %r798, %r797, 30;
	shf.l.wrap.b32 	%r800, %r797, %r798, 30;
	mov.b64 	%rd1125, {%r800, %r799};
	shf.r.wrap.b32 	%r801, %r797, %r798, 28;
	shf.r.wrap.b32 	%r802, %r798, %r797, 28;
	mov.b64 	%rd1126, {%r802, %r801};
	xor.b64  	%rd1127, %rd1125, %rd1126;
	shf.l.wrap.b32 	%r803, %r798, %r797, 25;
	shf.l.wrap.b32 	%r804, %r797, %r798, 25;
	mov.b64 	%rd1128, {%r804, %r803};
	xor.b64  	%rd1129, %rd1127, %rd1128;
	xor.b64  	%rd1130, %rd1572, %rd1573;
	and.b64  	%rd1131, %rd1130, %rd1574;
	and.b64  	%rd1132, %rd1572, %rd1573;
	or.b64  	%rd1133, %rd1131, %rd1132;
	add.s64 	%rd1134, %rd1123, %rd1133;
	add.s64 	%rd1135, %rd1134, %rd1129;
	add.s32 	%r805, %r1101, 1;
	mul.wide.s32 	%rd1136, %r805, 8;
	add.s64 	%rd1137, %rd1109, %rd1136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r806,%dummy}, %rd1124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r807}, %rd1124;
	}
	shf.r.wrap.b32 	%r808, %r807, %r806, 14;
	shf.r.wrap.b32 	%r809, %r806, %r807, 14;
	mov.b64 	%rd1138, {%r809, %r808};
	shf.r.wrap.b32 	%r810, %r807, %r806, 18;
	shf.r.wrap.b32 	%r811, %r806, %r807, 18;
	mov.b64 	%rd1139, {%r811, %r810};
	xor.b64  	%rd1140, %rd1139, %rd1138;
	shf.l.wrap.b32 	%r812, %r806, %r807, 23;
	shf.l.wrap.b32 	%r813, %r807, %r806, 23;
	mov.b64 	%rd1141, {%r813, %r812};
	xor.b64  	%rd1142, %rd1140, %rd1141;
	xor.b64  	%rd1143, %rd1576, %rd1577;
	and.b64  	%rd1144, %rd1124, %rd1143;
	xor.b64  	%rd1145, %rd1144, %rd1577;
	add.s64 	%rd1146, %rd1546, %rd1578;
	ld.const.u64 	%rd1147, [%rd1137];
	add.s64 	%rd1148, %rd1146, %rd1147;
	add.s64 	%rd1149, %rd1148, %rd1145;
	add.s64 	%rd1150, %rd1149, %rd1142;
	add.s64 	%rd1151, %rd1150, %rd1574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r814,%dummy}, %rd1135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r815}, %rd1135;
	}
	shf.r.wrap.b32 	%r816, %r815, %r814, 28;
	shf.r.wrap.b32 	%r817, %r814, %r815, 28;
	mov.b64 	%rd1152, {%r817, %r816};
	shf.l.wrap.b32 	%r818, %r814, %r815, 30;
	shf.l.wrap.b32 	%r819, %r815, %r814, 30;
	mov.b64 	%rd1153, {%r819, %r818};
	xor.b64  	%rd1154, %rd1153, %rd1152;
	shf.l.wrap.b32 	%r820, %r814, %r815, 25;
	shf.l.wrap.b32 	%r821, %r815, %r814, 25;
	mov.b64 	%rd1155, {%r821, %r820};
	xor.b64  	%rd1156, %rd1154, %rd1155;
	and.b64  	%rd1157, %rd1135, %rd1572;
	xor.b64  	%rd1158, %rd1135, %rd1572;
	and.b64  	%rd1159, %rd1158, %rd1573;
	or.b64  	%rd1160, %rd1159, %rd1157;
	add.s64 	%rd1161, %rd1150, %rd1160;
	add.s64 	%rd1162, %rd1161, %rd1156;
	add.s32 	%r822, %r1101, 2;
	mul.wide.s32 	%rd1163, %r822, 8;
	add.s64 	%rd1164, %rd1109, %rd1163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r823,%dummy}, %rd1151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r824}, %rd1151;
	}
	shf.r.wrap.b32 	%r825, %r824, %r823, 14;
	shf.r.wrap.b32 	%r826, %r823, %r824, 14;
	mov.b64 	%rd1165, {%r826, %r825};
	shf.r.wrap.b32 	%r827, %r824, %r823, 18;
	shf.r.wrap.b32 	%r828, %r823, %r824, 18;
	mov.b64 	%rd1166, {%r828, %r827};
	xor.b64  	%rd1167, %rd1166, %rd1165;
	shf.l.wrap.b32 	%r829, %r823, %r824, 23;
	shf.l.wrap.b32 	%r830, %r824, %r823, 23;
	mov.b64 	%rd1168, {%r830, %r829};
	xor.b64  	%rd1169, %rd1167, %rd1168;
	xor.b64  	%rd1170, %rd1124, %rd1576;
	and.b64  	%rd1171, %rd1151, %rd1170;
	xor.b64  	%rd1172, %rd1171, %rd1576;
	add.s64 	%rd1173, %rd1545, %rd1577;
	ld.const.u64 	%rd1174, [%rd1164];
	add.s64 	%rd1175, %rd1173, %rd1174;
	add.s64 	%rd1176, %rd1175, %rd1172;
	add.s64 	%rd1177, %rd1176, %rd1169;
	add.s64 	%rd1178, %rd1177, %rd1573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r831,%dummy}, %rd1162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r832}, %rd1162;
	}
	shf.r.wrap.b32 	%r833, %r832, %r831, 28;
	shf.r.wrap.b32 	%r834, %r831, %r832, 28;
	mov.b64 	%rd1179, {%r834, %r833};
	shf.l.wrap.b32 	%r835, %r831, %r832, 30;
	shf.l.wrap.b32 	%r836, %r832, %r831, 30;
	mov.b64 	%rd1180, {%r836, %r835};
	xor.b64  	%rd1181, %rd1180, %rd1179;
	shf.l.wrap.b32 	%r837, %r831, %r832, 25;
	shf.l.wrap.b32 	%r838, %r832, %r831, 25;
	mov.b64 	%rd1182, {%r838, %r837};
	xor.b64  	%rd1183, %rd1181, %rd1182;
	and.b64  	%rd1184, %rd1162, %rd1135;
	xor.b64  	%rd1185, %rd1162, %rd1135;
	and.b64  	%rd1186, %rd1185, %rd1572;
	or.b64  	%rd1187, %rd1186, %rd1184;
	add.s64 	%rd1188, %rd1177, %rd1187;
	add.s64 	%rd1189, %rd1188, %rd1183;
	add.s32 	%r839, %r1101, 3;
	mul.wide.s32 	%rd1190, %r839, 8;
	add.s64 	%rd1191, %rd1109, %rd1190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r840,%dummy}, %rd1178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r841}, %rd1178;
	}
	shf.r.wrap.b32 	%r842, %r841, %r840, 14;
	shf.r.wrap.b32 	%r843, %r840, %r841, 14;
	mov.b64 	%rd1192, {%r843, %r842};
	shf.r.wrap.b32 	%r844, %r841, %r840, 18;
	shf.r.wrap.b32 	%r845, %r840, %r841, 18;
	mov.b64 	%rd1193, {%r845, %r844};
	xor.b64  	%rd1194, %rd1193, %rd1192;
	shf.l.wrap.b32 	%r846, %r840, %r841, 23;
	shf.l.wrap.b32 	%r847, %r841, %r840, 23;
	mov.b64 	%rd1195, {%r847, %r846};
	xor.b64  	%rd1196, %rd1194, %rd1195;
	xor.b64  	%rd1197, %rd1151, %rd1124;
	and.b64  	%rd1198, %rd1178, %rd1197;
	xor.b64  	%rd1199, %rd1198, %rd1124;
	add.s64 	%rd1200, %rd1544, %rd1576;
	ld.const.u64 	%rd1201, [%rd1191];
	add.s64 	%rd1202, %rd1200, %rd1201;
	add.s64 	%rd1203, %rd1202, %rd1199;
	add.s64 	%rd1204, %rd1203, %rd1196;
	add.s64 	%rd1205, %rd1204, %rd1572;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r848,%dummy}, %rd1189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r849}, %rd1189;
	}
	shf.r.wrap.b32 	%r850, %r849, %r848, 28;
	shf.r.wrap.b32 	%r851, %r848, %r849, 28;
	mov.b64 	%rd1206, {%r851, %r850};
	shf.l.wrap.b32 	%r852, %r848, %r849, 30;
	shf.l.wrap.b32 	%r853, %r849, %r848, 30;
	mov.b64 	%rd1207, {%r853, %r852};
	xor.b64  	%rd1208, %rd1207, %rd1206;
	shf.l.wrap.b32 	%r854, %r848, %r849, 25;
	shf.l.wrap.b32 	%r855, %r849, %r848, 25;
	mov.b64 	%rd1209, {%r855, %r854};
	xor.b64  	%rd1210, %rd1208, %rd1209;
	and.b64  	%rd1211, %rd1189, %rd1162;
	xor.b64  	%rd1212, %rd1189, %rd1162;
	and.b64  	%rd1213, %rd1212, %rd1135;
	or.b64  	%rd1214, %rd1213, %rd1211;
	add.s64 	%rd1215, %rd1204, %rd1214;
	add.s64 	%rd1216, %rd1215, %rd1210;
	add.s32 	%r856, %r1101, 4;
	mul.wide.s32 	%rd1217, %r856, 8;
	add.s64 	%rd1218, %rd1109, %rd1217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r857,%dummy}, %rd1205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r858}, %rd1205;
	}
	shf.r.wrap.b32 	%r859, %r858, %r857, 14;
	shf.r.wrap.b32 	%r860, %r857, %r858, 14;
	mov.b64 	%rd1219, {%r860, %r859};
	shf.r.wrap.b32 	%r861, %r858, %r857, 18;
	shf.r.wrap.b32 	%r862, %r857, %r858, 18;
	mov.b64 	%rd1220, {%r862, %r861};
	xor.b64  	%rd1221, %rd1220, %rd1219;
	shf.l.wrap.b32 	%r863, %r857, %r858, 23;
	shf.l.wrap.b32 	%r864, %r858, %r857, 23;
	mov.b64 	%rd1222, {%r864, %r863};
	xor.b64  	%rd1223, %rd1221, %rd1222;
	xor.b64  	%rd1224, %rd1178, %rd1151;
	and.b64  	%rd1225, %rd1205, %rd1224;
	xor.b64  	%rd1226, %rd1225, %rd1151;
	add.s64 	%rd1227, %rd1124, %rd1543;
	ld.const.u64 	%rd1228, [%rd1218];
	add.s64 	%rd1229, %rd1227, %rd1228;
	add.s64 	%rd1230, %rd1229, %rd1226;
	add.s64 	%rd1231, %rd1230, %rd1223;
	add.s64 	%rd1232, %rd1231, %rd1135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r865,%dummy}, %rd1216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r866}, %rd1216;
	}
	shf.r.wrap.b32 	%r867, %r866, %r865, 28;
	shf.r.wrap.b32 	%r868, %r865, %r866, 28;
	mov.b64 	%rd1233, {%r868, %r867};
	shf.l.wrap.b32 	%r869, %r865, %r866, 30;
	shf.l.wrap.b32 	%r870, %r866, %r865, 30;
	mov.b64 	%rd1234, {%r870, %r869};
	xor.b64  	%rd1235, %rd1234, %rd1233;
	shf.l.wrap.b32 	%r871, %r865, %r866, 25;
	shf.l.wrap.b32 	%r872, %r866, %r865, 25;
	mov.b64 	%rd1236, {%r872, %r871};
	xor.b64  	%rd1237, %rd1235, %rd1236;
	and.b64  	%rd1238, %rd1216, %rd1189;
	xor.b64  	%rd1239, %rd1216, %rd1189;
	and.b64  	%rd1240, %rd1239, %rd1162;
	or.b64  	%rd1241, %rd1240, %rd1238;
	add.s64 	%rd1242, %rd1231, %rd1241;
	add.s64 	%rd1243, %rd1242, %rd1237;
	add.s32 	%r873, %r1101, 5;
	mul.wide.s32 	%rd1244, %r873, 8;
	add.s64 	%rd1245, %rd1109, %rd1244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r874,%dummy}, %rd1232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r875}, %rd1232;
	}
	shf.r.wrap.b32 	%r876, %r875, %r874, 14;
	shf.r.wrap.b32 	%r877, %r874, %r875, 14;
	mov.b64 	%rd1246, {%r877, %r876};
	shf.r.wrap.b32 	%r878, %r875, %r874, 18;
	shf.r.wrap.b32 	%r879, %r874, %r875, 18;
	mov.b64 	%rd1247, {%r879, %r878};
	xor.b64  	%rd1248, %rd1247, %rd1246;
	shf.l.wrap.b32 	%r880, %r874, %r875, 23;
	shf.l.wrap.b32 	%r881, %r875, %r874, 23;
	mov.b64 	%rd1249, {%r881, %r880};
	xor.b64  	%rd1250, %rd1248, %rd1249;
	xor.b64  	%rd1251, %rd1205, %rd1178;
	and.b64  	%rd1252, %rd1232, %rd1251;
	xor.b64  	%rd1253, %rd1252, %rd1178;
	add.s64 	%rd1254, %rd1151, %rd1542;
	ld.const.u64 	%rd1255, [%rd1245];
	add.s64 	%rd1256, %rd1254, %rd1255;
	add.s64 	%rd1257, %rd1256, %rd1253;
	add.s64 	%rd1258, %rd1257, %rd1250;
	add.s64 	%rd1259, %rd1258, %rd1162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r882,%dummy}, %rd1243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r883}, %rd1243;
	}
	shf.r.wrap.b32 	%r884, %r883, %r882, 28;
	shf.r.wrap.b32 	%r885, %r882, %r883, 28;
	mov.b64 	%rd1260, {%r885, %r884};
	shf.l.wrap.b32 	%r886, %r882, %r883, 30;
	shf.l.wrap.b32 	%r887, %r883, %r882, 30;
	mov.b64 	%rd1261, {%r887, %r886};
	xor.b64  	%rd1262, %rd1261, %rd1260;
	shf.l.wrap.b32 	%r888, %r882, %r883, 25;
	shf.l.wrap.b32 	%r889, %r883, %r882, 25;
	mov.b64 	%rd1263, {%r889, %r888};
	xor.b64  	%rd1264, %rd1262, %rd1263;
	and.b64  	%rd1265, %rd1243, %rd1216;
	xor.b64  	%rd1266, %rd1243, %rd1216;
	and.b64  	%rd1267, %rd1266, %rd1189;
	or.b64  	%rd1268, %rd1267, %rd1265;
	add.s64 	%rd1269, %rd1258, %rd1268;
	add.s64 	%rd1270, %rd1269, %rd1264;
	add.s32 	%r890, %r1101, 6;
	mul.wide.s32 	%rd1271, %r890, 8;
	add.s64 	%rd1272, %rd1109, %rd1271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r891,%dummy}, %rd1259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r892}, %rd1259;
	}
	shf.r.wrap.b32 	%r893, %r892, %r891, 14;
	shf.r.wrap.b32 	%r894, %r891, %r892, 14;
	mov.b64 	%rd1273, {%r894, %r893};
	shf.r.wrap.b32 	%r895, %r892, %r891, 18;
	shf.r.wrap.b32 	%r896, %r891, %r892, 18;
	mov.b64 	%rd1274, {%r896, %r895};
	xor.b64  	%rd1275, %rd1274, %rd1273;
	shf.l.wrap.b32 	%r897, %r891, %r892, 23;
	shf.l.wrap.b32 	%r898, %r892, %r891, 23;
	mov.b64 	%rd1276, {%r898, %r897};
	xor.b64  	%rd1277, %rd1275, %rd1276;
	xor.b64  	%rd1278, %rd1232, %rd1205;
	and.b64  	%rd1279, %rd1259, %rd1278;
	xor.b64  	%rd1280, %rd1279, %rd1205;
	add.s64 	%rd1281, %rd1178, %rd1541;
	ld.const.u64 	%rd1282, [%rd1272];
	add.s64 	%rd1283, %rd1281, %rd1282;
	add.s64 	%rd1284, %rd1283, %rd1280;
	add.s64 	%rd1285, %rd1284, %rd1277;
	add.s64 	%rd1286, %rd1285, %rd1189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r899,%dummy}, %rd1270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r900}, %rd1270;
	}
	shf.r.wrap.b32 	%r901, %r900, %r899, 28;
	shf.r.wrap.b32 	%r902, %r899, %r900, 28;
	mov.b64 	%rd1287, {%r902, %r901};
	shf.l.wrap.b32 	%r903, %r899, %r900, 30;
	shf.l.wrap.b32 	%r904, %r900, %r899, 30;
	mov.b64 	%rd1288, {%r904, %r903};
	xor.b64  	%rd1289, %rd1288, %rd1287;
	shf.l.wrap.b32 	%r905, %r899, %r900, 25;
	shf.l.wrap.b32 	%r906, %r900, %r899, 25;
	mov.b64 	%rd1290, {%r906, %r905};
	xor.b64  	%rd1291, %rd1289, %rd1290;
	and.b64  	%rd1292, %rd1270, %rd1243;
	xor.b64  	%rd1293, %rd1270, %rd1243;
	and.b64  	%rd1294, %rd1293, %rd1216;
	or.b64  	%rd1295, %rd1294, %rd1292;
	add.s64 	%rd1296, %rd1285, %rd1295;
	add.s64 	%rd1297, %rd1296, %rd1291;
	add.s32 	%r907, %r1101, 7;
	mul.wide.s32 	%rd1298, %r907, 8;
	add.s64 	%rd1299, %rd1109, %rd1298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r908,%dummy}, %rd1286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r909}, %rd1286;
	}
	shf.r.wrap.b32 	%r910, %r909, %r908, 14;
	shf.r.wrap.b32 	%r911, %r908, %r909, 14;
	mov.b64 	%rd1300, {%r911, %r910};
	shf.r.wrap.b32 	%r912, %r909, %r908, 18;
	shf.r.wrap.b32 	%r913, %r908, %r909, 18;
	mov.b64 	%rd1301, {%r913, %r912};
	xor.b64  	%rd1302, %rd1301, %rd1300;
	shf.l.wrap.b32 	%r914, %r908, %r909, 23;
	shf.l.wrap.b32 	%r915, %r909, %r908, 23;
	mov.b64 	%rd1303, {%r915, %r914};
	xor.b64  	%rd1304, %rd1302, %rd1303;
	xor.b64  	%rd1305, %rd1259, %rd1232;
	and.b64  	%rd1306, %rd1286, %rd1305;
	xor.b64  	%rd1307, %rd1306, %rd1232;
	add.s64 	%rd1308, %rd1205, %rd1540;
	ld.const.u64 	%rd1309, [%rd1299];
	add.s64 	%rd1310, %rd1308, %rd1309;
	add.s64 	%rd1311, %rd1310, %rd1307;
	add.s64 	%rd1312, %rd1311, %rd1304;
	add.s64 	%rd1313, %rd1312, %rd1216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r916,%dummy}, %rd1297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r917}, %rd1297;
	}
	shf.r.wrap.b32 	%r918, %r917, %r916, 28;
	shf.r.wrap.b32 	%r919, %r916, %r917, 28;
	mov.b64 	%rd1314, {%r919, %r918};
	shf.l.wrap.b32 	%r920, %r916, %r917, 30;
	shf.l.wrap.b32 	%r921, %r917, %r916, 30;
	mov.b64 	%rd1315, {%r921, %r920};
	xor.b64  	%rd1316, %rd1315, %rd1314;
	shf.l.wrap.b32 	%r922, %r916, %r917, 25;
	shf.l.wrap.b32 	%r923, %r917, %r916, 25;
	mov.b64 	%rd1317, {%r923, %r922};
	xor.b64  	%rd1318, %rd1316, %rd1317;
	and.b64  	%rd1319, %rd1297, %rd1270;
	xor.b64  	%rd1320, %rd1297, %rd1270;
	and.b64  	%rd1321, %rd1320, %rd1243;
	or.b64  	%rd1322, %rd1321, %rd1319;
	add.s64 	%rd1323, %rd1312, %rd1322;
	add.s64 	%rd1324, %rd1323, %rd1318;
	add.s32 	%r924, %r1101, 8;
	mul.wide.s32 	%rd1325, %r924, 8;
	add.s64 	%rd1326, %rd1109, %rd1325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r925,%dummy}, %rd1313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r926}, %rd1313;
	}
	shf.r.wrap.b32 	%r927, %r926, %r925, 14;
	shf.r.wrap.b32 	%r928, %r925, %r926, 14;
	mov.b64 	%rd1327, {%r928, %r927};
	shf.r.wrap.b32 	%r929, %r926, %r925, 18;
	shf.r.wrap.b32 	%r930, %r925, %r926, 18;
	mov.b64 	%rd1328, {%r930, %r929};
	xor.b64  	%rd1329, %rd1328, %rd1327;
	shf.l.wrap.b32 	%r931, %r925, %r926, 23;
	shf.l.wrap.b32 	%r932, %r926, %r925, 23;
	mov.b64 	%rd1330, {%r932, %r931};
	xor.b64  	%rd1331, %rd1329, %rd1330;
	xor.b64  	%rd1332, %rd1286, %rd1259;
	and.b64  	%rd1333, %rd1313, %rd1332;
	xor.b64  	%rd1334, %rd1333, %rd1259;
	add.s64 	%rd1335, %rd1232, %rd1571;
	ld.const.u64 	%rd1336, [%rd1326];
	add.s64 	%rd1337, %rd1335, %rd1336;
	add.s64 	%rd1338, %rd1337, %rd1334;
	add.s64 	%rd1339, %rd1338, %rd1331;
	add.s64 	%rd1340, %rd1339, %rd1243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r933,%dummy}, %rd1324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r934}, %rd1324;
	}
	shf.r.wrap.b32 	%r935, %r934, %r933, 28;
	shf.r.wrap.b32 	%r936, %r933, %r934, 28;
	mov.b64 	%rd1341, {%r936, %r935};
	shf.l.wrap.b32 	%r937, %r933, %r934, 30;
	shf.l.wrap.b32 	%r938, %r934, %r933, 30;
	mov.b64 	%rd1342, {%r938, %r937};
	xor.b64  	%rd1343, %rd1342, %rd1341;
	shf.l.wrap.b32 	%r939, %r933, %r934, 25;
	shf.l.wrap.b32 	%r940, %r934, %r933, 25;
	mov.b64 	%rd1344, {%r940, %r939};
	xor.b64  	%rd1345, %rd1343, %rd1344;
	and.b64  	%rd1346, %rd1324, %rd1297;
	xor.b64  	%rd1347, %rd1324, %rd1297;
	and.b64  	%rd1348, %rd1347, %rd1270;
	or.b64  	%rd1349, %rd1348, %rd1346;
	add.s64 	%rd1350, %rd1339, %rd1349;
	add.s64 	%rd1351, %rd1350, %rd1345;
	add.s32 	%r941, %r1101, 9;
	mul.wide.s32 	%rd1352, %r941, 8;
	add.s64 	%rd1353, %rd1109, %rd1352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r942,%dummy}, %rd1340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r943}, %rd1340;
	}
	shf.r.wrap.b32 	%r944, %r943, %r942, 14;
	shf.r.wrap.b32 	%r945, %r942, %r943, 14;
	mov.b64 	%rd1354, {%r945, %r944};
	shf.r.wrap.b32 	%r946, %r943, %r942, 18;
	shf.r.wrap.b32 	%r947, %r942, %r943, 18;
	mov.b64 	%rd1355, {%r947, %r946};
	xor.b64  	%rd1356, %rd1355, %rd1354;
	shf.l.wrap.b32 	%r948, %r942, %r943, 23;
	shf.l.wrap.b32 	%r949, %r943, %r942, 23;
	mov.b64 	%rd1357, {%r949, %r948};
	xor.b64  	%rd1358, %rd1356, %rd1357;
	xor.b64  	%rd1359, %rd1313, %rd1286;
	and.b64  	%rd1360, %rd1340, %rd1359;
	xor.b64  	%rd1361, %rd1360, %rd1286;
	add.s64 	%rd1362, %rd1259, %rd1570;
	ld.const.u64 	%rd1363, [%rd1353];
	add.s64 	%rd1364, %rd1362, %rd1363;
	add.s64 	%rd1365, %rd1364, %rd1361;
	add.s64 	%rd1366, %rd1365, %rd1358;
	add.s64 	%rd1367, %rd1366, %rd1270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r950,%dummy}, %rd1351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r951}, %rd1351;
	}
	shf.r.wrap.b32 	%r952, %r951, %r950, 28;
	shf.r.wrap.b32 	%r953, %r950, %r951, 28;
	mov.b64 	%rd1368, {%r953, %r952};
	shf.l.wrap.b32 	%r954, %r950, %r951, 30;
	shf.l.wrap.b32 	%r955, %r951, %r950, 30;
	mov.b64 	%rd1369, {%r955, %r954};
	xor.b64  	%rd1370, %rd1369, %rd1368;
	shf.l.wrap.b32 	%r956, %r950, %r951, 25;
	shf.l.wrap.b32 	%r957, %r951, %r950, 25;
	mov.b64 	%rd1371, {%r957, %r956};
	xor.b64  	%rd1372, %rd1370, %rd1371;
	and.b64  	%rd1373, %rd1351, %rd1324;
	xor.b64  	%rd1374, %rd1351, %rd1324;
	and.b64  	%rd1375, %rd1374, %rd1297;
	or.b64  	%rd1376, %rd1375, %rd1373;
	add.s64 	%rd1377, %rd1366, %rd1376;
	add.s64 	%rd1378, %rd1377, %rd1372;
	add.s32 	%r958, %r1101, 10;
	mul.wide.s32 	%rd1379, %r958, 8;
	add.s64 	%rd1380, %rd1109, %rd1379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r959,%dummy}, %rd1367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r960}, %rd1367;
	}
	shf.r.wrap.b32 	%r961, %r960, %r959, 14;
	shf.r.wrap.b32 	%r962, %r959, %r960, 14;
	mov.b64 	%rd1381, {%r962, %r961};
	shf.r.wrap.b32 	%r963, %r960, %r959, 18;
	shf.r.wrap.b32 	%r964, %r959, %r960, 18;
	mov.b64 	%rd1382, {%r964, %r963};
	xor.b64  	%rd1383, %rd1382, %rd1381;
	shf.l.wrap.b32 	%r965, %r959, %r960, 23;
	shf.l.wrap.b32 	%r966, %r960, %r959, 23;
	mov.b64 	%rd1384, {%r966, %r965};
	xor.b64  	%rd1385, %rd1383, %rd1384;
	xor.b64  	%rd1386, %rd1340, %rd1313;
	and.b64  	%rd1387, %rd1367, %rd1386;
	xor.b64  	%rd1388, %rd1387, %rd1313;
	add.s64 	%rd1389, %rd1286, %rd1569;
	ld.const.u64 	%rd1390, [%rd1380];
	add.s64 	%rd1391, %rd1389, %rd1390;
	add.s64 	%rd1392, %rd1391, %rd1388;
	add.s64 	%rd1393, %rd1392, %rd1385;
	add.s64 	%rd1394, %rd1393, %rd1297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r967,%dummy}, %rd1378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r968}, %rd1378;
	}
	shf.r.wrap.b32 	%r969, %r968, %r967, 28;
	shf.r.wrap.b32 	%r970, %r967, %r968, 28;
	mov.b64 	%rd1395, {%r970, %r969};
	shf.l.wrap.b32 	%r971, %r967, %r968, 30;
	shf.l.wrap.b32 	%r972, %r968, %r967, 30;
	mov.b64 	%rd1396, {%r972, %r971};
	xor.b64  	%rd1397, %rd1396, %rd1395;
	shf.l.wrap.b32 	%r973, %r967, %r968, 25;
	shf.l.wrap.b32 	%r974, %r968, %r967, 25;
	mov.b64 	%rd1398, {%r974, %r973};
	xor.b64  	%rd1399, %rd1397, %rd1398;
	and.b64  	%rd1400, %rd1378, %rd1351;
	xor.b64  	%rd1401, %rd1378, %rd1351;
	and.b64  	%rd1402, %rd1401, %rd1324;
	or.b64  	%rd1403, %rd1402, %rd1400;
	add.s64 	%rd1404, %rd1393, %rd1403;
	add.s64 	%rd1405, %rd1404, %rd1399;
	add.s32 	%r975, %r1101, 11;
	mul.wide.s32 	%rd1406, %r975, 8;
	add.s64 	%rd1407, %rd1109, %rd1406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r976,%dummy}, %rd1394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r977}, %rd1394;
	}
	shf.r.wrap.b32 	%r978, %r977, %r976, 14;
	shf.r.wrap.b32 	%r979, %r976, %r977, 14;
	mov.b64 	%rd1408, {%r979, %r978};
	shf.r.wrap.b32 	%r980, %r977, %r976, 18;
	shf.r.wrap.b32 	%r981, %r976, %r977, 18;
	mov.b64 	%rd1409, {%r981, %r980};
	xor.b64  	%rd1410, %rd1409, %rd1408;
	shf.l.wrap.b32 	%r982, %r976, %r977, 23;
	shf.l.wrap.b32 	%r983, %r977, %r976, 23;
	mov.b64 	%rd1411, {%r983, %r982};
	xor.b64  	%rd1412, %rd1410, %rd1411;
	xor.b64  	%rd1413, %rd1367, %rd1340;
	and.b64  	%rd1414, %rd1394, %rd1413;
	xor.b64  	%rd1415, %rd1414, %rd1340;
	add.s64 	%rd1416, %rd1313, %rd1568;
	ld.const.u64 	%rd1417, [%rd1407];
	add.s64 	%rd1418, %rd1416, %rd1417;
	add.s64 	%rd1419, %rd1418, %rd1415;
	add.s64 	%rd1420, %rd1419, %rd1412;
	add.s64 	%rd1421, %rd1420, %rd1324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r984,%dummy}, %rd1405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r985}, %rd1405;
	}
	shf.r.wrap.b32 	%r986, %r985, %r984, 28;
	shf.r.wrap.b32 	%r987, %r984, %r985, 28;
	mov.b64 	%rd1422, {%r987, %r986};
	shf.l.wrap.b32 	%r988, %r984, %r985, 30;
	shf.l.wrap.b32 	%r989, %r985, %r984, 30;
	mov.b64 	%rd1423, {%r989, %r988};
	xor.b64  	%rd1424, %rd1423, %rd1422;
	shf.l.wrap.b32 	%r990, %r984, %r985, 25;
	shf.l.wrap.b32 	%r991, %r985, %r984, 25;
	mov.b64 	%rd1425, {%r991, %r990};
	xor.b64  	%rd1426, %rd1424, %rd1425;
	and.b64  	%rd1427, %rd1405, %rd1378;
	xor.b64  	%rd1428, %rd1405, %rd1378;
	and.b64  	%rd1429, %rd1428, %rd1351;
	or.b64  	%rd1430, %rd1429, %rd1427;
	add.s64 	%rd1431, %rd1420, %rd1430;
	add.s64 	%rd1432, %rd1431, %rd1426;
	add.s32 	%r992, %r1101, 12;
	mul.wide.s32 	%rd1433, %r992, 8;
	add.s64 	%rd1434, %rd1109, %rd1433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r993,%dummy}, %rd1421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r994}, %rd1421;
	}
	shf.r.wrap.b32 	%r995, %r994, %r993, 14;
	shf.r.wrap.b32 	%r996, %r993, %r994, 14;
	mov.b64 	%rd1435, {%r996, %r995};
	shf.r.wrap.b32 	%r997, %r994, %r993, 18;
	shf.r.wrap.b32 	%r998, %r993, %r994, 18;
	mov.b64 	%rd1436, {%r998, %r997};
	xor.b64  	%rd1437, %rd1436, %rd1435;
	shf.l.wrap.b32 	%r999, %r993, %r994, 23;
	shf.l.wrap.b32 	%r1000, %r994, %r993, 23;
	mov.b64 	%rd1438, {%r1000, %r999};
	xor.b64  	%rd1439, %rd1437, %rd1438;
	xor.b64  	%rd1440, %rd1394, %rd1367;
	and.b64  	%rd1441, %rd1421, %rd1440;
	xor.b64  	%rd1442, %rd1441, %rd1367;
	add.s64 	%rd1443, %rd1340, %rd1567;
	ld.const.u64 	%rd1444, [%rd1434];
	add.s64 	%rd1445, %rd1443, %rd1444;
	add.s64 	%rd1446, %rd1445, %rd1442;
	add.s64 	%rd1447, %rd1446, %rd1439;
	add.s64 	%rd1579, %rd1447, %rd1351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1001,%dummy}, %rd1432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1002}, %rd1432;
	}
	shf.r.wrap.b32 	%r1003, %r1002, %r1001, 28;
	shf.r.wrap.b32 	%r1004, %r1001, %r1002, 28;
	mov.b64 	%rd1448, {%r1004, %r1003};
	shf.l.wrap.b32 	%r1005, %r1001, %r1002, 30;
	shf.l.wrap.b32 	%r1006, %r1002, %r1001, 30;
	mov.b64 	%rd1449, {%r1006, %r1005};
	xor.b64  	%rd1450, %rd1449, %rd1448;
	shf.l.wrap.b32 	%r1007, %r1001, %r1002, 25;
	shf.l.wrap.b32 	%r1008, %r1002, %r1001, 25;
	mov.b64 	%rd1451, {%r1008, %r1007};
	xor.b64  	%rd1452, %rd1450, %rd1451;
	and.b64  	%rd1453, %rd1432, %rd1405;
	xor.b64  	%rd1454, %rd1432, %rd1405;
	and.b64  	%rd1455, %rd1454, %rd1378;
	or.b64  	%rd1456, %rd1455, %rd1453;
	add.s64 	%rd1457, %rd1447, %rd1456;
	add.s64 	%rd1575, %rd1457, %rd1452;
	add.s32 	%r1009, %r1101, 13;
	mul.wide.s32 	%rd1458, %r1009, 8;
	add.s64 	%rd1459, %rd1109, %rd1458;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1010,%dummy}, %rd1579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1011}, %rd1579;
	}
	shf.r.wrap.b32 	%r1012, %r1011, %r1010, 14;
	shf.r.wrap.b32 	%r1013, %r1010, %r1011, 14;
	mov.b64 	%rd1460, {%r1013, %r1012};
	shf.r.wrap.b32 	%r1014, %r1011, %r1010, 18;
	shf.r.wrap.b32 	%r1015, %r1010, %r1011, 18;
	mov.b64 	%rd1461, {%r1015, %r1014};
	xor.b64  	%rd1462, %rd1461, %rd1460;
	shf.l.wrap.b32 	%r1016, %r1010, %r1011, 23;
	shf.l.wrap.b32 	%r1017, %r1011, %r1010, 23;
	mov.b64 	%rd1463, {%r1017, %r1016};
	xor.b64  	%rd1464, %rd1462, %rd1463;
	xor.b64  	%rd1465, %rd1421, %rd1394;
	and.b64  	%rd1466, %rd1579, %rd1465;
	xor.b64  	%rd1467, %rd1466, %rd1394;
	add.s64 	%rd1468, %rd1367, %rd1566;
	ld.const.u64 	%rd1469, [%rd1459];
	add.s64 	%rd1470, %rd1468, %rd1469;
	add.s64 	%rd1471, %rd1470, %rd1467;
	add.s64 	%rd1472, %rd1471, %rd1464;
	add.s64 	%rd1578, %rd1472, %rd1378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1018,%dummy}, %rd1575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1019}, %rd1575;
	}
	shf.r.wrap.b32 	%r1020, %r1019, %r1018, 28;
	shf.r.wrap.b32 	%r1021, %r1018, %r1019, 28;
	mov.b64 	%rd1473, {%r1021, %r1020};
	shf.l.wrap.b32 	%r1022, %r1018, %r1019, 30;
	shf.l.wrap.b32 	%r1023, %r1019, %r1018, 30;
	mov.b64 	%rd1474, {%r1023, %r1022};
	xor.b64  	%rd1475, %rd1474, %rd1473;
	shf.l.wrap.b32 	%r1024, %r1018, %r1019, 25;
	shf.l.wrap.b32 	%r1025, %r1019, %r1018, 25;
	mov.b64 	%rd1476, {%r1025, %r1024};
	xor.b64  	%rd1477, %rd1475, %rd1476;
	and.b64  	%rd1478, %rd1575, %rd1432;
	xor.b64  	%rd1479, %rd1575, %rd1432;
	and.b64  	%rd1480, %rd1479, %rd1405;
	or.b64  	%rd1481, %rd1480, %rd1478;
	add.s64 	%rd1482, %rd1472, %rd1481;
	add.s64 	%rd1574, %rd1482, %rd1477;
	add.s32 	%r1026, %r1101, 14;
	mul.wide.s32 	%rd1483, %r1026, 8;
	add.s64 	%rd1484, %rd1109, %rd1483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1027,%dummy}, %rd1578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1028}, %rd1578;
	}
	shf.r.wrap.b32 	%r1029, %r1028, %r1027, 14;
	shf.r.wrap.b32 	%r1030, %r1027, %r1028, 14;
	mov.b64 	%rd1485, {%r1030, %r1029};
	shf.r.wrap.b32 	%r1031, %r1028, %r1027, 18;
	shf.r.wrap.b32 	%r1032, %r1027, %r1028, 18;
	mov.b64 	%rd1486, {%r1032, %r1031};
	xor.b64  	%rd1487, %rd1486, %rd1485;
	shf.l.wrap.b32 	%r1033, %r1027, %r1028, 23;
	shf.l.wrap.b32 	%r1034, %r1028, %r1027, 23;
	mov.b64 	%rd1488, {%r1034, %r1033};
	xor.b64  	%rd1489, %rd1487, %rd1488;
	xor.b64  	%rd1490, %rd1579, %rd1421;
	and.b64  	%rd1491, %rd1578, %rd1490;
	xor.b64  	%rd1492, %rd1491, %rd1421;
	add.s64 	%rd1493, %rd1394, %rd1565;
	ld.const.u64 	%rd1494, [%rd1484];
	add.s64 	%rd1495, %rd1493, %rd1494;
	add.s64 	%rd1496, %rd1495, %rd1492;
	add.s64 	%rd1497, %rd1496, %rd1489;
	add.s64 	%rd1577, %rd1497, %rd1405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1035,%dummy}, %rd1574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1036}, %rd1574;
	}
	shf.r.wrap.b32 	%r1037, %r1036, %r1035, 28;
	shf.r.wrap.b32 	%r1038, %r1035, %r1036, 28;
	mov.b64 	%rd1498, {%r1038, %r1037};
	shf.l.wrap.b32 	%r1039, %r1035, %r1036, 30;
	shf.l.wrap.b32 	%r1040, %r1036, %r1035, 30;
	mov.b64 	%rd1499, {%r1040, %r1039};
	xor.b64  	%rd1500, %rd1499, %rd1498;
	shf.l.wrap.b32 	%r1041, %r1035, %r1036, 25;
	shf.l.wrap.b32 	%r1042, %r1036, %r1035, 25;
	mov.b64 	%rd1501, {%r1042, %r1041};
	xor.b64  	%rd1502, %rd1500, %rd1501;
	and.b64  	%rd1503, %rd1574, %rd1575;
	xor.b64  	%rd1504, %rd1574, %rd1575;
	and.b64  	%rd1505, %rd1504, %rd1432;
	or.b64  	%rd1506, %rd1505, %rd1503;
	add.s64 	%rd1507, %rd1497, %rd1506;
	add.s64 	%rd1573, %rd1507, %rd1502;
	add.s32 	%r1043, %r1101, 15;
	mul.wide.s32 	%rd1508, %r1043, 8;
	add.s64 	%rd1509, %rd1109, %rd1508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1044,%dummy}, %rd1577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1045}, %rd1577;
	}
	shf.r.wrap.b32 	%r1046, %r1045, %r1044, 14;
	shf.r.wrap.b32 	%r1047, %r1044, %r1045, 14;
	mov.b64 	%rd1510, {%r1047, %r1046};
	shf.r.wrap.b32 	%r1048, %r1045, %r1044, 18;
	shf.r.wrap.b32 	%r1049, %r1044, %r1045, 18;
	mov.b64 	%rd1511, {%r1049, %r1048};
	xor.b64  	%rd1512, %rd1511, %rd1510;
	shf.l.wrap.b32 	%r1050, %r1044, %r1045, 23;
	shf.l.wrap.b32 	%r1051, %r1045, %r1044, 23;
	mov.b64 	%rd1513, {%r1051, %r1050};
	xor.b64  	%rd1514, %rd1512, %rd1513;
	xor.b64  	%rd1515, %rd1578, %rd1579;
	and.b64  	%rd1516, %rd1577, %rd1515;
	xor.b64  	%rd1517, %rd1516, %rd1579;
	add.s64 	%rd1518, %rd1421, %rd1564;
	ld.const.u64 	%rd1519, [%rd1509];
	add.s64 	%rd1520, %rd1518, %rd1519;
	add.s64 	%rd1521, %rd1520, %rd1517;
	add.s64 	%rd1522, %rd1521, %rd1514;
	add.s64 	%rd1576, %rd1522, %rd1432;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1052,%dummy}, %rd1573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1053}, %rd1573;
	}
	shf.r.wrap.b32 	%r1054, %r1053, %r1052, 28;
	shf.r.wrap.b32 	%r1055, %r1052, %r1053, 28;
	mov.b64 	%rd1523, {%r1055, %r1054};
	shf.l.wrap.b32 	%r1056, %r1052, %r1053, 30;
	shf.l.wrap.b32 	%r1057, %r1053, %r1052, 30;
	mov.b64 	%rd1524, {%r1057, %r1056};
	xor.b64  	%rd1525, %rd1524, %rd1523;
	shf.l.wrap.b32 	%r1058, %r1052, %r1053, 25;
	shf.l.wrap.b32 	%r1059, %r1053, %r1052, 25;
	mov.b64 	%rd1526, {%r1059, %r1058};
	xor.b64  	%rd1527, %rd1525, %rd1526;
	and.b64  	%rd1528, %rd1573, %rd1574;
	xor.b64  	%rd1529, %rd1573, %rd1574;
	and.b64  	%rd1530, %rd1529, %rd1575;
	or.b64  	%rd1531, %rd1530, %rd1528;
	add.s64 	%rd1532, %rd1522, %rd1531;
	add.s64 	%rd1572, %rd1532, %rd1527;
	add.s32 	%r1101, %r1101, 16;
	setp.lt.s32	%p39, %r1101, 80;
	@%p39 bra 	BB1_55;

	ld.param.u32 	%r1060, [m01800_loop_param_29];
	add.s64 	%rd1547, %rd1572, 7640891576956012808;
	add.s64 	%rd1546, %rd1573, -4942790177534073029;
	add.s64 	%rd1545, %rd1574, 4354685564936845355;
	add.s64 	%rd1544, %rd1575, -6534734903238641935;
	add.s64 	%rd1543, %rd1576, 5840696475078001361;
	add.s64 	%rd1542, %rd1577, -7276294671716946913;
	add.s64 	%rd1541, %rd1578, 2270897969802886507;
	add.s64 	%rd1540, %rd1579, 6620516959819538809;
	add.s32 	%r1099, %r1099, 1;
	add.s32 	%r1100, %r1100, 1;
	setp.lt.u32	%p40, %r1100, %r1060;
	@%p40 bra 	BB1_51;

BB1_57:
	st.global.u64 	[%rd179], %rd1547;
	st.global.u64 	[%rd179+8], %rd1546;
	st.global.u64 	[%rd179+16], %rd1545;
	st.global.u64 	[%rd179+24], %rd1544;
	st.global.u64 	[%rd179+32], %rd1543;
	st.global.u64 	[%rd179+40], %rd1542;
	st.global.u64 	[%rd179+48], %rd1541;
	st.global.u64 	[%rd179+56], %rd1540;

BB1_58:
	ret;
}

	// .globl	m01800_comp
.entry m01800_comp(
	.param .u64 .ptr .global .align 4 m01800_comp_param_0,
	.param .u64 .ptr .global .align 4 m01800_comp_param_1,
	.param .u64 .ptr .global .align 4 m01800_comp_param_2,
	.param .u64 .ptr .const .align 4 m01800_comp_param_3,
	.param .u64 .ptr .global .align 8 m01800_comp_param_4,
	.param .u64 .ptr .global .align 1 m01800_comp_param_5,
	.param .u64 .ptr .global .align 4 m01800_comp_param_6,
	.param .u64 .ptr .global .align 4 m01800_comp_param_7,
	.param .u64 .ptr .global .align 4 m01800_comp_param_8,
	.param .u64 .ptr .global .align 4 m01800_comp_param_9,
	.param .u64 .ptr .global .align 4 m01800_comp_param_10,
	.param .u64 .ptr .global .align 4 m01800_comp_param_11,
	.param .u64 .ptr .global .align 4 m01800_comp_param_12,
	.param .u64 .ptr .global .align 4 m01800_comp_param_13,
	.param .u64 .ptr .global .align 8 m01800_comp_param_14,
	.param .u64 .ptr .global .align 4 m01800_comp_param_15,
	.param .u64 .ptr .global .align 4 m01800_comp_param_16,
	.param .u64 .ptr .global .align 4 m01800_comp_param_17,
	.param .u64 .ptr .global .align 1 m01800_comp_param_18,
	.param .u64 .ptr .global .align 4 m01800_comp_param_19,
	.param .u64 .ptr .global .align 1 m01800_comp_param_20,
	.param .u64 .ptr .global .align 1 m01800_comp_param_21,
	.param .u64 .ptr .global .align 1 m01800_comp_param_22,
	.param .u64 .ptr .global .align 1 m01800_comp_param_23,
	.param .u32 m01800_comp_param_24,
	.param .u32 m01800_comp_param_25,
	.param .u32 m01800_comp_param_26,
	.param .u32 m01800_comp_param_27,
	.param .u32 m01800_comp_param_28,
	.param .u32 m01800_comp_param_29,
	.param .u32 m01800_comp_param_30,
	.param .u32 m01800_comp_param_31,
	.param .u32 m01800_comp_param_32,
	.param .u32 m01800_comp_param_33,
	.param .u64 m01800_comp_param_34
)
{
	.reg .pred 	%p<25>;
	.reg .b32 	%r<115>;
	.reg .b64 	%rd<53>;


	ld.param.u64 	%rd3, [m01800_comp_param_4];
	ld.param.u64 	%rd4, [m01800_comp_param_6];
	ld.param.u64 	%rd5, [m01800_comp_param_7];
	ld.param.u64 	%rd6, [m01800_comp_param_8];
	ld.param.u64 	%rd7, [m01800_comp_param_9];
	ld.param.u64 	%rd8, [m01800_comp_param_10];
	ld.param.u64 	%rd9, [m01800_comp_param_11];
	ld.param.u64 	%rd10, [m01800_comp_param_12];
	ld.param.u64 	%rd11, [m01800_comp_param_13];
	ld.param.u64 	%rd12, [m01800_comp_param_14];
	ld.param.u64 	%rd13, [m01800_comp_param_15];
	ld.param.u64 	%rd14, [m01800_comp_param_16];
	ld.param.u64 	%rd15, [m01800_comp_param_19];
	ld.param.u32 	%r27, [m01800_comp_param_24];
	ld.param.u32 	%r28, [m01800_comp_param_25];
	ld.param.u32 	%r29, [m01800_comp_param_26];
	ld.param.u32 	%r30, [m01800_comp_param_27];
	ld.param.u32 	%r31, [m01800_comp_param_31];
	ld.param.u32 	%r32, [m01800_comp_param_32];
	ld.param.u64 	%rd16, [m01800_comp_param_34];
	mov.b32	%r33, %envreg3;
	mov.u32 	%r34, %ctaid.x;
	mov.u32 	%r35, %ntid.x;
	mad.lo.s32 	%r36, %r34, %r35, %r33;
	mov.u32 	%r37, %tid.x;
	add.s32 	%r1, %r36, %r37;
	cvt.s64.s32	%rd1, %r1;
	setp.ge.u64	%p1, %rd1, %rd16;
	@%p1 bra 	BB2_29;

	mul.wide.s32 	%rd21, %r1, 672;
	add.s64 	%rd22, %rd3, %rd21;
	ld.global.u64 	%rd17, [%rd22];
	// inline asm
	mov.b64 {%r38, %r39}, %rd17;
	// inline asm
	// inline asm
	prmt.b32 %r40, %r38, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r42, %r39, 0, 0x0123;
	// inline asm
	// inline asm
	mov.b64 %rd18, {%r42, %r40};
	// inline asm
	ld.global.u64 	%rd19, [%rd22+8];
	// inline asm
	mov.b64 {%r46, %r47}, %rd19;
	// inline asm
	// inline asm
	prmt.b32 %r48, %r46, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r50, %r47, 0, 0x0123;
	// inline asm
	// inline asm
	mov.b64 %rd20, {%r50, %r48};
	// inline asm
	mov.b64	{%r2, %r3}, %rd18;
	mov.b64	{%r4, %r5}, %rd20;
	and.b32  	%r6, %r28, 31;
	shr.u32 	%r54, %r2, %r6;
	and.b32  	%r55, %r54, %r27;
	mul.wide.u32 	%rd23, %r55, 4;
	add.s64 	%rd24, %rd4, %rd23;
	and.b32  	%r56, %r2, 31;
	mov.u32 	%r57, 1;
	shl.b32 	%r7, %r57, %r56;
	ld.global.u32 	%r58, [%rd24];
	and.b32  	%r59, %r58, %r7;
	setp.eq.s32	%p2, %r59, 0;
	@%p2 bra 	BB2_29;

	shr.u32 	%r61, %r3, %r6;
	and.b32  	%r62, %r61, %r27;
	mul.wide.u32 	%rd25, %r62, 4;
	add.s64 	%rd26, %rd5, %rd25;
	and.b32  	%r63, %r3, 31;
	shl.b32 	%r8, %r57, %r63;
	ld.global.u32 	%r64, [%rd26];
	and.b32  	%r65, %r64, %r8;
	setp.eq.s32	%p3, %r65, 0;
	@%p3 bra 	BB2_29;

	shr.u32 	%r66, %r4, %r6;
	and.b32  	%r67, %r66, %r27;
	mul.wide.u32 	%rd27, %r67, 4;
	add.s64 	%rd28, %rd6, %rd27;
	and.b32  	%r68, %r4, 31;
	shl.b32 	%r9, %r57, %r68;
	ld.global.u32 	%r70, [%rd28];
	and.b32  	%r71, %r70, %r9;
	setp.eq.s32	%p4, %r71, 0;
	@%p4 bra 	BB2_29;

	shr.u32 	%r73, %r5, %r6;
	and.b32  	%r74, %r73, %r27;
	mul.wide.u32 	%rd29, %r74, 4;
	add.s64 	%rd30, %rd7, %rd29;
	and.b32  	%r75, %r5, 31;
	shl.b32 	%r10, %r57, %r75;
	ld.global.u32 	%r76, [%rd30];
	and.b32  	%r77, %r76, %r10;
	setp.eq.s32	%p5, %r77, 0;
	@%p5 bra 	BB2_29;

	and.b32  	%r11, %r29, 31;
	shr.u32 	%r78, %r2, %r11;
	and.b32  	%r79, %r78, %r27;
	mul.wide.u32 	%rd31, %r79, 4;
	add.s64 	%rd32, %rd8, %rd31;
	ld.global.u32 	%r80, [%rd32];
	and.b32  	%r81, %r80, %r7;
	setp.eq.s32	%p6, %r81, 0;
	@%p6 bra 	BB2_29;

	shr.u32 	%r82, %r3, %r11;
	and.b32  	%r83, %r82, %r27;
	mul.wide.u32 	%rd33, %r83, 4;
	add.s64 	%rd34, %rd9, %rd33;
	ld.global.u32 	%r84, [%rd34];
	and.b32  	%r85, %r84, %r8;
	setp.eq.s32	%p7, %r85, 0;
	@%p7 bra 	BB2_29;

	shr.u32 	%r86, %r4, %r11;
	and.b32  	%r87, %r86, %r27;
	mul.wide.u32 	%rd35, %r87, 4;
	add.s64 	%rd36, %rd10, %rd35;
	ld.global.u32 	%r88, [%rd36];
	and.b32  	%r89, %r88, %r9;
	setp.eq.s32	%p8, %r89, 0;
	@%p8 bra 	BB2_29;

	shr.u32 	%r90, %r5, %r11;
	and.b32  	%r91, %r90, %r27;
	mul.wide.u32 	%rd37, %r91, 4;
	add.s64 	%rd38, %rd11, %rd37;
	ld.global.u32 	%r92, [%rd38];
	and.b32  	%r93, %r92, %r10;
	setp.eq.s32	%p9, %r93, 0;
	@%p9 bra 	BB2_29;

	setp.eq.s32	%p10, %r31, 0;
	mov.u32 	%r112, 0;
	mov.u32 	%r94, -1;
	@%p10 bra 	BB2_23;

	mov.u32 	%r111, %r31;

BB2_11:
	shr.u32 	%r14, %r111, 1;
	add.s32 	%r114, %r14, %r112;
	cvt.u64.u32	%rd39, %r114;
	cvt.u64.u32	%rd40, %r32;
	add.s64 	%rd2, %rd39, %rd40;
	shl.b64 	%rd41, %rd2, 6;
	add.s64 	%rd42, %rd13, %rd41;
	ld.global.u32 	%r16, [%rd42+12];
	setp.gt.u32	%p11, %r5, %r16;
	mov.u32 	%r113, %r57;
	@%p11 bra 	BB2_21;

	setp.lt.u32	%p12, %r5, %r16;
	mov.u32 	%r97, -1;
	@%p12 bra 	BB2_13;
	bra.uni 	BB2_14;

BB2_13:
	mov.u32 	%r113, %r97;
	bra.uni 	BB2_21;

BB2_14:
	ld.global.u32 	%r17, [%rd42+8];
	setp.gt.u32	%p13, %r4, %r17;
	mov.u32 	%r113, %r57;
	@%p13 bra 	BB2_21;

	setp.lt.u32	%p14, %r4, %r17;
	@%p14 bra 	BB2_16;
	bra.uni 	BB2_17;

BB2_16:
	mov.u32 	%r113, %r97;
	bra.uni 	BB2_21;

BB2_17:
	ld.global.u32 	%r18, [%rd42+4];
	setp.gt.u32	%p15, %r3, %r18;
	mov.u32 	%r113, %r57;
	@%p15 bra 	BB2_21;

	setp.lt.u32	%p16, %r3, %r18;
	mov.u32 	%r113, %r97;
	@%p16 bra 	BB2_21;

	ld.global.u32 	%r19, [%rd42];
	setp.gt.u32	%p17, %r2, %r19;
	mov.u32 	%r113, %r57;
	@%p17 bra 	BB2_21;

	setp.lt.u32	%p18, %r2, %r19;
	selp.b32	%r113, -1, 0, %p18;

BB2_21:
	add.s32 	%r103, %r14, 1;
	setp.gt.s32	%p19, %r113, 0;
	selp.b32	%r104, %r103, 0, %p19;
	add.s32 	%r112, %r104, %r112;
	selp.b32	%r105, -1, 0, %p19;
	add.s32 	%r106, %r105, %r111;
	shr.u32 	%r111, %r106, 1;
	setp.eq.s32	%p20, %r113, 0;
	@%p20 bra 	BB2_24;

	setp.ne.s32	%p21, %r111, 0;
	@%p21 bra 	BB2_11;

BB2_23:
	mov.u32 	%r114, %r94;

BB2_24:
	setp.eq.s32	%p22, %r114, -1;
	@%p22 bra 	BB2_29;

	add.s32 	%r25, %r114, %r32;
	mul.wide.u32 	%rd49, %r25, 4;
	add.s64 	%rd50, %rd14, %rd49;
	atom.global.add.u32 	%r108, [%rd50], 1;
	setp.ne.s32	%p23, %r108, 0;
	@%p23 bra 	BB2_29;

	atom.global.add.u32 	%r26, [%rd15], 1;
	setp.lt.u32	%p24, %r26, %r31;
	@%p24 bra 	BB2_28;
	bra.uni 	BB2_27;

BB2_28:
	mul.wide.u32 	%rd51, %r26, 32;
	add.s64 	%rd52, %rd12, %rd51;
	st.global.u32 	[%rd52+12], %r30;
	st.global.u32 	[%rd52+16], %r114;
	st.global.u32 	[%rd52+20], %r25;
	st.global.u64 	[%rd52], %rd1;
	mov.u32 	%r110, 0;
	st.global.u32 	[%rd52+8], %r110;
	st.global.u32 	[%rd52+24], %r110;
	st.global.u32 	[%rd52+28], %r110;
	bra.uni 	BB2_29;

BB2_27:
	atom.global.add.u32 	%r109, [%rd15], -1;

BB2_29:
	ret;
}


  