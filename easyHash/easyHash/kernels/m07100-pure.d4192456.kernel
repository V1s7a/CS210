//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Unknown Toolkit Version
// Based on LLVM 3.4svn
//

.version 6.5
.target sm_61, texmode_independent
.address_size 64

.const .align 8 .b8 k_sha512[640] = {34, 174, 40, 215, 152, 47, 138, 66, 205, 101, 239, 35, 145, 68, 55, 113, 47, 59, 77, 236, 207, 251, 192, 181, 188, 219, 137, 129, 165, 219, 181, 233, 56, 181, 72, 243, 91, 194, 86, 57, 25, 208, 5, 182, 241, 17, 241, 89, 155, 79, 25, 175, 164, 130, 63, 146, 24, 129, 109, 218, 213, 94, 28, 171, 66, 2, 3, 163, 152, 170, 7, 216, 190, 111, 112, 69, 1, 91, 131, 18, 140, 178, 228, 78, 190, 133, 49, 36, 226, 180, 255, 213, 195, 125, 12, 85, 111, 137, 123, 242, 116, 93, 190, 114, 177, 150, 22, 59, 254, 177, 222, 128, 53, 18, 199, 37, 167, 6, 220, 155, 148, 38, 105, 207, 116, 241, 155, 193, 210, 74, 241, 158, 193, 105, 155, 228, 227, 37, 79, 56, 134, 71, 190, 239, 181, 213, 140, 139, 198, 157, 193, 15, 101, 156, 172, 119, 204, 161, 12, 36, 117, 2, 43, 89, 111, 44, 233, 45, 131, 228, 166, 110, 170, 132, 116, 74, 212, 251, 65, 189, 220, 169, 176, 92, 181, 83, 17, 131, 218, 136, 249, 118, 171, 223, 102, 238, 82, 81, 62, 152, 16, 50, 180, 45, 109, 198, 49, 168, 63, 33, 251, 152, 200, 39, 3, 176, 228, 14, 239, 190, 199, 127, 89, 191, 194, 143, 168, 61, 243, 11, 224, 198, 37, 167, 10, 147, 71, 145, 167, 213, 111, 130, 3, 224, 81, 99, 202, 6, 112, 110, 14, 10, 103, 41, 41, 20, 252, 47, 210, 70, 133, 10, 183, 39, 38, 201, 38, 92, 56, 33, 27, 46, 237, 42, 196, 90, 252, 109, 44, 77, 223, 179, 149, 157, 19, 13, 56, 83, 222, 99, 175, 139, 84, 115, 10, 101, 168, 178, 119, 60, 187, 10, 106, 118, 230, 174, 237, 71, 46, 201, 194, 129, 59, 53, 130, 20, 133, 44, 114, 146, 100, 3, 241, 76, 161, 232, 191, 162, 1, 48, 66, 188, 75, 102, 26, 168, 145, 151, 248, 208, 112, 139, 75, 194, 48, 190, 84, 6, 163, 81, 108, 199, 24, 82, 239, 214, 25, 232, 146, 209, 16, 169, 101, 85, 36, 6, 153, 214, 42, 32, 113, 87, 133, 53, 14, 244, 184, 209, 187, 50, 112, 160, 106, 16, 200, 208, 210, 184, 22, 193, 164, 25, 83, 171, 65, 81, 8, 108, 55, 30, 153, 235, 142, 223, 76, 119, 72, 39, 168, 72, 155, 225, 181, 188, 176, 52, 99, 90, 201, 197, 179, 12, 28, 57, 203, 138, 65, 227, 74, 170, 216, 78, 115, 227, 99, 119, 79, 202, 156, 91, 163, 184, 178, 214, 243, 111, 46, 104, 252, 178, 239, 93, 238, 130, 143, 116, 96, 47, 23, 67, 111, 99, 165, 120, 114, 171, 240, 161, 20, 120, 200, 132, 236, 57, 100, 26, 8, 2, 199, 140, 40, 30, 99, 35, 250, 255, 190, 144, 233, 189, 130, 222, 235, 108, 80, 164, 21, 121, 198, 178, 247, 163, 249, 190, 43, 83, 114, 227, 242, 120, 113, 198, 156, 97, 38, 234, 206, 62, 39, 202, 7, 194, 192, 33, 199, 184, 134, 209, 30, 235, 224, 205, 214, 125, 218, 234, 120, 209, 110, 238, 127, 79, 125, 245, 186, 111, 23, 114, 170, 103, 240, 6, 166, 152, 200, 162, 197, 125, 99, 10, 174, 13, 249, 190, 4, 152, 63, 17, 27, 71, 28, 19, 53, 11, 113, 27, 132, 125, 4, 35, 245, 119, 219, 40, 147, 36, 199, 64, 123, 171, 202, 50, 188, 190, 201, 21, 10, 190, 158, 60, 76, 13, 16, 156, 196, 103, 29, 67, 182, 66, 62, 203, 190, 212, 197, 76, 42, 126, 101, 252, 156, 41, 127, 89, 236, 250, 214, 58, 171, 111, 203, 95, 23, 88, 71, 74, 140, 25, 68, 108};

.func sha512_update_128(
	.param .b64 sha512_update_128_param_0,
	.param .b64 sha512_update_128_param_1,
	.param .b64 sha512_update_128_param_2,
	.param .b64 sha512_update_128_param_3,
	.param .b64 sha512_update_128_param_4,
	.param .b64 sha512_update_128_param_5,
	.param .b64 sha512_update_128_param_6,
	.param .b64 sha512_update_128_param_7,
	.param .b64 sha512_update_128_param_8,
	.param .b32 sha512_update_128_param_9
)
{
	.reg .pred 	%p<100>;
	.reg .b32 	%r<9194>;
	.reg .b64 	%rd<2325>;


	ld.param.u64 	%rd170, [sha512_update_128_param_0];
	ld.param.u64 	%rd171, [sha512_update_128_param_1];
	ld.param.u64 	%rd172, [sha512_update_128_param_2];
	ld.param.u64 	%rd173, [sha512_update_128_param_3];
	ld.param.u64 	%rd174, [sha512_update_128_param_4];
	ld.param.u64 	%rd175, [sha512_update_128_param_5];
	ld.param.u64 	%rd176, [sha512_update_128_param_6];
	ld.param.u64 	%rd177, [sha512_update_128_param_7];
	ld.param.u64 	%rd178, [sha512_update_128_param_8];
	ld.param.u32 	%r607, [sha512_update_128_param_9];
	cvta.to.local.u64 	%rd1, %rd171;
	cvta.to.local.u64 	%rd2, %rd172;
	cvta.to.local.u64 	%rd3, %rd173;
	cvta.to.local.u64 	%rd4, %rd174;
	cvta.to.local.u64 	%rd5, %rd175;
	cvta.to.local.u64 	%rd6, %rd176;
	cvta.to.local.u64 	%rd7, %rd177;
	cvta.to.local.u64 	%rd8, %rd178;
	cvta.to.local.u64 	%rd9, %rd170;
	ld.local.u32 	%r1, [%rd9+192];
	and.b32  	%r2, %r1, 127;
	add.s32 	%r608, %r1, %r607;
	st.local.u32 	[%rd9+192], %r608;
	setp.eq.s32	%p1, %r2, 0;
	@%p1 bra 	BB0_174;

	add.s32 	%r609, %r2, %r607;
	setp.lt.s32	%p2, %r609, 128;
	shr.u32 	%r3, %r2, 2;
	and.b32  	%r610, %r1, 3;
	shl.b32 	%r611, %r610, 2;
	mov.u32 	%r612, 1985229328;
	shr.u32 	%r613, %r612, %r611;
	and.b32  	%r4, %r613, 65535;
	@%p2 bra 	BB0_93;
	bra.uni 	BB0_2;

BB0_93:
	setp.gt.s32	%p51, %r3, 15;
	@%p51 bra 	BB0_125;

	setp.gt.s32	%p75, %r3, 7;
	@%p75 bra 	BB0_110;

	setp.gt.s32	%p87, %r3, 3;
	@%p87 bra 	BB0_103;

	setp.gt.s32	%p93, %r3, 1;
	@%p93 bra 	BB0_100;

	setp.eq.s32	%p96, %r3, 0;
	@%p96 bra 	BB0_171;
	bra.uni 	BB0_98;

BB0_171:
	ld.local.u32 	%r8222, [%rd8+12];
	ld.local.u32 	%r8223, [%rd8+8];
	// inline asm
	prmt.b32 %r8221, %r8222, %r8223, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r8221;
	ld.local.u32 	%r8226, [%rd8+8];
	ld.local.u32 	%r8227, [%rd8+4];
	// inline asm
	prmt.b32 %r8225, %r8226, %r8227, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r8225;
	ld.local.u32 	%r8230, [%rd8+4];
	ld.local.u32 	%r8231, [%rd8];
	// inline asm
	prmt.b32 %r8229, %r8230, %r8231, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r8229;
	ld.local.u32 	%r8234, [%rd8];
	ld.local.u32 	%r8235, [%rd7+12];
	// inline asm
	prmt.b32 %r8233, %r8234, %r8235, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r8233;
	ld.local.u32 	%r8238, [%rd7+12];
	ld.local.u32 	%r8239, [%rd7+8];
	// inline asm
	prmt.b32 %r8237, %r8238, %r8239, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r8237;
	ld.local.u32 	%r8242, [%rd7+8];
	ld.local.u32 	%r8243, [%rd7+4];
	// inline asm
	prmt.b32 %r8241, %r8242, %r8243, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r8241;
	ld.local.u32 	%r8246, [%rd7+4];
	ld.local.u32 	%r8247, [%rd7];
	// inline asm
	prmt.b32 %r8245, %r8246, %r8247, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r8245;
	ld.local.u32 	%r8250, [%rd7];
	ld.local.u32 	%r8251, [%rd6+12];
	// inline asm
	prmt.b32 %r8249, %r8250, %r8251, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r8249;
	ld.local.u32 	%r8254, [%rd6+12];
	ld.local.u32 	%r8255, [%rd6+8];
	// inline asm
	prmt.b32 %r8253, %r8254, %r8255, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r8253;
	ld.local.u32 	%r8258, [%rd6+8];
	ld.local.u32 	%r8259, [%rd6+4];
	// inline asm
	prmt.b32 %r8257, %r8258, %r8259, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r8257;
	ld.local.u32 	%r8262, [%rd6+4];
	ld.local.u32 	%r8263, [%rd6];
	// inline asm
	prmt.b32 %r8261, %r8262, %r8263, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r8261;
	ld.local.u32 	%r8266, [%rd6];
	ld.local.u32 	%r8267, [%rd5+12];
	// inline asm
	prmt.b32 %r8265, %r8266, %r8267, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r8265;
	ld.local.u32 	%r8270, [%rd5+12];
	ld.local.u32 	%r8271, [%rd5+8];
	// inline asm
	prmt.b32 %r8269, %r8270, %r8271, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r8269;
	ld.local.u32 	%r8274, [%rd5+8];
	ld.local.u32 	%r8275, [%rd5+4];
	// inline asm
	prmt.b32 %r8273, %r8274, %r8275, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r8273;
	ld.local.u32 	%r8278, [%rd5+4];
	ld.local.u32 	%r8279, [%rd5];
	// inline asm
	prmt.b32 %r8277, %r8278, %r8279, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r8277;
	ld.local.u32 	%r8282, [%rd5];
	ld.local.u32 	%r8283, [%rd4+12];
	// inline asm
	prmt.b32 %r8281, %r8282, %r8283, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r8281;
	ld.local.u32 	%r8286, [%rd4+12];
	ld.local.u32 	%r8287, [%rd4+8];
	// inline asm
	prmt.b32 %r8285, %r8286, %r8287, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r8285;
	ld.local.u32 	%r8290, [%rd4+8];
	ld.local.u32 	%r8291, [%rd4+4];
	// inline asm
	prmt.b32 %r8289, %r8290, %r8291, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r8289;
	ld.local.u32 	%r8294, [%rd4+4];
	ld.local.u32 	%r8295, [%rd4];
	// inline asm
	prmt.b32 %r8293, %r8294, %r8295, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r8293;
	ld.local.u32 	%r8298, [%rd4];
	ld.local.u32 	%r8299, [%rd3+12];
	// inline asm
	prmt.b32 %r8297, %r8298, %r8299, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r8297;
	ld.local.u32 	%r8302, [%rd3+12];
	ld.local.u32 	%r8303, [%rd3+8];
	// inline asm
	prmt.b32 %r8301, %r8302, %r8303, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r8301;
	ld.local.u32 	%r8306, [%rd3+8];
	ld.local.u32 	%r8307, [%rd3+4];
	// inline asm
	prmt.b32 %r8305, %r8306, %r8307, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r8305;
	ld.local.u32 	%r8310, [%rd3+4];
	ld.local.u32 	%r8311, [%rd3];
	// inline asm
	prmt.b32 %r8309, %r8310, %r8311, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r8309;
	ld.local.u32 	%r8314, [%rd3];
	ld.local.u32 	%r8315, [%rd2+12];
	// inline asm
	prmt.b32 %r8313, %r8314, %r8315, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r8313;
	ld.local.u32 	%r8318, [%rd2+12];
	ld.local.u32 	%r8319, [%rd2+8];
	// inline asm
	prmt.b32 %r8317, %r8318, %r8319, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r8317;
	ld.local.u32 	%r8322, [%rd2+8];
	ld.local.u32 	%r8323, [%rd2+4];
	// inline asm
	prmt.b32 %r8321, %r8322, %r8323, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r8321;
	ld.local.u32 	%r8326, [%rd2+4];
	ld.local.u32 	%r8327, [%rd2];
	// inline asm
	prmt.b32 %r8325, %r8326, %r8327, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r8325;
	ld.local.u32 	%r8330, [%rd2];
	ld.local.u32 	%r8331, [%rd1+12];
	// inline asm
	prmt.b32 %r8329, %r8330, %r8331, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r8329;
	ld.local.u32 	%r8334, [%rd1+12];
	ld.local.u32 	%r8335, [%rd1+8];
	// inline asm
	prmt.b32 %r8333, %r8334, %r8335, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r8333;
	ld.local.u32 	%r8338, [%rd1+8];
	ld.local.u32 	%r8339, [%rd1+4];
	// inline asm
	prmt.b32 %r8337, %r8338, %r8339, %r4;
	// inline asm
	st.local.u32 	[%rd1+8], %r8337;
	ld.local.u32 	%r8342, [%rd1+4];
	ld.local.u32 	%r8343, [%rd1];
	// inline asm
	prmt.b32 %r8341, %r8342, %r8343, %r4;
	// inline asm
	st.local.u32 	[%rd1+4], %r8341;
	ld.local.u32 	%r8346, [%rd1];
	mov.u32 	%r8347, 0;
	// inline asm
	prmt.b32 %r9192, %r8346, %r8347, %r4;
	// inline asm
	st.local.u32 	[%rd1], %r9192;
	bra.uni 	BB0_173;

BB0_174:
	ld.local.u32 	%r573, [%rd1];
	st.local.u32 	[%rd9+64], %r573;
	ld.local.u32 	%r574, [%rd1+4];
	st.local.u32 	[%rd9+68], %r574;
	ld.local.u32 	%r575, [%rd1+8];
	st.local.u32 	[%rd9+72], %r575;
	ld.local.u32 	%r576, [%rd1+12];
	st.local.u32 	[%rd9+76], %r576;
	ld.local.u32 	%r577, [%rd2];
	st.local.u32 	[%rd9+80], %r577;
	ld.local.u32 	%r578, [%rd2+4];
	st.local.u32 	[%rd9+84], %r578;
	ld.local.u32 	%r579, [%rd2+8];
	st.local.u32 	[%rd9+88], %r579;
	ld.local.u32 	%r580, [%rd2+12];
	st.local.u32 	[%rd9+92], %r580;
	ld.local.u32 	%r581, [%rd3];
	st.local.u32 	[%rd9+96], %r581;
	ld.local.u32 	%r582, [%rd3+4];
	st.local.u32 	[%rd9+100], %r582;
	ld.local.u32 	%r583, [%rd3+8];
	st.local.u32 	[%rd9+104], %r583;
	ld.local.u32 	%r584, [%rd3+12];
	st.local.u32 	[%rd9+108], %r584;
	ld.local.u32 	%r585, [%rd4];
	st.local.u32 	[%rd9+112], %r585;
	ld.local.u32 	%r586, [%rd4+4];
	st.local.u32 	[%rd9+116], %r586;
	ld.local.u32 	%r587, [%rd4+8];
	st.local.u32 	[%rd9+120], %r587;
	ld.local.u32 	%r588, [%rd4+12];
	st.local.u32 	[%rd9+124], %r588;
	ld.local.u32 	%r589, [%rd5];
	st.local.u32 	[%rd9+128], %r589;
	ld.local.u32 	%r590, [%rd5+4];
	st.local.u32 	[%rd9+132], %r590;
	ld.local.u32 	%r591, [%rd5+8];
	st.local.u32 	[%rd9+136], %r591;
	ld.local.u32 	%r592, [%rd5+12];
	st.local.u32 	[%rd9+140], %r592;
	ld.local.u32 	%r593, [%rd6];
	st.local.u32 	[%rd9+144], %r593;
	ld.local.u32 	%r594, [%rd6+4];
	st.local.u32 	[%rd9+148], %r594;
	ld.local.u32 	%r595, [%rd6+8];
	st.local.u32 	[%rd9+152], %r595;
	ld.local.u32 	%r596, [%rd6+12];
	st.local.u32 	[%rd9+156], %r596;
	ld.local.u32 	%r597, [%rd7];
	st.local.u32 	[%rd9+160], %r597;
	ld.local.u32 	%r598, [%rd7+4];
	st.local.u32 	[%rd9+164], %r598;
	ld.local.u32 	%r599, [%rd7+8];
	st.local.u32 	[%rd9+168], %r599;
	ld.local.u32 	%r600, [%rd7+12];
	st.local.u32 	[%rd9+172], %r600;
	ld.local.u32 	%r601, [%rd8];
	st.local.u32 	[%rd9+176], %r601;
	ld.local.u32 	%r602, [%rd8+4];
	st.local.u32 	[%rd9+180], %r602;
	ld.local.u32 	%r603, [%rd8+8];
	st.local.u32 	[%rd9+184], %r603;
	ld.local.u32 	%r604, [%rd8+12];
	st.local.u32 	[%rd9+188], %r604;
	setp.ne.s32	%p98, %r607, 128;
	@%p98 bra 	BB0_178;

	mov.b64	%rd2317, {%r574, %r573};
	mov.b64	%rd2318, {%r576, %r575};
	mov.b64	%rd2319, {%r578, %r577};
	mov.b64	%rd2320, {%r580, %r579};
	mov.b64	%rd2321, {%r582, %r581};
	mov.b64	%rd2322, {%r584, %r583};
	mov.b64	%rd2323, {%r586, %r585};
	mov.b64	%rd2324, {%r588, %r587};
	mov.b64	%rd2308, {%r590, %r589};
	mov.b64	%rd2307, {%r592, %r591};
	mov.b64	%rd2306, {%r594, %r593};
	mov.b64	%rd2305, {%r596, %r595};
	mov.b64	%rd2304, {%r598, %r597};
	mov.b64	%rd2303, {%r600, %r599};
	mov.b64	%rd2302, {%r602, %r601};
	mov.b64	%rd2301, {%r604, %r603};
	ld.local.u64 	%rd106, [%rd9+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8445,%dummy}, %rd106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8446}, %rd106;
	}
	shf.r.wrap.b32 	%r8447, %r8446, %r8445, 14;
	shf.r.wrap.b32 	%r8448, %r8445, %r8446, 14;
	mov.b64 	%rd1257, {%r8448, %r8447};
	shf.r.wrap.b32 	%r8449, %r8446, %r8445, 18;
	shf.r.wrap.b32 	%r8450, %r8445, %r8446, 18;
	mov.b64 	%rd1258, {%r8450, %r8449};
	xor.b64  	%rd1259, %rd1257, %rd1258;
	shf.l.wrap.b32 	%r8451, %r8445, %r8446, 23;
	shf.l.wrap.b32 	%r8452, %r8446, %r8445, 23;
	mov.b64 	%rd1260, {%r8452, %r8451};
	xor.b64  	%rd1261, %rd1259, %rd1260;
	ld.local.u64 	%rd107, [%rd9+48];
	ld.local.u64 	%rd108, [%rd9+40];
	xor.b64  	%rd1262, %rd107, %rd108;
	and.b64  	%rd1263, %rd1262, %rd106;
	xor.b64  	%rd1264, %rd1263, %rd107;
	ld.local.u64 	%rd109, [%rd9+56];
	add.s64 	%rd1265, %rd1261, %rd109;
	add.s64 	%rd1266, %rd1265, %rd1264;
	add.s64 	%rd1267, %rd1266, %rd2317;
	ld.const.u64 	%rd1268, [k_sha512];
	add.s64 	%rd1269, %rd1267, %rd1268;
	ld.local.u64 	%rd110, [%rd9+24];
	add.s64 	%rd1270, %rd1269, %rd110;
	ld.local.u64 	%rd111, [%rd9];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8453,%dummy}, %rd111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8454}, %rd111;
	}
	shf.r.wrap.b32 	%r8455, %r8454, %r8453, 28;
	shf.r.wrap.b32 	%r8456, %r8453, %r8454, 28;
	mov.b64 	%rd1271, {%r8456, %r8455};
	shf.l.wrap.b32 	%r8457, %r8453, %r8454, 30;
	shf.l.wrap.b32 	%r8458, %r8454, %r8453, 30;
	mov.b64 	%rd1272, {%r8458, %r8457};
	xor.b64  	%rd1273, %rd1271, %rd1272;
	shf.l.wrap.b32 	%r8459, %r8453, %r8454, 25;
	shf.l.wrap.b32 	%r8460, %r8454, %r8453, 25;
	mov.b64 	%rd1274, {%r8460, %r8459};
	xor.b64  	%rd1275, %rd1273, %rd1274;
	ld.local.u64 	%rd112, [%rd9+8];
	and.b64  	%rd1276, %rd112, %rd111;
	xor.b64  	%rd1277, %rd112, %rd111;
	ld.local.u64 	%rd113, [%rd9+16];
	and.b64  	%rd1278, %rd113, %rd1277;
	or.b64  	%rd1279, %rd1278, %rd1276;
	add.s64 	%rd1280, %rd1279, %rd1275;
	add.s64 	%rd1281, %rd1280, %rd1269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8461,%dummy}, %rd1270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8462}, %rd1270;
	}
	shf.r.wrap.b32 	%r8463, %r8462, %r8461, 14;
	shf.r.wrap.b32 	%r8464, %r8461, %r8462, 14;
	mov.b64 	%rd1282, {%r8464, %r8463};
	shf.r.wrap.b32 	%r8465, %r8462, %r8461, 18;
	shf.r.wrap.b32 	%r8466, %r8461, %r8462, 18;
	mov.b64 	%rd1283, {%r8466, %r8465};
	xor.b64  	%rd1284, %rd1282, %rd1283;
	shf.l.wrap.b32 	%r8467, %r8461, %r8462, 23;
	shf.l.wrap.b32 	%r8468, %r8462, %r8461, 23;
	mov.b64 	%rd1285, {%r8468, %r8467};
	xor.b64  	%rd1286, %rd1284, %rd1285;
	xor.b64  	%rd1287, %rd108, %rd106;
	and.b64  	%rd1288, %rd1270, %rd1287;
	xor.b64  	%rd1289, %rd1288, %rd108;
	add.s64 	%rd1290, %rd2318, %rd107;
	ld.const.u64 	%rd1291, [k_sha512+8];
	add.s64 	%rd1292, %rd1290, %rd1291;
	add.s64 	%rd1293, %rd1292, %rd1289;
	add.s64 	%rd1294, %rd1293, %rd1286;
	add.s64 	%rd1295, %rd1294, %rd113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8469,%dummy}, %rd1281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8470}, %rd1281;
	}
	shf.r.wrap.b32 	%r8471, %r8470, %r8469, 28;
	shf.r.wrap.b32 	%r8472, %r8469, %r8470, 28;
	mov.b64 	%rd1296, {%r8472, %r8471};
	shf.l.wrap.b32 	%r8473, %r8469, %r8470, 30;
	shf.l.wrap.b32 	%r8474, %r8470, %r8469, 30;
	mov.b64 	%rd1297, {%r8474, %r8473};
	xor.b64  	%rd1298, %rd1296, %rd1297;
	shf.l.wrap.b32 	%r8475, %r8469, %r8470, 25;
	shf.l.wrap.b32 	%r8476, %r8470, %r8469, 25;
	mov.b64 	%rd1299, {%r8476, %r8475};
	xor.b64  	%rd1300, %rd1298, %rd1299;
	and.b64  	%rd1301, %rd1281, %rd111;
	xor.b64  	%rd1302, %rd1281, %rd111;
	and.b64  	%rd1303, %rd1302, %rd112;
	or.b64  	%rd1304, %rd1303, %rd1301;
	add.s64 	%rd1305, %rd1300, %rd1304;
	add.s64 	%rd1306, %rd1305, %rd1294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8477,%dummy}, %rd1295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8478}, %rd1295;
	}
	shf.r.wrap.b32 	%r8479, %r8478, %r8477, 14;
	shf.r.wrap.b32 	%r8480, %r8477, %r8478, 14;
	mov.b64 	%rd1307, {%r8480, %r8479};
	shf.r.wrap.b32 	%r8481, %r8478, %r8477, 18;
	shf.r.wrap.b32 	%r8482, %r8477, %r8478, 18;
	mov.b64 	%rd1308, {%r8482, %r8481};
	xor.b64  	%rd1309, %rd1307, %rd1308;
	shf.l.wrap.b32 	%r8483, %r8477, %r8478, 23;
	shf.l.wrap.b32 	%r8484, %r8478, %r8477, 23;
	mov.b64 	%rd1310, {%r8484, %r8483};
	xor.b64  	%rd1311, %rd1309, %rd1310;
	xor.b64  	%rd1312, %rd1270, %rd106;
	and.b64  	%rd1313, %rd1295, %rd1312;
	xor.b64  	%rd1314, %rd1313, %rd106;
	add.s64 	%rd1315, %rd2319, %rd108;
	ld.const.u64 	%rd1316, [k_sha512+16];
	add.s64 	%rd1317, %rd1315, %rd1316;
	add.s64 	%rd1318, %rd1317, %rd1314;
	add.s64 	%rd1319, %rd1318, %rd1311;
	add.s64 	%rd1320, %rd1319, %rd112;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8485,%dummy}, %rd1306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8486}, %rd1306;
	}
	shf.r.wrap.b32 	%r8487, %r8486, %r8485, 28;
	shf.r.wrap.b32 	%r8488, %r8485, %r8486, 28;
	mov.b64 	%rd1321, {%r8488, %r8487};
	shf.l.wrap.b32 	%r8489, %r8485, %r8486, 30;
	shf.l.wrap.b32 	%r8490, %r8486, %r8485, 30;
	mov.b64 	%rd1322, {%r8490, %r8489};
	xor.b64  	%rd1323, %rd1321, %rd1322;
	shf.l.wrap.b32 	%r8491, %r8485, %r8486, 25;
	shf.l.wrap.b32 	%r8492, %r8486, %r8485, 25;
	mov.b64 	%rd1324, {%r8492, %r8491};
	xor.b64  	%rd1325, %rd1323, %rd1324;
	and.b64  	%rd1326, %rd1306, %rd1281;
	xor.b64  	%rd1327, %rd1306, %rd1281;
	and.b64  	%rd1328, %rd1327, %rd111;
	or.b64  	%rd1329, %rd1328, %rd1326;
	add.s64 	%rd1330, %rd1325, %rd1329;
	add.s64 	%rd1331, %rd1330, %rd1319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8493,%dummy}, %rd1320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8494}, %rd1320;
	}
	shf.r.wrap.b32 	%r8495, %r8494, %r8493, 14;
	shf.r.wrap.b32 	%r8496, %r8493, %r8494, 14;
	mov.b64 	%rd1332, {%r8496, %r8495};
	shf.r.wrap.b32 	%r8497, %r8494, %r8493, 18;
	shf.r.wrap.b32 	%r8498, %r8493, %r8494, 18;
	mov.b64 	%rd1333, {%r8498, %r8497};
	xor.b64  	%rd1334, %rd1332, %rd1333;
	shf.l.wrap.b32 	%r8499, %r8493, %r8494, 23;
	shf.l.wrap.b32 	%r8500, %r8494, %r8493, 23;
	mov.b64 	%rd1335, {%r8500, %r8499};
	xor.b64  	%rd1336, %rd1334, %rd1335;
	xor.b64  	%rd1337, %rd1295, %rd1270;
	and.b64  	%rd1338, %rd1320, %rd1337;
	xor.b64  	%rd1339, %rd1338, %rd1270;
	add.s64 	%rd1340, %rd2320, %rd106;
	ld.const.u64 	%rd1341, [k_sha512+24];
	add.s64 	%rd1342, %rd1340, %rd1341;
	add.s64 	%rd1343, %rd1342, %rd1339;
	add.s64 	%rd1344, %rd1343, %rd1336;
	add.s64 	%rd1345, %rd1344, %rd111;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8501,%dummy}, %rd1331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8502}, %rd1331;
	}
	shf.r.wrap.b32 	%r8503, %r8502, %r8501, 28;
	shf.r.wrap.b32 	%r8504, %r8501, %r8502, 28;
	mov.b64 	%rd1346, {%r8504, %r8503};
	shf.l.wrap.b32 	%r8505, %r8501, %r8502, 30;
	shf.l.wrap.b32 	%r8506, %r8502, %r8501, 30;
	mov.b64 	%rd1347, {%r8506, %r8505};
	xor.b64  	%rd1348, %rd1346, %rd1347;
	shf.l.wrap.b32 	%r8507, %r8501, %r8502, 25;
	shf.l.wrap.b32 	%r8508, %r8502, %r8501, 25;
	mov.b64 	%rd1349, {%r8508, %r8507};
	xor.b64  	%rd1350, %rd1348, %rd1349;
	and.b64  	%rd1351, %rd1331, %rd1306;
	xor.b64  	%rd1352, %rd1331, %rd1306;
	and.b64  	%rd1353, %rd1352, %rd1281;
	or.b64  	%rd1354, %rd1353, %rd1351;
	add.s64 	%rd1355, %rd1350, %rd1354;
	add.s64 	%rd1356, %rd1355, %rd1344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8509,%dummy}, %rd1345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8510}, %rd1345;
	}
	shf.r.wrap.b32 	%r8511, %r8510, %r8509, 14;
	shf.r.wrap.b32 	%r8512, %r8509, %r8510, 14;
	mov.b64 	%rd1357, {%r8512, %r8511};
	shf.r.wrap.b32 	%r8513, %r8510, %r8509, 18;
	shf.r.wrap.b32 	%r8514, %r8509, %r8510, 18;
	mov.b64 	%rd1358, {%r8514, %r8513};
	xor.b64  	%rd1359, %rd1357, %rd1358;
	shf.l.wrap.b32 	%r8515, %r8509, %r8510, 23;
	shf.l.wrap.b32 	%r8516, %r8510, %r8509, 23;
	mov.b64 	%rd1360, {%r8516, %r8515};
	xor.b64  	%rd1361, %rd1359, %rd1360;
	xor.b64  	%rd1362, %rd1320, %rd1295;
	and.b64  	%rd1363, %rd1345, %rd1362;
	xor.b64  	%rd1364, %rd1363, %rd1295;
	add.s64 	%rd1365, %rd1270, %rd2321;
	ld.const.u64 	%rd1366, [k_sha512+32];
	add.s64 	%rd1367, %rd1365, %rd1366;
	add.s64 	%rd1368, %rd1367, %rd1364;
	add.s64 	%rd1369, %rd1368, %rd1361;
	add.s64 	%rd1370, %rd1369, %rd1281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8517,%dummy}, %rd1356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8518}, %rd1356;
	}
	shf.r.wrap.b32 	%r8519, %r8518, %r8517, 28;
	shf.r.wrap.b32 	%r8520, %r8517, %r8518, 28;
	mov.b64 	%rd1371, {%r8520, %r8519};
	shf.l.wrap.b32 	%r8521, %r8517, %r8518, 30;
	shf.l.wrap.b32 	%r8522, %r8518, %r8517, 30;
	mov.b64 	%rd1372, {%r8522, %r8521};
	xor.b64  	%rd1373, %rd1371, %rd1372;
	shf.l.wrap.b32 	%r8523, %r8517, %r8518, 25;
	shf.l.wrap.b32 	%r8524, %r8518, %r8517, 25;
	mov.b64 	%rd1374, {%r8524, %r8523};
	xor.b64  	%rd1375, %rd1373, %rd1374;
	and.b64  	%rd1376, %rd1356, %rd1331;
	xor.b64  	%rd1377, %rd1356, %rd1331;
	and.b64  	%rd1378, %rd1377, %rd1306;
	or.b64  	%rd1379, %rd1378, %rd1376;
	add.s64 	%rd1380, %rd1375, %rd1379;
	add.s64 	%rd1381, %rd1380, %rd1369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8525,%dummy}, %rd1370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8526}, %rd1370;
	}
	shf.r.wrap.b32 	%r8527, %r8526, %r8525, 14;
	shf.r.wrap.b32 	%r8528, %r8525, %r8526, 14;
	mov.b64 	%rd1382, {%r8528, %r8527};
	shf.r.wrap.b32 	%r8529, %r8526, %r8525, 18;
	shf.r.wrap.b32 	%r8530, %r8525, %r8526, 18;
	mov.b64 	%rd1383, {%r8530, %r8529};
	xor.b64  	%rd1384, %rd1382, %rd1383;
	shf.l.wrap.b32 	%r8531, %r8525, %r8526, 23;
	shf.l.wrap.b32 	%r8532, %r8526, %r8525, 23;
	mov.b64 	%rd1385, {%r8532, %r8531};
	xor.b64  	%rd1386, %rd1384, %rd1385;
	xor.b64  	%rd1387, %rd1345, %rd1320;
	and.b64  	%rd1388, %rd1370, %rd1387;
	xor.b64  	%rd1389, %rd1388, %rd1320;
	ld.const.u64 	%rd1390, [k_sha512+40];
	add.s64 	%rd1391, %rd1390, %rd2322;
	add.s64 	%rd1392, %rd1391, %rd1295;
	add.s64 	%rd1393, %rd1392, %rd1389;
	add.s64 	%rd1394, %rd1393, %rd1386;
	add.s64 	%rd1395, %rd1394, %rd1306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8533,%dummy}, %rd1381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8534}, %rd1381;
	}
	shf.r.wrap.b32 	%r8535, %r8534, %r8533, 28;
	shf.r.wrap.b32 	%r8536, %r8533, %r8534, 28;
	mov.b64 	%rd1396, {%r8536, %r8535};
	shf.l.wrap.b32 	%r8537, %r8533, %r8534, 30;
	shf.l.wrap.b32 	%r8538, %r8534, %r8533, 30;
	mov.b64 	%rd1397, {%r8538, %r8537};
	xor.b64  	%rd1398, %rd1396, %rd1397;
	shf.l.wrap.b32 	%r8539, %r8533, %r8534, 25;
	shf.l.wrap.b32 	%r8540, %r8534, %r8533, 25;
	mov.b64 	%rd1399, {%r8540, %r8539};
	xor.b64  	%rd1400, %rd1398, %rd1399;
	and.b64  	%rd1401, %rd1381, %rd1356;
	xor.b64  	%rd1402, %rd1381, %rd1356;
	and.b64  	%rd1403, %rd1402, %rd1331;
	or.b64  	%rd1404, %rd1403, %rd1401;
	add.s64 	%rd1405, %rd1400, %rd1404;
	add.s64 	%rd1406, %rd1405, %rd1394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8541,%dummy}, %rd1395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8542}, %rd1395;
	}
	shf.r.wrap.b32 	%r8543, %r8542, %r8541, 14;
	shf.r.wrap.b32 	%r8544, %r8541, %r8542, 14;
	mov.b64 	%rd1407, {%r8544, %r8543};
	shf.r.wrap.b32 	%r8545, %r8542, %r8541, 18;
	shf.r.wrap.b32 	%r8546, %r8541, %r8542, 18;
	mov.b64 	%rd1408, {%r8546, %r8545};
	xor.b64  	%rd1409, %rd1407, %rd1408;
	shf.l.wrap.b32 	%r8547, %r8541, %r8542, 23;
	shf.l.wrap.b32 	%r8548, %r8542, %r8541, 23;
	mov.b64 	%rd1410, {%r8548, %r8547};
	xor.b64  	%rd1411, %rd1409, %rd1410;
	xor.b64  	%rd1412, %rd1370, %rd1345;
	and.b64  	%rd1413, %rd1395, %rd1412;
	xor.b64  	%rd1414, %rd1413, %rd1345;
	ld.const.u64 	%rd1415, [k_sha512+48];
	add.s64 	%rd1416, %rd1415, %rd2323;
	add.s64 	%rd1417, %rd1416, %rd1320;
	add.s64 	%rd1418, %rd1417, %rd1414;
	add.s64 	%rd1419, %rd1418, %rd1411;
	add.s64 	%rd1420, %rd1419, %rd1331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8549,%dummy}, %rd1406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8550}, %rd1406;
	}
	shf.r.wrap.b32 	%r8551, %r8550, %r8549, 28;
	shf.r.wrap.b32 	%r8552, %r8549, %r8550, 28;
	mov.b64 	%rd1421, {%r8552, %r8551};
	shf.l.wrap.b32 	%r8553, %r8549, %r8550, 30;
	shf.l.wrap.b32 	%r8554, %r8550, %r8549, 30;
	mov.b64 	%rd1422, {%r8554, %r8553};
	xor.b64  	%rd1423, %rd1421, %rd1422;
	shf.l.wrap.b32 	%r8555, %r8549, %r8550, 25;
	shf.l.wrap.b32 	%r8556, %r8550, %r8549, 25;
	mov.b64 	%rd1424, {%r8556, %r8555};
	xor.b64  	%rd1425, %rd1423, %rd1424;
	and.b64  	%rd1426, %rd1406, %rd1381;
	xor.b64  	%rd1427, %rd1406, %rd1381;
	and.b64  	%rd1428, %rd1427, %rd1356;
	or.b64  	%rd1429, %rd1428, %rd1426;
	add.s64 	%rd1430, %rd1425, %rd1429;
	add.s64 	%rd1431, %rd1430, %rd1419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8557,%dummy}, %rd1420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8558}, %rd1420;
	}
	shf.r.wrap.b32 	%r8559, %r8558, %r8557, 14;
	shf.r.wrap.b32 	%r8560, %r8557, %r8558, 14;
	mov.b64 	%rd1432, {%r8560, %r8559};
	shf.r.wrap.b32 	%r8561, %r8558, %r8557, 18;
	shf.r.wrap.b32 	%r8562, %r8557, %r8558, 18;
	mov.b64 	%rd1433, {%r8562, %r8561};
	xor.b64  	%rd1434, %rd1432, %rd1433;
	shf.l.wrap.b32 	%r8563, %r8557, %r8558, 23;
	shf.l.wrap.b32 	%r8564, %r8558, %r8557, 23;
	mov.b64 	%rd1435, {%r8564, %r8563};
	xor.b64  	%rd1436, %rd1434, %rd1435;
	xor.b64  	%rd1437, %rd1395, %rd1370;
	and.b64  	%rd1438, %rd1420, %rd1437;
	xor.b64  	%rd1439, %rd1438, %rd1370;
	ld.const.u64 	%rd1440, [k_sha512+56];
	add.s64 	%rd1441, %rd1440, %rd2324;
	add.s64 	%rd1442, %rd1441, %rd1345;
	add.s64 	%rd1443, %rd1442, %rd1439;
	add.s64 	%rd1444, %rd1443, %rd1436;
	add.s64 	%rd1445, %rd1444, %rd1356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8565,%dummy}, %rd1431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8566}, %rd1431;
	}
	shf.r.wrap.b32 	%r8567, %r8566, %r8565, 28;
	shf.r.wrap.b32 	%r8568, %r8565, %r8566, 28;
	mov.b64 	%rd1446, {%r8568, %r8567};
	shf.l.wrap.b32 	%r8569, %r8565, %r8566, 30;
	shf.l.wrap.b32 	%r8570, %r8566, %r8565, 30;
	mov.b64 	%rd1447, {%r8570, %r8569};
	xor.b64  	%rd1448, %rd1446, %rd1447;
	shf.l.wrap.b32 	%r8571, %r8565, %r8566, 25;
	shf.l.wrap.b32 	%r8572, %r8566, %r8565, 25;
	mov.b64 	%rd1449, {%r8572, %r8571};
	xor.b64  	%rd1450, %rd1448, %rd1449;
	and.b64  	%rd1451, %rd1431, %rd1406;
	xor.b64  	%rd1452, %rd1431, %rd1406;
	and.b64  	%rd1453, %rd1452, %rd1381;
	or.b64  	%rd1454, %rd1453, %rd1451;
	add.s64 	%rd1455, %rd1450, %rd1454;
	add.s64 	%rd1456, %rd1455, %rd1444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8573,%dummy}, %rd1445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8574}, %rd1445;
	}
	shf.r.wrap.b32 	%r8575, %r8574, %r8573, 14;
	shf.r.wrap.b32 	%r8576, %r8573, %r8574, 14;
	mov.b64 	%rd1457, {%r8576, %r8575};
	shf.r.wrap.b32 	%r8577, %r8574, %r8573, 18;
	shf.r.wrap.b32 	%r8578, %r8573, %r8574, 18;
	mov.b64 	%rd1458, {%r8578, %r8577};
	xor.b64  	%rd1459, %rd1457, %rd1458;
	shf.l.wrap.b32 	%r8579, %r8573, %r8574, 23;
	shf.l.wrap.b32 	%r8580, %r8574, %r8573, 23;
	mov.b64 	%rd1460, {%r8580, %r8579};
	xor.b64  	%rd1461, %rd1459, %rd1460;
	xor.b64  	%rd1462, %rd1420, %rd1395;
	and.b64  	%rd1463, %rd1445, %rd1462;
	xor.b64  	%rd1464, %rd1463, %rd1395;
	ld.const.u64 	%rd1465, [k_sha512+64];
	add.s64 	%rd1466, %rd1465, %rd2308;
	add.s64 	%rd1467, %rd1466, %rd1370;
	add.s64 	%rd1468, %rd1467, %rd1464;
	add.s64 	%rd1469, %rd1468, %rd1461;
	add.s64 	%rd1470, %rd1469, %rd1381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8581,%dummy}, %rd1456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8582}, %rd1456;
	}
	shf.r.wrap.b32 	%r8583, %r8582, %r8581, 28;
	shf.r.wrap.b32 	%r8584, %r8581, %r8582, 28;
	mov.b64 	%rd1471, {%r8584, %r8583};
	shf.l.wrap.b32 	%r8585, %r8581, %r8582, 30;
	shf.l.wrap.b32 	%r8586, %r8582, %r8581, 30;
	mov.b64 	%rd1472, {%r8586, %r8585};
	xor.b64  	%rd1473, %rd1471, %rd1472;
	shf.l.wrap.b32 	%r8587, %r8581, %r8582, 25;
	shf.l.wrap.b32 	%r8588, %r8582, %r8581, 25;
	mov.b64 	%rd1474, {%r8588, %r8587};
	xor.b64  	%rd1475, %rd1473, %rd1474;
	and.b64  	%rd1476, %rd1456, %rd1431;
	xor.b64  	%rd1477, %rd1456, %rd1431;
	and.b64  	%rd1478, %rd1477, %rd1406;
	or.b64  	%rd1479, %rd1478, %rd1476;
	add.s64 	%rd1480, %rd1475, %rd1479;
	add.s64 	%rd1481, %rd1480, %rd1469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8589,%dummy}, %rd1470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8590}, %rd1470;
	}
	shf.r.wrap.b32 	%r8591, %r8590, %r8589, 14;
	shf.r.wrap.b32 	%r8592, %r8589, %r8590, 14;
	mov.b64 	%rd1482, {%r8592, %r8591};
	shf.r.wrap.b32 	%r8593, %r8590, %r8589, 18;
	shf.r.wrap.b32 	%r8594, %r8589, %r8590, 18;
	mov.b64 	%rd1483, {%r8594, %r8593};
	xor.b64  	%rd1484, %rd1482, %rd1483;
	shf.l.wrap.b32 	%r8595, %r8589, %r8590, 23;
	shf.l.wrap.b32 	%r8596, %r8590, %r8589, 23;
	mov.b64 	%rd1485, {%r8596, %r8595};
	xor.b64  	%rd1486, %rd1484, %rd1485;
	xor.b64  	%rd1487, %rd1445, %rd1420;
	and.b64  	%rd1488, %rd1470, %rd1487;
	xor.b64  	%rd1489, %rd1488, %rd1420;
	ld.const.u64 	%rd1490, [k_sha512+72];
	add.s64 	%rd1491, %rd1490, %rd2307;
	add.s64 	%rd1492, %rd1491, %rd1395;
	add.s64 	%rd1493, %rd1492, %rd1489;
	add.s64 	%rd1494, %rd1493, %rd1486;
	add.s64 	%rd1495, %rd1494, %rd1406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8597,%dummy}, %rd1481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8598}, %rd1481;
	}
	shf.r.wrap.b32 	%r8599, %r8598, %r8597, 28;
	shf.r.wrap.b32 	%r8600, %r8597, %r8598, 28;
	mov.b64 	%rd1496, {%r8600, %r8599};
	shf.l.wrap.b32 	%r8601, %r8597, %r8598, 30;
	shf.l.wrap.b32 	%r8602, %r8598, %r8597, 30;
	mov.b64 	%rd1497, {%r8602, %r8601};
	xor.b64  	%rd1498, %rd1496, %rd1497;
	shf.l.wrap.b32 	%r8603, %r8597, %r8598, 25;
	shf.l.wrap.b32 	%r8604, %r8598, %r8597, 25;
	mov.b64 	%rd1499, {%r8604, %r8603};
	xor.b64  	%rd1500, %rd1498, %rd1499;
	and.b64  	%rd1501, %rd1481, %rd1456;
	xor.b64  	%rd1502, %rd1481, %rd1456;
	and.b64  	%rd1503, %rd1502, %rd1431;
	or.b64  	%rd1504, %rd1503, %rd1501;
	add.s64 	%rd1505, %rd1500, %rd1504;
	add.s64 	%rd1506, %rd1505, %rd1494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8605,%dummy}, %rd1495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8606}, %rd1495;
	}
	shf.r.wrap.b32 	%r8607, %r8606, %r8605, 14;
	shf.r.wrap.b32 	%r8608, %r8605, %r8606, 14;
	mov.b64 	%rd1507, {%r8608, %r8607};
	shf.r.wrap.b32 	%r8609, %r8606, %r8605, 18;
	shf.r.wrap.b32 	%r8610, %r8605, %r8606, 18;
	mov.b64 	%rd1508, {%r8610, %r8609};
	xor.b64  	%rd1509, %rd1507, %rd1508;
	shf.l.wrap.b32 	%r8611, %r8605, %r8606, 23;
	shf.l.wrap.b32 	%r8612, %r8606, %r8605, 23;
	mov.b64 	%rd1510, {%r8612, %r8611};
	xor.b64  	%rd1511, %rd1509, %rd1510;
	xor.b64  	%rd1512, %rd1470, %rd1445;
	and.b64  	%rd1513, %rd1495, %rd1512;
	xor.b64  	%rd1514, %rd1513, %rd1445;
	ld.const.u64 	%rd1515, [k_sha512+80];
	add.s64 	%rd1516, %rd1515, %rd2306;
	add.s64 	%rd1517, %rd1516, %rd1420;
	add.s64 	%rd1518, %rd1517, %rd1514;
	add.s64 	%rd1519, %rd1518, %rd1511;
	add.s64 	%rd1520, %rd1519, %rd1431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8613,%dummy}, %rd1506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8614}, %rd1506;
	}
	shf.r.wrap.b32 	%r8615, %r8614, %r8613, 28;
	shf.r.wrap.b32 	%r8616, %r8613, %r8614, 28;
	mov.b64 	%rd1521, {%r8616, %r8615};
	shf.l.wrap.b32 	%r8617, %r8613, %r8614, 30;
	shf.l.wrap.b32 	%r8618, %r8614, %r8613, 30;
	mov.b64 	%rd1522, {%r8618, %r8617};
	xor.b64  	%rd1523, %rd1521, %rd1522;
	shf.l.wrap.b32 	%r8619, %r8613, %r8614, 25;
	shf.l.wrap.b32 	%r8620, %r8614, %r8613, 25;
	mov.b64 	%rd1524, {%r8620, %r8619};
	xor.b64  	%rd1525, %rd1523, %rd1524;
	and.b64  	%rd1526, %rd1506, %rd1481;
	xor.b64  	%rd1527, %rd1506, %rd1481;
	and.b64  	%rd1528, %rd1527, %rd1456;
	or.b64  	%rd1529, %rd1528, %rd1526;
	add.s64 	%rd1530, %rd1525, %rd1529;
	add.s64 	%rd1531, %rd1530, %rd1519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8621,%dummy}, %rd1520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8622}, %rd1520;
	}
	shf.r.wrap.b32 	%r8623, %r8622, %r8621, 14;
	shf.r.wrap.b32 	%r8624, %r8621, %r8622, 14;
	mov.b64 	%rd1532, {%r8624, %r8623};
	shf.r.wrap.b32 	%r8625, %r8622, %r8621, 18;
	shf.r.wrap.b32 	%r8626, %r8621, %r8622, 18;
	mov.b64 	%rd1533, {%r8626, %r8625};
	xor.b64  	%rd1534, %rd1532, %rd1533;
	shf.l.wrap.b32 	%r8627, %r8621, %r8622, 23;
	shf.l.wrap.b32 	%r8628, %r8622, %r8621, 23;
	mov.b64 	%rd1535, {%r8628, %r8627};
	xor.b64  	%rd1536, %rd1534, %rd1535;
	xor.b64  	%rd1537, %rd1495, %rd1470;
	and.b64  	%rd1538, %rd1520, %rd1537;
	xor.b64  	%rd1539, %rd1538, %rd1470;
	ld.const.u64 	%rd1540, [k_sha512+88];
	add.s64 	%rd1541, %rd1540, %rd2305;
	add.s64 	%rd1542, %rd1541, %rd1445;
	add.s64 	%rd1543, %rd1542, %rd1539;
	add.s64 	%rd1544, %rd1543, %rd1536;
	add.s64 	%rd1545, %rd1544, %rd1456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8629,%dummy}, %rd1531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8630}, %rd1531;
	}
	shf.r.wrap.b32 	%r8631, %r8630, %r8629, 28;
	shf.r.wrap.b32 	%r8632, %r8629, %r8630, 28;
	mov.b64 	%rd1546, {%r8632, %r8631};
	shf.l.wrap.b32 	%r8633, %r8629, %r8630, 30;
	shf.l.wrap.b32 	%r8634, %r8630, %r8629, 30;
	mov.b64 	%rd1547, {%r8634, %r8633};
	xor.b64  	%rd1548, %rd1546, %rd1547;
	shf.l.wrap.b32 	%r8635, %r8629, %r8630, 25;
	shf.l.wrap.b32 	%r8636, %r8630, %r8629, 25;
	mov.b64 	%rd1549, {%r8636, %r8635};
	xor.b64  	%rd1550, %rd1548, %rd1549;
	and.b64  	%rd1551, %rd1531, %rd1506;
	xor.b64  	%rd1552, %rd1531, %rd1506;
	and.b64  	%rd1553, %rd1552, %rd1481;
	or.b64  	%rd1554, %rd1553, %rd1551;
	add.s64 	%rd1555, %rd1550, %rd1554;
	add.s64 	%rd1556, %rd1555, %rd1544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8637,%dummy}, %rd1545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8638}, %rd1545;
	}
	shf.r.wrap.b32 	%r8639, %r8638, %r8637, 14;
	shf.r.wrap.b32 	%r8640, %r8637, %r8638, 14;
	mov.b64 	%rd1557, {%r8640, %r8639};
	shf.r.wrap.b32 	%r8641, %r8638, %r8637, 18;
	shf.r.wrap.b32 	%r8642, %r8637, %r8638, 18;
	mov.b64 	%rd1558, {%r8642, %r8641};
	xor.b64  	%rd1559, %rd1557, %rd1558;
	shf.l.wrap.b32 	%r8643, %r8637, %r8638, 23;
	shf.l.wrap.b32 	%r8644, %r8638, %r8637, 23;
	mov.b64 	%rd1560, {%r8644, %r8643};
	xor.b64  	%rd1561, %rd1559, %rd1560;
	xor.b64  	%rd1562, %rd1520, %rd1495;
	and.b64  	%rd1563, %rd1545, %rd1562;
	xor.b64  	%rd1564, %rd1563, %rd1495;
	ld.const.u64 	%rd1565, [k_sha512+96];
	add.s64 	%rd1566, %rd1565, %rd2304;
	add.s64 	%rd1567, %rd1566, %rd1470;
	add.s64 	%rd1568, %rd1567, %rd1564;
	add.s64 	%rd1569, %rd1568, %rd1561;
	add.s64 	%rd2316, %rd1569, %rd1481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8645,%dummy}, %rd1556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8646}, %rd1556;
	}
	shf.r.wrap.b32 	%r8647, %r8646, %r8645, 28;
	shf.r.wrap.b32 	%r8648, %r8645, %r8646, 28;
	mov.b64 	%rd1570, {%r8648, %r8647};
	shf.l.wrap.b32 	%r8649, %r8645, %r8646, 30;
	shf.l.wrap.b32 	%r8650, %r8646, %r8645, 30;
	mov.b64 	%rd1571, {%r8650, %r8649};
	xor.b64  	%rd1572, %rd1570, %rd1571;
	shf.l.wrap.b32 	%r8651, %r8645, %r8646, 25;
	shf.l.wrap.b32 	%r8652, %r8646, %r8645, 25;
	mov.b64 	%rd1573, {%r8652, %r8651};
	xor.b64  	%rd1574, %rd1572, %rd1573;
	and.b64  	%rd1575, %rd1556, %rd1531;
	xor.b64  	%rd1576, %rd1556, %rd1531;
	and.b64  	%rd1577, %rd1576, %rd1506;
	or.b64  	%rd1578, %rd1577, %rd1575;
	add.s64 	%rd1579, %rd1574, %rd1578;
	add.s64 	%rd2312, %rd1579, %rd1569;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8653,%dummy}, %rd2316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8654}, %rd2316;
	}
	shf.r.wrap.b32 	%r8655, %r8654, %r8653, 14;
	shf.r.wrap.b32 	%r8656, %r8653, %r8654, 14;
	mov.b64 	%rd1580, {%r8656, %r8655};
	shf.r.wrap.b32 	%r8657, %r8654, %r8653, 18;
	shf.r.wrap.b32 	%r8658, %r8653, %r8654, 18;
	mov.b64 	%rd1581, {%r8658, %r8657};
	xor.b64  	%rd1582, %rd1580, %rd1581;
	shf.l.wrap.b32 	%r8659, %r8653, %r8654, 23;
	shf.l.wrap.b32 	%r8660, %r8654, %r8653, 23;
	mov.b64 	%rd1583, {%r8660, %r8659};
	xor.b64  	%rd1584, %rd1582, %rd1583;
	xor.b64  	%rd1585, %rd1545, %rd1520;
	and.b64  	%rd1586, %rd2316, %rd1585;
	xor.b64  	%rd1587, %rd1586, %rd1520;
	ld.const.u64 	%rd1588, [k_sha512+104];
	add.s64 	%rd1589, %rd1588, %rd2303;
	add.s64 	%rd1590, %rd1589, %rd1495;
	add.s64 	%rd1591, %rd1590, %rd1587;
	add.s64 	%rd1592, %rd1591, %rd1584;
	add.s64 	%rd2315, %rd1592, %rd1506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8661,%dummy}, %rd2312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8662}, %rd2312;
	}
	shf.r.wrap.b32 	%r8663, %r8662, %r8661, 28;
	shf.r.wrap.b32 	%r8664, %r8661, %r8662, 28;
	mov.b64 	%rd1593, {%r8664, %r8663};
	shf.l.wrap.b32 	%r8665, %r8661, %r8662, 30;
	shf.l.wrap.b32 	%r8666, %r8662, %r8661, 30;
	mov.b64 	%rd1594, {%r8666, %r8665};
	xor.b64  	%rd1595, %rd1593, %rd1594;
	shf.l.wrap.b32 	%r8667, %r8661, %r8662, 25;
	shf.l.wrap.b32 	%r8668, %r8662, %r8661, 25;
	mov.b64 	%rd1596, {%r8668, %r8667};
	xor.b64  	%rd1597, %rd1595, %rd1596;
	and.b64  	%rd1598, %rd2312, %rd1556;
	xor.b64  	%rd1599, %rd2312, %rd1556;
	and.b64  	%rd1600, %rd1599, %rd1531;
	or.b64  	%rd1601, %rd1600, %rd1598;
	add.s64 	%rd1602, %rd1597, %rd1601;
	add.s64 	%rd2311, %rd1602, %rd1592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8669,%dummy}, %rd2315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8670}, %rd2315;
	}
	shf.r.wrap.b32 	%r8671, %r8670, %r8669, 14;
	shf.r.wrap.b32 	%r8672, %r8669, %r8670, 14;
	mov.b64 	%rd1603, {%r8672, %r8671};
	shf.r.wrap.b32 	%r8673, %r8670, %r8669, 18;
	shf.r.wrap.b32 	%r8674, %r8669, %r8670, 18;
	mov.b64 	%rd1604, {%r8674, %r8673};
	xor.b64  	%rd1605, %rd1603, %rd1604;
	shf.l.wrap.b32 	%r8675, %r8669, %r8670, 23;
	shf.l.wrap.b32 	%r8676, %r8670, %r8669, 23;
	mov.b64 	%rd1606, {%r8676, %r8675};
	xor.b64  	%rd1607, %rd1605, %rd1606;
	xor.b64  	%rd1608, %rd2316, %rd1545;
	and.b64  	%rd1609, %rd2315, %rd1608;
	xor.b64  	%rd1610, %rd1609, %rd1545;
	ld.const.u64 	%rd1611, [k_sha512+112];
	add.s64 	%rd1612, %rd1611, %rd2302;
	add.s64 	%rd1613, %rd1612, %rd1520;
	add.s64 	%rd1614, %rd1613, %rd1610;
	add.s64 	%rd1615, %rd1614, %rd1607;
	add.s64 	%rd2314, %rd1615, %rd1531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8677,%dummy}, %rd2311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8678}, %rd2311;
	}
	shf.r.wrap.b32 	%r8679, %r8678, %r8677, 28;
	shf.r.wrap.b32 	%r8680, %r8677, %r8678, 28;
	mov.b64 	%rd1616, {%r8680, %r8679};
	shf.l.wrap.b32 	%r8681, %r8677, %r8678, 30;
	shf.l.wrap.b32 	%r8682, %r8678, %r8677, 30;
	mov.b64 	%rd1617, {%r8682, %r8681};
	xor.b64  	%rd1618, %rd1616, %rd1617;
	shf.l.wrap.b32 	%r8683, %r8677, %r8678, 25;
	shf.l.wrap.b32 	%r8684, %r8678, %r8677, 25;
	mov.b64 	%rd1619, {%r8684, %r8683};
	xor.b64  	%rd1620, %rd1618, %rd1619;
	and.b64  	%rd1621, %rd2311, %rd2312;
	xor.b64  	%rd1622, %rd2311, %rd2312;
	and.b64  	%rd1623, %rd1622, %rd1556;
	or.b64  	%rd1624, %rd1623, %rd1621;
	add.s64 	%rd1625, %rd1620, %rd1624;
	add.s64 	%rd2310, %rd1625, %rd1615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8685,%dummy}, %rd2314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8686}, %rd2314;
	}
	shf.r.wrap.b32 	%r8687, %r8686, %r8685, 14;
	shf.r.wrap.b32 	%r8688, %r8685, %r8686, 14;
	mov.b64 	%rd1626, {%r8688, %r8687};
	shf.r.wrap.b32 	%r8689, %r8686, %r8685, 18;
	shf.r.wrap.b32 	%r8690, %r8685, %r8686, 18;
	mov.b64 	%rd1627, {%r8690, %r8689};
	xor.b64  	%rd1628, %rd1626, %rd1627;
	shf.l.wrap.b32 	%r8691, %r8685, %r8686, 23;
	shf.l.wrap.b32 	%r8692, %r8686, %r8685, 23;
	mov.b64 	%rd1629, {%r8692, %r8691};
	xor.b64  	%rd1630, %rd1628, %rd1629;
	xor.b64  	%rd1631, %rd2315, %rd2316;
	and.b64  	%rd1632, %rd2314, %rd1631;
	xor.b64  	%rd1633, %rd1632, %rd2316;
	ld.const.u64 	%rd1634, [k_sha512+120];
	add.s64 	%rd1635, %rd1634, %rd2301;
	add.s64 	%rd1636, %rd1635, %rd1545;
	add.s64 	%rd1637, %rd1636, %rd1633;
	add.s64 	%rd1638, %rd1637, %rd1630;
	add.s64 	%rd2313, %rd1638, %rd1556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8693,%dummy}, %rd2310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8694}, %rd2310;
	}
	shf.r.wrap.b32 	%r8695, %r8694, %r8693, 28;
	shf.r.wrap.b32 	%r8696, %r8693, %r8694, 28;
	mov.b64 	%rd1639, {%r8696, %r8695};
	shf.l.wrap.b32 	%r8697, %r8693, %r8694, 30;
	shf.l.wrap.b32 	%r8698, %r8694, %r8693, 30;
	mov.b64 	%rd1640, {%r8698, %r8697};
	xor.b64  	%rd1641, %rd1639, %rd1640;
	shf.l.wrap.b32 	%r8699, %r8693, %r8694, 25;
	shf.l.wrap.b32 	%r8700, %r8694, %r8693, 25;
	mov.b64 	%rd1642, {%r8700, %r8699};
	xor.b64  	%rd1643, %rd1641, %rd1642;
	and.b64  	%rd1644, %rd2310, %rd2311;
	xor.b64  	%rd1645, %rd2310, %rd2311;
	and.b64  	%rd1646, %rd1645, %rd2312;
	or.b64  	%rd1647, %rd1646, %rd1644;
	add.s64 	%rd1648, %rd1643, %rd1647;
	add.s64 	%rd2309, %rd1648, %rd1638;
	mov.u32 	%r9193, 16;

BB0_176:
	shr.u64 	%rd1649, %rd2302, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8701}, %rd2302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8702,%dummy}, %rd2302;
	}
	shf.l.wrap.b32 	%r8703, %r8702, %r8701, 3;
	shf.l.wrap.b32 	%r8704, %r8701, %r8702, 3;
	mov.b64 	%rd1650, {%r8704, %r8703};
	xor.b64  	%rd1651, %rd1650, %rd1649;
	shf.r.wrap.b32 	%r8705, %r8701, %r8702, 19;
	shf.r.wrap.b32 	%r8706, %r8702, %r8701, 19;
	mov.b64 	%rd1652, {%r8706, %r8705};
	xor.b64  	%rd1653, %rd1651, %rd1652;
	shr.u64 	%rd1654, %rd2318, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8707,%dummy}, %rd2318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8708}, %rd2318;
	}
	shf.r.wrap.b32 	%r8709, %r8708, %r8707, 8;
	shf.r.wrap.b32 	%r8710, %r8707, %r8708, 8;
	mov.b64 	%rd1655, {%r8710, %r8709};
	xor.b64  	%rd1656, %rd1655, %rd1654;
	shf.r.wrap.b32 	%r8711, %r8708, %r8707, 1;
	shf.r.wrap.b32 	%r8712, %r8707, %r8708, 1;
	mov.b64 	%rd1657, {%r8712, %r8711};
	xor.b64  	%rd1658, %rd1656, %rd1657;
	add.s64 	%rd1659, %rd1658, %rd2317;
	add.s64 	%rd1660, %rd1659, %rd2307;
	add.s64 	%rd2317, %rd1660, %rd1653;
	shr.u64 	%rd1661, %rd2301, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8713}, %rd2301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8714,%dummy}, %rd2301;
	}
	shf.l.wrap.b32 	%r8715, %r8714, %r8713, 3;
	shf.l.wrap.b32 	%r8716, %r8713, %r8714, 3;
	mov.b64 	%rd1662, {%r8716, %r8715};
	xor.b64  	%rd1663, %rd1662, %rd1661;
	shf.r.wrap.b32 	%r8717, %r8713, %r8714, 19;
	shf.r.wrap.b32 	%r8718, %r8714, %r8713, 19;
	mov.b64 	%rd1664, {%r8718, %r8717};
	xor.b64  	%rd1665, %rd1663, %rd1664;
	shr.u64 	%rd1666, %rd2319, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8719,%dummy}, %rd2319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8720}, %rd2319;
	}
	shf.r.wrap.b32 	%r8721, %r8720, %r8719, 8;
	shf.r.wrap.b32 	%r8722, %r8719, %r8720, 8;
	mov.b64 	%rd1667, {%r8722, %r8721};
	xor.b64  	%rd1668, %rd1667, %rd1666;
	shf.r.wrap.b32 	%r8723, %r8720, %r8719, 1;
	shf.r.wrap.b32 	%r8724, %r8719, %r8720, 1;
	mov.b64 	%rd1669, {%r8724, %r8723};
	xor.b64  	%rd1670, %rd1668, %rd1669;
	add.s64 	%rd1671, %rd1670, %rd2318;
	add.s64 	%rd1672, %rd1671, %rd2306;
	add.s64 	%rd2318, %rd1672, %rd1665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8725,%dummy}, %rd2317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8726}, %rd2317;
	}
	shf.r.wrap.b32 	%r8727, %r8726, %r8725, 19;
	shf.r.wrap.b32 	%r8728, %r8725, %r8726, 19;
	mov.b64 	%rd1673, {%r8728, %r8727};
	shf.l.wrap.b32 	%r8729, %r8725, %r8726, 3;
	shf.l.wrap.b32 	%r8730, %r8726, %r8725, 3;
	mov.b64 	%rd1674, {%r8730, %r8729};
	shr.u64 	%rd1675, %rd2317, 6;
	xor.b64  	%rd1676, %rd1674, %rd1675;
	xor.b64  	%rd1677, %rd1676, %rd1673;
	shr.u64 	%rd1678, %rd2320, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8731,%dummy}, %rd2320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8732}, %rd2320;
	}
	shf.r.wrap.b32 	%r8733, %r8732, %r8731, 8;
	shf.r.wrap.b32 	%r8734, %r8731, %r8732, 8;
	mov.b64 	%rd1679, {%r8734, %r8733};
	xor.b64  	%rd1680, %rd1679, %rd1678;
	shf.r.wrap.b32 	%r8735, %r8732, %r8731, 1;
	shf.r.wrap.b32 	%r8736, %r8731, %r8732, 1;
	mov.b64 	%rd1681, {%r8736, %r8735};
	xor.b64  	%rd1682, %rd1680, %rd1681;
	add.s64 	%rd1683, %rd1682, %rd2319;
	add.s64 	%rd1684, %rd1683, %rd2305;
	add.s64 	%rd2319, %rd1684, %rd1677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8737,%dummy}, %rd2318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8738}, %rd2318;
	}
	shf.r.wrap.b32 	%r8739, %r8738, %r8737, 19;
	shf.r.wrap.b32 	%r8740, %r8737, %r8738, 19;
	mov.b64 	%rd1685, {%r8740, %r8739};
	shf.l.wrap.b32 	%r8741, %r8737, %r8738, 3;
	shf.l.wrap.b32 	%r8742, %r8738, %r8737, 3;
	mov.b64 	%rd1686, {%r8742, %r8741};
	shr.u64 	%rd1687, %rd2318, 6;
	xor.b64  	%rd1688, %rd1686, %rd1687;
	xor.b64  	%rd1689, %rd1688, %rd1685;
	shr.u64 	%rd1690, %rd2321, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8743,%dummy}, %rd2321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8744}, %rd2321;
	}
	shf.r.wrap.b32 	%r8745, %r8744, %r8743, 8;
	shf.r.wrap.b32 	%r8746, %r8743, %r8744, 8;
	mov.b64 	%rd1691, {%r8746, %r8745};
	xor.b64  	%rd1692, %rd1691, %rd1690;
	shf.r.wrap.b32 	%r8747, %r8744, %r8743, 1;
	shf.r.wrap.b32 	%r8748, %r8743, %r8744, 1;
	mov.b64 	%rd1693, {%r8748, %r8747};
	xor.b64  	%rd1694, %rd1692, %rd1693;
	add.s64 	%rd1695, %rd1694, %rd2320;
	add.s64 	%rd1696, %rd1695, %rd2304;
	add.s64 	%rd2320, %rd1696, %rd1689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8749,%dummy}, %rd2319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8750}, %rd2319;
	}
	shf.r.wrap.b32 	%r8751, %r8750, %r8749, 19;
	shf.r.wrap.b32 	%r8752, %r8749, %r8750, 19;
	mov.b64 	%rd1697, {%r8752, %r8751};
	shf.l.wrap.b32 	%r8753, %r8749, %r8750, 3;
	shf.l.wrap.b32 	%r8754, %r8750, %r8749, 3;
	mov.b64 	%rd1698, {%r8754, %r8753};
	shr.u64 	%rd1699, %rd2319, 6;
	xor.b64  	%rd1700, %rd1698, %rd1699;
	xor.b64  	%rd1701, %rd1700, %rd1697;
	shr.u64 	%rd1702, %rd2322, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8755,%dummy}, %rd2322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8756}, %rd2322;
	}
	shf.r.wrap.b32 	%r8757, %r8756, %r8755, 8;
	shf.r.wrap.b32 	%r8758, %r8755, %r8756, 8;
	mov.b64 	%rd1703, {%r8758, %r8757};
	xor.b64  	%rd1704, %rd1703, %rd1702;
	shf.r.wrap.b32 	%r8759, %r8756, %r8755, 1;
	shf.r.wrap.b32 	%r8760, %r8755, %r8756, 1;
	mov.b64 	%rd1705, {%r8760, %r8759};
	xor.b64  	%rd1706, %rd1704, %rd1705;
	add.s64 	%rd1707, %rd1706, %rd2321;
	add.s64 	%rd1708, %rd1707, %rd2303;
	add.s64 	%rd2321, %rd1708, %rd1701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8761,%dummy}, %rd2320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8762}, %rd2320;
	}
	shf.r.wrap.b32 	%r8763, %r8762, %r8761, 19;
	shf.r.wrap.b32 	%r8764, %r8761, %r8762, 19;
	mov.b64 	%rd1709, {%r8764, %r8763};
	shf.l.wrap.b32 	%r8765, %r8761, %r8762, 3;
	shf.l.wrap.b32 	%r8766, %r8762, %r8761, 3;
	mov.b64 	%rd1710, {%r8766, %r8765};
	shr.u64 	%rd1711, %rd2320, 6;
	xor.b64  	%rd1712, %rd1710, %rd1711;
	xor.b64  	%rd1713, %rd1712, %rd1709;
	shr.u64 	%rd1714, %rd2323, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8767,%dummy}, %rd2323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8768}, %rd2323;
	}
	shf.r.wrap.b32 	%r8769, %r8768, %r8767, 8;
	shf.r.wrap.b32 	%r8770, %r8767, %r8768, 8;
	mov.b64 	%rd1715, {%r8770, %r8769};
	xor.b64  	%rd1716, %rd1715, %rd1714;
	shf.r.wrap.b32 	%r8771, %r8768, %r8767, 1;
	shf.r.wrap.b32 	%r8772, %r8767, %r8768, 1;
	mov.b64 	%rd1717, {%r8772, %r8771};
	xor.b64  	%rd1718, %rd1716, %rd1717;
	add.s64 	%rd1719, %rd1718, %rd2322;
	add.s64 	%rd1720, %rd1719, %rd2302;
	add.s64 	%rd2322, %rd1720, %rd1713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8773,%dummy}, %rd2321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8774}, %rd2321;
	}
	shf.r.wrap.b32 	%r8775, %r8774, %r8773, 19;
	shf.r.wrap.b32 	%r8776, %r8773, %r8774, 19;
	mov.b64 	%rd1721, {%r8776, %r8775};
	shf.l.wrap.b32 	%r8777, %r8773, %r8774, 3;
	shf.l.wrap.b32 	%r8778, %r8774, %r8773, 3;
	mov.b64 	%rd1722, {%r8778, %r8777};
	shr.u64 	%rd1723, %rd2321, 6;
	xor.b64  	%rd1724, %rd1722, %rd1723;
	xor.b64  	%rd1725, %rd1724, %rd1721;
	shr.u64 	%rd1726, %rd2324, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8779,%dummy}, %rd2324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8780}, %rd2324;
	}
	shf.r.wrap.b32 	%r8781, %r8780, %r8779, 8;
	shf.r.wrap.b32 	%r8782, %r8779, %r8780, 8;
	mov.b64 	%rd1727, {%r8782, %r8781};
	xor.b64  	%rd1728, %rd1727, %rd1726;
	shf.r.wrap.b32 	%r8783, %r8780, %r8779, 1;
	shf.r.wrap.b32 	%r8784, %r8779, %r8780, 1;
	mov.b64 	%rd1729, {%r8784, %r8783};
	xor.b64  	%rd1730, %rd1728, %rd1729;
	add.s64 	%rd1731, %rd1730, %rd2323;
	add.s64 	%rd1732, %rd1731, %rd2301;
	add.s64 	%rd2323, %rd1732, %rd1725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8785,%dummy}, %rd2322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8786}, %rd2322;
	}
	shf.r.wrap.b32 	%r8787, %r8786, %r8785, 19;
	shf.r.wrap.b32 	%r8788, %r8785, %r8786, 19;
	mov.b64 	%rd1733, {%r8788, %r8787};
	shf.l.wrap.b32 	%r8789, %r8785, %r8786, 3;
	shf.l.wrap.b32 	%r8790, %r8786, %r8785, 3;
	mov.b64 	%rd1734, {%r8790, %r8789};
	shr.u64 	%rd1735, %rd2322, 6;
	xor.b64  	%rd1736, %rd1734, %rd1735;
	xor.b64  	%rd1737, %rd1736, %rd1733;
	shr.u64 	%rd1738, %rd2308, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8791,%dummy}, %rd2308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8792}, %rd2308;
	}
	shf.r.wrap.b32 	%r8793, %r8792, %r8791, 8;
	shf.r.wrap.b32 	%r8794, %r8791, %r8792, 8;
	mov.b64 	%rd1739, {%r8794, %r8793};
	xor.b64  	%rd1740, %rd1739, %rd1738;
	shf.r.wrap.b32 	%r8795, %r8792, %r8791, 1;
	shf.r.wrap.b32 	%r8796, %r8791, %r8792, 1;
	mov.b64 	%rd1741, {%r8796, %r8795};
	xor.b64  	%rd1742, %rd1740, %rd1741;
	add.s64 	%rd1743, %rd1742, %rd2324;
	add.s64 	%rd1744, %rd1743, %rd2317;
	add.s64 	%rd2324, %rd1744, %rd1737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8797,%dummy}, %rd2323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8798}, %rd2323;
	}
	shf.r.wrap.b32 	%r8799, %r8798, %r8797, 19;
	shf.r.wrap.b32 	%r8800, %r8797, %r8798, 19;
	mov.b64 	%rd1745, {%r8800, %r8799};
	shf.l.wrap.b32 	%r8801, %r8797, %r8798, 3;
	shf.l.wrap.b32 	%r8802, %r8798, %r8797, 3;
	mov.b64 	%rd1746, {%r8802, %r8801};
	shr.u64 	%rd1747, %rd2323, 6;
	xor.b64  	%rd1748, %rd1746, %rd1747;
	xor.b64  	%rd1749, %rd1748, %rd1745;
	shr.u64 	%rd1750, %rd2307, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8803,%dummy}, %rd2307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8804}, %rd2307;
	}
	shf.r.wrap.b32 	%r8805, %r8804, %r8803, 8;
	shf.r.wrap.b32 	%r8806, %r8803, %r8804, 8;
	mov.b64 	%rd1751, {%r8806, %r8805};
	xor.b64  	%rd1752, %rd1751, %rd1750;
	shf.r.wrap.b32 	%r8807, %r8804, %r8803, 1;
	shf.r.wrap.b32 	%r8808, %r8803, %r8804, 1;
	mov.b64 	%rd1753, {%r8808, %r8807};
	xor.b64  	%rd1754, %rd1752, %rd1753;
	add.s64 	%rd1755, %rd1754, %rd2308;
	add.s64 	%rd1756, %rd1755, %rd2318;
	add.s64 	%rd2308, %rd1756, %rd1749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8809,%dummy}, %rd2324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8810}, %rd2324;
	}
	shf.r.wrap.b32 	%r8811, %r8810, %r8809, 19;
	shf.r.wrap.b32 	%r8812, %r8809, %r8810, 19;
	mov.b64 	%rd1757, {%r8812, %r8811};
	shf.l.wrap.b32 	%r8813, %r8809, %r8810, 3;
	shf.l.wrap.b32 	%r8814, %r8810, %r8809, 3;
	mov.b64 	%rd1758, {%r8814, %r8813};
	shr.u64 	%rd1759, %rd2324, 6;
	xor.b64  	%rd1760, %rd1758, %rd1759;
	xor.b64  	%rd1761, %rd1760, %rd1757;
	shr.u64 	%rd1762, %rd2306, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8815,%dummy}, %rd2306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8816}, %rd2306;
	}
	shf.r.wrap.b32 	%r8817, %r8816, %r8815, 8;
	shf.r.wrap.b32 	%r8818, %r8815, %r8816, 8;
	mov.b64 	%rd1763, {%r8818, %r8817};
	xor.b64  	%rd1764, %rd1763, %rd1762;
	shf.r.wrap.b32 	%r8819, %r8816, %r8815, 1;
	shf.r.wrap.b32 	%r8820, %r8815, %r8816, 1;
	mov.b64 	%rd1765, {%r8820, %r8819};
	xor.b64  	%rd1766, %rd1764, %rd1765;
	add.s64 	%rd1767, %rd1766, %rd2307;
	add.s64 	%rd1768, %rd1767, %rd2319;
	add.s64 	%rd2307, %rd1768, %rd1761;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8821,%dummy}, %rd2308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8822}, %rd2308;
	}
	shf.r.wrap.b32 	%r8823, %r8822, %r8821, 19;
	shf.r.wrap.b32 	%r8824, %r8821, %r8822, 19;
	mov.b64 	%rd1769, {%r8824, %r8823};
	shf.l.wrap.b32 	%r8825, %r8821, %r8822, 3;
	shf.l.wrap.b32 	%r8826, %r8822, %r8821, 3;
	mov.b64 	%rd1770, {%r8826, %r8825};
	shr.u64 	%rd1771, %rd2308, 6;
	xor.b64  	%rd1772, %rd1770, %rd1771;
	xor.b64  	%rd1773, %rd1772, %rd1769;
	shr.u64 	%rd1774, %rd2305, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8827,%dummy}, %rd2305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8828}, %rd2305;
	}
	shf.r.wrap.b32 	%r8829, %r8828, %r8827, 8;
	shf.r.wrap.b32 	%r8830, %r8827, %r8828, 8;
	mov.b64 	%rd1775, {%r8830, %r8829};
	xor.b64  	%rd1776, %rd1775, %rd1774;
	shf.r.wrap.b32 	%r8831, %r8828, %r8827, 1;
	shf.r.wrap.b32 	%r8832, %r8827, %r8828, 1;
	mov.b64 	%rd1777, {%r8832, %r8831};
	xor.b64  	%rd1778, %rd1776, %rd1777;
	add.s64 	%rd1779, %rd1778, %rd2306;
	add.s64 	%rd1780, %rd1779, %rd2320;
	add.s64 	%rd2306, %rd1780, %rd1773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8833,%dummy}, %rd2307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8834}, %rd2307;
	}
	shf.r.wrap.b32 	%r8835, %r8834, %r8833, 19;
	shf.r.wrap.b32 	%r8836, %r8833, %r8834, 19;
	mov.b64 	%rd1781, {%r8836, %r8835};
	shf.l.wrap.b32 	%r8837, %r8833, %r8834, 3;
	shf.l.wrap.b32 	%r8838, %r8834, %r8833, 3;
	mov.b64 	%rd1782, {%r8838, %r8837};
	shr.u64 	%rd1783, %rd2307, 6;
	xor.b64  	%rd1784, %rd1782, %rd1783;
	xor.b64  	%rd1785, %rd1784, %rd1781;
	shr.u64 	%rd1786, %rd2304, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8839,%dummy}, %rd2304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8840}, %rd2304;
	}
	shf.r.wrap.b32 	%r8841, %r8840, %r8839, 8;
	shf.r.wrap.b32 	%r8842, %r8839, %r8840, 8;
	mov.b64 	%rd1787, {%r8842, %r8841};
	xor.b64  	%rd1788, %rd1787, %rd1786;
	shf.r.wrap.b32 	%r8843, %r8840, %r8839, 1;
	shf.r.wrap.b32 	%r8844, %r8839, %r8840, 1;
	mov.b64 	%rd1789, {%r8844, %r8843};
	xor.b64  	%rd1790, %rd1788, %rd1789;
	add.s64 	%rd1791, %rd1790, %rd2305;
	add.s64 	%rd1792, %rd1791, %rd2321;
	add.s64 	%rd2305, %rd1792, %rd1785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8845,%dummy}, %rd2306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8846}, %rd2306;
	}
	shf.r.wrap.b32 	%r8847, %r8846, %r8845, 19;
	shf.r.wrap.b32 	%r8848, %r8845, %r8846, 19;
	mov.b64 	%rd1793, {%r8848, %r8847};
	shf.l.wrap.b32 	%r8849, %r8845, %r8846, 3;
	shf.l.wrap.b32 	%r8850, %r8846, %r8845, 3;
	mov.b64 	%rd1794, {%r8850, %r8849};
	shr.u64 	%rd1795, %rd2306, 6;
	xor.b64  	%rd1796, %rd1794, %rd1795;
	xor.b64  	%rd1797, %rd1796, %rd1793;
	shr.u64 	%rd1798, %rd2303, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8851,%dummy}, %rd2303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8852}, %rd2303;
	}
	shf.r.wrap.b32 	%r8853, %r8852, %r8851, 8;
	shf.r.wrap.b32 	%r8854, %r8851, %r8852, 8;
	mov.b64 	%rd1799, {%r8854, %r8853};
	xor.b64  	%rd1800, %rd1799, %rd1798;
	shf.r.wrap.b32 	%r8855, %r8852, %r8851, 1;
	shf.r.wrap.b32 	%r8856, %r8851, %r8852, 1;
	mov.b64 	%rd1801, {%r8856, %r8855};
	xor.b64  	%rd1802, %rd1800, %rd1801;
	add.s64 	%rd1803, %rd1802, %rd2304;
	add.s64 	%rd1804, %rd1803, %rd2322;
	add.s64 	%rd2304, %rd1804, %rd1797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8857,%dummy}, %rd2305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8858}, %rd2305;
	}
	shf.r.wrap.b32 	%r8859, %r8858, %r8857, 19;
	shf.r.wrap.b32 	%r8860, %r8857, %r8858, 19;
	mov.b64 	%rd1805, {%r8860, %r8859};
	shf.l.wrap.b32 	%r8861, %r8857, %r8858, 3;
	shf.l.wrap.b32 	%r8862, %r8858, %r8857, 3;
	mov.b64 	%rd1806, {%r8862, %r8861};
	shr.u64 	%rd1807, %rd2305, 6;
	xor.b64  	%rd1808, %rd1806, %rd1807;
	xor.b64  	%rd1809, %rd1808, %rd1805;
	shr.u64 	%rd1810, %rd2302, 7;
	shf.r.wrap.b32 	%r8863, %r8701, %r8702, 8;
	shf.r.wrap.b32 	%r8864, %r8702, %r8701, 8;
	mov.b64 	%rd1811, {%r8864, %r8863};
	xor.b64  	%rd1812, %rd1811, %rd1810;
	shf.r.wrap.b32 	%r8865, %r8701, %r8702, 1;
	shf.r.wrap.b32 	%r8866, %r8702, %r8701, 1;
	mov.b64 	%rd1813, {%r8866, %r8865};
	xor.b64  	%rd1814, %rd1812, %rd1813;
	add.s64 	%rd1815, %rd1814, %rd2303;
	add.s64 	%rd1816, %rd1815, %rd2323;
	add.s64 	%rd2303, %rd1816, %rd1809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8867,%dummy}, %rd2304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8868}, %rd2304;
	}
	shf.r.wrap.b32 	%r8869, %r8868, %r8867, 19;
	shf.r.wrap.b32 	%r8870, %r8867, %r8868, 19;
	mov.b64 	%rd1817, {%r8870, %r8869};
	shf.l.wrap.b32 	%r8871, %r8867, %r8868, 3;
	shf.l.wrap.b32 	%r8872, %r8868, %r8867, 3;
	mov.b64 	%rd1818, {%r8872, %r8871};
	shr.u64 	%rd1819, %rd2304, 6;
	xor.b64  	%rd1820, %rd1818, %rd1819;
	xor.b64  	%rd1821, %rd1820, %rd1817;
	shr.u64 	%rd1822, %rd2301, 7;
	shf.r.wrap.b32 	%r8873, %r8713, %r8714, 8;
	shf.r.wrap.b32 	%r8874, %r8714, %r8713, 8;
	mov.b64 	%rd1823, {%r8874, %r8873};
	xor.b64  	%rd1824, %rd1823, %rd1822;
	shf.r.wrap.b32 	%r8875, %r8713, %r8714, 1;
	shf.r.wrap.b32 	%r8876, %r8714, %r8713, 1;
	mov.b64 	%rd1825, {%r8876, %r8875};
	xor.b64  	%rd1826, %rd1824, %rd1825;
	add.s64 	%rd1827, %rd1826, %rd2302;
	add.s64 	%rd1828, %rd1827, %rd2324;
	add.s64 	%rd2302, %rd1828, %rd1821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8877,%dummy}, %rd2303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8878}, %rd2303;
	}
	shf.r.wrap.b32 	%r8879, %r8878, %r8877, 19;
	shf.r.wrap.b32 	%r8880, %r8877, %r8878, 19;
	mov.b64 	%rd1829, {%r8880, %r8879};
	shf.l.wrap.b32 	%r8881, %r8877, %r8878, 3;
	shf.l.wrap.b32 	%r8882, %r8878, %r8877, 3;
	mov.b64 	%rd1830, {%r8882, %r8881};
	shr.u64 	%rd1831, %rd2303, 6;
	xor.b64  	%rd1832, %rd1830, %rd1831;
	xor.b64  	%rd1833, %rd1832, %rd1829;
	shf.r.wrap.b32 	%r8883, %r8726, %r8725, 1;
	shf.r.wrap.b32 	%r8884, %r8725, %r8726, 1;
	mov.b64 	%rd1834, {%r8884, %r8883};
	shf.r.wrap.b32 	%r8885, %r8726, %r8725, 8;
	shf.r.wrap.b32 	%r8886, %r8725, %r8726, 8;
	mov.b64 	%rd1835, {%r8886, %r8885};
	shr.u64 	%rd1836, %rd2317, 7;
	xor.b64  	%rd1837, %rd1835, %rd1836;
	xor.b64  	%rd1838, %rd1837, %rd1834;
	add.s64 	%rd1839, %rd1838, %rd2301;
	add.s64 	%rd1840, %rd1839, %rd2308;
	add.s64 	%rd2301, %rd1840, %rd1833;
	mul.wide.s32 	%rd1841, %r9193, 8;
	mov.u64 	%rd1842, k_sha512;
	add.s64 	%rd1843, %rd1842, %rd1841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8887,%dummy}, %rd2313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8888}, %rd2313;
	}
	shf.r.wrap.b32 	%r8889, %r8888, %r8887, 18;
	shf.r.wrap.b32 	%r8890, %r8887, %r8888, 18;
	mov.b64 	%rd1844, {%r8890, %r8889};
	shf.r.wrap.b32 	%r8891, %r8888, %r8887, 14;
	shf.r.wrap.b32 	%r8892, %r8887, %r8888, 14;
	mov.b64 	%rd1845, {%r8892, %r8891};
	xor.b64  	%rd1846, %rd1845, %rd1844;
	shf.l.wrap.b32 	%r8893, %r8887, %r8888, 23;
	shf.l.wrap.b32 	%r8894, %r8888, %r8887, 23;
	mov.b64 	%rd1847, {%r8894, %r8893};
	xor.b64  	%rd1848, %rd1846, %rd1847;
	xor.b64  	%rd1849, %rd2314, %rd2315;
	and.b64  	%rd1850, %rd2313, %rd1849;
	xor.b64  	%rd1851, %rd1850, %rd2315;
	add.s64 	%rd1852, %rd1851, %rd2316;
	add.s64 	%rd1853, %rd1852, %rd1848;
	add.s64 	%rd1854, %rd1853, %rd2317;
	ld.const.u64 	%rd1855, [%rd1843];
	add.s64 	%rd1856, %rd1854, %rd1855;
	add.s64 	%rd1857, %rd1856, %rd2312;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8895}, %rd2309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8896,%dummy}, %rd2309;
	}
	shf.l.wrap.b32 	%r8897, %r8896, %r8895, 30;
	shf.l.wrap.b32 	%r8898, %r8895, %r8896, 30;
	mov.b64 	%rd1858, {%r8898, %r8897};
	shf.r.wrap.b32 	%r8899, %r8895, %r8896, 28;
	shf.r.wrap.b32 	%r8900, %r8896, %r8895, 28;
	mov.b64 	%rd1859, {%r8900, %r8899};
	xor.b64  	%rd1860, %rd1859, %rd1858;
	shf.l.wrap.b32 	%r8901, %r8896, %r8895, 25;
	shf.l.wrap.b32 	%r8902, %r8895, %r8896, 25;
	mov.b64 	%rd1861, {%r8902, %r8901};
	xor.b64  	%rd1862, %rd1860, %rd1861;
	xor.b64  	%rd1863, %rd2309, %rd2310;
	and.b64  	%rd1864, %rd1863, %rd2311;
	and.b64  	%rd1865, %rd2309, %rd2310;
	or.b64  	%rd1866, %rd1864, %rd1865;
	add.s64 	%rd1867, %rd1862, %rd1866;
	add.s64 	%rd1868, %rd1867, %rd1856;
	add.s32 	%r8903, %r9193, 1;
	mul.wide.s32 	%rd1869, %r8903, 8;
	add.s64 	%rd1870, %rd1842, %rd1869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8904,%dummy}, %rd1857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8905}, %rd1857;
	}
	shf.r.wrap.b32 	%r8906, %r8905, %r8904, 14;
	shf.r.wrap.b32 	%r8907, %r8904, %r8905, 14;
	mov.b64 	%rd1871, {%r8907, %r8906};
	shf.r.wrap.b32 	%r8908, %r8905, %r8904, 18;
	shf.r.wrap.b32 	%r8909, %r8904, %r8905, 18;
	mov.b64 	%rd1872, {%r8909, %r8908};
	xor.b64  	%rd1873, %rd1871, %rd1872;
	shf.l.wrap.b32 	%r8910, %r8904, %r8905, 23;
	shf.l.wrap.b32 	%r8911, %r8905, %r8904, 23;
	mov.b64 	%rd1874, {%r8911, %r8910};
	xor.b64  	%rd1875, %rd1873, %rd1874;
	xor.b64  	%rd1876, %rd2313, %rd2314;
	and.b64  	%rd1877, %rd1857, %rd1876;
	xor.b64  	%rd1878, %rd1877, %rd2314;
	add.s64 	%rd1879, %rd2318, %rd2315;
	ld.const.u64 	%rd1880, [%rd1870];
	add.s64 	%rd1881, %rd1879, %rd1880;
	add.s64 	%rd1882, %rd1881, %rd1878;
	add.s64 	%rd1883, %rd1882, %rd1875;
	add.s64 	%rd1884, %rd1883, %rd2311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8912,%dummy}, %rd1868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8913}, %rd1868;
	}
	shf.r.wrap.b32 	%r8914, %r8913, %r8912, 28;
	shf.r.wrap.b32 	%r8915, %r8912, %r8913, 28;
	mov.b64 	%rd1885, {%r8915, %r8914};
	shf.l.wrap.b32 	%r8916, %r8912, %r8913, 30;
	shf.l.wrap.b32 	%r8917, %r8913, %r8912, 30;
	mov.b64 	%rd1886, {%r8917, %r8916};
	xor.b64  	%rd1887, %rd1885, %rd1886;
	shf.l.wrap.b32 	%r8918, %r8912, %r8913, 25;
	shf.l.wrap.b32 	%r8919, %r8913, %r8912, 25;
	mov.b64 	%rd1888, {%r8919, %r8918};
	xor.b64  	%rd1889, %rd1887, %rd1888;
	and.b64  	%rd1890, %rd1868, %rd2309;
	xor.b64  	%rd1891, %rd1868, %rd2309;
	and.b64  	%rd1892, %rd1891, %rd2310;
	or.b64  	%rd1893, %rd1892, %rd1890;
	add.s64 	%rd1894, %rd1889, %rd1893;
	add.s64 	%rd1895, %rd1894, %rd1883;
	add.s32 	%r8920, %r9193, 2;
	mul.wide.s32 	%rd1896, %r8920, 8;
	add.s64 	%rd1897, %rd1842, %rd1896;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8921,%dummy}, %rd1884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8922}, %rd1884;
	}
	shf.r.wrap.b32 	%r8923, %r8922, %r8921, 14;
	shf.r.wrap.b32 	%r8924, %r8921, %r8922, 14;
	mov.b64 	%rd1898, {%r8924, %r8923};
	shf.r.wrap.b32 	%r8925, %r8922, %r8921, 18;
	shf.r.wrap.b32 	%r8926, %r8921, %r8922, 18;
	mov.b64 	%rd1899, {%r8926, %r8925};
	xor.b64  	%rd1900, %rd1898, %rd1899;
	shf.l.wrap.b32 	%r8927, %r8921, %r8922, 23;
	shf.l.wrap.b32 	%r8928, %r8922, %r8921, 23;
	mov.b64 	%rd1901, {%r8928, %r8927};
	xor.b64  	%rd1902, %rd1900, %rd1901;
	xor.b64  	%rd1903, %rd1857, %rd2313;
	and.b64  	%rd1904, %rd1884, %rd1903;
	xor.b64  	%rd1905, %rd1904, %rd2313;
	add.s64 	%rd1906, %rd2319, %rd2314;
	ld.const.u64 	%rd1907, [%rd1897];
	add.s64 	%rd1908, %rd1906, %rd1907;
	add.s64 	%rd1909, %rd1908, %rd1905;
	add.s64 	%rd1910, %rd1909, %rd1902;
	add.s64 	%rd1911, %rd1910, %rd2310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8929,%dummy}, %rd1895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8930}, %rd1895;
	}
	shf.r.wrap.b32 	%r8931, %r8930, %r8929, 28;
	shf.r.wrap.b32 	%r8932, %r8929, %r8930, 28;
	mov.b64 	%rd1912, {%r8932, %r8931};
	shf.l.wrap.b32 	%r8933, %r8929, %r8930, 30;
	shf.l.wrap.b32 	%r8934, %r8930, %r8929, 30;
	mov.b64 	%rd1913, {%r8934, %r8933};
	xor.b64  	%rd1914, %rd1912, %rd1913;
	shf.l.wrap.b32 	%r8935, %r8929, %r8930, 25;
	shf.l.wrap.b32 	%r8936, %r8930, %r8929, 25;
	mov.b64 	%rd1915, {%r8936, %r8935};
	xor.b64  	%rd1916, %rd1914, %rd1915;
	and.b64  	%rd1917, %rd1895, %rd1868;
	xor.b64  	%rd1918, %rd1895, %rd1868;
	and.b64  	%rd1919, %rd1918, %rd2309;
	or.b64  	%rd1920, %rd1919, %rd1917;
	add.s64 	%rd1921, %rd1916, %rd1920;
	add.s64 	%rd1922, %rd1921, %rd1910;
	add.s32 	%r8937, %r9193, 3;
	mul.wide.s32 	%rd1923, %r8937, 8;
	add.s64 	%rd1924, %rd1842, %rd1923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8938,%dummy}, %rd1911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8939}, %rd1911;
	}
	shf.r.wrap.b32 	%r8940, %r8939, %r8938, 14;
	shf.r.wrap.b32 	%r8941, %r8938, %r8939, 14;
	mov.b64 	%rd1925, {%r8941, %r8940};
	shf.r.wrap.b32 	%r8942, %r8939, %r8938, 18;
	shf.r.wrap.b32 	%r8943, %r8938, %r8939, 18;
	mov.b64 	%rd1926, {%r8943, %r8942};
	xor.b64  	%rd1927, %rd1925, %rd1926;
	shf.l.wrap.b32 	%r8944, %r8938, %r8939, 23;
	shf.l.wrap.b32 	%r8945, %r8939, %r8938, 23;
	mov.b64 	%rd1928, {%r8945, %r8944};
	xor.b64  	%rd1929, %rd1927, %rd1928;
	xor.b64  	%rd1930, %rd1884, %rd1857;
	and.b64  	%rd1931, %rd1911, %rd1930;
	xor.b64  	%rd1932, %rd1931, %rd1857;
	add.s64 	%rd1933, %rd2320, %rd2313;
	ld.const.u64 	%rd1934, [%rd1924];
	add.s64 	%rd1935, %rd1933, %rd1934;
	add.s64 	%rd1936, %rd1935, %rd1932;
	add.s64 	%rd1937, %rd1936, %rd1929;
	add.s64 	%rd1938, %rd1937, %rd2309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8946,%dummy}, %rd1922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8947}, %rd1922;
	}
	shf.r.wrap.b32 	%r8948, %r8947, %r8946, 28;
	shf.r.wrap.b32 	%r8949, %r8946, %r8947, 28;
	mov.b64 	%rd1939, {%r8949, %r8948};
	shf.l.wrap.b32 	%r8950, %r8946, %r8947, 30;
	shf.l.wrap.b32 	%r8951, %r8947, %r8946, 30;
	mov.b64 	%rd1940, {%r8951, %r8950};
	xor.b64  	%rd1941, %rd1939, %rd1940;
	shf.l.wrap.b32 	%r8952, %r8946, %r8947, 25;
	shf.l.wrap.b32 	%r8953, %r8947, %r8946, 25;
	mov.b64 	%rd1942, {%r8953, %r8952};
	xor.b64  	%rd1943, %rd1941, %rd1942;
	and.b64  	%rd1944, %rd1922, %rd1895;
	xor.b64  	%rd1945, %rd1922, %rd1895;
	and.b64  	%rd1946, %rd1945, %rd1868;
	or.b64  	%rd1947, %rd1946, %rd1944;
	add.s64 	%rd1948, %rd1943, %rd1947;
	add.s64 	%rd1949, %rd1948, %rd1937;
	add.s32 	%r8954, %r9193, 4;
	mul.wide.s32 	%rd1950, %r8954, 8;
	add.s64 	%rd1951, %rd1842, %rd1950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8955,%dummy}, %rd1938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8956}, %rd1938;
	}
	shf.r.wrap.b32 	%r8957, %r8956, %r8955, 14;
	shf.r.wrap.b32 	%r8958, %r8955, %r8956, 14;
	mov.b64 	%rd1952, {%r8958, %r8957};
	shf.r.wrap.b32 	%r8959, %r8956, %r8955, 18;
	shf.r.wrap.b32 	%r8960, %r8955, %r8956, 18;
	mov.b64 	%rd1953, {%r8960, %r8959};
	xor.b64  	%rd1954, %rd1952, %rd1953;
	shf.l.wrap.b32 	%r8961, %r8955, %r8956, 23;
	shf.l.wrap.b32 	%r8962, %r8956, %r8955, 23;
	mov.b64 	%rd1955, {%r8962, %r8961};
	xor.b64  	%rd1956, %rd1954, %rd1955;
	xor.b64  	%rd1957, %rd1911, %rd1884;
	and.b64  	%rd1958, %rd1938, %rd1957;
	xor.b64  	%rd1959, %rd1958, %rd1884;
	add.s64 	%rd1960, %rd1857, %rd2321;
	ld.const.u64 	%rd1961, [%rd1951];
	add.s64 	%rd1962, %rd1960, %rd1961;
	add.s64 	%rd1963, %rd1962, %rd1959;
	add.s64 	%rd1964, %rd1963, %rd1956;
	add.s64 	%rd1965, %rd1964, %rd1868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8963,%dummy}, %rd1949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8964}, %rd1949;
	}
	shf.r.wrap.b32 	%r8965, %r8964, %r8963, 28;
	shf.r.wrap.b32 	%r8966, %r8963, %r8964, 28;
	mov.b64 	%rd1966, {%r8966, %r8965};
	shf.l.wrap.b32 	%r8967, %r8963, %r8964, 30;
	shf.l.wrap.b32 	%r8968, %r8964, %r8963, 30;
	mov.b64 	%rd1967, {%r8968, %r8967};
	xor.b64  	%rd1968, %rd1966, %rd1967;
	shf.l.wrap.b32 	%r8969, %r8963, %r8964, 25;
	shf.l.wrap.b32 	%r8970, %r8964, %r8963, 25;
	mov.b64 	%rd1969, {%r8970, %r8969};
	xor.b64  	%rd1970, %rd1968, %rd1969;
	and.b64  	%rd1971, %rd1949, %rd1922;
	xor.b64  	%rd1972, %rd1949, %rd1922;
	and.b64  	%rd1973, %rd1972, %rd1895;
	or.b64  	%rd1974, %rd1973, %rd1971;
	add.s64 	%rd1975, %rd1970, %rd1974;
	add.s64 	%rd1976, %rd1975, %rd1964;
	add.s32 	%r8971, %r9193, 5;
	mul.wide.s32 	%rd1977, %r8971, 8;
	add.s64 	%rd1978, %rd1842, %rd1977;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8972,%dummy}, %rd1965;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8973}, %rd1965;
	}
	shf.r.wrap.b32 	%r8974, %r8973, %r8972, 14;
	shf.r.wrap.b32 	%r8975, %r8972, %r8973, 14;
	mov.b64 	%rd1979, {%r8975, %r8974};
	shf.r.wrap.b32 	%r8976, %r8973, %r8972, 18;
	shf.r.wrap.b32 	%r8977, %r8972, %r8973, 18;
	mov.b64 	%rd1980, {%r8977, %r8976};
	xor.b64  	%rd1981, %rd1979, %rd1980;
	shf.l.wrap.b32 	%r8978, %r8972, %r8973, 23;
	shf.l.wrap.b32 	%r8979, %r8973, %r8972, 23;
	mov.b64 	%rd1982, {%r8979, %r8978};
	xor.b64  	%rd1983, %rd1981, %rd1982;
	xor.b64  	%rd1984, %rd1938, %rd1911;
	and.b64  	%rd1985, %rd1965, %rd1984;
	xor.b64  	%rd1986, %rd1985, %rd1911;
	ld.const.u64 	%rd1987, [%rd1978];
	add.s64 	%rd1988, %rd1987, %rd2322;
	add.s64 	%rd1989, %rd1988, %rd1884;
	add.s64 	%rd1990, %rd1989, %rd1986;
	add.s64 	%rd1991, %rd1990, %rd1983;
	add.s64 	%rd1992, %rd1991, %rd1895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8980,%dummy}, %rd1976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8981}, %rd1976;
	}
	shf.r.wrap.b32 	%r8982, %r8981, %r8980, 28;
	shf.r.wrap.b32 	%r8983, %r8980, %r8981, 28;
	mov.b64 	%rd1993, {%r8983, %r8982};
	shf.l.wrap.b32 	%r8984, %r8980, %r8981, 30;
	shf.l.wrap.b32 	%r8985, %r8981, %r8980, 30;
	mov.b64 	%rd1994, {%r8985, %r8984};
	xor.b64  	%rd1995, %rd1993, %rd1994;
	shf.l.wrap.b32 	%r8986, %r8980, %r8981, 25;
	shf.l.wrap.b32 	%r8987, %r8981, %r8980, 25;
	mov.b64 	%rd1996, {%r8987, %r8986};
	xor.b64  	%rd1997, %rd1995, %rd1996;
	and.b64  	%rd1998, %rd1976, %rd1949;
	xor.b64  	%rd1999, %rd1976, %rd1949;
	and.b64  	%rd2000, %rd1999, %rd1922;
	or.b64  	%rd2001, %rd2000, %rd1998;
	add.s64 	%rd2002, %rd1997, %rd2001;
	add.s64 	%rd2003, %rd2002, %rd1991;
	add.s32 	%r8988, %r9193, 6;
	mul.wide.s32 	%rd2004, %r8988, 8;
	add.s64 	%rd2005, %rd1842, %rd2004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8989,%dummy}, %rd1992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8990}, %rd1992;
	}
	shf.r.wrap.b32 	%r8991, %r8990, %r8989, 14;
	shf.r.wrap.b32 	%r8992, %r8989, %r8990, 14;
	mov.b64 	%rd2006, {%r8992, %r8991};
	shf.r.wrap.b32 	%r8993, %r8990, %r8989, 18;
	shf.r.wrap.b32 	%r8994, %r8989, %r8990, 18;
	mov.b64 	%rd2007, {%r8994, %r8993};
	xor.b64  	%rd2008, %rd2006, %rd2007;
	shf.l.wrap.b32 	%r8995, %r8989, %r8990, 23;
	shf.l.wrap.b32 	%r8996, %r8990, %r8989, 23;
	mov.b64 	%rd2009, {%r8996, %r8995};
	xor.b64  	%rd2010, %rd2008, %rd2009;
	xor.b64  	%rd2011, %rd1965, %rd1938;
	and.b64  	%rd2012, %rd1992, %rd2011;
	xor.b64  	%rd2013, %rd2012, %rd1938;
	ld.const.u64 	%rd2014, [%rd2005];
	add.s64 	%rd2015, %rd2014, %rd2323;
	add.s64 	%rd2016, %rd2015, %rd1911;
	add.s64 	%rd2017, %rd2016, %rd2013;
	add.s64 	%rd2018, %rd2017, %rd2010;
	add.s64 	%rd2019, %rd2018, %rd1922;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8997,%dummy}, %rd2003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8998}, %rd2003;
	}
	shf.r.wrap.b32 	%r8999, %r8998, %r8997, 28;
	shf.r.wrap.b32 	%r9000, %r8997, %r8998, 28;
	mov.b64 	%rd2020, {%r9000, %r8999};
	shf.l.wrap.b32 	%r9001, %r8997, %r8998, 30;
	shf.l.wrap.b32 	%r9002, %r8998, %r8997, 30;
	mov.b64 	%rd2021, {%r9002, %r9001};
	xor.b64  	%rd2022, %rd2020, %rd2021;
	shf.l.wrap.b32 	%r9003, %r8997, %r8998, 25;
	shf.l.wrap.b32 	%r9004, %r8998, %r8997, 25;
	mov.b64 	%rd2023, {%r9004, %r9003};
	xor.b64  	%rd2024, %rd2022, %rd2023;
	and.b64  	%rd2025, %rd2003, %rd1976;
	xor.b64  	%rd2026, %rd2003, %rd1976;
	and.b64  	%rd2027, %rd2026, %rd1949;
	or.b64  	%rd2028, %rd2027, %rd2025;
	add.s64 	%rd2029, %rd2024, %rd2028;
	add.s64 	%rd2030, %rd2029, %rd2018;
	add.s32 	%r9005, %r9193, 7;
	mul.wide.s32 	%rd2031, %r9005, 8;
	add.s64 	%rd2032, %rd1842, %rd2031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9006,%dummy}, %rd2019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9007}, %rd2019;
	}
	shf.r.wrap.b32 	%r9008, %r9007, %r9006, 14;
	shf.r.wrap.b32 	%r9009, %r9006, %r9007, 14;
	mov.b64 	%rd2033, {%r9009, %r9008};
	shf.r.wrap.b32 	%r9010, %r9007, %r9006, 18;
	shf.r.wrap.b32 	%r9011, %r9006, %r9007, 18;
	mov.b64 	%rd2034, {%r9011, %r9010};
	xor.b64  	%rd2035, %rd2033, %rd2034;
	shf.l.wrap.b32 	%r9012, %r9006, %r9007, 23;
	shf.l.wrap.b32 	%r9013, %r9007, %r9006, 23;
	mov.b64 	%rd2036, {%r9013, %r9012};
	xor.b64  	%rd2037, %rd2035, %rd2036;
	xor.b64  	%rd2038, %rd1992, %rd1965;
	and.b64  	%rd2039, %rd2019, %rd2038;
	xor.b64  	%rd2040, %rd2039, %rd1965;
	ld.const.u64 	%rd2041, [%rd2032];
	add.s64 	%rd2042, %rd2041, %rd2324;
	add.s64 	%rd2043, %rd2042, %rd1938;
	add.s64 	%rd2044, %rd2043, %rd2040;
	add.s64 	%rd2045, %rd2044, %rd2037;
	add.s64 	%rd2046, %rd2045, %rd1949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9014,%dummy}, %rd2030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9015}, %rd2030;
	}
	shf.r.wrap.b32 	%r9016, %r9015, %r9014, 28;
	shf.r.wrap.b32 	%r9017, %r9014, %r9015, 28;
	mov.b64 	%rd2047, {%r9017, %r9016};
	shf.l.wrap.b32 	%r9018, %r9014, %r9015, 30;
	shf.l.wrap.b32 	%r9019, %r9015, %r9014, 30;
	mov.b64 	%rd2048, {%r9019, %r9018};
	xor.b64  	%rd2049, %rd2047, %rd2048;
	shf.l.wrap.b32 	%r9020, %r9014, %r9015, 25;
	shf.l.wrap.b32 	%r9021, %r9015, %r9014, 25;
	mov.b64 	%rd2050, {%r9021, %r9020};
	xor.b64  	%rd2051, %rd2049, %rd2050;
	and.b64  	%rd2052, %rd2030, %rd2003;
	xor.b64  	%rd2053, %rd2030, %rd2003;
	and.b64  	%rd2054, %rd2053, %rd1976;
	or.b64  	%rd2055, %rd2054, %rd2052;
	add.s64 	%rd2056, %rd2051, %rd2055;
	add.s64 	%rd2057, %rd2056, %rd2045;
	add.s32 	%r9022, %r9193, 8;
	mul.wide.s32 	%rd2058, %r9022, 8;
	add.s64 	%rd2059, %rd1842, %rd2058;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9023,%dummy}, %rd2046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9024}, %rd2046;
	}
	shf.r.wrap.b32 	%r9025, %r9024, %r9023, 14;
	shf.r.wrap.b32 	%r9026, %r9023, %r9024, 14;
	mov.b64 	%rd2060, {%r9026, %r9025};
	shf.r.wrap.b32 	%r9027, %r9024, %r9023, 18;
	shf.r.wrap.b32 	%r9028, %r9023, %r9024, 18;
	mov.b64 	%rd2061, {%r9028, %r9027};
	xor.b64  	%rd2062, %rd2060, %rd2061;
	shf.l.wrap.b32 	%r9029, %r9023, %r9024, 23;
	shf.l.wrap.b32 	%r9030, %r9024, %r9023, 23;
	mov.b64 	%rd2063, {%r9030, %r9029};
	xor.b64  	%rd2064, %rd2062, %rd2063;
	xor.b64  	%rd2065, %rd2019, %rd1992;
	and.b64  	%rd2066, %rd2046, %rd2065;
	xor.b64  	%rd2067, %rd2066, %rd1992;
	ld.const.u64 	%rd2068, [%rd2059];
	add.s64 	%rd2069, %rd2068, %rd2308;
	add.s64 	%rd2070, %rd2069, %rd1965;
	add.s64 	%rd2071, %rd2070, %rd2067;
	add.s64 	%rd2072, %rd2071, %rd2064;
	add.s64 	%rd2073, %rd2072, %rd1976;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9031,%dummy}, %rd2057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9032}, %rd2057;
	}
	shf.r.wrap.b32 	%r9033, %r9032, %r9031, 28;
	shf.r.wrap.b32 	%r9034, %r9031, %r9032, 28;
	mov.b64 	%rd2074, {%r9034, %r9033};
	shf.l.wrap.b32 	%r9035, %r9031, %r9032, 30;
	shf.l.wrap.b32 	%r9036, %r9032, %r9031, 30;
	mov.b64 	%rd2075, {%r9036, %r9035};
	xor.b64  	%rd2076, %rd2074, %rd2075;
	shf.l.wrap.b32 	%r9037, %r9031, %r9032, 25;
	shf.l.wrap.b32 	%r9038, %r9032, %r9031, 25;
	mov.b64 	%rd2077, {%r9038, %r9037};
	xor.b64  	%rd2078, %rd2076, %rd2077;
	and.b64  	%rd2079, %rd2057, %rd2030;
	xor.b64  	%rd2080, %rd2057, %rd2030;
	and.b64  	%rd2081, %rd2080, %rd2003;
	or.b64  	%rd2082, %rd2081, %rd2079;
	add.s64 	%rd2083, %rd2078, %rd2082;
	add.s64 	%rd2084, %rd2083, %rd2072;
	add.s32 	%r9039, %r9193, 9;
	mul.wide.s32 	%rd2085, %r9039, 8;
	add.s64 	%rd2086, %rd1842, %rd2085;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9040,%dummy}, %rd2073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9041}, %rd2073;
	}
	shf.r.wrap.b32 	%r9042, %r9041, %r9040, 14;
	shf.r.wrap.b32 	%r9043, %r9040, %r9041, 14;
	mov.b64 	%rd2087, {%r9043, %r9042};
	shf.r.wrap.b32 	%r9044, %r9041, %r9040, 18;
	shf.r.wrap.b32 	%r9045, %r9040, %r9041, 18;
	mov.b64 	%rd2088, {%r9045, %r9044};
	xor.b64  	%rd2089, %rd2087, %rd2088;
	shf.l.wrap.b32 	%r9046, %r9040, %r9041, 23;
	shf.l.wrap.b32 	%r9047, %r9041, %r9040, 23;
	mov.b64 	%rd2090, {%r9047, %r9046};
	xor.b64  	%rd2091, %rd2089, %rd2090;
	xor.b64  	%rd2092, %rd2046, %rd2019;
	and.b64  	%rd2093, %rd2073, %rd2092;
	xor.b64  	%rd2094, %rd2093, %rd2019;
	ld.const.u64 	%rd2095, [%rd2086];
	add.s64 	%rd2096, %rd2095, %rd2307;
	add.s64 	%rd2097, %rd2096, %rd1992;
	add.s64 	%rd2098, %rd2097, %rd2094;
	add.s64 	%rd2099, %rd2098, %rd2091;
	add.s64 	%rd2100, %rd2099, %rd2003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9048,%dummy}, %rd2084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9049}, %rd2084;
	}
	shf.r.wrap.b32 	%r9050, %r9049, %r9048, 28;
	shf.r.wrap.b32 	%r9051, %r9048, %r9049, 28;
	mov.b64 	%rd2101, {%r9051, %r9050};
	shf.l.wrap.b32 	%r9052, %r9048, %r9049, 30;
	shf.l.wrap.b32 	%r9053, %r9049, %r9048, 30;
	mov.b64 	%rd2102, {%r9053, %r9052};
	xor.b64  	%rd2103, %rd2101, %rd2102;
	shf.l.wrap.b32 	%r9054, %r9048, %r9049, 25;
	shf.l.wrap.b32 	%r9055, %r9049, %r9048, 25;
	mov.b64 	%rd2104, {%r9055, %r9054};
	xor.b64  	%rd2105, %rd2103, %rd2104;
	and.b64  	%rd2106, %rd2084, %rd2057;
	xor.b64  	%rd2107, %rd2084, %rd2057;
	and.b64  	%rd2108, %rd2107, %rd2030;
	or.b64  	%rd2109, %rd2108, %rd2106;
	add.s64 	%rd2110, %rd2105, %rd2109;
	add.s64 	%rd2111, %rd2110, %rd2099;
	add.s32 	%r9056, %r9193, 10;
	mul.wide.s32 	%rd2112, %r9056, 8;
	add.s64 	%rd2113, %rd1842, %rd2112;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9057,%dummy}, %rd2100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9058}, %rd2100;
	}
	shf.r.wrap.b32 	%r9059, %r9058, %r9057, 14;
	shf.r.wrap.b32 	%r9060, %r9057, %r9058, 14;
	mov.b64 	%rd2114, {%r9060, %r9059};
	shf.r.wrap.b32 	%r9061, %r9058, %r9057, 18;
	shf.r.wrap.b32 	%r9062, %r9057, %r9058, 18;
	mov.b64 	%rd2115, {%r9062, %r9061};
	xor.b64  	%rd2116, %rd2114, %rd2115;
	shf.l.wrap.b32 	%r9063, %r9057, %r9058, 23;
	shf.l.wrap.b32 	%r9064, %r9058, %r9057, 23;
	mov.b64 	%rd2117, {%r9064, %r9063};
	xor.b64  	%rd2118, %rd2116, %rd2117;
	xor.b64  	%rd2119, %rd2073, %rd2046;
	and.b64  	%rd2120, %rd2100, %rd2119;
	xor.b64  	%rd2121, %rd2120, %rd2046;
	ld.const.u64 	%rd2122, [%rd2113];
	add.s64 	%rd2123, %rd2122, %rd2306;
	add.s64 	%rd2124, %rd2123, %rd2019;
	add.s64 	%rd2125, %rd2124, %rd2121;
	add.s64 	%rd2126, %rd2125, %rd2118;
	add.s64 	%rd2127, %rd2126, %rd2030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9065,%dummy}, %rd2111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9066}, %rd2111;
	}
	shf.r.wrap.b32 	%r9067, %r9066, %r9065, 28;
	shf.r.wrap.b32 	%r9068, %r9065, %r9066, 28;
	mov.b64 	%rd2128, {%r9068, %r9067};
	shf.l.wrap.b32 	%r9069, %r9065, %r9066, 30;
	shf.l.wrap.b32 	%r9070, %r9066, %r9065, 30;
	mov.b64 	%rd2129, {%r9070, %r9069};
	xor.b64  	%rd2130, %rd2128, %rd2129;
	shf.l.wrap.b32 	%r9071, %r9065, %r9066, 25;
	shf.l.wrap.b32 	%r9072, %r9066, %r9065, 25;
	mov.b64 	%rd2131, {%r9072, %r9071};
	xor.b64  	%rd2132, %rd2130, %rd2131;
	and.b64  	%rd2133, %rd2111, %rd2084;
	xor.b64  	%rd2134, %rd2111, %rd2084;
	and.b64  	%rd2135, %rd2134, %rd2057;
	or.b64  	%rd2136, %rd2135, %rd2133;
	add.s64 	%rd2137, %rd2132, %rd2136;
	add.s64 	%rd2138, %rd2137, %rd2126;
	add.s32 	%r9073, %r9193, 11;
	mul.wide.s32 	%rd2139, %r9073, 8;
	add.s64 	%rd2140, %rd1842, %rd2139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9074,%dummy}, %rd2127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9075}, %rd2127;
	}
	shf.r.wrap.b32 	%r9076, %r9075, %r9074, 14;
	shf.r.wrap.b32 	%r9077, %r9074, %r9075, 14;
	mov.b64 	%rd2141, {%r9077, %r9076};
	shf.r.wrap.b32 	%r9078, %r9075, %r9074, 18;
	shf.r.wrap.b32 	%r9079, %r9074, %r9075, 18;
	mov.b64 	%rd2142, {%r9079, %r9078};
	xor.b64  	%rd2143, %rd2141, %rd2142;
	shf.l.wrap.b32 	%r9080, %r9074, %r9075, 23;
	shf.l.wrap.b32 	%r9081, %r9075, %r9074, 23;
	mov.b64 	%rd2144, {%r9081, %r9080};
	xor.b64  	%rd2145, %rd2143, %rd2144;
	xor.b64  	%rd2146, %rd2100, %rd2073;
	and.b64  	%rd2147, %rd2127, %rd2146;
	xor.b64  	%rd2148, %rd2147, %rd2073;
	ld.const.u64 	%rd2149, [%rd2140];
	add.s64 	%rd2150, %rd2149, %rd2305;
	add.s64 	%rd2151, %rd2150, %rd2046;
	add.s64 	%rd2152, %rd2151, %rd2148;
	add.s64 	%rd2153, %rd2152, %rd2145;
	add.s64 	%rd2154, %rd2153, %rd2057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9082,%dummy}, %rd2138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9083}, %rd2138;
	}
	shf.r.wrap.b32 	%r9084, %r9083, %r9082, 28;
	shf.r.wrap.b32 	%r9085, %r9082, %r9083, 28;
	mov.b64 	%rd2155, {%r9085, %r9084};
	shf.l.wrap.b32 	%r9086, %r9082, %r9083, 30;
	shf.l.wrap.b32 	%r9087, %r9083, %r9082, 30;
	mov.b64 	%rd2156, {%r9087, %r9086};
	xor.b64  	%rd2157, %rd2155, %rd2156;
	shf.l.wrap.b32 	%r9088, %r9082, %r9083, 25;
	shf.l.wrap.b32 	%r9089, %r9083, %r9082, 25;
	mov.b64 	%rd2158, {%r9089, %r9088};
	xor.b64  	%rd2159, %rd2157, %rd2158;
	and.b64  	%rd2160, %rd2138, %rd2111;
	xor.b64  	%rd2161, %rd2138, %rd2111;
	and.b64  	%rd2162, %rd2161, %rd2084;
	or.b64  	%rd2163, %rd2162, %rd2160;
	add.s64 	%rd2164, %rd2159, %rd2163;
	add.s64 	%rd2165, %rd2164, %rd2153;
	add.s32 	%r9090, %r9193, 12;
	mul.wide.s32 	%rd2166, %r9090, 8;
	add.s64 	%rd2167, %rd1842, %rd2166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9091,%dummy}, %rd2154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9092}, %rd2154;
	}
	shf.r.wrap.b32 	%r9093, %r9092, %r9091, 14;
	shf.r.wrap.b32 	%r9094, %r9091, %r9092, 14;
	mov.b64 	%rd2168, {%r9094, %r9093};
	shf.r.wrap.b32 	%r9095, %r9092, %r9091, 18;
	shf.r.wrap.b32 	%r9096, %r9091, %r9092, 18;
	mov.b64 	%rd2169, {%r9096, %r9095};
	xor.b64  	%rd2170, %rd2168, %rd2169;
	shf.l.wrap.b32 	%r9097, %r9091, %r9092, 23;
	shf.l.wrap.b32 	%r9098, %r9092, %r9091, 23;
	mov.b64 	%rd2171, {%r9098, %r9097};
	xor.b64  	%rd2172, %rd2170, %rd2171;
	xor.b64  	%rd2173, %rd2127, %rd2100;
	and.b64  	%rd2174, %rd2154, %rd2173;
	xor.b64  	%rd2175, %rd2174, %rd2100;
	ld.const.u64 	%rd2176, [%rd2167];
	add.s64 	%rd2177, %rd2176, %rd2304;
	add.s64 	%rd2178, %rd2177, %rd2073;
	add.s64 	%rd2179, %rd2178, %rd2175;
	add.s64 	%rd2180, %rd2179, %rd2172;
	add.s64 	%rd2316, %rd2180, %rd2084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9099,%dummy}, %rd2165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9100}, %rd2165;
	}
	shf.r.wrap.b32 	%r9101, %r9100, %r9099, 28;
	shf.r.wrap.b32 	%r9102, %r9099, %r9100, 28;
	mov.b64 	%rd2181, {%r9102, %r9101};
	shf.l.wrap.b32 	%r9103, %r9099, %r9100, 30;
	shf.l.wrap.b32 	%r9104, %r9100, %r9099, 30;
	mov.b64 	%rd2182, {%r9104, %r9103};
	xor.b64  	%rd2183, %rd2181, %rd2182;
	shf.l.wrap.b32 	%r9105, %r9099, %r9100, 25;
	shf.l.wrap.b32 	%r9106, %r9100, %r9099, 25;
	mov.b64 	%rd2184, {%r9106, %r9105};
	xor.b64  	%rd2185, %rd2183, %rd2184;
	and.b64  	%rd2186, %rd2165, %rd2138;
	xor.b64  	%rd2187, %rd2165, %rd2138;
	and.b64  	%rd2188, %rd2187, %rd2111;
	or.b64  	%rd2189, %rd2188, %rd2186;
	add.s64 	%rd2190, %rd2185, %rd2189;
	add.s64 	%rd2312, %rd2190, %rd2180;
	add.s32 	%r9107, %r9193, 13;
	mul.wide.s32 	%rd2191, %r9107, 8;
	add.s64 	%rd2192, %rd1842, %rd2191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9108,%dummy}, %rd2316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9109}, %rd2316;
	}
	shf.r.wrap.b32 	%r9110, %r9109, %r9108, 14;
	shf.r.wrap.b32 	%r9111, %r9108, %r9109, 14;
	mov.b64 	%rd2193, {%r9111, %r9110};
	shf.r.wrap.b32 	%r9112, %r9109, %r9108, 18;
	shf.r.wrap.b32 	%r9113, %r9108, %r9109, 18;
	mov.b64 	%rd2194, {%r9113, %r9112};
	xor.b64  	%rd2195, %rd2193, %rd2194;
	shf.l.wrap.b32 	%r9114, %r9108, %r9109, 23;
	shf.l.wrap.b32 	%r9115, %r9109, %r9108, 23;
	mov.b64 	%rd2196, {%r9115, %r9114};
	xor.b64  	%rd2197, %rd2195, %rd2196;
	xor.b64  	%rd2198, %rd2154, %rd2127;
	and.b64  	%rd2199, %rd2316, %rd2198;
	xor.b64  	%rd2200, %rd2199, %rd2127;
	ld.const.u64 	%rd2201, [%rd2192];
	add.s64 	%rd2202, %rd2201, %rd2303;
	add.s64 	%rd2203, %rd2202, %rd2100;
	add.s64 	%rd2204, %rd2203, %rd2200;
	add.s64 	%rd2205, %rd2204, %rd2197;
	add.s64 	%rd2315, %rd2205, %rd2111;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9116,%dummy}, %rd2312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9117}, %rd2312;
	}
	shf.r.wrap.b32 	%r9118, %r9117, %r9116, 28;
	shf.r.wrap.b32 	%r9119, %r9116, %r9117, 28;
	mov.b64 	%rd2206, {%r9119, %r9118};
	shf.l.wrap.b32 	%r9120, %r9116, %r9117, 30;
	shf.l.wrap.b32 	%r9121, %r9117, %r9116, 30;
	mov.b64 	%rd2207, {%r9121, %r9120};
	xor.b64  	%rd2208, %rd2206, %rd2207;
	shf.l.wrap.b32 	%r9122, %r9116, %r9117, 25;
	shf.l.wrap.b32 	%r9123, %r9117, %r9116, 25;
	mov.b64 	%rd2209, {%r9123, %r9122};
	xor.b64  	%rd2210, %rd2208, %rd2209;
	and.b64  	%rd2211, %rd2312, %rd2165;
	xor.b64  	%rd2212, %rd2312, %rd2165;
	and.b64  	%rd2213, %rd2212, %rd2138;
	or.b64  	%rd2214, %rd2213, %rd2211;
	add.s64 	%rd2215, %rd2210, %rd2214;
	add.s64 	%rd2311, %rd2215, %rd2205;
	add.s32 	%r9124, %r9193, 14;
	mul.wide.s32 	%rd2216, %r9124, 8;
	add.s64 	%rd2217, %rd1842, %rd2216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9125,%dummy}, %rd2315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9126}, %rd2315;
	}
	shf.r.wrap.b32 	%r9127, %r9126, %r9125, 14;
	shf.r.wrap.b32 	%r9128, %r9125, %r9126, 14;
	mov.b64 	%rd2218, {%r9128, %r9127};
	shf.r.wrap.b32 	%r9129, %r9126, %r9125, 18;
	shf.r.wrap.b32 	%r9130, %r9125, %r9126, 18;
	mov.b64 	%rd2219, {%r9130, %r9129};
	xor.b64  	%rd2220, %rd2218, %rd2219;
	shf.l.wrap.b32 	%r9131, %r9125, %r9126, 23;
	shf.l.wrap.b32 	%r9132, %r9126, %r9125, 23;
	mov.b64 	%rd2221, {%r9132, %r9131};
	xor.b64  	%rd2222, %rd2220, %rd2221;
	xor.b64  	%rd2223, %rd2316, %rd2154;
	and.b64  	%rd2224, %rd2315, %rd2223;
	xor.b64  	%rd2225, %rd2224, %rd2154;
	ld.const.u64 	%rd2226, [%rd2217];
	add.s64 	%rd2227, %rd2226, %rd2302;
	add.s64 	%rd2228, %rd2227, %rd2127;
	add.s64 	%rd2229, %rd2228, %rd2225;
	add.s64 	%rd2230, %rd2229, %rd2222;
	add.s64 	%rd2314, %rd2230, %rd2138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9133,%dummy}, %rd2311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9134}, %rd2311;
	}
	shf.r.wrap.b32 	%r9135, %r9134, %r9133, 28;
	shf.r.wrap.b32 	%r9136, %r9133, %r9134, 28;
	mov.b64 	%rd2231, {%r9136, %r9135};
	shf.l.wrap.b32 	%r9137, %r9133, %r9134, 30;
	shf.l.wrap.b32 	%r9138, %r9134, %r9133, 30;
	mov.b64 	%rd2232, {%r9138, %r9137};
	xor.b64  	%rd2233, %rd2231, %rd2232;
	shf.l.wrap.b32 	%r9139, %r9133, %r9134, 25;
	shf.l.wrap.b32 	%r9140, %r9134, %r9133, 25;
	mov.b64 	%rd2234, {%r9140, %r9139};
	xor.b64  	%rd2235, %rd2233, %rd2234;
	and.b64  	%rd2236, %rd2311, %rd2312;
	xor.b64  	%rd2237, %rd2311, %rd2312;
	and.b64  	%rd2238, %rd2237, %rd2165;
	or.b64  	%rd2239, %rd2238, %rd2236;
	add.s64 	%rd2240, %rd2235, %rd2239;
	add.s64 	%rd2310, %rd2240, %rd2230;
	add.s32 	%r9141, %r9193, 15;
	mul.wide.s32 	%rd2241, %r9141, 8;
	add.s64 	%rd2242, %rd1842, %rd2241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9142,%dummy}, %rd2314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9143}, %rd2314;
	}
	shf.r.wrap.b32 	%r9144, %r9143, %r9142, 14;
	shf.r.wrap.b32 	%r9145, %r9142, %r9143, 14;
	mov.b64 	%rd2243, {%r9145, %r9144};
	shf.r.wrap.b32 	%r9146, %r9143, %r9142, 18;
	shf.r.wrap.b32 	%r9147, %r9142, %r9143, 18;
	mov.b64 	%rd2244, {%r9147, %r9146};
	xor.b64  	%rd2245, %rd2243, %rd2244;
	shf.l.wrap.b32 	%r9148, %r9142, %r9143, 23;
	shf.l.wrap.b32 	%r9149, %r9143, %r9142, 23;
	mov.b64 	%rd2246, {%r9149, %r9148};
	xor.b64  	%rd2247, %rd2245, %rd2246;
	xor.b64  	%rd2248, %rd2315, %rd2316;
	and.b64  	%rd2249, %rd2314, %rd2248;
	xor.b64  	%rd2250, %rd2249, %rd2316;
	ld.const.u64 	%rd2251, [%rd2242];
	add.s64 	%rd2252, %rd2251, %rd2301;
	add.s64 	%rd2253, %rd2252, %rd2154;
	add.s64 	%rd2254, %rd2253, %rd2250;
	add.s64 	%rd2255, %rd2254, %rd2247;
	add.s64 	%rd2313, %rd2255, %rd2165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9150,%dummy}, %rd2310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9151}, %rd2310;
	}
	shf.r.wrap.b32 	%r9152, %r9151, %r9150, 28;
	shf.r.wrap.b32 	%r9153, %r9150, %r9151, 28;
	mov.b64 	%rd2256, {%r9153, %r9152};
	shf.l.wrap.b32 	%r9154, %r9150, %r9151, 30;
	shf.l.wrap.b32 	%r9155, %r9151, %r9150, 30;
	mov.b64 	%rd2257, {%r9155, %r9154};
	xor.b64  	%rd2258, %rd2256, %rd2257;
	shf.l.wrap.b32 	%r9156, %r9150, %r9151, 25;
	shf.l.wrap.b32 	%r9157, %r9151, %r9150, 25;
	mov.b64 	%rd2259, {%r9157, %r9156};
	xor.b64  	%rd2260, %rd2258, %rd2259;
	and.b64  	%rd2261, %rd2310, %rd2311;
	xor.b64  	%rd2262, %rd2310, %rd2311;
	and.b64  	%rd2263, %rd2262, %rd2312;
	or.b64  	%rd2264, %rd2263, %rd2261;
	add.s64 	%rd2265, %rd2260, %rd2264;
	add.s64 	%rd2309, %rd2265, %rd2255;
	add.s32 	%r9193, %r9193, 16;
	setp.lt.s32	%p99, %r9193, 80;
	@%p99 bra 	BB0_176;

	add.s64 	%rd2266, %rd111, %rd2309;
	st.local.u64 	[%rd9], %rd2266;
	add.s64 	%rd2267, %rd112, %rd2310;
	st.local.u64 	[%rd9+8], %rd2267;
	add.s64 	%rd2268, %rd113, %rd2311;
	st.local.u64 	[%rd9+16], %rd2268;
	add.s64 	%rd2269, %rd110, %rd2312;
	st.local.u64 	[%rd9+24], %rd2269;
	add.s64 	%rd2270, %rd106, %rd2313;
	st.local.u64 	[%rd9+32], %rd2270;
	add.s64 	%rd2271, %rd108, %rd2314;
	st.local.u64 	[%rd9+40], %rd2271;
	add.s64 	%rd2272, %rd107, %rd2315;
	st.local.u64 	[%rd9+48], %rd2272;
	add.s64 	%rd2273, %rd109, %rd2316;
	st.local.u64 	[%rd9+56], %rd2273;
	mov.u64 	%rd2274, 0;
	st.local.u32 	[%rd9+68], %rd2274;
	st.local.u32 	[%rd9+64], %rd2274;
	st.local.u32 	[%rd9+76], %rd2274;
	st.local.u32 	[%rd9+72], %rd2274;
	st.local.u32 	[%rd9+84], %rd2274;
	st.local.u32 	[%rd9+80], %rd2274;
	st.local.u32 	[%rd9+92], %rd2274;
	st.local.u32 	[%rd9+88], %rd2274;
	st.local.u32 	[%rd9+100], %rd2274;
	st.local.u32 	[%rd9+96], %rd2274;
	st.local.u32 	[%rd9+108], %rd2274;
	st.local.u32 	[%rd9+104], %rd2274;
	st.local.u32 	[%rd9+116], %rd2274;
	st.local.u32 	[%rd9+112], %rd2274;
	st.local.u32 	[%rd9+124], %rd2274;
	st.local.u32 	[%rd9+120], %rd2274;
	st.local.u32 	[%rd9+132], %rd2274;
	st.local.u32 	[%rd9+128], %rd2274;
	st.local.u32 	[%rd9+140], %rd2274;
	st.local.u32 	[%rd9+136], %rd2274;
	st.local.u32 	[%rd9+148], %rd2274;
	st.local.u32 	[%rd9+144], %rd2274;
	st.local.u32 	[%rd9+156], %rd2274;
	st.local.u32 	[%rd9+152], %rd2274;
	st.local.u32 	[%rd9+164], %rd2274;
	st.local.u32 	[%rd9+160], %rd2274;
	st.local.u32 	[%rd9+172], %rd2274;
	st.local.u32 	[%rd9+168], %rd2274;
	st.local.u32 	[%rd9+180], %rd2274;
	st.local.u32 	[%rd9+176], %rd2274;
	st.local.u32 	[%rd9+188], %rd2274;
	st.local.u32 	[%rd9+184], %rd2274;
	bra.uni 	BB0_178;

BB0_2:
	setp.gt.s32	%p3, %r3, 15;
	@%p3 bra 	BB0_35;

	setp.gt.s32	%p27, %r3, 7;
	@%p27 bra 	BB0_20;

	setp.gt.s32	%p39, %r3, 3;
	@%p39 bra 	BB0_13;

	setp.gt.s32	%p45, %r3, 1;
	@%p45 bra 	BB0_9;

	setp.eq.s32	%p48, %r3, 0;
	@%p48 bra 	BB0_87;
	bra.uni 	BB0_7;

BB0_87:
	ld.local.u32 	%r5204, [%rd8+12];
	mov.u32 	%r9159, 0;
	// inline asm
	prmt.b32 %r9162, %r9159, %r5204, %r4;
	// inline asm
	ld.local.u32 	%r5207, [%rd8+12];
	ld.local.u32 	%r5208, [%rd8+8];
	// inline asm
	prmt.b32 %r5206, %r5207, %r5208, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r5206;
	ld.local.u32 	%r5211, [%rd8+8];
	ld.local.u32 	%r5212, [%rd8+4];
	// inline asm
	prmt.b32 %r5210, %r5211, %r5212, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r5210;
	ld.local.u32 	%r5215, [%rd8+4];
	ld.local.u32 	%r5216, [%rd8];
	// inline asm
	prmt.b32 %r5214, %r5215, %r5216, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r5214;
	ld.local.u32 	%r5219, [%rd8];
	ld.local.u32 	%r5220, [%rd7+12];
	// inline asm
	prmt.b32 %r5218, %r5219, %r5220, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r5218;
	ld.local.u32 	%r5223, [%rd7+12];
	ld.local.u32 	%r5224, [%rd7+8];
	// inline asm
	prmt.b32 %r5222, %r5223, %r5224, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r5222;
	ld.local.u32 	%r5227, [%rd7+8];
	ld.local.u32 	%r5228, [%rd7+4];
	// inline asm
	prmt.b32 %r5226, %r5227, %r5228, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r5226;
	ld.local.u32 	%r5231, [%rd7+4];
	ld.local.u32 	%r5232, [%rd7];
	// inline asm
	prmt.b32 %r5230, %r5231, %r5232, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r5230;
	ld.local.u32 	%r5235, [%rd7];
	ld.local.u32 	%r5236, [%rd6+12];
	// inline asm
	prmt.b32 %r5234, %r5235, %r5236, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r5234;
	ld.local.u32 	%r5239, [%rd6+12];
	ld.local.u32 	%r5240, [%rd6+8];
	// inline asm
	prmt.b32 %r5238, %r5239, %r5240, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r5238;
	ld.local.u32 	%r5243, [%rd6+8];
	ld.local.u32 	%r5244, [%rd6+4];
	// inline asm
	prmt.b32 %r5242, %r5243, %r5244, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r5242;
	ld.local.u32 	%r5247, [%rd6+4];
	ld.local.u32 	%r5248, [%rd6];
	// inline asm
	prmt.b32 %r5246, %r5247, %r5248, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r5246;
	ld.local.u32 	%r5251, [%rd6];
	ld.local.u32 	%r5252, [%rd5+12];
	// inline asm
	prmt.b32 %r5250, %r5251, %r5252, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r5250;
	ld.local.u32 	%r5255, [%rd5+12];
	ld.local.u32 	%r5256, [%rd5+8];
	// inline asm
	prmt.b32 %r5254, %r5255, %r5256, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r5254;
	ld.local.u32 	%r5259, [%rd5+8];
	ld.local.u32 	%r5260, [%rd5+4];
	// inline asm
	prmt.b32 %r5258, %r5259, %r5260, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r5258;
	ld.local.u32 	%r5263, [%rd5+4];
	ld.local.u32 	%r5264, [%rd5];
	// inline asm
	prmt.b32 %r5262, %r5263, %r5264, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r5262;
	ld.local.u32 	%r5267, [%rd5];
	ld.local.u32 	%r5268, [%rd4+12];
	// inline asm
	prmt.b32 %r5266, %r5267, %r5268, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r5266;
	ld.local.u32 	%r5271, [%rd4+12];
	ld.local.u32 	%r5272, [%rd4+8];
	// inline asm
	prmt.b32 %r5270, %r5271, %r5272, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r5270;
	ld.local.u32 	%r5275, [%rd4+8];
	ld.local.u32 	%r5276, [%rd4+4];
	// inline asm
	prmt.b32 %r5274, %r5275, %r5276, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r5274;
	ld.local.u32 	%r5279, [%rd4+4];
	ld.local.u32 	%r5280, [%rd4];
	// inline asm
	prmt.b32 %r5278, %r5279, %r5280, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r5278;
	ld.local.u32 	%r5283, [%rd4];
	ld.local.u32 	%r5284, [%rd3+12];
	// inline asm
	prmt.b32 %r5282, %r5283, %r5284, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r5282;
	ld.local.u32 	%r5287, [%rd3+12];
	ld.local.u32 	%r5288, [%rd3+8];
	// inline asm
	prmt.b32 %r5286, %r5287, %r5288, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r5286;
	ld.local.u32 	%r5291, [%rd3+8];
	ld.local.u32 	%r5292, [%rd3+4];
	// inline asm
	prmt.b32 %r5290, %r5291, %r5292, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r5290;
	ld.local.u32 	%r5295, [%rd3+4];
	ld.local.u32 	%r5296, [%rd3];
	// inline asm
	prmt.b32 %r5294, %r5295, %r5296, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r5294;
	ld.local.u32 	%r5299, [%rd3];
	ld.local.u32 	%r5300, [%rd2+12];
	// inline asm
	prmt.b32 %r5298, %r5299, %r5300, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r5298;
	ld.local.u32 	%r5303, [%rd2+12];
	ld.local.u32 	%r5304, [%rd2+8];
	// inline asm
	prmt.b32 %r5302, %r5303, %r5304, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r5302;
	ld.local.u32 	%r5307, [%rd2+8];
	ld.local.u32 	%r5308, [%rd2+4];
	// inline asm
	prmt.b32 %r5306, %r5307, %r5308, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r5306;
	ld.local.u32 	%r5311, [%rd2+4];
	ld.local.u32 	%r5312, [%rd2];
	// inline asm
	prmt.b32 %r5310, %r5311, %r5312, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r5310;
	ld.local.u32 	%r5315, [%rd2];
	ld.local.u32 	%r5316, [%rd1+12];
	// inline asm
	prmt.b32 %r5314, %r5315, %r5316, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r5314;
	ld.local.u32 	%r5319, [%rd1+12];
	ld.local.u32 	%r5320, [%rd1+8];
	// inline asm
	prmt.b32 %r5318, %r5319, %r5320, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r5318;
	ld.local.u32 	%r5323, [%rd1+8];
	ld.local.u32 	%r5324, [%rd1+4];
	// inline asm
	prmt.b32 %r5322, %r5323, %r5324, %r4;
	// inline asm
	st.local.u32 	[%rd1+8], %r5322;
	ld.local.u32 	%r5327, [%rd1+4];
	ld.local.u32 	%r5328, [%rd1];
	// inline asm
	prmt.b32 %r5326, %r5327, %r5328, %r4;
	// inline asm
	st.local.u32 	[%rd1+4], %r5326;
	ld.local.u32 	%r5331, [%rd1];
	// inline asm
	prmt.b32 %r9158, %r5331, %r9159, %r4;
	// inline asm
	st.local.u32 	[%rd1], %r9158;
	mov.u32 	%r9160, %r9159;
	mov.u32 	%r9161, %r9159;
	bra.uni 	BB0_89;

BB0_125:
	setp.gt.s32	%p52, %r3, 23;
	@%p52 bra 	BB0_141;

	setp.gt.s32	%p64, %r3, 19;
	@%p64 bra 	BB0_134;

	setp.gt.s32	%p70, %r3, 17;
	@%p70 bra 	BB0_131;

	setp.eq.s32	%p73, %r3, 16;
	@%p73 bra 	BB0_163;
	bra.uni 	BB0_129;

BB0_163:
	ld.local.u32 	%r6702, [%rd4+12];
	ld.local.u32 	%r6703, [%rd4+8];
	// inline asm
	prmt.b32 %r6701, %r6702, %r6703, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6701;
	ld.local.u32 	%r6706, [%rd4+8];
	ld.local.u32 	%r6707, [%rd4+4];
	// inline asm
	prmt.b32 %r6705, %r6706, %r6707, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6705;
	ld.local.u32 	%r6710, [%rd4+4];
	ld.local.u32 	%r6711, [%rd4];
	// inline asm
	prmt.b32 %r6709, %r6710, %r6711, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6709;
	ld.local.u32 	%r6714, [%rd4];
	ld.local.u32 	%r6715, [%rd3+12];
	// inline asm
	prmt.b32 %r6713, %r6714, %r6715, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6713;
	ld.local.u32 	%r6718, [%rd3+12];
	ld.local.u32 	%r6719, [%rd3+8];
	// inline asm
	prmt.b32 %r6717, %r6718, %r6719, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6717;
	ld.local.u32 	%r6722, [%rd3+8];
	ld.local.u32 	%r6723, [%rd3+4];
	// inline asm
	prmt.b32 %r6721, %r6722, %r6723, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6721;
	ld.local.u32 	%r6726, [%rd3+4];
	ld.local.u32 	%r6727, [%rd3];
	// inline asm
	prmt.b32 %r6725, %r6726, %r6727, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6725;
	ld.local.u32 	%r6730, [%rd3];
	ld.local.u32 	%r6731, [%rd2+12];
	// inline asm
	prmt.b32 %r6729, %r6730, %r6731, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6729;
	ld.local.u32 	%r6734, [%rd2+12];
	ld.local.u32 	%r6735, [%rd2+8];
	// inline asm
	prmt.b32 %r6733, %r6734, %r6735, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6733;
	ld.local.u32 	%r6738, [%rd2+8];
	ld.local.u32 	%r6739, [%rd2+4];
	// inline asm
	prmt.b32 %r6737, %r6738, %r6739, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6737;
	ld.local.u32 	%r6742, [%rd2+4];
	ld.local.u32 	%r6743, [%rd2];
	// inline asm
	prmt.b32 %r6741, %r6742, %r6743, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6741;
	ld.local.u32 	%r6746, [%rd2];
	ld.local.u32 	%r6747, [%rd1+12];
	// inline asm
	prmt.b32 %r6745, %r6746, %r6747, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6745;
	ld.local.u32 	%r6750, [%rd1+12];
	ld.local.u32 	%r6751, [%rd1+8];
	// inline asm
	prmt.b32 %r6749, %r6750, %r6751, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r6749;
	ld.local.u32 	%r6754, [%rd1+8];
	ld.local.u32 	%r6755, [%rd1+4];
	// inline asm
	prmt.b32 %r6753, %r6754, %r6755, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r6753;
	ld.local.u32 	%r6758, [%rd1+4];
	ld.local.u32 	%r6759, [%rd1];
	// inline asm
	prmt.b32 %r6757, %r6758, %r6759, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r6757;
	ld.local.u32 	%r6762, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r6761, %r6762, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r6761;
	st.local.u32 	[%rd4+12], %r9192;
	st.local.u32 	[%rd4+8], %r9192;
	st.local.u32 	[%rd4+4], %r9192;
	st.local.u32 	[%rd4], %r9192;
	st.local.u32 	[%rd3+12], %r9192;
	st.local.u32 	[%rd3+8], %r9192;
	st.local.u32 	[%rd3+4], %r9192;
	st.local.u32 	[%rd3], %r9192;
	st.local.u32 	[%rd2+12], %r9192;
	st.local.u32 	[%rd2+8], %r9192;
	st.local.u32 	[%rd2+4], %r9192;
	st.local.u32 	[%rd2], %r9192;
	st.local.u32 	[%rd1+12], %r9192;
	st.local.u32 	[%rd1+8], %r9192;
	mov.u64 	%rd1242, 0;
	st.local.u32 	[%rd1+4], %rd1242;
	st.local.u32 	[%rd1], %rd1242;
	bra.uni 	BB0_173;

BB0_35:
	setp.gt.s32	%p4, %r3, 23;
	@%p4 bra 	BB0_51;

	setp.gt.s32	%p16, %r3, 19;
	@%p16 bra 	BB0_44;

	setp.gt.s32	%p22, %r3, 17;
	@%p22 bra 	BB0_41;

	setp.eq.s32	%p25, %r3, 16;
	@%p25 bra 	BB0_73;
	bra.uni 	BB0_39;

BB0_73:
	ld.local.u32 	%r2716, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9178, %r9158, %r2716, %r4;
	// inline asm
	ld.local.u32 	%r2719, [%rd8+12];
	ld.local.u32 	%r2720, [%rd8+8];
	// inline asm
	prmt.b32 %r9171, %r2719, %r2720, %r4;
	// inline asm
	ld.local.u32 	%r2723, [%rd8+8];
	ld.local.u32 	%r2724, [%rd8+4];
	// inline asm
	prmt.b32 %r9172, %r2723, %r2724, %r4;
	// inline asm
	ld.local.u32 	%r2727, [%rd8+4];
	ld.local.u32 	%r2728, [%rd8];
	// inline asm
	prmt.b32 %r9173, %r2727, %r2728, %r4;
	// inline asm
	ld.local.u32 	%r2731, [%rd8];
	ld.local.u32 	%r2732, [%rd7+12];
	// inline asm
	prmt.b32 %r9174, %r2731, %r2732, %r4;
	// inline asm
	ld.local.u32 	%r2735, [%rd7+12];
	ld.local.u32 	%r2736, [%rd7+8];
	// inline asm
	prmt.b32 %r9167, %r2735, %r2736, %r4;
	// inline asm
	ld.local.u32 	%r2739, [%rd7+8];
	ld.local.u32 	%r2740, [%rd7+4];
	// inline asm
	prmt.b32 %r9168, %r2739, %r2740, %r4;
	// inline asm
	ld.local.u32 	%r2743, [%rd7+4];
	ld.local.u32 	%r2744, [%rd7];
	// inline asm
	prmt.b32 %r9169, %r2743, %r2744, %r4;
	// inline asm
	ld.local.u32 	%r2747, [%rd7];
	ld.local.u32 	%r2748, [%rd6+12];
	// inline asm
	prmt.b32 %r9170, %r2747, %r2748, %r4;
	// inline asm
	ld.local.u32 	%r2751, [%rd6+12];
	ld.local.u32 	%r2752, [%rd6+8];
	// inline asm
	prmt.b32 %r9163, %r2751, %r2752, %r4;
	// inline asm
	ld.local.u32 	%r2755, [%rd6+8];
	ld.local.u32 	%r2756, [%rd6+4];
	// inline asm
	prmt.b32 %r9164, %r2755, %r2756, %r4;
	// inline asm
	ld.local.u32 	%r2759, [%rd6+4];
	ld.local.u32 	%r2760, [%rd6];
	// inline asm
	prmt.b32 %r9165, %r2759, %r2760, %r4;
	// inline asm
	ld.local.u32 	%r2763, [%rd6];
	ld.local.u32 	%r2764, [%rd5+12];
	// inline asm
	prmt.b32 %r9166, %r2763, %r2764, %r4;
	// inline asm
	ld.local.u32 	%r2767, [%rd5+12];
	ld.local.u32 	%r2768, [%rd5+8];
	// inline asm
	prmt.b32 %r9159, %r2767, %r2768, %r4;
	// inline asm
	ld.local.u32 	%r2771, [%rd5+8];
	ld.local.u32 	%r2772, [%rd5+4];
	// inline asm
	prmt.b32 %r9160, %r2771, %r2772, %r4;
	// inline asm
	ld.local.u32 	%r2775, [%rd5+4];
	ld.local.u32 	%r2776, [%rd5];
	// inline asm
	prmt.b32 %r9161, %r2775, %r2776, %r4;
	// inline asm
	ld.local.u32 	%r2779, [%rd5];
	ld.local.u32 	%r2780, [%rd4+12];
	// inline asm
	prmt.b32 %r9162, %r2779, %r2780, %r4;
	// inline asm
	ld.local.u32 	%r2783, [%rd4+12];
	ld.local.u32 	%r2784, [%rd4+8];
	// inline asm
	prmt.b32 %r2782, %r2783, %r2784, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2782;
	ld.local.u32 	%r2787, [%rd4+8];
	ld.local.u32 	%r2788, [%rd4+4];
	// inline asm
	prmt.b32 %r2786, %r2787, %r2788, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2786;
	ld.local.u32 	%r2791, [%rd4+4];
	ld.local.u32 	%r2792, [%rd4];
	// inline asm
	prmt.b32 %r2790, %r2791, %r2792, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2790;
	ld.local.u32 	%r2795, [%rd4];
	ld.local.u32 	%r2796, [%rd3+12];
	// inline asm
	prmt.b32 %r2794, %r2795, %r2796, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2794;
	ld.local.u32 	%r2799, [%rd3+12];
	ld.local.u32 	%r2800, [%rd3+8];
	// inline asm
	prmt.b32 %r2798, %r2799, %r2800, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2798;
	ld.local.u32 	%r2803, [%rd3+8];
	ld.local.u32 	%r2804, [%rd3+4];
	// inline asm
	prmt.b32 %r2802, %r2803, %r2804, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2802;
	ld.local.u32 	%r2807, [%rd3+4];
	ld.local.u32 	%r2808, [%rd3];
	// inline asm
	prmt.b32 %r2806, %r2807, %r2808, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2806;
	ld.local.u32 	%r2811, [%rd3];
	ld.local.u32 	%r2812, [%rd2+12];
	// inline asm
	prmt.b32 %r2810, %r2811, %r2812, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2810;
	ld.local.u32 	%r2815, [%rd2+12];
	ld.local.u32 	%r2816, [%rd2+8];
	// inline asm
	prmt.b32 %r2814, %r2815, %r2816, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2814;
	ld.local.u32 	%r2819, [%rd2+8];
	ld.local.u32 	%r2820, [%rd2+4];
	// inline asm
	prmt.b32 %r2818, %r2819, %r2820, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2818;
	ld.local.u32 	%r2823, [%rd2+4];
	ld.local.u32 	%r2824, [%rd2];
	// inline asm
	prmt.b32 %r2822, %r2823, %r2824, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2822;
	ld.local.u32 	%r2827, [%rd2];
	ld.local.u32 	%r2828, [%rd1+12];
	// inline asm
	prmt.b32 %r2826, %r2827, %r2828, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r2826;
	ld.local.u32 	%r2831, [%rd1+12];
	ld.local.u32 	%r2832, [%rd1+8];
	// inline asm
	prmt.b32 %r2830, %r2831, %r2832, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r2830;
	ld.local.u32 	%r2835, [%rd1+8];
	ld.local.u32 	%r2836, [%rd1+4];
	// inline asm
	prmt.b32 %r2834, %r2835, %r2836, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r2834;
	ld.local.u32 	%r2839, [%rd1+4];
	ld.local.u32 	%r2840, [%rd1];
	// inline asm
	prmt.b32 %r2838, %r2839, %r2840, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r2838;
	ld.local.u32 	%r2843, [%rd1];
	// inline asm
	prmt.b32 %r2842, %r2843, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r2842;
	st.local.u32 	[%rd4+12], %r9158;
	st.local.u32 	[%rd4+8], %r9158;
	st.local.u32 	[%rd4+4], %r9158;
	st.local.u32 	[%rd4], %r9158;
	st.local.u32 	[%rd3+12], %r9158;
	st.local.u32 	[%rd3+8], %r9158;
	st.local.u32 	[%rd3+4], %r9158;
	st.local.u32 	[%rd3], %r9158;
	st.local.u32 	[%rd2+12], %r9158;
	st.local.u32 	[%rd2+8], %r9158;
	st.local.u32 	[%rd2+4], %r9158;
	st.local.u32 	[%rd2], %r9158;
	st.local.u32 	[%rd1+12], %r9158;
	st.local.u32 	[%rd1+8], %r9158;
	mov.u64 	%rd194, 0;
	st.local.u32 	[%rd1+4], %rd194;
	st.local.u32 	[%rd1], %rd194;
	mov.u32 	%r9175, %r9158;
	mov.u32 	%r9176, %r9158;
	mov.u32 	%r9177, %r9158;
	bra.uni 	BB0_83;

BB0_110:
	setp.gt.s32	%p76, %r3, 11;
	@%p76 bra 	BB0_118;

	setp.gt.s32	%p82, %r3, 9;
	@%p82 bra 	BB0_115;

	setp.eq.s32	%p85, %r3, 8;
	@%p85 bra 	BB0_167;
	bra.uni 	BB0_113;

BB0_167:
	ld.local.u32 	%r7334, [%rd6+12];
	ld.local.u32 	%r7335, [%rd6+8];
	// inline asm
	prmt.b32 %r7333, %r7334, %r7335, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7333;
	ld.local.u32 	%r7338, [%rd6+8];
	ld.local.u32 	%r7339, [%rd6+4];
	// inline asm
	prmt.b32 %r7337, %r7338, %r7339, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7337;
	ld.local.u32 	%r7342, [%rd6+4];
	ld.local.u32 	%r7343, [%rd6];
	// inline asm
	prmt.b32 %r7341, %r7342, %r7343, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7341;
	ld.local.u32 	%r7346, [%rd6];
	ld.local.u32 	%r7347, [%rd5+12];
	// inline asm
	prmt.b32 %r7345, %r7346, %r7347, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7345;
	ld.local.u32 	%r7350, [%rd5+12];
	ld.local.u32 	%r7351, [%rd5+8];
	// inline asm
	prmt.b32 %r7349, %r7350, %r7351, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7349;
	ld.local.u32 	%r7354, [%rd5+8];
	ld.local.u32 	%r7355, [%rd5+4];
	// inline asm
	prmt.b32 %r7353, %r7354, %r7355, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7353;
	ld.local.u32 	%r7358, [%rd5+4];
	ld.local.u32 	%r7359, [%rd5];
	// inline asm
	prmt.b32 %r7357, %r7358, %r7359, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7357;
	ld.local.u32 	%r7362, [%rd5];
	ld.local.u32 	%r7363, [%rd4+12];
	// inline asm
	prmt.b32 %r7361, %r7362, %r7363, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7361;
	ld.local.u32 	%r7366, [%rd4+12];
	ld.local.u32 	%r7367, [%rd4+8];
	// inline asm
	prmt.b32 %r7365, %r7366, %r7367, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7365;
	ld.local.u32 	%r7370, [%rd4+8];
	ld.local.u32 	%r7371, [%rd4+4];
	// inline asm
	prmt.b32 %r7369, %r7370, %r7371, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7369;
	ld.local.u32 	%r7374, [%rd4+4];
	ld.local.u32 	%r7375, [%rd4];
	// inline asm
	prmt.b32 %r7373, %r7374, %r7375, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7373;
	ld.local.u32 	%r7378, [%rd4];
	ld.local.u32 	%r7379, [%rd3+12];
	// inline asm
	prmt.b32 %r7377, %r7378, %r7379, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7377;
	ld.local.u32 	%r7382, [%rd3+12];
	ld.local.u32 	%r7383, [%rd3+8];
	// inline asm
	prmt.b32 %r7381, %r7382, %r7383, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7381;
	ld.local.u32 	%r7386, [%rd3+8];
	ld.local.u32 	%r7387, [%rd3+4];
	// inline asm
	prmt.b32 %r7385, %r7386, %r7387, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7385;
	ld.local.u32 	%r7390, [%rd3+4];
	ld.local.u32 	%r7391, [%rd3];
	// inline asm
	prmt.b32 %r7389, %r7390, %r7391, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7389;
	ld.local.u32 	%r7394, [%rd3];
	ld.local.u32 	%r7395, [%rd2+12];
	// inline asm
	prmt.b32 %r7393, %r7394, %r7395, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7393;
	ld.local.u32 	%r7398, [%rd2+12];
	ld.local.u32 	%r7399, [%rd2+8];
	// inline asm
	prmt.b32 %r7397, %r7398, %r7399, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7397;
	ld.local.u32 	%r7402, [%rd2+8];
	ld.local.u32 	%r7403, [%rd2+4];
	// inline asm
	prmt.b32 %r7401, %r7402, %r7403, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7401;
	ld.local.u32 	%r7406, [%rd2+4];
	ld.local.u32 	%r7407, [%rd2];
	// inline asm
	prmt.b32 %r7405, %r7406, %r7407, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7405;
	ld.local.u32 	%r7410, [%rd2];
	ld.local.u32 	%r7411, [%rd1+12];
	// inline asm
	prmt.b32 %r7409, %r7410, %r7411, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7409;
	ld.local.u32 	%r7414, [%rd1+12];
	ld.local.u32 	%r7415, [%rd1+8];
	// inline asm
	prmt.b32 %r7413, %r7414, %r7415, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7413;
	ld.local.u32 	%r7418, [%rd1+8];
	ld.local.u32 	%r7419, [%rd1+4];
	// inline asm
	prmt.b32 %r7417, %r7418, %r7419, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7417;
	ld.local.u32 	%r7422, [%rd1+4];
	ld.local.u32 	%r7423, [%rd1];
	// inline asm
	prmt.b32 %r7421, %r7422, %r7423, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r7421;
	ld.local.u32 	%r7426, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r7425, %r7426, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r7425;
	st.local.u32 	[%rd2+12], %r9192;
	st.local.u32 	[%rd2+8], %r9192;
	st.local.u32 	[%rd2+4], %r9192;
	st.local.u32 	[%rd2], %r9192;
	st.local.u32 	[%rd1+12], %r9192;
	st.local.u32 	[%rd1+8], %r9192;
	mov.u64 	%rd1250, 0;
	st.local.u32 	[%rd1+4], %rd1250;
	st.local.u32 	[%rd1], %rd1250;
	bra.uni 	BB0_173;

BB0_20:
	setp.gt.s32	%p28, %r3, 11;
	@%p28 bra 	BB0_28;

	setp.gt.s32	%p34, %r3, 9;
	@%p34 bra 	BB0_25;

	setp.eq.s32	%p37, %r3, 8;
	@%p37 bra 	BB0_77;
	bra.uni 	BB0_23;

BB0_77:
	ld.local.u32 	%r3928, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9170, %r9158, %r3928, %r4;
	// inline asm
	ld.local.u32 	%r3931, [%rd8+12];
	ld.local.u32 	%r3932, [%rd8+8];
	// inline asm
	prmt.b32 %r9163, %r3931, %r3932, %r4;
	// inline asm
	ld.local.u32 	%r3935, [%rd8+8];
	ld.local.u32 	%r3936, [%rd8+4];
	// inline asm
	prmt.b32 %r9164, %r3935, %r3936, %r4;
	// inline asm
	ld.local.u32 	%r3939, [%rd8+4];
	ld.local.u32 	%r3940, [%rd8];
	// inline asm
	prmt.b32 %r9165, %r3939, %r3940, %r4;
	// inline asm
	ld.local.u32 	%r3943, [%rd8];
	ld.local.u32 	%r3944, [%rd7+12];
	// inline asm
	prmt.b32 %r9166, %r3943, %r3944, %r4;
	// inline asm
	ld.local.u32 	%r3947, [%rd7+12];
	ld.local.u32 	%r3948, [%rd7+8];
	// inline asm
	prmt.b32 %r9159, %r3947, %r3948, %r4;
	// inline asm
	ld.local.u32 	%r3951, [%rd7+8];
	ld.local.u32 	%r3952, [%rd7+4];
	// inline asm
	prmt.b32 %r9160, %r3951, %r3952, %r4;
	// inline asm
	ld.local.u32 	%r3955, [%rd7+4];
	ld.local.u32 	%r3956, [%rd7];
	// inline asm
	prmt.b32 %r9161, %r3955, %r3956, %r4;
	// inline asm
	ld.local.u32 	%r3959, [%rd7];
	ld.local.u32 	%r3960, [%rd6+12];
	// inline asm
	prmt.b32 %r9162, %r3959, %r3960, %r4;
	// inline asm
	ld.local.u32 	%r3963, [%rd6+12];
	ld.local.u32 	%r3964, [%rd6+8];
	// inline asm
	prmt.b32 %r3962, %r3963, %r3964, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3962;
	ld.local.u32 	%r3967, [%rd6+8];
	ld.local.u32 	%r3968, [%rd6+4];
	// inline asm
	prmt.b32 %r3966, %r3967, %r3968, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3966;
	ld.local.u32 	%r3971, [%rd6+4];
	ld.local.u32 	%r3972, [%rd6];
	// inline asm
	prmt.b32 %r3970, %r3971, %r3972, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3970;
	ld.local.u32 	%r3975, [%rd6];
	ld.local.u32 	%r3976, [%rd5+12];
	// inline asm
	prmt.b32 %r3974, %r3975, %r3976, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3974;
	ld.local.u32 	%r3979, [%rd5+12];
	ld.local.u32 	%r3980, [%rd5+8];
	// inline asm
	prmt.b32 %r3978, %r3979, %r3980, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3978;
	ld.local.u32 	%r3983, [%rd5+8];
	ld.local.u32 	%r3984, [%rd5+4];
	// inline asm
	prmt.b32 %r3982, %r3983, %r3984, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3982;
	ld.local.u32 	%r3987, [%rd5+4];
	ld.local.u32 	%r3988, [%rd5];
	// inline asm
	prmt.b32 %r3986, %r3987, %r3988, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3986;
	ld.local.u32 	%r3991, [%rd5];
	ld.local.u32 	%r3992, [%rd4+12];
	// inline asm
	prmt.b32 %r3990, %r3991, %r3992, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3990;
	ld.local.u32 	%r3995, [%rd4+12];
	ld.local.u32 	%r3996, [%rd4+8];
	// inline asm
	prmt.b32 %r3994, %r3995, %r3996, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3994;
	ld.local.u32 	%r3999, [%rd4+8];
	ld.local.u32 	%r4000, [%rd4+4];
	// inline asm
	prmt.b32 %r3998, %r3999, %r4000, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3998;
	ld.local.u32 	%r4003, [%rd4+4];
	ld.local.u32 	%r4004, [%rd4];
	// inline asm
	prmt.b32 %r4002, %r4003, %r4004, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4002;
	ld.local.u32 	%r4007, [%rd4];
	ld.local.u32 	%r4008, [%rd3+12];
	// inline asm
	prmt.b32 %r4006, %r4007, %r4008, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4006;
	ld.local.u32 	%r4011, [%rd3+12];
	ld.local.u32 	%r4012, [%rd3+8];
	// inline asm
	prmt.b32 %r4010, %r4011, %r4012, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4010;
	ld.local.u32 	%r4015, [%rd3+8];
	ld.local.u32 	%r4016, [%rd3+4];
	// inline asm
	prmt.b32 %r4014, %r4015, %r4016, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4014;
	ld.local.u32 	%r4019, [%rd3+4];
	ld.local.u32 	%r4020, [%rd3];
	// inline asm
	prmt.b32 %r4018, %r4019, %r4020, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4018;
	ld.local.u32 	%r4023, [%rd3];
	ld.local.u32 	%r4024, [%rd2+12];
	// inline asm
	prmt.b32 %r4022, %r4023, %r4024, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4022;
	ld.local.u32 	%r4027, [%rd2+12];
	ld.local.u32 	%r4028, [%rd2+8];
	// inline asm
	prmt.b32 %r4026, %r4027, %r4028, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4026;
	ld.local.u32 	%r4031, [%rd2+8];
	ld.local.u32 	%r4032, [%rd2+4];
	// inline asm
	prmt.b32 %r4030, %r4031, %r4032, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4030;
	ld.local.u32 	%r4035, [%rd2+4];
	ld.local.u32 	%r4036, [%rd2];
	// inline asm
	prmt.b32 %r4034, %r4035, %r4036, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4034;
	ld.local.u32 	%r4039, [%rd2];
	ld.local.u32 	%r4040, [%rd1+12];
	// inline asm
	prmt.b32 %r4038, %r4039, %r4040, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4038;
	ld.local.u32 	%r4043, [%rd1+12];
	ld.local.u32 	%r4044, [%rd1+8];
	// inline asm
	prmt.b32 %r4042, %r4043, %r4044, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4042;
	ld.local.u32 	%r4047, [%rd1+8];
	ld.local.u32 	%r4048, [%rd1+4];
	// inline asm
	prmt.b32 %r4046, %r4047, %r4048, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4046;
	ld.local.u32 	%r4051, [%rd1+4];
	ld.local.u32 	%r4052, [%rd1];
	// inline asm
	prmt.b32 %r4050, %r4051, %r4052, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4050;
	ld.local.u32 	%r4055, [%rd1];
	// inline asm
	prmt.b32 %r4054, %r4055, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4054;
	st.local.u32 	[%rd2+12], %r9158;
	st.local.u32 	[%rd2+8], %r9158;
	st.local.u32 	[%rd2+4], %r9158;
	st.local.u32 	[%rd2], %r9158;
	st.local.u32 	[%rd1+12], %r9158;
	st.local.u32 	[%rd1+8], %r9158;
	mov.u64 	%rd202, 0;
	st.local.u32 	[%rd1+4], %rd202;
	st.local.u32 	[%rd1], %rd202;
	mov.u32 	%r9167, %r9158;
	mov.u32 	%r9168, %r9158;
	mov.u32 	%r9169, %r9158;
	bra.uni 	BB0_81;

BB0_141:
	setp.gt.s32	%p53, %r3, 27;
	@%p53 bra 	BB0_149;

	setp.gt.s32	%p59, %r3, 25;
	@%p59 bra 	BB0_146;

	setp.eq.s32	%p62, %r3, 24;
	@%p62 bra 	BB0_159;
	bra.uni 	BB0_144;

BB0_159:
	ld.local.u32 	%r6326, [%rd2+12];
	ld.local.u32 	%r6327, [%rd2+8];
	// inline asm
	prmt.b32 %r6325, %r6326, %r6327, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6325;
	ld.local.u32 	%r6330, [%rd2+8];
	ld.local.u32 	%r6331, [%rd2+4];
	// inline asm
	prmt.b32 %r6329, %r6330, %r6331, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6329;
	ld.local.u32 	%r6334, [%rd2+4];
	ld.local.u32 	%r6335, [%rd2];
	// inline asm
	prmt.b32 %r6333, %r6334, %r6335, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6333;
	ld.local.u32 	%r6338, [%rd2];
	ld.local.u32 	%r6339, [%rd1+12];
	// inline asm
	prmt.b32 %r6337, %r6338, %r6339, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6337;
	ld.local.u32 	%r6342, [%rd1+12];
	ld.local.u32 	%r6343, [%rd1+8];
	// inline asm
	prmt.b32 %r6341, %r6342, %r6343, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6341;
	ld.local.u32 	%r6346, [%rd1+8];
	ld.local.u32 	%r6347, [%rd1+4];
	// inline asm
	prmt.b32 %r6345, %r6346, %r6347, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6345;
	ld.local.u32 	%r6350, [%rd1+4];
	ld.local.u32 	%r6351, [%rd1];
	// inline asm
	prmt.b32 %r6349, %r6350, %r6351, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6349;
	ld.local.u32 	%r6354, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r6353, %r6354, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6353;
	st.local.u32 	[%rd6+12], %r9192;
	st.local.u32 	[%rd6+8], %r9192;
	st.local.u32 	[%rd6+4], %r9192;
	st.local.u32 	[%rd6], %r9192;
	st.local.u32 	[%rd5+12], %r9192;
	st.local.u32 	[%rd5+8], %r9192;
	st.local.u32 	[%rd5+4], %r9192;
	st.local.u32 	[%rd5], %r9192;
	st.local.u32 	[%rd4+12], %r9192;
	st.local.u32 	[%rd4+8], %r9192;
	st.local.u32 	[%rd4+4], %r9192;
	st.local.u32 	[%rd4], %r9192;
	st.local.u32 	[%rd3+12], %r9192;
	st.local.u32 	[%rd3+8], %r9192;
	st.local.u32 	[%rd3+4], %r9192;
	st.local.u32 	[%rd3], %r9192;
	st.local.u32 	[%rd2+12], %r9192;
	st.local.u32 	[%rd2+8], %r9192;
	st.local.u32 	[%rd2+4], %r9192;
	st.local.u32 	[%rd2], %r9192;
	st.local.u32 	[%rd1+12], %r9192;
	st.local.u32 	[%rd1+8], %r9192;
	mov.u64 	%rd1234, 0;
	st.local.u32 	[%rd1+4], %rd1234;
	st.local.u32 	[%rd1], %rd1234;
	bra.uni 	BB0_173;

BB0_51:
	setp.gt.s32	%p5, %r3, 27;
	@%p5 bra 	BB0_59;

	setp.gt.s32	%p11, %r3, 25;
	@%p11 bra 	BB0_56;

	setp.eq.s32	%p14, %r3, 24;
	@%p14 bra 	BB0_69;
	bra.uni 	BB0_54;

BB0_69:
	ld.local.u32 	%r1568, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9186, %r9158, %r1568, %r4;
	// inline asm
	ld.local.u32 	%r1571, [%rd8+12];
	ld.local.u32 	%r1572, [%rd8+8];
	// inline asm
	prmt.b32 %r9179, %r1571, %r1572, %r4;
	// inline asm
	ld.local.u32 	%r1575, [%rd8+8];
	ld.local.u32 	%r1576, [%rd8+4];
	// inline asm
	prmt.b32 %r9180, %r1575, %r1576, %r4;
	// inline asm
	ld.local.u32 	%r1579, [%rd8+4];
	ld.local.u32 	%r1580, [%rd8];
	// inline asm
	prmt.b32 %r9181, %r1579, %r1580, %r4;
	// inline asm
	ld.local.u32 	%r1583, [%rd8];
	ld.local.u32 	%r1584, [%rd7+12];
	// inline asm
	prmt.b32 %r9182, %r1583, %r1584, %r4;
	// inline asm
	ld.local.u32 	%r1587, [%rd7+12];
	ld.local.u32 	%r1588, [%rd7+8];
	// inline asm
	prmt.b32 %r9175, %r1587, %r1588, %r4;
	// inline asm
	ld.local.u32 	%r1591, [%rd7+8];
	ld.local.u32 	%r1592, [%rd7+4];
	// inline asm
	prmt.b32 %r9176, %r1591, %r1592, %r4;
	// inline asm
	ld.local.u32 	%r1595, [%rd7+4];
	ld.local.u32 	%r1596, [%rd7];
	// inline asm
	prmt.b32 %r9177, %r1595, %r1596, %r4;
	// inline asm
	ld.local.u32 	%r1599, [%rd7];
	ld.local.u32 	%r1600, [%rd6+12];
	// inline asm
	prmt.b32 %r9178, %r1599, %r1600, %r4;
	// inline asm
	ld.local.u32 	%r1603, [%rd6+12];
	ld.local.u32 	%r1604, [%rd6+8];
	// inline asm
	prmt.b32 %r9171, %r1603, %r1604, %r4;
	// inline asm
	ld.local.u32 	%r1607, [%rd6+8];
	ld.local.u32 	%r1608, [%rd6+4];
	// inline asm
	prmt.b32 %r9172, %r1607, %r1608, %r4;
	// inline asm
	ld.local.u32 	%r1611, [%rd6+4];
	ld.local.u32 	%r1612, [%rd6];
	// inline asm
	prmt.b32 %r9173, %r1611, %r1612, %r4;
	// inline asm
	ld.local.u32 	%r1615, [%rd6];
	ld.local.u32 	%r1616, [%rd5+12];
	// inline asm
	prmt.b32 %r9174, %r1615, %r1616, %r4;
	// inline asm
	ld.local.u32 	%r1619, [%rd5+12];
	ld.local.u32 	%r1620, [%rd5+8];
	// inline asm
	prmt.b32 %r9167, %r1619, %r1620, %r4;
	// inline asm
	ld.local.u32 	%r1623, [%rd5+8];
	ld.local.u32 	%r1624, [%rd5+4];
	// inline asm
	prmt.b32 %r9168, %r1623, %r1624, %r4;
	// inline asm
	ld.local.u32 	%r1627, [%rd5+4];
	ld.local.u32 	%r1628, [%rd5];
	// inline asm
	prmt.b32 %r9169, %r1627, %r1628, %r4;
	// inline asm
	ld.local.u32 	%r1631, [%rd5];
	ld.local.u32 	%r1632, [%rd4+12];
	// inline asm
	prmt.b32 %r9170, %r1631, %r1632, %r4;
	// inline asm
	ld.local.u32 	%r1635, [%rd4+12];
	ld.local.u32 	%r1636, [%rd4+8];
	// inline asm
	prmt.b32 %r9163, %r1635, %r1636, %r4;
	// inline asm
	ld.local.u32 	%r1639, [%rd4+8];
	ld.local.u32 	%r1640, [%rd4+4];
	// inline asm
	prmt.b32 %r9164, %r1639, %r1640, %r4;
	// inline asm
	ld.local.u32 	%r1643, [%rd4+4];
	ld.local.u32 	%r1644, [%rd4];
	// inline asm
	prmt.b32 %r9165, %r1643, %r1644, %r4;
	// inline asm
	ld.local.u32 	%r1647, [%rd4];
	ld.local.u32 	%r1648, [%rd3+12];
	// inline asm
	prmt.b32 %r9166, %r1647, %r1648, %r4;
	// inline asm
	ld.local.u32 	%r1651, [%rd3+12];
	ld.local.u32 	%r1652, [%rd3+8];
	// inline asm
	prmt.b32 %r9159, %r1651, %r1652, %r4;
	// inline asm
	ld.local.u32 	%r1655, [%rd3+8];
	ld.local.u32 	%r1656, [%rd3+4];
	// inline asm
	prmt.b32 %r9160, %r1655, %r1656, %r4;
	// inline asm
	ld.local.u32 	%r1659, [%rd3+4];
	ld.local.u32 	%r1660, [%rd3];
	// inline asm
	prmt.b32 %r9161, %r1659, %r1660, %r4;
	// inline asm
	ld.local.u32 	%r1663, [%rd3];
	ld.local.u32 	%r1664, [%rd2+12];
	// inline asm
	prmt.b32 %r9162, %r1663, %r1664, %r4;
	// inline asm
	ld.local.u32 	%r1667, [%rd2+12];
	ld.local.u32 	%r1668, [%rd2+8];
	// inline asm
	prmt.b32 %r1666, %r1667, %r1668, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1666;
	ld.local.u32 	%r1671, [%rd2+8];
	ld.local.u32 	%r1672, [%rd2+4];
	// inline asm
	prmt.b32 %r1670, %r1671, %r1672, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1670;
	ld.local.u32 	%r1675, [%rd2+4];
	ld.local.u32 	%r1676, [%rd2];
	// inline asm
	prmt.b32 %r1674, %r1675, %r1676, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1674;
	ld.local.u32 	%r1679, [%rd2];
	ld.local.u32 	%r1680, [%rd1+12];
	// inline asm
	prmt.b32 %r1678, %r1679, %r1680, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1678;
	ld.local.u32 	%r1683, [%rd1+12];
	ld.local.u32 	%r1684, [%rd1+8];
	// inline asm
	prmt.b32 %r1682, %r1683, %r1684, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r1682;
	ld.local.u32 	%r1687, [%rd1+8];
	ld.local.u32 	%r1688, [%rd1+4];
	// inline asm
	prmt.b32 %r1686, %r1687, %r1688, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r1686;
	ld.local.u32 	%r1691, [%rd1+4];
	ld.local.u32 	%r1692, [%rd1];
	// inline asm
	prmt.b32 %r1690, %r1691, %r1692, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r1690;
	ld.local.u32 	%r1695, [%rd1];
	// inline asm
	prmt.b32 %r1694, %r1695, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r1694;
	st.local.u32 	[%rd6+12], %r9158;
	st.local.u32 	[%rd6+8], %r9158;
	st.local.u32 	[%rd6+4], %r9158;
	st.local.u32 	[%rd6], %r9158;
	st.local.u32 	[%rd5+12], %r9158;
	st.local.u32 	[%rd5+8], %r9158;
	st.local.u32 	[%rd5+4], %r9158;
	st.local.u32 	[%rd5], %r9158;
	st.local.u32 	[%rd4+12], %r9158;
	st.local.u32 	[%rd4+8], %r9158;
	st.local.u32 	[%rd4+4], %r9158;
	st.local.u32 	[%rd4], %r9158;
	st.local.u32 	[%rd3+12], %r9158;
	st.local.u32 	[%rd3+8], %r9158;
	st.local.u32 	[%rd3+4], %r9158;
	st.local.u32 	[%rd3], %r9158;
	st.local.u32 	[%rd2+12], %r9158;
	st.local.u32 	[%rd2+8], %r9158;
	st.local.u32 	[%rd2+4], %r9158;
	st.local.u32 	[%rd2], %r9158;
	st.local.u32 	[%rd1+12], %r9158;
	st.local.u32 	[%rd1+8], %r9158;
	mov.u64 	%rd186, 0;
	st.local.u32 	[%rd1+4], %rd186;
	st.local.u32 	[%rd1], %rd186;
	mov.u32 	%r9183, %r9158;
	mov.u32 	%r9184, %r9158;
	mov.u32 	%r9185, %r9158;
	bra.uni 	BB0_85;

BB0_103:
	setp.gt.s32	%p88, %r3, 5;
	@%p88 bra 	BB0_107;

	setp.eq.s32	%p91, %r3, 4;
	@%p91 bra 	BB0_169;
	bra.uni 	BB0_105;

BB0_169:
	ld.local.u32 	%r7746, [%rd7+12];
	ld.local.u32 	%r7747, [%rd7+8];
	// inline asm
	prmt.b32 %r7745, %r7746, %r7747, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7745;
	ld.local.u32 	%r7750, [%rd7+8];
	ld.local.u32 	%r7751, [%rd7+4];
	// inline asm
	prmt.b32 %r7749, %r7750, %r7751, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7749;
	ld.local.u32 	%r7754, [%rd7+4];
	ld.local.u32 	%r7755, [%rd7];
	// inline asm
	prmt.b32 %r7753, %r7754, %r7755, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7753;
	ld.local.u32 	%r7758, [%rd7];
	ld.local.u32 	%r7759, [%rd6+12];
	// inline asm
	prmt.b32 %r7757, %r7758, %r7759, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7757;
	ld.local.u32 	%r7762, [%rd6+12];
	ld.local.u32 	%r7763, [%rd6+8];
	// inline asm
	prmt.b32 %r7761, %r7762, %r7763, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7761;
	ld.local.u32 	%r7766, [%rd6+8];
	ld.local.u32 	%r7767, [%rd6+4];
	// inline asm
	prmt.b32 %r7765, %r7766, %r7767, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7765;
	ld.local.u32 	%r7770, [%rd6+4];
	ld.local.u32 	%r7771, [%rd6];
	// inline asm
	prmt.b32 %r7769, %r7770, %r7771, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7769;
	ld.local.u32 	%r7774, [%rd6];
	ld.local.u32 	%r7775, [%rd5+12];
	// inline asm
	prmt.b32 %r7773, %r7774, %r7775, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7773;
	ld.local.u32 	%r7778, [%rd5+12];
	ld.local.u32 	%r7779, [%rd5+8];
	// inline asm
	prmt.b32 %r7777, %r7778, %r7779, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7777;
	ld.local.u32 	%r7782, [%rd5+8];
	ld.local.u32 	%r7783, [%rd5+4];
	// inline asm
	prmt.b32 %r7781, %r7782, %r7783, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7781;
	ld.local.u32 	%r7786, [%rd5+4];
	ld.local.u32 	%r7787, [%rd5];
	// inline asm
	prmt.b32 %r7785, %r7786, %r7787, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7785;
	ld.local.u32 	%r7790, [%rd5];
	ld.local.u32 	%r7791, [%rd4+12];
	// inline asm
	prmt.b32 %r7789, %r7790, %r7791, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7789;
	ld.local.u32 	%r7794, [%rd4+12];
	ld.local.u32 	%r7795, [%rd4+8];
	// inline asm
	prmt.b32 %r7793, %r7794, %r7795, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7793;
	ld.local.u32 	%r7798, [%rd4+8];
	ld.local.u32 	%r7799, [%rd4+4];
	// inline asm
	prmt.b32 %r7797, %r7798, %r7799, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7797;
	ld.local.u32 	%r7802, [%rd4+4];
	ld.local.u32 	%r7803, [%rd4];
	// inline asm
	prmt.b32 %r7801, %r7802, %r7803, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7801;
	ld.local.u32 	%r7806, [%rd4];
	ld.local.u32 	%r7807, [%rd3+12];
	// inline asm
	prmt.b32 %r7805, %r7806, %r7807, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7805;
	ld.local.u32 	%r7810, [%rd3+12];
	ld.local.u32 	%r7811, [%rd3+8];
	// inline asm
	prmt.b32 %r7809, %r7810, %r7811, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7809;
	ld.local.u32 	%r7814, [%rd3+8];
	ld.local.u32 	%r7815, [%rd3+4];
	// inline asm
	prmt.b32 %r7813, %r7814, %r7815, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7813;
	ld.local.u32 	%r7818, [%rd3+4];
	ld.local.u32 	%r7819, [%rd3];
	// inline asm
	prmt.b32 %r7817, %r7818, %r7819, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7817;
	ld.local.u32 	%r7822, [%rd3];
	ld.local.u32 	%r7823, [%rd2+12];
	// inline asm
	prmt.b32 %r7821, %r7822, %r7823, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7821;
	ld.local.u32 	%r7826, [%rd2+12];
	ld.local.u32 	%r7827, [%rd2+8];
	// inline asm
	prmt.b32 %r7825, %r7826, %r7827, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7825;
	ld.local.u32 	%r7830, [%rd2+8];
	ld.local.u32 	%r7831, [%rd2+4];
	// inline asm
	prmt.b32 %r7829, %r7830, %r7831, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7829;
	ld.local.u32 	%r7834, [%rd2+4];
	ld.local.u32 	%r7835, [%rd2];
	// inline asm
	prmt.b32 %r7833, %r7834, %r7835, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r7833;
	ld.local.u32 	%r7838, [%rd2];
	ld.local.u32 	%r7839, [%rd1+12];
	// inline asm
	prmt.b32 %r7837, %r7838, %r7839, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r7837;
	ld.local.u32 	%r7842, [%rd1+12];
	ld.local.u32 	%r7843, [%rd1+8];
	// inline asm
	prmt.b32 %r7841, %r7842, %r7843, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r7841;
	ld.local.u32 	%r7846, [%rd1+8];
	ld.local.u32 	%r7847, [%rd1+4];
	// inline asm
	prmt.b32 %r7845, %r7846, %r7847, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r7845;
	ld.local.u32 	%r7850, [%rd1+4];
	ld.local.u32 	%r7851, [%rd1];
	// inline asm
	prmt.b32 %r7849, %r7850, %r7851, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r7849;
	ld.local.u32 	%r7854, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r7853, %r7854, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r7853;
	st.local.u32 	[%rd1+12], %r9192;
	st.local.u32 	[%rd1+8], %r9192;
	mov.u64 	%rd1254, 0;
	st.local.u32 	[%rd1+4], %rd1254;
	st.local.u32 	[%rd1], %rd1254;
	bra.uni 	BB0_173;

BB0_13:
	setp.gt.s32	%p40, %r3, 5;
	@%p40 bra 	BB0_17;

	setp.eq.s32	%p43, %r3, 4;
	@%p43 bra 	BB0_79;
	bra.uni 	BB0_15;

BB0_79:
	ld.local.u32 	%r4558, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9166, %r9158, %r4558, %r4;
	// inline asm
	ld.local.u32 	%r4561, [%rd8+12];
	ld.local.u32 	%r4562, [%rd8+8];
	// inline asm
	prmt.b32 %r9159, %r4561, %r4562, %r4;
	// inline asm
	ld.local.u32 	%r4565, [%rd8+8];
	ld.local.u32 	%r4566, [%rd8+4];
	// inline asm
	prmt.b32 %r9160, %r4565, %r4566, %r4;
	// inline asm
	ld.local.u32 	%r4569, [%rd8+4];
	ld.local.u32 	%r4570, [%rd8];
	// inline asm
	prmt.b32 %r9161, %r4569, %r4570, %r4;
	// inline asm
	ld.local.u32 	%r4573, [%rd8];
	ld.local.u32 	%r4574, [%rd7+12];
	// inline asm
	prmt.b32 %r9162, %r4573, %r4574, %r4;
	// inline asm
	ld.local.u32 	%r4577, [%rd7+12];
	ld.local.u32 	%r4578, [%rd7+8];
	// inline asm
	prmt.b32 %r4576, %r4577, %r4578, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r4576;
	ld.local.u32 	%r4581, [%rd7+8];
	ld.local.u32 	%r4582, [%rd7+4];
	// inline asm
	prmt.b32 %r4580, %r4581, %r4582, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r4580;
	ld.local.u32 	%r4585, [%rd7+4];
	ld.local.u32 	%r4586, [%rd7];
	// inline asm
	prmt.b32 %r4584, %r4585, %r4586, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r4584;
	ld.local.u32 	%r4589, [%rd7];
	ld.local.u32 	%r4590, [%rd6+12];
	// inline asm
	prmt.b32 %r4588, %r4589, %r4590, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r4588;
	ld.local.u32 	%r4593, [%rd6+12];
	ld.local.u32 	%r4594, [%rd6+8];
	// inline asm
	prmt.b32 %r4592, %r4593, %r4594, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r4592;
	ld.local.u32 	%r4597, [%rd6+8];
	ld.local.u32 	%r4598, [%rd6+4];
	// inline asm
	prmt.b32 %r4596, %r4597, %r4598, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r4596;
	ld.local.u32 	%r4601, [%rd6+4];
	ld.local.u32 	%r4602, [%rd6];
	// inline asm
	prmt.b32 %r4600, %r4601, %r4602, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r4600;
	ld.local.u32 	%r4605, [%rd6];
	ld.local.u32 	%r4606, [%rd5+12];
	// inline asm
	prmt.b32 %r4604, %r4605, %r4606, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r4604;
	ld.local.u32 	%r4609, [%rd5+12];
	ld.local.u32 	%r4610, [%rd5+8];
	// inline asm
	prmt.b32 %r4608, %r4609, %r4610, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r4608;
	ld.local.u32 	%r4613, [%rd5+8];
	ld.local.u32 	%r4614, [%rd5+4];
	// inline asm
	prmt.b32 %r4612, %r4613, %r4614, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r4612;
	ld.local.u32 	%r4617, [%rd5+4];
	ld.local.u32 	%r4618, [%rd5];
	// inline asm
	prmt.b32 %r4616, %r4617, %r4618, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4616;
	ld.local.u32 	%r4621, [%rd5];
	ld.local.u32 	%r4622, [%rd4+12];
	// inline asm
	prmt.b32 %r4620, %r4621, %r4622, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4620;
	ld.local.u32 	%r4625, [%rd4+12];
	ld.local.u32 	%r4626, [%rd4+8];
	// inline asm
	prmt.b32 %r4624, %r4625, %r4626, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4624;
	ld.local.u32 	%r4629, [%rd4+8];
	ld.local.u32 	%r4630, [%rd4+4];
	// inline asm
	prmt.b32 %r4628, %r4629, %r4630, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4628;
	ld.local.u32 	%r4633, [%rd4+4];
	ld.local.u32 	%r4634, [%rd4];
	// inline asm
	prmt.b32 %r4632, %r4633, %r4634, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4632;
	ld.local.u32 	%r4637, [%rd4];
	ld.local.u32 	%r4638, [%rd3+12];
	// inline asm
	prmt.b32 %r4636, %r4637, %r4638, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4636;
	ld.local.u32 	%r4641, [%rd3+12];
	ld.local.u32 	%r4642, [%rd3+8];
	// inline asm
	prmt.b32 %r4640, %r4641, %r4642, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4640;
	ld.local.u32 	%r4645, [%rd3+8];
	ld.local.u32 	%r4646, [%rd3+4];
	// inline asm
	prmt.b32 %r4644, %r4645, %r4646, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4644;
	ld.local.u32 	%r4649, [%rd3+4];
	ld.local.u32 	%r4650, [%rd3];
	// inline asm
	prmt.b32 %r4648, %r4649, %r4650, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4648;
	ld.local.u32 	%r4653, [%rd3];
	ld.local.u32 	%r4654, [%rd2+12];
	// inline asm
	prmt.b32 %r4652, %r4653, %r4654, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4652;
	ld.local.u32 	%r4657, [%rd2+12];
	ld.local.u32 	%r4658, [%rd2+8];
	// inline asm
	prmt.b32 %r4656, %r4657, %r4658, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4656;
	ld.local.u32 	%r4661, [%rd2+8];
	ld.local.u32 	%r4662, [%rd2+4];
	// inline asm
	prmt.b32 %r4660, %r4661, %r4662, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4660;
	ld.local.u32 	%r4665, [%rd2+4];
	ld.local.u32 	%r4666, [%rd2];
	// inline asm
	prmt.b32 %r4664, %r4665, %r4666, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4664;
	ld.local.u32 	%r4669, [%rd2];
	ld.local.u32 	%r4670, [%rd1+12];
	// inline asm
	prmt.b32 %r4668, %r4669, %r4670, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4668;
	ld.local.u32 	%r4673, [%rd1+12];
	ld.local.u32 	%r4674, [%rd1+8];
	// inline asm
	prmt.b32 %r4672, %r4673, %r4674, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r4672;
	ld.local.u32 	%r4677, [%rd1+8];
	ld.local.u32 	%r4678, [%rd1+4];
	// inline asm
	prmt.b32 %r4676, %r4677, %r4678, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r4676;
	ld.local.u32 	%r4681, [%rd1+4];
	ld.local.u32 	%r4682, [%rd1];
	// inline asm
	prmt.b32 %r4680, %r4681, %r4682, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r4680;
	ld.local.u32 	%r4685, [%rd1];
	// inline asm
	prmt.b32 %r4684, %r4685, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r4684;
	st.local.u32 	[%rd1+12], %r9158;
	st.local.u32 	[%rd1+8], %r9158;
	mov.u64 	%rd206, 0;
	st.local.u32 	[%rd1+4], %rd206;
	st.local.u32 	[%rd1], %rd206;
	mov.u32 	%r9163, %r9158;
	mov.u32 	%r9164, %r9158;
	mov.u32 	%r9165, %r9158;
	bra.uni 	BB0_80;

BB0_134:
	setp.gt.s32	%p65, %r3, 21;
	@%p65 bra 	BB0_138;

	setp.eq.s32	%p68, %r3, 20;
	@%p68 bra 	BB0_161;
	bra.uni 	BB0_136;

BB0_161:
	ld.local.u32 	%r6482, [%rd3+12];
	ld.local.u32 	%r6483, [%rd3+8];
	// inline asm
	prmt.b32 %r6481, %r6482, %r6483, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6481;
	ld.local.u32 	%r6486, [%rd3+8];
	ld.local.u32 	%r6487, [%rd3+4];
	// inline asm
	prmt.b32 %r6485, %r6486, %r6487, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6485;
	ld.local.u32 	%r6490, [%rd3+4];
	ld.local.u32 	%r6491, [%rd3];
	// inline asm
	prmt.b32 %r6489, %r6490, %r6491, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6489;
	ld.local.u32 	%r6494, [%rd3];
	ld.local.u32 	%r6495, [%rd2+12];
	// inline asm
	prmt.b32 %r6493, %r6494, %r6495, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6493;
	ld.local.u32 	%r6498, [%rd2+12];
	ld.local.u32 	%r6499, [%rd2+8];
	// inline asm
	prmt.b32 %r6497, %r6498, %r6499, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6497;
	ld.local.u32 	%r6502, [%rd2+8];
	ld.local.u32 	%r6503, [%rd2+4];
	// inline asm
	prmt.b32 %r6501, %r6502, %r6503, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6501;
	ld.local.u32 	%r6506, [%rd2+4];
	ld.local.u32 	%r6507, [%rd2];
	// inline asm
	prmt.b32 %r6505, %r6506, %r6507, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6505;
	ld.local.u32 	%r6510, [%rd2];
	ld.local.u32 	%r6511, [%rd1+12];
	// inline asm
	prmt.b32 %r6509, %r6510, %r6511, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6509;
	ld.local.u32 	%r6514, [%rd1+12];
	ld.local.u32 	%r6515, [%rd1+8];
	// inline asm
	prmt.b32 %r6513, %r6514, %r6515, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6513;
	ld.local.u32 	%r6518, [%rd1+8];
	ld.local.u32 	%r6519, [%rd1+4];
	// inline asm
	prmt.b32 %r6517, %r6518, %r6519, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6517;
	ld.local.u32 	%r6522, [%rd1+4];
	ld.local.u32 	%r6523, [%rd1];
	// inline asm
	prmt.b32 %r6521, %r6522, %r6523, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6521;
	ld.local.u32 	%r6526, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r6525, %r6526, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6525;
	st.local.u32 	[%rd5+12], %r9192;
	st.local.u32 	[%rd5+8], %r9192;
	st.local.u32 	[%rd5+4], %r9192;
	st.local.u32 	[%rd5], %r9192;
	st.local.u32 	[%rd4+12], %r9192;
	st.local.u32 	[%rd4+8], %r9192;
	st.local.u32 	[%rd4+4], %r9192;
	st.local.u32 	[%rd4], %r9192;
	st.local.u32 	[%rd3+12], %r9192;
	st.local.u32 	[%rd3+8], %r9192;
	st.local.u32 	[%rd3+4], %r9192;
	st.local.u32 	[%rd3], %r9192;
	st.local.u32 	[%rd2+12], %r9192;
	st.local.u32 	[%rd2+8], %r9192;
	st.local.u32 	[%rd2+4], %r9192;
	st.local.u32 	[%rd2], %r9192;
	st.local.u32 	[%rd1+12], %r9192;
	st.local.u32 	[%rd1+8], %r9192;
	mov.u64 	%rd1238, 0;
	st.local.u32 	[%rd1+4], %rd1238;
	st.local.u32 	[%rd1], %rd1238;
	bra.uni 	BB0_173;

BB0_44:
	setp.gt.s32	%p17, %r3, 21;
	@%p17 bra 	BB0_48;

	setp.eq.s32	%p20, %r3, 20;
	@%p20 bra 	BB0_71;
	bra.uni 	BB0_46;

BB0_71:
	ld.local.u32 	%r2134, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9182, %r9158, %r2134, %r4;
	// inline asm
	ld.local.u32 	%r2137, [%rd8+12];
	ld.local.u32 	%r2138, [%rd8+8];
	// inline asm
	prmt.b32 %r9175, %r2137, %r2138, %r4;
	// inline asm
	ld.local.u32 	%r2141, [%rd8+8];
	ld.local.u32 	%r2142, [%rd8+4];
	// inline asm
	prmt.b32 %r9176, %r2141, %r2142, %r4;
	// inline asm
	ld.local.u32 	%r2145, [%rd8+4];
	ld.local.u32 	%r2146, [%rd8];
	// inline asm
	prmt.b32 %r9177, %r2145, %r2146, %r4;
	// inline asm
	ld.local.u32 	%r2149, [%rd8];
	ld.local.u32 	%r2150, [%rd7+12];
	// inline asm
	prmt.b32 %r9178, %r2149, %r2150, %r4;
	// inline asm
	ld.local.u32 	%r2153, [%rd7+12];
	ld.local.u32 	%r2154, [%rd7+8];
	// inline asm
	prmt.b32 %r9171, %r2153, %r2154, %r4;
	// inline asm
	ld.local.u32 	%r2157, [%rd7+8];
	ld.local.u32 	%r2158, [%rd7+4];
	// inline asm
	prmt.b32 %r9172, %r2157, %r2158, %r4;
	// inline asm
	ld.local.u32 	%r2161, [%rd7+4];
	ld.local.u32 	%r2162, [%rd7];
	// inline asm
	prmt.b32 %r9173, %r2161, %r2162, %r4;
	// inline asm
	ld.local.u32 	%r2165, [%rd7];
	ld.local.u32 	%r2166, [%rd6+12];
	// inline asm
	prmt.b32 %r9174, %r2165, %r2166, %r4;
	// inline asm
	ld.local.u32 	%r2169, [%rd6+12];
	ld.local.u32 	%r2170, [%rd6+8];
	// inline asm
	prmt.b32 %r9167, %r2169, %r2170, %r4;
	// inline asm
	ld.local.u32 	%r2173, [%rd6+8];
	ld.local.u32 	%r2174, [%rd6+4];
	// inline asm
	prmt.b32 %r9168, %r2173, %r2174, %r4;
	// inline asm
	ld.local.u32 	%r2177, [%rd6+4];
	ld.local.u32 	%r2178, [%rd6];
	// inline asm
	prmt.b32 %r9169, %r2177, %r2178, %r4;
	// inline asm
	ld.local.u32 	%r2181, [%rd6];
	ld.local.u32 	%r2182, [%rd5+12];
	// inline asm
	prmt.b32 %r9170, %r2181, %r2182, %r4;
	// inline asm
	ld.local.u32 	%r2185, [%rd5+12];
	ld.local.u32 	%r2186, [%rd5+8];
	// inline asm
	prmt.b32 %r9163, %r2185, %r2186, %r4;
	// inline asm
	ld.local.u32 	%r2189, [%rd5+8];
	ld.local.u32 	%r2190, [%rd5+4];
	// inline asm
	prmt.b32 %r9164, %r2189, %r2190, %r4;
	// inline asm
	ld.local.u32 	%r2193, [%rd5+4];
	ld.local.u32 	%r2194, [%rd5];
	// inline asm
	prmt.b32 %r9165, %r2193, %r2194, %r4;
	// inline asm
	ld.local.u32 	%r2197, [%rd5];
	ld.local.u32 	%r2198, [%rd4+12];
	// inline asm
	prmt.b32 %r9166, %r2197, %r2198, %r4;
	// inline asm
	ld.local.u32 	%r2201, [%rd4+12];
	ld.local.u32 	%r2202, [%rd4+8];
	// inline asm
	prmt.b32 %r9159, %r2201, %r2202, %r4;
	// inline asm
	ld.local.u32 	%r2205, [%rd4+8];
	ld.local.u32 	%r2206, [%rd4+4];
	// inline asm
	prmt.b32 %r9160, %r2205, %r2206, %r4;
	// inline asm
	ld.local.u32 	%r2209, [%rd4+4];
	ld.local.u32 	%r2210, [%rd4];
	// inline asm
	prmt.b32 %r9161, %r2209, %r2210, %r4;
	// inline asm
	ld.local.u32 	%r2213, [%rd4];
	ld.local.u32 	%r2214, [%rd3+12];
	// inline asm
	prmt.b32 %r9162, %r2213, %r2214, %r4;
	// inline asm
	ld.local.u32 	%r2217, [%rd3+12];
	ld.local.u32 	%r2218, [%rd3+8];
	// inline asm
	prmt.b32 %r2216, %r2217, %r2218, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2216;
	ld.local.u32 	%r2221, [%rd3+8];
	ld.local.u32 	%r2222, [%rd3+4];
	// inline asm
	prmt.b32 %r2220, %r2221, %r2222, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2220;
	ld.local.u32 	%r2225, [%rd3+4];
	ld.local.u32 	%r2226, [%rd3];
	// inline asm
	prmt.b32 %r2224, %r2225, %r2226, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2224;
	ld.local.u32 	%r2229, [%rd3];
	ld.local.u32 	%r2230, [%rd2+12];
	// inline asm
	prmt.b32 %r2228, %r2229, %r2230, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2228;
	ld.local.u32 	%r2233, [%rd2+12];
	ld.local.u32 	%r2234, [%rd2+8];
	// inline asm
	prmt.b32 %r2232, %r2233, %r2234, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2232;
	ld.local.u32 	%r2237, [%rd2+8];
	ld.local.u32 	%r2238, [%rd2+4];
	// inline asm
	prmt.b32 %r2236, %r2237, %r2238, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2236;
	ld.local.u32 	%r2241, [%rd2+4];
	ld.local.u32 	%r2242, [%rd2];
	// inline asm
	prmt.b32 %r2240, %r2241, %r2242, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2240;
	ld.local.u32 	%r2245, [%rd2];
	ld.local.u32 	%r2246, [%rd1+12];
	// inline asm
	prmt.b32 %r2244, %r2245, %r2246, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2244;
	ld.local.u32 	%r2249, [%rd1+12];
	ld.local.u32 	%r2250, [%rd1+8];
	// inline asm
	prmt.b32 %r2248, %r2249, %r2250, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2248;
	ld.local.u32 	%r2253, [%rd1+8];
	ld.local.u32 	%r2254, [%rd1+4];
	// inline asm
	prmt.b32 %r2252, %r2253, %r2254, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2252;
	ld.local.u32 	%r2257, [%rd1+4];
	ld.local.u32 	%r2258, [%rd1];
	// inline asm
	prmt.b32 %r2256, %r2257, %r2258, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2256;
	ld.local.u32 	%r2261, [%rd1];
	// inline asm
	prmt.b32 %r2260, %r2261, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r2260;
	st.local.u32 	[%rd5+12], %r9158;
	st.local.u32 	[%rd5+8], %r9158;
	st.local.u32 	[%rd5+4], %r9158;
	st.local.u32 	[%rd5], %r9158;
	st.local.u32 	[%rd4+12], %r9158;
	st.local.u32 	[%rd4+8], %r9158;
	st.local.u32 	[%rd4+4], %r9158;
	st.local.u32 	[%rd4], %r9158;
	st.local.u32 	[%rd3+12], %r9158;
	st.local.u32 	[%rd3+8], %r9158;
	st.local.u32 	[%rd3+4], %r9158;
	st.local.u32 	[%rd3], %r9158;
	st.local.u32 	[%rd2+12], %r9158;
	st.local.u32 	[%rd2+8], %r9158;
	st.local.u32 	[%rd2+4], %r9158;
	st.local.u32 	[%rd2], %r9158;
	st.local.u32 	[%rd1+12], %r9158;
	st.local.u32 	[%rd1+8], %r9158;
	mov.u64 	%rd190, 0;
	st.local.u32 	[%rd1+4], %rd190;
	st.local.u32 	[%rd1], %rd190;
	mov.u32 	%r9179, %r9158;
	mov.u32 	%r9180, %r9158;
	mov.u32 	%r9181, %r9158;
	bra.uni 	BB0_84;

BB0_118:
	setp.gt.s32	%p77, %r3, 13;
	@%p77 bra 	BB0_122;

	setp.eq.s32	%p80, %r3, 12;
	@%p80 bra 	BB0_165;
	bra.uni 	BB0_120;

BB0_165:
	ld.local.u32 	%r6986, [%rd5+12];
	ld.local.u32 	%r6987, [%rd5+8];
	// inline asm
	prmt.b32 %r6985, %r6986, %r6987, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6985;
	ld.local.u32 	%r6990, [%rd5+8];
	ld.local.u32 	%r6991, [%rd5+4];
	// inline asm
	prmt.b32 %r6989, %r6990, %r6991, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6989;
	ld.local.u32 	%r6994, [%rd5+4];
	ld.local.u32 	%r6995, [%rd5];
	// inline asm
	prmt.b32 %r6993, %r6994, %r6995, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6993;
	ld.local.u32 	%r6998, [%rd5];
	ld.local.u32 	%r6999, [%rd4+12];
	// inline asm
	prmt.b32 %r6997, %r6998, %r6999, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6997;
	ld.local.u32 	%r7002, [%rd4+12];
	ld.local.u32 	%r7003, [%rd4+8];
	// inline asm
	prmt.b32 %r7001, %r7002, %r7003, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7001;
	ld.local.u32 	%r7006, [%rd4+8];
	ld.local.u32 	%r7007, [%rd4+4];
	// inline asm
	prmt.b32 %r7005, %r7006, %r7007, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7005;
	ld.local.u32 	%r7010, [%rd4+4];
	ld.local.u32 	%r7011, [%rd4];
	// inline asm
	prmt.b32 %r7009, %r7010, %r7011, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7009;
	ld.local.u32 	%r7014, [%rd4];
	ld.local.u32 	%r7015, [%rd3+12];
	// inline asm
	prmt.b32 %r7013, %r7014, %r7015, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7013;
	ld.local.u32 	%r7018, [%rd3+12];
	ld.local.u32 	%r7019, [%rd3+8];
	// inline asm
	prmt.b32 %r7017, %r7018, %r7019, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7017;
	ld.local.u32 	%r7022, [%rd3+8];
	ld.local.u32 	%r7023, [%rd3+4];
	// inline asm
	prmt.b32 %r7021, %r7022, %r7023, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7021;
	ld.local.u32 	%r7026, [%rd3+4];
	ld.local.u32 	%r7027, [%rd3];
	// inline asm
	prmt.b32 %r7025, %r7026, %r7027, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7025;
	ld.local.u32 	%r7030, [%rd3];
	ld.local.u32 	%r7031, [%rd2+12];
	// inline asm
	prmt.b32 %r7029, %r7030, %r7031, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7029;
	ld.local.u32 	%r7034, [%rd2+12];
	ld.local.u32 	%r7035, [%rd2+8];
	// inline asm
	prmt.b32 %r7033, %r7034, %r7035, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7033;
	ld.local.u32 	%r7038, [%rd2+8];
	ld.local.u32 	%r7039, [%rd2+4];
	// inline asm
	prmt.b32 %r7037, %r7038, %r7039, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7037;
	ld.local.u32 	%r7042, [%rd2+4];
	ld.local.u32 	%r7043, [%rd2];
	// inline asm
	prmt.b32 %r7041, %r7042, %r7043, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7041;
	ld.local.u32 	%r7046, [%rd2];
	ld.local.u32 	%r7047, [%rd1+12];
	// inline asm
	prmt.b32 %r7045, %r7046, %r7047, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7045;
	ld.local.u32 	%r7050, [%rd1+12];
	ld.local.u32 	%r7051, [%rd1+8];
	// inline asm
	prmt.b32 %r7049, %r7050, %r7051, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7049;
	ld.local.u32 	%r7054, [%rd1+8];
	ld.local.u32 	%r7055, [%rd1+4];
	// inline asm
	prmt.b32 %r7053, %r7054, %r7055, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7053;
	ld.local.u32 	%r7058, [%rd1+4];
	ld.local.u32 	%r7059, [%rd1];
	// inline asm
	prmt.b32 %r7057, %r7058, %r7059, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7057;
	ld.local.u32 	%r7062, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r7061, %r7062, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7061;
	st.local.u32 	[%rd3+12], %r9192;
	st.local.u32 	[%rd3+8], %r9192;
	st.local.u32 	[%rd3+4], %r9192;
	st.local.u32 	[%rd3], %r9192;
	st.local.u32 	[%rd2+12], %r9192;
	st.local.u32 	[%rd2+8], %r9192;
	st.local.u32 	[%rd2+4], %r9192;
	st.local.u32 	[%rd2], %r9192;
	st.local.u32 	[%rd1+12], %r9192;
	st.local.u32 	[%rd1+8], %r9192;
	mov.u64 	%rd1246, 0;
	st.local.u32 	[%rd1+4], %rd1246;
	st.local.u32 	[%rd1], %rd1246;
	bra.uni 	BB0_173;

BB0_28:
	setp.gt.s32	%p29, %r3, 13;
	@%p29 bra 	BB0_32;

	setp.eq.s32	%p32, %r3, 12;
	@%p32 bra 	BB0_75;
	bra.uni 	BB0_30;

BB0_75:
	ld.local.u32 	%r3314, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9174, %r9158, %r3314, %r4;
	// inline asm
	ld.local.u32 	%r3317, [%rd8+12];
	ld.local.u32 	%r3318, [%rd8+8];
	// inline asm
	prmt.b32 %r9167, %r3317, %r3318, %r4;
	// inline asm
	ld.local.u32 	%r3321, [%rd8+8];
	ld.local.u32 	%r3322, [%rd8+4];
	// inline asm
	prmt.b32 %r9168, %r3321, %r3322, %r4;
	// inline asm
	ld.local.u32 	%r3325, [%rd8+4];
	ld.local.u32 	%r3326, [%rd8];
	// inline asm
	prmt.b32 %r9169, %r3325, %r3326, %r4;
	// inline asm
	ld.local.u32 	%r3329, [%rd8];
	ld.local.u32 	%r3330, [%rd7+12];
	// inline asm
	prmt.b32 %r9170, %r3329, %r3330, %r4;
	// inline asm
	ld.local.u32 	%r3333, [%rd7+12];
	ld.local.u32 	%r3334, [%rd7+8];
	// inline asm
	prmt.b32 %r9163, %r3333, %r3334, %r4;
	// inline asm
	ld.local.u32 	%r3337, [%rd7+8];
	ld.local.u32 	%r3338, [%rd7+4];
	// inline asm
	prmt.b32 %r9164, %r3337, %r3338, %r4;
	// inline asm
	ld.local.u32 	%r3341, [%rd7+4];
	ld.local.u32 	%r3342, [%rd7];
	// inline asm
	prmt.b32 %r9165, %r3341, %r3342, %r4;
	// inline asm
	ld.local.u32 	%r3345, [%rd7];
	ld.local.u32 	%r3346, [%rd6+12];
	// inline asm
	prmt.b32 %r9166, %r3345, %r3346, %r4;
	// inline asm
	ld.local.u32 	%r3349, [%rd6+12];
	ld.local.u32 	%r3350, [%rd6+8];
	// inline asm
	prmt.b32 %r9159, %r3349, %r3350, %r4;
	// inline asm
	ld.local.u32 	%r3353, [%rd6+8];
	ld.local.u32 	%r3354, [%rd6+4];
	// inline asm
	prmt.b32 %r9160, %r3353, %r3354, %r4;
	// inline asm
	ld.local.u32 	%r3357, [%rd6+4];
	ld.local.u32 	%r3358, [%rd6];
	// inline asm
	prmt.b32 %r9161, %r3357, %r3358, %r4;
	// inline asm
	ld.local.u32 	%r3361, [%rd6];
	ld.local.u32 	%r3362, [%rd5+12];
	// inline asm
	prmt.b32 %r9162, %r3361, %r3362, %r4;
	// inline asm
	ld.local.u32 	%r3365, [%rd5+12];
	ld.local.u32 	%r3366, [%rd5+8];
	// inline asm
	prmt.b32 %r3364, %r3365, %r3366, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3364;
	ld.local.u32 	%r3369, [%rd5+8];
	ld.local.u32 	%r3370, [%rd5+4];
	// inline asm
	prmt.b32 %r3368, %r3369, %r3370, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3368;
	ld.local.u32 	%r3373, [%rd5+4];
	ld.local.u32 	%r3374, [%rd5];
	// inline asm
	prmt.b32 %r3372, %r3373, %r3374, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3372;
	ld.local.u32 	%r3377, [%rd5];
	ld.local.u32 	%r3378, [%rd4+12];
	// inline asm
	prmt.b32 %r3376, %r3377, %r3378, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3376;
	ld.local.u32 	%r3381, [%rd4+12];
	ld.local.u32 	%r3382, [%rd4+8];
	// inline asm
	prmt.b32 %r3380, %r3381, %r3382, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3380;
	ld.local.u32 	%r3385, [%rd4+8];
	ld.local.u32 	%r3386, [%rd4+4];
	// inline asm
	prmt.b32 %r3384, %r3385, %r3386, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3384;
	ld.local.u32 	%r3389, [%rd4+4];
	ld.local.u32 	%r3390, [%rd4];
	// inline asm
	prmt.b32 %r3388, %r3389, %r3390, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3388;
	ld.local.u32 	%r3393, [%rd4];
	ld.local.u32 	%r3394, [%rd3+12];
	// inline asm
	prmt.b32 %r3392, %r3393, %r3394, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3392;
	ld.local.u32 	%r3397, [%rd3+12];
	ld.local.u32 	%r3398, [%rd3+8];
	// inline asm
	prmt.b32 %r3396, %r3397, %r3398, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3396;
	ld.local.u32 	%r3401, [%rd3+8];
	ld.local.u32 	%r3402, [%rd3+4];
	// inline asm
	prmt.b32 %r3400, %r3401, %r3402, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3400;
	ld.local.u32 	%r3405, [%rd3+4];
	ld.local.u32 	%r3406, [%rd3];
	// inline asm
	prmt.b32 %r3404, %r3405, %r3406, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3404;
	ld.local.u32 	%r3409, [%rd3];
	ld.local.u32 	%r3410, [%rd2+12];
	// inline asm
	prmt.b32 %r3408, %r3409, %r3410, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3408;
	ld.local.u32 	%r3413, [%rd2+12];
	ld.local.u32 	%r3414, [%rd2+8];
	// inline asm
	prmt.b32 %r3412, %r3413, %r3414, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3412;
	ld.local.u32 	%r3417, [%rd2+8];
	ld.local.u32 	%r3418, [%rd2+4];
	// inline asm
	prmt.b32 %r3416, %r3417, %r3418, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3416;
	ld.local.u32 	%r3421, [%rd2+4];
	ld.local.u32 	%r3422, [%rd2];
	// inline asm
	prmt.b32 %r3420, %r3421, %r3422, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3420;
	ld.local.u32 	%r3425, [%rd2];
	ld.local.u32 	%r3426, [%rd1+12];
	// inline asm
	prmt.b32 %r3424, %r3425, %r3426, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3424;
	ld.local.u32 	%r3429, [%rd1+12];
	ld.local.u32 	%r3430, [%rd1+8];
	// inline asm
	prmt.b32 %r3428, %r3429, %r3430, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3428;
	ld.local.u32 	%r3433, [%rd1+8];
	ld.local.u32 	%r3434, [%rd1+4];
	// inline asm
	prmt.b32 %r3432, %r3433, %r3434, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3432;
	ld.local.u32 	%r3437, [%rd1+4];
	ld.local.u32 	%r3438, [%rd1];
	// inline asm
	prmt.b32 %r3436, %r3437, %r3438, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r3436;
	ld.local.u32 	%r3441, [%rd1];
	// inline asm
	prmt.b32 %r3440, %r3441, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r3440;
	st.local.u32 	[%rd3+12], %r9158;
	st.local.u32 	[%rd3+8], %r9158;
	st.local.u32 	[%rd3+4], %r9158;
	st.local.u32 	[%rd3], %r9158;
	st.local.u32 	[%rd2+12], %r9158;
	st.local.u32 	[%rd2+8], %r9158;
	st.local.u32 	[%rd2+4], %r9158;
	st.local.u32 	[%rd2], %r9158;
	st.local.u32 	[%rd1+12], %r9158;
	st.local.u32 	[%rd1+8], %r9158;
	mov.u64 	%rd198, 0;
	st.local.u32 	[%rd1+4], %rd198;
	st.local.u32 	[%rd1], %rd198;
	mov.u32 	%r9171, %r9158;
	mov.u32 	%r9172, %r9158;
	mov.u32 	%r9173, %r9158;
	bra.uni 	BB0_82;

BB0_149:
	setp.gt.s32	%p54, %r3, 29;
	@%p54 bra 	BB0_153;

	setp.eq.s32	%p57, %r3, 28;
	@%p57 bra 	BB0_157;
	bra.uni 	BB0_151;

BB0_157:
	ld.local.u32 	%r6234, [%rd1+12];
	ld.local.u32 	%r6235, [%rd1+8];
	// inline asm
	prmt.b32 %r6233, %r6234, %r6235, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6233;
	ld.local.u32 	%r6238, [%rd1+8];
	ld.local.u32 	%r6239, [%rd1+4];
	// inline asm
	prmt.b32 %r6237, %r6238, %r6239, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6237;
	ld.local.u32 	%r6242, [%rd1+4];
	ld.local.u32 	%r6243, [%rd1];
	// inline asm
	prmt.b32 %r6241, %r6242, %r6243, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6241;
	ld.local.u32 	%r6246, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r6245, %r6246, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6245;
	st.local.u32 	[%rd7+12], %r9192;
	st.local.u32 	[%rd7+8], %r9192;
	st.local.u32 	[%rd7+4], %r9192;
	st.local.u32 	[%rd7], %r9192;
	st.local.u32 	[%rd6+12], %r9192;
	st.local.u32 	[%rd6+8], %r9192;
	st.local.u32 	[%rd6+4], %r9192;
	st.local.u32 	[%rd6], %r9192;
	st.local.u32 	[%rd5+12], %r9192;
	st.local.u32 	[%rd5+8], %r9192;
	st.local.u32 	[%rd5+4], %r9192;
	st.local.u32 	[%rd5], %r9192;
	st.local.u32 	[%rd4+12], %r9192;
	st.local.u32 	[%rd4+8], %r9192;
	st.local.u32 	[%rd4+4], %r9192;
	st.local.u32 	[%rd4], %r9192;
	st.local.u32 	[%rd3+12], %r9192;
	st.local.u32 	[%rd3+8], %r9192;
	st.local.u32 	[%rd3+4], %r9192;
	st.local.u32 	[%rd3], %r9192;
	st.local.u32 	[%rd2+12], %r9192;
	st.local.u32 	[%rd2+8], %r9192;
	st.local.u32 	[%rd2+4], %r9192;
	st.local.u32 	[%rd2], %r9192;
	st.local.u32 	[%rd1+12], %r9192;
	st.local.u32 	[%rd1+8], %r9192;
	mov.u64 	%rd1230, 0;
	st.local.u32 	[%rd1+4], %rd1230;
	st.local.u32 	[%rd1], %rd1230;
	bra.uni 	BB0_173;

BB0_59:
	setp.gt.s32	%p6, %r3, 29;
	@%p6 bra 	BB0_63;

	setp.eq.s32	%p9, %r3, 28;
	@%p9 bra 	BB0_67;
	bra.uni 	BB0_61;

BB0_67:
	ld.local.u32 	%r1018, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9190, %r9158, %r1018, %r4;
	// inline asm
	ld.local.u32 	%r1021, [%rd8+12];
	ld.local.u32 	%r1022, [%rd8+8];
	// inline asm
	prmt.b32 %r9183, %r1021, %r1022, %r4;
	// inline asm
	ld.local.u32 	%r1025, [%rd8+8];
	ld.local.u32 	%r1026, [%rd8+4];
	// inline asm
	prmt.b32 %r9184, %r1025, %r1026, %r4;
	// inline asm
	ld.local.u32 	%r1029, [%rd8+4];
	ld.local.u32 	%r1030, [%rd8];
	// inline asm
	prmt.b32 %r9185, %r1029, %r1030, %r4;
	// inline asm
	ld.local.u32 	%r1033, [%rd8];
	ld.local.u32 	%r1034, [%rd7+12];
	// inline asm
	prmt.b32 %r9186, %r1033, %r1034, %r4;
	// inline asm
	ld.local.u32 	%r1037, [%rd7+12];
	ld.local.u32 	%r1038, [%rd7+8];
	// inline asm
	prmt.b32 %r9179, %r1037, %r1038, %r4;
	// inline asm
	ld.local.u32 	%r1041, [%rd7+8];
	ld.local.u32 	%r1042, [%rd7+4];
	// inline asm
	prmt.b32 %r9180, %r1041, %r1042, %r4;
	// inline asm
	ld.local.u32 	%r1045, [%rd7+4];
	ld.local.u32 	%r1046, [%rd7];
	// inline asm
	prmt.b32 %r9181, %r1045, %r1046, %r4;
	// inline asm
	ld.local.u32 	%r1049, [%rd7];
	ld.local.u32 	%r1050, [%rd6+12];
	// inline asm
	prmt.b32 %r9182, %r1049, %r1050, %r4;
	// inline asm
	ld.local.u32 	%r1053, [%rd6+12];
	ld.local.u32 	%r1054, [%rd6+8];
	// inline asm
	prmt.b32 %r9175, %r1053, %r1054, %r4;
	// inline asm
	ld.local.u32 	%r1057, [%rd6+8];
	ld.local.u32 	%r1058, [%rd6+4];
	// inline asm
	prmt.b32 %r9176, %r1057, %r1058, %r4;
	// inline asm
	ld.local.u32 	%r1061, [%rd6+4];
	ld.local.u32 	%r1062, [%rd6];
	// inline asm
	prmt.b32 %r9177, %r1061, %r1062, %r4;
	// inline asm
	ld.local.u32 	%r1065, [%rd6];
	ld.local.u32 	%r1066, [%rd5+12];
	// inline asm
	prmt.b32 %r9178, %r1065, %r1066, %r4;
	// inline asm
	ld.local.u32 	%r1069, [%rd5+12];
	ld.local.u32 	%r1070, [%rd5+8];
	// inline asm
	prmt.b32 %r9171, %r1069, %r1070, %r4;
	// inline asm
	ld.local.u32 	%r1073, [%rd5+8];
	ld.local.u32 	%r1074, [%rd5+4];
	// inline asm
	prmt.b32 %r9172, %r1073, %r1074, %r4;
	// inline asm
	ld.local.u32 	%r1077, [%rd5+4];
	ld.local.u32 	%r1078, [%rd5];
	// inline asm
	prmt.b32 %r9173, %r1077, %r1078, %r4;
	// inline asm
	ld.local.u32 	%r1081, [%rd5];
	ld.local.u32 	%r1082, [%rd4+12];
	// inline asm
	prmt.b32 %r9174, %r1081, %r1082, %r4;
	// inline asm
	ld.local.u32 	%r1085, [%rd4+12];
	ld.local.u32 	%r1086, [%rd4+8];
	// inline asm
	prmt.b32 %r9167, %r1085, %r1086, %r4;
	// inline asm
	ld.local.u32 	%r1089, [%rd4+8];
	ld.local.u32 	%r1090, [%rd4+4];
	// inline asm
	prmt.b32 %r9168, %r1089, %r1090, %r4;
	// inline asm
	ld.local.u32 	%r1093, [%rd4+4];
	ld.local.u32 	%r1094, [%rd4];
	// inline asm
	prmt.b32 %r9169, %r1093, %r1094, %r4;
	// inline asm
	ld.local.u32 	%r1097, [%rd4];
	ld.local.u32 	%r1098, [%rd3+12];
	// inline asm
	prmt.b32 %r9170, %r1097, %r1098, %r4;
	// inline asm
	ld.local.u32 	%r1101, [%rd3+12];
	ld.local.u32 	%r1102, [%rd3+8];
	// inline asm
	prmt.b32 %r9163, %r1101, %r1102, %r4;
	// inline asm
	ld.local.u32 	%r1105, [%rd3+8];
	ld.local.u32 	%r1106, [%rd3+4];
	// inline asm
	prmt.b32 %r9164, %r1105, %r1106, %r4;
	// inline asm
	ld.local.u32 	%r1109, [%rd3+4];
	ld.local.u32 	%r1110, [%rd3];
	// inline asm
	prmt.b32 %r9165, %r1109, %r1110, %r4;
	// inline asm
	ld.local.u32 	%r1113, [%rd3];
	ld.local.u32 	%r1114, [%rd2+12];
	// inline asm
	prmt.b32 %r9166, %r1113, %r1114, %r4;
	// inline asm
	ld.local.u32 	%r1117, [%rd2+12];
	ld.local.u32 	%r1118, [%rd2+8];
	// inline asm
	prmt.b32 %r9159, %r1117, %r1118, %r4;
	// inline asm
	ld.local.u32 	%r1121, [%rd2+8];
	ld.local.u32 	%r1122, [%rd2+4];
	// inline asm
	prmt.b32 %r9160, %r1121, %r1122, %r4;
	// inline asm
	ld.local.u32 	%r1125, [%rd2+4];
	ld.local.u32 	%r1126, [%rd2];
	// inline asm
	prmt.b32 %r9161, %r1125, %r1126, %r4;
	// inline asm
	ld.local.u32 	%r1129, [%rd2];
	ld.local.u32 	%r1130, [%rd1+12];
	// inline asm
	prmt.b32 %r9162, %r1129, %r1130, %r4;
	// inline asm
	ld.local.u32 	%r1133, [%rd1+12];
	ld.local.u32 	%r1134, [%rd1+8];
	// inline asm
	prmt.b32 %r1132, %r1133, %r1134, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1132;
	ld.local.u32 	%r1137, [%rd1+8];
	ld.local.u32 	%r1138, [%rd1+4];
	// inline asm
	prmt.b32 %r1136, %r1137, %r1138, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1136;
	ld.local.u32 	%r1141, [%rd1+4];
	ld.local.u32 	%r1142, [%rd1];
	// inline asm
	prmt.b32 %r1140, %r1141, %r1142, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1140;
	ld.local.u32 	%r1145, [%rd1];
	// inline asm
	prmt.b32 %r1144, %r1145, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1144;
	st.local.u32 	[%rd7+12], %r9158;
	st.local.u32 	[%rd7+8], %r9158;
	st.local.u32 	[%rd7+4], %r9158;
	st.local.u32 	[%rd7], %r9158;
	st.local.u32 	[%rd6+12], %r9158;
	st.local.u32 	[%rd6+8], %r9158;
	st.local.u32 	[%rd6+4], %r9158;
	st.local.u32 	[%rd6], %r9158;
	st.local.u32 	[%rd5+12], %r9158;
	st.local.u32 	[%rd5+8], %r9158;
	st.local.u32 	[%rd5+4], %r9158;
	st.local.u32 	[%rd5], %r9158;
	st.local.u32 	[%rd4+12], %r9158;
	st.local.u32 	[%rd4+8], %r9158;
	st.local.u32 	[%rd4+4], %r9158;
	st.local.u32 	[%rd4], %r9158;
	st.local.u32 	[%rd3+12], %r9158;
	st.local.u32 	[%rd3+8], %r9158;
	st.local.u32 	[%rd3+4], %r9158;
	st.local.u32 	[%rd3], %r9158;
	st.local.u32 	[%rd2+12], %r9158;
	st.local.u32 	[%rd2+8], %r9158;
	st.local.u32 	[%rd2+4], %r9158;
	st.local.u32 	[%rd2], %r9158;
	st.local.u32 	[%rd1+12], %r9158;
	st.local.u32 	[%rd1+8], %r9158;
	mov.u64 	%rd182, 0;
	st.local.u32 	[%rd1+4], %rd182;
	st.local.u32 	[%rd1], %rd182;
	mov.u32 	%r9187, %r9158;
	mov.u32 	%r9188, %r9158;
	mov.u32 	%r9189, %r9158;
	bra.uni 	BB0_90;

BB0_100:
	setp.eq.s32	%p94, %r3, 2;
	@%p94 bra 	BB0_170;
	bra.uni 	BB0_101;

BB0_170:
	ld.local.u32 	%r7976, [%rd8+4];
	ld.local.u32 	%r7977, [%rd8];
	// inline asm
	prmt.b32 %r7975, %r7976, %r7977, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7975;
	ld.local.u32 	%r7980, [%rd8];
	ld.local.u32 	%r7981, [%rd7+12];
	// inline asm
	prmt.b32 %r7979, %r7980, %r7981, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7979;
	ld.local.u32 	%r7984, [%rd7+12];
	ld.local.u32 	%r7985, [%rd7+8];
	// inline asm
	prmt.b32 %r7983, %r7984, %r7985, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7983;
	ld.local.u32 	%r7988, [%rd7+8];
	ld.local.u32 	%r7989, [%rd7+4];
	// inline asm
	prmt.b32 %r7987, %r7988, %r7989, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7987;
	ld.local.u32 	%r7992, [%rd7+4];
	ld.local.u32 	%r7993, [%rd7];
	// inline asm
	prmt.b32 %r7991, %r7992, %r7993, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7991;
	ld.local.u32 	%r7996, [%rd7];
	ld.local.u32 	%r7997, [%rd6+12];
	// inline asm
	prmt.b32 %r7995, %r7996, %r7997, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7995;
	ld.local.u32 	%r8000, [%rd6+12];
	ld.local.u32 	%r8001, [%rd6+8];
	// inline asm
	prmt.b32 %r7999, %r8000, %r8001, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7999;
	ld.local.u32 	%r8004, [%rd6+8];
	ld.local.u32 	%r8005, [%rd6+4];
	// inline asm
	prmt.b32 %r8003, %r8004, %r8005, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r8003;
	ld.local.u32 	%r8008, [%rd6+4];
	ld.local.u32 	%r8009, [%rd6];
	// inline asm
	prmt.b32 %r8007, %r8008, %r8009, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r8007;
	ld.local.u32 	%r8012, [%rd6];
	ld.local.u32 	%r8013, [%rd5+12];
	// inline asm
	prmt.b32 %r8011, %r8012, %r8013, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r8011;
	ld.local.u32 	%r8016, [%rd5+12];
	ld.local.u32 	%r8017, [%rd5+8];
	// inline asm
	prmt.b32 %r8015, %r8016, %r8017, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r8015;
	ld.local.u32 	%r8020, [%rd5+8];
	ld.local.u32 	%r8021, [%rd5+4];
	// inline asm
	prmt.b32 %r8019, %r8020, %r8021, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r8019;
	ld.local.u32 	%r8024, [%rd5+4];
	ld.local.u32 	%r8025, [%rd5];
	// inline asm
	prmt.b32 %r8023, %r8024, %r8025, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r8023;
	ld.local.u32 	%r8028, [%rd5];
	ld.local.u32 	%r8029, [%rd4+12];
	// inline asm
	prmt.b32 %r8027, %r8028, %r8029, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r8027;
	ld.local.u32 	%r8032, [%rd4+12];
	ld.local.u32 	%r8033, [%rd4+8];
	// inline asm
	prmt.b32 %r8031, %r8032, %r8033, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r8031;
	ld.local.u32 	%r8036, [%rd4+8];
	ld.local.u32 	%r8037, [%rd4+4];
	// inline asm
	prmt.b32 %r8035, %r8036, %r8037, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r8035;
	ld.local.u32 	%r8040, [%rd4+4];
	ld.local.u32 	%r8041, [%rd4];
	// inline asm
	prmt.b32 %r8039, %r8040, %r8041, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r8039;
	ld.local.u32 	%r8044, [%rd4];
	ld.local.u32 	%r8045, [%rd3+12];
	// inline asm
	prmt.b32 %r8043, %r8044, %r8045, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r8043;
	ld.local.u32 	%r8048, [%rd3+12];
	ld.local.u32 	%r8049, [%rd3+8];
	// inline asm
	prmt.b32 %r8047, %r8048, %r8049, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r8047;
	ld.local.u32 	%r8052, [%rd3+8];
	ld.local.u32 	%r8053, [%rd3+4];
	// inline asm
	prmt.b32 %r8051, %r8052, %r8053, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r8051;
	ld.local.u32 	%r8056, [%rd3+4];
	ld.local.u32 	%r8057, [%rd3];
	// inline asm
	prmt.b32 %r8055, %r8056, %r8057, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r8055;
	ld.local.u32 	%r8060, [%rd3];
	ld.local.u32 	%r8061, [%rd2+12];
	// inline asm
	prmt.b32 %r8059, %r8060, %r8061, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r8059;
	ld.local.u32 	%r8064, [%rd2+12];
	ld.local.u32 	%r8065, [%rd2+8];
	// inline asm
	prmt.b32 %r8063, %r8064, %r8065, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r8063;
	ld.local.u32 	%r8068, [%rd2+8];
	ld.local.u32 	%r8069, [%rd2+4];
	// inline asm
	prmt.b32 %r8067, %r8068, %r8069, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r8067;
	ld.local.u32 	%r8072, [%rd2+4];
	ld.local.u32 	%r8073, [%rd2];
	// inline asm
	prmt.b32 %r8071, %r8072, %r8073, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r8071;
	ld.local.u32 	%r8076, [%rd2];
	ld.local.u32 	%r8077, [%rd1+12];
	// inline asm
	prmt.b32 %r8075, %r8076, %r8077, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r8075;
	ld.local.u32 	%r8080, [%rd1+12];
	ld.local.u32 	%r8081, [%rd1+8];
	// inline asm
	prmt.b32 %r8079, %r8080, %r8081, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r8079;
	ld.local.u32 	%r8084, [%rd1+8];
	ld.local.u32 	%r8085, [%rd1+4];
	// inline asm
	prmt.b32 %r8083, %r8084, %r8085, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r8083;
	ld.local.u32 	%r8088, [%rd1+4];
	ld.local.u32 	%r8089, [%rd1];
	// inline asm
	prmt.b32 %r8087, %r8088, %r8089, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r8087;
	ld.local.u32 	%r8092, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r8091, %r8092, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd1+8], %r8091;
	mov.u64 	%rd1256, 0;
	st.local.u32 	[%rd1+4], %rd1256;
	st.local.u32 	[%rd1], %rd1256;
	bra.uni 	BB0_173;

BB0_9:
	setp.eq.s32	%p46, %r3, 2;
	@%p46 bra 	BB0_86;
	bra.uni 	BB0_10;

BB0_86:
	ld.local.u32 	%r4879, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9160, %r9158, %r4879, %r4;
	// inline asm
	ld.local.u32 	%r4882, [%rd8+12];
	ld.local.u32 	%r4883, [%rd8+8];
	// inline asm
	prmt.b32 %r9161, %r4882, %r4883, %r4;
	// inline asm
	ld.local.u32 	%r4886, [%rd8+8];
	ld.local.u32 	%r4887, [%rd8+4];
	// inline asm
	prmt.b32 %r9162, %r4886, %r4887, %r4;
	// inline asm
	ld.local.u32 	%r4890, [%rd8+4];
	ld.local.u32 	%r4891, [%rd8];
	// inline asm
	prmt.b32 %r4889, %r4890, %r4891, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r4889;
	ld.local.u32 	%r4894, [%rd8];
	ld.local.u32 	%r4895, [%rd7+12];
	// inline asm
	prmt.b32 %r4893, %r4894, %r4895, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r4893;
	ld.local.u32 	%r4898, [%rd7+12];
	ld.local.u32 	%r4899, [%rd7+8];
	// inline asm
	prmt.b32 %r4897, %r4898, %r4899, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r4897;
	ld.local.u32 	%r4902, [%rd7+8];
	ld.local.u32 	%r4903, [%rd7+4];
	// inline asm
	prmt.b32 %r4901, %r4902, %r4903, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r4901;
	ld.local.u32 	%r4906, [%rd7+4];
	ld.local.u32 	%r4907, [%rd7];
	// inline asm
	prmt.b32 %r4905, %r4906, %r4907, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r4905;
	ld.local.u32 	%r4910, [%rd7];
	ld.local.u32 	%r4911, [%rd6+12];
	// inline asm
	prmt.b32 %r4909, %r4910, %r4911, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r4909;
	ld.local.u32 	%r4914, [%rd6+12];
	ld.local.u32 	%r4915, [%rd6+8];
	// inline asm
	prmt.b32 %r4913, %r4914, %r4915, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r4913;
	ld.local.u32 	%r4918, [%rd6+8];
	ld.local.u32 	%r4919, [%rd6+4];
	// inline asm
	prmt.b32 %r4917, %r4918, %r4919, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r4917;
	ld.local.u32 	%r4922, [%rd6+4];
	ld.local.u32 	%r4923, [%rd6];
	// inline asm
	prmt.b32 %r4921, %r4922, %r4923, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r4921;
	ld.local.u32 	%r4926, [%rd6];
	ld.local.u32 	%r4927, [%rd5+12];
	// inline asm
	prmt.b32 %r4925, %r4926, %r4927, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r4925;
	ld.local.u32 	%r4930, [%rd5+12];
	ld.local.u32 	%r4931, [%rd5+8];
	// inline asm
	prmt.b32 %r4929, %r4930, %r4931, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4929;
	ld.local.u32 	%r4934, [%rd5+8];
	ld.local.u32 	%r4935, [%rd5+4];
	// inline asm
	prmt.b32 %r4933, %r4934, %r4935, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4933;
	ld.local.u32 	%r4938, [%rd5+4];
	ld.local.u32 	%r4939, [%rd5];
	// inline asm
	prmt.b32 %r4937, %r4938, %r4939, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4937;
	ld.local.u32 	%r4942, [%rd5];
	ld.local.u32 	%r4943, [%rd4+12];
	// inline asm
	prmt.b32 %r4941, %r4942, %r4943, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4941;
	ld.local.u32 	%r4946, [%rd4+12];
	ld.local.u32 	%r4947, [%rd4+8];
	// inline asm
	prmt.b32 %r4945, %r4946, %r4947, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4945;
	ld.local.u32 	%r4950, [%rd4+8];
	ld.local.u32 	%r4951, [%rd4+4];
	// inline asm
	prmt.b32 %r4949, %r4950, %r4951, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4949;
	ld.local.u32 	%r4954, [%rd4+4];
	ld.local.u32 	%r4955, [%rd4];
	// inline asm
	prmt.b32 %r4953, %r4954, %r4955, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4953;
	ld.local.u32 	%r4958, [%rd4];
	ld.local.u32 	%r4959, [%rd3+12];
	// inline asm
	prmt.b32 %r4957, %r4958, %r4959, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4957;
	ld.local.u32 	%r4962, [%rd3+12];
	ld.local.u32 	%r4963, [%rd3+8];
	// inline asm
	prmt.b32 %r4961, %r4962, %r4963, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4961;
	ld.local.u32 	%r4966, [%rd3+8];
	ld.local.u32 	%r4967, [%rd3+4];
	// inline asm
	prmt.b32 %r4965, %r4966, %r4967, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4965;
	ld.local.u32 	%r4970, [%rd3+4];
	ld.local.u32 	%r4971, [%rd3];
	// inline asm
	prmt.b32 %r4969, %r4970, %r4971, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4969;
	ld.local.u32 	%r4974, [%rd3];
	ld.local.u32 	%r4975, [%rd2+12];
	// inline asm
	prmt.b32 %r4973, %r4974, %r4975, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4973;
	ld.local.u32 	%r4978, [%rd2+12];
	ld.local.u32 	%r4979, [%rd2+8];
	// inline asm
	prmt.b32 %r4977, %r4978, %r4979, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4977;
	ld.local.u32 	%r4982, [%rd2+8];
	ld.local.u32 	%r4983, [%rd2+4];
	// inline asm
	prmt.b32 %r4981, %r4982, %r4983, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4981;
	ld.local.u32 	%r4986, [%rd2+4];
	ld.local.u32 	%r4987, [%rd2];
	// inline asm
	prmt.b32 %r4985, %r4986, %r4987, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r4985;
	ld.local.u32 	%r4990, [%rd2];
	ld.local.u32 	%r4991, [%rd1+12];
	// inline asm
	prmt.b32 %r4989, %r4990, %r4991, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r4989;
	ld.local.u32 	%r4994, [%rd1+12];
	ld.local.u32 	%r4995, [%rd1+8];
	// inline asm
	prmt.b32 %r4993, %r4994, %r4995, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r4993;
	ld.local.u32 	%r4998, [%rd1+8];
	ld.local.u32 	%r4999, [%rd1+4];
	// inline asm
	prmt.b32 %r4997, %r4998, %r4999, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r4997;
	ld.local.u32 	%r5002, [%rd1+4];
	ld.local.u32 	%r5003, [%rd1];
	// inline asm
	prmt.b32 %r5001, %r5002, %r5003, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r5001;
	ld.local.u32 	%r5006, [%rd1];
	// inline asm
	prmt.b32 %r5005, %r5006, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd1+8], %r5005;
	mov.u64 	%rd208, 0;
	st.local.u32 	[%rd1+4], %rd208;
	st.local.u32 	[%rd1], %rd208;
	mov.u32 	%r9159, %r9158;
	bra.uni 	BB0_12;

BB0_131:
	setp.eq.s32	%p71, %r3, 18;
	@%p71 bra 	BB0_162;
	bra.uni 	BB0_132;

BB0_162:
	ld.local.u32 	%r6584, [%rd4+4];
	ld.local.u32 	%r6585, [%rd4];
	// inline asm
	prmt.b32 %r6583, %r6584, %r6585, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6583;
	ld.local.u32 	%r6588, [%rd4];
	ld.local.u32 	%r6589, [%rd3+12];
	// inline asm
	prmt.b32 %r6587, %r6588, %r6589, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6587;
	ld.local.u32 	%r6592, [%rd3+12];
	ld.local.u32 	%r6593, [%rd3+8];
	// inline asm
	prmt.b32 %r6591, %r6592, %r6593, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6591;
	ld.local.u32 	%r6596, [%rd3+8];
	ld.local.u32 	%r6597, [%rd3+4];
	// inline asm
	prmt.b32 %r6595, %r6596, %r6597, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6595;
	ld.local.u32 	%r6600, [%rd3+4];
	ld.local.u32 	%r6601, [%rd3];
	// inline asm
	prmt.b32 %r6599, %r6600, %r6601, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6599;
	ld.local.u32 	%r6604, [%rd3];
	ld.local.u32 	%r6605, [%rd2+12];
	// inline asm
	prmt.b32 %r6603, %r6604, %r6605, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6603;
	ld.local.u32 	%r6608, [%rd2+12];
	ld.local.u32 	%r6609, [%rd2+8];
	// inline asm
	prmt.b32 %r6607, %r6608, %r6609, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6607;
	ld.local.u32 	%r6612, [%rd2+8];
	ld.local.u32 	%r6613, [%rd2+4];
	// inline asm
	prmt.b32 %r6611, %r6612, %r6613, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6611;
	ld.local.u32 	%r6616, [%rd2+4];
	ld.local.u32 	%r6617, [%rd2];
	// inline asm
	prmt.b32 %r6615, %r6616, %r6617, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6615;
	ld.local.u32 	%r6620, [%rd2];
	ld.local.u32 	%r6621, [%rd1+12];
	// inline asm
	prmt.b32 %r6619, %r6620, %r6621, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6619;
	ld.local.u32 	%r6624, [%rd1+12];
	ld.local.u32 	%r6625, [%rd1+8];
	// inline asm
	prmt.b32 %r6623, %r6624, %r6625, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6623;
	ld.local.u32 	%r6628, [%rd1+8];
	ld.local.u32 	%r6629, [%rd1+4];
	// inline asm
	prmt.b32 %r6627, %r6628, %r6629, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6627;
	ld.local.u32 	%r6632, [%rd1+4];
	ld.local.u32 	%r6633, [%rd1];
	// inline asm
	prmt.b32 %r6631, %r6632, %r6633, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r6631;
	ld.local.u32 	%r6636, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r6635, %r6636, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r6635;
	st.local.u32 	[%rd5+4], %r9192;
	st.local.u32 	[%rd5], %r9192;
	st.local.u32 	[%rd4+12], %r9192;
	st.local.u32 	[%rd4+8], %r9192;
	st.local.u32 	[%rd4+4], %r9192;
	st.local.u32 	[%rd4], %r9192;
	st.local.u32 	[%rd3+12], %r9192;
	st.local.u32 	[%rd3+8], %r9192;
	st.local.u32 	[%rd3+4], %r9192;
	st.local.u32 	[%rd3], %r9192;
	st.local.u32 	[%rd2+12], %r9192;
	st.local.u32 	[%rd2+8], %r9192;
	st.local.u32 	[%rd2+4], %r9192;
	st.local.u32 	[%rd2], %r9192;
	st.local.u32 	[%rd1+12], %r9192;
	st.local.u32 	[%rd1+8], %r9192;
	mov.u64 	%rd1240, 0;
	st.local.u32 	[%rd1+4], %rd1240;
	st.local.u32 	[%rd1], %rd1240;
	bra.uni 	BB0_173;

BB0_41:
	setp.eq.s32	%p23, %r3, 18;
	@%p23 bra 	BB0_72;
	bra.uni 	BB0_42;

BB0_72:
	ld.local.u32 	%r2423, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9176, %r9158, %r2423, %r4;
	// inline asm
	ld.local.u32 	%r2426, [%rd8+12];
	ld.local.u32 	%r2427, [%rd8+8];
	// inline asm
	prmt.b32 %r9177, %r2426, %r2427, %r4;
	// inline asm
	ld.local.u32 	%r2430, [%rd8+8];
	ld.local.u32 	%r2431, [%rd8+4];
	// inline asm
	prmt.b32 %r9178, %r2430, %r2431, %r4;
	// inline asm
	ld.local.u32 	%r2434, [%rd8+4];
	ld.local.u32 	%r2435, [%rd8];
	// inline asm
	prmt.b32 %r9171, %r2434, %r2435, %r4;
	// inline asm
	ld.local.u32 	%r2438, [%rd8];
	ld.local.u32 	%r2439, [%rd7+12];
	// inline asm
	prmt.b32 %r9172, %r2438, %r2439, %r4;
	// inline asm
	ld.local.u32 	%r2442, [%rd7+12];
	ld.local.u32 	%r2443, [%rd7+8];
	// inline asm
	prmt.b32 %r9173, %r2442, %r2443, %r4;
	// inline asm
	ld.local.u32 	%r2446, [%rd7+8];
	ld.local.u32 	%r2447, [%rd7+4];
	// inline asm
	prmt.b32 %r9174, %r2446, %r2447, %r4;
	// inline asm
	ld.local.u32 	%r2450, [%rd7+4];
	ld.local.u32 	%r2451, [%rd7];
	// inline asm
	prmt.b32 %r9167, %r2450, %r2451, %r4;
	// inline asm
	ld.local.u32 	%r2454, [%rd7];
	ld.local.u32 	%r2455, [%rd6+12];
	// inline asm
	prmt.b32 %r9168, %r2454, %r2455, %r4;
	// inline asm
	ld.local.u32 	%r2458, [%rd6+12];
	ld.local.u32 	%r2459, [%rd6+8];
	// inline asm
	prmt.b32 %r9169, %r2458, %r2459, %r4;
	// inline asm
	ld.local.u32 	%r2462, [%rd6+8];
	ld.local.u32 	%r2463, [%rd6+4];
	// inline asm
	prmt.b32 %r9170, %r2462, %r2463, %r4;
	// inline asm
	ld.local.u32 	%r2466, [%rd6+4];
	ld.local.u32 	%r2467, [%rd6];
	// inline asm
	prmt.b32 %r9163, %r2466, %r2467, %r4;
	// inline asm
	ld.local.u32 	%r2470, [%rd6];
	ld.local.u32 	%r2471, [%rd5+12];
	// inline asm
	prmt.b32 %r9164, %r2470, %r2471, %r4;
	// inline asm
	ld.local.u32 	%r2474, [%rd5+12];
	ld.local.u32 	%r2475, [%rd5+8];
	// inline asm
	prmt.b32 %r9165, %r2474, %r2475, %r4;
	// inline asm
	ld.local.u32 	%r2478, [%rd5+8];
	ld.local.u32 	%r2479, [%rd5+4];
	// inline asm
	prmt.b32 %r9166, %r2478, %r2479, %r4;
	// inline asm
	ld.local.u32 	%r2482, [%rd5+4];
	ld.local.u32 	%r2483, [%rd5];
	// inline asm
	prmt.b32 %r9159, %r2482, %r2483, %r4;
	// inline asm
	ld.local.u32 	%r2486, [%rd5];
	ld.local.u32 	%r2487, [%rd4+12];
	// inline asm
	prmt.b32 %r9160, %r2486, %r2487, %r4;
	// inline asm
	ld.local.u32 	%r2490, [%rd4+12];
	ld.local.u32 	%r2491, [%rd4+8];
	// inline asm
	prmt.b32 %r9161, %r2490, %r2491, %r4;
	// inline asm
	ld.local.u32 	%r2494, [%rd4+8];
	ld.local.u32 	%r2495, [%rd4+4];
	// inline asm
	prmt.b32 %r9162, %r2494, %r2495, %r4;
	// inline asm
	ld.local.u32 	%r2498, [%rd4+4];
	ld.local.u32 	%r2499, [%rd4];
	// inline asm
	prmt.b32 %r2497, %r2498, %r2499, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2497;
	ld.local.u32 	%r2502, [%rd4];
	ld.local.u32 	%r2503, [%rd3+12];
	// inline asm
	prmt.b32 %r2501, %r2502, %r2503, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2501;
	ld.local.u32 	%r2506, [%rd3+12];
	ld.local.u32 	%r2507, [%rd3+8];
	// inline asm
	prmt.b32 %r2505, %r2506, %r2507, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2505;
	ld.local.u32 	%r2510, [%rd3+8];
	ld.local.u32 	%r2511, [%rd3+4];
	// inline asm
	prmt.b32 %r2509, %r2510, %r2511, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2509;
	ld.local.u32 	%r2514, [%rd3+4];
	ld.local.u32 	%r2515, [%rd3];
	// inline asm
	prmt.b32 %r2513, %r2514, %r2515, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2513;
	ld.local.u32 	%r2518, [%rd3];
	ld.local.u32 	%r2519, [%rd2+12];
	// inline asm
	prmt.b32 %r2517, %r2518, %r2519, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2517;
	ld.local.u32 	%r2522, [%rd2+12];
	ld.local.u32 	%r2523, [%rd2+8];
	// inline asm
	prmt.b32 %r2521, %r2522, %r2523, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2521;
	ld.local.u32 	%r2526, [%rd2+8];
	ld.local.u32 	%r2527, [%rd2+4];
	// inline asm
	prmt.b32 %r2525, %r2526, %r2527, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2525;
	ld.local.u32 	%r2530, [%rd2+4];
	ld.local.u32 	%r2531, [%rd2];
	// inline asm
	prmt.b32 %r2529, %r2530, %r2531, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2529;
	ld.local.u32 	%r2534, [%rd2];
	ld.local.u32 	%r2535, [%rd1+12];
	// inline asm
	prmt.b32 %r2533, %r2534, %r2535, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2533;
	ld.local.u32 	%r2538, [%rd1+12];
	ld.local.u32 	%r2539, [%rd1+8];
	// inline asm
	prmt.b32 %r2537, %r2538, %r2539, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2537;
	ld.local.u32 	%r2542, [%rd1+8];
	ld.local.u32 	%r2543, [%rd1+4];
	// inline asm
	prmt.b32 %r2541, %r2542, %r2543, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r2541;
	ld.local.u32 	%r2546, [%rd1+4];
	ld.local.u32 	%r2547, [%rd1];
	// inline asm
	prmt.b32 %r2545, %r2546, %r2547, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r2545;
	ld.local.u32 	%r2550, [%rd1];
	// inline asm
	prmt.b32 %r2549, %r2550, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r2549;
	st.local.u32 	[%rd5+4], %r9158;
	st.local.u32 	[%rd5], %r9158;
	st.local.u32 	[%rd4+12], %r9158;
	st.local.u32 	[%rd4+8], %r9158;
	st.local.u32 	[%rd4+4], %r9158;
	st.local.u32 	[%rd4], %r9158;
	st.local.u32 	[%rd3+12], %r9158;
	st.local.u32 	[%rd3+8], %r9158;
	st.local.u32 	[%rd3+4], %r9158;
	st.local.u32 	[%rd3], %r9158;
	st.local.u32 	[%rd2+12], %r9158;
	st.local.u32 	[%rd2+8], %r9158;
	st.local.u32 	[%rd2+4], %r9158;
	st.local.u32 	[%rd2], %r9158;
	st.local.u32 	[%rd1+12], %r9158;
	st.local.u32 	[%rd1+8], %r9158;
	mov.u64 	%rd192, 0;
	st.local.u32 	[%rd1+4], %rd192;
	st.local.u32 	[%rd1], %rd192;
	mov.u32 	%r9175, %r9158;
	bra.uni 	BB0_83;

BB0_115:
	setp.eq.s32	%p83, %r3, 10;
	@%p83 bra 	BB0_166;
	bra.uni 	BB0_116;

BB0_166:
	ld.local.u32 	%r7152, [%rd6+4];
	ld.local.u32 	%r7153, [%rd6];
	// inline asm
	prmt.b32 %r7151, %r7152, %r7153, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7151;
	ld.local.u32 	%r7156, [%rd6];
	ld.local.u32 	%r7157, [%rd5+12];
	// inline asm
	prmt.b32 %r7155, %r7156, %r7157, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7155;
	ld.local.u32 	%r7160, [%rd5+12];
	ld.local.u32 	%r7161, [%rd5+8];
	// inline asm
	prmt.b32 %r7159, %r7160, %r7161, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7159;
	ld.local.u32 	%r7164, [%rd5+8];
	ld.local.u32 	%r7165, [%rd5+4];
	// inline asm
	prmt.b32 %r7163, %r7164, %r7165, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7163;
	ld.local.u32 	%r7168, [%rd5+4];
	ld.local.u32 	%r7169, [%rd5];
	// inline asm
	prmt.b32 %r7167, %r7168, %r7169, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7167;
	ld.local.u32 	%r7172, [%rd5];
	ld.local.u32 	%r7173, [%rd4+12];
	// inline asm
	prmt.b32 %r7171, %r7172, %r7173, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7171;
	ld.local.u32 	%r7176, [%rd4+12];
	ld.local.u32 	%r7177, [%rd4+8];
	// inline asm
	prmt.b32 %r7175, %r7176, %r7177, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7175;
	ld.local.u32 	%r7180, [%rd4+8];
	ld.local.u32 	%r7181, [%rd4+4];
	// inline asm
	prmt.b32 %r7179, %r7180, %r7181, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7179;
	ld.local.u32 	%r7184, [%rd4+4];
	ld.local.u32 	%r7185, [%rd4];
	// inline asm
	prmt.b32 %r7183, %r7184, %r7185, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7183;
	ld.local.u32 	%r7188, [%rd4];
	ld.local.u32 	%r7189, [%rd3+12];
	// inline asm
	prmt.b32 %r7187, %r7188, %r7189, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7187;
	ld.local.u32 	%r7192, [%rd3+12];
	ld.local.u32 	%r7193, [%rd3+8];
	// inline asm
	prmt.b32 %r7191, %r7192, %r7193, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7191;
	ld.local.u32 	%r7196, [%rd3+8];
	ld.local.u32 	%r7197, [%rd3+4];
	// inline asm
	prmt.b32 %r7195, %r7196, %r7197, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7195;
	ld.local.u32 	%r7200, [%rd3+4];
	ld.local.u32 	%r7201, [%rd3];
	// inline asm
	prmt.b32 %r7199, %r7200, %r7201, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7199;
	ld.local.u32 	%r7204, [%rd3];
	ld.local.u32 	%r7205, [%rd2+12];
	// inline asm
	prmt.b32 %r7203, %r7204, %r7205, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7203;
	ld.local.u32 	%r7208, [%rd2+12];
	ld.local.u32 	%r7209, [%rd2+8];
	// inline asm
	prmt.b32 %r7207, %r7208, %r7209, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7207;
	ld.local.u32 	%r7212, [%rd2+8];
	ld.local.u32 	%r7213, [%rd2+4];
	// inline asm
	prmt.b32 %r7211, %r7212, %r7213, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7211;
	ld.local.u32 	%r7216, [%rd2+4];
	ld.local.u32 	%r7217, [%rd2];
	// inline asm
	prmt.b32 %r7215, %r7216, %r7217, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7215;
	ld.local.u32 	%r7220, [%rd2];
	ld.local.u32 	%r7221, [%rd1+12];
	// inline asm
	prmt.b32 %r7219, %r7220, %r7221, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7219;
	ld.local.u32 	%r7224, [%rd1+12];
	ld.local.u32 	%r7225, [%rd1+8];
	// inline asm
	prmt.b32 %r7223, %r7224, %r7225, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7223;
	ld.local.u32 	%r7228, [%rd1+8];
	ld.local.u32 	%r7229, [%rd1+4];
	// inline asm
	prmt.b32 %r7227, %r7228, %r7229, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7227;
	ld.local.u32 	%r7232, [%rd1+4];
	ld.local.u32 	%r7233, [%rd1];
	// inline asm
	prmt.b32 %r7231, %r7232, %r7233, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7231;
	ld.local.u32 	%r7236, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r7235, %r7236, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7235;
	st.local.u32 	[%rd3+4], %r9192;
	st.local.u32 	[%rd3], %r9192;
	st.local.u32 	[%rd2+12], %r9192;
	st.local.u32 	[%rd2+8], %r9192;
	st.local.u32 	[%rd2+4], %r9192;
	st.local.u32 	[%rd2], %r9192;
	st.local.u32 	[%rd1+12], %r9192;
	st.local.u32 	[%rd1+8], %r9192;
	mov.u64 	%rd1248, 0;
	st.local.u32 	[%rd1+4], %rd1248;
	st.local.u32 	[%rd1], %rd1248;
	bra.uni 	BB0_173;

BB0_25:
	setp.eq.s32	%p35, %r3, 10;
	@%p35 bra 	BB0_76;
	bra.uni 	BB0_26;

BB0_76:
	ld.local.u32 	%r3619, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9168, %r9158, %r3619, %r4;
	// inline asm
	ld.local.u32 	%r3622, [%rd8+12];
	ld.local.u32 	%r3623, [%rd8+8];
	// inline asm
	prmt.b32 %r9169, %r3622, %r3623, %r4;
	// inline asm
	ld.local.u32 	%r3626, [%rd8+8];
	ld.local.u32 	%r3627, [%rd8+4];
	// inline asm
	prmt.b32 %r9170, %r3626, %r3627, %r4;
	// inline asm
	ld.local.u32 	%r3630, [%rd8+4];
	ld.local.u32 	%r3631, [%rd8];
	// inline asm
	prmt.b32 %r9163, %r3630, %r3631, %r4;
	// inline asm
	ld.local.u32 	%r3634, [%rd8];
	ld.local.u32 	%r3635, [%rd7+12];
	// inline asm
	prmt.b32 %r9164, %r3634, %r3635, %r4;
	// inline asm
	ld.local.u32 	%r3638, [%rd7+12];
	ld.local.u32 	%r3639, [%rd7+8];
	// inline asm
	prmt.b32 %r9165, %r3638, %r3639, %r4;
	// inline asm
	ld.local.u32 	%r3642, [%rd7+8];
	ld.local.u32 	%r3643, [%rd7+4];
	// inline asm
	prmt.b32 %r9166, %r3642, %r3643, %r4;
	// inline asm
	ld.local.u32 	%r3646, [%rd7+4];
	ld.local.u32 	%r3647, [%rd7];
	// inline asm
	prmt.b32 %r9159, %r3646, %r3647, %r4;
	// inline asm
	ld.local.u32 	%r3650, [%rd7];
	ld.local.u32 	%r3651, [%rd6+12];
	// inline asm
	prmt.b32 %r9160, %r3650, %r3651, %r4;
	// inline asm
	ld.local.u32 	%r3654, [%rd6+12];
	ld.local.u32 	%r3655, [%rd6+8];
	// inline asm
	prmt.b32 %r9161, %r3654, %r3655, %r4;
	// inline asm
	ld.local.u32 	%r3658, [%rd6+8];
	ld.local.u32 	%r3659, [%rd6+4];
	// inline asm
	prmt.b32 %r9162, %r3658, %r3659, %r4;
	// inline asm
	ld.local.u32 	%r3662, [%rd6+4];
	ld.local.u32 	%r3663, [%rd6];
	// inline asm
	prmt.b32 %r3661, %r3662, %r3663, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3661;
	ld.local.u32 	%r3666, [%rd6];
	ld.local.u32 	%r3667, [%rd5+12];
	// inline asm
	prmt.b32 %r3665, %r3666, %r3667, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3665;
	ld.local.u32 	%r3670, [%rd5+12];
	ld.local.u32 	%r3671, [%rd5+8];
	// inline asm
	prmt.b32 %r3669, %r3670, %r3671, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3669;
	ld.local.u32 	%r3674, [%rd5+8];
	ld.local.u32 	%r3675, [%rd5+4];
	// inline asm
	prmt.b32 %r3673, %r3674, %r3675, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3673;
	ld.local.u32 	%r3678, [%rd5+4];
	ld.local.u32 	%r3679, [%rd5];
	// inline asm
	prmt.b32 %r3677, %r3678, %r3679, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3677;
	ld.local.u32 	%r3682, [%rd5];
	ld.local.u32 	%r3683, [%rd4+12];
	// inline asm
	prmt.b32 %r3681, %r3682, %r3683, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3681;
	ld.local.u32 	%r3686, [%rd4+12];
	ld.local.u32 	%r3687, [%rd4+8];
	// inline asm
	prmt.b32 %r3685, %r3686, %r3687, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3685;
	ld.local.u32 	%r3690, [%rd4+8];
	ld.local.u32 	%r3691, [%rd4+4];
	// inline asm
	prmt.b32 %r3689, %r3690, %r3691, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3689;
	ld.local.u32 	%r3694, [%rd4+4];
	ld.local.u32 	%r3695, [%rd4];
	// inline asm
	prmt.b32 %r3693, %r3694, %r3695, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3693;
	ld.local.u32 	%r3698, [%rd4];
	ld.local.u32 	%r3699, [%rd3+12];
	// inline asm
	prmt.b32 %r3697, %r3698, %r3699, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3697;
	ld.local.u32 	%r3702, [%rd3+12];
	ld.local.u32 	%r3703, [%rd3+8];
	// inline asm
	prmt.b32 %r3701, %r3702, %r3703, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3701;
	ld.local.u32 	%r3706, [%rd3+8];
	ld.local.u32 	%r3707, [%rd3+4];
	// inline asm
	prmt.b32 %r3705, %r3706, %r3707, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3705;
	ld.local.u32 	%r3710, [%rd3+4];
	ld.local.u32 	%r3711, [%rd3];
	// inline asm
	prmt.b32 %r3709, %r3710, %r3711, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3709;
	ld.local.u32 	%r3714, [%rd3];
	ld.local.u32 	%r3715, [%rd2+12];
	// inline asm
	prmt.b32 %r3713, %r3714, %r3715, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3713;
	ld.local.u32 	%r3718, [%rd2+12];
	ld.local.u32 	%r3719, [%rd2+8];
	// inline asm
	prmt.b32 %r3717, %r3718, %r3719, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3717;
	ld.local.u32 	%r3722, [%rd2+8];
	ld.local.u32 	%r3723, [%rd2+4];
	// inline asm
	prmt.b32 %r3721, %r3722, %r3723, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3721;
	ld.local.u32 	%r3726, [%rd2+4];
	ld.local.u32 	%r3727, [%rd2];
	// inline asm
	prmt.b32 %r3725, %r3726, %r3727, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3725;
	ld.local.u32 	%r3730, [%rd2];
	ld.local.u32 	%r3731, [%rd1+12];
	// inline asm
	prmt.b32 %r3729, %r3730, %r3731, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3729;
	ld.local.u32 	%r3734, [%rd1+12];
	ld.local.u32 	%r3735, [%rd1+8];
	// inline asm
	prmt.b32 %r3733, %r3734, %r3735, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r3733;
	ld.local.u32 	%r3738, [%rd1+8];
	ld.local.u32 	%r3739, [%rd1+4];
	// inline asm
	prmt.b32 %r3737, %r3738, %r3739, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r3737;
	ld.local.u32 	%r3742, [%rd1+4];
	ld.local.u32 	%r3743, [%rd1];
	// inline asm
	prmt.b32 %r3741, %r3742, %r3743, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r3741;
	ld.local.u32 	%r3746, [%rd1];
	// inline asm
	prmt.b32 %r3745, %r3746, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r3745;
	st.local.u32 	[%rd3+4], %r9158;
	st.local.u32 	[%rd3], %r9158;
	st.local.u32 	[%rd2+12], %r9158;
	st.local.u32 	[%rd2+8], %r9158;
	st.local.u32 	[%rd2+4], %r9158;
	st.local.u32 	[%rd2], %r9158;
	st.local.u32 	[%rd1+12], %r9158;
	st.local.u32 	[%rd1+8], %r9158;
	mov.u64 	%rd200, 0;
	st.local.u32 	[%rd1+4], %rd200;
	st.local.u32 	[%rd1], %rd200;
	mov.u32 	%r9167, %r9158;
	bra.uni 	BB0_81;

BB0_146:
	setp.eq.s32	%p60, %r3, 26;
	@%p60 bra 	BB0_158;
	bra.uni 	BB0_147;

BB0_158:
	ld.local.u32 	%r6272, [%rd2+4];
	ld.local.u32 	%r6273, [%rd2];
	// inline asm
	prmt.b32 %r6271, %r6272, %r6273, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6271;
	ld.local.u32 	%r6276, [%rd2];
	ld.local.u32 	%r6277, [%rd1+12];
	// inline asm
	prmt.b32 %r6275, %r6276, %r6277, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6275;
	ld.local.u32 	%r6280, [%rd1+12];
	ld.local.u32 	%r6281, [%rd1+8];
	// inline asm
	prmt.b32 %r6279, %r6280, %r6281, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6279;
	ld.local.u32 	%r6284, [%rd1+8];
	ld.local.u32 	%r6285, [%rd1+4];
	// inline asm
	prmt.b32 %r6283, %r6284, %r6285, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6283;
	ld.local.u32 	%r6288, [%rd1+4];
	ld.local.u32 	%r6289, [%rd1];
	// inline asm
	prmt.b32 %r6287, %r6288, %r6289, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6287;
	ld.local.u32 	%r6292, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r6291, %r6292, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6291;
	st.local.u32 	[%rd7+4], %r9192;
	st.local.u32 	[%rd7], %r9192;
	st.local.u32 	[%rd6+12], %r9192;
	st.local.u32 	[%rd6+8], %r9192;
	st.local.u32 	[%rd6+4], %r9192;
	st.local.u32 	[%rd6], %r9192;
	st.local.u32 	[%rd5+12], %r9192;
	st.local.u32 	[%rd5+8], %r9192;
	st.local.u32 	[%rd5+4], %r9192;
	st.local.u32 	[%rd5], %r9192;
	st.local.u32 	[%rd4+12], %r9192;
	st.local.u32 	[%rd4+8], %r9192;
	st.local.u32 	[%rd4+4], %r9192;
	st.local.u32 	[%rd4], %r9192;
	st.local.u32 	[%rd3+12], %r9192;
	st.local.u32 	[%rd3+8], %r9192;
	st.local.u32 	[%rd3+4], %r9192;
	st.local.u32 	[%rd3], %r9192;
	st.local.u32 	[%rd2+12], %r9192;
	st.local.u32 	[%rd2+8], %r9192;
	st.local.u32 	[%rd2+4], %r9192;
	st.local.u32 	[%rd2], %r9192;
	st.local.u32 	[%rd1+12], %r9192;
	st.local.u32 	[%rd1+8], %r9192;
	mov.u64 	%rd1232, 0;
	st.local.u32 	[%rd1+4], %rd1232;
	st.local.u32 	[%rd1], %rd1232;
	bra.uni 	BB0_173;

BB0_56:
	setp.eq.s32	%p12, %r3, 26;
	@%p12 bra 	BB0_68;
	bra.uni 	BB0_57;

BB0_68:
	ld.local.u32 	%r1291, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9184, %r9158, %r1291, %r4;
	// inline asm
	ld.local.u32 	%r1294, [%rd8+12];
	ld.local.u32 	%r1295, [%rd8+8];
	// inline asm
	prmt.b32 %r9185, %r1294, %r1295, %r4;
	// inline asm
	ld.local.u32 	%r1298, [%rd8+8];
	ld.local.u32 	%r1299, [%rd8+4];
	// inline asm
	prmt.b32 %r9186, %r1298, %r1299, %r4;
	// inline asm
	ld.local.u32 	%r1302, [%rd8+4];
	ld.local.u32 	%r1303, [%rd8];
	// inline asm
	prmt.b32 %r9179, %r1302, %r1303, %r4;
	// inline asm
	ld.local.u32 	%r1306, [%rd8];
	ld.local.u32 	%r1307, [%rd7+12];
	// inline asm
	prmt.b32 %r9180, %r1306, %r1307, %r4;
	// inline asm
	ld.local.u32 	%r1310, [%rd7+12];
	ld.local.u32 	%r1311, [%rd7+8];
	// inline asm
	prmt.b32 %r9181, %r1310, %r1311, %r4;
	// inline asm
	ld.local.u32 	%r1314, [%rd7+8];
	ld.local.u32 	%r1315, [%rd7+4];
	// inline asm
	prmt.b32 %r9182, %r1314, %r1315, %r4;
	// inline asm
	ld.local.u32 	%r1318, [%rd7+4];
	ld.local.u32 	%r1319, [%rd7];
	// inline asm
	prmt.b32 %r9175, %r1318, %r1319, %r4;
	// inline asm
	ld.local.u32 	%r1322, [%rd7];
	ld.local.u32 	%r1323, [%rd6+12];
	// inline asm
	prmt.b32 %r9176, %r1322, %r1323, %r4;
	// inline asm
	ld.local.u32 	%r1326, [%rd6+12];
	ld.local.u32 	%r1327, [%rd6+8];
	// inline asm
	prmt.b32 %r9177, %r1326, %r1327, %r4;
	// inline asm
	ld.local.u32 	%r1330, [%rd6+8];
	ld.local.u32 	%r1331, [%rd6+4];
	// inline asm
	prmt.b32 %r9178, %r1330, %r1331, %r4;
	// inline asm
	ld.local.u32 	%r1334, [%rd6+4];
	ld.local.u32 	%r1335, [%rd6];
	// inline asm
	prmt.b32 %r9171, %r1334, %r1335, %r4;
	// inline asm
	ld.local.u32 	%r1338, [%rd6];
	ld.local.u32 	%r1339, [%rd5+12];
	// inline asm
	prmt.b32 %r9172, %r1338, %r1339, %r4;
	// inline asm
	ld.local.u32 	%r1342, [%rd5+12];
	ld.local.u32 	%r1343, [%rd5+8];
	// inline asm
	prmt.b32 %r9173, %r1342, %r1343, %r4;
	// inline asm
	ld.local.u32 	%r1346, [%rd5+8];
	ld.local.u32 	%r1347, [%rd5+4];
	// inline asm
	prmt.b32 %r9174, %r1346, %r1347, %r4;
	// inline asm
	ld.local.u32 	%r1350, [%rd5+4];
	ld.local.u32 	%r1351, [%rd5];
	// inline asm
	prmt.b32 %r9167, %r1350, %r1351, %r4;
	// inline asm
	ld.local.u32 	%r1354, [%rd5];
	ld.local.u32 	%r1355, [%rd4+12];
	// inline asm
	prmt.b32 %r9168, %r1354, %r1355, %r4;
	// inline asm
	ld.local.u32 	%r1358, [%rd4+12];
	ld.local.u32 	%r1359, [%rd4+8];
	// inline asm
	prmt.b32 %r9169, %r1358, %r1359, %r4;
	// inline asm
	ld.local.u32 	%r1362, [%rd4+8];
	ld.local.u32 	%r1363, [%rd4+4];
	// inline asm
	prmt.b32 %r9170, %r1362, %r1363, %r4;
	// inline asm
	ld.local.u32 	%r1366, [%rd4+4];
	ld.local.u32 	%r1367, [%rd4];
	// inline asm
	prmt.b32 %r9163, %r1366, %r1367, %r4;
	// inline asm
	ld.local.u32 	%r1370, [%rd4];
	ld.local.u32 	%r1371, [%rd3+12];
	// inline asm
	prmt.b32 %r9164, %r1370, %r1371, %r4;
	// inline asm
	ld.local.u32 	%r1374, [%rd3+12];
	ld.local.u32 	%r1375, [%rd3+8];
	// inline asm
	prmt.b32 %r9165, %r1374, %r1375, %r4;
	// inline asm
	ld.local.u32 	%r1378, [%rd3+8];
	ld.local.u32 	%r1379, [%rd3+4];
	// inline asm
	prmt.b32 %r9166, %r1378, %r1379, %r4;
	// inline asm
	ld.local.u32 	%r1382, [%rd3+4];
	ld.local.u32 	%r1383, [%rd3];
	// inline asm
	prmt.b32 %r9159, %r1382, %r1383, %r4;
	// inline asm
	ld.local.u32 	%r1386, [%rd3];
	ld.local.u32 	%r1387, [%rd2+12];
	// inline asm
	prmt.b32 %r9160, %r1386, %r1387, %r4;
	// inline asm
	ld.local.u32 	%r1390, [%rd2+12];
	ld.local.u32 	%r1391, [%rd2+8];
	// inline asm
	prmt.b32 %r9161, %r1390, %r1391, %r4;
	// inline asm
	ld.local.u32 	%r1394, [%rd2+8];
	ld.local.u32 	%r1395, [%rd2+4];
	// inline asm
	prmt.b32 %r9162, %r1394, %r1395, %r4;
	// inline asm
	ld.local.u32 	%r1398, [%rd2+4];
	ld.local.u32 	%r1399, [%rd2];
	// inline asm
	prmt.b32 %r1397, %r1398, %r1399, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1397;
	ld.local.u32 	%r1402, [%rd2];
	ld.local.u32 	%r1403, [%rd1+12];
	// inline asm
	prmt.b32 %r1401, %r1402, %r1403, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1401;
	ld.local.u32 	%r1406, [%rd1+12];
	ld.local.u32 	%r1407, [%rd1+8];
	// inline asm
	prmt.b32 %r1405, %r1406, %r1407, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1405;
	ld.local.u32 	%r1410, [%rd1+8];
	ld.local.u32 	%r1411, [%rd1+4];
	// inline asm
	prmt.b32 %r1409, %r1410, %r1411, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1409;
	ld.local.u32 	%r1414, [%rd1+4];
	ld.local.u32 	%r1415, [%rd1];
	// inline asm
	prmt.b32 %r1413, %r1414, %r1415, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r1413;
	ld.local.u32 	%r1418, [%rd1];
	// inline asm
	prmt.b32 %r1417, %r1418, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r1417;
	st.local.u32 	[%rd7+4], %r9158;
	st.local.u32 	[%rd7], %r9158;
	st.local.u32 	[%rd6+12], %r9158;
	st.local.u32 	[%rd6+8], %r9158;
	st.local.u32 	[%rd6+4], %r9158;
	st.local.u32 	[%rd6], %r9158;
	st.local.u32 	[%rd5+12], %r9158;
	st.local.u32 	[%rd5+8], %r9158;
	st.local.u32 	[%rd5+4], %r9158;
	st.local.u32 	[%rd5], %r9158;
	st.local.u32 	[%rd4+12], %r9158;
	st.local.u32 	[%rd4+8], %r9158;
	st.local.u32 	[%rd4+4], %r9158;
	st.local.u32 	[%rd4], %r9158;
	st.local.u32 	[%rd3+12], %r9158;
	st.local.u32 	[%rd3+8], %r9158;
	st.local.u32 	[%rd3+4], %r9158;
	st.local.u32 	[%rd3], %r9158;
	st.local.u32 	[%rd2+12], %r9158;
	st.local.u32 	[%rd2+8], %r9158;
	st.local.u32 	[%rd2+4], %r9158;
	st.local.u32 	[%rd2], %r9158;
	st.local.u32 	[%rd1+12], %r9158;
	st.local.u32 	[%rd1+8], %r9158;
	mov.u64 	%rd184, 0;
	st.local.u32 	[%rd1+4], %rd184;
	st.local.u32 	[%rd1], %rd184;
	mov.u32 	%r9183, %r9158;
	bra.uni 	BB0_85;

BB0_107:
	setp.eq.s32	%p89, %r3, 6;
	@%p89 bra 	BB0_168;
	bra.uni 	BB0_108;

BB0_168:
	ld.local.u32 	%r7532, [%rd7+4];
	ld.local.u32 	%r7533, [%rd7];
	// inline asm
	prmt.b32 %r7531, %r7532, %r7533, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7531;
	ld.local.u32 	%r7536, [%rd7];
	ld.local.u32 	%r7537, [%rd6+12];
	// inline asm
	prmt.b32 %r7535, %r7536, %r7537, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7535;
	ld.local.u32 	%r7540, [%rd6+12];
	ld.local.u32 	%r7541, [%rd6+8];
	// inline asm
	prmt.b32 %r7539, %r7540, %r7541, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7539;
	ld.local.u32 	%r7544, [%rd6+8];
	ld.local.u32 	%r7545, [%rd6+4];
	// inline asm
	prmt.b32 %r7543, %r7544, %r7545, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7543;
	ld.local.u32 	%r7548, [%rd6+4];
	ld.local.u32 	%r7549, [%rd6];
	// inline asm
	prmt.b32 %r7547, %r7548, %r7549, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7547;
	ld.local.u32 	%r7552, [%rd6];
	ld.local.u32 	%r7553, [%rd5+12];
	// inline asm
	prmt.b32 %r7551, %r7552, %r7553, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7551;
	ld.local.u32 	%r7556, [%rd5+12];
	ld.local.u32 	%r7557, [%rd5+8];
	// inline asm
	prmt.b32 %r7555, %r7556, %r7557, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7555;
	ld.local.u32 	%r7560, [%rd5+8];
	ld.local.u32 	%r7561, [%rd5+4];
	// inline asm
	prmt.b32 %r7559, %r7560, %r7561, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7559;
	ld.local.u32 	%r7564, [%rd5+4];
	ld.local.u32 	%r7565, [%rd5];
	// inline asm
	prmt.b32 %r7563, %r7564, %r7565, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7563;
	ld.local.u32 	%r7568, [%rd5];
	ld.local.u32 	%r7569, [%rd4+12];
	// inline asm
	prmt.b32 %r7567, %r7568, %r7569, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7567;
	ld.local.u32 	%r7572, [%rd4+12];
	ld.local.u32 	%r7573, [%rd4+8];
	// inline asm
	prmt.b32 %r7571, %r7572, %r7573, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7571;
	ld.local.u32 	%r7576, [%rd4+8];
	ld.local.u32 	%r7577, [%rd4+4];
	// inline asm
	prmt.b32 %r7575, %r7576, %r7577, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7575;
	ld.local.u32 	%r7580, [%rd4+4];
	ld.local.u32 	%r7581, [%rd4];
	// inline asm
	prmt.b32 %r7579, %r7580, %r7581, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7579;
	ld.local.u32 	%r7584, [%rd4];
	ld.local.u32 	%r7585, [%rd3+12];
	// inline asm
	prmt.b32 %r7583, %r7584, %r7585, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7583;
	ld.local.u32 	%r7588, [%rd3+12];
	ld.local.u32 	%r7589, [%rd3+8];
	// inline asm
	prmt.b32 %r7587, %r7588, %r7589, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7587;
	ld.local.u32 	%r7592, [%rd3+8];
	ld.local.u32 	%r7593, [%rd3+4];
	// inline asm
	prmt.b32 %r7591, %r7592, %r7593, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7591;
	ld.local.u32 	%r7596, [%rd3+4];
	ld.local.u32 	%r7597, [%rd3];
	// inline asm
	prmt.b32 %r7595, %r7596, %r7597, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7595;
	ld.local.u32 	%r7600, [%rd3];
	ld.local.u32 	%r7601, [%rd2+12];
	// inline asm
	prmt.b32 %r7599, %r7600, %r7601, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7599;
	ld.local.u32 	%r7604, [%rd2+12];
	ld.local.u32 	%r7605, [%rd2+8];
	// inline asm
	prmt.b32 %r7603, %r7604, %r7605, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7603;
	ld.local.u32 	%r7608, [%rd2+8];
	ld.local.u32 	%r7609, [%rd2+4];
	// inline asm
	prmt.b32 %r7607, %r7608, %r7609, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7607;
	ld.local.u32 	%r7612, [%rd2+4];
	ld.local.u32 	%r7613, [%rd2];
	// inline asm
	prmt.b32 %r7611, %r7612, %r7613, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7611;
	ld.local.u32 	%r7616, [%rd2];
	ld.local.u32 	%r7617, [%rd1+12];
	// inline asm
	prmt.b32 %r7615, %r7616, %r7617, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7615;
	ld.local.u32 	%r7620, [%rd1+12];
	ld.local.u32 	%r7621, [%rd1+8];
	// inline asm
	prmt.b32 %r7619, %r7620, %r7621, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r7619;
	ld.local.u32 	%r7624, [%rd1+8];
	ld.local.u32 	%r7625, [%rd1+4];
	// inline asm
	prmt.b32 %r7623, %r7624, %r7625, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r7623;
	ld.local.u32 	%r7628, [%rd1+4];
	ld.local.u32 	%r7629, [%rd1];
	// inline asm
	prmt.b32 %r7627, %r7628, %r7629, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r7627;
	ld.local.u32 	%r7632, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r7631, %r7632, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r7631;
	st.local.u32 	[%rd2+4], %r9192;
	st.local.u32 	[%rd2], %r9192;
	st.local.u32 	[%rd1+12], %r9192;
	st.local.u32 	[%rd1+8], %r9192;
	mov.u64 	%rd1252, 0;
	st.local.u32 	[%rd1+4], %rd1252;
	st.local.u32 	[%rd1], %rd1252;
	bra.uni 	BB0_173;

BB0_17:
	setp.eq.s32	%p41, %r3, 6;
	@%p41 bra 	BB0_78;
	bra.uni 	BB0_18;

BB0_78:
	ld.local.u32 	%r4241, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9164, %r9158, %r4241, %r4;
	// inline asm
	ld.local.u32 	%r4244, [%rd8+12];
	ld.local.u32 	%r4245, [%rd8+8];
	// inline asm
	prmt.b32 %r9165, %r4244, %r4245, %r4;
	// inline asm
	ld.local.u32 	%r4248, [%rd8+8];
	ld.local.u32 	%r4249, [%rd8+4];
	// inline asm
	prmt.b32 %r9166, %r4248, %r4249, %r4;
	// inline asm
	ld.local.u32 	%r4252, [%rd8+4];
	ld.local.u32 	%r4253, [%rd8];
	// inline asm
	prmt.b32 %r9159, %r4252, %r4253, %r4;
	// inline asm
	ld.local.u32 	%r4256, [%rd8];
	ld.local.u32 	%r4257, [%rd7+12];
	// inline asm
	prmt.b32 %r9160, %r4256, %r4257, %r4;
	// inline asm
	ld.local.u32 	%r4260, [%rd7+12];
	ld.local.u32 	%r4261, [%rd7+8];
	// inline asm
	prmt.b32 %r9161, %r4260, %r4261, %r4;
	// inline asm
	ld.local.u32 	%r4264, [%rd7+8];
	ld.local.u32 	%r4265, [%rd7+4];
	// inline asm
	prmt.b32 %r9162, %r4264, %r4265, %r4;
	// inline asm
	ld.local.u32 	%r4268, [%rd7+4];
	ld.local.u32 	%r4269, [%rd7];
	// inline asm
	prmt.b32 %r4267, %r4268, %r4269, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r4267;
	ld.local.u32 	%r4272, [%rd7];
	ld.local.u32 	%r4273, [%rd6+12];
	// inline asm
	prmt.b32 %r4271, %r4272, %r4273, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r4271;
	ld.local.u32 	%r4276, [%rd6+12];
	ld.local.u32 	%r4277, [%rd6+8];
	// inline asm
	prmt.b32 %r4275, %r4276, %r4277, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r4275;
	ld.local.u32 	%r4280, [%rd6+8];
	ld.local.u32 	%r4281, [%rd6+4];
	// inline asm
	prmt.b32 %r4279, %r4280, %r4281, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r4279;
	ld.local.u32 	%r4284, [%rd6+4];
	ld.local.u32 	%r4285, [%rd6];
	// inline asm
	prmt.b32 %r4283, %r4284, %r4285, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r4283;
	ld.local.u32 	%r4288, [%rd6];
	ld.local.u32 	%r4289, [%rd5+12];
	// inline asm
	prmt.b32 %r4287, %r4288, %r4289, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r4287;
	ld.local.u32 	%r4292, [%rd5+12];
	ld.local.u32 	%r4293, [%rd5+8];
	// inline asm
	prmt.b32 %r4291, %r4292, %r4293, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r4291;
	ld.local.u32 	%r4296, [%rd5+8];
	ld.local.u32 	%r4297, [%rd5+4];
	// inline asm
	prmt.b32 %r4295, %r4296, %r4297, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r4295;
	ld.local.u32 	%r4300, [%rd5+4];
	ld.local.u32 	%r4301, [%rd5];
	// inline asm
	prmt.b32 %r4299, %r4300, %r4301, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r4299;
	ld.local.u32 	%r4304, [%rd5];
	ld.local.u32 	%r4305, [%rd4+12];
	// inline asm
	prmt.b32 %r4303, %r4304, %r4305, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r4303;
	ld.local.u32 	%r4308, [%rd4+12];
	ld.local.u32 	%r4309, [%rd4+8];
	// inline asm
	prmt.b32 %r4307, %r4308, %r4309, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4307;
	ld.local.u32 	%r4312, [%rd4+8];
	ld.local.u32 	%r4313, [%rd4+4];
	// inline asm
	prmt.b32 %r4311, %r4312, %r4313, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4311;
	ld.local.u32 	%r4316, [%rd4+4];
	ld.local.u32 	%r4317, [%rd4];
	// inline asm
	prmt.b32 %r4315, %r4316, %r4317, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4315;
	ld.local.u32 	%r4320, [%rd4];
	ld.local.u32 	%r4321, [%rd3+12];
	// inline asm
	prmt.b32 %r4319, %r4320, %r4321, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4319;
	ld.local.u32 	%r4324, [%rd3+12];
	ld.local.u32 	%r4325, [%rd3+8];
	// inline asm
	prmt.b32 %r4323, %r4324, %r4325, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4323;
	ld.local.u32 	%r4328, [%rd3+8];
	ld.local.u32 	%r4329, [%rd3+4];
	// inline asm
	prmt.b32 %r4327, %r4328, %r4329, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4327;
	ld.local.u32 	%r4332, [%rd3+4];
	ld.local.u32 	%r4333, [%rd3];
	// inline asm
	prmt.b32 %r4331, %r4332, %r4333, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4331;
	ld.local.u32 	%r4336, [%rd3];
	ld.local.u32 	%r4337, [%rd2+12];
	// inline asm
	prmt.b32 %r4335, %r4336, %r4337, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4335;
	ld.local.u32 	%r4340, [%rd2+12];
	ld.local.u32 	%r4341, [%rd2+8];
	// inline asm
	prmt.b32 %r4339, %r4340, %r4341, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4339;
	ld.local.u32 	%r4344, [%rd2+8];
	ld.local.u32 	%r4345, [%rd2+4];
	// inline asm
	prmt.b32 %r4343, %r4344, %r4345, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4343;
	ld.local.u32 	%r4348, [%rd2+4];
	ld.local.u32 	%r4349, [%rd2];
	// inline asm
	prmt.b32 %r4347, %r4348, %r4349, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4347;
	ld.local.u32 	%r4352, [%rd2];
	ld.local.u32 	%r4353, [%rd1+12];
	// inline asm
	prmt.b32 %r4351, %r4352, %r4353, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4351;
	ld.local.u32 	%r4356, [%rd1+12];
	ld.local.u32 	%r4357, [%rd1+8];
	// inline asm
	prmt.b32 %r4355, %r4356, %r4357, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4355;
	ld.local.u32 	%r4360, [%rd1+8];
	ld.local.u32 	%r4361, [%rd1+4];
	// inline asm
	prmt.b32 %r4359, %r4360, %r4361, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4359;
	ld.local.u32 	%r4364, [%rd1+4];
	ld.local.u32 	%r4365, [%rd1];
	// inline asm
	prmt.b32 %r4363, %r4364, %r4365, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r4363;
	ld.local.u32 	%r4368, [%rd1];
	// inline asm
	prmt.b32 %r4367, %r4368, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r4367;
	st.local.u32 	[%rd2+4], %r9158;
	st.local.u32 	[%rd2], %r9158;
	st.local.u32 	[%rd1+12], %r9158;
	st.local.u32 	[%rd1+8], %r9158;
	mov.u64 	%rd204, 0;
	st.local.u32 	[%rd1+4], %rd204;
	st.local.u32 	[%rd1], %rd204;
	mov.u32 	%r9163, %r9158;
	bra.uni 	BB0_80;

BB0_138:
	setp.eq.s32	%p66, %r3, 22;
	@%p66 bra 	BB0_160;
	bra.uni 	BB0_139;

BB0_160:
	ld.local.u32 	%r6396, [%rd3+4];
	ld.local.u32 	%r6397, [%rd3];
	// inline asm
	prmt.b32 %r6395, %r6396, %r6397, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6395;
	ld.local.u32 	%r6400, [%rd3];
	ld.local.u32 	%r6401, [%rd2+12];
	// inline asm
	prmt.b32 %r6399, %r6400, %r6401, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6399;
	ld.local.u32 	%r6404, [%rd2+12];
	ld.local.u32 	%r6405, [%rd2+8];
	// inline asm
	prmt.b32 %r6403, %r6404, %r6405, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6403;
	ld.local.u32 	%r6408, [%rd2+8];
	ld.local.u32 	%r6409, [%rd2+4];
	// inline asm
	prmt.b32 %r6407, %r6408, %r6409, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6407;
	ld.local.u32 	%r6412, [%rd2+4];
	ld.local.u32 	%r6413, [%rd2];
	// inline asm
	prmt.b32 %r6411, %r6412, %r6413, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6411;
	ld.local.u32 	%r6416, [%rd2];
	ld.local.u32 	%r6417, [%rd1+12];
	// inline asm
	prmt.b32 %r6415, %r6416, %r6417, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6415;
	ld.local.u32 	%r6420, [%rd1+12];
	ld.local.u32 	%r6421, [%rd1+8];
	// inline asm
	prmt.b32 %r6419, %r6420, %r6421, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6419;
	ld.local.u32 	%r6424, [%rd1+8];
	ld.local.u32 	%r6425, [%rd1+4];
	// inline asm
	prmt.b32 %r6423, %r6424, %r6425, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6423;
	ld.local.u32 	%r6428, [%rd1+4];
	ld.local.u32 	%r6429, [%rd1];
	// inline asm
	prmt.b32 %r6427, %r6428, %r6429, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6427;
	ld.local.u32 	%r6432, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r6431, %r6432, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6431;
	st.local.u32 	[%rd6+4], %r9192;
	st.local.u32 	[%rd6], %r9192;
	st.local.u32 	[%rd5+12], %r9192;
	st.local.u32 	[%rd5+8], %r9192;
	st.local.u32 	[%rd5+4], %r9192;
	st.local.u32 	[%rd5], %r9192;
	st.local.u32 	[%rd4+12], %r9192;
	st.local.u32 	[%rd4+8], %r9192;
	st.local.u32 	[%rd4+4], %r9192;
	st.local.u32 	[%rd4], %r9192;
	st.local.u32 	[%rd3+12], %r9192;
	st.local.u32 	[%rd3+8], %r9192;
	st.local.u32 	[%rd3+4], %r9192;
	st.local.u32 	[%rd3], %r9192;
	st.local.u32 	[%rd2+12], %r9192;
	st.local.u32 	[%rd2+8], %r9192;
	st.local.u32 	[%rd2+4], %r9192;
	st.local.u32 	[%rd2], %r9192;
	st.local.u32 	[%rd1+12], %r9192;
	st.local.u32 	[%rd1+8], %r9192;
	mov.u64 	%rd1236, 0;
	st.local.u32 	[%rd1+4], %rd1236;
	st.local.u32 	[%rd1], %rd1236;
	bra.uni 	BB0_173;

BB0_48:
	setp.eq.s32	%p18, %r3, 22;
	@%p18 bra 	BB0_70;
	bra.uni 	BB0_49;

BB0_70:
	ld.local.u32 	%r1849, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9180, %r9158, %r1849, %r4;
	// inline asm
	ld.local.u32 	%r1852, [%rd8+12];
	ld.local.u32 	%r1853, [%rd8+8];
	// inline asm
	prmt.b32 %r9181, %r1852, %r1853, %r4;
	// inline asm
	ld.local.u32 	%r1856, [%rd8+8];
	ld.local.u32 	%r1857, [%rd8+4];
	// inline asm
	prmt.b32 %r9182, %r1856, %r1857, %r4;
	// inline asm
	ld.local.u32 	%r1860, [%rd8+4];
	ld.local.u32 	%r1861, [%rd8];
	// inline asm
	prmt.b32 %r9175, %r1860, %r1861, %r4;
	// inline asm
	ld.local.u32 	%r1864, [%rd8];
	ld.local.u32 	%r1865, [%rd7+12];
	// inline asm
	prmt.b32 %r9176, %r1864, %r1865, %r4;
	// inline asm
	ld.local.u32 	%r1868, [%rd7+12];
	ld.local.u32 	%r1869, [%rd7+8];
	// inline asm
	prmt.b32 %r9177, %r1868, %r1869, %r4;
	// inline asm
	ld.local.u32 	%r1872, [%rd7+8];
	ld.local.u32 	%r1873, [%rd7+4];
	// inline asm
	prmt.b32 %r9178, %r1872, %r1873, %r4;
	// inline asm
	ld.local.u32 	%r1876, [%rd7+4];
	ld.local.u32 	%r1877, [%rd7];
	// inline asm
	prmt.b32 %r9171, %r1876, %r1877, %r4;
	// inline asm
	ld.local.u32 	%r1880, [%rd7];
	ld.local.u32 	%r1881, [%rd6+12];
	// inline asm
	prmt.b32 %r9172, %r1880, %r1881, %r4;
	// inline asm
	ld.local.u32 	%r1884, [%rd6+12];
	ld.local.u32 	%r1885, [%rd6+8];
	// inline asm
	prmt.b32 %r9173, %r1884, %r1885, %r4;
	// inline asm
	ld.local.u32 	%r1888, [%rd6+8];
	ld.local.u32 	%r1889, [%rd6+4];
	// inline asm
	prmt.b32 %r9174, %r1888, %r1889, %r4;
	// inline asm
	ld.local.u32 	%r1892, [%rd6+4];
	ld.local.u32 	%r1893, [%rd6];
	// inline asm
	prmt.b32 %r9167, %r1892, %r1893, %r4;
	// inline asm
	ld.local.u32 	%r1896, [%rd6];
	ld.local.u32 	%r1897, [%rd5+12];
	// inline asm
	prmt.b32 %r9168, %r1896, %r1897, %r4;
	// inline asm
	ld.local.u32 	%r1900, [%rd5+12];
	ld.local.u32 	%r1901, [%rd5+8];
	// inline asm
	prmt.b32 %r9169, %r1900, %r1901, %r4;
	// inline asm
	ld.local.u32 	%r1904, [%rd5+8];
	ld.local.u32 	%r1905, [%rd5+4];
	// inline asm
	prmt.b32 %r9170, %r1904, %r1905, %r4;
	// inline asm
	ld.local.u32 	%r1908, [%rd5+4];
	ld.local.u32 	%r1909, [%rd5];
	// inline asm
	prmt.b32 %r9163, %r1908, %r1909, %r4;
	// inline asm
	ld.local.u32 	%r1912, [%rd5];
	ld.local.u32 	%r1913, [%rd4+12];
	// inline asm
	prmt.b32 %r9164, %r1912, %r1913, %r4;
	// inline asm
	ld.local.u32 	%r1916, [%rd4+12];
	ld.local.u32 	%r1917, [%rd4+8];
	// inline asm
	prmt.b32 %r9165, %r1916, %r1917, %r4;
	// inline asm
	ld.local.u32 	%r1920, [%rd4+8];
	ld.local.u32 	%r1921, [%rd4+4];
	// inline asm
	prmt.b32 %r9166, %r1920, %r1921, %r4;
	// inline asm
	ld.local.u32 	%r1924, [%rd4+4];
	ld.local.u32 	%r1925, [%rd4];
	// inline asm
	prmt.b32 %r9159, %r1924, %r1925, %r4;
	// inline asm
	ld.local.u32 	%r1928, [%rd4];
	ld.local.u32 	%r1929, [%rd3+12];
	// inline asm
	prmt.b32 %r9160, %r1928, %r1929, %r4;
	// inline asm
	ld.local.u32 	%r1932, [%rd3+12];
	ld.local.u32 	%r1933, [%rd3+8];
	// inline asm
	prmt.b32 %r9161, %r1932, %r1933, %r4;
	// inline asm
	ld.local.u32 	%r1936, [%rd3+8];
	ld.local.u32 	%r1937, [%rd3+4];
	// inline asm
	prmt.b32 %r9162, %r1936, %r1937, %r4;
	// inline asm
	ld.local.u32 	%r1940, [%rd3+4];
	ld.local.u32 	%r1941, [%rd3];
	// inline asm
	prmt.b32 %r1939, %r1940, %r1941, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1939;
	ld.local.u32 	%r1944, [%rd3];
	ld.local.u32 	%r1945, [%rd2+12];
	// inline asm
	prmt.b32 %r1943, %r1944, %r1945, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1943;
	ld.local.u32 	%r1948, [%rd2+12];
	ld.local.u32 	%r1949, [%rd2+8];
	// inline asm
	prmt.b32 %r1947, %r1948, %r1949, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1947;
	ld.local.u32 	%r1952, [%rd2+8];
	ld.local.u32 	%r1953, [%rd2+4];
	// inline asm
	prmt.b32 %r1951, %r1952, %r1953, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1951;
	ld.local.u32 	%r1956, [%rd2+4];
	ld.local.u32 	%r1957, [%rd2];
	// inline asm
	prmt.b32 %r1955, %r1956, %r1957, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r1955;
	ld.local.u32 	%r1960, [%rd2];
	ld.local.u32 	%r1961, [%rd1+12];
	// inline asm
	prmt.b32 %r1959, %r1960, %r1961, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r1959;
	ld.local.u32 	%r1964, [%rd1+12];
	ld.local.u32 	%r1965, [%rd1+8];
	// inline asm
	prmt.b32 %r1963, %r1964, %r1965, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r1963;
	ld.local.u32 	%r1968, [%rd1+8];
	ld.local.u32 	%r1969, [%rd1+4];
	// inline asm
	prmt.b32 %r1967, %r1968, %r1969, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r1967;
	ld.local.u32 	%r1972, [%rd1+4];
	ld.local.u32 	%r1973, [%rd1];
	// inline asm
	prmt.b32 %r1971, %r1972, %r1973, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r1971;
	ld.local.u32 	%r1976, [%rd1];
	// inline asm
	prmt.b32 %r1975, %r1976, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r1975;
	st.local.u32 	[%rd6+4], %r9158;
	st.local.u32 	[%rd6], %r9158;
	st.local.u32 	[%rd5+12], %r9158;
	st.local.u32 	[%rd5+8], %r9158;
	st.local.u32 	[%rd5+4], %r9158;
	st.local.u32 	[%rd5], %r9158;
	st.local.u32 	[%rd4+12], %r9158;
	st.local.u32 	[%rd4+8], %r9158;
	st.local.u32 	[%rd4+4], %r9158;
	st.local.u32 	[%rd4], %r9158;
	st.local.u32 	[%rd3+12], %r9158;
	st.local.u32 	[%rd3+8], %r9158;
	st.local.u32 	[%rd3+4], %r9158;
	st.local.u32 	[%rd3], %r9158;
	st.local.u32 	[%rd2+12], %r9158;
	st.local.u32 	[%rd2+8], %r9158;
	st.local.u32 	[%rd2+4], %r9158;
	st.local.u32 	[%rd2], %r9158;
	st.local.u32 	[%rd1+12], %r9158;
	st.local.u32 	[%rd1+8], %r9158;
	mov.u64 	%rd188, 0;
	st.local.u32 	[%rd1+4], %rd188;
	st.local.u32 	[%rd1], %rd188;
	mov.u32 	%r9179, %r9158;
	bra.uni 	BB0_84;

BB0_122:
	setp.eq.s32	%p78, %r3, 14;
	@%p78 bra 	BB0_164;
	bra.uni 	BB0_123;

BB0_164:
	ld.local.u32 	%r6836, [%rd5+4];
	ld.local.u32 	%r6837, [%rd5];
	// inline asm
	prmt.b32 %r6835, %r6836, %r6837, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6835;
	ld.local.u32 	%r6840, [%rd5];
	ld.local.u32 	%r6841, [%rd4+12];
	// inline asm
	prmt.b32 %r6839, %r6840, %r6841, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6839;
	ld.local.u32 	%r6844, [%rd4+12];
	ld.local.u32 	%r6845, [%rd4+8];
	// inline asm
	prmt.b32 %r6843, %r6844, %r6845, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6843;
	ld.local.u32 	%r6848, [%rd4+8];
	ld.local.u32 	%r6849, [%rd4+4];
	// inline asm
	prmt.b32 %r6847, %r6848, %r6849, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6847;
	ld.local.u32 	%r6852, [%rd4+4];
	ld.local.u32 	%r6853, [%rd4];
	// inline asm
	prmt.b32 %r6851, %r6852, %r6853, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6851;
	ld.local.u32 	%r6856, [%rd4];
	ld.local.u32 	%r6857, [%rd3+12];
	// inline asm
	prmt.b32 %r6855, %r6856, %r6857, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6855;
	ld.local.u32 	%r6860, [%rd3+12];
	ld.local.u32 	%r6861, [%rd3+8];
	// inline asm
	prmt.b32 %r6859, %r6860, %r6861, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6859;
	ld.local.u32 	%r6864, [%rd3+8];
	ld.local.u32 	%r6865, [%rd3+4];
	// inline asm
	prmt.b32 %r6863, %r6864, %r6865, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6863;
	ld.local.u32 	%r6868, [%rd3+4];
	ld.local.u32 	%r6869, [%rd3];
	// inline asm
	prmt.b32 %r6867, %r6868, %r6869, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6867;
	ld.local.u32 	%r6872, [%rd3];
	ld.local.u32 	%r6873, [%rd2+12];
	// inline asm
	prmt.b32 %r6871, %r6872, %r6873, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6871;
	ld.local.u32 	%r6876, [%rd2+12];
	ld.local.u32 	%r6877, [%rd2+8];
	// inline asm
	prmt.b32 %r6875, %r6876, %r6877, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6875;
	ld.local.u32 	%r6880, [%rd2+8];
	ld.local.u32 	%r6881, [%rd2+4];
	// inline asm
	prmt.b32 %r6879, %r6880, %r6881, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6879;
	ld.local.u32 	%r6884, [%rd2+4];
	ld.local.u32 	%r6885, [%rd2];
	// inline asm
	prmt.b32 %r6883, %r6884, %r6885, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r6883;
	ld.local.u32 	%r6888, [%rd2];
	ld.local.u32 	%r6889, [%rd1+12];
	// inline asm
	prmt.b32 %r6887, %r6888, %r6889, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r6887;
	ld.local.u32 	%r6892, [%rd1+12];
	ld.local.u32 	%r6893, [%rd1+8];
	// inline asm
	prmt.b32 %r6891, %r6892, %r6893, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r6891;
	ld.local.u32 	%r6896, [%rd1+8];
	ld.local.u32 	%r6897, [%rd1+4];
	// inline asm
	prmt.b32 %r6895, %r6896, %r6897, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r6895;
	ld.local.u32 	%r6900, [%rd1+4];
	ld.local.u32 	%r6901, [%rd1];
	// inline asm
	prmt.b32 %r6899, %r6900, %r6901, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r6899;
	ld.local.u32 	%r6904, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r6903, %r6904, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r6903;
	st.local.u32 	[%rd4+4], %r9192;
	st.local.u32 	[%rd4], %r9192;
	st.local.u32 	[%rd3+12], %r9192;
	st.local.u32 	[%rd3+8], %r9192;
	st.local.u32 	[%rd3+4], %r9192;
	st.local.u32 	[%rd3], %r9192;
	st.local.u32 	[%rd2+12], %r9192;
	st.local.u32 	[%rd2+8], %r9192;
	st.local.u32 	[%rd2+4], %r9192;
	st.local.u32 	[%rd2], %r9192;
	st.local.u32 	[%rd1+12], %r9192;
	st.local.u32 	[%rd1+8], %r9192;
	mov.u64 	%rd1244, 0;
	st.local.u32 	[%rd1+4], %rd1244;
	st.local.u32 	[%rd1], %rd1244;
	bra.uni 	BB0_173;

BB0_32:
	setp.eq.s32	%p30, %r3, 14;
	@%p30 bra 	BB0_74;
	bra.uni 	BB0_33;

BB0_74:
	ld.local.u32 	%r3013, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9172, %r9158, %r3013, %r4;
	// inline asm
	ld.local.u32 	%r3016, [%rd8+12];
	ld.local.u32 	%r3017, [%rd8+8];
	// inline asm
	prmt.b32 %r9173, %r3016, %r3017, %r4;
	// inline asm
	ld.local.u32 	%r3020, [%rd8+8];
	ld.local.u32 	%r3021, [%rd8+4];
	// inline asm
	prmt.b32 %r9174, %r3020, %r3021, %r4;
	// inline asm
	ld.local.u32 	%r3024, [%rd8+4];
	ld.local.u32 	%r3025, [%rd8];
	// inline asm
	prmt.b32 %r9167, %r3024, %r3025, %r4;
	// inline asm
	ld.local.u32 	%r3028, [%rd8];
	ld.local.u32 	%r3029, [%rd7+12];
	// inline asm
	prmt.b32 %r9168, %r3028, %r3029, %r4;
	// inline asm
	ld.local.u32 	%r3032, [%rd7+12];
	ld.local.u32 	%r3033, [%rd7+8];
	// inline asm
	prmt.b32 %r9169, %r3032, %r3033, %r4;
	// inline asm
	ld.local.u32 	%r3036, [%rd7+8];
	ld.local.u32 	%r3037, [%rd7+4];
	// inline asm
	prmt.b32 %r9170, %r3036, %r3037, %r4;
	// inline asm
	ld.local.u32 	%r3040, [%rd7+4];
	ld.local.u32 	%r3041, [%rd7];
	// inline asm
	prmt.b32 %r9163, %r3040, %r3041, %r4;
	// inline asm
	ld.local.u32 	%r3044, [%rd7];
	ld.local.u32 	%r3045, [%rd6+12];
	// inline asm
	prmt.b32 %r9164, %r3044, %r3045, %r4;
	// inline asm
	ld.local.u32 	%r3048, [%rd6+12];
	ld.local.u32 	%r3049, [%rd6+8];
	// inline asm
	prmt.b32 %r9165, %r3048, %r3049, %r4;
	// inline asm
	ld.local.u32 	%r3052, [%rd6+8];
	ld.local.u32 	%r3053, [%rd6+4];
	// inline asm
	prmt.b32 %r9166, %r3052, %r3053, %r4;
	// inline asm
	ld.local.u32 	%r3056, [%rd6+4];
	ld.local.u32 	%r3057, [%rd6];
	// inline asm
	prmt.b32 %r9159, %r3056, %r3057, %r4;
	// inline asm
	ld.local.u32 	%r3060, [%rd6];
	ld.local.u32 	%r3061, [%rd5+12];
	// inline asm
	prmt.b32 %r9160, %r3060, %r3061, %r4;
	// inline asm
	ld.local.u32 	%r3064, [%rd5+12];
	ld.local.u32 	%r3065, [%rd5+8];
	// inline asm
	prmt.b32 %r9161, %r3064, %r3065, %r4;
	// inline asm
	ld.local.u32 	%r3068, [%rd5+8];
	ld.local.u32 	%r3069, [%rd5+4];
	// inline asm
	prmt.b32 %r9162, %r3068, %r3069, %r4;
	// inline asm
	ld.local.u32 	%r3072, [%rd5+4];
	ld.local.u32 	%r3073, [%rd5];
	// inline asm
	prmt.b32 %r3071, %r3072, %r3073, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3071;
	ld.local.u32 	%r3076, [%rd5];
	ld.local.u32 	%r3077, [%rd4+12];
	// inline asm
	prmt.b32 %r3075, %r3076, %r3077, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3075;
	ld.local.u32 	%r3080, [%rd4+12];
	ld.local.u32 	%r3081, [%rd4+8];
	// inline asm
	prmt.b32 %r3079, %r3080, %r3081, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3079;
	ld.local.u32 	%r3084, [%rd4+8];
	ld.local.u32 	%r3085, [%rd4+4];
	// inline asm
	prmt.b32 %r3083, %r3084, %r3085, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3083;
	ld.local.u32 	%r3088, [%rd4+4];
	ld.local.u32 	%r3089, [%rd4];
	// inline asm
	prmt.b32 %r3087, %r3088, %r3089, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3087;
	ld.local.u32 	%r3092, [%rd4];
	ld.local.u32 	%r3093, [%rd3+12];
	// inline asm
	prmt.b32 %r3091, %r3092, %r3093, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3091;
	ld.local.u32 	%r3096, [%rd3+12];
	ld.local.u32 	%r3097, [%rd3+8];
	// inline asm
	prmt.b32 %r3095, %r3096, %r3097, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3095;
	ld.local.u32 	%r3100, [%rd3+8];
	ld.local.u32 	%r3101, [%rd3+4];
	// inline asm
	prmt.b32 %r3099, %r3100, %r3101, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3099;
	ld.local.u32 	%r3104, [%rd3+4];
	ld.local.u32 	%r3105, [%rd3];
	// inline asm
	prmt.b32 %r3103, %r3104, %r3105, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3103;
	ld.local.u32 	%r3108, [%rd3];
	ld.local.u32 	%r3109, [%rd2+12];
	// inline asm
	prmt.b32 %r3107, %r3108, %r3109, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3107;
	ld.local.u32 	%r3112, [%rd2+12];
	ld.local.u32 	%r3113, [%rd2+8];
	// inline asm
	prmt.b32 %r3111, %r3112, %r3113, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3111;
	ld.local.u32 	%r3116, [%rd2+8];
	ld.local.u32 	%r3117, [%rd2+4];
	// inline asm
	prmt.b32 %r3115, %r3116, %r3117, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3115;
	ld.local.u32 	%r3120, [%rd2+4];
	ld.local.u32 	%r3121, [%rd2];
	// inline asm
	prmt.b32 %r3119, %r3120, %r3121, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3119;
	ld.local.u32 	%r3124, [%rd2];
	ld.local.u32 	%r3125, [%rd1+12];
	// inline asm
	prmt.b32 %r3123, %r3124, %r3125, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3123;
	ld.local.u32 	%r3128, [%rd1+12];
	ld.local.u32 	%r3129, [%rd1+8];
	// inline asm
	prmt.b32 %r3127, %r3128, %r3129, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3127;
	ld.local.u32 	%r3132, [%rd1+8];
	ld.local.u32 	%r3133, [%rd1+4];
	// inline asm
	prmt.b32 %r3131, %r3132, %r3133, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3131;
	ld.local.u32 	%r3136, [%rd1+4];
	ld.local.u32 	%r3137, [%rd1];
	// inline asm
	prmt.b32 %r3135, %r3136, %r3137, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3135;
	ld.local.u32 	%r3140, [%rd1];
	// inline asm
	prmt.b32 %r3139, %r3140, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3139;
	st.local.u32 	[%rd4+4], %r9158;
	st.local.u32 	[%rd4], %r9158;
	st.local.u32 	[%rd3+12], %r9158;
	st.local.u32 	[%rd3+8], %r9158;
	st.local.u32 	[%rd3+4], %r9158;
	st.local.u32 	[%rd3], %r9158;
	st.local.u32 	[%rd2+12], %r9158;
	st.local.u32 	[%rd2+8], %r9158;
	st.local.u32 	[%rd2+4], %r9158;
	st.local.u32 	[%rd2], %r9158;
	st.local.u32 	[%rd1+12], %r9158;
	st.local.u32 	[%rd1+8], %r9158;
	mov.u64 	%rd196, 0;
	st.local.u32 	[%rd1+4], %rd196;
	st.local.u32 	[%rd1], %rd196;
	mov.u32 	%r9171, %r9158;
	bra.uni 	BB0_82;

BB0_153:
	setp.eq.s32	%p55, %r3, 30;
	@%p55 bra 	BB0_156;
	bra.uni 	BB0_154;

BB0_156:
	ld.local.u32 	%r6212, [%rd1+4];
	ld.local.u32 	%r6213, [%rd1];
	// inline asm
	prmt.b32 %r6211, %r6212, %r6213, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6211;
	ld.local.u32 	%r6216, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r6215, %r6216, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6215;
	st.local.u32 	[%rd8+4], %r9192;
	st.local.u32 	[%rd8], %r9192;
	st.local.u32 	[%rd7+12], %r9192;
	st.local.u32 	[%rd7+8], %r9192;
	st.local.u32 	[%rd7+4], %r9192;
	st.local.u32 	[%rd7], %r9192;
	st.local.u32 	[%rd6+12], %r9192;
	st.local.u32 	[%rd6+8], %r9192;
	st.local.u32 	[%rd6+4], %r9192;
	st.local.u32 	[%rd6], %r9192;
	st.local.u32 	[%rd5+12], %r9192;
	st.local.u32 	[%rd5+8], %r9192;
	st.local.u32 	[%rd5+4], %r9192;
	st.local.u32 	[%rd5], %r9192;
	st.local.u32 	[%rd4+12], %r9192;
	st.local.u32 	[%rd4+8], %r9192;
	st.local.u32 	[%rd4+4], %r9192;
	st.local.u32 	[%rd4], %r9192;
	st.local.u32 	[%rd3+12], %r9192;
	st.local.u32 	[%rd3+8], %r9192;
	st.local.u32 	[%rd3+4], %r9192;
	st.local.u32 	[%rd3], %r9192;
	st.local.u32 	[%rd2+12], %r9192;
	st.local.u32 	[%rd2+8], %r9192;
	st.local.u32 	[%rd2+4], %r9192;
	st.local.u32 	[%rd2], %r9192;
	st.local.u32 	[%rd1+12], %r9192;
	st.local.u32 	[%rd1+8], %r9192;
	mov.u64 	%rd1228, 0;
	st.local.u32 	[%rd1+4], %rd1228;
	st.local.u32 	[%rd1], %rd1228;
	bra.uni 	BB0_173;

BB0_63:
	setp.eq.s32	%p7, %r3, 30;
	@%p7 bra 	BB0_66;
	bra.uni 	BB0_64;

BB0_66:
	ld.local.u32 	%r749, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9188, %r9158, %r749, %r4;
	// inline asm
	ld.local.u32 	%r752, [%rd8+12];
	ld.local.u32 	%r753, [%rd8+8];
	// inline asm
	prmt.b32 %r9189, %r752, %r753, %r4;
	// inline asm
	ld.local.u32 	%r756, [%rd8+8];
	ld.local.u32 	%r757, [%rd8+4];
	// inline asm
	prmt.b32 %r9190, %r756, %r757, %r4;
	// inline asm
	ld.local.u32 	%r760, [%rd8+4];
	ld.local.u32 	%r761, [%rd8];
	// inline asm
	prmt.b32 %r9183, %r760, %r761, %r4;
	// inline asm
	ld.local.u32 	%r764, [%rd8];
	ld.local.u32 	%r765, [%rd7+12];
	// inline asm
	prmt.b32 %r9184, %r764, %r765, %r4;
	// inline asm
	ld.local.u32 	%r768, [%rd7+12];
	ld.local.u32 	%r769, [%rd7+8];
	// inline asm
	prmt.b32 %r9185, %r768, %r769, %r4;
	// inline asm
	ld.local.u32 	%r772, [%rd7+8];
	ld.local.u32 	%r773, [%rd7+4];
	// inline asm
	prmt.b32 %r9186, %r772, %r773, %r4;
	// inline asm
	ld.local.u32 	%r776, [%rd7+4];
	ld.local.u32 	%r777, [%rd7];
	// inline asm
	prmt.b32 %r9179, %r776, %r777, %r4;
	// inline asm
	ld.local.u32 	%r780, [%rd7];
	ld.local.u32 	%r781, [%rd6+12];
	// inline asm
	prmt.b32 %r9180, %r780, %r781, %r4;
	// inline asm
	ld.local.u32 	%r784, [%rd6+12];
	ld.local.u32 	%r785, [%rd6+8];
	// inline asm
	prmt.b32 %r9181, %r784, %r785, %r4;
	// inline asm
	ld.local.u32 	%r788, [%rd6+8];
	ld.local.u32 	%r789, [%rd6+4];
	// inline asm
	prmt.b32 %r9182, %r788, %r789, %r4;
	// inline asm
	ld.local.u32 	%r792, [%rd6+4];
	ld.local.u32 	%r793, [%rd6];
	// inline asm
	prmt.b32 %r9175, %r792, %r793, %r4;
	// inline asm
	ld.local.u32 	%r796, [%rd6];
	ld.local.u32 	%r797, [%rd5+12];
	// inline asm
	prmt.b32 %r9176, %r796, %r797, %r4;
	// inline asm
	ld.local.u32 	%r800, [%rd5+12];
	ld.local.u32 	%r801, [%rd5+8];
	// inline asm
	prmt.b32 %r9177, %r800, %r801, %r4;
	// inline asm
	ld.local.u32 	%r804, [%rd5+8];
	ld.local.u32 	%r805, [%rd5+4];
	// inline asm
	prmt.b32 %r9178, %r804, %r805, %r4;
	// inline asm
	ld.local.u32 	%r808, [%rd5+4];
	ld.local.u32 	%r809, [%rd5];
	// inline asm
	prmt.b32 %r9171, %r808, %r809, %r4;
	// inline asm
	ld.local.u32 	%r812, [%rd5];
	ld.local.u32 	%r813, [%rd4+12];
	// inline asm
	prmt.b32 %r9172, %r812, %r813, %r4;
	// inline asm
	ld.local.u32 	%r816, [%rd4+12];
	ld.local.u32 	%r817, [%rd4+8];
	// inline asm
	prmt.b32 %r9173, %r816, %r817, %r4;
	// inline asm
	ld.local.u32 	%r820, [%rd4+8];
	ld.local.u32 	%r821, [%rd4+4];
	// inline asm
	prmt.b32 %r9174, %r820, %r821, %r4;
	// inline asm
	ld.local.u32 	%r824, [%rd4+4];
	ld.local.u32 	%r825, [%rd4];
	// inline asm
	prmt.b32 %r9167, %r824, %r825, %r4;
	// inline asm
	ld.local.u32 	%r828, [%rd4];
	ld.local.u32 	%r829, [%rd3+12];
	// inline asm
	prmt.b32 %r9168, %r828, %r829, %r4;
	// inline asm
	ld.local.u32 	%r832, [%rd3+12];
	ld.local.u32 	%r833, [%rd3+8];
	// inline asm
	prmt.b32 %r9169, %r832, %r833, %r4;
	// inline asm
	ld.local.u32 	%r836, [%rd3+8];
	ld.local.u32 	%r837, [%rd3+4];
	// inline asm
	prmt.b32 %r9170, %r836, %r837, %r4;
	// inline asm
	ld.local.u32 	%r840, [%rd3+4];
	ld.local.u32 	%r841, [%rd3];
	// inline asm
	prmt.b32 %r9163, %r840, %r841, %r4;
	// inline asm
	ld.local.u32 	%r844, [%rd3];
	ld.local.u32 	%r845, [%rd2+12];
	// inline asm
	prmt.b32 %r9164, %r844, %r845, %r4;
	// inline asm
	ld.local.u32 	%r848, [%rd2+12];
	ld.local.u32 	%r849, [%rd2+8];
	// inline asm
	prmt.b32 %r9165, %r848, %r849, %r4;
	// inline asm
	ld.local.u32 	%r852, [%rd2+8];
	ld.local.u32 	%r853, [%rd2+4];
	// inline asm
	prmt.b32 %r9166, %r852, %r853, %r4;
	// inline asm
	ld.local.u32 	%r856, [%rd2+4];
	ld.local.u32 	%r857, [%rd2];
	// inline asm
	prmt.b32 %r9159, %r856, %r857, %r4;
	// inline asm
	ld.local.u32 	%r860, [%rd2];
	ld.local.u32 	%r861, [%rd1+12];
	// inline asm
	prmt.b32 %r9160, %r860, %r861, %r4;
	// inline asm
	ld.local.u32 	%r864, [%rd1+12];
	ld.local.u32 	%r865, [%rd1+8];
	// inline asm
	prmt.b32 %r9161, %r864, %r865, %r4;
	// inline asm
	ld.local.u32 	%r868, [%rd1+8];
	ld.local.u32 	%r869, [%rd1+4];
	// inline asm
	prmt.b32 %r9162, %r868, %r869, %r4;
	// inline asm
	ld.local.u32 	%r872, [%rd1+4];
	ld.local.u32 	%r873, [%rd1];
	// inline asm
	prmt.b32 %r871, %r872, %r873, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r871;
	ld.local.u32 	%r876, [%rd1];
	// inline asm
	prmt.b32 %r875, %r876, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r875;
	st.local.u32 	[%rd8+4], %r9158;
	st.local.u32 	[%rd8], %r9158;
	st.local.u32 	[%rd7+12], %r9158;
	st.local.u32 	[%rd7+8], %r9158;
	st.local.u32 	[%rd7+4], %r9158;
	st.local.u32 	[%rd7], %r9158;
	st.local.u32 	[%rd6+12], %r9158;
	st.local.u32 	[%rd6+8], %r9158;
	st.local.u32 	[%rd6+4], %r9158;
	st.local.u32 	[%rd6], %r9158;
	st.local.u32 	[%rd5+12], %r9158;
	st.local.u32 	[%rd5+8], %r9158;
	st.local.u32 	[%rd5+4], %r9158;
	st.local.u32 	[%rd5], %r9158;
	st.local.u32 	[%rd4+12], %r9158;
	st.local.u32 	[%rd4+8], %r9158;
	st.local.u32 	[%rd4+4], %r9158;
	st.local.u32 	[%rd4], %r9158;
	st.local.u32 	[%rd3+12], %r9158;
	st.local.u32 	[%rd3+8], %r9158;
	st.local.u32 	[%rd3+4], %r9158;
	st.local.u32 	[%rd3], %r9158;
	st.local.u32 	[%rd2+12], %r9158;
	st.local.u32 	[%rd2+8], %r9158;
	st.local.u32 	[%rd2+4], %r9158;
	st.local.u32 	[%rd2], %r9158;
	st.local.u32 	[%rd1+12], %r9158;
	st.local.u32 	[%rd1+8], %r9158;
	mov.u64 	%rd180, 0;
	st.local.u32 	[%rd1+4], %rd180;
	st.local.u32 	[%rd1], %rd180;
	mov.u32 	%r9187, %r9158;
	bra.uni 	BB0_90;

BB0_98:
	setp.eq.s32	%p97, %r3, 1;
	@%p97 bra 	BB0_99;
	bra.uni 	BB0_172;

BB0_99:
	ld.local.u32 	%r8097, [%rd8+8];
	ld.local.u32 	%r8098, [%rd8+4];
	// inline asm
	prmt.b32 %r8096, %r8097, %r8098, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r8096;
	ld.local.u32 	%r8101, [%rd8+4];
	ld.local.u32 	%r8102, [%rd8];
	// inline asm
	prmt.b32 %r8100, %r8101, %r8102, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r8100;
	ld.local.u32 	%r8105, [%rd8];
	ld.local.u32 	%r8106, [%rd7+12];
	// inline asm
	prmt.b32 %r8104, %r8105, %r8106, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r8104;
	ld.local.u32 	%r8109, [%rd7+12];
	ld.local.u32 	%r8110, [%rd7+8];
	// inline asm
	prmt.b32 %r8108, %r8109, %r8110, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r8108;
	ld.local.u32 	%r8113, [%rd7+8];
	ld.local.u32 	%r8114, [%rd7+4];
	// inline asm
	prmt.b32 %r8112, %r8113, %r8114, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r8112;
	ld.local.u32 	%r8117, [%rd7+4];
	ld.local.u32 	%r8118, [%rd7];
	// inline asm
	prmt.b32 %r8116, %r8117, %r8118, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r8116;
	ld.local.u32 	%r8121, [%rd7];
	ld.local.u32 	%r8122, [%rd6+12];
	// inline asm
	prmt.b32 %r8120, %r8121, %r8122, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r8120;
	ld.local.u32 	%r8125, [%rd6+12];
	ld.local.u32 	%r8126, [%rd6+8];
	// inline asm
	prmt.b32 %r8124, %r8125, %r8126, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r8124;
	ld.local.u32 	%r8129, [%rd6+8];
	ld.local.u32 	%r8130, [%rd6+4];
	// inline asm
	prmt.b32 %r8128, %r8129, %r8130, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r8128;
	ld.local.u32 	%r8133, [%rd6+4];
	ld.local.u32 	%r8134, [%rd6];
	// inline asm
	prmt.b32 %r8132, %r8133, %r8134, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r8132;
	ld.local.u32 	%r8137, [%rd6];
	ld.local.u32 	%r8138, [%rd5+12];
	// inline asm
	prmt.b32 %r8136, %r8137, %r8138, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r8136;
	ld.local.u32 	%r8141, [%rd5+12];
	ld.local.u32 	%r8142, [%rd5+8];
	// inline asm
	prmt.b32 %r8140, %r8141, %r8142, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r8140;
	ld.local.u32 	%r8145, [%rd5+8];
	ld.local.u32 	%r8146, [%rd5+4];
	// inline asm
	prmt.b32 %r8144, %r8145, %r8146, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r8144;
	ld.local.u32 	%r8149, [%rd5+4];
	ld.local.u32 	%r8150, [%rd5];
	// inline asm
	prmt.b32 %r8148, %r8149, %r8150, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r8148;
	ld.local.u32 	%r8153, [%rd5];
	ld.local.u32 	%r8154, [%rd4+12];
	// inline asm
	prmt.b32 %r8152, %r8153, %r8154, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r8152;
	ld.local.u32 	%r8157, [%rd4+12];
	ld.local.u32 	%r8158, [%rd4+8];
	// inline asm
	prmt.b32 %r8156, %r8157, %r8158, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r8156;
	ld.local.u32 	%r8161, [%rd4+8];
	ld.local.u32 	%r8162, [%rd4+4];
	// inline asm
	prmt.b32 %r8160, %r8161, %r8162, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r8160;
	ld.local.u32 	%r8165, [%rd4+4];
	ld.local.u32 	%r8166, [%rd4];
	// inline asm
	prmt.b32 %r8164, %r8165, %r8166, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r8164;
	ld.local.u32 	%r8169, [%rd4];
	ld.local.u32 	%r8170, [%rd3+12];
	// inline asm
	prmt.b32 %r8168, %r8169, %r8170, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r8168;
	ld.local.u32 	%r8173, [%rd3+12];
	ld.local.u32 	%r8174, [%rd3+8];
	// inline asm
	prmt.b32 %r8172, %r8173, %r8174, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r8172;
	ld.local.u32 	%r8177, [%rd3+8];
	ld.local.u32 	%r8178, [%rd3+4];
	// inline asm
	prmt.b32 %r8176, %r8177, %r8178, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r8176;
	ld.local.u32 	%r8181, [%rd3+4];
	ld.local.u32 	%r8182, [%rd3];
	// inline asm
	prmt.b32 %r8180, %r8181, %r8182, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r8180;
	ld.local.u32 	%r8185, [%rd3];
	ld.local.u32 	%r8186, [%rd2+12];
	// inline asm
	prmt.b32 %r8184, %r8185, %r8186, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r8184;
	ld.local.u32 	%r8189, [%rd2+12];
	ld.local.u32 	%r8190, [%rd2+8];
	// inline asm
	prmt.b32 %r8188, %r8189, %r8190, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r8188;
	ld.local.u32 	%r8193, [%rd2+8];
	ld.local.u32 	%r8194, [%rd2+4];
	// inline asm
	prmt.b32 %r8192, %r8193, %r8194, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r8192;
	ld.local.u32 	%r8197, [%rd2+4];
	ld.local.u32 	%r8198, [%rd2];
	// inline asm
	prmt.b32 %r8196, %r8197, %r8198, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r8196;
	ld.local.u32 	%r8201, [%rd2];
	ld.local.u32 	%r8202, [%rd1+12];
	// inline asm
	prmt.b32 %r8200, %r8201, %r8202, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r8200;
	ld.local.u32 	%r8205, [%rd1+12];
	ld.local.u32 	%r8206, [%rd1+8];
	// inline asm
	prmt.b32 %r8204, %r8205, %r8206, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r8204;
	ld.local.u32 	%r8209, [%rd1+8];
	ld.local.u32 	%r8210, [%rd1+4];
	// inline asm
	prmt.b32 %r8208, %r8209, %r8210, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r8208;
	ld.local.u32 	%r8213, [%rd1+4];
	ld.local.u32 	%r8214, [%rd1];
	// inline asm
	prmt.b32 %r8212, %r8213, %r8214, %r4;
	// inline asm
	st.local.u32 	[%rd1+8], %r8212;
	ld.local.u32 	%r8217, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r8216, %r8217, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd1+4], %r8216;
	st.local.u32 	[%rd1], %r9192;
	bra.uni 	BB0_173;

BB0_7:
	setp.eq.s32	%p49, %r3, 1;
	@%p49 bra 	BB0_8;
	bra.uni 	BB0_88;

BB0_8:
	ld.local.u32 	%r5041, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9161, %r9158, %r5041, %r4;
	// inline asm
	ld.local.u32 	%r5044, [%rd8+12];
	ld.local.u32 	%r5045, [%rd8+8];
	// inline asm
	prmt.b32 %r9162, %r5044, %r5045, %r4;
	// inline asm
	ld.local.u32 	%r5048, [%rd8+8];
	ld.local.u32 	%r5049, [%rd8+4];
	// inline asm
	prmt.b32 %r5047, %r5048, %r5049, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r5047;
	ld.local.u32 	%r5052, [%rd8+4];
	ld.local.u32 	%r5053, [%rd8];
	// inline asm
	prmt.b32 %r5051, %r5052, %r5053, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r5051;
	ld.local.u32 	%r5056, [%rd8];
	ld.local.u32 	%r5057, [%rd7+12];
	// inline asm
	prmt.b32 %r5055, %r5056, %r5057, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r5055;
	ld.local.u32 	%r5060, [%rd7+12];
	ld.local.u32 	%r5061, [%rd7+8];
	// inline asm
	prmt.b32 %r5059, %r5060, %r5061, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r5059;
	ld.local.u32 	%r5064, [%rd7+8];
	ld.local.u32 	%r5065, [%rd7+4];
	// inline asm
	prmt.b32 %r5063, %r5064, %r5065, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r5063;
	ld.local.u32 	%r5068, [%rd7+4];
	ld.local.u32 	%r5069, [%rd7];
	// inline asm
	prmt.b32 %r5067, %r5068, %r5069, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r5067;
	ld.local.u32 	%r5072, [%rd7];
	ld.local.u32 	%r5073, [%rd6+12];
	// inline asm
	prmt.b32 %r5071, %r5072, %r5073, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r5071;
	ld.local.u32 	%r5076, [%rd6+12];
	ld.local.u32 	%r5077, [%rd6+8];
	// inline asm
	prmt.b32 %r5075, %r5076, %r5077, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r5075;
	ld.local.u32 	%r5080, [%rd6+8];
	ld.local.u32 	%r5081, [%rd6+4];
	// inline asm
	prmt.b32 %r5079, %r5080, %r5081, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r5079;
	ld.local.u32 	%r5084, [%rd6+4];
	ld.local.u32 	%r5085, [%rd6];
	// inline asm
	prmt.b32 %r5083, %r5084, %r5085, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r5083;
	ld.local.u32 	%r5088, [%rd6];
	ld.local.u32 	%r5089, [%rd5+12];
	// inline asm
	prmt.b32 %r5087, %r5088, %r5089, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r5087;
	ld.local.u32 	%r5092, [%rd5+12];
	ld.local.u32 	%r5093, [%rd5+8];
	// inline asm
	prmt.b32 %r5091, %r5092, %r5093, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r5091;
	ld.local.u32 	%r5096, [%rd5+8];
	ld.local.u32 	%r5097, [%rd5+4];
	// inline asm
	prmt.b32 %r5095, %r5096, %r5097, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r5095;
	ld.local.u32 	%r5100, [%rd5+4];
	ld.local.u32 	%r5101, [%rd5];
	// inline asm
	prmt.b32 %r5099, %r5100, %r5101, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r5099;
	ld.local.u32 	%r5104, [%rd5];
	ld.local.u32 	%r5105, [%rd4+12];
	// inline asm
	prmt.b32 %r5103, %r5104, %r5105, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r5103;
	ld.local.u32 	%r5108, [%rd4+12];
	ld.local.u32 	%r5109, [%rd4+8];
	// inline asm
	prmt.b32 %r5107, %r5108, %r5109, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r5107;
	ld.local.u32 	%r5112, [%rd4+8];
	ld.local.u32 	%r5113, [%rd4+4];
	// inline asm
	prmt.b32 %r5111, %r5112, %r5113, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r5111;
	ld.local.u32 	%r5116, [%rd4+4];
	ld.local.u32 	%r5117, [%rd4];
	// inline asm
	prmt.b32 %r5115, %r5116, %r5117, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r5115;
	ld.local.u32 	%r5120, [%rd4];
	ld.local.u32 	%r5121, [%rd3+12];
	// inline asm
	prmt.b32 %r5119, %r5120, %r5121, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r5119;
	ld.local.u32 	%r5124, [%rd3+12];
	ld.local.u32 	%r5125, [%rd3+8];
	// inline asm
	prmt.b32 %r5123, %r5124, %r5125, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r5123;
	ld.local.u32 	%r5128, [%rd3+8];
	ld.local.u32 	%r5129, [%rd3+4];
	// inline asm
	prmt.b32 %r5127, %r5128, %r5129, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r5127;
	ld.local.u32 	%r5132, [%rd3+4];
	ld.local.u32 	%r5133, [%rd3];
	// inline asm
	prmt.b32 %r5131, %r5132, %r5133, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r5131;
	ld.local.u32 	%r5136, [%rd3];
	ld.local.u32 	%r5137, [%rd2+12];
	// inline asm
	prmt.b32 %r5135, %r5136, %r5137, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r5135;
	ld.local.u32 	%r5140, [%rd2+12];
	ld.local.u32 	%r5141, [%rd2+8];
	// inline asm
	prmt.b32 %r5139, %r5140, %r5141, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r5139;
	ld.local.u32 	%r5144, [%rd2+8];
	ld.local.u32 	%r5145, [%rd2+4];
	// inline asm
	prmt.b32 %r5143, %r5144, %r5145, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r5143;
	ld.local.u32 	%r5148, [%rd2+4];
	ld.local.u32 	%r5149, [%rd2];
	// inline asm
	prmt.b32 %r5147, %r5148, %r5149, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r5147;
	ld.local.u32 	%r5152, [%rd2];
	ld.local.u32 	%r5153, [%rd1+12];
	// inline asm
	prmt.b32 %r5151, %r5152, %r5153, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r5151;
	ld.local.u32 	%r5156, [%rd1+12];
	ld.local.u32 	%r5157, [%rd1+8];
	// inline asm
	prmt.b32 %r5155, %r5156, %r5157, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r5155;
	ld.local.u32 	%r5160, [%rd1+8];
	ld.local.u32 	%r5161, [%rd1+4];
	// inline asm
	prmt.b32 %r5159, %r5160, %r5161, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r5159;
	ld.local.u32 	%r5164, [%rd1+4];
	ld.local.u32 	%r5165, [%rd1];
	// inline asm
	prmt.b32 %r5163, %r5164, %r5165, %r4;
	// inline asm
	st.local.u32 	[%rd1+8], %r5163;
	ld.local.u32 	%r5168, [%rd1];
	// inline asm
	prmt.b32 %r5167, %r5168, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd1+4], %r5167;
	st.local.u32 	[%rd1], %r9158;
	mov.u32 	%r9159, %r9158;
	mov.u32 	%r9160, %r9158;
	bra.uni 	BB0_12;

BB0_129:
	setp.eq.s32	%p74, %r3, 17;
	@%p74 bra 	BB0_130;
	bra.uni 	BB0_172;

BB0_130:
	ld.local.u32 	%r6641, [%rd4+8];
	ld.local.u32 	%r6642, [%rd4+4];
	// inline asm
	prmt.b32 %r6640, %r6641, %r6642, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6640;
	ld.local.u32 	%r6645, [%rd4+4];
	ld.local.u32 	%r6646, [%rd4];
	// inline asm
	prmt.b32 %r6644, %r6645, %r6646, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6644;
	ld.local.u32 	%r6649, [%rd4];
	ld.local.u32 	%r6650, [%rd3+12];
	// inline asm
	prmt.b32 %r6648, %r6649, %r6650, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6648;
	ld.local.u32 	%r6653, [%rd3+12];
	ld.local.u32 	%r6654, [%rd3+8];
	// inline asm
	prmt.b32 %r6652, %r6653, %r6654, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6652;
	ld.local.u32 	%r6657, [%rd3+8];
	ld.local.u32 	%r6658, [%rd3+4];
	// inline asm
	prmt.b32 %r6656, %r6657, %r6658, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6656;
	ld.local.u32 	%r6661, [%rd3+4];
	ld.local.u32 	%r6662, [%rd3];
	// inline asm
	prmt.b32 %r6660, %r6661, %r6662, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6660;
	ld.local.u32 	%r6665, [%rd3];
	ld.local.u32 	%r6666, [%rd2+12];
	// inline asm
	prmt.b32 %r6664, %r6665, %r6666, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6664;
	ld.local.u32 	%r6669, [%rd2+12];
	ld.local.u32 	%r6670, [%rd2+8];
	// inline asm
	prmt.b32 %r6668, %r6669, %r6670, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6668;
	ld.local.u32 	%r6673, [%rd2+8];
	ld.local.u32 	%r6674, [%rd2+4];
	// inline asm
	prmt.b32 %r6672, %r6673, %r6674, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6672;
	ld.local.u32 	%r6677, [%rd2+4];
	ld.local.u32 	%r6678, [%rd2];
	// inline asm
	prmt.b32 %r6676, %r6677, %r6678, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6676;
	ld.local.u32 	%r6681, [%rd2];
	ld.local.u32 	%r6682, [%rd1+12];
	// inline asm
	prmt.b32 %r6680, %r6681, %r6682, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6680;
	ld.local.u32 	%r6685, [%rd1+12];
	ld.local.u32 	%r6686, [%rd1+8];
	// inline asm
	prmt.b32 %r6684, %r6685, %r6686, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6684;
	ld.local.u32 	%r6689, [%rd1+8];
	ld.local.u32 	%r6690, [%rd1+4];
	// inline asm
	prmt.b32 %r6688, %r6689, %r6690, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r6688;
	ld.local.u32 	%r6693, [%rd1+4];
	ld.local.u32 	%r6694, [%rd1];
	// inline asm
	prmt.b32 %r6692, %r6693, %r6694, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r6692;
	ld.local.u32 	%r6697, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r6696, %r6697, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r6696;
	st.local.u32 	[%rd5], %r9192;
	st.local.u32 	[%rd4+12], %r9192;
	st.local.u32 	[%rd4+8], %r9192;
	st.local.u32 	[%rd4+4], %r9192;
	st.local.u32 	[%rd4], %r9192;
	st.local.u32 	[%rd3+12], %r9192;
	st.local.u32 	[%rd3+8], %r9192;
	st.local.u32 	[%rd3+4], %r9192;
	st.local.u32 	[%rd3], %r9192;
	st.local.u32 	[%rd2+12], %r9192;
	st.local.u32 	[%rd2+8], %r9192;
	st.local.u32 	[%rd2+4], %r9192;
	st.local.u32 	[%rd2], %r9192;
	st.local.u32 	[%rd1+12], %r9192;
	st.local.u32 	[%rd1+8], %r9192;
	mov.u64 	%rd1241, 0;
	st.local.u32 	[%rd1+4], %rd1241;
	st.local.u32 	[%rd1], %rd1241;
	bra.uni 	BB0_173;

BB0_39:
	setp.eq.s32	%p26, %r3, 17;
	@%p26 bra 	BB0_40;
	bra.uni 	BB0_88;

BB0_40:
	ld.local.u32 	%r2569, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9177, %r9158, %r2569, %r4;
	// inline asm
	ld.local.u32 	%r2572, [%rd8+12];
	ld.local.u32 	%r2573, [%rd8+8];
	// inline asm
	prmt.b32 %r9178, %r2572, %r2573, %r4;
	// inline asm
	ld.local.u32 	%r2576, [%rd8+8];
	ld.local.u32 	%r2577, [%rd8+4];
	// inline asm
	prmt.b32 %r9171, %r2576, %r2577, %r4;
	// inline asm
	ld.local.u32 	%r2580, [%rd8+4];
	ld.local.u32 	%r2581, [%rd8];
	// inline asm
	prmt.b32 %r9172, %r2580, %r2581, %r4;
	// inline asm
	ld.local.u32 	%r2584, [%rd8];
	ld.local.u32 	%r2585, [%rd7+12];
	// inline asm
	prmt.b32 %r9173, %r2584, %r2585, %r4;
	// inline asm
	ld.local.u32 	%r2588, [%rd7+12];
	ld.local.u32 	%r2589, [%rd7+8];
	// inline asm
	prmt.b32 %r9174, %r2588, %r2589, %r4;
	// inline asm
	ld.local.u32 	%r2592, [%rd7+8];
	ld.local.u32 	%r2593, [%rd7+4];
	// inline asm
	prmt.b32 %r9167, %r2592, %r2593, %r4;
	// inline asm
	ld.local.u32 	%r2596, [%rd7+4];
	ld.local.u32 	%r2597, [%rd7];
	// inline asm
	prmt.b32 %r9168, %r2596, %r2597, %r4;
	// inline asm
	ld.local.u32 	%r2600, [%rd7];
	ld.local.u32 	%r2601, [%rd6+12];
	// inline asm
	prmt.b32 %r9169, %r2600, %r2601, %r4;
	// inline asm
	ld.local.u32 	%r2604, [%rd6+12];
	ld.local.u32 	%r2605, [%rd6+8];
	// inline asm
	prmt.b32 %r9170, %r2604, %r2605, %r4;
	// inline asm
	ld.local.u32 	%r2608, [%rd6+8];
	ld.local.u32 	%r2609, [%rd6+4];
	// inline asm
	prmt.b32 %r9163, %r2608, %r2609, %r4;
	// inline asm
	ld.local.u32 	%r2612, [%rd6+4];
	ld.local.u32 	%r2613, [%rd6];
	// inline asm
	prmt.b32 %r9164, %r2612, %r2613, %r4;
	// inline asm
	ld.local.u32 	%r2616, [%rd6];
	ld.local.u32 	%r2617, [%rd5+12];
	// inline asm
	prmt.b32 %r9165, %r2616, %r2617, %r4;
	// inline asm
	ld.local.u32 	%r2620, [%rd5+12];
	ld.local.u32 	%r2621, [%rd5+8];
	// inline asm
	prmt.b32 %r9166, %r2620, %r2621, %r4;
	// inline asm
	ld.local.u32 	%r2624, [%rd5+8];
	ld.local.u32 	%r2625, [%rd5+4];
	// inline asm
	prmt.b32 %r9159, %r2624, %r2625, %r4;
	// inline asm
	ld.local.u32 	%r2628, [%rd5+4];
	ld.local.u32 	%r2629, [%rd5];
	// inline asm
	prmt.b32 %r9160, %r2628, %r2629, %r4;
	// inline asm
	ld.local.u32 	%r2632, [%rd5];
	ld.local.u32 	%r2633, [%rd4+12];
	// inline asm
	prmt.b32 %r9161, %r2632, %r2633, %r4;
	// inline asm
	ld.local.u32 	%r2636, [%rd4+12];
	ld.local.u32 	%r2637, [%rd4+8];
	// inline asm
	prmt.b32 %r9162, %r2636, %r2637, %r4;
	// inline asm
	ld.local.u32 	%r2640, [%rd4+8];
	ld.local.u32 	%r2641, [%rd4+4];
	// inline asm
	prmt.b32 %r2639, %r2640, %r2641, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2639;
	ld.local.u32 	%r2644, [%rd4+4];
	ld.local.u32 	%r2645, [%rd4];
	// inline asm
	prmt.b32 %r2643, %r2644, %r2645, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2643;
	ld.local.u32 	%r2648, [%rd4];
	ld.local.u32 	%r2649, [%rd3+12];
	// inline asm
	prmt.b32 %r2647, %r2648, %r2649, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2647;
	ld.local.u32 	%r2652, [%rd3+12];
	ld.local.u32 	%r2653, [%rd3+8];
	// inline asm
	prmt.b32 %r2651, %r2652, %r2653, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2651;
	ld.local.u32 	%r2656, [%rd3+8];
	ld.local.u32 	%r2657, [%rd3+4];
	// inline asm
	prmt.b32 %r2655, %r2656, %r2657, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2655;
	ld.local.u32 	%r2660, [%rd3+4];
	ld.local.u32 	%r2661, [%rd3];
	// inline asm
	prmt.b32 %r2659, %r2660, %r2661, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2659;
	ld.local.u32 	%r2664, [%rd3];
	ld.local.u32 	%r2665, [%rd2+12];
	// inline asm
	prmt.b32 %r2663, %r2664, %r2665, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2663;
	ld.local.u32 	%r2668, [%rd2+12];
	ld.local.u32 	%r2669, [%rd2+8];
	// inline asm
	prmt.b32 %r2667, %r2668, %r2669, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2667;
	ld.local.u32 	%r2672, [%rd2+8];
	ld.local.u32 	%r2673, [%rd2+4];
	// inline asm
	prmt.b32 %r2671, %r2672, %r2673, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2671;
	ld.local.u32 	%r2676, [%rd2+4];
	ld.local.u32 	%r2677, [%rd2];
	// inline asm
	prmt.b32 %r2675, %r2676, %r2677, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2675;
	ld.local.u32 	%r2680, [%rd2];
	ld.local.u32 	%r2681, [%rd1+12];
	// inline asm
	prmt.b32 %r2679, %r2680, %r2681, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2679;
	ld.local.u32 	%r2684, [%rd1+12];
	ld.local.u32 	%r2685, [%rd1+8];
	// inline asm
	prmt.b32 %r2683, %r2684, %r2685, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r2683;
	ld.local.u32 	%r2688, [%rd1+8];
	ld.local.u32 	%r2689, [%rd1+4];
	// inline asm
	prmt.b32 %r2687, %r2688, %r2689, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r2687;
	ld.local.u32 	%r2692, [%rd1+4];
	ld.local.u32 	%r2693, [%rd1];
	// inline asm
	prmt.b32 %r2691, %r2692, %r2693, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r2691;
	ld.local.u32 	%r2696, [%rd1];
	// inline asm
	prmt.b32 %r2695, %r2696, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r2695;
	st.local.u32 	[%rd5], %r9158;
	st.local.u32 	[%rd4+12], %r9158;
	st.local.u32 	[%rd4+8], %r9158;
	st.local.u32 	[%rd4+4], %r9158;
	st.local.u32 	[%rd4], %r9158;
	st.local.u32 	[%rd3+12], %r9158;
	st.local.u32 	[%rd3+8], %r9158;
	st.local.u32 	[%rd3+4], %r9158;
	st.local.u32 	[%rd3], %r9158;
	st.local.u32 	[%rd2+12], %r9158;
	st.local.u32 	[%rd2+8], %r9158;
	st.local.u32 	[%rd2+4], %r9158;
	st.local.u32 	[%rd2], %r9158;
	st.local.u32 	[%rd1+12], %r9158;
	st.local.u32 	[%rd1+8], %r9158;
	mov.u64 	%rd193, 0;
	st.local.u32 	[%rd1+4], %rd193;
	st.local.u32 	[%rd1], %rd193;
	mov.u32 	%r9175, %r9158;
	mov.u32 	%r9176, %r9158;
	bra.uni 	BB0_83;

BB0_113:
	setp.eq.s32	%p86, %r3, 9;
	@%p86 bra 	BB0_114;
	bra.uni 	BB0_172;

BB0_114:
	ld.local.u32 	%r7241, [%rd6+8];
	ld.local.u32 	%r7242, [%rd6+4];
	// inline asm
	prmt.b32 %r7240, %r7241, %r7242, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7240;
	ld.local.u32 	%r7245, [%rd6+4];
	ld.local.u32 	%r7246, [%rd6];
	// inline asm
	prmt.b32 %r7244, %r7245, %r7246, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7244;
	ld.local.u32 	%r7249, [%rd6];
	ld.local.u32 	%r7250, [%rd5+12];
	// inline asm
	prmt.b32 %r7248, %r7249, %r7250, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7248;
	ld.local.u32 	%r7253, [%rd5+12];
	ld.local.u32 	%r7254, [%rd5+8];
	// inline asm
	prmt.b32 %r7252, %r7253, %r7254, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7252;
	ld.local.u32 	%r7257, [%rd5+8];
	ld.local.u32 	%r7258, [%rd5+4];
	// inline asm
	prmt.b32 %r7256, %r7257, %r7258, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7256;
	ld.local.u32 	%r7261, [%rd5+4];
	ld.local.u32 	%r7262, [%rd5];
	// inline asm
	prmt.b32 %r7260, %r7261, %r7262, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7260;
	ld.local.u32 	%r7265, [%rd5];
	ld.local.u32 	%r7266, [%rd4+12];
	// inline asm
	prmt.b32 %r7264, %r7265, %r7266, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7264;
	ld.local.u32 	%r7269, [%rd4+12];
	ld.local.u32 	%r7270, [%rd4+8];
	// inline asm
	prmt.b32 %r7268, %r7269, %r7270, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7268;
	ld.local.u32 	%r7273, [%rd4+8];
	ld.local.u32 	%r7274, [%rd4+4];
	// inline asm
	prmt.b32 %r7272, %r7273, %r7274, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7272;
	ld.local.u32 	%r7277, [%rd4+4];
	ld.local.u32 	%r7278, [%rd4];
	// inline asm
	prmt.b32 %r7276, %r7277, %r7278, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7276;
	ld.local.u32 	%r7281, [%rd4];
	ld.local.u32 	%r7282, [%rd3+12];
	// inline asm
	prmt.b32 %r7280, %r7281, %r7282, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7280;
	ld.local.u32 	%r7285, [%rd3+12];
	ld.local.u32 	%r7286, [%rd3+8];
	// inline asm
	prmt.b32 %r7284, %r7285, %r7286, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7284;
	ld.local.u32 	%r7289, [%rd3+8];
	ld.local.u32 	%r7290, [%rd3+4];
	// inline asm
	prmt.b32 %r7288, %r7289, %r7290, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7288;
	ld.local.u32 	%r7293, [%rd3+4];
	ld.local.u32 	%r7294, [%rd3];
	// inline asm
	prmt.b32 %r7292, %r7293, %r7294, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7292;
	ld.local.u32 	%r7297, [%rd3];
	ld.local.u32 	%r7298, [%rd2+12];
	// inline asm
	prmt.b32 %r7296, %r7297, %r7298, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7296;
	ld.local.u32 	%r7301, [%rd2+12];
	ld.local.u32 	%r7302, [%rd2+8];
	// inline asm
	prmt.b32 %r7300, %r7301, %r7302, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7300;
	ld.local.u32 	%r7305, [%rd2+8];
	ld.local.u32 	%r7306, [%rd2+4];
	// inline asm
	prmt.b32 %r7304, %r7305, %r7306, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7304;
	ld.local.u32 	%r7309, [%rd2+4];
	ld.local.u32 	%r7310, [%rd2];
	// inline asm
	prmt.b32 %r7308, %r7309, %r7310, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7308;
	ld.local.u32 	%r7313, [%rd2];
	ld.local.u32 	%r7314, [%rd1+12];
	// inline asm
	prmt.b32 %r7312, %r7313, %r7314, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7312;
	ld.local.u32 	%r7317, [%rd1+12];
	ld.local.u32 	%r7318, [%rd1+8];
	// inline asm
	prmt.b32 %r7316, %r7317, %r7318, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7316;
	ld.local.u32 	%r7321, [%rd1+8];
	ld.local.u32 	%r7322, [%rd1+4];
	// inline asm
	prmt.b32 %r7320, %r7321, %r7322, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7320;
	ld.local.u32 	%r7325, [%rd1+4];
	ld.local.u32 	%r7326, [%rd1];
	// inline asm
	prmt.b32 %r7324, %r7325, %r7326, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7324;
	ld.local.u32 	%r7329, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r7328, %r7329, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r7328;
	st.local.u32 	[%rd3], %r9192;
	st.local.u32 	[%rd2+12], %r9192;
	st.local.u32 	[%rd2+8], %r9192;
	st.local.u32 	[%rd2+4], %r9192;
	st.local.u32 	[%rd2], %r9192;
	st.local.u32 	[%rd1+12], %r9192;
	st.local.u32 	[%rd1+8], %r9192;
	mov.u64 	%rd1249, 0;
	st.local.u32 	[%rd1+4], %rd1249;
	st.local.u32 	[%rd1], %rd1249;
	bra.uni 	BB0_173;

BB0_23:
	setp.eq.s32	%p38, %r3, 9;
	@%p38 bra 	BB0_24;
	bra.uni 	BB0_88;

BB0_24:
	ld.local.u32 	%r3773, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9169, %r9158, %r3773, %r4;
	// inline asm
	ld.local.u32 	%r3776, [%rd8+12];
	ld.local.u32 	%r3777, [%rd8+8];
	// inline asm
	prmt.b32 %r9170, %r3776, %r3777, %r4;
	// inline asm
	ld.local.u32 	%r3780, [%rd8+8];
	ld.local.u32 	%r3781, [%rd8+4];
	// inline asm
	prmt.b32 %r9163, %r3780, %r3781, %r4;
	// inline asm
	ld.local.u32 	%r3784, [%rd8+4];
	ld.local.u32 	%r3785, [%rd8];
	// inline asm
	prmt.b32 %r9164, %r3784, %r3785, %r4;
	// inline asm
	ld.local.u32 	%r3788, [%rd8];
	ld.local.u32 	%r3789, [%rd7+12];
	// inline asm
	prmt.b32 %r9165, %r3788, %r3789, %r4;
	// inline asm
	ld.local.u32 	%r3792, [%rd7+12];
	ld.local.u32 	%r3793, [%rd7+8];
	// inline asm
	prmt.b32 %r9166, %r3792, %r3793, %r4;
	// inline asm
	ld.local.u32 	%r3796, [%rd7+8];
	ld.local.u32 	%r3797, [%rd7+4];
	// inline asm
	prmt.b32 %r9159, %r3796, %r3797, %r4;
	// inline asm
	ld.local.u32 	%r3800, [%rd7+4];
	ld.local.u32 	%r3801, [%rd7];
	// inline asm
	prmt.b32 %r9160, %r3800, %r3801, %r4;
	// inline asm
	ld.local.u32 	%r3804, [%rd7];
	ld.local.u32 	%r3805, [%rd6+12];
	// inline asm
	prmt.b32 %r9161, %r3804, %r3805, %r4;
	// inline asm
	ld.local.u32 	%r3808, [%rd6+12];
	ld.local.u32 	%r3809, [%rd6+8];
	// inline asm
	prmt.b32 %r9162, %r3808, %r3809, %r4;
	// inline asm
	ld.local.u32 	%r3812, [%rd6+8];
	ld.local.u32 	%r3813, [%rd6+4];
	// inline asm
	prmt.b32 %r3811, %r3812, %r3813, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3811;
	ld.local.u32 	%r3816, [%rd6+4];
	ld.local.u32 	%r3817, [%rd6];
	// inline asm
	prmt.b32 %r3815, %r3816, %r3817, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3815;
	ld.local.u32 	%r3820, [%rd6];
	ld.local.u32 	%r3821, [%rd5+12];
	// inline asm
	prmt.b32 %r3819, %r3820, %r3821, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3819;
	ld.local.u32 	%r3824, [%rd5+12];
	ld.local.u32 	%r3825, [%rd5+8];
	// inline asm
	prmt.b32 %r3823, %r3824, %r3825, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3823;
	ld.local.u32 	%r3828, [%rd5+8];
	ld.local.u32 	%r3829, [%rd5+4];
	// inline asm
	prmt.b32 %r3827, %r3828, %r3829, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3827;
	ld.local.u32 	%r3832, [%rd5+4];
	ld.local.u32 	%r3833, [%rd5];
	// inline asm
	prmt.b32 %r3831, %r3832, %r3833, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3831;
	ld.local.u32 	%r3836, [%rd5];
	ld.local.u32 	%r3837, [%rd4+12];
	// inline asm
	prmt.b32 %r3835, %r3836, %r3837, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3835;
	ld.local.u32 	%r3840, [%rd4+12];
	ld.local.u32 	%r3841, [%rd4+8];
	// inline asm
	prmt.b32 %r3839, %r3840, %r3841, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3839;
	ld.local.u32 	%r3844, [%rd4+8];
	ld.local.u32 	%r3845, [%rd4+4];
	// inline asm
	prmt.b32 %r3843, %r3844, %r3845, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3843;
	ld.local.u32 	%r3848, [%rd4+4];
	ld.local.u32 	%r3849, [%rd4];
	// inline asm
	prmt.b32 %r3847, %r3848, %r3849, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3847;
	ld.local.u32 	%r3852, [%rd4];
	ld.local.u32 	%r3853, [%rd3+12];
	// inline asm
	prmt.b32 %r3851, %r3852, %r3853, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3851;
	ld.local.u32 	%r3856, [%rd3+12];
	ld.local.u32 	%r3857, [%rd3+8];
	// inline asm
	prmt.b32 %r3855, %r3856, %r3857, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3855;
	ld.local.u32 	%r3860, [%rd3+8];
	ld.local.u32 	%r3861, [%rd3+4];
	// inline asm
	prmt.b32 %r3859, %r3860, %r3861, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3859;
	ld.local.u32 	%r3864, [%rd3+4];
	ld.local.u32 	%r3865, [%rd3];
	// inline asm
	prmt.b32 %r3863, %r3864, %r3865, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3863;
	ld.local.u32 	%r3868, [%rd3];
	ld.local.u32 	%r3869, [%rd2+12];
	// inline asm
	prmt.b32 %r3867, %r3868, %r3869, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3867;
	ld.local.u32 	%r3872, [%rd2+12];
	ld.local.u32 	%r3873, [%rd2+8];
	// inline asm
	prmt.b32 %r3871, %r3872, %r3873, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3871;
	ld.local.u32 	%r3876, [%rd2+8];
	ld.local.u32 	%r3877, [%rd2+4];
	// inline asm
	prmt.b32 %r3875, %r3876, %r3877, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3875;
	ld.local.u32 	%r3880, [%rd2+4];
	ld.local.u32 	%r3881, [%rd2];
	// inline asm
	prmt.b32 %r3879, %r3880, %r3881, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3879;
	ld.local.u32 	%r3884, [%rd2];
	ld.local.u32 	%r3885, [%rd1+12];
	// inline asm
	prmt.b32 %r3883, %r3884, %r3885, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r3883;
	ld.local.u32 	%r3888, [%rd1+12];
	ld.local.u32 	%r3889, [%rd1+8];
	// inline asm
	prmt.b32 %r3887, %r3888, %r3889, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r3887;
	ld.local.u32 	%r3892, [%rd1+8];
	ld.local.u32 	%r3893, [%rd1+4];
	// inline asm
	prmt.b32 %r3891, %r3892, %r3893, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r3891;
	ld.local.u32 	%r3896, [%rd1+4];
	ld.local.u32 	%r3897, [%rd1];
	// inline asm
	prmt.b32 %r3895, %r3896, %r3897, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r3895;
	ld.local.u32 	%r3900, [%rd1];
	// inline asm
	prmt.b32 %r3899, %r3900, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r3899;
	st.local.u32 	[%rd3], %r9158;
	st.local.u32 	[%rd2+12], %r9158;
	st.local.u32 	[%rd2+8], %r9158;
	st.local.u32 	[%rd2+4], %r9158;
	st.local.u32 	[%rd2], %r9158;
	st.local.u32 	[%rd1+12], %r9158;
	st.local.u32 	[%rd1+8], %r9158;
	mov.u64 	%rd201, 0;
	st.local.u32 	[%rd1+4], %rd201;
	st.local.u32 	[%rd1], %rd201;
	mov.u32 	%r9167, %r9158;
	mov.u32 	%r9168, %r9158;
	bra.uni 	BB0_81;

BB0_144:
	setp.eq.s32	%p63, %r3, 25;
	@%p63 bra 	BB0_145;
	bra.uni 	BB0_172;

BB0_145:
	ld.local.u32 	%r6297, [%rd2+8];
	ld.local.u32 	%r6298, [%rd2+4];
	// inline asm
	prmt.b32 %r6296, %r6297, %r6298, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6296;
	ld.local.u32 	%r6301, [%rd2+4];
	ld.local.u32 	%r6302, [%rd2];
	// inline asm
	prmt.b32 %r6300, %r6301, %r6302, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6300;
	ld.local.u32 	%r6305, [%rd2];
	ld.local.u32 	%r6306, [%rd1+12];
	// inline asm
	prmt.b32 %r6304, %r6305, %r6306, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6304;
	ld.local.u32 	%r6309, [%rd1+12];
	ld.local.u32 	%r6310, [%rd1+8];
	// inline asm
	prmt.b32 %r6308, %r6309, %r6310, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6308;
	ld.local.u32 	%r6313, [%rd1+8];
	ld.local.u32 	%r6314, [%rd1+4];
	// inline asm
	prmt.b32 %r6312, %r6313, %r6314, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6312;
	ld.local.u32 	%r6317, [%rd1+4];
	ld.local.u32 	%r6318, [%rd1];
	// inline asm
	prmt.b32 %r6316, %r6317, %r6318, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6316;
	ld.local.u32 	%r6321, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r6320, %r6321, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6320;
	st.local.u32 	[%rd7], %r9192;
	st.local.u32 	[%rd6+12], %r9192;
	st.local.u32 	[%rd6+8], %r9192;
	st.local.u32 	[%rd6+4], %r9192;
	st.local.u32 	[%rd6], %r9192;
	st.local.u32 	[%rd5+12], %r9192;
	st.local.u32 	[%rd5+8], %r9192;
	st.local.u32 	[%rd5+4], %r9192;
	st.local.u32 	[%rd5], %r9192;
	st.local.u32 	[%rd4+12], %r9192;
	st.local.u32 	[%rd4+8], %r9192;
	st.local.u32 	[%rd4+4], %r9192;
	st.local.u32 	[%rd4], %r9192;
	st.local.u32 	[%rd3+12], %r9192;
	st.local.u32 	[%rd3+8], %r9192;
	st.local.u32 	[%rd3+4], %r9192;
	st.local.u32 	[%rd3], %r9192;
	st.local.u32 	[%rd2+12], %r9192;
	st.local.u32 	[%rd2+8], %r9192;
	st.local.u32 	[%rd2+4], %r9192;
	st.local.u32 	[%rd2], %r9192;
	st.local.u32 	[%rd1+12], %r9192;
	st.local.u32 	[%rd1+8], %r9192;
	mov.u64 	%rd1233, 0;
	st.local.u32 	[%rd1+4], %rd1233;
	st.local.u32 	[%rd1], %rd1233;
	bra.uni 	BB0_173;

BB0_54:
	setp.eq.s32	%p15, %r3, 25;
	@%p15 bra 	BB0_55;
	bra.uni 	BB0_88;

BB0_55:
	ld.local.u32 	%r1429, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9185, %r9158, %r1429, %r4;
	// inline asm
	ld.local.u32 	%r1432, [%rd8+12];
	ld.local.u32 	%r1433, [%rd8+8];
	// inline asm
	prmt.b32 %r9186, %r1432, %r1433, %r4;
	// inline asm
	ld.local.u32 	%r1436, [%rd8+8];
	ld.local.u32 	%r1437, [%rd8+4];
	// inline asm
	prmt.b32 %r9179, %r1436, %r1437, %r4;
	// inline asm
	ld.local.u32 	%r1440, [%rd8+4];
	ld.local.u32 	%r1441, [%rd8];
	// inline asm
	prmt.b32 %r9180, %r1440, %r1441, %r4;
	// inline asm
	ld.local.u32 	%r1444, [%rd8];
	ld.local.u32 	%r1445, [%rd7+12];
	// inline asm
	prmt.b32 %r9181, %r1444, %r1445, %r4;
	// inline asm
	ld.local.u32 	%r1448, [%rd7+12];
	ld.local.u32 	%r1449, [%rd7+8];
	// inline asm
	prmt.b32 %r9182, %r1448, %r1449, %r4;
	// inline asm
	ld.local.u32 	%r1452, [%rd7+8];
	ld.local.u32 	%r1453, [%rd7+4];
	// inline asm
	prmt.b32 %r9175, %r1452, %r1453, %r4;
	// inline asm
	ld.local.u32 	%r1456, [%rd7+4];
	ld.local.u32 	%r1457, [%rd7];
	// inline asm
	prmt.b32 %r9176, %r1456, %r1457, %r4;
	// inline asm
	ld.local.u32 	%r1460, [%rd7];
	ld.local.u32 	%r1461, [%rd6+12];
	// inline asm
	prmt.b32 %r9177, %r1460, %r1461, %r4;
	// inline asm
	ld.local.u32 	%r1464, [%rd6+12];
	ld.local.u32 	%r1465, [%rd6+8];
	// inline asm
	prmt.b32 %r9178, %r1464, %r1465, %r4;
	// inline asm
	ld.local.u32 	%r1468, [%rd6+8];
	ld.local.u32 	%r1469, [%rd6+4];
	// inline asm
	prmt.b32 %r9171, %r1468, %r1469, %r4;
	// inline asm
	ld.local.u32 	%r1472, [%rd6+4];
	ld.local.u32 	%r1473, [%rd6];
	// inline asm
	prmt.b32 %r9172, %r1472, %r1473, %r4;
	// inline asm
	ld.local.u32 	%r1476, [%rd6];
	ld.local.u32 	%r1477, [%rd5+12];
	// inline asm
	prmt.b32 %r9173, %r1476, %r1477, %r4;
	// inline asm
	ld.local.u32 	%r1480, [%rd5+12];
	ld.local.u32 	%r1481, [%rd5+8];
	// inline asm
	prmt.b32 %r9174, %r1480, %r1481, %r4;
	// inline asm
	ld.local.u32 	%r1484, [%rd5+8];
	ld.local.u32 	%r1485, [%rd5+4];
	// inline asm
	prmt.b32 %r9167, %r1484, %r1485, %r4;
	// inline asm
	ld.local.u32 	%r1488, [%rd5+4];
	ld.local.u32 	%r1489, [%rd5];
	// inline asm
	prmt.b32 %r9168, %r1488, %r1489, %r4;
	// inline asm
	ld.local.u32 	%r1492, [%rd5];
	ld.local.u32 	%r1493, [%rd4+12];
	// inline asm
	prmt.b32 %r9169, %r1492, %r1493, %r4;
	// inline asm
	ld.local.u32 	%r1496, [%rd4+12];
	ld.local.u32 	%r1497, [%rd4+8];
	// inline asm
	prmt.b32 %r9170, %r1496, %r1497, %r4;
	// inline asm
	ld.local.u32 	%r1500, [%rd4+8];
	ld.local.u32 	%r1501, [%rd4+4];
	// inline asm
	prmt.b32 %r9163, %r1500, %r1501, %r4;
	// inline asm
	ld.local.u32 	%r1504, [%rd4+4];
	ld.local.u32 	%r1505, [%rd4];
	// inline asm
	prmt.b32 %r9164, %r1504, %r1505, %r4;
	// inline asm
	ld.local.u32 	%r1508, [%rd4];
	ld.local.u32 	%r1509, [%rd3+12];
	// inline asm
	prmt.b32 %r9165, %r1508, %r1509, %r4;
	// inline asm
	ld.local.u32 	%r1512, [%rd3+12];
	ld.local.u32 	%r1513, [%rd3+8];
	// inline asm
	prmt.b32 %r9166, %r1512, %r1513, %r4;
	// inline asm
	ld.local.u32 	%r1516, [%rd3+8];
	ld.local.u32 	%r1517, [%rd3+4];
	// inline asm
	prmt.b32 %r9159, %r1516, %r1517, %r4;
	// inline asm
	ld.local.u32 	%r1520, [%rd3+4];
	ld.local.u32 	%r1521, [%rd3];
	// inline asm
	prmt.b32 %r9160, %r1520, %r1521, %r4;
	// inline asm
	ld.local.u32 	%r1524, [%rd3];
	ld.local.u32 	%r1525, [%rd2+12];
	// inline asm
	prmt.b32 %r9161, %r1524, %r1525, %r4;
	// inline asm
	ld.local.u32 	%r1528, [%rd2+12];
	ld.local.u32 	%r1529, [%rd2+8];
	// inline asm
	prmt.b32 %r9162, %r1528, %r1529, %r4;
	// inline asm
	ld.local.u32 	%r1532, [%rd2+8];
	ld.local.u32 	%r1533, [%rd2+4];
	// inline asm
	prmt.b32 %r1531, %r1532, %r1533, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1531;
	ld.local.u32 	%r1536, [%rd2+4];
	ld.local.u32 	%r1537, [%rd2];
	// inline asm
	prmt.b32 %r1535, %r1536, %r1537, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1535;
	ld.local.u32 	%r1540, [%rd2];
	ld.local.u32 	%r1541, [%rd1+12];
	// inline asm
	prmt.b32 %r1539, %r1540, %r1541, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1539;
	ld.local.u32 	%r1544, [%rd1+12];
	ld.local.u32 	%r1545, [%rd1+8];
	// inline asm
	prmt.b32 %r1543, %r1544, %r1545, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1543;
	ld.local.u32 	%r1548, [%rd1+8];
	ld.local.u32 	%r1549, [%rd1+4];
	// inline asm
	prmt.b32 %r1547, %r1548, %r1549, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r1547;
	ld.local.u32 	%r1552, [%rd1+4];
	ld.local.u32 	%r1553, [%rd1];
	// inline asm
	prmt.b32 %r1551, %r1552, %r1553, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r1551;
	ld.local.u32 	%r1556, [%rd1];
	// inline asm
	prmt.b32 %r1555, %r1556, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r1555;
	st.local.u32 	[%rd7], %r9158;
	st.local.u32 	[%rd6+12], %r9158;
	st.local.u32 	[%rd6+8], %r9158;
	st.local.u32 	[%rd6+4], %r9158;
	st.local.u32 	[%rd6], %r9158;
	st.local.u32 	[%rd5+12], %r9158;
	st.local.u32 	[%rd5+8], %r9158;
	st.local.u32 	[%rd5+4], %r9158;
	st.local.u32 	[%rd5], %r9158;
	st.local.u32 	[%rd4+12], %r9158;
	st.local.u32 	[%rd4+8], %r9158;
	st.local.u32 	[%rd4+4], %r9158;
	st.local.u32 	[%rd4], %r9158;
	st.local.u32 	[%rd3+12], %r9158;
	st.local.u32 	[%rd3+8], %r9158;
	st.local.u32 	[%rd3+4], %r9158;
	st.local.u32 	[%rd3], %r9158;
	st.local.u32 	[%rd2+12], %r9158;
	st.local.u32 	[%rd2+8], %r9158;
	st.local.u32 	[%rd2+4], %r9158;
	st.local.u32 	[%rd2], %r9158;
	st.local.u32 	[%rd1+12], %r9158;
	st.local.u32 	[%rd1+8], %r9158;
	mov.u64 	%rd185, 0;
	st.local.u32 	[%rd1+4], %rd185;
	st.local.u32 	[%rd1], %rd185;
	mov.u32 	%r9183, %r9158;
	mov.u32 	%r9184, %r9158;
	bra.uni 	BB0_85;

BB0_105:
	setp.eq.s32	%p92, %r3, 5;
	@%p92 bra 	BB0_106;
	bra.uni 	BB0_172;

BB0_106:
	ld.local.u32 	%r7637, [%rd7+8];
	ld.local.u32 	%r7638, [%rd7+4];
	// inline asm
	prmt.b32 %r7636, %r7637, %r7638, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7636;
	ld.local.u32 	%r7641, [%rd7+4];
	ld.local.u32 	%r7642, [%rd7];
	// inline asm
	prmt.b32 %r7640, %r7641, %r7642, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7640;
	ld.local.u32 	%r7645, [%rd7];
	ld.local.u32 	%r7646, [%rd6+12];
	// inline asm
	prmt.b32 %r7644, %r7645, %r7646, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7644;
	ld.local.u32 	%r7649, [%rd6+12];
	ld.local.u32 	%r7650, [%rd6+8];
	// inline asm
	prmt.b32 %r7648, %r7649, %r7650, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7648;
	ld.local.u32 	%r7653, [%rd6+8];
	ld.local.u32 	%r7654, [%rd6+4];
	// inline asm
	prmt.b32 %r7652, %r7653, %r7654, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7652;
	ld.local.u32 	%r7657, [%rd6+4];
	ld.local.u32 	%r7658, [%rd6];
	// inline asm
	prmt.b32 %r7656, %r7657, %r7658, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7656;
	ld.local.u32 	%r7661, [%rd6];
	ld.local.u32 	%r7662, [%rd5+12];
	// inline asm
	prmt.b32 %r7660, %r7661, %r7662, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7660;
	ld.local.u32 	%r7665, [%rd5+12];
	ld.local.u32 	%r7666, [%rd5+8];
	// inline asm
	prmt.b32 %r7664, %r7665, %r7666, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7664;
	ld.local.u32 	%r7669, [%rd5+8];
	ld.local.u32 	%r7670, [%rd5+4];
	// inline asm
	prmt.b32 %r7668, %r7669, %r7670, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7668;
	ld.local.u32 	%r7673, [%rd5+4];
	ld.local.u32 	%r7674, [%rd5];
	// inline asm
	prmt.b32 %r7672, %r7673, %r7674, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7672;
	ld.local.u32 	%r7677, [%rd5];
	ld.local.u32 	%r7678, [%rd4+12];
	// inline asm
	prmt.b32 %r7676, %r7677, %r7678, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7676;
	ld.local.u32 	%r7681, [%rd4+12];
	ld.local.u32 	%r7682, [%rd4+8];
	// inline asm
	prmt.b32 %r7680, %r7681, %r7682, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7680;
	ld.local.u32 	%r7685, [%rd4+8];
	ld.local.u32 	%r7686, [%rd4+4];
	// inline asm
	prmt.b32 %r7684, %r7685, %r7686, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7684;
	ld.local.u32 	%r7689, [%rd4+4];
	ld.local.u32 	%r7690, [%rd4];
	// inline asm
	prmt.b32 %r7688, %r7689, %r7690, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7688;
	ld.local.u32 	%r7693, [%rd4];
	ld.local.u32 	%r7694, [%rd3+12];
	// inline asm
	prmt.b32 %r7692, %r7693, %r7694, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7692;
	ld.local.u32 	%r7697, [%rd3+12];
	ld.local.u32 	%r7698, [%rd3+8];
	// inline asm
	prmt.b32 %r7696, %r7697, %r7698, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7696;
	ld.local.u32 	%r7701, [%rd3+8];
	ld.local.u32 	%r7702, [%rd3+4];
	// inline asm
	prmt.b32 %r7700, %r7701, %r7702, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7700;
	ld.local.u32 	%r7705, [%rd3+4];
	ld.local.u32 	%r7706, [%rd3];
	// inline asm
	prmt.b32 %r7704, %r7705, %r7706, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7704;
	ld.local.u32 	%r7709, [%rd3];
	ld.local.u32 	%r7710, [%rd2+12];
	// inline asm
	prmt.b32 %r7708, %r7709, %r7710, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7708;
	ld.local.u32 	%r7713, [%rd2+12];
	ld.local.u32 	%r7714, [%rd2+8];
	// inline asm
	prmt.b32 %r7712, %r7713, %r7714, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7712;
	ld.local.u32 	%r7717, [%rd2+8];
	ld.local.u32 	%r7718, [%rd2+4];
	// inline asm
	prmt.b32 %r7716, %r7717, %r7718, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7716;
	ld.local.u32 	%r7721, [%rd2+4];
	ld.local.u32 	%r7722, [%rd2];
	// inline asm
	prmt.b32 %r7720, %r7721, %r7722, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7720;
	ld.local.u32 	%r7725, [%rd2];
	ld.local.u32 	%r7726, [%rd1+12];
	// inline asm
	prmt.b32 %r7724, %r7725, %r7726, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r7724;
	ld.local.u32 	%r7729, [%rd1+12];
	ld.local.u32 	%r7730, [%rd1+8];
	// inline asm
	prmt.b32 %r7728, %r7729, %r7730, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r7728;
	ld.local.u32 	%r7733, [%rd1+8];
	ld.local.u32 	%r7734, [%rd1+4];
	// inline asm
	prmt.b32 %r7732, %r7733, %r7734, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r7732;
	ld.local.u32 	%r7737, [%rd1+4];
	ld.local.u32 	%r7738, [%rd1];
	// inline asm
	prmt.b32 %r7736, %r7737, %r7738, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r7736;
	ld.local.u32 	%r7741, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r7740, %r7741, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r7740;
	st.local.u32 	[%rd2], %r9192;
	st.local.u32 	[%rd1+12], %r9192;
	st.local.u32 	[%rd1+8], %r9192;
	mov.u64 	%rd1253, 0;
	st.local.u32 	[%rd1+4], %rd1253;
	st.local.u32 	[%rd1], %rd1253;
	bra.uni 	BB0_173;

BB0_15:
	setp.eq.s32	%p44, %r3, 5;
	@%p44 bra 	BB0_16;
	bra.uni 	BB0_88;

BB0_16:
	ld.local.u32 	%r4399, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9165, %r9158, %r4399, %r4;
	// inline asm
	ld.local.u32 	%r4402, [%rd8+12];
	ld.local.u32 	%r4403, [%rd8+8];
	// inline asm
	prmt.b32 %r9166, %r4402, %r4403, %r4;
	// inline asm
	ld.local.u32 	%r4406, [%rd8+8];
	ld.local.u32 	%r4407, [%rd8+4];
	// inline asm
	prmt.b32 %r9159, %r4406, %r4407, %r4;
	// inline asm
	ld.local.u32 	%r4410, [%rd8+4];
	ld.local.u32 	%r4411, [%rd8];
	// inline asm
	prmt.b32 %r9160, %r4410, %r4411, %r4;
	// inline asm
	ld.local.u32 	%r4414, [%rd8];
	ld.local.u32 	%r4415, [%rd7+12];
	// inline asm
	prmt.b32 %r9161, %r4414, %r4415, %r4;
	// inline asm
	ld.local.u32 	%r4418, [%rd7+12];
	ld.local.u32 	%r4419, [%rd7+8];
	// inline asm
	prmt.b32 %r9162, %r4418, %r4419, %r4;
	// inline asm
	ld.local.u32 	%r4422, [%rd7+8];
	ld.local.u32 	%r4423, [%rd7+4];
	// inline asm
	prmt.b32 %r4421, %r4422, %r4423, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r4421;
	ld.local.u32 	%r4426, [%rd7+4];
	ld.local.u32 	%r4427, [%rd7];
	// inline asm
	prmt.b32 %r4425, %r4426, %r4427, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r4425;
	ld.local.u32 	%r4430, [%rd7];
	ld.local.u32 	%r4431, [%rd6+12];
	// inline asm
	prmt.b32 %r4429, %r4430, %r4431, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r4429;
	ld.local.u32 	%r4434, [%rd6+12];
	ld.local.u32 	%r4435, [%rd6+8];
	// inline asm
	prmt.b32 %r4433, %r4434, %r4435, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r4433;
	ld.local.u32 	%r4438, [%rd6+8];
	ld.local.u32 	%r4439, [%rd6+4];
	// inline asm
	prmt.b32 %r4437, %r4438, %r4439, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r4437;
	ld.local.u32 	%r4442, [%rd6+4];
	ld.local.u32 	%r4443, [%rd6];
	// inline asm
	prmt.b32 %r4441, %r4442, %r4443, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r4441;
	ld.local.u32 	%r4446, [%rd6];
	ld.local.u32 	%r4447, [%rd5+12];
	// inline asm
	prmt.b32 %r4445, %r4446, %r4447, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r4445;
	ld.local.u32 	%r4450, [%rd5+12];
	ld.local.u32 	%r4451, [%rd5+8];
	// inline asm
	prmt.b32 %r4449, %r4450, %r4451, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r4449;
	ld.local.u32 	%r4454, [%rd5+8];
	ld.local.u32 	%r4455, [%rd5+4];
	// inline asm
	prmt.b32 %r4453, %r4454, %r4455, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r4453;
	ld.local.u32 	%r4458, [%rd5+4];
	ld.local.u32 	%r4459, [%rd5];
	// inline asm
	prmt.b32 %r4457, %r4458, %r4459, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r4457;
	ld.local.u32 	%r4462, [%rd5];
	ld.local.u32 	%r4463, [%rd4+12];
	// inline asm
	prmt.b32 %r4461, %r4462, %r4463, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4461;
	ld.local.u32 	%r4466, [%rd4+12];
	ld.local.u32 	%r4467, [%rd4+8];
	// inline asm
	prmt.b32 %r4465, %r4466, %r4467, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4465;
	ld.local.u32 	%r4470, [%rd4+8];
	ld.local.u32 	%r4471, [%rd4+4];
	// inline asm
	prmt.b32 %r4469, %r4470, %r4471, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4469;
	ld.local.u32 	%r4474, [%rd4+4];
	ld.local.u32 	%r4475, [%rd4];
	// inline asm
	prmt.b32 %r4473, %r4474, %r4475, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4473;
	ld.local.u32 	%r4478, [%rd4];
	ld.local.u32 	%r4479, [%rd3+12];
	// inline asm
	prmt.b32 %r4477, %r4478, %r4479, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4477;
	ld.local.u32 	%r4482, [%rd3+12];
	ld.local.u32 	%r4483, [%rd3+8];
	// inline asm
	prmt.b32 %r4481, %r4482, %r4483, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4481;
	ld.local.u32 	%r4486, [%rd3+8];
	ld.local.u32 	%r4487, [%rd3+4];
	// inline asm
	prmt.b32 %r4485, %r4486, %r4487, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4485;
	ld.local.u32 	%r4490, [%rd3+4];
	ld.local.u32 	%r4491, [%rd3];
	// inline asm
	prmt.b32 %r4489, %r4490, %r4491, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4489;
	ld.local.u32 	%r4494, [%rd3];
	ld.local.u32 	%r4495, [%rd2+12];
	// inline asm
	prmt.b32 %r4493, %r4494, %r4495, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4493;
	ld.local.u32 	%r4498, [%rd2+12];
	ld.local.u32 	%r4499, [%rd2+8];
	// inline asm
	prmt.b32 %r4497, %r4498, %r4499, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4497;
	ld.local.u32 	%r4502, [%rd2+8];
	ld.local.u32 	%r4503, [%rd2+4];
	// inline asm
	prmt.b32 %r4501, %r4502, %r4503, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4501;
	ld.local.u32 	%r4506, [%rd2+4];
	ld.local.u32 	%r4507, [%rd2];
	// inline asm
	prmt.b32 %r4505, %r4506, %r4507, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4505;
	ld.local.u32 	%r4510, [%rd2];
	ld.local.u32 	%r4511, [%rd1+12];
	// inline asm
	prmt.b32 %r4509, %r4510, %r4511, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4509;
	ld.local.u32 	%r4514, [%rd1+12];
	ld.local.u32 	%r4515, [%rd1+8];
	// inline asm
	prmt.b32 %r4513, %r4514, %r4515, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4513;
	ld.local.u32 	%r4518, [%rd1+8];
	ld.local.u32 	%r4519, [%rd1+4];
	// inline asm
	prmt.b32 %r4517, %r4518, %r4519, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r4517;
	ld.local.u32 	%r4522, [%rd1+4];
	ld.local.u32 	%r4523, [%rd1];
	// inline asm
	prmt.b32 %r4521, %r4522, %r4523, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r4521;
	ld.local.u32 	%r4526, [%rd1];
	// inline asm
	prmt.b32 %r4525, %r4526, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r4525;
	st.local.u32 	[%rd2], %r9158;
	st.local.u32 	[%rd1+12], %r9158;
	st.local.u32 	[%rd1+8], %r9158;
	mov.u64 	%rd205, 0;
	st.local.u32 	[%rd1+4], %rd205;
	st.local.u32 	[%rd1], %rd205;
	mov.u32 	%r9163, %r9158;
	mov.u32 	%r9164, %r9158;
	bra.uni 	BB0_80;

BB0_136:
	setp.eq.s32	%p69, %r3, 21;
	@%p69 bra 	BB0_137;
	bra.uni 	BB0_172;

BB0_137:
	ld.local.u32 	%r6437, [%rd3+8];
	ld.local.u32 	%r6438, [%rd3+4];
	// inline asm
	prmt.b32 %r6436, %r6437, %r6438, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6436;
	ld.local.u32 	%r6441, [%rd3+4];
	ld.local.u32 	%r6442, [%rd3];
	// inline asm
	prmt.b32 %r6440, %r6441, %r6442, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6440;
	ld.local.u32 	%r6445, [%rd3];
	ld.local.u32 	%r6446, [%rd2+12];
	// inline asm
	prmt.b32 %r6444, %r6445, %r6446, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6444;
	ld.local.u32 	%r6449, [%rd2+12];
	ld.local.u32 	%r6450, [%rd2+8];
	// inline asm
	prmt.b32 %r6448, %r6449, %r6450, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6448;
	ld.local.u32 	%r6453, [%rd2+8];
	ld.local.u32 	%r6454, [%rd2+4];
	// inline asm
	prmt.b32 %r6452, %r6453, %r6454, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6452;
	ld.local.u32 	%r6457, [%rd2+4];
	ld.local.u32 	%r6458, [%rd2];
	// inline asm
	prmt.b32 %r6456, %r6457, %r6458, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6456;
	ld.local.u32 	%r6461, [%rd2];
	ld.local.u32 	%r6462, [%rd1+12];
	// inline asm
	prmt.b32 %r6460, %r6461, %r6462, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6460;
	ld.local.u32 	%r6465, [%rd1+12];
	ld.local.u32 	%r6466, [%rd1+8];
	// inline asm
	prmt.b32 %r6464, %r6465, %r6466, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6464;
	ld.local.u32 	%r6469, [%rd1+8];
	ld.local.u32 	%r6470, [%rd1+4];
	// inline asm
	prmt.b32 %r6468, %r6469, %r6470, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6468;
	ld.local.u32 	%r6473, [%rd1+4];
	ld.local.u32 	%r6474, [%rd1];
	// inline asm
	prmt.b32 %r6472, %r6473, %r6474, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6472;
	ld.local.u32 	%r6477, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r6476, %r6477, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6476;
	st.local.u32 	[%rd6], %r9192;
	st.local.u32 	[%rd5+12], %r9192;
	st.local.u32 	[%rd5+8], %r9192;
	st.local.u32 	[%rd5+4], %r9192;
	st.local.u32 	[%rd5], %r9192;
	st.local.u32 	[%rd4+12], %r9192;
	st.local.u32 	[%rd4+8], %r9192;
	st.local.u32 	[%rd4+4], %r9192;
	st.local.u32 	[%rd4], %r9192;
	st.local.u32 	[%rd3+12], %r9192;
	st.local.u32 	[%rd3+8], %r9192;
	st.local.u32 	[%rd3+4], %r9192;
	st.local.u32 	[%rd3], %r9192;
	st.local.u32 	[%rd2+12], %r9192;
	st.local.u32 	[%rd2+8], %r9192;
	st.local.u32 	[%rd2+4], %r9192;
	st.local.u32 	[%rd2], %r9192;
	st.local.u32 	[%rd1+12], %r9192;
	st.local.u32 	[%rd1+8], %r9192;
	mov.u64 	%rd1237, 0;
	st.local.u32 	[%rd1+4], %rd1237;
	st.local.u32 	[%rd1], %rd1237;
	bra.uni 	BB0_173;

BB0_46:
	setp.eq.s32	%p21, %r3, 21;
	@%p21 bra 	BB0_47;
	bra.uni 	BB0_88;

BB0_47:
	ld.local.u32 	%r1991, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9181, %r9158, %r1991, %r4;
	// inline asm
	ld.local.u32 	%r1994, [%rd8+12];
	ld.local.u32 	%r1995, [%rd8+8];
	// inline asm
	prmt.b32 %r9182, %r1994, %r1995, %r4;
	// inline asm
	ld.local.u32 	%r1998, [%rd8+8];
	ld.local.u32 	%r1999, [%rd8+4];
	// inline asm
	prmt.b32 %r9175, %r1998, %r1999, %r4;
	// inline asm
	ld.local.u32 	%r2002, [%rd8+4];
	ld.local.u32 	%r2003, [%rd8];
	// inline asm
	prmt.b32 %r9176, %r2002, %r2003, %r4;
	// inline asm
	ld.local.u32 	%r2006, [%rd8];
	ld.local.u32 	%r2007, [%rd7+12];
	// inline asm
	prmt.b32 %r9177, %r2006, %r2007, %r4;
	// inline asm
	ld.local.u32 	%r2010, [%rd7+12];
	ld.local.u32 	%r2011, [%rd7+8];
	// inline asm
	prmt.b32 %r9178, %r2010, %r2011, %r4;
	// inline asm
	ld.local.u32 	%r2014, [%rd7+8];
	ld.local.u32 	%r2015, [%rd7+4];
	// inline asm
	prmt.b32 %r9171, %r2014, %r2015, %r4;
	// inline asm
	ld.local.u32 	%r2018, [%rd7+4];
	ld.local.u32 	%r2019, [%rd7];
	// inline asm
	prmt.b32 %r9172, %r2018, %r2019, %r4;
	// inline asm
	ld.local.u32 	%r2022, [%rd7];
	ld.local.u32 	%r2023, [%rd6+12];
	// inline asm
	prmt.b32 %r9173, %r2022, %r2023, %r4;
	// inline asm
	ld.local.u32 	%r2026, [%rd6+12];
	ld.local.u32 	%r2027, [%rd6+8];
	// inline asm
	prmt.b32 %r9174, %r2026, %r2027, %r4;
	// inline asm
	ld.local.u32 	%r2030, [%rd6+8];
	ld.local.u32 	%r2031, [%rd6+4];
	// inline asm
	prmt.b32 %r9167, %r2030, %r2031, %r4;
	// inline asm
	ld.local.u32 	%r2034, [%rd6+4];
	ld.local.u32 	%r2035, [%rd6];
	// inline asm
	prmt.b32 %r9168, %r2034, %r2035, %r4;
	// inline asm
	ld.local.u32 	%r2038, [%rd6];
	ld.local.u32 	%r2039, [%rd5+12];
	// inline asm
	prmt.b32 %r9169, %r2038, %r2039, %r4;
	// inline asm
	ld.local.u32 	%r2042, [%rd5+12];
	ld.local.u32 	%r2043, [%rd5+8];
	// inline asm
	prmt.b32 %r9170, %r2042, %r2043, %r4;
	// inline asm
	ld.local.u32 	%r2046, [%rd5+8];
	ld.local.u32 	%r2047, [%rd5+4];
	// inline asm
	prmt.b32 %r9163, %r2046, %r2047, %r4;
	// inline asm
	ld.local.u32 	%r2050, [%rd5+4];
	ld.local.u32 	%r2051, [%rd5];
	// inline asm
	prmt.b32 %r9164, %r2050, %r2051, %r4;
	// inline asm
	ld.local.u32 	%r2054, [%rd5];
	ld.local.u32 	%r2055, [%rd4+12];
	// inline asm
	prmt.b32 %r9165, %r2054, %r2055, %r4;
	// inline asm
	ld.local.u32 	%r2058, [%rd4+12];
	ld.local.u32 	%r2059, [%rd4+8];
	// inline asm
	prmt.b32 %r9166, %r2058, %r2059, %r4;
	// inline asm
	ld.local.u32 	%r2062, [%rd4+8];
	ld.local.u32 	%r2063, [%rd4+4];
	// inline asm
	prmt.b32 %r9159, %r2062, %r2063, %r4;
	// inline asm
	ld.local.u32 	%r2066, [%rd4+4];
	ld.local.u32 	%r2067, [%rd4];
	// inline asm
	prmt.b32 %r9160, %r2066, %r2067, %r4;
	// inline asm
	ld.local.u32 	%r2070, [%rd4];
	ld.local.u32 	%r2071, [%rd3+12];
	// inline asm
	prmt.b32 %r9161, %r2070, %r2071, %r4;
	// inline asm
	ld.local.u32 	%r2074, [%rd3+12];
	ld.local.u32 	%r2075, [%rd3+8];
	// inline asm
	prmt.b32 %r9162, %r2074, %r2075, %r4;
	// inline asm
	ld.local.u32 	%r2078, [%rd3+8];
	ld.local.u32 	%r2079, [%rd3+4];
	// inline asm
	prmt.b32 %r2077, %r2078, %r2079, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2077;
	ld.local.u32 	%r2082, [%rd3+4];
	ld.local.u32 	%r2083, [%rd3];
	// inline asm
	prmt.b32 %r2081, %r2082, %r2083, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2081;
	ld.local.u32 	%r2086, [%rd3];
	ld.local.u32 	%r2087, [%rd2+12];
	// inline asm
	prmt.b32 %r2085, %r2086, %r2087, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2085;
	ld.local.u32 	%r2090, [%rd2+12];
	ld.local.u32 	%r2091, [%rd2+8];
	// inline asm
	prmt.b32 %r2089, %r2090, %r2091, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2089;
	ld.local.u32 	%r2094, [%rd2+8];
	ld.local.u32 	%r2095, [%rd2+4];
	// inline asm
	prmt.b32 %r2093, %r2094, %r2095, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2093;
	ld.local.u32 	%r2098, [%rd2+4];
	ld.local.u32 	%r2099, [%rd2];
	// inline asm
	prmt.b32 %r2097, %r2098, %r2099, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2097;
	ld.local.u32 	%r2102, [%rd2];
	ld.local.u32 	%r2103, [%rd1+12];
	// inline asm
	prmt.b32 %r2101, %r2102, %r2103, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2101;
	ld.local.u32 	%r2106, [%rd1+12];
	ld.local.u32 	%r2107, [%rd1+8];
	// inline asm
	prmt.b32 %r2105, %r2106, %r2107, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2105;
	ld.local.u32 	%r2110, [%rd1+8];
	ld.local.u32 	%r2111, [%rd1+4];
	// inline asm
	prmt.b32 %r2109, %r2110, %r2111, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2109;
	ld.local.u32 	%r2114, [%rd1+4];
	ld.local.u32 	%r2115, [%rd1];
	// inline asm
	prmt.b32 %r2113, %r2114, %r2115, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2113;
	ld.local.u32 	%r2118, [%rd1];
	// inline asm
	prmt.b32 %r2117, %r2118, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2117;
	st.local.u32 	[%rd6], %r9158;
	st.local.u32 	[%rd5+12], %r9158;
	st.local.u32 	[%rd5+8], %r9158;
	st.local.u32 	[%rd5+4], %r9158;
	st.local.u32 	[%rd5], %r9158;
	st.local.u32 	[%rd4+12], %r9158;
	st.local.u32 	[%rd4+8], %r9158;
	st.local.u32 	[%rd4+4], %r9158;
	st.local.u32 	[%rd4], %r9158;
	st.local.u32 	[%rd3+12], %r9158;
	st.local.u32 	[%rd3+8], %r9158;
	st.local.u32 	[%rd3+4], %r9158;
	st.local.u32 	[%rd3], %r9158;
	st.local.u32 	[%rd2+12], %r9158;
	st.local.u32 	[%rd2+8], %r9158;
	st.local.u32 	[%rd2+4], %r9158;
	st.local.u32 	[%rd2], %r9158;
	st.local.u32 	[%rd1+12], %r9158;
	st.local.u32 	[%rd1+8], %r9158;
	mov.u64 	%rd189, 0;
	st.local.u32 	[%rd1+4], %rd189;
	st.local.u32 	[%rd1], %rd189;
	mov.u32 	%r9179, %r9158;
	mov.u32 	%r9180, %r9158;
	bra.uni 	BB0_84;

BB0_120:
	setp.eq.s32	%p81, %r3, 13;
	@%p81 bra 	BB0_121;
	bra.uni 	BB0_172;

BB0_121:
	ld.local.u32 	%r6909, [%rd5+8];
	ld.local.u32 	%r6910, [%rd5+4];
	// inline asm
	prmt.b32 %r6908, %r6909, %r6910, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6908;
	ld.local.u32 	%r6913, [%rd5+4];
	ld.local.u32 	%r6914, [%rd5];
	// inline asm
	prmt.b32 %r6912, %r6913, %r6914, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6912;
	ld.local.u32 	%r6917, [%rd5];
	ld.local.u32 	%r6918, [%rd4+12];
	// inline asm
	prmt.b32 %r6916, %r6917, %r6918, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6916;
	ld.local.u32 	%r6921, [%rd4+12];
	ld.local.u32 	%r6922, [%rd4+8];
	// inline asm
	prmt.b32 %r6920, %r6921, %r6922, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6920;
	ld.local.u32 	%r6925, [%rd4+8];
	ld.local.u32 	%r6926, [%rd4+4];
	// inline asm
	prmt.b32 %r6924, %r6925, %r6926, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6924;
	ld.local.u32 	%r6929, [%rd4+4];
	ld.local.u32 	%r6930, [%rd4];
	// inline asm
	prmt.b32 %r6928, %r6929, %r6930, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6928;
	ld.local.u32 	%r6933, [%rd4];
	ld.local.u32 	%r6934, [%rd3+12];
	// inline asm
	prmt.b32 %r6932, %r6933, %r6934, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6932;
	ld.local.u32 	%r6937, [%rd3+12];
	ld.local.u32 	%r6938, [%rd3+8];
	// inline asm
	prmt.b32 %r6936, %r6937, %r6938, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6936;
	ld.local.u32 	%r6941, [%rd3+8];
	ld.local.u32 	%r6942, [%rd3+4];
	// inline asm
	prmt.b32 %r6940, %r6941, %r6942, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6940;
	ld.local.u32 	%r6945, [%rd3+4];
	ld.local.u32 	%r6946, [%rd3];
	// inline asm
	prmt.b32 %r6944, %r6945, %r6946, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6944;
	ld.local.u32 	%r6949, [%rd3];
	ld.local.u32 	%r6950, [%rd2+12];
	// inline asm
	prmt.b32 %r6948, %r6949, %r6950, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6948;
	ld.local.u32 	%r6953, [%rd2+12];
	ld.local.u32 	%r6954, [%rd2+8];
	// inline asm
	prmt.b32 %r6952, %r6953, %r6954, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6952;
	ld.local.u32 	%r6957, [%rd2+8];
	ld.local.u32 	%r6958, [%rd2+4];
	// inline asm
	prmt.b32 %r6956, %r6957, %r6958, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r6956;
	ld.local.u32 	%r6961, [%rd2+4];
	ld.local.u32 	%r6962, [%rd2];
	// inline asm
	prmt.b32 %r6960, %r6961, %r6962, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r6960;
	ld.local.u32 	%r6965, [%rd2];
	ld.local.u32 	%r6966, [%rd1+12];
	// inline asm
	prmt.b32 %r6964, %r6965, %r6966, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r6964;
	ld.local.u32 	%r6969, [%rd1+12];
	ld.local.u32 	%r6970, [%rd1+8];
	// inline asm
	prmt.b32 %r6968, %r6969, %r6970, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r6968;
	ld.local.u32 	%r6973, [%rd1+8];
	ld.local.u32 	%r6974, [%rd1+4];
	// inline asm
	prmt.b32 %r6972, %r6973, %r6974, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r6972;
	ld.local.u32 	%r6977, [%rd1+4];
	ld.local.u32 	%r6978, [%rd1];
	// inline asm
	prmt.b32 %r6976, %r6977, %r6978, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r6976;
	ld.local.u32 	%r6981, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r6980, %r6981, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r6980;
	st.local.u32 	[%rd4], %r9192;
	st.local.u32 	[%rd3+12], %r9192;
	st.local.u32 	[%rd3+8], %r9192;
	st.local.u32 	[%rd3+4], %r9192;
	st.local.u32 	[%rd3], %r9192;
	st.local.u32 	[%rd2+12], %r9192;
	st.local.u32 	[%rd2+8], %r9192;
	st.local.u32 	[%rd2+4], %r9192;
	st.local.u32 	[%rd2], %r9192;
	st.local.u32 	[%rd1+12], %r9192;
	st.local.u32 	[%rd1+8], %r9192;
	mov.u64 	%rd1245, 0;
	st.local.u32 	[%rd1+4], %rd1245;
	st.local.u32 	[%rd1], %rd1245;
	bra.uni 	BB0_173;

BB0_30:
	setp.eq.s32	%p33, %r3, 13;
	@%p33 bra 	BB0_31;
	bra.uni 	BB0_88;

BB0_31:
	ld.local.u32 	%r3163, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9173, %r9158, %r3163, %r4;
	// inline asm
	ld.local.u32 	%r3166, [%rd8+12];
	ld.local.u32 	%r3167, [%rd8+8];
	// inline asm
	prmt.b32 %r9174, %r3166, %r3167, %r4;
	// inline asm
	ld.local.u32 	%r3170, [%rd8+8];
	ld.local.u32 	%r3171, [%rd8+4];
	// inline asm
	prmt.b32 %r9167, %r3170, %r3171, %r4;
	// inline asm
	ld.local.u32 	%r3174, [%rd8+4];
	ld.local.u32 	%r3175, [%rd8];
	// inline asm
	prmt.b32 %r9168, %r3174, %r3175, %r4;
	// inline asm
	ld.local.u32 	%r3178, [%rd8];
	ld.local.u32 	%r3179, [%rd7+12];
	// inline asm
	prmt.b32 %r9169, %r3178, %r3179, %r4;
	// inline asm
	ld.local.u32 	%r3182, [%rd7+12];
	ld.local.u32 	%r3183, [%rd7+8];
	// inline asm
	prmt.b32 %r9170, %r3182, %r3183, %r4;
	// inline asm
	ld.local.u32 	%r3186, [%rd7+8];
	ld.local.u32 	%r3187, [%rd7+4];
	// inline asm
	prmt.b32 %r9163, %r3186, %r3187, %r4;
	// inline asm
	ld.local.u32 	%r3190, [%rd7+4];
	ld.local.u32 	%r3191, [%rd7];
	// inline asm
	prmt.b32 %r9164, %r3190, %r3191, %r4;
	// inline asm
	ld.local.u32 	%r3194, [%rd7];
	ld.local.u32 	%r3195, [%rd6+12];
	// inline asm
	prmt.b32 %r9165, %r3194, %r3195, %r4;
	// inline asm
	ld.local.u32 	%r3198, [%rd6+12];
	ld.local.u32 	%r3199, [%rd6+8];
	// inline asm
	prmt.b32 %r9166, %r3198, %r3199, %r4;
	// inline asm
	ld.local.u32 	%r3202, [%rd6+8];
	ld.local.u32 	%r3203, [%rd6+4];
	// inline asm
	prmt.b32 %r9159, %r3202, %r3203, %r4;
	// inline asm
	ld.local.u32 	%r3206, [%rd6+4];
	ld.local.u32 	%r3207, [%rd6];
	// inline asm
	prmt.b32 %r9160, %r3206, %r3207, %r4;
	// inline asm
	ld.local.u32 	%r3210, [%rd6];
	ld.local.u32 	%r3211, [%rd5+12];
	// inline asm
	prmt.b32 %r9161, %r3210, %r3211, %r4;
	// inline asm
	ld.local.u32 	%r3214, [%rd5+12];
	ld.local.u32 	%r3215, [%rd5+8];
	// inline asm
	prmt.b32 %r9162, %r3214, %r3215, %r4;
	// inline asm
	ld.local.u32 	%r3218, [%rd5+8];
	ld.local.u32 	%r3219, [%rd5+4];
	// inline asm
	prmt.b32 %r3217, %r3218, %r3219, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3217;
	ld.local.u32 	%r3222, [%rd5+4];
	ld.local.u32 	%r3223, [%rd5];
	// inline asm
	prmt.b32 %r3221, %r3222, %r3223, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3221;
	ld.local.u32 	%r3226, [%rd5];
	ld.local.u32 	%r3227, [%rd4+12];
	// inline asm
	prmt.b32 %r3225, %r3226, %r3227, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3225;
	ld.local.u32 	%r3230, [%rd4+12];
	ld.local.u32 	%r3231, [%rd4+8];
	// inline asm
	prmt.b32 %r3229, %r3230, %r3231, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3229;
	ld.local.u32 	%r3234, [%rd4+8];
	ld.local.u32 	%r3235, [%rd4+4];
	// inline asm
	prmt.b32 %r3233, %r3234, %r3235, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3233;
	ld.local.u32 	%r3238, [%rd4+4];
	ld.local.u32 	%r3239, [%rd4];
	// inline asm
	prmt.b32 %r3237, %r3238, %r3239, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3237;
	ld.local.u32 	%r3242, [%rd4];
	ld.local.u32 	%r3243, [%rd3+12];
	// inline asm
	prmt.b32 %r3241, %r3242, %r3243, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3241;
	ld.local.u32 	%r3246, [%rd3+12];
	ld.local.u32 	%r3247, [%rd3+8];
	// inline asm
	prmt.b32 %r3245, %r3246, %r3247, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3245;
	ld.local.u32 	%r3250, [%rd3+8];
	ld.local.u32 	%r3251, [%rd3+4];
	// inline asm
	prmt.b32 %r3249, %r3250, %r3251, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3249;
	ld.local.u32 	%r3254, [%rd3+4];
	ld.local.u32 	%r3255, [%rd3];
	// inline asm
	prmt.b32 %r3253, %r3254, %r3255, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3253;
	ld.local.u32 	%r3258, [%rd3];
	ld.local.u32 	%r3259, [%rd2+12];
	// inline asm
	prmt.b32 %r3257, %r3258, %r3259, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3257;
	ld.local.u32 	%r3262, [%rd2+12];
	ld.local.u32 	%r3263, [%rd2+8];
	// inline asm
	prmt.b32 %r3261, %r3262, %r3263, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3261;
	ld.local.u32 	%r3266, [%rd2+8];
	ld.local.u32 	%r3267, [%rd2+4];
	// inline asm
	prmt.b32 %r3265, %r3266, %r3267, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3265;
	ld.local.u32 	%r3270, [%rd2+4];
	ld.local.u32 	%r3271, [%rd2];
	// inline asm
	prmt.b32 %r3269, %r3270, %r3271, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3269;
	ld.local.u32 	%r3274, [%rd2];
	ld.local.u32 	%r3275, [%rd1+12];
	// inline asm
	prmt.b32 %r3273, %r3274, %r3275, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3273;
	ld.local.u32 	%r3278, [%rd1+12];
	ld.local.u32 	%r3279, [%rd1+8];
	// inline asm
	prmt.b32 %r3277, %r3278, %r3279, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3277;
	ld.local.u32 	%r3282, [%rd1+8];
	ld.local.u32 	%r3283, [%rd1+4];
	// inline asm
	prmt.b32 %r3281, %r3282, %r3283, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3281;
	ld.local.u32 	%r3286, [%rd1+4];
	ld.local.u32 	%r3287, [%rd1];
	// inline asm
	prmt.b32 %r3285, %r3286, %r3287, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3285;
	ld.local.u32 	%r3290, [%rd1];
	// inline asm
	prmt.b32 %r3289, %r3290, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r3289;
	st.local.u32 	[%rd4], %r9158;
	st.local.u32 	[%rd3+12], %r9158;
	st.local.u32 	[%rd3+8], %r9158;
	st.local.u32 	[%rd3+4], %r9158;
	st.local.u32 	[%rd3], %r9158;
	st.local.u32 	[%rd2+12], %r9158;
	st.local.u32 	[%rd2+8], %r9158;
	st.local.u32 	[%rd2+4], %r9158;
	st.local.u32 	[%rd2], %r9158;
	st.local.u32 	[%rd1+12], %r9158;
	st.local.u32 	[%rd1+8], %r9158;
	mov.u64 	%rd197, 0;
	st.local.u32 	[%rd1+4], %rd197;
	st.local.u32 	[%rd1], %rd197;
	mov.u32 	%r9171, %r9158;
	mov.u32 	%r9172, %r9158;
	bra.uni 	BB0_82;

BB0_151:
	setp.eq.s32	%p58, %r3, 29;
	@%p58 bra 	BB0_152;
	bra.uni 	BB0_172;

BB0_152:
	ld.local.u32 	%r6221, [%rd1+8];
	ld.local.u32 	%r6222, [%rd1+4];
	// inline asm
	prmt.b32 %r6220, %r6221, %r6222, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6220;
	ld.local.u32 	%r6225, [%rd1+4];
	ld.local.u32 	%r6226, [%rd1];
	// inline asm
	prmt.b32 %r6224, %r6225, %r6226, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6224;
	ld.local.u32 	%r6229, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r6228, %r6229, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6228;
	st.local.u32 	[%rd8], %r9192;
	st.local.u32 	[%rd7+12], %r9192;
	st.local.u32 	[%rd7+8], %r9192;
	st.local.u32 	[%rd7+4], %r9192;
	st.local.u32 	[%rd7], %r9192;
	st.local.u32 	[%rd6+12], %r9192;
	st.local.u32 	[%rd6+8], %r9192;
	st.local.u32 	[%rd6+4], %r9192;
	st.local.u32 	[%rd6], %r9192;
	st.local.u32 	[%rd5+12], %r9192;
	st.local.u32 	[%rd5+8], %r9192;
	st.local.u32 	[%rd5+4], %r9192;
	st.local.u32 	[%rd5], %r9192;
	st.local.u32 	[%rd4+12], %r9192;
	st.local.u32 	[%rd4+8], %r9192;
	st.local.u32 	[%rd4+4], %r9192;
	st.local.u32 	[%rd4], %r9192;
	st.local.u32 	[%rd3+12], %r9192;
	st.local.u32 	[%rd3+8], %r9192;
	st.local.u32 	[%rd3+4], %r9192;
	st.local.u32 	[%rd3], %r9192;
	st.local.u32 	[%rd2+12], %r9192;
	st.local.u32 	[%rd2+8], %r9192;
	st.local.u32 	[%rd2+4], %r9192;
	st.local.u32 	[%rd2], %r9192;
	st.local.u32 	[%rd1+12], %r9192;
	st.local.u32 	[%rd1+8], %r9192;
	mov.u64 	%rd1229, 0;
	st.local.u32 	[%rd1+4], %rd1229;
	st.local.u32 	[%rd1], %rd1229;
	bra.uni 	BB0_173;

BB0_61:
	setp.eq.s32	%p10, %r3, 29;
	@%p10 bra 	BB0_62;
	bra.uni 	BB0_88;

BB0_62:
	ld.local.u32 	%r883, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9189, %r9158, %r883, %r4;
	// inline asm
	ld.local.u32 	%r886, [%rd8+12];
	ld.local.u32 	%r887, [%rd8+8];
	// inline asm
	prmt.b32 %r9190, %r886, %r887, %r4;
	// inline asm
	ld.local.u32 	%r890, [%rd8+8];
	ld.local.u32 	%r891, [%rd8+4];
	// inline asm
	prmt.b32 %r9183, %r890, %r891, %r4;
	// inline asm
	ld.local.u32 	%r894, [%rd8+4];
	ld.local.u32 	%r895, [%rd8];
	// inline asm
	prmt.b32 %r9184, %r894, %r895, %r4;
	// inline asm
	ld.local.u32 	%r898, [%rd8];
	ld.local.u32 	%r899, [%rd7+12];
	// inline asm
	prmt.b32 %r9185, %r898, %r899, %r4;
	// inline asm
	ld.local.u32 	%r902, [%rd7+12];
	ld.local.u32 	%r903, [%rd7+8];
	// inline asm
	prmt.b32 %r9186, %r902, %r903, %r4;
	// inline asm
	ld.local.u32 	%r906, [%rd7+8];
	ld.local.u32 	%r907, [%rd7+4];
	// inline asm
	prmt.b32 %r9179, %r906, %r907, %r4;
	// inline asm
	ld.local.u32 	%r910, [%rd7+4];
	ld.local.u32 	%r911, [%rd7];
	// inline asm
	prmt.b32 %r9180, %r910, %r911, %r4;
	// inline asm
	ld.local.u32 	%r914, [%rd7];
	ld.local.u32 	%r915, [%rd6+12];
	// inline asm
	prmt.b32 %r9181, %r914, %r915, %r4;
	// inline asm
	ld.local.u32 	%r918, [%rd6+12];
	ld.local.u32 	%r919, [%rd6+8];
	// inline asm
	prmt.b32 %r9182, %r918, %r919, %r4;
	// inline asm
	ld.local.u32 	%r922, [%rd6+8];
	ld.local.u32 	%r923, [%rd6+4];
	// inline asm
	prmt.b32 %r9175, %r922, %r923, %r4;
	// inline asm
	ld.local.u32 	%r926, [%rd6+4];
	ld.local.u32 	%r927, [%rd6];
	// inline asm
	prmt.b32 %r9176, %r926, %r927, %r4;
	// inline asm
	ld.local.u32 	%r930, [%rd6];
	ld.local.u32 	%r931, [%rd5+12];
	// inline asm
	prmt.b32 %r9177, %r930, %r931, %r4;
	// inline asm
	ld.local.u32 	%r934, [%rd5+12];
	ld.local.u32 	%r935, [%rd5+8];
	// inline asm
	prmt.b32 %r9178, %r934, %r935, %r4;
	// inline asm
	ld.local.u32 	%r938, [%rd5+8];
	ld.local.u32 	%r939, [%rd5+4];
	// inline asm
	prmt.b32 %r9171, %r938, %r939, %r4;
	// inline asm
	ld.local.u32 	%r942, [%rd5+4];
	ld.local.u32 	%r943, [%rd5];
	// inline asm
	prmt.b32 %r9172, %r942, %r943, %r4;
	// inline asm
	ld.local.u32 	%r946, [%rd5];
	ld.local.u32 	%r947, [%rd4+12];
	// inline asm
	prmt.b32 %r9173, %r946, %r947, %r4;
	// inline asm
	ld.local.u32 	%r950, [%rd4+12];
	ld.local.u32 	%r951, [%rd4+8];
	// inline asm
	prmt.b32 %r9174, %r950, %r951, %r4;
	// inline asm
	ld.local.u32 	%r954, [%rd4+8];
	ld.local.u32 	%r955, [%rd4+4];
	// inline asm
	prmt.b32 %r9167, %r954, %r955, %r4;
	// inline asm
	ld.local.u32 	%r958, [%rd4+4];
	ld.local.u32 	%r959, [%rd4];
	// inline asm
	prmt.b32 %r9168, %r958, %r959, %r4;
	// inline asm
	ld.local.u32 	%r962, [%rd4];
	ld.local.u32 	%r963, [%rd3+12];
	// inline asm
	prmt.b32 %r9169, %r962, %r963, %r4;
	// inline asm
	ld.local.u32 	%r966, [%rd3+12];
	ld.local.u32 	%r967, [%rd3+8];
	// inline asm
	prmt.b32 %r9170, %r966, %r967, %r4;
	// inline asm
	ld.local.u32 	%r970, [%rd3+8];
	ld.local.u32 	%r971, [%rd3+4];
	// inline asm
	prmt.b32 %r9163, %r970, %r971, %r4;
	// inline asm
	ld.local.u32 	%r974, [%rd3+4];
	ld.local.u32 	%r975, [%rd3];
	// inline asm
	prmt.b32 %r9164, %r974, %r975, %r4;
	// inline asm
	ld.local.u32 	%r978, [%rd3];
	ld.local.u32 	%r979, [%rd2+12];
	// inline asm
	prmt.b32 %r9165, %r978, %r979, %r4;
	// inline asm
	ld.local.u32 	%r982, [%rd2+12];
	ld.local.u32 	%r983, [%rd2+8];
	// inline asm
	prmt.b32 %r9166, %r982, %r983, %r4;
	// inline asm
	ld.local.u32 	%r986, [%rd2+8];
	ld.local.u32 	%r987, [%rd2+4];
	// inline asm
	prmt.b32 %r9159, %r986, %r987, %r4;
	// inline asm
	ld.local.u32 	%r990, [%rd2+4];
	ld.local.u32 	%r991, [%rd2];
	// inline asm
	prmt.b32 %r9160, %r990, %r991, %r4;
	// inline asm
	ld.local.u32 	%r994, [%rd2];
	ld.local.u32 	%r995, [%rd1+12];
	// inline asm
	prmt.b32 %r9161, %r994, %r995, %r4;
	// inline asm
	ld.local.u32 	%r998, [%rd1+12];
	ld.local.u32 	%r999, [%rd1+8];
	// inline asm
	prmt.b32 %r9162, %r998, %r999, %r4;
	// inline asm
	ld.local.u32 	%r1002, [%rd1+8];
	ld.local.u32 	%r1003, [%rd1+4];
	// inline asm
	prmt.b32 %r1001, %r1002, %r1003, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1001;
	ld.local.u32 	%r1006, [%rd1+4];
	ld.local.u32 	%r1007, [%rd1];
	// inline asm
	prmt.b32 %r1005, %r1006, %r1007, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1005;
	ld.local.u32 	%r1010, [%rd1];
	// inline asm
	prmt.b32 %r1009, %r1010, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1009;
	st.local.u32 	[%rd8], %r9158;
	st.local.u32 	[%rd7+12], %r9158;
	st.local.u32 	[%rd7+8], %r9158;
	st.local.u32 	[%rd7+4], %r9158;
	st.local.u32 	[%rd7], %r9158;
	st.local.u32 	[%rd6+12], %r9158;
	st.local.u32 	[%rd6+8], %r9158;
	st.local.u32 	[%rd6+4], %r9158;
	st.local.u32 	[%rd6], %r9158;
	st.local.u32 	[%rd5+12], %r9158;
	st.local.u32 	[%rd5+8], %r9158;
	st.local.u32 	[%rd5+4], %r9158;
	st.local.u32 	[%rd5], %r9158;
	st.local.u32 	[%rd4+12], %r9158;
	st.local.u32 	[%rd4+8], %r9158;
	st.local.u32 	[%rd4+4], %r9158;
	st.local.u32 	[%rd4], %r9158;
	st.local.u32 	[%rd3+12], %r9158;
	st.local.u32 	[%rd3+8], %r9158;
	st.local.u32 	[%rd3+4], %r9158;
	st.local.u32 	[%rd3], %r9158;
	st.local.u32 	[%rd2+12], %r9158;
	st.local.u32 	[%rd2+8], %r9158;
	st.local.u32 	[%rd2+4], %r9158;
	st.local.u32 	[%rd2], %r9158;
	st.local.u32 	[%rd1+12], %r9158;
	st.local.u32 	[%rd1+8], %r9158;
	mov.u64 	%rd181, 0;
	st.local.u32 	[%rd1+4], %rd181;
	st.local.u32 	[%rd1], %rd181;
	mov.u32 	%r9187, %r9158;
	mov.u32 	%r9188, %r9158;
	bra.uni 	BB0_90;

BB0_101:
	setp.eq.s32	%p95, %r3, 3;
	@%p95 bra 	BB0_102;
	bra.uni 	BB0_172;

BB0_102:
	ld.local.u32 	%r7859, [%rd8];
	ld.local.u32 	%r7860, [%rd7+12];
	// inline asm
	prmt.b32 %r7858, %r7859, %r7860, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7858;
	ld.local.u32 	%r7863, [%rd7+12];
	ld.local.u32 	%r7864, [%rd7+8];
	// inline asm
	prmt.b32 %r7862, %r7863, %r7864, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7862;
	ld.local.u32 	%r7867, [%rd7+8];
	ld.local.u32 	%r7868, [%rd7+4];
	// inline asm
	prmt.b32 %r7866, %r7867, %r7868, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7866;
	ld.local.u32 	%r7871, [%rd7+4];
	ld.local.u32 	%r7872, [%rd7];
	// inline asm
	prmt.b32 %r7870, %r7871, %r7872, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7870;
	ld.local.u32 	%r7875, [%rd7];
	ld.local.u32 	%r7876, [%rd6+12];
	// inline asm
	prmt.b32 %r7874, %r7875, %r7876, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7874;
	ld.local.u32 	%r7879, [%rd6+12];
	ld.local.u32 	%r7880, [%rd6+8];
	// inline asm
	prmt.b32 %r7878, %r7879, %r7880, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7878;
	ld.local.u32 	%r7883, [%rd6+8];
	ld.local.u32 	%r7884, [%rd6+4];
	// inline asm
	prmt.b32 %r7882, %r7883, %r7884, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7882;
	ld.local.u32 	%r7887, [%rd6+4];
	ld.local.u32 	%r7888, [%rd6];
	// inline asm
	prmt.b32 %r7886, %r7887, %r7888, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7886;
	ld.local.u32 	%r7891, [%rd6];
	ld.local.u32 	%r7892, [%rd5+12];
	// inline asm
	prmt.b32 %r7890, %r7891, %r7892, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7890;
	ld.local.u32 	%r7895, [%rd5+12];
	ld.local.u32 	%r7896, [%rd5+8];
	// inline asm
	prmt.b32 %r7894, %r7895, %r7896, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7894;
	ld.local.u32 	%r7899, [%rd5+8];
	ld.local.u32 	%r7900, [%rd5+4];
	// inline asm
	prmt.b32 %r7898, %r7899, %r7900, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7898;
	ld.local.u32 	%r7903, [%rd5+4];
	ld.local.u32 	%r7904, [%rd5];
	// inline asm
	prmt.b32 %r7902, %r7903, %r7904, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7902;
	ld.local.u32 	%r7907, [%rd5];
	ld.local.u32 	%r7908, [%rd4+12];
	// inline asm
	prmt.b32 %r7906, %r7907, %r7908, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7906;
	ld.local.u32 	%r7911, [%rd4+12];
	ld.local.u32 	%r7912, [%rd4+8];
	// inline asm
	prmt.b32 %r7910, %r7911, %r7912, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7910;
	ld.local.u32 	%r7915, [%rd4+8];
	ld.local.u32 	%r7916, [%rd4+4];
	// inline asm
	prmt.b32 %r7914, %r7915, %r7916, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7914;
	ld.local.u32 	%r7919, [%rd4+4];
	ld.local.u32 	%r7920, [%rd4];
	// inline asm
	prmt.b32 %r7918, %r7919, %r7920, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7918;
	ld.local.u32 	%r7923, [%rd4];
	ld.local.u32 	%r7924, [%rd3+12];
	// inline asm
	prmt.b32 %r7922, %r7923, %r7924, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7922;
	ld.local.u32 	%r7927, [%rd3+12];
	ld.local.u32 	%r7928, [%rd3+8];
	// inline asm
	prmt.b32 %r7926, %r7927, %r7928, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7926;
	ld.local.u32 	%r7931, [%rd3+8];
	ld.local.u32 	%r7932, [%rd3+4];
	// inline asm
	prmt.b32 %r7930, %r7931, %r7932, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7930;
	ld.local.u32 	%r7935, [%rd3+4];
	ld.local.u32 	%r7936, [%rd3];
	// inline asm
	prmt.b32 %r7934, %r7935, %r7936, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7934;
	ld.local.u32 	%r7939, [%rd3];
	ld.local.u32 	%r7940, [%rd2+12];
	// inline asm
	prmt.b32 %r7938, %r7939, %r7940, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7938;
	ld.local.u32 	%r7943, [%rd2+12];
	ld.local.u32 	%r7944, [%rd2+8];
	// inline asm
	prmt.b32 %r7942, %r7943, %r7944, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7942;
	ld.local.u32 	%r7947, [%rd2+8];
	ld.local.u32 	%r7948, [%rd2+4];
	// inline asm
	prmt.b32 %r7946, %r7947, %r7948, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r7946;
	ld.local.u32 	%r7951, [%rd2+4];
	ld.local.u32 	%r7952, [%rd2];
	// inline asm
	prmt.b32 %r7950, %r7951, %r7952, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r7950;
	ld.local.u32 	%r7955, [%rd2];
	ld.local.u32 	%r7956, [%rd1+12];
	// inline asm
	prmt.b32 %r7954, %r7955, %r7956, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r7954;
	ld.local.u32 	%r7959, [%rd1+12];
	ld.local.u32 	%r7960, [%rd1+8];
	// inline asm
	prmt.b32 %r7958, %r7959, %r7960, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r7958;
	ld.local.u32 	%r7963, [%rd1+8];
	ld.local.u32 	%r7964, [%rd1+4];
	// inline asm
	prmt.b32 %r7962, %r7963, %r7964, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r7962;
	ld.local.u32 	%r7967, [%rd1+4];
	ld.local.u32 	%r7968, [%rd1];
	// inline asm
	prmt.b32 %r7966, %r7967, %r7968, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r7966;
	ld.local.u32 	%r7971, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r7970, %r7971, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r7970;
	st.local.u32 	[%rd1+8], %r9192;
	mov.u64 	%rd1255, 0;
	st.local.u32 	[%rd1+4], %rd1255;
	st.local.u32 	[%rd1], %rd1255;
	bra.uni 	BB0_173;

BB0_10:
	setp.eq.s32	%p47, %r3, 3;
	@%p47 bra 	BB0_11;
	bra.uni 	BB0_88;

BB0_11:
	ld.local.u32 	%r4718, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9159, %r9158, %r4718, %r4;
	// inline asm
	ld.local.u32 	%r4721, [%rd8+12];
	ld.local.u32 	%r4722, [%rd8+8];
	// inline asm
	prmt.b32 %r9160, %r4721, %r4722, %r4;
	// inline asm
	ld.local.u32 	%r4725, [%rd8+8];
	ld.local.u32 	%r4726, [%rd8+4];
	// inline asm
	prmt.b32 %r9161, %r4725, %r4726, %r4;
	// inline asm
	ld.local.u32 	%r4729, [%rd8+4];
	ld.local.u32 	%r4730, [%rd8];
	// inline asm
	prmt.b32 %r9162, %r4729, %r4730, %r4;
	// inline asm
	ld.local.u32 	%r4733, [%rd8];
	ld.local.u32 	%r4734, [%rd7+12];
	// inline asm
	prmt.b32 %r4732, %r4733, %r4734, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r4732;
	ld.local.u32 	%r4737, [%rd7+12];
	ld.local.u32 	%r4738, [%rd7+8];
	// inline asm
	prmt.b32 %r4736, %r4737, %r4738, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r4736;
	ld.local.u32 	%r4741, [%rd7+8];
	ld.local.u32 	%r4742, [%rd7+4];
	// inline asm
	prmt.b32 %r4740, %r4741, %r4742, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r4740;
	ld.local.u32 	%r4745, [%rd7+4];
	ld.local.u32 	%r4746, [%rd7];
	// inline asm
	prmt.b32 %r4744, %r4745, %r4746, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r4744;
	ld.local.u32 	%r4749, [%rd7];
	ld.local.u32 	%r4750, [%rd6+12];
	// inline asm
	prmt.b32 %r4748, %r4749, %r4750, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r4748;
	ld.local.u32 	%r4753, [%rd6+12];
	ld.local.u32 	%r4754, [%rd6+8];
	// inline asm
	prmt.b32 %r4752, %r4753, %r4754, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r4752;
	ld.local.u32 	%r4757, [%rd6+8];
	ld.local.u32 	%r4758, [%rd6+4];
	// inline asm
	prmt.b32 %r4756, %r4757, %r4758, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r4756;
	ld.local.u32 	%r4761, [%rd6+4];
	ld.local.u32 	%r4762, [%rd6];
	// inline asm
	prmt.b32 %r4760, %r4761, %r4762, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r4760;
	ld.local.u32 	%r4765, [%rd6];
	ld.local.u32 	%r4766, [%rd5+12];
	// inline asm
	prmt.b32 %r4764, %r4765, %r4766, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r4764;
	ld.local.u32 	%r4769, [%rd5+12];
	ld.local.u32 	%r4770, [%rd5+8];
	// inline asm
	prmt.b32 %r4768, %r4769, %r4770, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r4768;
	ld.local.u32 	%r4773, [%rd5+8];
	ld.local.u32 	%r4774, [%rd5+4];
	// inline asm
	prmt.b32 %r4772, %r4773, %r4774, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4772;
	ld.local.u32 	%r4777, [%rd5+4];
	ld.local.u32 	%r4778, [%rd5];
	// inline asm
	prmt.b32 %r4776, %r4777, %r4778, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4776;
	ld.local.u32 	%r4781, [%rd5];
	ld.local.u32 	%r4782, [%rd4+12];
	// inline asm
	prmt.b32 %r4780, %r4781, %r4782, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4780;
	ld.local.u32 	%r4785, [%rd4+12];
	ld.local.u32 	%r4786, [%rd4+8];
	// inline asm
	prmt.b32 %r4784, %r4785, %r4786, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4784;
	ld.local.u32 	%r4789, [%rd4+8];
	ld.local.u32 	%r4790, [%rd4+4];
	// inline asm
	prmt.b32 %r4788, %r4789, %r4790, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4788;
	ld.local.u32 	%r4793, [%rd4+4];
	ld.local.u32 	%r4794, [%rd4];
	// inline asm
	prmt.b32 %r4792, %r4793, %r4794, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4792;
	ld.local.u32 	%r4797, [%rd4];
	ld.local.u32 	%r4798, [%rd3+12];
	// inline asm
	prmt.b32 %r4796, %r4797, %r4798, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4796;
	ld.local.u32 	%r4801, [%rd3+12];
	ld.local.u32 	%r4802, [%rd3+8];
	// inline asm
	prmt.b32 %r4800, %r4801, %r4802, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4800;
	ld.local.u32 	%r4805, [%rd3+8];
	ld.local.u32 	%r4806, [%rd3+4];
	// inline asm
	prmt.b32 %r4804, %r4805, %r4806, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4804;
	ld.local.u32 	%r4809, [%rd3+4];
	ld.local.u32 	%r4810, [%rd3];
	// inline asm
	prmt.b32 %r4808, %r4809, %r4810, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4808;
	ld.local.u32 	%r4813, [%rd3];
	ld.local.u32 	%r4814, [%rd2+12];
	// inline asm
	prmt.b32 %r4812, %r4813, %r4814, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4812;
	ld.local.u32 	%r4817, [%rd2+12];
	ld.local.u32 	%r4818, [%rd2+8];
	// inline asm
	prmt.b32 %r4816, %r4817, %r4818, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4816;
	ld.local.u32 	%r4821, [%rd2+8];
	ld.local.u32 	%r4822, [%rd2+4];
	// inline asm
	prmt.b32 %r4820, %r4821, %r4822, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4820;
	ld.local.u32 	%r4825, [%rd2+4];
	ld.local.u32 	%r4826, [%rd2];
	// inline asm
	prmt.b32 %r4824, %r4825, %r4826, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4824;
	ld.local.u32 	%r4829, [%rd2];
	ld.local.u32 	%r4830, [%rd1+12];
	// inline asm
	prmt.b32 %r4828, %r4829, %r4830, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r4828;
	ld.local.u32 	%r4833, [%rd1+12];
	ld.local.u32 	%r4834, [%rd1+8];
	// inline asm
	prmt.b32 %r4832, %r4833, %r4834, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r4832;
	ld.local.u32 	%r4837, [%rd1+8];
	ld.local.u32 	%r4838, [%rd1+4];
	// inline asm
	prmt.b32 %r4836, %r4837, %r4838, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r4836;
	ld.local.u32 	%r4841, [%rd1+4];
	ld.local.u32 	%r4842, [%rd1];
	// inline asm
	prmt.b32 %r4840, %r4841, %r4842, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r4840;
	ld.local.u32 	%r4845, [%rd1];
	// inline asm
	prmt.b32 %r4844, %r4845, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r4844;
	st.local.u32 	[%rd1+8], %r9158;
	mov.u64 	%rd207, 0;
	st.local.u32 	[%rd1+4], %rd207;
	st.local.u32 	[%rd1], %rd207;

BB0_12:
	mov.u32 	%r9163, %r9158;
	mov.u32 	%r9164, %r9158;
	mov.u32 	%r9165, %r9158;
	mov.u32 	%r9166, %r9158;
	bra.uni 	BB0_80;

BB0_132:
	setp.eq.s32	%p72, %r3, 19;
	@%p72 bra 	BB0_133;
	bra.uni 	BB0_172;

BB0_133:
	ld.local.u32 	%r6531, [%rd4];
	ld.local.u32 	%r6532, [%rd3+12];
	// inline asm
	prmt.b32 %r6530, %r6531, %r6532, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6530;
	ld.local.u32 	%r6535, [%rd3+12];
	ld.local.u32 	%r6536, [%rd3+8];
	// inline asm
	prmt.b32 %r6534, %r6535, %r6536, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6534;
	ld.local.u32 	%r6539, [%rd3+8];
	ld.local.u32 	%r6540, [%rd3+4];
	// inline asm
	prmt.b32 %r6538, %r6539, %r6540, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6538;
	ld.local.u32 	%r6543, [%rd3+4];
	ld.local.u32 	%r6544, [%rd3];
	// inline asm
	prmt.b32 %r6542, %r6543, %r6544, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6542;
	ld.local.u32 	%r6547, [%rd3];
	ld.local.u32 	%r6548, [%rd2+12];
	// inline asm
	prmt.b32 %r6546, %r6547, %r6548, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6546;
	ld.local.u32 	%r6551, [%rd2+12];
	ld.local.u32 	%r6552, [%rd2+8];
	// inline asm
	prmt.b32 %r6550, %r6551, %r6552, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6550;
	ld.local.u32 	%r6555, [%rd2+8];
	ld.local.u32 	%r6556, [%rd2+4];
	// inline asm
	prmt.b32 %r6554, %r6555, %r6556, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6554;
	ld.local.u32 	%r6559, [%rd2+4];
	ld.local.u32 	%r6560, [%rd2];
	// inline asm
	prmt.b32 %r6558, %r6559, %r6560, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6558;
	ld.local.u32 	%r6563, [%rd2];
	ld.local.u32 	%r6564, [%rd1+12];
	// inline asm
	prmt.b32 %r6562, %r6563, %r6564, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6562;
	ld.local.u32 	%r6567, [%rd1+12];
	ld.local.u32 	%r6568, [%rd1+8];
	// inline asm
	prmt.b32 %r6566, %r6567, %r6568, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6566;
	ld.local.u32 	%r6571, [%rd1+8];
	ld.local.u32 	%r6572, [%rd1+4];
	// inline asm
	prmt.b32 %r6570, %r6571, %r6572, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6570;
	ld.local.u32 	%r6575, [%rd1+4];
	ld.local.u32 	%r6576, [%rd1];
	// inline asm
	prmt.b32 %r6574, %r6575, %r6576, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6574;
	ld.local.u32 	%r6579, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r6578, %r6579, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r6578;
	st.local.u32 	[%rd5+8], %r9192;
	st.local.u32 	[%rd5+4], %r9192;
	st.local.u32 	[%rd5], %r9192;
	st.local.u32 	[%rd4+12], %r9192;
	st.local.u32 	[%rd4+8], %r9192;
	st.local.u32 	[%rd4+4], %r9192;
	st.local.u32 	[%rd4], %r9192;
	st.local.u32 	[%rd3+12], %r9192;
	st.local.u32 	[%rd3+8], %r9192;
	st.local.u32 	[%rd3+4], %r9192;
	st.local.u32 	[%rd3], %r9192;
	st.local.u32 	[%rd2+12], %r9192;
	st.local.u32 	[%rd2+8], %r9192;
	st.local.u32 	[%rd2+4], %r9192;
	st.local.u32 	[%rd2], %r9192;
	st.local.u32 	[%rd1+12], %r9192;
	st.local.u32 	[%rd1+8], %r9192;
	mov.u64 	%rd1239, 0;
	st.local.u32 	[%rd1+4], %rd1239;
	st.local.u32 	[%rd1], %rd1239;
	bra.uni 	BB0_173;

BB0_42:
	setp.eq.s32	%p24, %r3, 19;
	@%p24 bra 	BB0_43;
	bra.uni 	BB0_88;

BB0_43:
	ld.local.u32 	%r2278, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9175, %r9158, %r2278, %r4;
	// inline asm
	ld.local.u32 	%r2281, [%rd8+12];
	ld.local.u32 	%r2282, [%rd8+8];
	// inline asm
	prmt.b32 %r9176, %r2281, %r2282, %r4;
	// inline asm
	ld.local.u32 	%r2285, [%rd8+8];
	ld.local.u32 	%r2286, [%rd8+4];
	// inline asm
	prmt.b32 %r9177, %r2285, %r2286, %r4;
	// inline asm
	ld.local.u32 	%r2289, [%rd8+4];
	ld.local.u32 	%r2290, [%rd8];
	// inline asm
	prmt.b32 %r9178, %r2289, %r2290, %r4;
	// inline asm
	ld.local.u32 	%r2293, [%rd8];
	ld.local.u32 	%r2294, [%rd7+12];
	// inline asm
	prmt.b32 %r9171, %r2293, %r2294, %r4;
	// inline asm
	ld.local.u32 	%r2297, [%rd7+12];
	ld.local.u32 	%r2298, [%rd7+8];
	// inline asm
	prmt.b32 %r9172, %r2297, %r2298, %r4;
	// inline asm
	ld.local.u32 	%r2301, [%rd7+8];
	ld.local.u32 	%r2302, [%rd7+4];
	// inline asm
	prmt.b32 %r9173, %r2301, %r2302, %r4;
	// inline asm
	ld.local.u32 	%r2305, [%rd7+4];
	ld.local.u32 	%r2306, [%rd7];
	// inline asm
	prmt.b32 %r9174, %r2305, %r2306, %r4;
	// inline asm
	ld.local.u32 	%r2309, [%rd7];
	ld.local.u32 	%r2310, [%rd6+12];
	// inline asm
	prmt.b32 %r9167, %r2309, %r2310, %r4;
	// inline asm
	ld.local.u32 	%r2313, [%rd6+12];
	ld.local.u32 	%r2314, [%rd6+8];
	// inline asm
	prmt.b32 %r9168, %r2313, %r2314, %r4;
	// inline asm
	ld.local.u32 	%r2317, [%rd6+8];
	ld.local.u32 	%r2318, [%rd6+4];
	// inline asm
	prmt.b32 %r9169, %r2317, %r2318, %r4;
	// inline asm
	ld.local.u32 	%r2321, [%rd6+4];
	ld.local.u32 	%r2322, [%rd6];
	// inline asm
	prmt.b32 %r9170, %r2321, %r2322, %r4;
	// inline asm
	ld.local.u32 	%r2325, [%rd6];
	ld.local.u32 	%r2326, [%rd5+12];
	// inline asm
	prmt.b32 %r9163, %r2325, %r2326, %r4;
	// inline asm
	ld.local.u32 	%r2329, [%rd5+12];
	ld.local.u32 	%r2330, [%rd5+8];
	// inline asm
	prmt.b32 %r9164, %r2329, %r2330, %r4;
	// inline asm
	ld.local.u32 	%r2333, [%rd5+8];
	ld.local.u32 	%r2334, [%rd5+4];
	// inline asm
	prmt.b32 %r9165, %r2333, %r2334, %r4;
	// inline asm
	ld.local.u32 	%r2337, [%rd5+4];
	ld.local.u32 	%r2338, [%rd5];
	// inline asm
	prmt.b32 %r9166, %r2337, %r2338, %r4;
	// inline asm
	ld.local.u32 	%r2341, [%rd5];
	ld.local.u32 	%r2342, [%rd4+12];
	// inline asm
	prmt.b32 %r9159, %r2341, %r2342, %r4;
	// inline asm
	ld.local.u32 	%r2345, [%rd4+12];
	ld.local.u32 	%r2346, [%rd4+8];
	// inline asm
	prmt.b32 %r9160, %r2345, %r2346, %r4;
	// inline asm
	ld.local.u32 	%r2349, [%rd4+8];
	ld.local.u32 	%r2350, [%rd4+4];
	// inline asm
	prmt.b32 %r9161, %r2349, %r2350, %r4;
	// inline asm
	ld.local.u32 	%r2353, [%rd4+4];
	ld.local.u32 	%r2354, [%rd4];
	// inline asm
	prmt.b32 %r9162, %r2353, %r2354, %r4;
	// inline asm
	ld.local.u32 	%r2357, [%rd4];
	ld.local.u32 	%r2358, [%rd3+12];
	// inline asm
	prmt.b32 %r2356, %r2357, %r2358, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2356;
	ld.local.u32 	%r2361, [%rd3+12];
	ld.local.u32 	%r2362, [%rd3+8];
	// inline asm
	prmt.b32 %r2360, %r2361, %r2362, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2360;
	ld.local.u32 	%r2365, [%rd3+8];
	ld.local.u32 	%r2366, [%rd3+4];
	// inline asm
	prmt.b32 %r2364, %r2365, %r2366, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2364;
	ld.local.u32 	%r2369, [%rd3+4];
	ld.local.u32 	%r2370, [%rd3];
	// inline asm
	prmt.b32 %r2368, %r2369, %r2370, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2368;
	ld.local.u32 	%r2373, [%rd3];
	ld.local.u32 	%r2374, [%rd2+12];
	// inline asm
	prmt.b32 %r2372, %r2373, %r2374, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2372;
	ld.local.u32 	%r2377, [%rd2+12];
	ld.local.u32 	%r2378, [%rd2+8];
	// inline asm
	prmt.b32 %r2376, %r2377, %r2378, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2376;
	ld.local.u32 	%r2381, [%rd2+8];
	ld.local.u32 	%r2382, [%rd2+4];
	// inline asm
	prmt.b32 %r2380, %r2381, %r2382, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2380;
	ld.local.u32 	%r2385, [%rd2+4];
	ld.local.u32 	%r2386, [%rd2];
	// inline asm
	prmt.b32 %r2384, %r2385, %r2386, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2384;
	ld.local.u32 	%r2389, [%rd2];
	ld.local.u32 	%r2390, [%rd1+12];
	// inline asm
	prmt.b32 %r2388, %r2389, %r2390, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2388;
	ld.local.u32 	%r2393, [%rd1+12];
	ld.local.u32 	%r2394, [%rd1+8];
	// inline asm
	prmt.b32 %r2392, %r2393, %r2394, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2392;
	ld.local.u32 	%r2397, [%rd1+8];
	ld.local.u32 	%r2398, [%rd1+4];
	// inline asm
	prmt.b32 %r2396, %r2397, %r2398, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2396;
	ld.local.u32 	%r2401, [%rd1+4];
	ld.local.u32 	%r2402, [%rd1];
	// inline asm
	prmt.b32 %r2400, %r2401, %r2402, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r2400;
	ld.local.u32 	%r2405, [%rd1];
	// inline asm
	prmt.b32 %r2404, %r2405, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r2404;
	st.local.u32 	[%rd5+8], %r9158;
	st.local.u32 	[%rd5+4], %r9158;
	st.local.u32 	[%rd5], %r9158;
	st.local.u32 	[%rd4+12], %r9158;
	st.local.u32 	[%rd4+8], %r9158;
	st.local.u32 	[%rd4+4], %r9158;
	st.local.u32 	[%rd4], %r9158;
	st.local.u32 	[%rd3+12], %r9158;
	st.local.u32 	[%rd3+8], %r9158;
	st.local.u32 	[%rd3+4], %r9158;
	st.local.u32 	[%rd3], %r9158;
	st.local.u32 	[%rd2+12], %r9158;
	st.local.u32 	[%rd2+8], %r9158;
	st.local.u32 	[%rd2+4], %r9158;
	st.local.u32 	[%rd2], %r9158;
	st.local.u32 	[%rd1+12], %r9158;
	st.local.u32 	[%rd1+8], %r9158;
	mov.u64 	%rd191, 0;
	st.local.u32 	[%rd1+4], %rd191;
	st.local.u32 	[%rd1], %rd191;
	bra.uni 	BB0_83;

BB0_116:
	setp.eq.s32	%p84, %r3, 11;
	@%p84 bra 	BB0_117;
	bra.uni 	BB0_172;

BB0_117:
	ld.local.u32 	%r7067, [%rd6];
	ld.local.u32 	%r7068, [%rd5+12];
	// inline asm
	prmt.b32 %r7066, %r7067, %r7068, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7066;
	ld.local.u32 	%r7071, [%rd5+12];
	ld.local.u32 	%r7072, [%rd5+8];
	// inline asm
	prmt.b32 %r7070, %r7071, %r7072, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7070;
	ld.local.u32 	%r7075, [%rd5+8];
	ld.local.u32 	%r7076, [%rd5+4];
	// inline asm
	prmt.b32 %r7074, %r7075, %r7076, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7074;
	ld.local.u32 	%r7079, [%rd5+4];
	ld.local.u32 	%r7080, [%rd5];
	// inline asm
	prmt.b32 %r7078, %r7079, %r7080, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7078;
	ld.local.u32 	%r7083, [%rd5];
	ld.local.u32 	%r7084, [%rd4+12];
	// inline asm
	prmt.b32 %r7082, %r7083, %r7084, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7082;
	ld.local.u32 	%r7087, [%rd4+12];
	ld.local.u32 	%r7088, [%rd4+8];
	// inline asm
	prmt.b32 %r7086, %r7087, %r7088, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7086;
	ld.local.u32 	%r7091, [%rd4+8];
	ld.local.u32 	%r7092, [%rd4+4];
	// inline asm
	prmt.b32 %r7090, %r7091, %r7092, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7090;
	ld.local.u32 	%r7095, [%rd4+4];
	ld.local.u32 	%r7096, [%rd4];
	// inline asm
	prmt.b32 %r7094, %r7095, %r7096, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7094;
	ld.local.u32 	%r7099, [%rd4];
	ld.local.u32 	%r7100, [%rd3+12];
	// inline asm
	prmt.b32 %r7098, %r7099, %r7100, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7098;
	ld.local.u32 	%r7103, [%rd3+12];
	ld.local.u32 	%r7104, [%rd3+8];
	// inline asm
	prmt.b32 %r7102, %r7103, %r7104, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7102;
	ld.local.u32 	%r7107, [%rd3+8];
	ld.local.u32 	%r7108, [%rd3+4];
	// inline asm
	prmt.b32 %r7106, %r7107, %r7108, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7106;
	ld.local.u32 	%r7111, [%rd3+4];
	ld.local.u32 	%r7112, [%rd3];
	// inline asm
	prmt.b32 %r7110, %r7111, %r7112, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7110;
	ld.local.u32 	%r7115, [%rd3];
	ld.local.u32 	%r7116, [%rd2+12];
	// inline asm
	prmt.b32 %r7114, %r7115, %r7116, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7114;
	ld.local.u32 	%r7119, [%rd2+12];
	ld.local.u32 	%r7120, [%rd2+8];
	// inline asm
	prmt.b32 %r7118, %r7119, %r7120, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7118;
	ld.local.u32 	%r7123, [%rd2+8];
	ld.local.u32 	%r7124, [%rd2+4];
	// inline asm
	prmt.b32 %r7122, %r7123, %r7124, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7122;
	ld.local.u32 	%r7127, [%rd2+4];
	ld.local.u32 	%r7128, [%rd2];
	// inline asm
	prmt.b32 %r7126, %r7127, %r7128, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7126;
	ld.local.u32 	%r7131, [%rd2];
	ld.local.u32 	%r7132, [%rd1+12];
	// inline asm
	prmt.b32 %r7130, %r7131, %r7132, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7130;
	ld.local.u32 	%r7135, [%rd1+12];
	ld.local.u32 	%r7136, [%rd1+8];
	// inline asm
	prmt.b32 %r7134, %r7135, %r7136, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7134;
	ld.local.u32 	%r7139, [%rd1+8];
	ld.local.u32 	%r7140, [%rd1+4];
	// inline asm
	prmt.b32 %r7138, %r7139, %r7140, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7138;
	ld.local.u32 	%r7143, [%rd1+4];
	ld.local.u32 	%r7144, [%rd1];
	// inline asm
	prmt.b32 %r7142, %r7143, %r7144, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7142;
	ld.local.u32 	%r7147, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r7146, %r7147, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7146;
	st.local.u32 	[%rd3+8], %r9192;
	st.local.u32 	[%rd3+4], %r9192;
	st.local.u32 	[%rd3], %r9192;
	st.local.u32 	[%rd2+12], %r9192;
	st.local.u32 	[%rd2+8], %r9192;
	st.local.u32 	[%rd2+4], %r9192;
	st.local.u32 	[%rd2], %r9192;
	st.local.u32 	[%rd1+12], %r9192;
	st.local.u32 	[%rd1+8], %r9192;
	mov.u64 	%rd1247, 0;
	st.local.u32 	[%rd1+4], %rd1247;
	st.local.u32 	[%rd1], %rd1247;
	bra.uni 	BB0_173;

BB0_26:
	setp.eq.s32	%p36, %r3, 11;
	@%p36 bra 	BB0_27;
	bra.uni 	BB0_88;

BB0_27:
	ld.local.u32 	%r3466, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9167, %r9158, %r3466, %r4;
	// inline asm
	ld.local.u32 	%r3469, [%rd8+12];
	ld.local.u32 	%r3470, [%rd8+8];
	// inline asm
	prmt.b32 %r9168, %r3469, %r3470, %r4;
	// inline asm
	ld.local.u32 	%r3473, [%rd8+8];
	ld.local.u32 	%r3474, [%rd8+4];
	// inline asm
	prmt.b32 %r9169, %r3473, %r3474, %r4;
	// inline asm
	ld.local.u32 	%r3477, [%rd8+4];
	ld.local.u32 	%r3478, [%rd8];
	// inline asm
	prmt.b32 %r9170, %r3477, %r3478, %r4;
	// inline asm
	ld.local.u32 	%r3481, [%rd8];
	ld.local.u32 	%r3482, [%rd7+12];
	// inline asm
	prmt.b32 %r9163, %r3481, %r3482, %r4;
	// inline asm
	ld.local.u32 	%r3485, [%rd7+12];
	ld.local.u32 	%r3486, [%rd7+8];
	// inline asm
	prmt.b32 %r9164, %r3485, %r3486, %r4;
	// inline asm
	ld.local.u32 	%r3489, [%rd7+8];
	ld.local.u32 	%r3490, [%rd7+4];
	// inline asm
	prmt.b32 %r9165, %r3489, %r3490, %r4;
	// inline asm
	ld.local.u32 	%r3493, [%rd7+4];
	ld.local.u32 	%r3494, [%rd7];
	// inline asm
	prmt.b32 %r9166, %r3493, %r3494, %r4;
	// inline asm
	ld.local.u32 	%r3497, [%rd7];
	ld.local.u32 	%r3498, [%rd6+12];
	// inline asm
	prmt.b32 %r9159, %r3497, %r3498, %r4;
	// inline asm
	ld.local.u32 	%r3501, [%rd6+12];
	ld.local.u32 	%r3502, [%rd6+8];
	// inline asm
	prmt.b32 %r9160, %r3501, %r3502, %r4;
	// inline asm
	ld.local.u32 	%r3505, [%rd6+8];
	ld.local.u32 	%r3506, [%rd6+4];
	// inline asm
	prmt.b32 %r9161, %r3505, %r3506, %r4;
	// inline asm
	ld.local.u32 	%r3509, [%rd6+4];
	ld.local.u32 	%r3510, [%rd6];
	// inline asm
	prmt.b32 %r9162, %r3509, %r3510, %r4;
	// inline asm
	ld.local.u32 	%r3513, [%rd6];
	ld.local.u32 	%r3514, [%rd5+12];
	// inline asm
	prmt.b32 %r3512, %r3513, %r3514, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3512;
	ld.local.u32 	%r3517, [%rd5+12];
	ld.local.u32 	%r3518, [%rd5+8];
	// inline asm
	prmt.b32 %r3516, %r3517, %r3518, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3516;
	ld.local.u32 	%r3521, [%rd5+8];
	ld.local.u32 	%r3522, [%rd5+4];
	// inline asm
	prmt.b32 %r3520, %r3521, %r3522, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3520;
	ld.local.u32 	%r3525, [%rd5+4];
	ld.local.u32 	%r3526, [%rd5];
	// inline asm
	prmt.b32 %r3524, %r3525, %r3526, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3524;
	ld.local.u32 	%r3529, [%rd5];
	ld.local.u32 	%r3530, [%rd4+12];
	// inline asm
	prmt.b32 %r3528, %r3529, %r3530, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3528;
	ld.local.u32 	%r3533, [%rd4+12];
	ld.local.u32 	%r3534, [%rd4+8];
	// inline asm
	prmt.b32 %r3532, %r3533, %r3534, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3532;
	ld.local.u32 	%r3537, [%rd4+8];
	ld.local.u32 	%r3538, [%rd4+4];
	// inline asm
	prmt.b32 %r3536, %r3537, %r3538, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3536;
	ld.local.u32 	%r3541, [%rd4+4];
	ld.local.u32 	%r3542, [%rd4];
	// inline asm
	prmt.b32 %r3540, %r3541, %r3542, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3540;
	ld.local.u32 	%r3545, [%rd4];
	ld.local.u32 	%r3546, [%rd3+12];
	// inline asm
	prmt.b32 %r3544, %r3545, %r3546, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3544;
	ld.local.u32 	%r3549, [%rd3+12];
	ld.local.u32 	%r3550, [%rd3+8];
	// inline asm
	prmt.b32 %r3548, %r3549, %r3550, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3548;
	ld.local.u32 	%r3553, [%rd3+8];
	ld.local.u32 	%r3554, [%rd3+4];
	// inline asm
	prmt.b32 %r3552, %r3553, %r3554, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3552;
	ld.local.u32 	%r3557, [%rd3+4];
	ld.local.u32 	%r3558, [%rd3];
	// inline asm
	prmt.b32 %r3556, %r3557, %r3558, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3556;
	ld.local.u32 	%r3561, [%rd3];
	ld.local.u32 	%r3562, [%rd2+12];
	// inline asm
	prmt.b32 %r3560, %r3561, %r3562, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3560;
	ld.local.u32 	%r3565, [%rd2+12];
	ld.local.u32 	%r3566, [%rd2+8];
	// inline asm
	prmt.b32 %r3564, %r3565, %r3566, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3564;
	ld.local.u32 	%r3569, [%rd2+8];
	ld.local.u32 	%r3570, [%rd2+4];
	// inline asm
	prmt.b32 %r3568, %r3569, %r3570, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3568;
	ld.local.u32 	%r3573, [%rd2+4];
	ld.local.u32 	%r3574, [%rd2];
	// inline asm
	prmt.b32 %r3572, %r3573, %r3574, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3572;
	ld.local.u32 	%r3577, [%rd2];
	ld.local.u32 	%r3578, [%rd1+12];
	// inline asm
	prmt.b32 %r3576, %r3577, %r3578, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3576;
	ld.local.u32 	%r3581, [%rd1+12];
	ld.local.u32 	%r3582, [%rd1+8];
	// inline asm
	prmt.b32 %r3580, %r3581, %r3582, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3580;
	ld.local.u32 	%r3585, [%rd1+8];
	ld.local.u32 	%r3586, [%rd1+4];
	// inline asm
	prmt.b32 %r3584, %r3585, %r3586, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r3584;
	ld.local.u32 	%r3589, [%rd1+4];
	ld.local.u32 	%r3590, [%rd1];
	// inline asm
	prmt.b32 %r3588, %r3589, %r3590, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r3588;
	ld.local.u32 	%r3593, [%rd1];
	// inline asm
	prmt.b32 %r3592, %r3593, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r3592;
	st.local.u32 	[%rd3+8], %r9158;
	st.local.u32 	[%rd3+4], %r9158;
	st.local.u32 	[%rd3], %r9158;
	st.local.u32 	[%rd2+12], %r9158;
	st.local.u32 	[%rd2+8], %r9158;
	st.local.u32 	[%rd2+4], %r9158;
	st.local.u32 	[%rd2], %r9158;
	st.local.u32 	[%rd1+12], %r9158;
	st.local.u32 	[%rd1+8], %r9158;
	mov.u64 	%rd199, 0;
	st.local.u32 	[%rd1+4], %rd199;
	st.local.u32 	[%rd1], %rd199;
	bra.uni 	BB0_81;

BB0_147:
	setp.eq.s32	%p61, %r3, 27;
	@%p61 bra 	BB0_148;
	bra.uni 	BB0_172;

BB0_148:
	ld.local.u32 	%r6251, [%rd2];
	ld.local.u32 	%r6252, [%rd1+12];
	// inline asm
	prmt.b32 %r6250, %r6251, %r6252, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6250;
	ld.local.u32 	%r6255, [%rd1+12];
	ld.local.u32 	%r6256, [%rd1+8];
	// inline asm
	prmt.b32 %r6254, %r6255, %r6256, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6254;
	ld.local.u32 	%r6259, [%rd1+8];
	ld.local.u32 	%r6260, [%rd1+4];
	// inline asm
	prmt.b32 %r6258, %r6259, %r6260, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6258;
	ld.local.u32 	%r6263, [%rd1+4];
	ld.local.u32 	%r6264, [%rd1];
	// inline asm
	prmt.b32 %r6262, %r6263, %r6264, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6262;
	ld.local.u32 	%r6267, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r6266, %r6267, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6266;
	st.local.u32 	[%rd7+8], %r9192;
	st.local.u32 	[%rd7+4], %r9192;
	st.local.u32 	[%rd7], %r9192;
	st.local.u32 	[%rd6+12], %r9192;
	st.local.u32 	[%rd6+8], %r9192;
	st.local.u32 	[%rd6+4], %r9192;
	st.local.u32 	[%rd6], %r9192;
	st.local.u32 	[%rd5+12], %r9192;
	st.local.u32 	[%rd5+8], %r9192;
	st.local.u32 	[%rd5+4], %r9192;
	st.local.u32 	[%rd5], %r9192;
	st.local.u32 	[%rd4+12], %r9192;
	st.local.u32 	[%rd4+8], %r9192;
	st.local.u32 	[%rd4+4], %r9192;
	st.local.u32 	[%rd4], %r9192;
	st.local.u32 	[%rd3+12], %r9192;
	st.local.u32 	[%rd3+8], %r9192;
	st.local.u32 	[%rd3+4], %r9192;
	st.local.u32 	[%rd3], %r9192;
	st.local.u32 	[%rd2+12], %r9192;
	st.local.u32 	[%rd2+8], %r9192;
	st.local.u32 	[%rd2+4], %r9192;
	st.local.u32 	[%rd2], %r9192;
	st.local.u32 	[%rd1+12], %r9192;
	st.local.u32 	[%rd1+8], %r9192;
	mov.u64 	%rd1231, 0;
	st.local.u32 	[%rd1+4], %rd1231;
	st.local.u32 	[%rd1], %rd1231;
	bra.uni 	BB0_173;

BB0_57:
	setp.eq.s32	%p13, %r3, 27;
	@%p13 bra 	BB0_58;
	bra.uni 	BB0_88;

BB0_58:
	ld.local.u32 	%r1154, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9183, %r9158, %r1154, %r4;
	// inline asm
	ld.local.u32 	%r1157, [%rd8+12];
	ld.local.u32 	%r1158, [%rd8+8];
	// inline asm
	prmt.b32 %r9184, %r1157, %r1158, %r4;
	// inline asm
	ld.local.u32 	%r1161, [%rd8+8];
	ld.local.u32 	%r1162, [%rd8+4];
	// inline asm
	prmt.b32 %r9185, %r1161, %r1162, %r4;
	// inline asm
	ld.local.u32 	%r1165, [%rd8+4];
	ld.local.u32 	%r1166, [%rd8];
	// inline asm
	prmt.b32 %r9186, %r1165, %r1166, %r4;
	// inline asm
	ld.local.u32 	%r1169, [%rd8];
	ld.local.u32 	%r1170, [%rd7+12];
	// inline asm
	prmt.b32 %r9179, %r1169, %r1170, %r4;
	// inline asm
	ld.local.u32 	%r1173, [%rd7+12];
	ld.local.u32 	%r1174, [%rd7+8];
	// inline asm
	prmt.b32 %r9180, %r1173, %r1174, %r4;
	// inline asm
	ld.local.u32 	%r1177, [%rd7+8];
	ld.local.u32 	%r1178, [%rd7+4];
	// inline asm
	prmt.b32 %r9181, %r1177, %r1178, %r4;
	// inline asm
	ld.local.u32 	%r1181, [%rd7+4];
	ld.local.u32 	%r1182, [%rd7];
	// inline asm
	prmt.b32 %r9182, %r1181, %r1182, %r4;
	// inline asm
	ld.local.u32 	%r1185, [%rd7];
	ld.local.u32 	%r1186, [%rd6+12];
	// inline asm
	prmt.b32 %r9175, %r1185, %r1186, %r4;
	// inline asm
	ld.local.u32 	%r1189, [%rd6+12];
	ld.local.u32 	%r1190, [%rd6+8];
	// inline asm
	prmt.b32 %r9176, %r1189, %r1190, %r4;
	// inline asm
	ld.local.u32 	%r1193, [%rd6+8];
	ld.local.u32 	%r1194, [%rd6+4];
	// inline asm
	prmt.b32 %r9177, %r1193, %r1194, %r4;
	// inline asm
	ld.local.u32 	%r1197, [%rd6+4];
	ld.local.u32 	%r1198, [%rd6];
	// inline asm
	prmt.b32 %r9178, %r1197, %r1198, %r4;
	// inline asm
	ld.local.u32 	%r1201, [%rd6];
	ld.local.u32 	%r1202, [%rd5+12];
	// inline asm
	prmt.b32 %r9171, %r1201, %r1202, %r4;
	// inline asm
	ld.local.u32 	%r1205, [%rd5+12];
	ld.local.u32 	%r1206, [%rd5+8];
	// inline asm
	prmt.b32 %r9172, %r1205, %r1206, %r4;
	// inline asm
	ld.local.u32 	%r1209, [%rd5+8];
	ld.local.u32 	%r1210, [%rd5+4];
	// inline asm
	prmt.b32 %r9173, %r1209, %r1210, %r4;
	// inline asm
	ld.local.u32 	%r1213, [%rd5+4];
	ld.local.u32 	%r1214, [%rd5];
	// inline asm
	prmt.b32 %r9174, %r1213, %r1214, %r4;
	// inline asm
	ld.local.u32 	%r1217, [%rd5];
	ld.local.u32 	%r1218, [%rd4+12];
	// inline asm
	prmt.b32 %r9167, %r1217, %r1218, %r4;
	// inline asm
	ld.local.u32 	%r1221, [%rd4+12];
	ld.local.u32 	%r1222, [%rd4+8];
	// inline asm
	prmt.b32 %r9168, %r1221, %r1222, %r4;
	// inline asm
	ld.local.u32 	%r1225, [%rd4+8];
	ld.local.u32 	%r1226, [%rd4+4];
	// inline asm
	prmt.b32 %r9169, %r1225, %r1226, %r4;
	// inline asm
	ld.local.u32 	%r1229, [%rd4+4];
	ld.local.u32 	%r1230, [%rd4];
	// inline asm
	prmt.b32 %r9170, %r1229, %r1230, %r4;
	// inline asm
	ld.local.u32 	%r1233, [%rd4];
	ld.local.u32 	%r1234, [%rd3+12];
	// inline asm
	prmt.b32 %r9163, %r1233, %r1234, %r4;
	// inline asm
	ld.local.u32 	%r1237, [%rd3+12];
	ld.local.u32 	%r1238, [%rd3+8];
	// inline asm
	prmt.b32 %r9164, %r1237, %r1238, %r4;
	// inline asm
	ld.local.u32 	%r1241, [%rd3+8];
	ld.local.u32 	%r1242, [%rd3+4];
	// inline asm
	prmt.b32 %r9165, %r1241, %r1242, %r4;
	// inline asm
	ld.local.u32 	%r1245, [%rd3+4];
	ld.local.u32 	%r1246, [%rd3];
	// inline asm
	prmt.b32 %r9166, %r1245, %r1246, %r4;
	// inline asm
	ld.local.u32 	%r1249, [%rd3];
	ld.local.u32 	%r1250, [%rd2+12];
	// inline asm
	prmt.b32 %r9159, %r1249, %r1250, %r4;
	// inline asm
	ld.local.u32 	%r1253, [%rd2+12];
	ld.local.u32 	%r1254, [%rd2+8];
	// inline asm
	prmt.b32 %r9160, %r1253, %r1254, %r4;
	// inline asm
	ld.local.u32 	%r1257, [%rd2+8];
	ld.local.u32 	%r1258, [%rd2+4];
	// inline asm
	prmt.b32 %r9161, %r1257, %r1258, %r4;
	// inline asm
	ld.local.u32 	%r1261, [%rd2+4];
	ld.local.u32 	%r1262, [%rd2];
	// inline asm
	prmt.b32 %r9162, %r1261, %r1262, %r4;
	// inline asm
	ld.local.u32 	%r1265, [%rd2];
	ld.local.u32 	%r1266, [%rd1+12];
	// inline asm
	prmt.b32 %r1264, %r1265, %r1266, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1264;
	ld.local.u32 	%r1269, [%rd1+12];
	ld.local.u32 	%r1270, [%rd1+8];
	// inline asm
	prmt.b32 %r1268, %r1269, %r1270, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1268;
	ld.local.u32 	%r1273, [%rd1+8];
	ld.local.u32 	%r1274, [%rd1+4];
	// inline asm
	prmt.b32 %r1272, %r1273, %r1274, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1272;
	ld.local.u32 	%r1277, [%rd1+4];
	ld.local.u32 	%r1278, [%rd1];
	// inline asm
	prmt.b32 %r1276, %r1277, %r1278, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1276;
	ld.local.u32 	%r1281, [%rd1];
	// inline asm
	prmt.b32 %r1280, %r1281, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r1280;
	st.local.u32 	[%rd7+8], %r9158;
	st.local.u32 	[%rd7+4], %r9158;
	st.local.u32 	[%rd7], %r9158;
	st.local.u32 	[%rd6+12], %r9158;
	st.local.u32 	[%rd6+8], %r9158;
	st.local.u32 	[%rd6+4], %r9158;
	st.local.u32 	[%rd6], %r9158;
	st.local.u32 	[%rd5+12], %r9158;
	st.local.u32 	[%rd5+8], %r9158;
	st.local.u32 	[%rd5+4], %r9158;
	st.local.u32 	[%rd5], %r9158;
	st.local.u32 	[%rd4+12], %r9158;
	st.local.u32 	[%rd4+8], %r9158;
	st.local.u32 	[%rd4+4], %r9158;
	st.local.u32 	[%rd4], %r9158;
	st.local.u32 	[%rd3+12], %r9158;
	st.local.u32 	[%rd3+8], %r9158;
	st.local.u32 	[%rd3+4], %r9158;
	st.local.u32 	[%rd3], %r9158;
	st.local.u32 	[%rd2+12], %r9158;
	st.local.u32 	[%rd2+8], %r9158;
	st.local.u32 	[%rd2+4], %r9158;
	st.local.u32 	[%rd2], %r9158;
	st.local.u32 	[%rd1+12], %r9158;
	st.local.u32 	[%rd1+8], %r9158;
	mov.u64 	%rd183, 0;
	st.local.u32 	[%rd1+4], %rd183;
	st.local.u32 	[%rd1], %rd183;
	bra.uni 	BB0_85;

BB0_108:
	setp.eq.s32	%p90, %r3, 7;
	@%p90 bra 	BB0_109;
	bra.uni 	BB0_172;

BB0_109:
	ld.local.u32 	%r7431, [%rd7];
	ld.local.u32 	%r7432, [%rd6+12];
	// inline asm
	prmt.b32 %r7430, %r7431, %r7432, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7430;
	ld.local.u32 	%r7435, [%rd6+12];
	ld.local.u32 	%r7436, [%rd6+8];
	// inline asm
	prmt.b32 %r7434, %r7435, %r7436, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7434;
	ld.local.u32 	%r7439, [%rd6+8];
	ld.local.u32 	%r7440, [%rd6+4];
	// inline asm
	prmt.b32 %r7438, %r7439, %r7440, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7438;
	ld.local.u32 	%r7443, [%rd6+4];
	ld.local.u32 	%r7444, [%rd6];
	// inline asm
	prmt.b32 %r7442, %r7443, %r7444, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7442;
	ld.local.u32 	%r7447, [%rd6];
	ld.local.u32 	%r7448, [%rd5+12];
	// inline asm
	prmt.b32 %r7446, %r7447, %r7448, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7446;
	ld.local.u32 	%r7451, [%rd5+12];
	ld.local.u32 	%r7452, [%rd5+8];
	// inline asm
	prmt.b32 %r7450, %r7451, %r7452, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7450;
	ld.local.u32 	%r7455, [%rd5+8];
	ld.local.u32 	%r7456, [%rd5+4];
	// inline asm
	prmt.b32 %r7454, %r7455, %r7456, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7454;
	ld.local.u32 	%r7459, [%rd5+4];
	ld.local.u32 	%r7460, [%rd5];
	// inline asm
	prmt.b32 %r7458, %r7459, %r7460, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7458;
	ld.local.u32 	%r7463, [%rd5];
	ld.local.u32 	%r7464, [%rd4+12];
	// inline asm
	prmt.b32 %r7462, %r7463, %r7464, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7462;
	ld.local.u32 	%r7467, [%rd4+12];
	ld.local.u32 	%r7468, [%rd4+8];
	// inline asm
	prmt.b32 %r7466, %r7467, %r7468, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7466;
	ld.local.u32 	%r7471, [%rd4+8];
	ld.local.u32 	%r7472, [%rd4+4];
	// inline asm
	prmt.b32 %r7470, %r7471, %r7472, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7470;
	ld.local.u32 	%r7475, [%rd4+4];
	ld.local.u32 	%r7476, [%rd4];
	// inline asm
	prmt.b32 %r7474, %r7475, %r7476, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7474;
	ld.local.u32 	%r7479, [%rd4];
	ld.local.u32 	%r7480, [%rd3+12];
	// inline asm
	prmt.b32 %r7478, %r7479, %r7480, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7478;
	ld.local.u32 	%r7483, [%rd3+12];
	ld.local.u32 	%r7484, [%rd3+8];
	// inline asm
	prmt.b32 %r7482, %r7483, %r7484, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7482;
	ld.local.u32 	%r7487, [%rd3+8];
	ld.local.u32 	%r7488, [%rd3+4];
	// inline asm
	prmt.b32 %r7486, %r7487, %r7488, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7486;
	ld.local.u32 	%r7491, [%rd3+4];
	ld.local.u32 	%r7492, [%rd3];
	// inline asm
	prmt.b32 %r7490, %r7491, %r7492, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7490;
	ld.local.u32 	%r7495, [%rd3];
	ld.local.u32 	%r7496, [%rd2+12];
	// inline asm
	prmt.b32 %r7494, %r7495, %r7496, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7494;
	ld.local.u32 	%r7499, [%rd2+12];
	ld.local.u32 	%r7500, [%rd2+8];
	// inline asm
	prmt.b32 %r7498, %r7499, %r7500, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7498;
	ld.local.u32 	%r7503, [%rd2+8];
	ld.local.u32 	%r7504, [%rd2+4];
	// inline asm
	prmt.b32 %r7502, %r7503, %r7504, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7502;
	ld.local.u32 	%r7507, [%rd2+4];
	ld.local.u32 	%r7508, [%rd2];
	// inline asm
	prmt.b32 %r7506, %r7507, %r7508, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7506;
	ld.local.u32 	%r7511, [%rd2];
	ld.local.u32 	%r7512, [%rd1+12];
	// inline asm
	prmt.b32 %r7510, %r7511, %r7512, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7510;
	ld.local.u32 	%r7515, [%rd1+12];
	ld.local.u32 	%r7516, [%rd1+8];
	// inline asm
	prmt.b32 %r7514, %r7515, %r7516, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7514;
	ld.local.u32 	%r7519, [%rd1+8];
	ld.local.u32 	%r7520, [%rd1+4];
	// inline asm
	prmt.b32 %r7518, %r7519, %r7520, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r7518;
	ld.local.u32 	%r7523, [%rd1+4];
	ld.local.u32 	%r7524, [%rd1];
	// inline asm
	prmt.b32 %r7522, %r7523, %r7524, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r7522;
	ld.local.u32 	%r7527, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r7526, %r7527, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r7526;
	st.local.u32 	[%rd2+8], %r9192;
	st.local.u32 	[%rd2+4], %r9192;
	st.local.u32 	[%rd2], %r9192;
	st.local.u32 	[%rd1+12], %r9192;
	st.local.u32 	[%rd1+8], %r9192;
	mov.u64 	%rd1251, 0;
	st.local.u32 	[%rd1+4], %rd1251;
	st.local.u32 	[%rd1], %rd1251;
	bra.uni 	BB0_173;

BB0_18:
	setp.eq.s32	%p42, %r3, 7;
	@%p42 bra 	BB0_19;
	bra.uni 	BB0_88;

BB0_19:
	ld.local.u32 	%r4084, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9163, %r9158, %r4084, %r4;
	// inline asm
	ld.local.u32 	%r4087, [%rd8+12];
	ld.local.u32 	%r4088, [%rd8+8];
	// inline asm
	prmt.b32 %r9164, %r4087, %r4088, %r4;
	// inline asm
	ld.local.u32 	%r4091, [%rd8+8];
	ld.local.u32 	%r4092, [%rd8+4];
	// inline asm
	prmt.b32 %r9165, %r4091, %r4092, %r4;
	// inline asm
	ld.local.u32 	%r4095, [%rd8+4];
	ld.local.u32 	%r4096, [%rd8];
	// inline asm
	prmt.b32 %r9166, %r4095, %r4096, %r4;
	// inline asm
	ld.local.u32 	%r4099, [%rd8];
	ld.local.u32 	%r4100, [%rd7+12];
	// inline asm
	prmt.b32 %r9159, %r4099, %r4100, %r4;
	// inline asm
	ld.local.u32 	%r4103, [%rd7+12];
	ld.local.u32 	%r4104, [%rd7+8];
	// inline asm
	prmt.b32 %r9160, %r4103, %r4104, %r4;
	// inline asm
	ld.local.u32 	%r4107, [%rd7+8];
	ld.local.u32 	%r4108, [%rd7+4];
	// inline asm
	prmt.b32 %r9161, %r4107, %r4108, %r4;
	// inline asm
	ld.local.u32 	%r4111, [%rd7+4];
	ld.local.u32 	%r4112, [%rd7];
	// inline asm
	prmt.b32 %r9162, %r4111, %r4112, %r4;
	// inline asm
	ld.local.u32 	%r4115, [%rd7];
	ld.local.u32 	%r4116, [%rd6+12];
	// inline asm
	prmt.b32 %r4114, %r4115, %r4116, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r4114;
	ld.local.u32 	%r4119, [%rd6+12];
	ld.local.u32 	%r4120, [%rd6+8];
	// inline asm
	prmt.b32 %r4118, %r4119, %r4120, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r4118;
	ld.local.u32 	%r4123, [%rd6+8];
	ld.local.u32 	%r4124, [%rd6+4];
	// inline asm
	prmt.b32 %r4122, %r4123, %r4124, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r4122;
	ld.local.u32 	%r4127, [%rd6+4];
	ld.local.u32 	%r4128, [%rd6];
	// inline asm
	prmt.b32 %r4126, %r4127, %r4128, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r4126;
	ld.local.u32 	%r4131, [%rd6];
	ld.local.u32 	%r4132, [%rd5+12];
	// inline asm
	prmt.b32 %r4130, %r4131, %r4132, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r4130;
	ld.local.u32 	%r4135, [%rd5+12];
	ld.local.u32 	%r4136, [%rd5+8];
	// inline asm
	prmt.b32 %r4134, %r4135, %r4136, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r4134;
	ld.local.u32 	%r4139, [%rd5+8];
	ld.local.u32 	%r4140, [%rd5+4];
	// inline asm
	prmt.b32 %r4138, %r4139, %r4140, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r4138;
	ld.local.u32 	%r4143, [%rd5+4];
	ld.local.u32 	%r4144, [%rd5];
	// inline asm
	prmt.b32 %r4142, %r4143, %r4144, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r4142;
	ld.local.u32 	%r4147, [%rd5];
	ld.local.u32 	%r4148, [%rd4+12];
	// inline asm
	prmt.b32 %r4146, %r4147, %r4148, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r4146;
	ld.local.u32 	%r4151, [%rd4+12];
	ld.local.u32 	%r4152, [%rd4+8];
	// inline asm
	prmt.b32 %r4150, %r4151, %r4152, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r4150;
	ld.local.u32 	%r4155, [%rd4+8];
	ld.local.u32 	%r4156, [%rd4+4];
	// inline asm
	prmt.b32 %r4154, %r4155, %r4156, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4154;
	ld.local.u32 	%r4159, [%rd4+4];
	ld.local.u32 	%r4160, [%rd4];
	// inline asm
	prmt.b32 %r4158, %r4159, %r4160, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4158;
	ld.local.u32 	%r4163, [%rd4];
	ld.local.u32 	%r4164, [%rd3+12];
	// inline asm
	prmt.b32 %r4162, %r4163, %r4164, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4162;
	ld.local.u32 	%r4167, [%rd3+12];
	ld.local.u32 	%r4168, [%rd3+8];
	// inline asm
	prmt.b32 %r4166, %r4167, %r4168, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4166;
	ld.local.u32 	%r4171, [%rd3+8];
	ld.local.u32 	%r4172, [%rd3+4];
	// inline asm
	prmt.b32 %r4170, %r4171, %r4172, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4170;
	ld.local.u32 	%r4175, [%rd3+4];
	ld.local.u32 	%r4176, [%rd3];
	// inline asm
	prmt.b32 %r4174, %r4175, %r4176, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4174;
	ld.local.u32 	%r4179, [%rd3];
	ld.local.u32 	%r4180, [%rd2+12];
	// inline asm
	prmt.b32 %r4178, %r4179, %r4180, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4178;
	ld.local.u32 	%r4183, [%rd2+12];
	ld.local.u32 	%r4184, [%rd2+8];
	// inline asm
	prmt.b32 %r4182, %r4183, %r4184, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4182;
	ld.local.u32 	%r4187, [%rd2+8];
	ld.local.u32 	%r4188, [%rd2+4];
	// inline asm
	prmt.b32 %r4186, %r4187, %r4188, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4186;
	ld.local.u32 	%r4191, [%rd2+4];
	ld.local.u32 	%r4192, [%rd2];
	// inline asm
	prmt.b32 %r4190, %r4191, %r4192, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4190;
	ld.local.u32 	%r4195, [%rd2];
	ld.local.u32 	%r4196, [%rd1+12];
	// inline asm
	prmt.b32 %r4194, %r4195, %r4196, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4194;
	ld.local.u32 	%r4199, [%rd1+12];
	ld.local.u32 	%r4200, [%rd1+8];
	// inline asm
	prmt.b32 %r4198, %r4199, %r4200, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4198;
	ld.local.u32 	%r4203, [%rd1+8];
	ld.local.u32 	%r4204, [%rd1+4];
	// inline asm
	prmt.b32 %r4202, %r4203, %r4204, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4202;
	ld.local.u32 	%r4207, [%rd1+4];
	ld.local.u32 	%r4208, [%rd1];
	// inline asm
	prmt.b32 %r4206, %r4207, %r4208, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4206;
	ld.local.u32 	%r4211, [%rd1];
	// inline asm
	prmt.b32 %r4210, %r4211, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r4210;
	st.local.u32 	[%rd2+8], %r9158;
	st.local.u32 	[%rd2+4], %r9158;
	st.local.u32 	[%rd2], %r9158;
	st.local.u32 	[%rd1+12], %r9158;
	st.local.u32 	[%rd1+8], %r9158;
	mov.u64 	%rd203, 0;
	st.local.u32 	[%rd1+4], %rd203;
	st.local.u32 	[%rd1], %rd203;

BB0_80:
	mov.u32 	%r9167, %r9158;
	mov.u32 	%r9168, %r9158;
	mov.u32 	%r9169, %r9158;
	mov.u32 	%r9170, %r9158;

BB0_81:
	mov.u32 	%r9171, %r9158;
	mov.u32 	%r9172, %r9158;
	mov.u32 	%r9173, %r9158;
	mov.u32 	%r9174, %r9158;

BB0_82:
	mov.u32 	%r9175, %r9158;
	mov.u32 	%r9176, %r9158;
	mov.u32 	%r9177, %r9158;
	mov.u32 	%r9178, %r9158;

BB0_83:
	mov.u32 	%r9179, %r9158;
	mov.u32 	%r9180, %r9158;
	mov.u32 	%r9181, %r9158;
	mov.u32 	%r9182, %r9158;

BB0_84:
	mov.u32 	%r9183, %r9158;
	mov.u32 	%r9184, %r9158;
	mov.u32 	%r9185, %r9158;
	mov.u32 	%r9186, %r9158;

BB0_85:
	mov.u32 	%r9187, %r9158;
	mov.u32 	%r9188, %r9158;
	mov.u32 	%r9189, %r9158;
	mov.u32 	%r9190, %r9158;
	bra.uni 	BB0_90;

BB0_139:
	setp.eq.s32	%p67, %r3, 23;
	@%p67 bra 	BB0_140;
	bra.uni 	BB0_172;

BB0_140:
	ld.local.u32 	%r6359, [%rd3];
	ld.local.u32 	%r6360, [%rd2+12];
	// inline asm
	prmt.b32 %r6358, %r6359, %r6360, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6358;
	ld.local.u32 	%r6363, [%rd2+12];
	ld.local.u32 	%r6364, [%rd2+8];
	// inline asm
	prmt.b32 %r6362, %r6363, %r6364, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6362;
	ld.local.u32 	%r6367, [%rd2+8];
	ld.local.u32 	%r6368, [%rd2+4];
	// inline asm
	prmt.b32 %r6366, %r6367, %r6368, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6366;
	ld.local.u32 	%r6371, [%rd2+4];
	ld.local.u32 	%r6372, [%rd2];
	// inline asm
	prmt.b32 %r6370, %r6371, %r6372, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6370;
	ld.local.u32 	%r6375, [%rd2];
	ld.local.u32 	%r6376, [%rd1+12];
	// inline asm
	prmt.b32 %r6374, %r6375, %r6376, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6374;
	ld.local.u32 	%r6379, [%rd1+12];
	ld.local.u32 	%r6380, [%rd1+8];
	// inline asm
	prmt.b32 %r6378, %r6379, %r6380, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6378;
	ld.local.u32 	%r6383, [%rd1+8];
	ld.local.u32 	%r6384, [%rd1+4];
	// inline asm
	prmt.b32 %r6382, %r6383, %r6384, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6382;
	ld.local.u32 	%r6387, [%rd1+4];
	ld.local.u32 	%r6388, [%rd1];
	// inline asm
	prmt.b32 %r6386, %r6387, %r6388, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6386;
	ld.local.u32 	%r6391, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r6390, %r6391, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6390;
	st.local.u32 	[%rd6+8], %r9192;
	st.local.u32 	[%rd6+4], %r9192;
	st.local.u32 	[%rd6], %r9192;
	st.local.u32 	[%rd5+12], %r9192;
	st.local.u32 	[%rd5+8], %r9192;
	st.local.u32 	[%rd5+4], %r9192;
	st.local.u32 	[%rd5], %r9192;
	st.local.u32 	[%rd4+12], %r9192;
	st.local.u32 	[%rd4+8], %r9192;
	st.local.u32 	[%rd4+4], %r9192;
	st.local.u32 	[%rd4], %r9192;
	st.local.u32 	[%rd3+12], %r9192;
	st.local.u32 	[%rd3+8], %r9192;
	st.local.u32 	[%rd3+4], %r9192;
	st.local.u32 	[%rd3], %r9192;
	st.local.u32 	[%rd2+12], %r9192;
	st.local.u32 	[%rd2+8], %r9192;
	st.local.u32 	[%rd2+4], %r9192;
	st.local.u32 	[%rd2], %r9192;
	st.local.u32 	[%rd1+12], %r9192;
	st.local.u32 	[%rd1+8], %r9192;
	mov.u64 	%rd1235, 0;
	st.local.u32 	[%rd1+4], %rd1235;
	st.local.u32 	[%rd1], %rd1235;
	bra.uni 	BB0_173;

BB0_49:
	setp.eq.s32	%p19, %r3, 23;
	@%p19 bra 	BB0_50;
	bra.uni 	BB0_88;

BB0_50:
	ld.local.u32 	%r1708, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9179, %r9158, %r1708, %r4;
	// inline asm
	ld.local.u32 	%r1711, [%rd8+12];
	ld.local.u32 	%r1712, [%rd8+8];
	// inline asm
	prmt.b32 %r9180, %r1711, %r1712, %r4;
	// inline asm
	ld.local.u32 	%r1715, [%rd8+8];
	ld.local.u32 	%r1716, [%rd8+4];
	// inline asm
	prmt.b32 %r9181, %r1715, %r1716, %r4;
	// inline asm
	ld.local.u32 	%r1719, [%rd8+4];
	ld.local.u32 	%r1720, [%rd8];
	// inline asm
	prmt.b32 %r9182, %r1719, %r1720, %r4;
	// inline asm
	ld.local.u32 	%r1723, [%rd8];
	ld.local.u32 	%r1724, [%rd7+12];
	// inline asm
	prmt.b32 %r9175, %r1723, %r1724, %r4;
	// inline asm
	ld.local.u32 	%r1727, [%rd7+12];
	ld.local.u32 	%r1728, [%rd7+8];
	// inline asm
	prmt.b32 %r9176, %r1727, %r1728, %r4;
	// inline asm
	ld.local.u32 	%r1731, [%rd7+8];
	ld.local.u32 	%r1732, [%rd7+4];
	// inline asm
	prmt.b32 %r9177, %r1731, %r1732, %r4;
	// inline asm
	ld.local.u32 	%r1735, [%rd7+4];
	ld.local.u32 	%r1736, [%rd7];
	// inline asm
	prmt.b32 %r9178, %r1735, %r1736, %r4;
	// inline asm
	ld.local.u32 	%r1739, [%rd7];
	ld.local.u32 	%r1740, [%rd6+12];
	// inline asm
	prmt.b32 %r9171, %r1739, %r1740, %r4;
	// inline asm
	ld.local.u32 	%r1743, [%rd6+12];
	ld.local.u32 	%r1744, [%rd6+8];
	// inline asm
	prmt.b32 %r9172, %r1743, %r1744, %r4;
	// inline asm
	ld.local.u32 	%r1747, [%rd6+8];
	ld.local.u32 	%r1748, [%rd6+4];
	// inline asm
	prmt.b32 %r9173, %r1747, %r1748, %r4;
	// inline asm
	ld.local.u32 	%r1751, [%rd6+4];
	ld.local.u32 	%r1752, [%rd6];
	// inline asm
	prmt.b32 %r9174, %r1751, %r1752, %r4;
	// inline asm
	ld.local.u32 	%r1755, [%rd6];
	ld.local.u32 	%r1756, [%rd5+12];
	// inline asm
	prmt.b32 %r9167, %r1755, %r1756, %r4;
	// inline asm
	ld.local.u32 	%r1759, [%rd5+12];
	ld.local.u32 	%r1760, [%rd5+8];
	// inline asm
	prmt.b32 %r9168, %r1759, %r1760, %r4;
	// inline asm
	ld.local.u32 	%r1763, [%rd5+8];
	ld.local.u32 	%r1764, [%rd5+4];
	// inline asm
	prmt.b32 %r9169, %r1763, %r1764, %r4;
	// inline asm
	ld.local.u32 	%r1767, [%rd5+4];
	ld.local.u32 	%r1768, [%rd5];
	// inline asm
	prmt.b32 %r9170, %r1767, %r1768, %r4;
	// inline asm
	ld.local.u32 	%r1771, [%rd5];
	ld.local.u32 	%r1772, [%rd4+12];
	// inline asm
	prmt.b32 %r9163, %r1771, %r1772, %r4;
	// inline asm
	ld.local.u32 	%r1775, [%rd4+12];
	ld.local.u32 	%r1776, [%rd4+8];
	// inline asm
	prmt.b32 %r9164, %r1775, %r1776, %r4;
	// inline asm
	ld.local.u32 	%r1779, [%rd4+8];
	ld.local.u32 	%r1780, [%rd4+4];
	// inline asm
	prmt.b32 %r9165, %r1779, %r1780, %r4;
	// inline asm
	ld.local.u32 	%r1783, [%rd4+4];
	ld.local.u32 	%r1784, [%rd4];
	// inline asm
	prmt.b32 %r9166, %r1783, %r1784, %r4;
	// inline asm
	ld.local.u32 	%r1787, [%rd4];
	ld.local.u32 	%r1788, [%rd3+12];
	// inline asm
	prmt.b32 %r9159, %r1787, %r1788, %r4;
	// inline asm
	ld.local.u32 	%r1791, [%rd3+12];
	ld.local.u32 	%r1792, [%rd3+8];
	// inline asm
	prmt.b32 %r9160, %r1791, %r1792, %r4;
	// inline asm
	ld.local.u32 	%r1795, [%rd3+8];
	ld.local.u32 	%r1796, [%rd3+4];
	// inline asm
	prmt.b32 %r9161, %r1795, %r1796, %r4;
	// inline asm
	ld.local.u32 	%r1799, [%rd3+4];
	ld.local.u32 	%r1800, [%rd3];
	// inline asm
	prmt.b32 %r9162, %r1799, %r1800, %r4;
	// inline asm
	ld.local.u32 	%r1803, [%rd3];
	ld.local.u32 	%r1804, [%rd2+12];
	// inline asm
	prmt.b32 %r1802, %r1803, %r1804, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1802;
	ld.local.u32 	%r1807, [%rd2+12];
	ld.local.u32 	%r1808, [%rd2+8];
	// inline asm
	prmt.b32 %r1806, %r1807, %r1808, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1806;
	ld.local.u32 	%r1811, [%rd2+8];
	ld.local.u32 	%r1812, [%rd2+4];
	// inline asm
	prmt.b32 %r1810, %r1811, %r1812, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1810;
	ld.local.u32 	%r1815, [%rd2+4];
	ld.local.u32 	%r1816, [%rd2];
	// inline asm
	prmt.b32 %r1814, %r1815, %r1816, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1814;
	ld.local.u32 	%r1819, [%rd2];
	ld.local.u32 	%r1820, [%rd1+12];
	// inline asm
	prmt.b32 %r1818, %r1819, %r1820, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r1818;
	ld.local.u32 	%r1823, [%rd1+12];
	ld.local.u32 	%r1824, [%rd1+8];
	// inline asm
	prmt.b32 %r1822, %r1823, %r1824, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r1822;
	ld.local.u32 	%r1827, [%rd1+8];
	ld.local.u32 	%r1828, [%rd1+4];
	// inline asm
	prmt.b32 %r1826, %r1827, %r1828, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r1826;
	ld.local.u32 	%r1831, [%rd1+4];
	ld.local.u32 	%r1832, [%rd1];
	// inline asm
	prmt.b32 %r1830, %r1831, %r1832, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r1830;
	ld.local.u32 	%r1835, [%rd1];
	// inline asm
	prmt.b32 %r1834, %r1835, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r1834;
	st.local.u32 	[%rd6+8], %r9158;
	st.local.u32 	[%rd6+4], %r9158;
	st.local.u32 	[%rd6], %r9158;
	st.local.u32 	[%rd5+12], %r9158;
	st.local.u32 	[%rd5+8], %r9158;
	st.local.u32 	[%rd5+4], %r9158;
	st.local.u32 	[%rd5], %r9158;
	st.local.u32 	[%rd4+12], %r9158;
	st.local.u32 	[%rd4+8], %r9158;
	st.local.u32 	[%rd4+4], %r9158;
	st.local.u32 	[%rd4], %r9158;
	st.local.u32 	[%rd3+12], %r9158;
	st.local.u32 	[%rd3+8], %r9158;
	st.local.u32 	[%rd3+4], %r9158;
	st.local.u32 	[%rd3], %r9158;
	st.local.u32 	[%rd2+12], %r9158;
	st.local.u32 	[%rd2+8], %r9158;
	st.local.u32 	[%rd2+4], %r9158;
	st.local.u32 	[%rd2], %r9158;
	st.local.u32 	[%rd1+12], %r9158;
	st.local.u32 	[%rd1+8], %r9158;
	mov.u64 	%rd187, 0;
	st.local.u32 	[%rd1+4], %rd187;
	st.local.u32 	[%rd1], %rd187;
	bra.uni 	BB0_84;

BB0_123:
	setp.eq.s32	%p79, %r3, 15;
	@%p79 bra 	BB0_124;
	bra.uni 	BB0_172;

BB0_124:
	ld.local.u32 	%r6767, [%rd5];
	ld.local.u32 	%r6768, [%rd4+12];
	// inline asm
	prmt.b32 %r6766, %r6767, %r6768, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6766;
	ld.local.u32 	%r6771, [%rd4+12];
	ld.local.u32 	%r6772, [%rd4+8];
	// inline asm
	prmt.b32 %r6770, %r6771, %r6772, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6770;
	ld.local.u32 	%r6775, [%rd4+8];
	ld.local.u32 	%r6776, [%rd4+4];
	// inline asm
	prmt.b32 %r6774, %r6775, %r6776, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6774;
	ld.local.u32 	%r6779, [%rd4+4];
	ld.local.u32 	%r6780, [%rd4];
	// inline asm
	prmt.b32 %r6778, %r6779, %r6780, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6778;
	ld.local.u32 	%r6783, [%rd4];
	ld.local.u32 	%r6784, [%rd3+12];
	// inline asm
	prmt.b32 %r6782, %r6783, %r6784, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6782;
	ld.local.u32 	%r6787, [%rd3+12];
	ld.local.u32 	%r6788, [%rd3+8];
	// inline asm
	prmt.b32 %r6786, %r6787, %r6788, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6786;
	ld.local.u32 	%r6791, [%rd3+8];
	ld.local.u32 	%r6792, [%rd3+4];
	// inline asm
	prmt.b32 %r6790, %r6791, %r6792, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6790;
	ld.local.u32 	%r6795, [%rd3+4];
	ld.local.u32 	%r6796, [%rd3];
	// inline asm
	prmt.b32 %r6794, %r6795, %r6796, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6794;
	ld.local.u32 	%r6799, [%rd3];
	ld.local.u32 	%r6800, [%rd2+12];
	// inline asm
	prmt.b32 %r6798, %r6799, %r6800, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6798;
	ld.local.u32 	%r6803, [%rd2+12];
	ld.local.u32 	%r6804, [%rd2+8];
	// inline asm
	prmt.b32 %r6802, %r6803, %r6804, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6802;
	ld.local.u32 	%r6807, [%rd2+8];
	ld.local.u32 	%r6808, [%rd2+4];
	// inline asm
	prmt.b32 %r6806, %r6807, %r6808, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6806;
	ld.local.u32 	%r6811, [%rd2+4];
	ld.local.u32 	%r6812, [%rd2];
	// inline asm
	prmt.b32 %r6810, %r6811, %r6812, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6810;
	ld.local.u32 	%r6815, [%rd2];
	ld.local.u32 	%r6816, [%rd1+12];
	// inline asm
	prmt.b32 %r6814, %r6815, %r6816, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r6814;
	ld.local.u32 	%r6819, [%rd1+12];
	ld.local.u32 	%r6820, [%rd1+8];
	// inline asm
	prmt.b32 %r6818, %r6819, %r6820, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r6818;
	ld.local.u32 	%r6823, [%rd1+8];
	ld.local.u32 	%r6824, [%rd1+4];
	// inline asm
	prmt.b32 %r6822, %r6823, %r6824, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r6822;
	ld.local.u32 	%r6827, [%rd1+4];
	ld.local.u32 	%r6828, [%rd1];
	// inline asm
	prmt.b32 %r6826, %r6827, %r6828, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r6826;
	ld.local.u32 	%r6831, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r6830, %r6831, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r6830;
	st.local.u32 	[%rd4+8], %r9192;
	st.local.u32 	[%rd4+4], %r9192;
	st.local.u32 	[%rd4], %r9192;
	st.local.u32 	[%rd3+12], %r9192;
	st.local.u32 	[%rd3+8], %r9192;
	st.local.u32 	[%rd3+4], %r9192;
	st.local.u32 	[%rd3], %r9192;
	st.local.u32 	[%rd2+12], %r9192;
	st.local.u32 	[%rd2+8], %r9192;
	st.local.u32 	[%rd2+4], %r9192;
	st.local.u32 	[%rd2], %r9192;
	st.local.u32 	[%rd1+12], %r9192;
	st.local.u32 	[%rd1+8], %r9192;
	mov.u64 	%rd1243, 0;
	st.local.u32 	[%rd1+4], %rd1243;
	st.local.u32 	[%rd1], %rd1243;
	bra.uni 	BB0_173;

BB0_33:
	setp.eq.s32	%p31, %r3, 15;
	@%p31 bra 	BB0_34;
	bra.uni 	BB0_88;

BB0_34:
	ld.local.u32 	%r2864, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9171, %r9158, %r2864, %r4;
	// inline asm
	ld.local.u32 	%r2867, [%rd8+12];
	ld.local.u32 	%r2868, [%rd8+8];
	// inline asm
	prmt.b32 %r9172, %r2867, %r2868, %r4;
	// inline asm
	ld.local.u32 	%r2871, [%rd8+8];
	ld.local.u32 	%r2872, [%rd8+4];
	// inline asm
	prmt.b32 %r9173, %r2871, %r2872, %r4;
	// inline asm
	ld.local.u32 	%r2875, [%rd8+4];
	ld.local.u32 	%r2876, [%rd8];
	// inline asm
	prmt.b32 %r9174, %r2875, %r2876, %r4;
	// inline asm
	ld.local.u32 	%r2879, [%rd8];
	ld.local.u32 	%r2880, [%rd7+12];
	// inline asm
	prmt.b32 %r9167, %r2879, %r2880, %r4;
	// inline asm
	ld.local.u32 	%r2883, [%rd7+12];
	ld.local.u32 	%r2884, [%rd7+8];
	// inline asm
	prmt.b32 %r9168, %r2883, %r2884, %r4;
	// inline asm
	ld.local.u32 	%r2887, [%rd7+8];
	ld.local.u32 	%r2888, [%rd7+4];
	// inline asm
	prmt.b32 %r9169, %r2887, %r2888, %r4;
	// inline asm
	ld.local.u32 	%r2891, [%rd7+4];
	ld.local.u32 	%r2892, [%rd7];
	// inline asm
	prmt.b32 %r9170, %r2891, %r2892, %r4;
	// inline asm
	ld.local.u32 	%r2895, [%rd7];
	ld.local.u32 	%r2896, [%rd6+12];
	// inline asm
	prmt.b32 %r9163, %r2895, %r2896, %r4;
	// inline asm
	ld.local.u32 	%r2899, [%rd6+12];
	ld.local.u32 	%r2900, [%rd6+8];
	// inline asm
	prmt.b32 %r9164, %r2899, %r2900, %r4;
	// inline asm
	ld.local.u32 	%r2903, [%rd6+8];
	ld.local.u32 	%r2904, [%rd6+4];
	// inline asm
	prmt.b32 %r9165, %r2903, %r2904, %r4;
	// inline asm
	ld.local.u32 	%r2907, [%rd6+4];
	ld.local.u32 	%r2908, [%rd6];
	// inline asm
	prmt.b32 %r9166, %r2907, %r2908, %r4;
	// inline asm
	ld.local.u32 	%r2911, [%rd6];
	ld.local.u32 	%r2912, [%rd5+12];
	// inline asm
	prmt.b32 %r9159, %r2911, %r2912, %r4;
	// inline asm
	ld.local.u32 	%r2915, [%rd5+12];
	ld.local.u32 	%r2916, [%rd5+8];
	// inline asm
	prmt.b32 %r9160, %r2915, %r2916, %r4;
	// inline asm
	ld.local.u32 	%r2919, [%rd5+8];
	ld.local.u32 	%r2920, [%rd5+4];
	// inline asm
	prmt.b32 %r9161, %r2919, %r2920, %r4;
	// inline asm
	ld.local.u32 	%r2923, [%rd5+4];
	ld.local.u32 	%r2924, [%rd5];
	// inline asm
	prmt.b32 %r9162, %r2923, %r2924, %r4;
	// inline asm
	ld.local.u32 	%r2927, [%rd5];
	ld.local.u32 	%r2928, [%rd4+12];
	// inline asm
	prmt.b32 %r2926, %r2927, %r2928, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2926;
	ld.local.u32 	%r2931, [%rd4+12];
	ld.local.u32 	%r2932, [%rd4+8];
	// inline asm
	prmt.b32 %r2930, %r2931, %r2932, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2930;
	ld.local.u32 	%r2935, [%rd4+8];
	ld.local.u32 	%r2936, [%rd4+4];
	// inline asm
	prmt.b32 %r2934, %r2935, %r2936, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2934;
	ld.local.u32 	%r2939, [%rd4+4];
	ld.local.u32 	%r2940, [%rd4];
	// inline asm
	prmt.b32 %r2938, %r2939, %r2940, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2938;
	ld.local.u32 	%r2943, [%rd4];
	ld.local.u32 	%r2944, [%rd3+12];
	// inline asm
	prmt.b32 %r2942, %r2943, %r2944, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2942;
	ld.local.u32 	%r2947, [%rd3+12];
	ld.local.u32 	%r2948, [%rd3+8];
	// inline asm
	prmt.b32 %r2946, %r2947, %r2948, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2946;
	ld.local.u32 	%r2951, [%rd3+8];
	ld.local.u32 	%r2952, [%rd3+4];
	// inline asm
	prmt.b32 %r2950, %r2951, %r2952, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2950;
	ld.local.u32 	%r2955, [%rd3+4];
	ld.local.u32 	%r2956, [%rd3];
	// inline asm
	prmt.b32 %r2954, %r2955, %r2956, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2954;
	ld.local.u32 	%r2959, [%rd3];
	ld.local.u32 	%r2960, [%rd2+12];
	// inline asm
	prmt.b32 %r2958, %r2959, %r2960, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2958;
	ld.local.u32 	%r2963, [%rd2+12];
	ld.local.u32 	%r2964, [%rd2+8];
	// inline asm
	prmt.b32 %r2962, %r2963, %r2964, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2962;
	ld.local.u32 	%r2967, [%rd2+8];
	ld.local.u32 	%r2968, [%rd2+4];
	// inline asm
	prmt.b32 %r2966, %r2967, %r2968, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2966;
	ld.local.u32 	%r2971, [%rd2+4];
	ld.local.u32 	%r2972, [%rd2];
	// inline asm
	prmt.b32 %r2970, %r2971, %r2972, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r2970;
	ld.local.u32 	%r2975, [%rd2];
	ld.local.u32 	%r2976, [%rd1+12];
	// inline asm
	prmt.b32 %r2974, %r2975, %r2976, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r2974;
	ld.local.u32 	%r2979, [%rd1+12];
	ld.local.u32 	%r2980, [%rd1+8];
	// inline asm
	prmt.b32 %r2978, %r2979, %r2980, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r2978;
	ld.local.u32 	%r2983, [%rd1+8];
	ld.local.u32 	%r2984, [%rd1+4];
	// inline asm
	prmt.b32 %r2982, %r2983, %r2984, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r2982;
	ld.local.u32 	%r2987, [%rd1+4];
	ld.local.u32 	%r2988, [%rd1];
	// inline asm
	prmt.b32 %r2986, %r2987, %r2988, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r2986;
	ld.local.u32 	%r2991, [%rd1];
	// inline asm
	prmt.b32 %r2990, %r2991, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r2990;
	st.local.u32 	[%rd4+8], %r9158;
	st.local.u32 	[%rd4+4], %r9158;
	st.local.u32 	[%rd4], %r9158;
	st.local.u32 	[%rd3+12], %r9158;
	st.local.u32 	[%rd3+8], %r9158;
	st.local.u32 	[%rd3+4], %r9158;
	st.local.u32 	[%rd3], %r9158;
	st.local.u32 	[%rd2+12], %r9158;
	st.local.u32 	[%rd2+8], %r9158;
	st.local.u32 	[%rd2+4], %r9158;
	st.local.u32 	[%rd2], %r9158;
	st.local.u32 	[%rd1+12], %r9158;
	st.local.u32 	[%rd1+8], %r9158;
	mov.u64 	%rd195, 0;
	st.local.u32 	[%rd1+4], %rd195;
	st.local.u32 	[%rd1], %rd195;
	bra.uni 	BB0_82;

BB0_154:
	setp.ne.s32	%p56, %r3, 31;
	@%p56 bra 	BB0_172;

	ld.local.u32 	%r6207, [%rd1];
	mov.u32 	%r9192, 0;
	// inline asm
	prmt.b32 %r6206, %r6207, %r9192, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6206;
	st.local.u32 	[%rd8+8], %r9192;
	st.local.u32 	[%rd8+4], %r9192;
	st.local.u32 	[%rd8], %r9192;
	st.local.u32 	[%rd7+12], %r9192;
	st.local.u32 	[%rd7+8], %r9192;
	st.local.u32 	[%rd7+4], %r9192;
	st.local.u32 	[%rd7], %r9192;
	st.local.u32 	[%rd6+12], %r9192;
	st.local.u32 	[%rd6+8], %r9192;
	st.local.u32 	[%rd6+4], %r9192;
	st.local.u32 	[%rd6], %r9192;
	st.local.u32 	[%rd5+12], %r9192;
	st.local.u32 	[%rd5+8], %r9192;
	st.local.u32 	[%rd5+4], %r9192;
	st.local.u32 	[%rd5], %r9192;
	st.local.u32 	[%rd4+12], %r9192;
	st.local.u32 	[%rd4+8], %r9192;
	st.local.u32 	[%rd4+4], %r9192;
	st.local.u32 	[%rd4], %r9192;
	st.local.u32 	[%rd3+12], %r9192;
	st.local.u32 	[%rd3+8], %r9192;
	st.local.u32 	[%rd3+4], %r9192;
	st.local.u32 	[%rd3], %r9192;
	st.local.u32 	[%rd2+12], %r9192;
	st.local.u32 	[%rd2+8], %r9192;
	st.local.u32 	[%rd2+4], %r9192;
	st.local.u32 	[%rd2], %r9192;
	st.local.u32 	[%rd1+12], %r9192;
	st.local.u32 	[%rd1+8], %r9192;
	mov.u64 	%rd1227, 0;
	st.local.u32 	[%rd1+4], %rd1227;
	st.local.u32 	[%rd1], %rd1227;
	bra.uni 	BB0_173;

BB0_172:
	ld.local.u32 	%r9192, [%rd1];

BB0_173:
	ld.local.u32 	%r8349, [%rd9+64];
	or.b32  	%r8350, %r8349, %r9192;
	st.local.u32 	[%rd9+64], %r8350;
	ld.local.u32 	%r8351, [%rd9+68];
	ld.local.u32 	%r8352, [%rd1+4];
	or.b32  	%r8353, %r8351, %r8352;
	st.local.u32 	[%rd9+68], %r8353;
	ld.local.u32 	%r8354, [%rd9+72];
	ld.local.u32 	%r8355, [%rd1+8];
	or.b32  	%r8356, %r8354, %r8355;
	st.local.u32 	[%rd9+72], %r8356;
	ld.local.u32 	%r8357, [%rd9+76];
	ld.local.u32 	%r8358, [%rd1+12];
	or.b32  	%r8359, %r8357, %r8358;
	st.local.u32 	[%rd9+76], %r8359;
	ld.local.u32 	%r8360, [%rd9+80];
	ld.local.u32 	%r8361, [%rd2];
	or.b32  	%r8362, %r8360, %r8361;
	st.local.u32 	[%rd9+80], %r8362;
	ld.local.u32 	%r8363, [%rd9+84];
	ld.local.u32 	%r8364, [%rd2+4];
	or.b32  	%r8365, %r8363, %r8364;
	st.local.u32 	[%rd9+84], %r8365;
	ld.local.u32 	%r8366, [%rd9+88];
	ld.local.u32 	%r8367, [%rd2+8];
	or.b32  	%r8368, %r8366, %r8367;
	st.local.u32 	[%rd9+88], %r8368;
	ld.local.u32 	%r8369, [%rd9+92];
	ld.local.u32 	%r8370, [%rd2+12];
	or.b32  	%r8371, %r8369, %r8370;
	st.local.u32 	[%rd9+92], %r8371;
	ld.local.u32 	%r8372, [%rd9+96];
	ld.local.u32 	%r8373, [%rd3];
	or.b32  	%r8374, %r8372, %r8373;
	st.local.u32 	[%rd9+96], %r8374;
	ld.local.u32 	%r8375, [%rd9+100];
	ld.local.u32 	%r8376, [%rd3+4];
	or.b32  	%r8377, %r8375, %r8376;
	st.local.u32 	[%rd9+100], %r8377;
	ld.local.u32 	%r8378, [%rd9+104];
	ld.local.u32 	%r8379, [%rd3+8];
	or.b32  	%r8380, %r8378, %r8379;
	st.local.u32 	[%rd9+104], %r8380;
	ld.local.u32 	%r8381, [%rd9+108];
	ld.local.u32 	%r8382, [%rd3+12];
	or.b32  	%r8383, %r8381, %r8382;
	st.local.u32 	[%rd9+108], %r8383;
	ld.local.u32 	%r8384, [%rd9+112];
	ld.local.u32 	%r8385, [%rd4];
	or.b32  	%r8386, %r8384, %r8385;
	st.local.u32 	[%rd9+112], %r8386;
	ld.local.u32 	%r8387, [%rd9+116];
	ld.local.u32 	%r8388, [%rd4+4];
	or.b32  	%r8389, %r8387, %r8388;
	st.local.u32 	[%rd9+116], %r8389;
	ld.local.u32 	%r8390, [%rd9+120];
	ld.local.u32 	%r8391, [%rd4+8];
	or.b32  	%r8392, %r8390, %r8391;
	st.local.u32 	[%rd9+120], %r8392;
	ld.local.u32 	%r8393, [%rd9+124];
	ld.local.u32 	%r8394, [%rd4+12];
	or.b32  	%r8395, %r8393, %r8394;
	st.local.u32 	[%rd9+124], %r8395;
	ld.local.u32 	%r8396, [%rd9+128];
	ld.local.u32 	%r8397, [%rd5];
	or.b32  	%r8398, %r8396, %r8397;
	st.local.u32 	[%rd9+128], %r8398;
	ld.local.u32 	%r8399, [%rd9+132];
	ld.local.u32 	%r8400, [%rd5+4];
	or.b32  	%r8401, %r8399, %r8400;
	st.local.u32 	[%rd9+132], %r8401;
	ld.local.u32 	%r8402, [%rd9+136];
	ld.local.u32 	%r8403, [%rd5+8];
	or.b32  	%r8404, %r8402, %r8403;
	st.local.u32 	[%rd9+136], %r8404;
	ld.local.u32 	%r8405, [%rd9+140];
	ld.local.u32 	%r8406, [%rd5+12];
	or.b32  	%r8407, %r8405, %r8406;
	st.local.u32 	[%rd9+140], %r8407;
	ld.local.u32 	%r8408, [%rd9+144];
	ld.local.u32 	%r8409, [%rd6];
	or.b32  	%r8410, %r8408, %r8409;
	st.local.u32 	[%rd9+144], %r8410;
	ld.local.u32 	%r8411, [%rd9+148];
	ld.local.u32 	%r8412, [%rd6+4];
	or.b32  	%r8413, %r8411, %r8412;
	st.local.u32 	[%rd9+148], %r8413;
	ld.local.u32 	%r8414, [%rd9+152];
	ld.local.u32 	%r8415, [%rd6+8];
	or.b32  	%r8416, %r8414, %r8415;
	st.local.u32 	[%rd9+152], %r8416;
	ld.local.u32 	%r8417, [%rd9+156];
	ld.local.u32 	%r8418, [%rd6+12];
	or.b32  	%r8419, %r8417, %r8418;
	st.local.u32 	[%rd9+156], %r8419;
	ld.local.u32 	%r8420, [%rd9+160];
	ld.local.u32 	%r8421, [%rd7];
	or.b32  	%r8422, %r8420, %r8421;
	st.local.u32 	[%rd9+160], %r8422;
	ld.local.u32 	%r8423, [%rd9+164];
	ld.local.u32 	%r8424, [%rd7+4];
	or.b32  	%r8425, %r8423, %r8424;
	st.local.u32 	[%rd9+164], %r8425;
	ld.local.u32 	%r8426, [%rd9+168];
	ld.local.u32 	%r8427, [%rd7+8];
	or.b32  	%r8428, %r8426, %r8427;
	st.local.u32 	[%rd9+168], %r8428;
	ld.local.u32 	%r8429, [%rd9+172];
	ld.local.u32 	%r8430, [%rd7+12];
	or.b32  	%r8431, %r8429, %r8430;
	st.local.u32 	[%rd9+172], %r8431;
	ld.local.u32 	%r8432, [%rd9+176];
	ld.local.u32 	%r8433, [%rd8];
	or.b32  	%r8434, %r8432, %r8433;
	st.local.u32 	[%rd9+176], %r8434;
	ld.local.u32 	%r8435, [%rd9+180];
	ld.local.u32 	%r8436, [%rd8+4];
	or.b32  	%r8437, %r8435, %r8436;
	st.local.u32 	[%rd9+180], %r8437;
	ld.local.u32 	%r8438, [%rd9+184];
	ld.local.u32 	%r8439, [%rd8+8];
	or.b32  	%r8440, %r8438, %r8439;
	st.local.u32 	[%rd9+184], %r8440;
	ld.local.u32 	%r8441, [%rd9+188];
	ld.local.u32 	%r8442, [%rd8+12];
	or.b32  	%r8443, %r8441, %r8442;
	st.local.u32 	[%rd9+188], %r8443;
	bra.uni 	BB0_178;

BB0_64:
	setp.ne.s32	%p8, %r3, 31;
	@%p8 bra 	BB0_88;

	ld.local.u32 	%r616, [%rd8+12];
	mov.u32 	%r9158, 0;
	// inline asm
	prmt.b32 %r9187, %r9158, %r616, %r4;
	// inline asm
	ld.local.u32 	%r619, [%rd8+12];
	ld.local.u32 	%r620, [%rd8+8];
	// inline asm
	prmt.b32 %r9188, %r619, %r620, %r4;
	// inline asm
	ld.local.u32 	%r623, [%rd8+8];
	ld.local.u32 	%r624, [%rd8+4];
	// inline asm
	prmt.b32 %r9189, %r623, %r624, %r4;
	// inline asm
	ld.local.u32 	%r627, [%rd8+4];
	ld.local.u32 	%r628, [%rd8];
	// inline asm
	prmt.b32 %r9190, %r627, %r628, %r4;
	// inline asm
	ld.local.u32 	%r631, [%rd8];
	ld.local.u32 	%r632, [%rd7+12];
	// inline asm
	prmt.b32 %r9183, %r631, %r632, %r4;
	// inline asm
	ld.local.u32 	%r635, [%rd7+12];
	ld.local.u32 	%r636, [%rd7+8];
	// inline asm
	prmt.b32 %r9184, %r635, %r636, %r4;
	// inline asm
	ld.local.u32 	%r639, [%rd7+8];
	ld.local.u32 	%r640, [%rd7+4];
	// inline asm
	prmt.b32 %r9185, %r639, %r640, %r4;
	// inline asm
	ld.local.u32 	%r643, [%rd7+4];
	ld.local.u32 	%r644, [%rd7];
	// inline asm
	prmt.b32 %r9186, %r643, %r644, %r4;
	// inline asm
	ld.local.u32 	%r647, [%rd7];
	ld.local.u32 	%r648, [%rd6+12];
	// inline asm
	prmt.b32 %r9179, %r647, %r648, %r4;
	// inline asm
	ld.local.u32 	%r651, [%rd6+12];
	ld.local.u32 	%r652, [%rd6+8];
	// inline asm
	prmt.b32 %r9180, %r651, %r652, %r4;
	// inline asm
	ld.local.u32 	%r655, [%rd6+8];
	ld.local.u32 	%r656, [%rd6+4];
	// inline asm
	prmt.b32 %r9181, %r655, %r656, %r4;
	// inline asm
	ld.local.u32 	%r659, [%rd6+4];
	ld.local.u32 	%r660, [%rd6];
	// inline asm
	prmt.b32 %r9182, %r659, %r660, %r4;
	// inline asm
	ld.local.u32 	%r663, [%rd6];
	ld.local.u32 	%r664, [%rd5+12];
	// inline asm
	prmt.b32 %r9175, %r663, %r664, %r4;
	// inline asm
	ld.local.u32 	%r667, [%rd5+12];
	ld.local.u32 	%r668, [%rd5+8];
	// inline asm
	prmt.b32 %r9176, %r667, %r668, %r4;
	// inline asm
	ld.local.u32 	%r671, [%rd5+8];
	ld.local.u32 	%r672, [%rd5+4];
	// inline asm
	prmt.b32 %r9177, %r671, %r672, %r4;
	// inline asm
	ld.local.u32 	%r675, [%rd5+4];
	ld.local.u32 	%r676, [%rd5];
	// inline asm
	prmt.b32 %r9178, %r675, %r676, %r4;
	// inline asm
	ld.local.u32 	%r679, [%rd5];
	ld.local.u32 	%r680, [%rd4+12];
	// inline asm
	prmt.b32 %r9171, %r679, %r680, %r4;
	// inline asm
	ld.local.u32 	%r683, [%rd4+12];
	ld.local.u32 	%r684, [%rd4+8];
	// inline asm
	prmt.b32 %r9172, %r683, %r684, %r4;
	// inline asm
	ld.local.u32 	%r687, [%rd4+8];
	ld.local.u32 	%r688, [%rd4+4];
	// inline asm
	prmt.b32 %r9173, %r687, %r688, %r4;
	// inline asm
	ld.local.u32 	%r691, [%rd4+4];
	ld.local.u32 	%r692, [%rd4];
	// inline asm
	prmt.b32 %r9174, %r691, %r692, %r4;
	// inline asm
	ld.local.u32 	%r695, [%rd4];
	ld.local.u32 	%r696, [%rd3+12];
	// inline asm
	prmt.b32 %r9167, %r695, %r696, %r4;
	// inline asm
	ld.local.u32 	%r699, [%rd3+12];
	ld.local.u32 	%r700, [%rd3+8];
	// inline asm
	prmt.b32 %r9168, %r699, %r700, %r4;
	// inline asm
	ld.local.u32 	%r703, [%rd3+8];
	ld.local.u32 	%r704, [%rd3+4];
	// inline asm
	prmt.b32 %r9169, %r703, %r704, %r4;
	// inline asm
	ld.local.u32 	%r707, [%rd3+4];
	ld.local.u32 	%r708, [%rd3];
	// inline asm
	prmt.b32 %r9170, %r707, %r708, %r4;
	// inline asm
	ld.local.u32 	%r711, [%rd3];
	ld.local.u32 	%r712, [%rd2+12];
	// inline asm
	prmt.b32 %r9163, %r711, %r712, %r4;
	// inline asm
	ld.local.u32 	%r715, [%rd2+12];
	ld.local.u32 	%r716, [%rd2+8];
	// inline asm
	prmt.b32 %r9164, %r715, %r716, %r4;
	// inline asm
	ld.local.u32 	%r719, [%rd2+8];
	ld.local.u32 	%r720, [%rd2+4];
	// inline asm
	prmt.b32 %r9165, %r719, %r720, %r4;
	// inline asm
	ld.local.u32 	%r723, [%rd2+4];
	ld.local.u32 	%r724, [%rd2];
	// inline asm
	prmt.b32 %r9166, %r723, %r724, %r4;
	// inline asm
	ld.local.u32 	%r727, [%rd2];
	ld.local.u32 	%r728, [%rd1+12];
	// inline asm
	prmt.b32 %r9159, %r727, %r728, %r4;
	// inline asm
	ld.local.u32 	%r731, [%rd1+12];
	ld.local.u32 	%r732, [%rd1+8];
	// inline asm
	prmt.b32 %r9160, %r731, %r732, %r4;
	// inline asm
	ld.local.u32 	%r735, [%rd1+8];
	ld.local.u32 	%r736, [%rd1+4];
	// inline asm
	prmt.b32 %r9161, %r735, %r736, %r4;
	// inline asm
	ld.local.u32 	%r739, [%rd1+4];
	ld.local.u32 	%r740, [%rd1];
	// inline asm
	prmt.b32 %r9162, %r739, %r740, %r4;
	// inline asm
	ld.local.u32 	%r743, [%rd1];
	// inline asm
	prmt.b32 %r742, %r743, %r9158, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r742;
	st.local.u32 	[%rd8+8], %r9158;
	st.local.u32 	[%rd8+4], %r9158;
	st.local.u32 	[%rd8], %r9158;
	st.local.u32 	[%rd7+12], %r9158;
	st.local.u32 	[%rd7+8], %r9158;
	st.local.u32 	[%rd7+4], %r9158;
	st.local.u32 	[%rd7], %r9158;
	st.local.u32 	[%rd6+12], %r9158;
	st.local.u32 	[%rd6+8], %r9158;
	st.local.u32 	[%rd6+4], %r9158;
	st.local.u32 	[%rd6], %r9158;
	st.local.u32 	[%rd5+12], %r9158;
	st.local.u32 	[%rd5+8], %r9158;
	st.local.u32 	[%rd5+4], %r9158;
	st.local.u32 	[%rd5], %r9158;
	st.local.u32 	[%rd4+12], %r9158;
	st.local.u32 	[%rd4+8], %r9158;
	st.local.u32 	[%rd4+4], %r9158;
	st.local.u32 	[%rd4], %r9158;
	st.local.u32 	[%rd3+12], %r9158;
	st.local.u32 	[%rd3+8], %r9158;
	st.local.u32 	[%rd3+4], %r9158;
	st.local.u32 	[%rd3], %r9158;
	st.local.u32 	[%rd2+12], %r9158;
	st.local.u32 	[%rd2+8], %r9158;
	st.local.u32 	[%rd2+4], %r9158;
	st.local.u32 	[%rd2], %r9158;
	st.local.u32 	[%rd1+12], %r9158;
	st.local.u32 	[%rd1+8], %r9158;
	mov.u64 	%rd179, 0;
	st.local.u32 	[%rd1+4], %rd179;
	st.local.u32 	[%rd1], %rd179;
	bra.uni 	BB0_90;

BB0_88:
	ld.local.u32 	%r9158, [%rd1];
	mov.u32 	%r9159, 0;
	mov.u32 	%r9160, %r9159;
	mov.u32 	%r9161, %r9159;
	mov.u32 	%r9162, %r9159;

BB0_89:
	mov.u32 	%r9163, %r9159;
	mov.u32 	%r9164, %r9159;
	mov.u32 	%r9165, %r9159;
	mov.u32 	%r9166, %r9159;
	mov.u32 	%r9167, %r9159;
	mov.u32 	%r9168, %r9159;
	mov.u32 	%r9169, %r9159;
	mov.u32 	%r9170, %r9159;
	mov.u32 	%r9171, %r9159;
	mov.u32 	%r9172, %r9159;
	mov.u32 	%r9173, %r9159;
	mov.u32 	%r9174, %r9159;
	mov.u32 	%r9175, %r9159;
	mov.u32 	%r9176, %r9159;
	mov.u32 	%r9177, %r9159;
	mov.u32 	%r9178, %r9159;
	mov.u32 	%r9179, %r9159;
	mov.u32 	%r9180, %r9159;
	mov.u32 	%r9181, %r9159;
	mov.u32 	%r9182, %r9159;
	mov.u32 	%r9183, %r9159;
	mov.u32 	%r9184, %r9159;
	mov.u32 	%r9185, %r9159;
	mov.u32 	%r9186, %r9159;
	mov.u32 	%r9187, %r9159;
	mov.u32 	%r9188, %r9159;
	mov.u32 	%r9189, %r9159;
	mov.u32 	%r9190, %r9159;

BB0_90:
	ld.local.u32 	%r5398, [%rd9+64];
	or.b32  	%r5399, %r5398, %r9158;
	st.local.u32 	[%rd9+64], %r5399;
	ld.local.u32 	%r5400, [%rd9+68];
	ld.local.u32 	%r5401, [%rd1+4];
	or.b32  	%r5402, %r5400, %r5401;
	st.local.u32 	[%rd9+68], %r5402;
	ld.local.u32 	%r5403, [%rd9+72];
	ld.local.u32 	%r5404, [%rd1+8];
	or.b32  	%r5405, %r5403, %r5404;
	st.local.u32 	[%rd9+72], %r5405;
	ld.local.u32 	%r5406, [%rd9+76];
	ld.local.u32 	%r5407, [%rd1+12];
	or.b32  	%r5408, %r5406, %r5407;
	st.local.u32 	[%rd9+76], %r5408;
	ld.local.u32 	%r5409, [%rd9+80];
	ld.local.u32 	%r5410, [%rd2];
	or.b32  	%r5411, %r5409, %r5410;
	st.local.u32 	[%rd9+80], %r5411;
	ld.local.u32 	%r5412, [%rd9+84];
	ld.local.u32 	%r5413, [%rd2+4];
	or.b32  	%r5414, %r5412, %r5413;
	st.local.u32 	[%rd9+84], %r5414;
	ld.local.u32 	%r5415, [%rd9+88];
	ld.local.u32 	%r5416, [%rd2+8];
	or.b32  	%r5417, %r5415, %r5416;
	st.local.u32 	[%rd9+88], %r5417;
	ld.local.u32 	%r5418, [%rd9+92];
	ld.local.u32 	%r5419, [%rd2+12];
	or.b32  	%r5420, %r5418, %r5419;
	st.local.u32 	[%rd9+92], %r5420;
	ld.local.u32 	%r5421, [%rd9+96];
	ld.local.u32 	%r5422, [%rd3];
	or.b32  	%r5423, %r5421, %r5422;
	st.local.u32 	[%rd9+96], %r5423;
	ld.local.u32 	%r5424, [%rd9+100];
	ld.local.u32 	%r5425, [%rd3+4];
	or.b32  	%r5426, %r5424, %r5425;
	st.local.u32 	[%rd9+100], %r5426;
	ld.local.u32 	%r5427, [%rd9+104];
	ld.local.u32 	%r5428, [%rd3+8];
	or.b32  	%r5429, %r5427, %r5428;
	st.local.u32 	[%rd9+104], %r5429;
	ld.local.u32 	%r5430, [%rd9+108];
	ld.local.u32 	%r5431, [%rd3+12];
	or.b32  	%r5432, %r5430, %r5431;
	st.local.u32 	[%rd9+108], %r5432;
	ld.local.u32 	%r5433, [%rd9+112];
	ld.local.u32 	%r5434, [%rd4];
	or.b32  	%r5435, %r5433, %r5434;
	st.local.u32 	[%rd9+112], %r5435;
	ld.local.u32 	%r5436, [%rd9+116];
	ld.local.u32 	%r5437, [%rd4+4];
	or.b32  	%r5438, %r5436, %r5437;
	st.local.u32 	[%rd9+116], %r5438;
	ld.local.u32 	%r5439, [%rd9+120];
	ld.local.u32 	%r5440, [%rd4+8];
	or.b32  	%r5441, %r5439, %r5440;
	st.local.u32 	[%rd9+120], %r5441;
	ld.local.u32 	%r5442, [%rd9+124];
	ld.local.u32 	%r5443, [%rd4+12];
	or.b32  	%r5444, %r5442, %r5443;
	st.local.u32 	[%rd9+124], %r5444;
	ld.local.u32 	%r5445, [%rd9+128];
	ld.local.u32 	%r5446, [%rd5];
	or.b32  	%r5447, %r5445, %r5446;
	st.local.u32 	[%rd9+128], %r5447;
	ld.local.u32 	%r5448, [%rd9+132];
	ld.local.u32 	%r5449, [%rd5+4];
	or.b32  	%r5450, %r5448, %r5449;
	st.local.u32 	[%rd9+132], %r5450;
	ld.local.u32 	%r5451, [%rd9+136];
	ld.local.u32 	%r5452, [%rd5+8];
	or.b32  	%r5453, %r5451, %r5452;
	st.local.u32 	[%rd9+136], %r5453;
	ld.local.u32 	%r5454, [%rd9+140];
	ld.local.u32 	%r5455, [%rd5+12];
	or.b32  	%r5456, %r5454, %r5455;
	st.local.u32 	[%rd9+140], %r5456;
	ld.local.u32 	%r5457, [%rd9+144];
	ld.local.u32 	%r5458, [%rd6];
	or.b32  	%r5459, %r5457, %r5458;
	st.local.u32 	[%rd9+144], %r5459;
	ld.local.u32 	%r5460, [%rd9+148];
	ld.local.u32 	%r5461, [%rd6+4];
	or.b32  	%r5462, %r5460, %r5461;
	st.local.u32 	[%rd9+148], %r5462;
	ld.local.u32 	%r5463, [%rd9+152];
	ld.local.u32 	%r5464, [%rd6+8];
	or.b32  	%r5465, %r5463, %r5464;
	st.local.u32 	[%rd9+152], %r5465;
	ld.local.u32 	%r5466, [%rd9+156];
	ld.local.u32 	%r5467, [%rd6+12];
	or.b32  	%r5468, %r5466, %r5467;
	st.local.u32 	[%rd9+156], %r5468;
	ld.local.u32 	%r5469, [%rd9+160];
	ld.local.u32 	%r5470, [%rd7];
	or.b32  	%r5471, %r5469, %r5470;
	st.local.u32 	[%rd9+160], %r5471;
	ld.local.u32 	%r5472, [%rd9+164];
	ld.local.u32 	%r5473, [%rd7+4];
	or.b32  	%r5474, %r5472, %r5473;
	st.local.u32 	[%rd9+164], %r5474;
	ld.local.u32 	%r5475, [%rd9+168];
	ld.local.u32 	%r5476, [%rd7+8];
	or.b32  	%r5477, %r5475, %r5476;
	st.local.u32 	[%rd9+168], %r5477;
	ld.local.u32 	%r5478, [%rd9+172];
	ld.local.u32 	%r5479, [%rd7+12];
	or.b32  	%r5480, %r5478, %r5479;
	st.local.u32 	[%rd9+172], %r5480;
	ld.local.u32 	%r5481, [%rd9+176];
	ld.local.u32 	%r5482, [%rd8];
	or.b32  	%r5483, %r5481, %r5482;
	st.local.u32 	[%rd9+176], %r5483;
	ld.local.u32 	%r5484, [%rd9+180];
	ld.local.u32 	%r5485, [%rd8+4];
	or.b32  	%r5486, %r5484, %r5485;
	st.local.u32 	[%rd9+180], %r5486;
	ld.local.u32 	%r5487, [%rd9+184];
	ld.local.u32 	%r5488, [%rd8+8];
	or.b32  	%r5489, %r5487, %r5488;
	st.local.u32 	[%rd9+184], %r5489;
	ld.local.u32 	%r5490, [%rd9+188];
	ld.local.u32 	%r5491, [%rd8+12];
	or.b32  	%r5492, %r5490, %r5491;
	st.local.u32 	[%rd9+188], %r5492;
	mov.b64	%rd2293, {%r5402, %r5399};
	mov.b64	%rd2294, {%r5408, %r5405};
	mov.b64	%rd2295, {%r5414, %r5411};
	mov.b64	%rd2296, {%r5420, %r5417};
	mov.b64	%rd2297, {%r5426, %r5423};
	mov.b64	%rd2298, {%r5432, %r5429};
	mov.b64	%rd2299, {%r5438, %r5435};
	mov.b64	%rd2300, {%r5444, %r5441};
	mov.b64	%rd2284, {%r5450, %r5447};
	mov.b64	%rd2283, {%r5456, %r5453};
	mov.b64	%rd2282, {%r5462, %r5459};
	mov.b64	%rd2281, {%r5468, %r5465};
	mov.b64	%rd2280, {%r5474, %r5471};
	mov.b64	%rd2279, {%r5480, %r5477};
	mov.b64	%rd2278, {%r5486, %r5483};
	mov.b64	%rd2277, {%r5492, %r5489};
	ld.local.u64 	%rd26, [%rd9+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5493,%dummy}, %rd26;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5494}, %rd26;
	}
	shf.r.wrap.b32 	%r5495, %r5494, %r5493, 14;
	shf.r.wrap.b32 	%r5496, %r5493, %r5494, 14;
	mov.b64 	%rd209, {%r5496, %r5495};
	shf.r.wrap.b32 	%r5497, %r5494, %r5493, 18;
	shf.r.wrap.b32 	%r5498, %r5493, %r5494, 18;
	mov.b64 	%rd210, {%r5498, %r5497};
	xor.b64  	%rd211, %rd209, %rd210;
	shf.l.wrap.b32 	%r5499, %r5493, %r5494, 23;
	shf.l.wrap.b32 	%r5500, %r5494, %r5493, 23;
	mov.b64 	%rd212, {%r5500, %r5499};
	xor.b64  	%rd213, %rd211, %rd212;
	ld.local.u64 	%rd27, [%rd9+48];
	ld.local.u64 	%rd28, [%rd9+40];
	xor.b64  	%rd214, %rd27, %rd28;
	and.b64  	%rd215, %rd214, %rd26;
	xor.b64  	%rd216, %rd215, %rd27;
	ld.local.u64 	%rd29, [%rd9+56];
	add.s64 	%rd217, %rd213, %rd29;
	add.s64 	%rd218, %rd217, %rd216;
	add.s64 	%rd219, %rd218, %rd2293;
	ld.const.u64 	%rd220, [k_sha512];
	add.s64 	%rd221, %rd219, %rd220;
	ld.local.u64 	%rd30, [%rd9+24];
	add.s64 	%rd222, %rd221, %rd30;
	ld.local.u64 	%rd31, [%rd9];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5501,%dummy}, %rd31;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5502}, %rd31;
	}
	shf.r.wrap.b32 	%r5503, %r5502, %r5501, 28;
	shf.r.wrap.b32 	%r5504, %r5501, %r5502, 28;
	mov.b64 	%rd223, {%r5504, %r5503};
	shf.l.wrap.b32 	%r5505, %r5501, %r5502, 30;
	shf.l.wrap.b32 	%r5506, %r5502, %r5501, 30;
	mov.b64 	%rd224, {%r5506, %r5505};
	xor.b64  	%rd225, %rd223, %rd224;
	shf.l.wrap.b32 	%r5507, %r5501, %r5502, 25;
	shf.l.wrap.b32 	%r5508, %r5502, %r5501, 25;
	mov.b64 	%rd226, {%r5508, %r5507};
	xor.b64  	%rd227, %rd225, %rd226;
	ld.local.u64 	%rd32, [%rd9+8];
	and.b64  	%rd228, %rd32, %rd31;
	xor.b64  	%rd229, %rd32, %rd31;
	ld.local.u64 	%rd33, [%rd9+16];
	and.b64  	%rd230, %rd33, %rd229;
	or.b64  	%rd231, %rd230, %rd228;
	add.s64 	%rd232, %rd231, %rd227;
	add.s64 	%rd233, %rd232, %rd221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5509,%dummy}, %rd222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5510}, %rd222;
	}
	shf.r.wrap.b32 	%r5511, %r5510, %r5509, 14;
	shf.r.wrap.b32 	%r5512, %r5509, %r5510, 14;
	mov.b64 	%rd234, {%r5512, %r5511};
	shf.r.wrap.b32 	%r5513, %r5510, %r5509, 18;
	shf.r.wrap.b32 	%r5514, %r5509, %r5510, 18;
	mov.b64 	%rd235, {%r5514, %r5513};
	xor.b64  	%rd236, %rd234, %rd235;
	shf.l.wrap.b32 	%r5515, %r5509, %r5510, 23;
	shf.l.wrap.b32 	%r5516, %r5510, %r5509, 23;
	mov.b64 	%rd237, {%r5516, %r5515};
	xor.b64  	%rd238, %rd236, %rd237;
	xor.b64  	%rd239, %rd28, %rd26;
	and.b64  	%rd240, %rd222, %rd239;
	xor.b64  	%rd241, %rd240, %rd28;
	add.s64 	%rd242, %rd2294, %rd27;
	ld.const.u64 	%rd243, [k_sha512+8];
	add.s64 	%rd244, %rd242, %rd243;
	add.s64 	%rd245, %rd244, %rd241;
	add.s64 	%rd246, %rd245, %rd238;
	add.s64 	%rd247, %rd246, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5517,%dummy}, %rd233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5518}, %rd233;
	}
	shf.r.wrap.b32 	%r5519, %r5518, %r5517, 28;
	shf.r.wrap.b32 	%r5520, %r5517, %r5518, 28;
	mov.b64 	%rd248, {%r5520, %r5519};
	shf.l.wrap.b32 	%r5521, %r5517, %r5518, 30;
	shf.l.wrap.b32 	%r5522, %r5518, %r5517, 30;
	mov.b64 	%rd249, {%r5522, %r5521};
	xor.b64  	%rd250, %rd248, %rd249;
	shf.l.wrap.b32 	%r5523, %r5517, %r5518, 25;
	shf.l.wrap.b32 	%r5524, %r5518, %r5517, 25;
	mov.b64 	%rd251, {%r5524, %r5523};
	xor.b64  	%rd252, %rd250, %rd251;
	and.b64  	%rd253, %rd233, %rd31;
	xor.b64  	%rd254, %rd233, %rd31;
	and.b64  	%rd255, %rd254, %rd32;
	or.b64  	%rd256, %rd255, %rd253;
	add.s64 	%rd257, %rd252, %rd256;
	add.s64 	%rd258, %rd257, %rd246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5525,%dummy}, %rd247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5526}, %rd247;
	}
	shf.r.wrap.b32 	%r5527, %r5526, %r5525, 14;
	shf.r.wrap.b32 	%r5528, %r5525, %r5526, 14;
	mov.b64 	%rd259, {%r5528, %r5527};
	shf.r.wrap.b32 	%r5529, %r5526, %r5525, 18;
	shf.r.wrap.b32 	%r5530, %r5525, %r5526, 18;
	mov.b64 	%rd260, {%r5530, %r5529};
	xor.b64  	%rd261, %rd259, %rd260;
	shf.l.wrap.b32 	%r5531, %r5525, %r5526, 23;
	shf.l.wrap.b32 	%r5532, %r5526, %r5525, 23;
	mov.b64 	%rd262, {%r5532, %r5531};
	xor.b64  	%rd263, %rd261, %rd262;
	xor.b64  	%rd264, %rd222, %rd26;
	and.b64  	%rd265, %rd247, %rd264;
	xor.b64  	%rd266, %rd265, %rd26;
	add.s64 	%rd267, %rd2295, %rd28;
	ld.const.u64 	%rd268, [k_sha512+16];
	add.s64 	%rd269, %rd267, %rd268;
	add.s64 	%rd270, %rd269, %rd266;
	add.s64 	%rd271, %rd270, %rd263;
	add.s64 	%rd272, %rd271, %rd32;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5533,%dummy}, %rd258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5534}, %rd258;
	}
	shf.r.wrap.b32 	%r5535, %r5534, %r5533, 28;
	shf.r.wrap.b32 	%r5536, %r5533, %r5534, 28;
	mov.b64 	%rd273, {%r5536, %r5535};
	shf.l.wrap.b32 	%r5537, %r5533, %r5534, 30;
	shf.l.wrap.b32 	%r5538, %r5534, %r5533, 30;
	mov.b64 	%rd274, {%r5538, %r5537};
	xor.b64  	%rd275, %rd273, %rd274;
	shf.l.wrap.b32 	%r5539, %r5533, %r5534, 25;
	shf.l.wrap.b32 	%r5540, %r5534, %r5533, 25;
	mov.b64 	%rd276, {%r5540, %r5539};
	xor.b64  	%rd277, %rd275, %rd276;
	and.b64  	%rd278, %rd258, %rd233;
	xor.b64  	%rd279, %rd258, %rd233;
	and.b64  	%rd280, %rd279, %rd31;
	or.b64  	%rd281, %rd280, %rd278;
	add.s64 	%rd282, %rd277, %rd281;
	add.s64 	%rd283, %rd282, %rd271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5541,%dummy}, %rd272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5542}, %rd272;
	}
	shf.r.wrap.b32 	%r5543, %r5542, %r5541, 14;
	shf.r.wrap.b32 	%r5544, %r5541, %r5542, 14;
	mov.b64 	%rd284, {%r5544, %r5543};
	shf.r.wrap.b32 	%r5545, %r5542, %r5541, 18;
	shf.r.wrap.b32 	%r5546, %r5541, %r5542, 18;
	mov.b64 	%rd285, {%r5546, %r5545};
	xor.b64  	%rd286, %rd284, %rd285;
	shf.l.wrap.b32 	%r5547, %r5541, %r5542, 23;
	shf.l.wrap.b32 	%r5548, %r5542, %r5541, 23;
	mov.b64 	%rd287, {%r5548, %r5547};
	xor.b64  	%rd288, %rd286, %rd287;
	xor.b64  	%rd289, %rd247, %rd222;
	and.b64  	%rd290, %rd272, %rd289;
	xor.b64  	%rd291, %rd290, %rd222;
	add.s64 	%rd292, %rd2296, %rd26;
	ld.const.u64 	%rd293, [k_sha512+24];
	add.s64 	%rd294, %rd292, %rd293;
	add.s64 	%rd295, %rd294, %rd291;
	add.s64 	%rd296, %rd295, %rd288;
	add.s64 	%rd297, %rd296, %rd31;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5549,%dummy}, %rd283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5550}, %rd283;
	}
	shf.r.wrap.b32 	%r5551, %r5550, %r5549, 28;
	shf.r.wrap.b32 	%r5552, %r5549, %r5550, 28;
	mov.b64 	%rd298, {%r5552, %r5551};
	shf.l.wrap.b32 	%r5553, %r5549, %r5550, 30;
	shf.l.wrap.b32 	%r5554, %r5550, %r5549, 30;
	mov.b64 	%rd299, {%r5554, %r5553};
	xor.b64  	%rd300, %rd298, %rd299;
	shf.l.wrap.b32 	%r5555, %r5549, %r5550, 25;
	shf.l.wrap.b32 	%r5556, %r5550, %r5549, 25;
	mov.b64 	%rd301, {%r5556, %r5555};
	xor.b64  	%rd302, %rd300, %rd301;
	and.b64  	%rd303, %rd283, %rd258;
	xor.b64  	%rd304, %rd283, %rd258;
	and.b64  	%rd305, %rd304, %rd233;
	or.b64  	%rd306, %rd305, %rd303;
	add.s64 	%rd307, %rd302, %rd306;
	add.s64 	%rd308, %rd307, %rd296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5557,%dummy}, %rd297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5558}, %rd297;
	}
	shf.r.wrap.b32 	%r5559, %r5558, %r5557, 14;
	shf.r.wrap.b32 	%r5560, %r5557, %r5558, 14;
	mov.b64 	%rd309, {%r5560, %r5559};
	shf.r.wrap.b32 	%r5561, %r5558, %r5557, 18;
	shf.r.wrap.b32 	%r5562, %r5557, %r5558, 18;
	mov.b64 	%rd310, {%r5562, %r5561};
	xor.b64  	%rd311, %rd309, %rd310;
	shf.l.wrap.b32 	%r5563, %r5557, %r5558, 23;
	shf.l.wrap.b32 	%r5564, %r5558, %r5557, 23;
	mov.b64 	%rd312, {%r5564, %r5563};
	xor.b64  	%rd313, %rd311, %rd312;
	xor.b64  	%rd314, %rd272, %rd247;
	and.b64  	%rd315, %rd297, %rd314;
	xor.b64  	%rd316, %rd315, %rd247;
	add.s64 	%rd317, %rd222, %rd2297;
	ld.const.u64 	%rd318, [k_sha512+32];
	add.s64 	%rd319, %rd317, %rd318;
	add.s64 	%rd320, %rd319, %rd316;
	add.s64 	%rd321, %rd320, %rd313;
	add.s64 	%rd322, %rd321, %rd233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5565,%dummy}, %rd308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5566}, %rd308;
	}
	shf.r.wrap.b32 	%r5567, %r5566, %r5565, 28;
	shf.r.wrap.b32 	%r5568, %r5565, %r5566, 28;
	mov.b64 	%rd323, {%r5568, %r5567};
	shf.l.wrap.b32 	%r5569, %r5565, %r5566, 30;
	shf.l.wrap.b32 	%r5570, %r5566, %r5565, 30;
	mov.b64 	%rd324, {%r5570, %r5569};
	xor.b64  	%rd325, %rd323, %rd324;
	shf.l.wrap.b32 	%r5571, %r5565, %r5566, 25;
	shf.l.wrap.b32 	%r5572, %r5566, %r5565, 25;
	mov.b64 	%rd326, {%r5572, %r5571};
	xor.b64  	%rd327, %rd325, %rd326;
	and.b64  	%rd328, %rd308, %rd283;
	xor.b64  	%rd329, %rd308, %rd283;
	and.b64  	%rd330, %rd329, %rd258;
	or.b64  	%rd331, %rd330, %rd328;
	add.s64 	%rd332, %rd327, %rd331;
	add.s64 	%rd333, %rd332, %rd321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5573,%dummy}, %rd322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5574}, %rd322;
	}
	shf.r.wrap.b32 	%r5575, %r5574, %r5573, 14;
	shf.r.wrap.b32 	%r5576, %r5573, %r5574, 14;
	mov.b64 	%rd334, {%r5576, %r5575};
	shf.r.wrap.b32 	%r5577, %r5574, %r5573, 18;
	shf.r.wrap.b32 	%r5578, %r5573, %r5574, 18;
	mov.b64 	%rd335, {%r5578, %r5577};
	xor.b64  	%rd336, %rd334, %rd335;
	shf.l.wrap.b32 	%r5579, %r5573, %r5574, 23;
	shf.l.wrap.b32 	%r5580, %r5574, %r5573, 23;
	mov.b64 	%rd337, {%r5580, %r5579};
	xor.b64  	%rd338, %rd336, %rd337;
	xor.b64  	%rd339, %rd297, %rd272;
	and.b64  	%rd340, %rd322, %rd339;
	xor.b64  	%rd341, %rd340, %rd272;
	ld.const.u64 	%rd342, [k_sha512+40];
	add.s64 	%rd343, %rd342, %rd2298;
	add.s64 	%rd344, %rd343, %rd247;
	add.s64 	%rd345, %rd344, %rd341;
	add.s64 	%rd346, %rd345, %rd338;
	add.s64 	%rd347, %rd346, %rd258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5581,%dummy}, %rd333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5582}, %rd333;
	}
	shf.r.wrap.b32 	%r5583, %r5582, %r5581, 28;
	shf.r.wrap.b32 	%r5584, %r5581, %r5582, 28;
	mov.b64 	%rd348, {%r5584, %r5583};
	shf.l.wrap.b32 	%r5585, %r5581, %r5582, 30;
	shf.l.wrap.b32 	%r5586, %r5582, %r5581, 30;
	mov.b64 	%rd349, {%r5586, %r5585};
	xor.b64  	%rd350, %rd348, %rd349;
	shf.l.wrap.b32 	%r5587, %r5581, %r5582, 25;
	shf.l.wrap.b32 	%r5588, %r5582, %r5581, 25;
	mov.b64 	%rd351, {%r5588, %r5587};
	xor.b64  	%rd352, %rd350, %rd351;
	and.b64  	%rd353, %rd333, %rd308;
	xor.b64  	%rd354, %rd333, %rd308;
	and.b64  	%rd355, %rd354, %rd283;
	or.b64  	%rd356, %rd355, %rd353;
	add.s64 	%rd357, %rd352, %rd356;
	add.s64 	%rd358, %rd357, %rd346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5589,%dummy}, %rd347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5590}, %rd347;
	}
	shf.r.wrap.b32 	%r5591, %r5590, %r5589, 14;
	shf.r.wrap.b32 	%r5592, %r5589, %r5590, 14;
	mov.b64 	%rd359, {%r5592, %r5591};
	shf.r.wrap.b32 	%r5593, %r5590, %r5589, 18;
	shf.r.wrap.b32 	%r5594, %r5589, %r5590, 18;
	mov.b64 	%rd360, {%r5594, %r5593};
	xor.b64  	%rd361, %rd359, %rd360;
	shf.l.wrap.b32 	%r5595, %r5589, %r5590, 23;
	shf.l.wrap.b32 	%r5596, %r5590, %r5589, 23;
	mov.b64 	%rd362, {%r5596, %r5595};
	xor.b64  	%rd363, %rd361, %rd362;
	xor.b64  	%rd364, %rd322, %rd297;
	and.b64  	%rd365, %rd347, %rd364;
	xor.b64  	%rd366, %rd365, %rd297;
	ld.const.u64 	%rd367, [k_sha512+48];
	add.s64 	%rd368, %rd367, %rd2299;
	add.s64 	%rd369, %rd368, %rd272;
	add.s64 	%rd370, %rd369, %rd366;
	add.s64 	%rd371, %rd370, %rd363;
	add.s64 	%rd372, %rd371, %rd283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5597,%dummy}, %rd358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5598}, %rd358;
	}
	shf.r.wrap.b32 	%r5599, %r5598, %r5597, 28;
	shf.r.wrap.b32 	%r5600, %r5597, %r5598, 28;
	mov.b64 	%rd373, {%r5600, %r5599};
	shf.l.wrap.b32 	%r5601, %r5597, %r5598, 30;
	shf.l.wrap.b32 	%r5602, %r5598, %r5597, 30;
	mov.b64 	%rd374, {%r5602, %r5601};
	xor.b64  	%rd375, %rd373, %rd374;
	shf.l.wrap.b32 	%r5603, %r5597, %r5598, 25;
	shf.l.wrap.b32 	%r5604, %r5598, %r5597, 25;
	mov.b64 	%rd376, {%r5604, %r5603};
	xor.b64  	%rd377, %rd375, %rd376;
	and.b64  	%rd378, %rd358, %rd333;
	xor.b64  	%rd379, %rd358, %rd333;
	and.b64  	%rd380, %rd379, %rd308;
	or.b64  	%rd381, %rd380, %rd378;
	add.s64 	%rd382, %rd377, %rd381;
	add.s64 	%rd383, %rd382, %rd371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5605,%dummy}, %rd372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5606}, %rd372;
	}
	shf.r.wrap.b32 	%r5607, %r5606, %r5605, 14;
	shf.r.wrap.b32 	%r5608, %r5605, %r5606, 14;
	mov.b64 	%rd384, {%r5608, %r5607};
	shf.r.wrap.b32 	%r5609, %r5606, %r5605, 18;
	shf.r.wrap.b32 	%r5610, %r5605, %r5606, 18;
	mov.b64 	%rd385, {%r5610, %r5609};
	xor.b64  	%rd386, %rd384, %rd385;
	shf.l.wrap.b32 	%r5611, %r5605, %r5606, 23;
	shf.l.wrap.b32 	%r5612, %r5606, %r5605, 23;
	mov.b64 	%rd387, {%r5612, %r5611};
	xor.b64  	%rd388, %rd386, %rd387;
	xor.b64  	%rd389, %rd347, %rd322;
	and.b64  	%rd390, %rd372, %rd389;
	xor.b64  	%rd391, %rd390, %rd322;
	ld.const.u64 	%rd392, [k_sha512+56];
	add.s64 	%rd393, %rd392, %rd2300;
	add.s64 	%rd394, %rd393, %rd297;
	add.s64 	%rd395, %rd394, %rd391;
	add.s64 	%rd396, %rd395, %rd388;
	add.s64 	%rd397, %rd396, %rd308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5613,%dummy}, %rd383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5614}, %rd383;
	}
	shf.r.wrap.b32 	%r5615, %r5614, %r5613, 28;
	shf.r.wrap.b32 	%r5616, %r5613, %r5614, 28;
	mov.b64 	%rd398, {%r5616, %r5615};
	shf.l.wrap.b32 	%r5617, %r5613, %r5614, 30;
	shf.l.wrap.b32 	%r5618, %r5614, %r5613, 30;
	mov.b64 	%rd399, {%r5618, %r5617};
	xor.b64  	%rd400, %rd398, %rd399;
	shf.l.wrap.b32 	%r5619, %r5613, %r5614, 25;
	shf.l.wrap.b32 	%r5620, %r5614, %r5613, 25;
	mov.b64 	%rd401, {%r5620, %r5619};
	xor.b64  	%rd402, %rd400, %rd401;
	and.b64  	%rd403, %rd383, %rd358;
	xor.b64  	%rd404, %rd383, %rd358;
	and.b64  	%rd405, %rd404, %rd333;
	or.b64  	%rd406, %rd405, %rd403;
	add.s64 	%rd407, %rd402, %rd406;
	add.s64 	%rd408, %rd407, %rd396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5621,%dummy}, %rd397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5622}, %rd397;
	}
	shf.r.wrap.b32 	%r5623, %r5622, %r5621, 14;
	shf.r.wrap.b32 	%r5624, %r5621, %r5622, 14;
	mov.b64 	%rd409, {%r5624, %r5623};
	shf.r.wrap.b32 	%r5625, %r5622, %r5621, 18;
	shf.r.wrap.b32 	%r5626, %r5621, %r5622, 18;
	mov.b64 	%rd410, {%r5626, %r5625};
	xor.b64  	%rd411, %rd409, %rd410;
	shf.l.wrap.b32 	%r5627, %r5621, %r5622, 23;
	shf.l.wrap.b32 	%r5628, %r5622, %r5621, 23;
	mov.b64 	%rd412, {%r5628, %r5627};
	xor.b64  	%rd413, %rd411, %rd412;
	xor.b64  	%rd414, %rd372, %rd347;
	and.b64  	%rd415, %rd397, %rd414;
	xor.b64  	%rd416, %rd415, %rd347;
	ld.const.u64 	%rd417, [k_sha512+64];
	add.s64 	%rd418, %rd417, %rd2284;
	add.s64 	%rd419, %rd418, %rd322;
	add.s64 	%rd420, %rd419, %rd416;
	add.s64 	%rd421, %rd420, %rd413;
	add.s64 	%rd422, %rd421, %rd333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5629,%dummy}, %rd408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5630}, %rd408;
	}
	shf.r.wrap.b32 	%r5631, %r5630, %r5629, 28;
	shf.r.wrap.b32 	%r5632, %r5629, %r5630, 28;
	mov.b64 	%rd423, {%r5632, %r5631};
	shf.l.wrap.b32 	%r5633, %r5629, %r5630, 30;
	shf.l.wrap.b32 	%r5634, %r5630, %r5629, 30;
	mov.b64 	%rd424, {%r5634, %r5633};
	xor.b64  	%rd425, %rd423, %rd424;
	shf.l.wrap.b32 	%r5635, %r5629, %r5630, 25;
	shf.l.wrap.b32 	%r5636, %r5630, %r5629, 25;
	mov.b64 	%rd426, {%r5636, %r5635};
	xor.b64  	%rd427, %rd425, %rd426;
	and.b64  	%rd428, %rd408, %rd383;
	xor.b64  	%rd429, %rd408, %rd383;
	and.b64  	%rd430, %rd429, %rd358;
	or.b64  	%rd431, %rd430, %rd428;
	add.s64 	%rd432, %rd427, %rd431;
	add.s64 	%rd433, %rd432, %rd421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5637,%dummy}, %rd422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5638}, %rd422;
	}
	shf.r.wrap.b32 	%r5639, %r5638, %r5637, 14;
	shf.r.wrap.b32 	%r5640, %r5637, %r5638, 14;
	mov.b64 	%rd434, {%r5640, %r5639};
	shf.r.wrap.b32 	%r5641, %r5638, %r5637, 18;
	shf.r.wrap.b32 	%r5642, %r5637, %r5638, 18;
	mov.b64 	%rd435, {%r5642, %r5641};
	xor.b64  	%rd436, %rd434, %rd435;
	shf.l.wrap.b32 	%r5643, %r5637, %r5638, 23;
	shf.l.wrap.b32 	%r5644, %r5638, %r5637, 23;
	mov.b64 	%rd437, {%r5644, %r5643};
	xor.b64  	%rd438, %rd436, %rd437;
	xor.b64  	%rd439, %rd397, %rd372;
	and.b64  	%rd440, %rd422, %rd439;
	xor.b64  	%rd441, %rd440, %rd372;
	ld.const.u64 	%rd442, [k_sha512+72];
	add.s64 	%rd443, %rd442, %rd2283;
	add.s64 	%rd444, %rd443, %rd347;
	add.s64 	%rd445, %rd444, %rd441;
	add.s64 	%rd446, %rd445, %rd438;
	add.s64 	%rd447, %rd446, %rd358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5645,%dummy}, %rd433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5646}, %rd433;
	}
	shf.r.wrap.b32 	%r5647, %r5646, %r5645, 28;
	shf.r.wrap.b32 	%r5648, %r5645, %r5646, 28;
	mov.b64 	%rd448, {%r5648, %r5647};
	shf.l.wrap.b32 	%r5649, %r5645, %r5646, 30;
	shf.l.wrap.b32 	%r5650, %r5646, %r5645, 30;
	mov.b64 	%rd449, {%r5650, %r5649};
	xor.b64  	%rd450, %rd448, %rd449;
	shf.l.wrap.b32 	%r5651, %r5645, %r5646, 25;
	shf.l.wrap.b32 	%r5652, %r5646, %r5645, 25;
	mov.b64 	%rd451, {%r5652, %r5651};
	xor.b64  	%rd452, %rd450, %rd451;
	and.b64  	%rd453, %rd433, %rd408;
	xor.b64  	%rd454, %rd433, %rd408;
	and.b64  	%rd455, %rd454, %rd383;
	or.b64  	%rd456, %rd455, %rd453;
	add.s64 	%rd457, %rd452, %rd456;
	add.s64 	%rd458, %rd457, %rd446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5653,%dummy}, %rd447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5654}, %rd447;
	}
	shf.r.wrap.b32 	%r5655, %r5654, %r5653, 14;
	shf.r.wrap.b32 	%r5656, %r5653, %r5654, 14;
	mov.b64 	%rd459, {%r5656, %r5655};
	shf.r.wrap.b32 	%r5657, %r5654, %r5653, 18;
	shf.r.wrap.b32 	%r5658, %r5653, %r5654, 18;
	mov.b64 	%rd460, {%r5658, %r5657};
	xor.b64  	%rd461, %rd459, %rd460;
	shf.l.wrap.b32 	%r5659, %r5653, %r5654, 23;
	shf.l.wrap.b32 	%r5660, %r5654, %r5653, 23;
	mov.b64 	%rd462, {%r5660, %r5659};
	xor.b64  	%rd463, %rd461, %rd462;
	xor.b64  	%rd464, %rd422, %rd397;
	and.b64  	%rd465, %rd447, %rd464;
	xor.b64  	%rd466, %rd465, %rd397;
	ld.const.u64 	%rd467, [k_sha512+80];
	add.s64 	%rd468, %rd467, %rd2282;
	add.s64 	%rd469, %rd468, %rd372;
	add.s64 	%rd470, %rd469, %rd466;
	add.s64 	%rd471, %rd470, %rd463;
	add.s64 	%rd472, %rd471, %rd383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5661,%dummy}, %rd458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5662}, %rd458;
	}
	shf.r.wrap.b32 	%r5663, %r5662, %r5661, 28;
	shf.r.wrap.b32 	%r5664, %r5661, %r5662, 28;
	mov.b64 	%rd473, {%r5664, %r5663};
	shf.l.wrap.b32 	%r5665, %r5661, %r5662, 30;
	shf.l.wrap.b32 	%r5666, %r5662, %r5661, 30;
	mov.b64 	%rd474, {%r5666, %r5665};
	xor.b64  	%rd475, %rd473, %rd474;
	shf.l.wrap.b32 	%r5667, %r5661, %r5662, 25;
	shf.l.wrap.b32 	%r5668, %r5662, %r5661, 25;
	mov.b64 	%rd476, {%r5668, %r5667};
	xor.b64  	%rd477, %rd475, %rd476;
	and.b64  	%rd478, %rd458, %rd433;
	xor.b64  	%rd479, %rd458, %rd433;
	and.b64  	%rd480, %rd479, %rd408;
	or.b64  	%rd481, %rd480, %rd478;
	add.s64 	%rd482, %rd477, %rd481;
	add.s64 	%rd483, %rd482, %rd471;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5669,%dummy}, %rd472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5670}, %rd472;
	}
	shf.r.wrap.b32 	%r5671, %r5670, %r5669, 14;
	shf.r.wrap.b32 	%r5672, %r5669, %r5670, 14;
	mov.b64 	%rd484, {%r5672, %r5671};
	shf.r.wrap.b32 	%r5673, %r5670, %r5669, 18;
	shf.r.wrap.b32 	%r5674, %r5669, %r5670, 18;
	mov.b64 	%rd485, {%r5674, %r5673};
	xor.b64  	%rd486, %rd484, %rd485;
	shf.l.wrap.b32 	%r5675, %r5669, %r5670, 23;
	shf.l.wrap.b32 	%r5676, %r5670, %r5669, 23;
	mov.b64 	%rd487, {%r5676, %r5675};
	xor.b64  	%rd488, %rd486, %rd487;
	xor.b64  	%rd489, %rd447, %rd422;
	and.b64  	%rd490, %rd472, %rd489;
	xor.b64  	%rd491, %rd490, %rd422;
	ld.const.u64 	%rd492, [k_sha512+88];
	add.s64 	%rd493, %rd492, %rd2281;
	add.s64 	%rd494, %rd493, %rd397;
	add.s64 	%rd495, %rd494, %rd491;
	add.s64 	%rd496, %rd495, %rd488;
	add.s64 	%rd497, %rd496, %rd408;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5677,%dummy}, %rd483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5678}, %rd483;
	}
	shf.r.wrap.b32 	%r5679, %r5678, %r5677, 28;
	shf.r.wrap.b32 	%r5680, %r5677, %r5678, 28;
	mov.b64 	%rd498, {%r5680, %r5679};
	shf.l.wrap.b32 	%r5681, %r5677, %r5678, 30;
	shf.l.wrap.b32 	%r5682, %r5678, %r5677, 30;
	mov.b64 	%rd499, {%r5682, %r5681};
	xor.b64  	%rd500, %rd498, %rd499;
	shf.l.wrap.b32 	%r5683, %r5677, %r5678, 25;
	shf.l.wrap.b32 	%r5684, %r5678, %r5677, 25;
	mov.b64 	%rd501, {%r5684, %r5683};
	xor.b64  	%rd502, %rd500, %rd501;
	and.b64  	%rd503, %rd483, %rd458;
	xor.b64  	%rd504, %rd483, %rd458;
	and.b64  	%rd505, %rd504, %rd433;
	or.b64  	%rd506, %rd505, %rd503;
	add.s64 	%rd507, %rd502, %rd506;
	add.s64 	%rd508, %rd507, %rd496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5685,%dummy}, %rd497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5686}, %rd497;
	}
	shf.r.wrap.b32 	%r5687, %r5686, %r5685, 14;
	shf.r.wrap.b32 	%r5688, %r5685, %r5686, 14;
	mov.b64 	%rd509, {%r5688, %r5687};
	shf.r.wrap.b32 	%r5689, %r5686, %r5685, 18;
	shf.r.wrap.b32 	%r5690, %r5685, %r5686, 18;
	mov.b64 	%rd510, {%r5690, %r5689};
	xor.b64  	%rd511, %rd509, %rd510;
	shf.l.wrap.b32 	%r5691, %r5685, %r5686, 23;
	shf.l.wrap.b32 	%r5692, %r5686, %r5685, 23;
	mov.b64 	%rd512, {%r5692, %r5691};
	xor.b64  	%rd513, %rd511, %rd512;
	xor.b64  	%rd514, %rd472, %rd447;
	and.b64  	%rd515, %rd497, %rd514;
	xor.b64  	%rd516, %rd515, %rd447;
	ld.const.u64 	%rd517, [k_sha512+96];
	add.s64 	%rd518, %rd517, %rd2280;
	add.s64 	%rd519, %rd518, %rd422;
	add.s64 	%rd520, %rd519, %rd516;
	add.s64 	%rd521, %rd520, %rd513;
	add.s64 	%rd2292, %rd521, %rd433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5693,%dummy}, %rd508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5694}, %rd508;
	}
	shf.r.wrap.b32 	%r5695, %r5694, %r5693, 28;
	shf.r.wrap.b32 	%r5696, %r5693, %r5694, 28;
	mov.b64 	%rd522, {%r5696, %r5695};
	shf.l.wrap.b32 	%r5697, %r5693, %r5694, 30;
	shf.l.wrap.b32 	%r5698, %r5694, %r5693, 30;
	mov.b64 	%rd523, {%r5698, %r5697};
	xor.b64  	%rd524, %rd522, %rd523;
	shf.l.wrap.b32 	%r5699, %r5693, %r5694, 25;
	shf.l.wrap.b32 	%r5700, %r5694, %r5693, 25;
	mov.b64 	%rd525, {%r5700, %r5699};
	xor.b64  	%rd526, %rd524, %rd525;
	and.b64  	%rd527, %rd508, %rd483;
	xor.b64  	%rd528, %rd508, %rd483;
	and.b64  	%rd529, %rd528, %rd458;
	or.b64  	%rd530, %rd529, %rd527;
	add.s64 	%rd531, %rd526, %rd530;
	add.s64 	%rd2288, %rd531, %rd521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5701,%dummy}, %rd2292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5702}, %rd2292;
	}
	shf.r.wrap.b32 	%r5703, %r5702, %r5701, 14;
	shf.r.wrap.b32 	%r5704, %r5701, %r5702, 14;
	mov.b64 	%rd532, {%r5704, %r5703};
	shf.r.wrap.b32 	%r5705, %r5702, %r5701, 18;
	shf.r.wrap.b32 	%r5706, %r5701, %r5702, 18;
	mov.b64 	%rd533, {%r5706, %r5705};
	xor.b64  	%rd534, %rd532, %rd533;
	shf.l.wrap.b32 	%r5707, %r5701, %r5702, 23;
	shf.l.wrap.b32 	%r5708, %r5702, %r5701, 23;
	mov.b64 	%rd535, {%r5708, %r5707};
	xor.b64  	%rd536, %rd534, %rd535;
	xor.b64  	%rd537, %rd497, %rd472;
	and.b64  	%rd538, %rd2292, %rd537;
	xor.b64  	%rd539, %rd538, %rd472;
	ld.const.u64 	%rd540, [k_sha512+104];
	add.s64 	%rd541, %rd540, %rd2279;
	add.s64 	%rd542, %rd541, %rd447;
	add.s64 	%rd543, %rd542, %rd539;
	add.s64 	%rd544, %rd543, %rd536;
	add.s64 	%rd2291, %rd544, %rd458;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5709,%dummy}, %rd2288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5710}, %rd2288;
	}
	shf.r.wrap.b32 	%r5711, %r5710, %r5709, 28;
	shf.r.wrap.b32 	%r5712, %r5709, %r5710, 28;
	mov.b64 	%rd545, {%r5712, %r5711};
	shf.l.wrap.b32 	%r5713, %r5709, %r5710, 30;
	shf.l.wrap.b32 	%r5714, %r5710, %r5709, 30;
	mov.b64 	%rd546, {%r5714, %r5713};
	xor.b64  	%rd547, %rd545, %rd546;
	shf.l.wrap.b32 	%r5715, %r5709, %r5710, 25;
	shf.l.wrap.b32 	%r5716, %r5710, %r5709, 25;
	mov.b64 	%rd548, {%r5716, %r5715};
	xor.b64  	%rd549, %rd547, %rd548;
	and.b64  	%rd550, %rd2288, %rd508;
	xor.b64  	%rd551, %rd2288, %rd508;
	and.b64  	%rd552, %rd551, %rd483;
	or.b64  	%rd553, %rd552, %rd550;
	add.s64 	%rd554, %rd549, %rd553;
	add.s64 	%rd2287, %rd554, %rd544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5717,%dummy}, %rd2291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5718}, %rd2291;
	}
	shf.r.wrap.b32 	%r5719, %r5718, %r5717, 14;
	shf.r.wrap.b32 	%r5720, %r5717, %r5718, 14;
	mov.b64 	%rd555, {%r5720, %r5719};
	shf.r.wrap.b32 	%r5721, %r5718, %r5717, 18;
	shf.r.wrap.b32 	%r5722, %r5717, %r5718, 18;
	mov.b64 	%rd556, {%r5722, %r5721};
	xor.b64  	%rd557, %rd555, %rd556;
	shf.l.wrap.b32 	%r5723, %r5717, %r5718, 23;
	shf.l.wrap.b32 	%r5724, %r5718, %r5717, 23;
	mov.b64 	%rd558, {%r5724, %r5723};
	xor.b64  	%rd559, %rd557, %rd558;
	xor.b64  	%rd560, %rd2292, %rd497;
	and.b64  	%rd561, %rd2291, %rd560;
	xor.b64  	%rd562, %rd561, %rd497;
	ld.const.u64 	%rd563, [k_sha512+112];
	add.s64 	%rd564, %rd563, %rd2278;
	add.s64 	%rd565, %rd564, %rd472;
	add.s64 	%rd566, %rd565, %rd562;
	add.s64 	%rd567, %rd566, %rd559;
	add.s64 	%rd2290, %rd567, %rd483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5725,%dummy}, %rd2287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5726}, %rd2287;
	}
	shf.r.wrap.b32 	%r5727, %r5726, %r5725, 28;
	shf.r.wrap.b32 	%r5728, %r5725, %r5726, 28;
	mov.b64 	%rd568, {%r5728, %r5727};
	shf.l.wrap.b32 	%r5729, %r5725, %r5726, 30;
	shf.l.wrap.b32 	%r5730, %r5726, %r5725, 30;
	mov.b64 	%rd569, {%r5730, %r5729};
	xor.b64  	%rd570, %rd568, %rd569;
	shf.l.wrap.b32 	%r5731, %r5725, %r5726, 25;
	shf.l.wrap.b32 	%r5732, %r5726, %r5725, 25;
	mov.b64 	%rd571, {%r5732, %r5731};
	xor.b64  	%rd572, %rd570, %rd571;
	and.b64  	%rd573, %rd2287, %rd2288;
	xor.b64  	%rd574, %rd2287, %rd2288;
	and.b64  	%rd575, %rd574, %rd508;
	or.b64  	%rd576, %rd575, %rd573;
	add.s64 	%rd577, %rd572, %rd576;
	add.s64 	%rd2286, %rd577, %rd567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5733,%dummy}, %rd2290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5734}, %rd2290;
	}
	shf.r.wrap.b32 	%r5735, %r5734, %r5733, 14;
	shf.r.wrap.b32 	%r5736, %r5733, %r5734, 14;
	mov.b64 	%rd578, {%r5736, %r5735};
	shf.r.wrap.b32 	%r5737, %r5734, %r5733, 18;
	shf.r.wrap.b32 	%r5738, %r5733, %r5734, 18;
	mov.b64 	%rd579, {%r5738, %r5737};
	xor.b64  	%rd580, %rd578, %rd579;
	shf.l.wrap.b32 	%r5739, %r5733, %r5734, 23;
	shf.l.wrap.b32 	%r5740, %r5734, %r5733, 23;
	mov.b64 	%rd581, {%r5740, %r5739};
	xor.b64  	%rd582, %rd580, %rd581;
	xor.b64  	%rd583, %rd2291, %rd2292;
	and.b64  	%rd584, %rd2290, %rd583;
	xor.b64  	%rd585, %rd584, %rd2292;
	ld.const.u64 	%rd586, [k_sha512+120];
	add.s64 	%rd587, %rd586, %rd2277;
	add.s64 	%rd588, %rd587, %rd497;
	add.s64 	%rd589, %rd588, %rd585;
	add.s64 	%rd590, %rd589, %rd582;
	add.s64 	%rd2289, %rd590, %rd508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5741,%dummy}, %rd2286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5742}, %rd2286;
	}
	shf.r.wrap.b32 	%r5743, %r5742, %r5741, 28;
	shf.r.wrap.b32 	%r5744, %r5741, %r5742, 28;
	mov.b64 	%rd591, {%r5744, %r5743};
	shf.l.wrap.b32 	%r5745, %r5741, %r5742, 30;
	shf.l.wrap.b32 	%r5746, %r5742, %r5741, 30;
	mov.b64 	%rd592, {%r5746, %r5745};
	xor.b64  	%rd593, %rd591, %rd592;
	shf.l.wrap.b32 	%r5747, %r5741, %r5742, 25;
	shf.l.wrap.b32 	%r5748, %r5742, %r5741, 25;
	mov.b64 	%rd594, {%r5748, %r5747};
	xor.b64  	%rd595, %rd593, %rd594;
	and.b64  	%rd596, %rd2286, %rd2287;
	xor.b64  	%rd597, %rd2286, %rd2287;
	and.b64  	%rd598, %rd597, %rd2288;
	or.b64  	%rd599, %rd598, %rd596;
	add.s64 	%rd600, %rd595, %rd599;
	add.s64 	%rd2285, %rd600, %rd590;
	mov.u32 	%r9191, 16;

BB0_91:
	shr.u64 	%rd601, %rd2278, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5749}, %rd2278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5750,%dummy}, %rd2278;
	}
	shf.l.wrap.b32 	%r5751, %r5750, %r5749, 3;
	shf.l.wrap.b32 	%r5752, %r5749, %r5750, 3;
	mov.b64 	%rd602, {%r5752, %r5751};
	xor.b64  	%rd603, %rd602, %rd601;
	shf.r.wrap.b32 	%r5753, %r5749, %r5750, 19;
	shf.r.wrap.b32 	%r5754, %r5750, %r5749, 19;
	mov.b64 	%rd604, {%r5754, %r5753};
	xor.b64  	%rd605, %rd603, %rd604;
	shr.u64 	%rd606, %rd2294, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5755,%dummy}, %rd2294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5756}, %rd2294;
	}
	shf.r.wrap.b32 	%r5757, %r5756, %r5755, 8;
	shf.r.wrap.b32 	%r5758, %r5755, %r5756, 8;
	mov.b64 	%rd607, {%r5758, %r5757};
	xor.b64  	%rd608, %rd607, %rd606;
	shf.r.wrap.b32 	%r5759, %r5756, %r5755, 1;
	shf.r.wrap.b32 	%r5760, %r5755, %r5756, 1;
	mov.b64 	%rd609, {%r5760, %r5759};
	xor.b64  	%rd610, %rd608, %rd609;
	add.s64 	%rd611, %rd610, %rd2293;
	add.s64 	%rd612, %rd611, %rd2283;
	add.s64 	%rd2293, %rd612, %rd605;
	shr.u64 	%rd613, %rd2277, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5761}, %rd2277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5762,%dummy}, %rd2277;
	}
	shf.l.wrap.b32 	%r5763, %r5762, %r5761, 3;
	shf.l.wrap.b32 	%r5764, %r5761, %r5762, 3;
	mov.b64 	%rd614, {%r5764, %r5763};
	xor.b64  	%rd615, %rd614, %rd613;
	shf.r.wrap.b32 	%r5765, %r5761, %r5762, 19;
	shf.r.wrap.b32 	%r5766, %r5762, %r5761, 19;
	mov.b64 	%rd616, {%r5766, %r5765};
	xor.b64  	%rd617, %rd615, %rd616;
	shr.u64 	%rd618, %rd2295, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5767,%dummy}, %rd2295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5768}, %rd2295;
	}
	shf.r.wrap.b32 	%r5769, %r5768, %r5767, 8;
	shf.r.wrap.b32 	%r5770, %r5767, %r5768, 8;
	mov.b64 	%rd619, {%r5770, %r5769};
	xor.b64  	%rd620, %rd619, %rd618;
	shf.r.wrap.b32 	%r5771, %r5768, %r5767, 1;
	shf.r.wrap.b32 	%r5772, %r5767, %r5768, 1;
	mov.b64 	%rd621, {%r5772, %r5771};
	xor.b64  	%rd622, %rd620, %rd621;
	add.s64 	%rd623, %rd622, %rd2294;
	add.s64 	%rd624, %rd623, %rd2282;
	add.s64 	%rd2294, %rd624, %rd617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5773,%dummy}, %rd2293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5774}, %rd2293;
	}
	shf.r.wrap.b32 	%r5775, %r5774, %r5773, 19;
	shf.r.wrap.b32 	%r5776, %r5773, %r5774, 19;
	mov.b64 	%rd625, {%r5776, %r5775};
	shf.l.wrap.b32 	%r5777, %r5773, %r5774, 3;
	shf.l.wrap.b32 	%r5778, %r5774, %r5773, 3;
	mov.b64 	%rd626, {%r5778, %r5777};
	shr.u64 	%rd627, %rd2293, 6;
	xor.b64  	%rd628, %rd626, %rd627;
	xor.b64  	%rd629, %rd628, %rd625;
	shr.u64 	%rd630, %rd2296, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5779,%dummy}, %rd2296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5780}, %rd2296;
	}
	shf.r.wrap.b32 	%r5781, %r5780, %r5779, 8;
	shf.r.wrap.b32 	%r5782, %r5779, %r5780, 8;
	mov.b64 	%rd631, {%r5782, %r5781};
	xor.b64  	%rd632, %rd631, %rd630;
	shf.r.wrap.b32 	%r5783, %r5780, %r5779, 1;
	shf.r.wrap.b32 	%r5784, %r5779, %r5780, 1;
	mov.b64 	%rd633, {%r5784, %r5783};
	xor.b64  	%rd634, %rd632, %rd633;
	add.s64 	%rd635, %rd634, %rd2295;
	add.s64 	%rd636, %rd635, %rd2281;
	add.s64 	%rd2295, %rd636, %rd629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5785,%dummy}, %rd2294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5786}, %rd2294;
	}
	shf.r.wrap.b32 	%r5787, %r5786, %r5785, 19;
	shf.r.wrap.b32 	%r5788, %r5785, %r5786, 19;
	mov.b64 	%rd637, {%r5788, %r5787};
	shf.l.wrap.b32 	%r5789, %r5785, %r5786, 3;
	shf.l.wrap.b32 	%r5790, %r5786, %r5785, 3;
	mov.b64 	%rd638, {%r5790, %r5789};
	shr.u64 	%rd639, %rd2294, 6;
	xor.b64  	%rd640, %rd638, %rd639;
	xor.b64  	%rd641, %rd640, %rd637;
	shr.u64 	%rd642, %rd2297, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5791,%dummy}, %rd2297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5792}, %rd2297;
	}
	shf.r.wrap.b32 	%r5793, %r5792, %r5791, 8;
	shf.r.wrap.b32 	%r5794, %r5791, %r5792, 8;
	mov.b64 	%rd643, {%r5794, %r5793};
	xor.b64  	%rd644, %rd643, %rd642;
	shf.r.wrap.b32 	%r5795, %r5792, %r5791, 1;
	shf.r.wrap.b32 	%r5796, %r5791, %r5792, 1;
	mov.b64 	%rd645, {%r5796, %r5795};
	xor.b64  	%rd646, %rd644, %rd645;
	add.s64 	%rd647, %rd646, %rd2296;
	add.s64 	%rd648, %rd647, %rd2280;
	add.s64 	%rd2296, %rd648, %rd641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5797,%dummy}, %rd2295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5798}, %rd2295;
	}
	shf.r.wrap.b32 	%r5799, %r5798, %r5797, 19;
	shf.r.wrap.b32 	%r5800, %r5797, %r5798, 19;
	mov.b64 	%rd649, {%r5800, %r5799};
	shf.l.wrap.b32 	%r5801, %r5797, %r5798, 3;
	shf.l.wrap.b32 	%r5802, %r5798, %r5797, 3;
	mov.b64 	%rd650, {%r5802, %r5801};
	shr.u64 	%rd651, %rd2295, 6;
	xor.b64  	%rd652, %rd650, %rd651;
	xor.b64  	%rd653, %rd652, %rd649;
	shr.u64 	%rd654, %rd2298, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5803,%dummy}, %rd2298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5804}, %rd2298;
	}
	shf.r.wrap.b32 	%r5805, %r5804, %r5803, 8;
	shf.r.wrap.b32 	%r5806, %r5803, %r5804, 8;
	mov.b64 	%rd655, {%r5806, %r5805};
	xor.b64  	%rd656, %rd655, %rd654;
	shf.r.wrap.b32 	%r5807, %r5804, %r5803, 1;
	shf.r.wrap.b32 	%r5808, %r5803, %r5804, 1;
	mov.b64 	%rd657, {%r5808, %r5807};
	xor.b64  	%rd658, %rd656, %rd657;
	add.s64 	%rd659, %rd658, %rd2297;
	add.s64 	%rd660, %rd659, %rd2279;
	add.s64 	%rd2297, %rd660, %rd653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5809,%dummy}, %rd2296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5810}, %rd2296;
	}
	shf.r.wrap.b32 	%r5811, %r5810, %r5809, 19;
	shf.r.wrap.b32 	%r5812, %r5809, %r5810, 19;
	mov.b64 	%rd661, {%r5812, %r5811};
	shf.l.wrap.b32 	%r5813, %r5809, %r5810, 3;
	shf.l.wrap.b32 	%r5814, %r5810, %r5809, 3;
	mov.b64 	%rd662, {%r5814, %r5813};
	shr.u64 	%rd663, %rd2296, 6;
	xor.b64  	%rd664, %rd662, %rd663;
	xor.b64  	%rd665, %rd664, %rd661;
	shr.u64 	%rd666, %rd2299, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5815,%dummy}, %rd2299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5816}, %rd2299;
	}
	shf.r.wrap.b32 	%r5817, %r5816, %r5815, 8;
	shf.r.wrap.b32 	%r5818, %r5815, %r5816, 8;
	mov.b64 	%rd667, {%r5818, %r5817};
	xor.b64  	%rd668, %rd667, %rd666;
	shf.r.wrap.b32 	%r5819, %r5816, %r5815, 1;
	shf.r.wrap.b32 	%r5820, %r5815, %r5816, 1;
	mov.b64 	%rd669, {%r5820, %r5819};
	xor.b64  	%rd670, %rd668, %rd669;
	add.s64 	%rd671, %rd670, %rd2298;
	add.s64 	%rd672, %rd671, %rd2278;
	add.s64 	%rd2298, %rd672, %rd665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5821,%dummy}, %rd2297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5822}, %rd2297;
	}
	shf.r.wrap.b32 	%r5823, %r5822, %r5821, 19;
	shf.r.wrap.b32 	%r5824, %r5821, %r5822, 19;
	mov.b64 	%rd673, {%r5824, %r5823};
	shf.l.wrap.b32 	%r5825, %r5821, %r5822, 3;
	shf.l.wrap.b32 	%r5826, %r5822, %r5821, 3;
	mov.b64 	%rd674, {%r5826, %r5825};
	shr.u64 	%rd675, %rd2297, 6;
	xor.b64  	%rd676, %rd674, %rd675;
	xor.b64  	%rd677, %rd676, %rd673;
	shr.u64 	%rd678, %rd2300, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5827,%dummy}, %rd2300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5828}, %rd2300;
	}
	shf.r.wrap.b32 	%r5829, %r5828, %r5827, 8;
	shf.r.wrap.b32 	%r5830, %r5827, %r5828, 8;
	mov.b64 	%rd679, {%r5830, %r5829};
	xor.b64  	%rd680, %rd679, %rd678;
	shf.r.wrap.b32 	%r5831, %r5828, %r5827, 1;
	shf.r.wrap.b32 	%r5832, %r5827, %r5828, 1;
	mov.b64 	%rd681, {%r5832, %r5831};
	xor.b64  	%rd682, %rd680, %rd681;
	add.s64 	%rd683, %rd682, %rd2299;
	add.s64 	%rd684, %rd683, %rd2277;
	add.s64 	%rd2299, %rd684, %rd677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5833,%dummy}, %rd2298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5834}, %rd2298;
	}
	shf.r.wrap.b32 	%r5835, %r5834, %r5833, 19;
	shf.r.wrap.b32 	%r5836, %r5833, %r5834, 19;
	mov.b64 	%rd685, {%r5836, %r5835};
	shf.l.wrap.b32 	%r5837, %r5833, %r5834, 3;
	shf.l.wrap.b32 	%r5838, %r5834, %r5833, 3;
	mov.b64 	%rd686, {%r5838, %r5837};
	shr.u64 	%rd687, %rd2298, 6;
	xor.b64  	%rd688, %rd686, %rd687;
	xor.b64  	%rd689, %rd688, %rd685;
	shr.u64 	%rd690, %rd2284, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5839,%dummy}, %rd2284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5840}, %rd2284;
	}
	shf.r.wrap.b32 	%r5841, %r5840, %r5839, 8;
	shf.r.wrap.b32 	%r5842, %r5839, %r5840, 8;
	mov.b64 	%rd691, {%r5842, %r5841};
	xor.b64  	%rd692, %rd691, %rd690;
	shf.r.wrap.b32 	%r5843, %r5840, %r5839, 1;
	shf.r.wrap.b32 	%r5844, %r5839, %r5840, 1;
	mov.b64 	%rd693, {%r5844, %r5843};
	xor.b64  	%rd694, %rd692, %rd693;
	add.s64 	%rd695, %rd694, %rd2300;
	add.s64 	%rd696, %rd695, %rd2293;
	add.s64 	%rd2300, %rd696, %rd689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5845,%dummy}, %rd2299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5846}, %rd2299;
	}
	shf.r.wrap.b32 	%r5847, %r5846, %r5845, 19;
	shf.r.wrap.b32 	%r5848, %r5845, %r5846, 19;
	mov.b64 	%rd697, {%r5848, %r5847};
	shf.l.wrap.b32 	%r5849, %r5845, %r5846, 3;
	shf.l.wrap.b32 	%r5850, %r5846, %r5845, 3;
	mov.b64 	%rd698, {%r5850, %r5849};
	shr.u64 	%rd699, %rd2299, 6;
	xor.b64  	%rd700, %rd698, %rd699;
	xor.b64  	%rd701, %rd700, %rd697;
	shr.u64 	%rd702, %rd2283, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5851,%dummy}, %rd2283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5852}, %rd2283;
	}
	shf.r.wrap.b32 	%r5853, %r5852, %r5851, 8;
	shf.r.wrap.b32 	%r5854, %r5851, %r5852, 8;
	mov.b64 	%rd703, {%r5854, %r5853};
	xor.b64  	%rd704, %rd703, %rd702;
	shf.r.wrap.b32 	%r5855, %r5852, %r5851, 1;
	shf.r.wrap.b32 	%r5856, %r5851, %r5852, 1;
	mov.b64 	%rd705, {%r5856, %r5855};
	xor.b64  	%rd706, %rd704, %rd705;
	add.s64 	%rd707, %rd706, %rd2284;
	add.s64 	%rd708, %rd707, %rd2294;
	add.s64 	%rd2284, %rd708, %rd701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5857,%dummy}, %rd2300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5858}, %rd2300;
	}
	shf.r.wrap.b32 	%r5859, %r5858, %r5857, 19;
	shf.r.wrap.b32 	%r5860, %r5857, %r5858, 19;
	mov.b64 	%rd709, {%r5860, %r5859};
	shf.l.wrap.b32 	%r5861, %r5857, %r5858, 3;
	shf.l.wrap.b32 	%r5862, %r5858, %r5857, 3;
	mov.b64 	%rd710, {%r5862, %r5861};
	shr.u64 	%rd711, %rd2300, 6;
	xor.b64  	%rd712, %rd710, %rd711;
	xor.b64  	%rd713, %rd712, %rd709;
	shr.u64 	%rd714, %rd2282, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5863,%dummy}, %rd2282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5864}, %rd2282;
	}
	shf.r.wrap.b32 	%r5865, %r5864, %r5863, 8;
	shf.r.wrap.b32 	%r5866, %r5863, %r5864, 8;
	mov.b64 	%rd715, {%r5866, %r5865};
	xor.b64  	%rd716, %rd715, %rd714;
	shf.r.wrap.b32 	%r5867, %r5864, %r5863, 1;
	shf.r.wrap.b32 	%r5868, %r5863, %r5864, 1;
	mov.b64 	%rd717, {%r5868, %r5867};
	xor.b64  	%rd718, %rd716, %rd717;
	add.s64 	%rd719, %rd718, %rd2283;
	add.s64 	%rd720, %rd719, %rd2295;
	add.s64 	%rd2283, %rd720, %rd713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5869,%dummy}, %rd2284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5870}, %rd2284;
	}
	shf.r.wrap.b32 	%r5871, %r5870, %r5869, 19;
	shf.r.wrap.b32 	%r5872, %r5869, %r5870, 19;
	mov.b64 	%rd721, {%r5872, %r5871};
	shf.l.wrap.b32 	%r5873, %r5869, %r5870, 3;
	shf.l.wrap.b32 	%r5874, %r5870, %r5869, 3;
	mov.b64 	%rd722, {%r5874, %r5873};
	shr.u64 	%rd723, %rd2284, 6;
	xor.b64  	%rd724, %rd722, %rd723;
	xor.b64  	%rd725, %rd724, %rd721;
	shr.u64 	%rd726, %rd2281, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5875,%dummy}, %rd2281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5876}, %rd2281;
	}
	shf.r.wrap.b32 	%r5877, %r5876, %r5875, 8;
	shf.r.wrap.b32 	%r5878, %r5875, %r5876, 8;
	mov.b64 	%rd727, {%r5878, %r5877};
	xor.b64  	%rd728, %rd727, %rd726;
	shf.r.wrap.b32 	%r5879, %r5876, %r5875, 1;
	shf.r.wrap.b32 	%r5880, %r5875, %r5876, 1;
	mov.b64 	%rd729, {%r5880, %r5879};
	xor.b64  	%rd730, %rd728, %rd729;
	add.s64 	%rd731, %rd730, %rd2282;
	add.s64 	%rd732, %rd731, %rd2296;
	add.s64 	%rd2282, %rd732, %rd725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5881,%dummy}, %rd2283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5882}, %rd2283;
	}
	shf.r.wrap.b32 	%r5883, %r5882, %r5881, 19;
	shf.r.wrap.b32 	%r5884, %r5881, %r5882, 19;
	mov.b64 	%rd733, {%r5884, %r5883};
	shf.l.wrap.b32 	%r5885, %r5881, %r5882, 3;
	shf.l.wrap.b32 	%r5886, %r5882, %r5881, 3;
	mov.b64 	%rd734, {%r5886, %r5885};
	shr.u64 	%rd735, %rd2283, 6;
	xor.b64  	%rd736, %rd734, %rd735;
	xor.b64  	%rd737, %rd736, %rd733;
	shr.u64 	%rd738, %rd2280, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5887,%dummy}, %rd2280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5888}, %rd2280;
	}
	shf.r.wrap.b32 	%r5889, %r5888, %r5887, 8;
	shf.r.wrap.b32 	%r5890, %r5887, %r5888, 8;
	mov.b64 	%rd739, {%r5890, %r5889};
	xor.b64  	%rd740, %rd739, %rd738;
	shf.r.wrap.b32 	%r5891, %r5888, %r5887, 1;
	shf.r.wrap.b32 	%r5892, %r5887, %r5888, 1;
	mov.b64 	%rd741, {%r5892, %r5891};
	xor.b64  	%rd742, %rd740, %rd741;
	add.s64 	%rd743, %rd742, %rd2281;
	add.s64 	%rd744, %rd743, %rd2297;
	add.s64 	%rd2281, %rd744, %rd737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5893,%dummy}, %rd2282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5894}, %rd2282;
	}
	shf.r.wrap.b32 	%r5895, %r5894, %r5893, 19;
	shf.r.wrap.b32 	%r5896, %r5893, %r5894, 19;
	mov.b64 	%rd745, {%r5896, %r5895};
	shf.l.wrap.b32 	%r5897, %r5893, %r5894, 3;
	shf.l.wrap.b32 	%r5898, %r5894, %r5893, 3;
	mov.b64 	%rd746, {%r5898, %r5897};
	shr.u64 	%rd747, %rd2282, 6;
	xor.b64  	%rd748, %rd746, %rd747;
	xor.b64  	%rd749, %rd748, %rd745;
	shr.u64 	%rd750, %rd2279, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5899,%dummy}, %rd2279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5900}, %rd2279;
	}
	shf.r.wrap.b32 	%r5901, %r5900, %r5899, 8;
	shf.r.wrap.b32 	%r5902, %r5899, %r5900, 8;
	mov.b64 	%rd751, {%r5902, %r5901};
	xor.b64  	%rd752, %rd751, %rd750;
	shf.r.wrap.b32 	%r5903, %r5900, %r5899, 1;
	shf.r.wrap.b32 	%r5904, %r5899, %r5900, 1;
	mov.b64 	%rd753, {%r5904, %r5903};
	xor.b64  	%rd754, %rd752, %rd753;
	add.s64 	%rd755, %rd754, %rd2280;
	add.s64 	%rd756, %rd755, %rd2298;
	add.s64 	%rd2280, %rd756, %rd749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5905,%dummy}, %rd2281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5906}, %rd2281;
	}
	shf.r.wrap.b32 	%r5907, %r5906, %r5905, 19;
	shf.r.wrap.b32 	%r5908, %r5905, %r5906, 19;
	mov.b64 	%rd757, {%r5908, %r5907};
	shf.l.wrap.b32 	%r5909, %r5905, %r5906, 3;
	shf.l.wrap.b32 	%r5910, %r5906, %r5905, 3;
	mov.b64 	%rd758, {%r5910, %r5909};
	shr.u64 	%rd759, %rd2281, 6;
	xor.b64  	%rd760, %rd758, %rd759;
	xor.b64  	%rd761, %rd760, %rd757;
	shr.u64 	%rd762, %rd2278, 7;
	shf.r.wrap.b32 	%r5911, %r5749, %r5750, 8;
	shf.r.wrap.b32 	%r5912, %r5750, %r5749, 8;
	mov.b64 	%rd763, {%r5912, %r5911};
	xor.b64  	%rd764, %rd763, %rd762;
	shf.r.wrap.b32 	%r5913, %r5749, %r5750, 1;
	shf.r.wrap.b32 	%r5914, %r5750, %r5749, 1;
	mov.b64 	%rd765, {%r5914, %r5913};
	xor.b64  	%rd766, %rd764, %rd765;
	add.s64 	%rd767, %rd766, %rd2279;
	add.s64 	%rd768, %rd767, %rd2299;
	add.s64 	%rd2279, %rd768, %rd761;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5915,%dummy}, %rd2280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5916}, %rd2280;
	}
	shf.r.wrap.b32 	%r5917, %r5916, %r5915, 19;
	shf.r.wrap.b32 	%r5918, %r5915, %r5916, 19;
	mov.b64 	%rd769, {%r5918, %r5917};
	shf.l.wrap.b32 	%r5919, %r5915, %r5916, 3;
	shf.l.wrap.b32 	%r5920, %r5916, %r5915, 3;
	mov.b64 	%rd770, {%r5920, %r5919};
	shr.u64 	%rd771, %rd2280, 6;
	xor.b64  	%rd772, %rd770, %rd771;
	xor.b64  	%rd773, %rd772, %rd769;
	shr.u64 	%rd774, %rd2277, 7;
	shf.r.wrap.b32 	%r5921, %r5761, %r5762, 8;
	shf.r.wrap.b32 	%r5922, %r5762, %r5761, 8;
	mov.b64 	%rd775, {%r5922, %r5921};
	xor.b64  	%rd776, %rd775, %rd774;
	shf.r.wrap.b32 	%r5923, %r5761, %r5762, 1;
	shf.r.wrap.b32 	%r5924, %r5762, %r5761, 1;
	mov.b64 	%rd777, {%r5924, %r5923};
	xor.b64  	%rd778, %rd776, %rd777;
	add.s64 	%rd779, %rd778, %rd2278;
	add.s64 	%rd780, %rd779, %rd2300;
	add.s64 	%rd2278, %rd780, %rd773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5925,%dummy}, %rd2279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5926}, %rd2279;
	}
	shf.r.wrap.b32 	%r5927, %r5926, %r5925, 19;
	shf.r.wrap.b32 	%r5928, %r5925, %r5926, 19;
	mov.b64 	%rd781, {%r5928, %r5927};
	shf.l.wrap.b32 	%r5929, %r5925, %r5926, 3;
	shf.l.wrap.b32 	%r5930, %r5926, %r5925, 3;
	mov.b64 	%rd782, {%r5930, %r5929};
	shr.u64 	%rd783, %rd2279, 6;
	xor.b64  	%rd784, %rd782, %rd783;
	xor.b64  	%rd785, %rd784, %rd781;
	shf.r.wrap.b32 	%r5931, %r5774, %r5773, 1;
	shf.r.wrap.b32 	%r5932, %r5773, %r5774, 1;
	mov.b64 	%rd786, {%r5932, %r5931};
	shf.r.wrap.b32 	%r5933, %r5774, %r5773, 8;
	shf.r.wrap.b32 	%r5934, %r5773, %r5774, 8;
	mov.b64 	%rd787, {%r5934, %r5933};
	shr.u64 	%rd788, %rd2293, 7;
	xor.b64  	%rd789, %rd787, %rd788;
	xor.b64  	%rd790, %rd789, %rd786;
	add.s64 	%rd791, %rd790, %rd2277;
	add.s64 	%rd792, %rd791, %rd2284;
	add.s64 	%rd2277, %rd792, %rd785;
	mul.wide.s32 	%rd793, %r9191, 8;
	mov.u64 	%rd794, k_sha512;
	add.s64 	%rd795, %rd794, %rd793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5935,%dummy}, %rd2289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5936}, %rd2289;
	}
	shf.r.wrap.b32 	%r5937, %r5936, %r5935, 18;
	shf.r.wrap.b32 	%r5938, %r5935, %r5936, 18;
	mov.b64 	%rd796, {%r5938, %r5937};
	shf.r.wrap.b32 	%r5939, %r5936, %r5935, 14;
	shf.r.wrap.b32 	%r5940, %r5935, %r5936, 14;
	mov.b64 	%rd797, {%r5940, %r5939};
	xor.b64  	%rd798, %rd797, %rd796;
	shf.l.wrap.b32 	%r5941, %r5935, %r5936, 23;
	shf.l.wrap.b32 	%r5942, %r5936, %r5935, 23;
	mov.b64 	%rd799, {%r5942, %r5941};
	xor.b64  	%rd800, %rd798, %rd799;
	xor.b64  	%rd801, %rd2290, %rd2291;
	and.b64  	%rd802, %rd2289, %rd801;
	xor.b64  	%rd803, %rd802, %rd2291;
	add.s64 	%rd804, %rd803, %rd2292;
	add.s64 	%rd805, %rd804, %rd800;
	add.s64 	%rd806, %rd805, %rd2293;
	ld.const.u64 	%rd807, [%rd795];
	add.s64 	%rd808, %rd806, %rd807;
	add.s64 	%rd809, %rd808, %rd2288;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5943}, %rd2285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5944,%dummy}, %rd2285;
	}
	shf.l.wrap.b32 	%r5945, %r5944, %r5943, 30;
	shf.l.wrap.b32 	%r5946, %r5943, %r5944, 30;
	mov.b64 	%rd810, {%r5946, %r5945};
	shf.r.wrap.b32 	%r5947, %r5943, %r5944, 28;
	shf.r.wrap.b32 	%r5948, %r5944, %r5943, 28;
	mov.b64 	%rd811, {%r5948, %r5947};
	xor.b64  	%rd812, %rd811, %rd810;
	shf.l.wrap.b32 	%r5949, %r5944, %r5943, 25;
	shf.l.wrap.b32 	%r5950, %r5943, %r5944, 25;
	mov.b64 	%rd813, {%r5950, %r5949};
	xor.b64  	%rd814, %rd812, %rd813;
	xor.b64  	%rd815, %rd2285, %rd2286;
	and.b64  	%rd816, %rd815, %rd2287;
	and.b64  	%rd817, %rd2285, %rd2286;
	or.b64  	%rd818, %rd816, %rd817;
	add.s64 	%rd819, %rd814, %rd818;
	add.s64 	%rd820, %rd819, %rd808;
	add.s32 	%r5951, %r9191, 1;
	mul.wide.s32 	%rd821, %r5951, 8;
	add.s64 	%rd822, %rd794, %rd821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5952,%dummy}, %rd809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5953}, %rd809;
	}
	shf.r.wrap.b32 	%r5954, %r5953, %r5952, 14;
	shf.r.wrap.b32 	%r5955, %r5952, %r5953, 14;
	mov.b64 	%rd823, {%r5955, %r5954};
	shf.r.wrap.b32 	%r5956, %r5953, %r5952, 18;
	shf.r.wrap.b32 	%r5957, %r5952, %r5953, 18;
	mov.b64 	%rd824, {%r5957, %r5956};
	xor.b64  	%rd825, %rd823, %rd824;
	shf.l.wrap.b32 	%r5958, %r5952, %r5953, 23;
	shf.l.wrap.b32 	%r5959, %r5953, %r5952, 23;
	mov.b64 	%rd826, {%r5959, %r5958};
	xor.b64  	%rd827, %rd825, %rd826;
	xor.b64  	%rd828, %rd2289, %rd2290;
	and.b64  	%rd829, %rd809, %rd828;
	xor.b64  	%rd830, %rd829, %rd2290;
	add.s64 	%rd831, %rd2294, %rd2291;
	ld.const.u64 	%rd832, [%rd822];
	add.s64 	%rd833, %rd831, %rd832;
	add.s64 	%rd834, %rd833, %rd830;
	add.s64 	%rd835, %rd834, %rd827;
	add.s64 	%rd836, %rd835, %rd2287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5960,%dummy}, %rd820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5961}, %rd820;
	}
	shf.r.wrap.b32 	%r5962, %r5961, %r5960, 28;
	shf.r.wrap.b32 	%r5963, %r5960, %r5961, 28;
	mov.b64 	%rd837, {%r5963, %r5962};
	shf.l.wrap.b32 	%r5964, %r5960, %r5961, 30;
	shf.l.wrap.b32 	%r5965, %r5961, %r5960, 30;
	mov.b64 	%rd838, {%r5965, %r5964};
	xor.b64  	%rd839, %rd837, %rd838;
	shf.l.wrap.b32 	%r5966, %r5960, %r5961, 25;
	shf.l.wrap.b32 	%r5967, %r5961, %r5960, 25;
	mov.b64 	%rd840, {%r5967, %r5966};
	xor.b64  	%rd841, %rd839, %rd840;
	and.b64  	%rd842, %rd820, %rd2285;
	xor.b64  	%rd843, %rd820, %rd2285;
	and.b64  	%rd844, %rd843, %rd2286;
	or.b64  	%rd845, %rd844, %rd842;
	add.s64 	%rd846, %rd841, %rd845;
	add.s64 	%rd847, %rd846, %rd835;
	add.s32 	%r5968, %r9191, 2;
	mul.wide.s32 	%rd848, %r5968, 8;
	add.s64 	%rd849, %rd794, %rd848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5969,%dummy}, %rd836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5970}, %rd836;
	}
	shf.r.wrap.b32 	%r5971, %r5970, %r5969, 14;
	shf.r.wrap.b32 	%r5972, %r5969, %r5970, 14;
	mov.b64 	%rd850, {%r5972, %r5971};
	shf.r.wrap.b32 	%r5973, %r5970, %r5969, 18;
	shf.r.wrap.b32 	%r5974, %r5969, %r5970, 18;
	mov.b64 	%rd851, {%r5974, %r5973};
	xor.b64  	%rd852, %rd850, %rd851;
	shf.l.wrap.b32 	%r5975, %r5969, %r5970, 23;
	shf.l.wrap.b32 	%r5976, %r5970, %r5969, 23;
	mov.b64 	%rd853, {%r5976, %r5975};
	xor.b64  	%rd854, %rd852, %rd853;
	xor.b64  	%rd855, %rd809, %rd2289;
	and.b64  	%rd856, %rd836, %rd855;
	xor.b64  	%rd857, %rd856, %rd2289;
	add.s64 	%rd858, %rd2295, %rd2290;
	ld.const.u64 	%rd859, [%rd849];
	add.s64 	%rd860, %rd858, %rd859;
	add.s64 	%rd861, %rd860, %rd857;
	add.s64 	%rd862, %rd861, %rd854;
	add.s64 	%rd863, %rd862, %rd2286;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5977,%dummy}, %rd847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5978}, %rd847;
	}
	shf.r.wrap.b32 	%r5979, %r5978, %r5977, 28;
	shf.r.wrap.b32 	%r5980, %r5977, %r5978, 28;
	mov.b64 	%rd864, {%r5980, %r5979};
	shf.l.wrap.b32 	%r5981, %r5977, %r5978, 30;
	shf.l.wrap.b32 	%r5982, %r5978, %r5977, 30;
	mov.b64 	%rd865, {%r5982, %r5981};
	xor.b64  	%rd866, %rd864, %rd865;
	shf.l.wrap.b32 	%r5983, %r5977, %r5978, 25;
	shf.l.wrap.b32 	%r5984, %r5978, %r5977, 25;
	mov.b64 	%rd867, {%r5984, %r5983};
	xor.b64  	%rd868, %rd866, %rd867;
	and.b64  	%rd869, %rd847, %rd820;
	xor.b64  	%rd870, %rd847, %rd820;
	and.b64  	%rd871, %rd870, %rd2285;
	or.b64  	%rd872, %rd871, %rd869;
	add.s64 	%rd873, %rd868, %rd872;
	add.s64 	%rd874, %rd873, %rd862;
	add.s32 	%r5985, %r9191, 3;
	mul.wide.s32 	%rd875, %r5985, 8;
	add.s64 	%rd876, %rd794, %rd875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5986,%dummy}, %rd863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5987}, %rd863;
	}
	shf.r.wrap.b32 	%r5988, %r5987, %r5986, 14;
	shf.r.wrap.b32 	%r5989, %r5986, %r5987, 14;
	mov.b64 	%rd877, {%r5989, %r5988};
	shf.r.wrap.b32 	%r5990, %r5987, %r5986, 18;
	shf.r.wrap.b32 	%r5991, %r5986, %r5987, 18;
	mov.b64 	%rd878, {%r5991, %r5990};
	xor.b64  	%rd879, %rd877, %rd878;
	shf.l.wrap.b32 	%r5992, %r5986, %r5987, 23;
	shf.l.wrap.b32 	%r5993, %r5987, %r5986, 23;
	mov.b64 	%rd880, {%r5993, %r5992};
	xor.b64  	%rd881, %rd879, %rd880;
	xor.b64  	%rd882, %rd836, %rd809;
	and.b64  	%rd883, %rd863, %rd882;
	xor.b64  	%rd884, %rd883, %rd809;
	add.s64 	%rd885, %rd2296, %rd2289;
	ld.const.u64 	%rd886, [%rd876];
	add.s64 	%rd887, %rd885, %rd886;
	add.s64 	%rd888, %rd887, %rd884;
	add.s64 	%rd889, %rd888, %rd881;
	add.s64 	%rd890, %rd889, %rd2285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5994,%dummy}, %rd874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5995}, %rd874;
	}
	shf.r.wrap.b32 	%r5996, %r5995, %r5994, 28;
	shf.r.wrap.b32 	%r5997, %r5994, %r5995, 28;
	mov.b64 	%rd891, {%r5997, %r5996};
	shf.l.wrap.b32 	%r5998, %r5994, %r5995, 30;
	shf.l.wrap.b32 	%r5999, %r5995, %r5994, 30;
	mov.b64 	%rd892, {%r5999, %r5998};
	xor.b64  	%rd893, %rd891, %rd892;
	shf.l.wrap.b32 	%r6000, %r5994, %r5995, 25;
	shf.l.wrap.b32 	%r6001, %r5995, %r5994, 25;
	mov.b64 	%rd894, {%r6001, %r6000};
	xor.b64  	%rd895, %rd893, %rd894;
	and.b64  	%rd896, %rd874, %rd847;
	xor.b64  	%rd897, %rd874, %rd847;
	and.b64  	%rd898, %rd897, %rd820;
	or.b64  	%rd899, %rd898, %rd896;
	add.s64 	%rd900, %rd895, %rd899;
	add.s64 	%rd901, %rd900, %rd889;
	add.s32 	%r6002, %r9191, 4;
	mul.wide.s32 	%rd902, %r6002, 8;
	add.s64 	%rd903, %rd794, %rd902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6003,%dummy}, %rd890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6004}, %rd890;
	}
	shf.r.wrap.b32 	%r6005, %r6004, %r6003, 14;
	shf.r.wrap.b32 	%r6006, %r6003, %r6004, 14;
	mov.b64 	%rd904, {%r6006, %r6005};
	shf.r.wrap.b32 	%r6007, %r6004, %r6003, 18;
	shf.r.wrap.b32 	%r6008, %r6003, %r6004, 18;
	mov.b64 	%rd905, {%r6008, %r6007};
	xor.b64  	%rd906, %rd904, %rd905;
	shf.l.wrap.b32 	%r6009, %r6003, %r6004, 23;
	shf.l.wrap.b32 	%r6010, %r6004, %r6003, 23;
	mov.b64 	%rd907, {%r6010, %r6009};
	xor.b64  	%rd908, %rd906, %rd907;
	xor.b64  	%rd909, %rd863, %rd836;
	and.b64  	%rd910, %rd890, %rd909;
	xor.b64  	%rd911, %rd910, %rd836;
	add.s64 	%rd912, %rd809, %rd2297;
	ld.const.u64 	%rd913, [%rd903];
	add.s64 	%rd914, %rd912, %rd913;
	add.s64 	%rd915, %rd914, %rd911;
	add.s64 	%rd916, %rd915, %rd908;
	add.s64 	%rd917, %rd916, %rd820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6011,%dummy}, %rd901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6012}, %rd901;
	}
	shf.r.wrap.b32 	%r6013, %r6012, %r6011, 28;
	shf.r.wrap.b32 	%r6014, %r6011, %r6012, 28;
	mov.b64 	%rd918, {%r6014, %r6013};
	shf.l.wrap.b32 	%r6015, %r6011, %r6012, 30;
	shf.l.wrap.b32 	%r6016, %r6012, %r6011, 30;
	mov.b64 	%rd919, {%r6016, %r6015};
	xor.b64  	%rd920, %rd918, %rd919;
	shf.l.wrap.b32 	%r6017, %r6011, %r6012, 25;
	shf.l.wrap.b32 	%r6018, %r6012, %r6011, 25;
	mov.b64 	%rd921, {%r6018, %r6017};
	xor.b64  	%rd922, %rd920, %rd921;
	and.b64  	%rd923, %rd901, %rd874;
	xor.b64  	%rd924, %rd901, %rd874;
	and.b64  	%rd925, %rd924, %rd847;
	or.b64  	%rd926, %rd925, %rd923;
	add.s64 	%rd927, %rd922, %rd926;
	add.s64 	%rd928, %rd927, %rd916;
	add.s32 	%r6019, %r9191, 5;
	mul.wide.s32 	%rd929, %r6019, 8;
	add.s64 	%rd930, %rd794, %rd929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6020,%dummy}, %rd917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6021}, %rd917;
	}
	shf.r.wrap.b32 	%r6022, %r6021, %r6020, 14;
	shf.r.wrap.b32 	%r6023, %r6020, %r6021, 14;
	mov.b64 	%rd931, {%r6023, %r6022};
	shf.r.wrap.b32 	%r6024, %r6021, %r6020, 18;
	shf.r.wrap.b32 	%r6025, %r6020, %r6021, 18;
	mov.b64 	%rd932, {%r6025, %r6024};
	xor.b64  	%rd933, %rd931, %rd932;
	shf.l.wrap.b32 	%r6026, %r6020, %r6021, 23;
	shf.l.wrap.b32 	%r6027, %r6021, %r6020, 23;
	mov.b64 	%rd934, {%r6027, %r6026};
	xor.b64  	%rd935, %rd933, %rd934;
	xor.b64  	%rd936, %rd890, %rd863;
	and.b64  	%rd937, %rd917, %rd936;
	xor.b64  	%rd938, %rd937, %rd863;
	ld.const.u64 	%rd939, [%rd930];
	add.s64 	%rd940, %rd939, %rd2298;
	add.s64 	%rd941, %rd940, %rd836;
	add.s64 	%rd942, %rd941, %rd938;
	add.s64 	%rd943, %rd942, %rd935;
	add.s64 	%rd944, %rd943, %rd847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6028,%dummy}, %rd928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6029}, %rd928;
	}
	shf.r.wrap.b32 	%r6030, %r6029, %r6028, 28;
	shf.r.wrap.b32 	%r6031, %r6028, %r6029, 28;
	mov.b64 	%rd945, {%r6031, %r6030};
	shf.l.wrap.b32 	%r6032, %r6028, %r6029, 30;
	shf.l.wrap.b32 	%r6033, %r6029, %r6028, 30;
	mov.b64 	%rd946, {%r6033, %r6032};
	xor.b64  	%rd947, %rd945, %rd946;
	shf.l.wrap.b32 	%r6034, %r6028, %r6029, 25;
	shf.l.wrap.b32 	%r6035, %r6029, %r6028, 25;
	mov.b64 	%rd948, {%r6035, %r6034};
	xor.b64  	%rd949, %rd947, %rd948;
	and.b64  	%rd950, %rd928, %rd901;
	xor.b64  	%rd951, %rd928, %rd901;
	and.b64  	%rd952, %rd951, %rd874;
	or.b64  	%rd953, %rd952, %rd950;
	add.s64 	%rd954, %rd949, %rd953;
	add.s64 	%rd955, %rd954, %rd943;
	add.s32 	%r6036, %r9191, 6;
	mul.wide.s32 	%rd956, %r6036, 8;
	add.s64 	%rd957, %rd794, %rd956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6037,%dummy}, %rd944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6038}, %rd944;
	}
	shf.r.wrap.b32 	%r6039, %r6038, %r6037, 14;
	shf.r.wrap.b32 	%r6040, %r6037, %r6038, 14;
	mov.b64 	%rd958, {%r6040, %r6039};
	shf.r.wrap.b32 	%r6041, %r6038, %r6037, 18;
	shf.r.wrap.b32 	%r6042, %r6037, %r6038, 18;
	mov.b64 	%rd959, {%r6042, %r6041};
	xor.b64  	%rd960, %rd958, %rd959;
	shf.l.wrap.b32 	%r6043, %r6037, %r6038, 23;
	shf.l.wrap.b32 	%r6044, %r6038, %r6037, 23;
	mov.b64 	%rd961, {%r6044, %r6043};
	xor.b64  	%rd962, %rd960, %rd961;
	xor.b64  	%rd963, %rd917, %rd890;
	and.b64  	%rd964, %rd944, %rd963;
	xor.b64  	%rd965, %rd964, %rd890;
	ld.const.u64 	%rd966, [%rd957];
	add.s64 	%rd967, %rd966, %rd2299;
	add.s64 	%rd968, %rd967, %rd863;
	add.s64 	%rd969, %rd968, %rd965;
	add.s64 	%rd970, %rd969, %rd962;
	add.s64 	%rd971, %rd970, %rd874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6045,%dummy}, %rd955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6046}, %rd955;
	}
	shf.r.wrap.b32 	%r6047, %r6046, %r6045, 28;
	shf.r.wrap.b32 	%r6048, %r6045, %r6046, 28;
	mov.b64 	%rd972, {%r6048, %r6047};
	shf.l.wrap.b32 	%r6049, %r6045, %r6046, 30;
	shf.l.wrap.b32 	%r6050, %r6046, %r6045, 30;
	mov.b64 	%rd973, {%r6050, %r6049};
	xor.b64  	%rd974, %rd972, %rd973;
	shf.l.wrap.b32 	%r6051, %r6045, %r6046, 25;
	shf.l.wrap.b32 	%r6052, %r6046, %r6045, 25;
	mov.b64 	%rd975, {%r6052, %r6051};
	xor.b64  	%rd976, %rd974, %rd975;
	and.b64  	%rd977, %rd955, %rd928;
	xor.b64  	%rd978, %rd955, %rd928;
	and.b64  	%rd979, %rd978, %rd901;
	or.b64  	%rd980, %rd979, %rd977;
	add.s64 	%rd981, %rd976, %rd980;
	add.s64 	%rd982, %rd981, %rd970;
	add.s32 	%r6053, %r9191, 7;
	mul.wide.s32 	%rd983, %r6053, 8;
	add.s64 	%rd984, %rd794, %rd983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6054,%dummy}, %rd971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6055}, %rd971;
	}
	shf.r.wrap.b32 	%r6056, %r6055, %r6054, 14;
	shf.r.wrap.b32 	%r6057, %r6054, %r6055, 14;
	mov.b64 	%rd985, {%r6057, %r6056};
	shf.r.wrap.b32 	%r6058, %r6055, %r6054, 18;
	shf.r.wrap.b32 	%r6059, %r6054, %r6055, 18;
	mov.b64 	%rd986, {%r6059, %r6058};
	xor.b64  	%rd987, %rd985, %rd986;
	shf.l.wrap.b32 	%r6060, %r6054, %r6055, 23;
	shf.l.wrap.b32 	%r6061, %r6055, %r6054, 23;
	mov.b64 	%rd988, {%r6061, %r6060};
	xor.b64  	%rd989, %rd987, %rd988;
	xor.b64  	%rd990, %rd944, %rd917;
	and.b64  	%rd991, %rd971, %rd990;
	xor.b64  	%rd992, %rd991, %rd917;
	ld.const.u64 	%rd993, [%rd984];
	add.s64 	%rd994, %rd993, %rd2300;
	add.s64 	%rd995, %rd994, %rd890;
	add.s64 	%rd996, %rd995, %rd992;
	add.s64 	%rd997, %rd996, %rd989;
	add.s64 	%rd998, %rd997, %rd901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6062,%dummy}, %rd982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6063}, %rd982;
	}
	shf.r.wrap.b32 	%r6064, %r6063, %r6062, 28;
	shf.r.wrap.b32 	%r6065, %r6062, %r6063, 28;
	mov.b64 	%rd999, {%r6065, %r6064};
	shf.l.wrap.b32 	%r6066, %r6062, %r6063, 30;
	shf.l.wrap.b32 	%r6067, %r6063, %r6062, 30;
	mov.b64 	%rd1000, {%r6067, %r6066};
	xor.b64  	%rd1001, %rd999, %rd1000;
	shf.l.wrap.b32 	%r6068, %r6062, %r6063, 25;
	shf.l.wrap.b32 	%r6069, %r6063, %r6062, 25;
	mov.b64 	%rd1002, {%r6069, %r6068};
	xor.b64  	%rd1003, %rd1001, %rd1002;
	and.b64  	%rd1004, %rd982, %rd955;
	xor.b64  	%rd1005, %rd982, %rd955;
	and.b64  	%rd1006, %rd1005, %rd928;
	or.b64  	%rd1007, %rd1006, %rd1004;
	add.s64 	%rd1008, %rd1003, %rd1007;
	add.s64 	%rd1009, %rd1008, %rd997;
	add.s32 	%r6070, %r9191, 8;
	mul.wide.s32 	%rd1010, %r6070, 8;
	add.s64 	%rd1011, %rd794, %rd1010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6071,%dummy}, %rd998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6072}, %rd998;
	}
	shf.r.wrap.b32 	%r6073, %r6072, %r6071, 14;
	shf.r.wrap.b32 	%r6074, %r6071, %r6072, 14;
	mov.b64 	%rd1012, {%r6074, %r6073};
	shf.r.wrap.b32 	%r6075, %r6072, %r6071, 18;
	shf.r.wrap.b32 	%r6076, %r6071, %r6072, 18;
	mov.b64 	%rd1013, {%r6076, %r6075};
	xor.b64  	%rd1014, %rd1012, %rd1013;
	shf.l.wrap.b32 	%r6077, %r6071, %r6072, 23;
	shf.l.wrap.b32 	%r6078, %r6072, %r6071, 23;
	mov.b64 	%rd1015, {%r6078, %r6077};
	xor.b64  	%rd1016, %rd1014, %rd1015;
	xor.b64  	%rd1017, %rd971, %rd944;
	and.b64  	%rd1018, %rd998, %rd1017;
	xor.b64  	%rd1019, %rd1018, %rd944;
	ld.const.u64 	%rd1020, [%rd1011];
	add.s64 	%rd1021, %rd1020, %rd2284;
	add.s64 	%rd1022, %rd1021, %rd917;
	add.s64 	%rd1023, %rd1022, %rd1019;
	add.s64 	%rd1024, %rd1023, %rd1016;
	add.s64 	%rd1025, %rd1024, %rd928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6079,%dummy}, %rd1009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6080}, %rd1009;
	}
	shf.r.wrap.b32 	%r6081, %r6080, %r6079, 28;
	shf.r.wrap.b32 	%r6082, %r6079, %r6080, 28;
	mov.b64 	%rd1026, {%r6082, %r6081};
	shf.l.wrap.b32 	%r6083, %r6079, %r6080, 30;
	shf.l.wrap.b32 	%r6084, %r6080, %r6079, 30;
	mov.b64 	%rd1027, {%r6084, %r6083};
	xor.b64  	%rd1028, %rd1026, %rd1027;
	shf.l.wrap.b32 	%r6085, %r6079, %r6080, 25;
	shf.l.wrap.b32 	%r6086, %r6080, %r6079, 25;
	mov.b64 	%rd1029, {%r6086, %r6085};
	xor.b64  	%rd1030, %rd1028, %rd1029;
	and.b64  	%rd1031, %rd1009, %rd982;
	xor.b64  	%rd1032, %rd1009, %rd982;
	and.b64  	%rd1033, %rd1032, %rd955;
	or.b64  	%rd1034, %rd1033, %rd1031;
	add.s64 	%rd1035, %rd1030, %rd1034;
	add.s64 	%rd1036, %rd1035, %rd1024;
	add.s32 	%r6087, %r9191, 9;
	mul.wide.s32 	%rd1037, %r6087, 8;
	add.s64 	%rd1038, %rd794, %rd1037;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6088,%dummy}, %rd1025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6089}, %rd1025;
	}
	shf.r.wrap.b32 	%r6090, %r6089, %r6088, 14;
	shf.r.wrap.b32 	%r6091, %r6088, %r6089, 14;
	mov.b64 	%rd1039, {%r6091, %r6090};
	shf.r.wrap.b32 	%r6092, %r6089, %r6088, 18;
	shf.r.wrap.b32 	%r6093, %r6088, %r6089, 18;
	mov.b64 	%rd1040, {%r6093, %r6092};
	xor.b64  	%rd1041, %rd1039, %rd1040;
	shf.l.wrap.b32 	%r6094, %r6088, %r6089, 23;
	shf.l.wrap.b32 	%r6095, %r6089, %r6088, 23;
	mov.b64 	%rd1042, {%r6095, %r6094};
	xor.b64  	%rd1043, %rd1041, %rd1042;
	xor.b64  	%rd1044, %rd998, %rd971;
	and.b64  	%rd1045, %rd1025, %rd1044;
	xor.b64  	%rd1046, %rd1045, %rd971;
	ld.const.u64 	%rd1047, [%rd1038];
	add.s64 	%rd1048, %rd1047, %rd2283;
	add.s64 	%rd1049, %rd1048, %rd944;
	add.s64 	%rd1050, %rd1049, %rd1046;
	add.s64 	%rd1051, %rd1050, %rd1043;
	add.s64 	%rd1052, %rd1051, %rd955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6096,%dummy}, %rd1036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6097}, %rd1036;
	}
	shf.r.wrap.b32 	%r6098, %r6097, %r6096, 28;
	shf.r.wrap.b32 	%r6099, %r6096, %r6097, 28;
	mov.b64 	%rd1053, {%r6099, %r6098};
	shf.l.wrap.b32 	%r6100, %r6096, %r6097, 30;
	shf.l.wrap.b32 	%r6101, %r6097, %r6096, 30;
	mov.b64 	%rd1054, {%r6101, %r6100};
	xor.b64  	%rd1055, %rd1053, %rd1054;
	shf.l.wrap.b32 	%r6102, %r6096, %r6097, 25;
	shf.l.wrap.b32 	%r6103, %r6097, %r6096, 25;
	mov.b64 	%rd1056, {%r6103, %r6102};
	xor.b64  	%rd1057, %rd1055, %rd1056;
	and.b64  	%rd1058, %rd1036, %rd1009;
	xor.b64  	%rd1059, %rd1036, %rd1009;
	and.b64  	%rd1060, %rd1059, %rd982;
	or.b64  	%rd1061, %rd1060, %rd1058;
	add.s64 	%rd1062, %rd1057, %rd1061;
	add.s64 	%rd1063, %rd1062, %rd1051;
	add.s32 	%r6104, %r9191, 10;
	mul.wide.s32 	%rd1064, %r6104, 8;
	add.s64 	%rd1065, %rd794, %rd1064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6105,%dummy}, %rd1052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6106}, %rd1052;
	}
	shf.r.wrap.b32 	%r6107, %r6106, %r6105, 14;
	shf.r.wrap.b32 	%r6108, %r6105, %r6106, 14;
	mov.b64 	%rd1066, {%r6108, %r6107};
	shf.r.wrap.b32 	%r6109, %r6106, %r6105, 18;
	shf.r.wrap.b32 	%r6110, %r6105, %r6106, 18;
	mov.b64 	%rd1067, {%r6110, %r6109};
	xor.b64  	%rd1068, %rd1066, %rd1067;
	shf.l.wrap.b32 	%r6111, %r6105, %r6106, 23;
	shf.l.wrap.b32 	%r6112, %r6106, %r6105, 23;
	mov.b64 	%rd1069, {%r6112, %r6111};
	xor.b64  	%rd1070, %rd1068, %rd1069;
	xor.b64  	%rd1071, %rd1025, %rd998;
	and.b64  	%rd1072, %rd1052, %rd1071;
	xor.b64  	%rd1073, %rd1072, %rd998;
	ld.const.u64 	%rd1074, [%rd1065];
	add.s64 	%rd1075, %rd1074, %rd2282;
	add.s64 	%rd1076, %rd1075, %rd971;
	add.s64 	%rd1077, %rd1076, %rd1073;
	add.s64 	%rd1078, %rd1077, %rd1070;
	add.s64 	%rd1079, %rd1078, %rd982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6113,%dummy}, %rd1063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6114}, %rd1063;
	}
	shf.r.wrap.b32 	%r6115, %r6114, %r6113, 28;
	shf.r.wrap.b32 	%r6116, %r6113, %r6114, 28;
	mov.b64 	%rd1080, {%r6116, %r6115};
	shf.l.wrap.b32 	%r6117, %r6113, %r6114, 30;
	shf.l.wrap.b32 	%r6118, %r6114, %r6113, 30;
	mov.b64 	%rd1081, {%r6118, %r6117};
	xor.b64  	%rd1082, %rd1080, %rd1081;
	shf.l.wrap.b32 	%r6119, %r6113, %r6114, 25;
	shf.l.wrap.b32 	%r6120, %r6114, %r6113, 25;
	mov.b64 	%rd1083, {%r6120, %r6119};
	xor.b64  	%rd1084, %rd1082, %rd1083;
	and.b64  	%rd1085, %rd1063, %rd1036;
	xor.b64  	%rd1086, %rd1063, %rd1036;
	and.b64  	%rd1087, %rd1086, %rd1009;
	or.b64  	%rd1088, %rd1087, %rd1085;
	add.s64 	%rd1089, %rd1084, %rd1088;
	add.s64 	%rd1090, %rd1089, %rd1078;
	add.s32 	%r6121, %r9191, 11;
	mul.wide.s32 	%rd1091, %r6121, 8;
	add.s64 	%rd1092, %rd794, %rd1091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6122,%dummy}, %rd1079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6123}, %rd1079;
	}
	shf.r.wrap.b32 	%r6124, %r6123, %r6122, 14;
	shf.r.wrap.b32 	%r6125, %r6122, %r6123, 14;
	mov.b64 	%rd1093, {%r6125, %r6124};
	shf.r.wrap.b32 	%r6126, %r6123, %r6122, 18;
	shf.r.wrap.b32 	%r6127, %r6122, %r6123, 18;
	mov.b64 	%rd1094, {%r6127, %r6126};
	xor.b64  	%rd1095, %rd1093, %rd1094;
	shf.l.wrap.b32 	%r6128, %r6122, %r6123, 23;
	shf.l.wrap.b32 	%r6129, %r6123, %r6122, 23;
	mov.b64 	%rd1096, {%r6129, %r6128};
	xor.b64  	%rd1097, %rd1095, %rd1096;
	xor.b64  	%rd1098, %rd1052, %rd1025;
	and.b64  	%rd1099, %rd1079, %rd1098;
	xor.b64  	%rd1100, %rd1099, %rd1025;
	ld.const.u64 	%rd1101, [%rd1092];
	add.s64 	%rd1102, %rd1101, %rd2281;
	add.s64 	%rd1103, %rd1102, %rd998;
	add.s64 	%rd1104, %rd1103, %rd1100;
	add.s64 	%rd1105, %rd1104, %rd1097;
	add.s64 	%rd1106, %rd1105, %rd1009;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6130,%dummy}, %rd1090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6131}, %rd1090;
	}
	shf.r.wrap.b32 	%r6132, %r6131, %r6130, 28;
	shf.r.wrap.b32 	%r6133, %r6130, %r6131, 28;
	mov.b64 	%rd1107, {%r6133, %r6132};
	shf.l.wrap.b32 	%r6134, %r6130, %r6131, 30;
	shf.l.wrap.b32 	%r6135, %r6131, %r6130, 30;
	mov.b64 	%rd1108, {%r6135, %r6134};
	xor.b64  	%rd1109, %rd1107, %rd1108;
	shf.l.wrap.b32 	%r6136, %r6130, %r6131, 25;
	shf.l.wrap.b32 	%r6137, %r6131, %r6130, 25;
	mov.b64 	%rd1110, {%r6137, %r6136};
	xor.b64  	%rd1111, %rd1109, %rd1110;
	and.b64  	%rd1112, %rd1090, %rd1063;
	xor.b64  	%rd1113, %rd1090, %rd1063;
	and.b64  	%rd1114, %rd1113, %rd1036;
	or.b64  	%rd1115, %rd1114, %rd1112;
	add.s64 	%rd1116, %rd1111, %rd1115;
	add.s64 	%rd1117, %rd1116, %rd1105;
	add.s32 	%r6138, %r9191, 12;
	mul.wide.s32 	%rd1118, %r6138, 8;
	add.s64 	%rd1119, %rd794, %rd1118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6139,%dummy}, %rd1106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6140}, %rd1106;
	}
	shf.r.wrap.b32 	%r6141, %r6140, %r6139, 14;
	shf.r.wrap.b32 	%r6142, %r6139, %r6140, 14;
	mov.b64 	%rd1120, {%r6142, %r6141};
	shf.r.wrap.b32 	%r6143, %r6140, %r6139, 18;
	shf.r.wrap.b32 	%r6144, %r6139, %r6140, 18;
	mov.b64 	%rd1121, {%r6144, %r6143};
	xor.b64  	%rd1122, %rd1120, %rd1121;
	shf.l.wrap.b32 	%r6145, %r6139, %r6140, 23;
	shf.l.wrap.b32 	%r6146, %r6140, %r6139, 23;
	mov.b64 	%rd1123, {%r6146, %r6145};
	xor.b64  	%rd1124, %rd1122, %rd1123;
	xor.b64  	%rd1125, %rd1079, %rd1052;
	and.b64  	%rd1126, %rd1106, %rd1125;
	xor.b64  	%rd1127, %rd1126, %rd1052;
	ld.const.u64 	%rd1128, [%rd1119];
	add.s64 	%rd1129, %rd1128, %rd2280;
	add.s64 	%rd1130, %rd1129, %rd1025;
	add.s64 	%rd1131, %rd1130, %rd1127;
	add.s64 	%rd1132, %rd1131, %rd1124;
	add.s64 	%rd2292, %rd1132, %rd1036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6147,%dummy}, %rd1117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6148}, %rd1117;
	}
	shf.r.wrap.b32 	%r6149, %r6148, %r6147, 28;
	shf.r.wrap.b32 	%r6150, %r6147, %r6148, 28;
	mov.b64 	%rd1133, {%r6150, %r6149};
	shf.l.wrap.b32 	%r6151, %r6147, %r6148, 30;
	shf.l.wrap.b32 	%r6152, %r6148, %r6147, 30;
	mov.b64 	%rd1134, {%r6152, %r6151};
	xor.b64  	%rd1135, %rd1133, %rd1134;
	shf.l.wrap.b32 	%r6153, %r6147, %r6148, 25;
	shf.l.wrap.b32 	%r6154, %r6148, %r6147, 25;
	mov.b64 	%rd1136, {%r6154, %r6153};
	xor.b64  	%rd1137, %rd1135, %rd1136;
	and.b64  	%rd1138, %rd1117, %rd1090;
	xor.b64  	%rd1139, %rd1117, %rd1090;
	and.b64  	%rd1140, %rd1139, %rd1063;
	or.b64  	%rd1141, %rd1140, %rd1138;
	add.s64 	%rd1142, %rd1137, %rd1141;
	add.s64 	%rd2288, %rd1142, %rd1132;
	add.s32 	%r6155, %r9191, 13;
	mul.wide.s32 	%rd1143, %r6155, 8;
	add.s64 	%rd1144, %rd794, %rd1143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6156,%dummy}, %rd2292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6157}, %rd2292;
	}
	shf.r.wrap.b32 	%r6158, %r6157, %r6156, 14;
	shf.r.wrap.b32 	%r6159, %r6156, %r6157, 14;
	mov.b64 	%rd1145, {%r6159, %r6158};
	shf.r.wrap.b32 	%r6160, %r6157, %r6156, 18;
	shf.r.wrap.b32 	%r6161, %r6156, %r6157, 18;
	mov.b64 	%rd1146, {%r6161, %r6160};
	xor.b64  	%rd1147, %rd1145, %rd1146;
	shf.l.wrap.b32 	%r6162, %r6156, %r6157, 23;
	shf.l.wrap.b32 	%r6163, %r6157, %r6156, 23;
	mov.b64 	%rd1148, {%r6163, %r6162};
	xor.b64  	%rd1149, %rd1147, %rd1148;
	xor.b64  	%rd1150, %rd1106, %rd1079;
	and.b64  	%rd1151, %rd2292, %rd1150;
	xor.b64  	%rd1152, %rd1151, %rd1079;
	ld.const.u64 	%rd1153, [%rd1144];
	add.s64 	%rd1154, %rd1153, %rd2279;
	add.s64 	%rd1155, %rd1154, %rd1052;
	add.s64 	%rd1156, %rd1155, %rd1152;
	add.s64 	%rd1157, %rd1156, %rd1149;
	add.s64 	%rd2291, %rd1157, %rd1063;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6164,%dummy}, %rd2288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6165}, %rd2288;
	}
	shf.r.wrap.b32 	%r6166, %r6165, %r6164, 28;
	shf.r.wrap.b32 	%r6167, %r6164, %r6165, 28;
	mov.b64 	%rd1158, {%r6167, %r6166};
	shf.l.wrap.b32 	%r6168, %r6164, %r6165, 30;
	shf.l.wrap.b32 	%r6169, %r6165, %r6164, 30;
	mov.b64 	%rd1159, {%r6169, %r6168};
	xor.b64  	%rd1160, %rd1158, %rd1159;
	shf.l.wrap.b32 	%r6170, %r6164, %r6165, 25;
	shf.l.wrap.b32 	%r6171, %r6165, %r6164, 25;
	mov.b64 	%rd1161, {%r6171, %r6170};
	xor.b64  	%rd1162, %rd1160, %rd1161;
	and.b64  	%rd1163, %rd2288, %rd1117;
	xor.b64  	%rd1164, %rd2288, %rd1117;
	and.b64  	%rd1165, %rd1164, %rd1090;
	or.b64  	%rd1166, %rd1165, %rd1163;
	add.s64 	%rd1167, %rd1162, %rd1166;
	add.s64 	%rd2287, %rd1167, %rd1157;
	add.s32 	%r6172, %r9191, 14;
	mul.wide.s32 	%rd1168, %r6172, 8;
	add.s64 	%rd1169, %rd794, %rd1168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6173,%dummy}, %rd2291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6174}, %rd2291;
	}
	shf.r.wrap.b32 	%r6175, %r6174, %r6173, 14;
	shf.r.wrap.b32 	%r6176, %r6173, %r6174, 14;
	mov.b64 	%rd1170, {%r6176, %r6175};
	shf.r.wrap.b32 	%r6177, %r6174, %r6173, 18;
	shf.r.wrap.b32 	%r6178, %r6173, %r6174, 18;
	mov.b64 	%rd1171, {%r6178, %r6177};
	xor.b64  	%rd1172, %rd1170, %rd1171;
	shf.l.wrap.b32 	%r6179, %r6173, %r6174, 23;
	shf.l.wrap.b32 	%r6180, %r6174, %r6173, 23;
	mov.b64 	%rd1173, {%r6180, %r6179};
	xor.b64  	%rd1174, %rd1172, %rd1173;
	xor.b64  	%rd1175, %rd2292, %rd1106;
	and.b64  	%rd1176, %rd2291, %rd1175;
	xor.b64  	%rd1177, %rd1176, %rd1106;
	ld.const.u64 	%rd1178, [%rd1169];
	add.s64 	%rd1179, %rd1178, %rd2278;
	add.s64 	%rd1180, %rd1179, %rd1079;
	add.s64 	%rd1181, %rd1180, %rd1177;
	add.s64 	%rd1182, %rd1181, %rd1174;
	add.s64 	%rd2290, %rd1182, %rd1090;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6181,%dummy}, %rd2287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6182}, %rd2287;
	}
	shf.r.wrap.b32 	%r6183, %r6182, %r6181, 28;
	shf.r.wrap.b32 	%r6184, %r6181, %r6182, 28;
	mov.b64 	%rd1183, {%r6184, %r6183};
	shf.l.wrap.b32 	%r6185, %r6181, %r6182, 30;
	shf.l.wrap.b32 	%r6186, %r6182, %r6181, 30;
	mov.b64 	%rd1184, {%r6186, %r6185};
	xor.b64  	%rd1185, %rd1183, %rd1184;
	shf.l.wrap.b32 	%r6187, %r6181, %r6182, 25;
	shf.l.wrap.b32 	%r6188, %r6182, %r6181, 25;
	mov.b64 	%rd1186, {%r6188, %r6187};
	xor.b64  	%rd1187, %rd1185, %rd1186;
	and.b64  	%rd1188, %rd2287, %rd2288;
	xor.b64  	%rd1189, %rd2287, %rd2288;
	and.b64  	%rd1190, %rd1189, %rd1117;
	or.b64  	%rd1191, %rd1190, %rd1188;
	add.s64 	%rd1192, %rd1187, %rd1191;
	add.s64 	%rd2286, %rd1192, %rd1182;
	add.s32 	%r6189, %r9191, 15;
	mul.wide.s32 	%rd1193, %r6189, 8;
	add.s64 	%rd1194, %rd794, %rd1193;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6190,%dummy}, %rd2290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6191}, %rd2290;
	}
	shf.r.wrap.b32 	%r6192, %r6191, %r6190, 14;
	shf.r.wrap.b32 	%r6193, %r6190, %r6191, 14;
	mov.b64 	%rd1195, {%r6193, %r6192};
	shf.r.wrap.b32 	%r6194, %r6191, %r6190, 18;
	shf.r.wrap.b32 	%r6195, %r6190, %r6191, 18;
	mov.b64 	%rd1196, {%r6195, %r6194};
	xor.b64  	%rd1197, %rd1195, %rd1196;
	shf.l.wrap.b32 	%r6196, %r6190, %r6191, 23;
	shf.l.wrap.b32 	%r6197, %r6191, %r6190, 23;
	mov.b64 	%rd1198, {%r6197, %r6196};
	xor.b64  	%rd1199, %rd1197, %rd1198;
	xor.b64  	%rd1200, %rd2291, %rd2292;
	and.b64  	%rd1201, %rd2290, %rd1200;
	xor.b64  	%rd1202, %rd1201, %rd2292;
	ld.const.u64 	%rd1203, [%rd1194];
	add.s64 	%rd1204, %rd1203, %rd2277;
	add.s64 	%rd1205, %rd1204, %rd1106;
	add.s64 	%rd1206, %rd1205, %rd1202;
	add.s64 	%rd1207, %rd1206, %rd1199;
	add.s64 	%rd2289, %rd1207, %rd1117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6198,%dummy}, %rd2286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6199}, %rd2286;
	}
	shf.r.wrap.b32 	%r6200, %r6199, %r6198, 28;
	shf.r.wrap.b32 	%r6201, %r6198, %r6199, 28;
	mov.b64 	%rd1208, {%r6201, %r6200};
	shf.l.wrap.b32 	%r6202, %r6198, %r6199, 30;
	shf.l.wrap.b32 	%r6203, %r6199, %r6198, 30;
	mov.b64 	%rd1209, {%r6203, %r6202};
	xor.b64  	%rd1210, %rd1208, %rd1209;
	shf.l.wrap.b32 	%r6204, %r6198, %r6199, 25;
	shf.l.wrap.b32 	%r6205, %r6199, %r6198, 25;
	mov.b64 	%rd1211, {%r6205, %r6204};
	xor.b64  	%rd1212, %rd1210, %rd1211;
	and.b64  	%rd1213, %rd2286, %rd2287;
	xor.b64  	%rd1214, %rd2286, %rd2287;
	and.b64  	%rd1215, %rd1214, %rd2288;
	or.b64  	%rd1216, %rd1215, %rd1213;
	add.s64 	%rd1217, %rd1212, %rd1216;
	add.s64 	%rd2285, %rd1217, %rd1207;
	add.s32 	%r9191, %r9191, 16;
	setp.lt.s32	%p50, %r9191, 80;
	@%p50 bra 	BB0_91;

	ld.param.u64 	%rd2276, [sha512_update_128_param_0];
	cvta.to.local.u64 	%rd2275, %rd2276;
	add.s64 	%rd1219, %rd31, %rd2285;
	st.local.u64 	[%rd2275], %rd1219;
	add.s64 	%rd1220, %rd32, %rd2286;
	st.local.u64 	[%rd2275+8], %rd1220;
	add.s64 	%rd1221, %rd33, %rd2287;
	st.local.u64 	[%rd2275+16], %rd1221;
	add.s64 	%rd1222, %rd30, %rd2288;
	st.local.u64 	[%rd2275+24], %rd1222;
	add.s64 	%rd1223, %rd26, %rd2289;
	st.local.u64 	[%rd2275+32], %rd1223;
	add.s64 	%rd1224, %rd28, %rd2290;
	st.local.u64 	[%rd2275+40], %rd1224;
	add.s64 	%rd1225, %rd27, %rd2291;
	st.local.u64 	[%rd2275+48], %rd1225;
	add.s64 	%rd1226, %rd29, %rd2292;
	st.local.u64 	[%rd2275+56], %rd1226;
	st.local.u32 	[%rd2275+64], %r9162;
	st.local.u32 	[%rd2275+68], %r9161;
	st.local.u32 	[%rd2275+72], %r9160;
	st.local.u32 	[%rd2275+76], %r9159;
	st.local.u32 	[%rd2275+80], %r9166;
	st.local.u32 	[%rd2275+84], %r9165;
	st.local.u32 	[%rd2275+88], %r9164;
	st.local.u32 	[%rd2275+92], %r9163;
	st.local.u32 	[%rd2275+96], %r9170;
	st.local.u32 	[%rd2275+100], %r9169;
	st.local.u32 	[%rd2275+104], %r9168;
	st.local.u32 	[%rd2275+108], %r9167;
	st.local.u32 	[%rd2275+112], %r9174;
	st.local.u32 	[%rd2275+116], %r9173;
	st.local.u32 	[%rd2275+120], %r9172;
	st.local.u32 	[%rd2275+124], %r9171;
	st.local.u32 	[%rd2275+128], %r9178;
	st.local.u32 	[%rd2275+132], %r9177;
	st.local.u32 	[%rd2275+136], %r9176;
	st.local.u32 	[%rd2275+140], %r9175;
	st.local.u32 	[%rd2275+144], %r9182;
	st.local.u32 	[%rd2275+148], %r9181;
	st.local.u32 	[%rd2275+152], %r9180;
	st.local.u32 	[%rd2275+156], %r9179;
	st.local.u32 	[%rd2275+160], %r9186;
	st.local.u32 	[%rd2275+164], %r9185;
	st.local.u32 	[%rd2275+168], %r9184;
	st.local.u32 	[%rd2275+172], %r9183;
	st.local.u32 	[%rd2275+176], %r9190;
	st.local.u32 	[%rd2275+180], %r9189;
	st.local.u32 	[%rd2275+184], %r9188;
	st.local.u32 	[%rd2275+188], %r9187;

BB0_178:
	ret;
}

.func sha512_hmac_update_128(
	.param .b64 sha512_hmac_update_128_param_0,
	.param .b64 sha512_hmac_update_128_param_1,
	.param .b64 sha512_hmac_update_128_param_2,
	.param .b64 sha512_hmac_update_128_param_3,
	.param .b64 sha512_hmac_update_128_param_4,
	.param .b64 sha512_hmac_update_128_param_5,
	.param .b64 sha512_hmac_update_128_param_6,
	.param .b64 sha512_hmac_update_128_param_7,
	.param .b64 sha512_hmac_update_128_param_8
)
{
	.reg .pred 	%p<98>;
	.reg .b32 	%r<8476>;
	.reg .b64 	%rd<1203>;


	ld.param.u64 	%rd90, [sha512_hmac_update_128_param_0];
	ld.param.u64 	%rd91, [sha512_hmac_update_128_param_1];
	ld.param.u64 	%rd92, [sha512_hmac_update_128_param_2];
	ld.param.u64 	%rd93, [sha512_hmac_update_128_param_3];
	ld.param.u64 	%rd94, [sha512_hmac_update_128_param_4];
	ld.param.u64 	%rd95, [sha512_hmac_update_128_param_5];
	ld.param.u64 	%rd96, [sha512_hmac_update_128_param_6];
	ld.param.u64 	%rd97, [sha512_hmac_update_128_param_7];
	ld.param.u64 	%rd98, [sha512_hmac_update_128_param_8];
	cvta.to.local.u64 	%rd1, %rd91;
	cvta.to.local.u64 	%rd2, %rd92;
	cvta.to.local.u64 	%rd3, %rd93;
	cvta.to.local.u64 	%rd4, %rd94;
	cvta.to.local.u64 	%rd5, %rd95;
	cvta.to.local.u64 	%rd6, %rd96;
	cvta.to.local.u64 	%rd7, %rd97;
	cvta.to.local.u64 	%rd8, %rd98;
	cvta.to.local.u64 	%rd9, %rd90;
	ld.local.u32 	%r1, [%rd9+192];
	and.b32  	%r2, %r1, 127;
	add.s32 	%r573, %r1, 4;
	st.local.u32 	[%rd9+192], %r573;
	setp.eq.s32	%p1, %r2, 0;
	@%p1 bra 	BB1_174;

	add.s32 	%r574, %r2, 4;
	setp.lt.u32	%p2, %r574, 128;
	shr.u32 	%r3, %r2, 2;
	and.b32  	%r575, %r1, 3;
	shl.b32 	%r576, %r575, 2;
	mov.u32 	%r577, 1985229328;
	shr.u32 	%r578, %r577, %r576;
	and.b32  	%r4, %r578, 65535;
	@%p2 bra 	BB1_93;
	bra.uni 	BB1_2;

BB1_93:
	setp.gt.s32	%p51, %r3, 15;
	@%p51 bra 	BB1_125;

	setp.gt.s32	%p75, %r3, 7;
	@%p75 bra 	BB1_110;

	setp.gt.s32	%p87, %r3, 3;
	@%p87 bra 	BB1_103;

	setp.gt.s32	%p93, %r3, 1;
	@%p93 bra 	BB1_100;

	setp.eq.s32	%p96, %r3, 0;
	@%p96 bra 	BB1_171;
	bra.uni 	BB1_98;

BB1_171:
	ld.local.u32 	%r8187, [%rd8+12];
	ld.local.u32 	%r8188, [%rd8+8];
	// inline asm
	prmt.b32 %r8186, %r8187, %r8188, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r8186;
	ld.local.u32 	%r8191, [%rd8+8];
	ld.local.u32 	%r8192, [%rd8+4];
	// inline asm
	prmt.b32 %r8190, %r8191, %r8192, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r8190;
	ld.local.u32 	%r8195, [%rd8+4];
	ld.local.u32 	%r8196, [%rd8];
	// inline asm
	prmt.b32 %r8194, %r8195, %r8196, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r8194;
	ld.local.u32 	%r8199, [%rd8];
	ld.local.u32 	%r8200, [%rd7+12];
	// inline asm
	prmt.b32 %r8198, %r8199, %r8200, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r8198;
	ld.local.u32 	%r8203, [%rd7+12];
	ld.local.u32 	%r8204, [%rd7+8];
	// inline asm
	prmt.b32 %r8202, %r8203, %r8204, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r8202;
	ld.local.u32 	%r8207, [%rd7+8];
	ld.local.u32 	%r8208, [%rd7+4];
	// inline asm
	prmt.b32 %r8206, %r8207, %r8208, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r8206;
	ld.local.u32 	%r8211, [%rd7+4];
	ld.local.u32 	%r8212, [%rd7];
	// inline asm
	prmt.b32 %r8210, %r8211, %r8212, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r8210;
	ld.local.u32 	%r8215, [%rd7];
	ld.local.u32 	%r8216, [%rd6+12];
	// inline asm
	prmt.b32 %r8214, %r8215, %r8216, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r8214;
	ld.local.u32 	%r8219, [%rd6+12];
	ld.local.u32 	%r8220, [%rd6+8];
	// inline asm
	prmt.b32 %r8218, %r8219, %r8220, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r8218;
	ld.local.u32 	%r8223, [%rd6+8];
	ld.local.u32 	%r8224, [%rd6+4];
	// inline asm
	prmt.b32 %r8222, %r8223, %r8224, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r8222;
	ld.local.u32 	%r8227, [%rd6+4];
	ld.local.u32 	%r8228, [%rd6];
	// inline asm
	prmt.b32 %r8226, %r8227, %r8228, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r8226;
	ld.local.u32 	%r8231, [%rd6];
	ld.local.u32 	%r8232, [%rd5+12];
	// inline asm
	prmt.b32 %r8230, %r8231, %r8232, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r8230;
	ld.local.u32 	%r8235, [%rd5+12];
	ld.local.u32 	%r8236, [%rd5+8];
	// inline asm
	prmt.b32 %r8234, %r8235, %r8236, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r8234;
	ld.local.u32 	%r8239, [%rd5+8];
	ld.local.u32 	%r8240, [%rd5+4];
	// inline asm
	prmt.b32 %r8238, %r8239, %r8240, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r8238;
	ld.local.u32 	%r8243, [%rd5+4];
	ld.local.u32 	%r8244, [%rd5];
	// inline asm
	prmt.b32 %r8242, %r8243, %r8244, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r8242;
	ld.local.u32 	%r8247, [%rd5];
	ld.local.u32 	%r8248, [%rd4+12];
	// inline asm
	prmt.b32 %r8246, %r8247, %r8248, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r8246;
	ld.local.u32 	%r8251, [%rd4+12];
	ld.local.u32 	%r8252, [%rd4+8];
	// inline asm
	prmt.b32 %r8250, %r8251, %r8252, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r8250;
	ld.local.u32 	%r8255, [%rd4+8];
	ld.local.u32 	%r8256, [%rd4+4];
	// inline asm
	prmt.b32 %r8254, %r8255, %r8256, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r8254;
	ld.local.u32 	%r8259, [%rd4+4];
	ld.local.u32 	%r8260, [%rd4];
	// inline asm
	prmt.b32 %r8258, %r8259, %r8260, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r8258;
	ld.local.u32 	%r8263, [%rd4];
	ld.local.u32 	%r8264, [%rd3+12];
	// inline asm
	prmt.b32 %r8262, %r8263, %r8264, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r8262;
	ld.local.u32 	%r8267, [%rd3+12];
	ld.local.u32 	%r8268, [%rd3+8];
	// inline asm
	prmt.b32 %r8266, %r8267, %r8268, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r8266;
	ld.local.u32 	%r8271, [%rd3+8];
	ld.local.u32 	%r8272, [%rd3+4];
	// inline asm
	prmt.b32 %r8270, %r8271, %r8272, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r8270;
	ld.local.u32 	%r8275, [%rd3+4];
	ld.local.u32 	%r8276, [%rd3];
	// inline asm
	prmt.b32 %r8274, %r8275, %r8276, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r8274;
	ld.local.u32 	%r8279, [%rd3];
	ld.local.u32 	%r8280, [%rd2+12];
	// inline asm
	prmt.b32 %r8278, %r8279, %r8280, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r8278;
	ld.local.u32 	%r8283, [%rd2+12];
	ld.local.u32 	%r8284, [%rd2+8];
	// inline asm
	prmt.b32 %r8282, %r8283, %r8284, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r8282;
	ld.local.u32 	%r8287, [%rd2+8];
	ld.local.u32 	%r8288, [%rd2+4];
	// inline asm
	prmt.b32 %r8286, %r8287, %r8288, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r8286;
	ld.local.u32 	%r8291, [%rd2+4];
	ld.local.u32 	%r8292, [%rd2];
	// inline asm
	prmt.b32 %r8290, %r8291, %r8292, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r8290;
	ld.local.u32 	%r8295, [%rd2];
	ld.local.u32 	%r8296, [%rd1+12];
	// inline asm
	prmt.b32 %r8294, %r8295, %r8296, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r8294;
	ld.local.u32 	%r8299, [%rd1+12];
	ld.local.u32 	%r8300, [%rd1+8];
	// inline asm
	prmt.b32 %r8298, %r8299, %r8300, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r8298;
	ld.local.u32 	%r8303, [%rd1+8];
	ld.local.u32 	%r8304, [%rd1+4];
	// inline asm
	prmt.b32 %r8302, %r8303, %r8304, %r4;
	// inline asm
	st.local.u32 	[%rd1+8], %r8302;
	ld.local.u32 	%r8307, [%rd1+4];
	ld.local.u32 	%r8308, [%rd1];
	// inline asm
	prmt.b32 %r8306, %r8307, %r8308, %r4;
	// inline asm
	st.local.u32 	[%rd1+4], %r8306;
	ld.local.u32 	%r8311, [%rd1];
	mov.u32 	%r8312, 0;
	// inline asm
	prmt.b32 %r8475, %r8311, %r8312, %r4;
	// inline asm
	st.local.u32 	[%rd1], %r8475;
	bra.uni 	BB1_173;

BB1_174:
	ld.local.u32 	%r8409, [%rd1];
	st.local.u32 	[%rd9+64], %r8409;
	ld.local.u32 	%r8410, [%rd1+4];
	st.local.u32 	[%rd9+68], %r8410;
	ld.local.u32 	%r8411, [%rd1+8];
	st.local.u32 	[%rd9+72], %r8411;
	ld.local.u32 	%r8412, [%rd1+12];
	st.local.u32 	[%rd9+76], %r8412;
	ld.local.u32 	%r8413, [%rd2];
	st.local.u32 	[%rd9+80], %r8413;
	ld.local.u32 	%r8414, [%rd2+4];
	st.local.u32 	[%rd9+84], %r8414;
	ld.local.u32 	%r8415, [%rd2+8];
	st.local.u32 	[%rd9+88], %r8415;
	ld.local.u32 	%r8416, [%rd2+12];
	st.local.u32 	[%rd9+92], %r8416;
	ld.local.u32 	%r8417, [%rd3];
	st.local.u32 	[%rd9+96], %r8417;
	ld.local.u32 	%r8418, [%rd3+4];
	st.local.u32 	[%rd9+100], %r8418;
	ld.local.u32 	%r8419, [%rd3+8];
	st.local.u32 	[%rd9+104], %r8419;
	ld.local.u32 	%r8420, [%rd3+12];
	st.local.u32 	[%rd9+108], %r8420;
	ld.local.u32 	%r8421, [%rd4];
	st.local.u32 	[%rd9+112], %r8421;
	ld.local.u32 	%r8422, [%rd4+4];
	st.local.u32 	[%rd9+116], %r8422;
	ld.local.u32 	%r8423, [%rd4+8];
	st.local.u32 	[%rd9+120], %r8423;
	ld.local.u32 	%r8424, [%rd4+12];
	st.local.u32 	[%rd9+124], %r8424;
	ld.local.u32 	%r8425, [%rd5];
	st.local.u32 	[%rd9+128], %r8425;
	ld.local.u32 	%r8426, [%rd5+4];
	st.local.u32 	[%rd9+132], %r8426;
	ld.local.u32 	%r8427, [%rd5+8];
	st.local.u32 	[%rd9+136], %r8427;
	ld.local.u32 	%r8428, [%rd5+12];
	st.local.u32 	[%rd9+140], %r8428;
	ld.local.u32 	%r8429, [%rd6];
	st.local.u32 	[%rd9+144], %r8429;
	ld.local.u32 	%r8430, [%rd6+4];
	st.local.u32 	[%rd9+148], %r8430;
	ld.local.u32 	%r8431, [%rd6+8];
	st.local.u32 	[%rd9+152], %r8431;
	ld.local.u32 	%r8432, [%rd6+12];
	st.local.u32 	[%rd9+156], %r8432;
	ld.local.u32 	%r8433, [%rd7];
	st.local.u32 	[%rd9+160], %r8433;
	ld.local.u32 	%r8434, [%rd7+4];
	st.local.u32 	[%rd9+164], %r8434;
	ld.local.u32 	%r8435, [%rd7+8];
	st.local.u32 	[%rd9+168], %r8435;
	ld.local.u32 	%r8436, [%rd7+12];
	st.local.u32 	[%rd9+172], %r8436;
	ld.local.u32 	%r8437, [%rd8];
	st.local.u32 	[%rd9+176], %r8437;
	ld.local.u32 	%r8438, [%rd8+4];
	st.local.u32 	[%rd9+180], %r8438;
	ld.local.u32 	%r8439, [%rd8+8];
	st.local.u32 	[%rd9+184], %r8439;
	ld.local.u32 	%r8440, [%rd8+12];
	st.local.u32 	[%rd9+188], %r8440;
	bra.uni 	BB1_175;

BB1_2:
	setp.gt.s32	%p3, %r3, 15;
	@%p3 bra 	BB1_35;

	setp.gt.s32	%p27, %r3, 7;
	@%p27 bra 	BB1_20;

	setp.gt.s32	%p39, %r3, 3;
	@%p39 bra 	BB1_13;

	setp.gt.s32	%p45, %r3, 1;
	@%p45 bra 	BB1_9;

	setp.eq.s32	%p48, %r3, 0;
	@%p48 bra 	BB1_87;
	bra.uni 	BB1_7;

BB1_87:
	ld.local.u32 	%r5169, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8445, %r8442, %r5169, %r4;
	// inline asm
	ld.local.u32 	%r5172, [%rd8+12];
	ld.local.u32 	%r5173, [%rd8+8];
	// inline asm
	prmt.b32 %r5171, %r5172, %r5173, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r5171;
	ld.local.u32 	%r5176, [%rd8+8];
	ld.local.u32 	%r5177, [%rd8+4];
	// inline asm
	prmt.b32 %r5175, %r5176, %r5177, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r5175;
	ld.local.u32 	%r5180, [%rd8+4];
	ld.local.u32 	%r5181, [%rd8];
	// inline asm
	prmt.b32 %r5179, %r5180, %r5181, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r5179;
	ld.local.u32 	%r5184, [%rd8];
	ld.local.u32 	%r5185, [%rd7+12];
	// inline asm
	prmt.b32 %r5183, %r5184, %r5185, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r5183;
	ld.local.u32 	%r5188, [%rd7+12];
	ld.local.u32 	%r5189, [%rd7+8];
	// inline asm
	prmt.b32 %r5187, %r5188, %r5189, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r5187;
	ld.local.u32 	%r5192, [%rd7+8];
	ld.local.u32 	%r5193, [%rd7+4];
	// inline asm
	prmt.b32 %r5191, %r5192, %r5193, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r5191;
	ld.local.u32 	%r5196, [%rd7+4];
	ld.local.u32 	%r5197, [%rd7];
	// inline asm
	prmt.b32 %r5195, %r5196, %r5197, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r5195;
	ld.local.u32 	%r5200, [%rd7];
	ld.local.u32 	%r5201, [%rd6+12];
	// inline asm
	prmt.b32 %r5199, %r5200, %r5201, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r5199;
	ld.local.u32 	%r5204, [%rd6+12];
	ld.local.u32 	%r5205, [%rd6+8];
	// inline asm
	prmt.b32 %r5203, %r5204, %r5205, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r5203;
	ld.local.u32 	%r5208, [%rd6+8];
	ld.local.u32 	%r5209, [%rd6+4];
	// inline asm
	prmt.b32 %r5207, %r5208, %r5209, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r5207;
	ld.local.u32 	%r5212, [%rd6+4];
	ld.local.u32 	%r5213, [%rd6];
	// inline asm
	prmt.b32 %r5211, %r5212, %r5213, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r5211;
	ld.local.u32 	%r5216, [%rd6];
	ld.local.u32 	%r5217, [%rd5+12];
	// inline asm
	prmt.b32 %r5215, %r5216, %r5217, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r5215;
	ld.local.u32 	%r5220, [%rd5+12];
	ld.local.u32 	%r5221, [%rd5+8];
	// inline asm
	prmt.b32 %r5219, %r5220, %r5221, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r5219;
	ld.local.u32 	%r5224, [%rd5+8];
	ld.local.u32 	%r5225, [%rd5+4];
	// inline asm
	prmt.b32 %r5223, %r5224, %r5225, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r5223;
	ld.local.u32 	%r5228, [%rd5+4];
	ld.local.u32 	%r5229, [%rd5];
	// inline asm
	prmt.b32 %r5227, %r5228, %r5229, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r5227;
	ld.local.u32 	%r5232, [%rd5];
	ld.local.u32 	%r5233, [%rd4+12];
	// inline asm
	prmt.b32 %r5231, %r5232, %r5233, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r5231;
	ld.local.u32 	%r5236, [%rd4+12];
	ld.local.u32 	%r5237, [%rd4+8];
	// inline asm
	prmt.b32 %r5235, %r5236, %r5237, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r5235;
	ld.local.u32 	%r5240, [%rd4+8];
	ld.local.u32 	%r5241, [%rd4+4];
	// inline asm
	prmt.b32 %r5239, %r5240, %r5241, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r5239;
	ld.local.u32 	%r5244, [%rd4+4];
	ld.local.u32 	%r5245, [%rd4];
	// inline asm
	prmt.b32 %r5243, %r5244, %r5245, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r5243;
	ld.local.u32 	%r5248, [%rd4];
	ld.local.u32 	%r5249, [%rd3+12];
	// inline asm
	prmt.b32 %r5247, %r5248, %r5249, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r5247;
	ld.local.u32 	%r5252, [%rd3+12];
	ld.local.u32 	%r5253, [%rd3+8];
	// inline asm
	prmt.b32 %r5251, %r5252, %r5253, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r5251;
	ld.local.u32 	%r5256, [%rd3+8];
	ld.local.u32 	%r5257, [%rd3+4];
	// inline asm
	prmt.b32 %r5255, %r5256, %r5257, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r5255;
	ld.local.u32 	%r5260, [%rd3+4];
	ld.local.u32 	%r5261, [%rd3];
	// inline asm
	prmt.b32 %r5259, %r5260, %r5261, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r5259;
	ld.local.u32 	%r5264, [%rd3];
	ld.local.u32 	%r5265, [%rd2+12];
	// inline asm
	prmt.b32 %r5263, %r5264, %r5265, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r5263;
	ld.local.u32 	%r5268, [%rd2+12];
	ld.local.u32 	%r5269, [%rd2+8];
	// inline asm
	prmt.b32 %r5267, %r5268, %r5269, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r5267;
	ld.local.u32 	%r5272, [%rd2+8];
	ld.local.u32 	%r5273, [%rd2+4];
	// inline asm
	prmt.b32 %r5271, %r5272, %r5273, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r5271;
	ld.local.u32 	%r5276, [%rd2+4];
	ld.local.u32 	%r5277, [%rd2];
	// inline asm
	prmt.b32 %r5275, %r5276, %r5277, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r5275;
	ld.local.u32 	%r5280, [%rd2];
	ld.local.u32 	%r5281, [%rd1+12];
	// inline asm
	prmt.b32 %r5279, %r5280, %r5281, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r5279;
	ld.local.u32 	%r5284, [%rd1+12];
	ld.local.u32 	%r5285, [%rd1+8];
	// inline asm
	prmt.b32 %r5283, %r5284, %r5285, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r5283;
	ld.local.u32 	%r5288, [%rd1+8];
	ld.local.u32 	%r5289, [%rd1+4];
	// inline asm
	prmt.b32 %r5287, %r5288, %r5289, %r4;
	// inline asm
	st.local.u32 	[%rd1+8], %r5287;
	ld.local.u32 	%r5292, [%rd1+4];
	ld.local.u32 	%r5293, [%rd1];
	// inline asm
	prmt.b32 %r5291, %r5292, %r5293, %r4;
	// inline asm
	st.local.u32 	[%rd1+4], %r5291;
	ld.local.u32 	%r5296, [%rd1];
	// inline asm
	prmt.b32 %r8441, %r5296, %r8442, %r4;
	// inline asm
	st.local.u32 	[%rd1], %r8441;
	mov.u32 	%r8443, %r8442;
	mov.u32 	%r8444, %r8442;
	bra.uni 	BB1_89;

BB1_125:
	setp.gt.s32	%p52, %r3, 23;
	@%p52 bra 	BB1_141;

	setp.gt.s32	%p64, %r3, 19;
	@%p64 bra 	BB1_134;

	setp.gt.s32	%p70, %r3, 17;
	@%p70 bra 	BB1_131;

	setp.eq.s32	%p73, %r3, 16;
	@%p73 bra 	BB1_163;
	bra.uni 	BB1_129;

BB1_163:
	ld.local.u32 	%r6667, [%rd4+12];
	ld.local.u32 	%r6668, [%rd4+8];
	// inline asm
	prmt.b32 %r6666, %r6667, %r6668, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6666;
	ld.local.u32 	%r6671, [%rd4+8];
	ld.local.u32 	%r6672, [%rd4+4];
	// inline asm
	prmt.b32 %r6670, %r6671, %r6672, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6670;
	ld.local.u32 	%r6675, [%rd4+4];
	ld.local.u32 	%r6676, [%rd4];
	// inline asm
	prmt.b32 %r6674, %r6675, %r6676, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6674;
	ld.local.u32 	%r6679, [%rd4];
	ld.local.u32 	%r6680, [%rd3+12];
	// inline asm
	prmt.b32 %r6678, %r6679, %r6680, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6678;
	ld.local.u32 	%r6683, [%rd3+12];
	ld.local.u32 	%r6684, [%rd3+8];
	// inline asm
	prmt.b32 %r6682, %r6683, %r6684, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6682;
	ld.local.u32 	%r6687, [%rd3+8];
	ld.local.u32 	%r6688, [%rd3+4];
	// inline asm
	prmt.b32 %r6686, %r6687, %r6688, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6686;
	ld.local.u32 	%r6691, [%rd3+4];
	ld.local.u32 	%r6692, [%rd3];
	// inline asm
	prmt.b32 %r6690, %r6691, %r6692, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6690;
	ld.local.u32 	%r6695, [%rd3];
	ld.local.u32 	%r6696, [%rd2+12];
	// inline asm
	prmt.b32 %r6694, %r6695, %r6696, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6694;
	ld.local.u32 	%r6699, [%rd2+12];
	ld.local.u32 	%r6700, [%rd2+8];
	// inline asm
	prmt.b32 %r6698, %r6699, %r6700, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6698;
	ld.local.u32 	%r6703, [%rd2+8];
	ld.local.u32 	%r6704, [%rd2+4];
	// inline asm
	prmt.b32 %r6702, %r6703, %r6704, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6702;
	ld.local.u32 	%r6707, [%rd2+4];
	ld.local.u32 	%r6708, [%rd2];
	// inline asm
	prmt.b32 %r6706, %r6707, %r6708, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6706;
	ld.local.u32 	%r6711, [%rd2];
	ld.local.u32 	%r6712, [%rd1+12];
	// inline asm
	prmt.b32 %r6710, %r6711, %r6712, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6710;
	ld.local.u32 	%r6715, [%rd1+12];
	ld.local.u32 	%r6716, [%rd1+8];
	// inline asm
	prmt.b32 %r6714, %r6715, %r6716, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r6714;
	ld.local.u32 	%r6719, [%rd1+8];
	ld.local.u32 	%r6720, [%rd1+4];
	// inline asm
	prmt.b32 %r6718, %r6719, %r6720, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r6718;
	ld.local.u32 	%r6723, [%rd1+4];
	ld.local.u32 	%r6724, [%rd1];
	// inline asm
	prmt.b32 %r6722, %r6723, %r6724, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r6722;
	ld.local.u32 	%r6727, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r6726, %r6727, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r6726;
	st.local.u32 	[%rd4+12], %r8475;
	st.local.u32 	[%rd4+8], %r8475;
	st.local.u32 	[%rd4+4], %r8475;
	st.local.u32 	[%rd4], %r8475;
	st.local.u32 	[%rd3+12], %r8475;
	st.local.u32 	[%rd3+8], %r8475;
	st.local.u32 	[%rd3+4], %r8475;
	st.local.u32 	[%rd3], %r8475;
	st.local.u32 	[%rd2+12], %r8475;
	st.local.u32 	[%rd2+8], %r8475;
	st.local.u32 	[%rd2+4], %r8475;
	st.local.u32 	[%rd2], %r8475;
	st.local.u32 	[%rd1+12], %r8475;
	st.local.u32 	[%rd1+8], %r8475;
	mov.u64 	%rd1162, 0;
	st.local.u32 	[%rd1+4], %rd1162;
	st.local.u32 	[%rd1], %rd1162;
	bra.uni 	BB1_173;

BB1_35:
	setp.gt.s32	%p4, %r3, 23;
	@%p4 bra 	BB1_51;

	setp.gt.s32	%p16, %r3, 19;
	@%p16 bra 	BB1_44;

	setp.gt.s32	%p22, %r3, 17;
	@%p22 bra 	BB1_41;

	setp.eq.s32	%p25, %r3, 16;
	@%p25 bra 	BB1_73;
	bra.uni 	BB1_39;

BB1_73:
	ld.local.u32 	%r2681, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8461, %r8441, %r2681, %r4;
	// inline asm
	ld.local.u32 	%r2684, [%rd8+12];
	ld.local.u32 	%r2685, [%rd8+8];
	// inline asm
	prmt.b32 %r8454, %r2684, %r2685, %r4;
	// inline asm
	ld.local.u32 	%r2688, [%rd8+8];
	ld.local.u32 	%r2689, [%rd8+4];
	// inline asm
	prmt.b32 %r8455, %r2688, %r2689, %r4;
	// inline asm
	ld.local.u32 	%r2692, [%rd8+4];
	ld.local.u32 	%r2693, [%rd8];
	// inline asm
	prmt.b32 %r8456, %r2692, %r2693, %r4;
	// inline asm
	ld.local.u32 	%r2696, [%rd8];
	ld.local.u32 	%r2697, [%rd7+12];
	// inline asm
	prmt.b32 %r8457, %r2696, %r2697, %r4;
	// inline asm
	ld.local.u32 	%r2700, [%rd7+12];
	ld.local.u32 	%r2701, [%rd7+8];
	// inline asm
	prmt.b32 %r8450, %r2700, %r2701, %r4;
	// inline asm
	ld.local.u32 	%r2704, [%rd7+8];
	ld.local.u32 	%r2705, [%rd7+4];
	// inline asm
	prmt.b32 %r8451, %r2704, %r2705, %r4;
	// inline asm
	ld.local.u32 	%r2708, [%rd7+4];
	ld.local.u32 	%r2709, [%rd7];
	// inline asm
	prmt.b32 %r8452, %r2708, %r2709, %r4;
	// inline asm
	ld.local.u32 	%r2712, [%rd7];
	ld.local.u32 	%r2713, [%rd6+12];
	// inline asm
	prmt.b32 %r8453, %r2712, %r2713, %r4;
	// inline asm
	ld.local.u32 	%r2716, [%rd6+12];
	ld.local.u32 	%r2717, [%rd6+8];
	// inline asm
	prmt.b32 %r8446, %r2716, %r2717, %r4;
	// inline asm
	ld.local.u32 	%r2720, [%rd6+8];
	ld.local.u32 	%r2721, [%rd6+4];
	// inline asm
	prmt.b32 %r8447, %r2720, %r2721, %r4;
	// inline asm
	ld.local.u32 	%r2724, [%rd6+4];
	ld.local.u32 	%r2725, [%rd6];
	// inline asm
	prmt.b32 %r8448, %r2724, %r2725, %r4;
	// inline asm
	ld.local.u32 	%r2728, [%rd6];
	ld.local.u32 	%r2729, [%rd5+12];
	// inline asm
	prmt.b32 %r8449, %r2728, %r2729, %r4;
	// inline asm
	ld.local.u32 	%r2732, [%rd5+12];
	ld.local.u32 	%r2733, [%rd5+8];
	// inline asm
	prmt.b32 %r8442, %r2732, %r2733, %r4;
	// inline asm
	ld.local.u32 	%r2736, [%rd5+8];
	ld.local.u32 	%r2737, [%rd5+4];
	// inline asm
	prmt.b32 %r8443, %r2736, %r2737, %r4;
	// inline asm
	ld.local.u32 	%r2740, [%rd5+4];
	ld.local.u32 	%r2741, [%rd5];
	// inline asm
	prmt.b32 %r8444, %r2740, %r2741, %r4;
	// inline asm
	ld.local.u32 	%r2744, [%rd5];
	ld.local.u32 	%r2745, [%rd4+12];
	// inline asm
	prmt.b32 %r8445, %r2744, %r2745, %r4;
	// inline asm
	ld.local.u32 	%r2748, [%rd4+12];
	ld.local.u32 	%r2749, [%rd4+8];
	// inline asm
	prmt.b32 %r2747, %r2748, %r2749, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2747;
	ld.local.u32 	%r2752, [%rd4+8];
	ld.local.u32 	%r2753, [%rd4+4];
	// inline asm
	prmt.b32 %r2751, %r2752, %r2753, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2751;
	ld.local.u32 	%r2756, [%rd4+4];
	ld.local.u32 	%r2757, [%rd4];
	// inline asm
	prmt.b32 %r2755, %r2756, %r2757, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2755;
	ld.local.u32 	%r2760, [%rd4];
	ld.local.u32 	%r2761, [%rd3+12];
	// inline asm
	prmt.b32 %r2759, %r2760, %r2761, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2759;
	ld.local.u32 	%r2764, [%rd3+12];
	ld.local.u32 	%r2765, [%rd3+8];
	// inline asm
	prmt.b32 %r2763, %r2764, %r2765, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2763;
	ld.local.u32 	%r2768, [%rd3+8];
	ld.local.u32 	%r2769, [%rd3+4];
	// inline asm
	prmt.b32 %r2767, %r2768, %r2769, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2767;
	ld.local.u32 	%r2772, [%rd3+4];
	ld.local.u32 	%r2773, [%rd3];
	// inline asm
	prmt.b32 %r2771, %r2772, %r2773, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2771;
	ld.local.u32 	%r2776, [%rd3];
	ld.local.u32 	%r2777, [%rd2+12];
	// inline asm
	prmt.b32 %r2775, %r2776, %r2777, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2775;
	ld.local.u32 	%r2780, [%rd2+12];
	ld.local.u32 	%r2781, [%rd2+8];
	// inline asm
	prmt.b32 %r2779, %r2780, %r2781, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2779;
	ld.local.u32 	%r2784, [%rd2+8];
	ld.local.u32 	%r2785, [%rd2+4];
	// inline asm
	prmt.b32 %r2783, %r2784, %r2785, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2783;
	ld.local.u32 	%r2788, [%rd2+4];
	ld.local.u32 	%r2789, [%rd2];
	// inline asm
	prmt.b32 %r2787, %r2788, %r2789, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2787;
	ld.local.u32 	%r2792, [%rd2];
	ld.local.u32 	%r2793, [%rd1+12];
	// inline asm
	prmt.b32 %r2791, %r2792, %r2793, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r2791;
	ld.local.u32 	%r2796, [%rd1+12];
	ld.local.u32 	%r2797, [%rd1+8];
	// inline asm
	prmt.b32 %r2795, %r2796, %r2797, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r2795;
	ld.local.u32 	%r2800, [%rd1+8];
	ld.local.u32 	%r2801, [%rd1+4];
	// inline asm
	prmt.b32 %r2799, %r2800, %r2801, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r2799;
	ld.local.u32 	%r2804, [%rd1+4];
	ld.local.u32 	%r2805, [%rd1];
	// inline asm
	prmt.b32 %r2803, %r2804, %r2805, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r2803;
	ld.local.u32 	%r2808, [%rd1];
	// inline asm
	prmt.b32 %r2807, %r2808, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r2807;
	st.local.u32 	[%rd4+12], %r8441;
	st.local.u32 	[%rd4+8], %r8441;
	st.local.u32 	[%rd4+4], %r8441;
	st.local.u32 	[%rd4], %r8441;
	st.local.u32 	[%rd3+12], %r8441;
	st.local.u32 	[%rd3+8], %r8441;
	st.local.u32 	[%rd3+4], %r8441;
	st.local.u32 	[%rd3], %r8441;
	st.local.u32 	[%rd2+12], %r8441;
	st.local.u32 	[%rd2+8], %r8441;
	st.local.u32 	[%rd2+4], %r8441;
	st.local.u32 	[%rd2], %r8441;
	st.local.u32 	[%rd1+12], %r8441;
	st.local.u32 	[%rd1+8], %r8441;
	mov.u64 	%rd114, 0;
	st.local.u32 	[%rd1+4], %rd114;
	st.local.u32 	[%rd1], %rd114;
	mov.u32 	%r8458, %r8441;
	mov.u32 	%r8459, %r8441;
	mov.u32 	%r8460, %r8441;
	bra.uni 	BB1_83;

BB1_110:
	setp.gt.s32	%p76, %r3, 11;
	@%p76 bra 	BB1_118;

	setp.gt.s32	%p82, %r3, 9;
	@%p82 bra 	BB1_115;

	setp.eq.s32	%p85, %r3, 8;
	@%p85 bra 	BB1_167;
	bra.uni 	BB1_113;

BB1_167:
	ld.local.u32 	%r7299, [%rd6+12];
	ld.local.u32 	%r7300, [%rd6+8];
	// inline asm
	prmt.b32 %r7298, %r7299, %r7300, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7298;
	ld.local.u32 	%r7303, [%rd6+8];
	ld.local.u32 	%r7304, [%rd6+4];
	// inline asm
	prmt.b32 %r7302, %r7303, %r7304, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7302;
	ld.local.u32 	%r7307, [%rd6+4];
	ld.local.u32 	%r7308, [%rd6];
	// inline asm
	prmt.b32 %r7306, %r7307, %r7308, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7306;
	ld.local.u32 	%r7311, [%rd6];
	ld.local.u32 	%r7312, [%rd5+12];
	// inline asm
	prmt.b32 %r7310, %r7311, %r7312, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7310;
	ld.local.u32 	%r7315, [%rd5+12];
	ld.local.u32 	%r7316, [%rd5+8];
	// inline asm
	prmt.b32 %r7314, %r7315, %r7316, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7314;
	ld.local.u32 	%r7319, [%rd5+8];
	ld.local.u32 	%r7320, [%rd5+4];
	// inline asm
	prmt.b32 %r7318, %r7319, %r7320, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7318;
	ld.local.u32 	%r7323, [%rd5+4];
	ld.local.u32 	%r7324, [%rd5];
	// inline asm
	prmt.b32 %r7322, %r7323, %r7324, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7322;
	ld.local.u32 	%r7327, [%rd5];
	ld.local.u32 	%r7328, [%rd4+12];
	// inline asm
	prmt.b32 %r7326, %r7327, %r7328, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7326;
	ld.local.u32 	%r7331, [%rd4+12];
	ld.local.u32 	%r7332, [%rd4+8];
	// inline asm
	prmt.b32 %r7330, %r7331, %r7332, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7330;
	ld.local.u32 	%r7335, [%rd4+8];
	ld.local.u32 	%r7336, [%rd4+4];
	// inline asm
	prmt.b32 %r7334, %r7335, %r7336, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7334;
	ld.local.u32 	%r7339, [%rd4+4];
	ld.local.u32 	%r7340, [%rd4];
	// inline asm
	prmt.b32 %r7338, %r7339, %r7340, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7338;
	ld.local.u32 	%r7343, [%rd4];
	ld.local.u32 	%r7344, [%rd3+12];
	// inline asm
	prmt.b32 %r7342, %r7343, %r7344, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7342;
	ld.local.u32 	%r7347, [%rd3+12];
	ld.local.u32 	%r7348, [%rd3+8];
	// inline asm
	prmt.b32 %r7346, %r7347, %r7348, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7346;
	ld.local.u32 	%r7351, [%rd3+8];
	ld.local.u32 	%r7352, [%rd3+4];
	// inline asm
	prmt.b32 %r7350, %r7351, %r7352, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7350;
	ld.local.u32 	%r7355, [%rd3+4];
	ld.local.u32 	%r7356, [%rd3];
	// inline asm
	prmt.b32 %r7354, %r7355, %r7356, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7354;
	ld.local.u32 	%r7359, [%rd3];
	ld.local.u32 	%r7360, [%rd2+12];
	// inline asm
	prmt.b32 %r7358, %r7359, %r7360, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7358;
	ld.local.u32 	%r7363, [%rd2+12];
	ld.local.u32 	%r7364, [%rd2+8];
	// inline asm
	prmt.b32 %r7362, %r7363, %r7364, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7362;
	ld.local.u32 	%r7367, [%rd2+8];
	ld.local.u32 	%r7368, [%rd2+4];
	// inline asm
	prmt.b32 %r7366, %r7367, %r7368, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7366;
	ld.local.u32 	%r7371, [%rd2+4];
	ld.local.u32 	%r7372, [%rd2];
	// inline asm
	prmt.b32 %r7370, %r7371, %r7372, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7370;
	ld.local.u32 	%r7375, [%rd2];
	ld.local.u32 	%r7376, [%rd1+12];
	// inline asm
	prmt.b32 %r7374, %r7375, %r7376, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7374;
	ld.local.u32 	%r7379, [%rd1+12];
	ld.local.u32 	%r7380, [%rd1+8];
	// inline asm
	prmt.b32 %r7378, %r7379, %r7380, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7378;
	ld.local.u32 	%r7383, [%rd1+8];
	ld.local.u32 	%r7384, [%rd1+4];
	// inline asm
	prmt.b32 %r7382, %r7383, %r7384, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7382;
	ld.local.u32 	%r7387, [%rd1+4];
	ld.local.u32 	%r7388, [%rd1];
	// inline asm
	prmt.b32 %r7386, %r7387, %r7388, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r7386;
	ld.local.u32 	%r7391, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r7390, %r7391, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r7390;
	st.local.u32 	[%rd2+12], %r8475;
	st.local.u32 	[%rd2+8], %r8475;
	st.local.u32 	[%rd2+4], %r8475;
	st.local.u32 	[%rd2], %r8475;
	st.local.u32 	[%rd1+12], %r8475;
	st.local.u32 	[%rd1+8], %r8475;
	mov.u64 	%rd1170, 0;
	st.local.u32 	[%rd1+4], %rd1170;
	st.local.u32 	[%rd1], %rd1170;
	bra.uni 	BB1_173;

BB1_20:
	setp.gt.s32	%p28, %r3, 11;
	@%p28 bra 	BB1_28;

	setp.gt.s32	%p34, %r3, 9;
	@%p34 bra 	BB1_25;

	setp.eq.s32	%p37, %r3, 8;
	@%p37 bra 	BB1_77;
	bra.uni 	BB1_23;

BB1_77:
	ld.local.u32 	%r3893, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8453, %r8441, %r3893, %r4;
	// inline asm
	ld.local.u32 	%r3896, [%rd8+12];
	ld.local.u32 	%r3897, [%rd8+8];
	// inline asm
	prmt.b32 %r8446, %r3896, %r3897, %r4;
	// inline asm
	ld.local.u32 	%r3900, [%rd8+8];
	ld.local.u32 	%r3901, [%rd8+4];
	// inline asm
	prmt.b32 %r8447, %r3900, %r3901, %r4;
	// inline asm
	ld.local.u32 	%r3904, [%rd8+4];
	ld.local.u32 	%r3905, [%rd8];
	// inline asm
	prmt.b32 %r8448, %r3904, %r3905, %r4;
	// inline asm
	ld.local.u32 	%r3908, [%rd8];
	ld.local.u32 	%r3909, [%rd7+12];
	// inline asm
	prmt.b32 %r8449, %r3908, %r3909, %r4;
	// inline asm
	ld.local.u32 	%r3912, [%rd7+12];
	ld.local.u32 	%r3913, [%rd7+8];
	// inline asm
	prmt.b32 %r8442, %r3912, %r3913, %r4;
	// inline asm
	ld.local.u32 	%r3916, [%rd7+8];
	ld.local.u32 	%r3917, [%rd7+4];
	// inline asm
	prmt.b32 %r8443, %r3916, %r3917, %r4;
	// inline asm
	ld.local.u32 	%r3920, [%rd7+4];
	ld.local.u32 	%r3921, [%rd7];
	// inline asm
	prmt.b32 %r8444, %r3920, %r3921, %r4;
	// inline asm
	ld.local.u32 	%r3924, [%rd7];
	ld.local.u32 	%r3925, [%rd6+12];
	// inline asm
	prmt.b32 %r8445, %r3924, %r3925, %r4;
	// inline asm
	ld.local.u32 	%r3928, [%rd6+12];
	ld.local.u32 	%r3929, [%rd6+8];
	// inline asm
	prmt.b32 %r3927, %r3928, %r3929, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3927;
	ld.local.u32 	%r3932, [%rd6+8];
	ld.local.u32 	%r3933, [%rd6+4];
	// inline asm
	prmt.b32 %r3931, %r3932, %r3933, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3931;
	ld.local.u32 	%r3936, [%rd6+4];
	ld.local.u32 	%r3937, [%rd6];
	// inline asm
	prmt.b32 %r3935, %r3936, %r3937, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3935;
	ld.local.u32 	%r3940, [%rd6];
	ld.local.u32 	%r3941, [%rd5+12];
	// inline asm
	prmt.b32 %r3939, %r3940, %r3941, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3939;
	ld.local.u32 	%r3944, [%rd5+12];
	ld.local.u32 	%r3945, [%rd5+8];
	// inline asm
	prmt.b32 %r3943, %r3944, %r3945, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3943;
	ld.local.u32 	%r3948, [%rd5+8];
	ld.local.u32 	%r3949, [%rd5+4];
	// inline asm
	prmt.b32 %r3947, %r3948, %r3949, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3947;
	ld.local.u32 	%r3952, [%rd5+4];
	ld.local.u32 	%r3953, [%rd5];
	// inline asm
	prmt.b32 %r3951, %r3952, %r3953, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3951;
	ld.local.u32 	%r3956, [%rd5];
	ld.local.u32 	%r3957, [%rd4+12];
	// inline asm
	prmt.b32 %r3955, %r3956, %r3957, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3955;
	ld.local.u32 	%r3960, [%rd4+12];
	ld.local.u32 	%r3961, [%rd4+8];
	// inline asm
	prmt.b32 %r3959, %r3960, %r3961, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3959;
	ld.local.u32 	%r3964, [%rd4+8];
	ld.local.u32 	%r3965, [%rd4+4];
	// inline asm
	prmt.b32 %r3963, %r3964, %r3965, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3963;
	ld.local.u32 	%r3968, [%rd4+4];
	ld.local.u32 	%r3969, [%rd4];
	// inline asm
	prmt.b32 %r3967, %r3968, %r3969, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3967;
	ld.local.u32 	%r3972, [%rd4];
	ld.local.u32 	%r3973, [%rd3+12];
	// inline asm
	prmt.b32 %r3971, %r3972, %r3973, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3971;
	ld.local.u32 	%r3976, [%rd3+12];
	ld.local.u32 	%r3977, [%rd3+8];
	// inline asm
	prmt.b32 %r3975, %r3976, %r3977, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3975;
	ld.local.u32 	%r3980, [%rd3+8];
	ld.local.u32 	%r3981, [%rd3+4];
	// inline asm
	prmt.b32 %r3979, %r3980, %r3981, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3979;
	ld.local.u32 	%r3984, [%rd3+4];
	ld.local.u32 	%r3985, [%rd3];
	// inline asm
	prmt.b32 %r3983, %r3984, %r3985, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3983;
	ld.local.u32 	%r3988, [%rd3];
	ld.local.u32 	%r3989, [%rd2+12];
	// inline asm
	prmt.b32 %r3987, %r3988, %r3989, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3987;
	ld.local.u32 	%r3992, [%rd2+12];
	ld.local.u32 	%r3993, [%rd2+8];
	// inline asm
	prmt.b32 %r3991, %r3992, %r3993, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3991;
	ld.local.u32 	%r3996, [%rd2+8];
	ld.local.u32 	%r3997, [%rd2+4];
	// inline asm
	prmt.b32 %r3995, %r3996, %r3997, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3995;
	ld.local.u32 	%r4000, [%rd2+4];
	ld.local.u32 	%r4001, [%rd2];
	// inline asm
	prmt.b32 %r3999, %r4000, %r4001, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r3999;
	ld.local.u32 	%r4004, [%rd2];
	ld.local.u32 	%r4005, [%rd1+12];
	// inline asm
	prmt.b32 %r4003, %r4004, %r4005, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4003;
	ld.local.u32 	%r4008, [%rd1+12];
	ld.local.u32 	%r4009, [%rd1+8];
	// inline asm
	prmt.b32 %r4007, %r4008, %r4009, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4007;
	ld.local.u32 	%r4012, [%rd1+8];
	ld.local.u32 	%r4013, [%rd1+4];
	// inline asm
	prmt.b32 %r4011, %r4012, %r4013, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4011;
	ld.local.u32 	%r4016, [%rd1+4];
	ld.local.u32 	%r4017, [%rd1];
	// inline asm
	prmt.b32 %r4015, %r4016, %r4017, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4015;
	ld.local.u32 	%r4020, [%rd1];
	// inline asm
	prmt.b32 %r4019, %r4020, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4019;
	st.local.u32 	[%rd2+12], %r8441;
	st.local.u32 	[%rd2+8], %r8441;
	st.local.u32 	[%rd2+4], %r8441;
	st.local.u32 	[%rd2], %r8441;
	st.local.u32 	[%rd1+12], %r8441;
	st.local.u32 	[%rd1+8], %r8441;
	mov.u64 	%rd122, 0;
	st.local.u32 	[%rd1+4], %rd122;
	st.local.u32 	[%rd1], %rd122;
	mov.u32 	%r8450, %r8441;
	mov.u32 	%r8451, %r8441;
	mov.u32 	%r8452, %r8441;
	bra.uni 	BB1_81;

BB1_141:
	setp.gt.s32	%p53, %r3, 27;
	@%p53 bra 	BB1_149;

	setp.gt.s32	%p59, %r3, 25;
	@%p59 bra 	BB1_146;

	setp.eq.s32	%p62, %r3, 24;
	@%p62 bra 	BB1_159;
	bra.uni 	BB1_144;

BB1_159:
	ld.local.u32 	%r6291, [%rd2+12];
	ld.local.u32 	%r6292, [%rd2+8];
	// inline asm
	prmt.b32 %r6290, %r6291, %r6292, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6290;
	ld.local.u32 	%r6295, [%rd2+8];
	ld.local.u32 	%r6296, [%rd2+4];
	// inline asm
	prmt.b32 %r6294, %r6295, %r6296, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6294;
	ld.local.u32 	%r6299, [%rd2+4];
	ld.local.u32 	%r6300, [%rd2];
	// inline asm
	prmt.b32 %r6298, %r6299, %r6300, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6298;
	ld.local.u32 	%r6303, [%rd2];
	ld.local.u32 	%r6304, [%rd1+12];
	// inline asm
	prmt.b32 %r6302, %r6303, %r6304, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6302;
	ld.local.u32 	%r6307, [%rd1+12];
	ld.local.u32 	%r6308, [%rd1+8];
	// inline asm
	prmt.b32 %r6306, %r6307, %r6308, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6306;
	ld.local.u32 	%r6311, [%rd1+8];
	ld.local.u32 	%r6312, [%rd1+4];
	// inline asm
	prmt.b32 %r6310, %r6311, %r6312, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6310;
	ld.local.u32 	%r6315, [%rd1+4];
	ld.local.u32 	%r6316, [%rd1];
	// inline asm
	prmt.b32 %r6314, %r6315, %r6316, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6314;
	ld.local.u32 	%r6319, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r6318, %r6319, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6318;
	st.local.u32 	[%rd6+12], %r8475;
	st.local.u32 	[%rd6+8], %r8475;
	st.local.u32 	[%rd6+4], %r8475;
	st.local.u32 	[%rd6], %r8475;
	st.local.u32 	[%rd5+12], %r8475;
	st.local.u32 	[%rd5+8], %r8475;
	st.local.u32 	[%rd5+4], %r8475;
	st.local.u32 	[%rd5], %r8475;
	st.local.u32 	[%rd4+12], %r8475;
	st.local.u32 	[%rd4+8], %r8475;
	st.local.u32 	[%rd4+4], %r8475;
	st.local.u32 	[%rd4], %r8475;
	st.local.u32 	[%rd3+12], %r8475;
	st.local.u32 	[%rd3+8], %r8475;
	st.local.u32 	[%rd3+4], %r8475;
	st.local.u32 	[%rd3], %r8475;
	st.local.u32 	[%rd2+12], %r8475;
	st.local.u32 	[%rd2+8], %r8475;
	st.local.u32 	[%rd2+4], %r8475;
	st.local.u32 	[%rd2], %r8475;
	st.local.u32 	[%rd1+12], %r8475;
	st.local.u32 	[%rd1+8], %r8475;
	mov.u64 	%rd1154, 0;
	st.local.u32 	[%rd1+4], %rd1154;
	st.local.u32 	[%rd1], %rd1154;
	bra.uni 	BB1_173;

BB1_51:
	setp.gt.s32	%p5, %r3, 27;
	@%p5 bra 	BB1_59;

	setp.gt.s32	%p11, %r3, 25;
	@%p11 bra 	BB1_56;

	setp.eq.s32	%p14, %r3, 24;
	@%p14 bra 	BB1_69;
	bra.uni 	BB1_54;

BB1_69:
	ld.local.u32 	%r1533, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8469, %r8441, %r1533, %r4;
	// inline asm
	ld.local.u32 	%r1536, [%rd8+12];
	ld.local.u32 	%r1537, [%rd8+8];
	// inline asm
	prmt.b32 %r8462, %r1536, %r1537, %r4;
	// inline asm
	ld.local.u32 	%r1540, [%rd8+8];
	ld.local.u32 	%r1541, [%rd8+4];
	// inline asm
	prmt.b32 %r8463, %r1540, %r1541, %r4;
	// inline asm
	ld.local.u32 	%r1544, [%rd8+4];
	ld.local.u32 	%r1545, [%rd8];
	// inline asm
	prmt.b32 %r8464, %r1544, %r1545, %r4;
	// inline asm
	ld.local.u32 	%r1548, [%rd8];
	ld.local.u32 	%r1549, [%rd7+12];
	// inline asm
	prmt.b32 %r8465, %r1548, %r1549, %r4;
	// inline asm
	ld.local.u32 	%r1552, [%rd7+12];
	ld.local.u32 	%r1553, [%rd7+8];
	// inline asm
	prmt.b32 %r8458, %r1552, %r1553, %r4;
	// inline asm
	ld.local.u32 	%r1556, [%rd7+8];
	ld.local.u32 	%r1557, [%rd7+4];
	// inline asm
	prmt.b32 %r8459, %r1556, %r1557, %r4;
	// inline asm
	ld.local.u32 	%r1560, [%rd7+4];
	ld.local.u32 	%r1561, [%rd7];
	// inline asm
	prmt.b32 %r8460, %r1560, %r1561, %r4;
	// inline asm
	ld.local.u32 	%r1564, [%rd7];
	ld.local.u32 	%r1565, [%rd6+12];
	// inline asm
	prmt.b32 %r8461, %r1564, %r1565, %r4;
	// inline asm
	ld.local.u32 	%r1568, [%rd6+12];
	ld.local.u32 	%r1569, [%rd6+8];
	// inline asm
	prmt.b32 %r8454, %r1568, %r1569, %r4;
	// inline asm
	ld.local.u32 	%r1572, [%rd6+8];
	ld.local.u32 	%r1573, [%rd6+4];
	// inline asm
	prmt.b32 %r8455, %r1572, %r1573, %r4;
	// inline asm
	ld.local.u32 	%r1576, [%rd6+4];
	ld.local.u32 	%r1577, [%rd6];
	// inline asm
	prmt.b32 %r8456, %r1576, %r1577, %r4;
	// inline asm
	ld.local.u32 	%r1580, [%rd6];
	ld.local.u32 	%r1581, [%rd5+12];
	// inline asm
	prmt.b32 %r8457, %r1580, %r1581, %r4;
	// inline asm
	ld.local.u32 	%r1584, [%rd5+12];
	ld.local.u32 	%r1585, [%rd5+8];
	// inline asm
	prmt.b32 %r8450, %r1584, %r1585, %r4;
	// inline asm
	ld.local.u32 	%r1588, [%rd5+8];
	ld.local.u32 	%r1589, [%rd5+4];
	// inline asm
	prmt.b32 %r8451, %r1588, %r1589, %r4;
	// inline asm
	ld.local.u32 	%r1592, [%rd5+4];
	ld.local.u32 	%r1593, [%rd5];
	// inline asm
	prmt.b32 %r8452, %r1592, %r1593, %r4;
	// inline asm
	ld.local.u32 	%r1596, [%rd5];
	ld.local.u32 	%r1597, [%rd4+12];
	// inline asm
	prmt.b32 %r8453, %r1596, %r1597, %r4;
	// inline asm
	ld.local.u32 	%r1600, [%rd4+12];
	ld.local.u32 	%r1601, [%rd4+8];
	// inline asm
	prmt.b32 %r8446, %r1600, %r1601, %r4;
	// inline asm
	ld.local.u32 	%r1604, [%rd4+8];
	ld.local.u32 	%r1605, [%rd4+4];
	// inline asm
	prmt.b32 %r8447, %r1604, %r1605, %r4;
	// inline asm
	ld.local.u32 	%r1608, [%rd4+4];
	ld.local.u32 	%r1609, [%rd4];
	// inline asm
	prmt.b32 %r8448, %r1608, %r1609, %r4;
	// inline asm
	ld.local.u32 	%r1612, [%rd4];
	ld.local.u32 	%r1613, [%rd3+12];
	// inline asm
	prmt.b32 %r8449, %r1612, %r1613, %r4;
	// inline asm
	ld.local.u32 	%r1616, [%rd3+12];
	ld.local.u32 	%r1617, [%rd3+8];
	// inline asm
	prmt.b32 %r8442, %r1616, %r1617, %r4;
	// inline asm
	ld.local.u32 	%r1620, [%rd3+8];
	ld.local.u32 	%r1621, [%rd3+4];
	// inline asm
	prmt.b32 %r8443, %r1620, %r1621, %r4;
	// inline asm
	ld.local.u32 	%r1624, [%rd3+4];
	ld.local.u32 	%r1625, [%rd3];
	// inline asm
	prmt.b32 %r8444, %r1624, %r1625, %r4;
	// inline asm
	ld.local.u32 	%r1628, [%rd3];
	ld.local.u32 	%r1629, [%rd2+12];
	// inline asm
	prmt.b32 %r8445, %r1628, %r1629, %r4;
	// inline asm
	ld.local.u32 	%r1632, [%rd2+12];
	ld.local.u32 	%r1633, [%rd2+8];
	// inline asm
	prmt.b32 %r1631, %r1632, %r1633, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1631;
	ld.local.u32 	%r1636, [%rd2+8];
	ld.local.u32 	%r1637, [%rd2+4];
	// inline asm
	prmt.b32 %r1635, %r1636, %r1637, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1635;
	ld.local.u32 	%r1640, [%rd2+4];
	ld.local.u32 	%r1641, [%rd2];
	// inline asm
	prmt.b32 %r1639, %r1640, %r1641, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1639;
	ld.local.u32 	%r1644, [%rd2];
	ld.local.u32 	%r1645, [%rd1+12];
	// inline asm
	prmt.b32 %r1643, %r1644, %r1645, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1643;
	ld.local.u32 	%r1648, [%rd1+12];
	ld.local.u32 	%r1649, [%rd1+8];
	// inline asm
	prmt.b32 %r1647, %r1648, %r1649, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r1647;
	ld.local.u32 	%r1652, [%rd1+8];
	ld.local.u32 	%r1653, [%rd1+4];
	// inline asm
	prmt.b32 %r1651, %r1652, %r1653, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r1651;
	ld.local.u32 	%r1656, [%rd1+4];
	ld.local.u32 	%r1657, [%rd1];
	// inline asm
	prmt.b32 %r1655, %r1656, %r1657, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r1655;
	ld.local.u32 	%r1660, [%rd1];
	// inline asm
	prmt.b32 %r1659, %r1660, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r1659;
	st.local.u32 	[%rd6+12], %r8441;
	st.local.u32 	[%rd6+8], %r8441;
	st.local.u32 	[%rd6+4], %r8441;
	st.local.u32 	[%rd6], %r8441;
	st.local.u32 	[%rd5+12], %r8441;
	st.local.u32 	[%rd5+8], %r8441;
	st.local.u32 	[%rd5+4], %r8441;
	st.local.u32 	[%rd5], %r8441;
	st.local.u32 	[%rd4+12], %r8441;
	st.local.u32 	[%rd4+8], %r8441;
	st.local.u32 	[%rd4+4], %r8441;
	st.local.u32 	[%rd4], %r8441;
	st.local.u32 	[%rd3+12], %r8441;
	st.local.u32 	[%rd3+8], %r8441;
	st.local.u32 	[%rd3+4], %r8441;
	st.local.u32 	[%rd3], %r8441;
	st.local.u32 	[%rd2+12], %r8441;
	st.local.u32 	[%rd2+8], %r8441;
	st.local.u32 	[%rd2+4], %r8441;
	st.local.u32 	[%rd2], %r8441;
	st.local.u32 	[%rd1+12], %r8441;
	st.local.u32 	[%rd1+8], %r8441;
	mov.u64 	%rd106, 0;
	st.local.u32 	[%rd1+4], %rd106;
	st.local.u32 	[%rd1], %rd106;
	mov.u32 	%r8466, %r8441;
	mov.u32 	%r8467, %r8441;
	mov.u32 	%r8468, %r8441;
	bra.uni 	BB1_85;

BB1_103:
	setp.gt.s32	%p88, %r3, 5;
	@%p88 bra 	BB1_107;

	setp.eq.s32	%p91, %r3, 4;
	@%p91 bra 	BB1_169;
	bra.uni 	BB1_105;

BB1_169:
	ld.local.u32 	%r7711, [%rd7+12];
	ld.local.u32 	%r7712, [%rd7+8];
	// inline asm
	prmt.b32 %r7710, %r7711, %r7712, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7710;
	ld.local.u32 	%r7715, [%rd7+8];
	ld.local.u32 	%r7716, [%rd7+4];
	// inline asm
	prmt.b32 %r7714, %r7715, %r7716, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7714;
	ld.local.u32 	%r7719, [%rd7+4];
	ld.local.u32 	%r7720, [%rd7];
	// inline asm
	prmt.b32 %r7718, %r7719, %r7720, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7718;
	ld.local.u32 	%r7723, [%rd7];
	ld.local.u32 	%r7724, [%rd6+12];
	// inline asm
	prmt.b32 %r7722, %r7723, %r7724, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7722;
	ld.local.u32 	%r7727, [%rd6+12];
	ld.local.u32 	%r7728, [%rd6+8];
	// inline asm
	prmt.b32 %r7726, %r7727, %r7728, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7726;
	ld.local.u32 	%r7731, [%rd6+8];
	ld.local.u32 	%r7732, [%rd6+4];
	// inline asm
	prmt.b32 %r7730, %r7731, %r7732, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7730;
	ld.local.u32 	%r7735, [%rd6+4];
	ld.local.u32 	%r7736, [%rd6];
	// inline asm
	prmt.b32 %r7734, %r7735, %r7736, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7734;
	ld.local.u32 	%r7739, [%rd6];
	ld.local.u32 	%r7740, [%rd5+12];
	// inline asm
	prmt.b32 %r7738, %r7739, %r7740, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7738;
	ld.local.u32 	%r7743, [%rd5+12];
	ld.local.u32 	%r7744, [%rd5+8];
	// inline asm
	prmt.b32 %r7742, %r7743, %r7744, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7742;
	ld.local.u32 	%r7747, [%rd5+8];
	ld.local.u32 	%r7748, [%rd5+4];
	// inline asm
	prmt.b32 %r7746, %r7747, %r7748, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7746;
	ld.local.u32 	%r7751, [%rd5+4];
	ld.local.u32 	%r7752, [%rd5];
	// inline asm
	prmt.b32 %r7750, %r7751, %r7752, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7750;
	ld.local.u32 	%r7755, [%rd5];
	ld.local.u32 	%r7756, [%rd4+12];
	// inline asm
	prmt.b32 %r7754, %r7755, %r7756, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7754;
	ld.local.u32 	%r7759, [%rd4+12];
	ld.local.u32 	%r7760, [%rd4+8];
	// inline asm
	prmt.b32 %r7758, %r7759, %r7760, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7758;
	ld.local.u32 	%r7763, [%rd4+8];
	ld.local.u32 	%r7764, [%rd4+4];
	// inline asm
	prmt.b32 %r7762, %r7763, %r7764, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7762;
	ld.local.u32 	%r7767, [%rd4+4];
	ld.local.u32 	%r7768, [%rd4];
	// inline asm
	prmt.b32 %r7766, %r7767, %r7768, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7766;
	ld.local.u32 	%r7771, [%rd4];
	ld.local.u32 	%r7772, [%rd3+12];
	// inline asm
	prmt.b32 %r7770, %r7771, %r7772, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7770;
	ld.local.u32 	%r7775, [%rd3+12];
	ld.local.u32 	%r7776, [%rd3+8];
	// inline asm
	prmt.b32 %r7774, %r7775, %r7776, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7774;
	ld.local.u32 	%r7779, [%rd3+8];
	ld.local.u32 	%r7780, [%rd3+4];
	// inline asm
	prmt.b32 %r7778, %r7779, %r7780, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7778;
	ld.local.u32 	%r7783, [%rd3+4];
	ld.local.u32 	%r7784, [%rd3];
	// inline asm
	prmt.b32 %r7782, %r7783, %r7784, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7782;
	ld.local.u32 	%r7787, [%rd3];
	ld.local.u32 	%r7788, [%rd2+12];
	// inline asm
	prmt.b32 %r7786, %r7787, %r7788, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7786;
	ld.local.u32 	%r7791, [%rd2+12];
	ld.local.u32 	%r7792, [%rd2+8];
	// inline asm
	prmt.b32 %r7790, %r7791, %r7792, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7790;
	ld.local.u32 	%r7795, [%rd2+8];
	ld.local.u32 	%r7796, [%rd2+4];
	// inline asm
	prmt.b32 %r7794, %r7795, %r7796, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7794;
	ld.local.u32 	%r7799, [%rd2+4];
	ld.local.u32 	%r7800, [%rd2];
	// inline asm
	prmt.b32 %r7798, %r7799, %r7800, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r7798;
	ld.local.u32 	%r7803, [%rd2];
	ld.local.u32 	%r7804, [%rd1+12];
	// inline asm
	prmt.b32 %r7802, %r7803, %r7804, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r7802;
	ld.local.u32 	%r7807, [%rd1+12];
	ld.local.u32 	%r7808, [%rd1+8];
	// inline asm
	prmt.b32 %r7806, %r7807, %r7808, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r7806;
	ld.local.u32 	%r7811, [%rd1+8];
	ld.local.u32 	%r7812, [%rd1+4];
	// inline asm
	prmt.b32 %r7810, %r7811, %r7812, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r7810;
	ld.local.u32 	%r7815, [%rd1+4];
	ld.local.u32 	%r7816, [%rd1];
	// inline asm
	prmt.b32 %r7814, %r7815, %r7816, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r7814;
	ld.local.u32 	%r7819, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r7818, %r7819, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r7818;
	st.local.u32 	[%rd1+12], %r8475;
	st.local.u32 	[%rd1+8], %r8475;
	mov.u64 	%rd1174, 0;
	st.local.u32 	[%rd1+4], %rd1174;
	st.local.u32 	[%rd1], %rd1174;
	bra.uni 	BB1_173;

BB1_13:
	setp.gt.s32	%p40, %r3, 5;
	@%p40 bra 	BB1_17;

	setp.eq.s32	%p43, %r3, 4;
	@%p43 bra 	BB1_79;
	bra.uni 	BB1_15;

BB1_79:
	ld.local.u32 	%r4523, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8449, %r8441, %r4523, %r4;
	// inline asm
	ld.local.u32 	%r4526, [%rd8+12];
	ld.local.u32 	%r4527, [%rd8+8];
	// inline asm
	prmt.b32 %r8442, %r4526, %r4527, %r4;
	// inline asm
	ld.local.u32 	%r4530, [%rd8+8];
	ld.local.u32 	%r4531, [%rd8+4];
	// inline asm
	prmt.b32 %r8443, %r4530, %r4531, %r4;
	// inline asm
	ld.local.u32 	%r4534, [%rd8+4];
	ld.local.u32 	%r4535, [%rd8];
	// inline asm
	prmt.b32 %r8444, %r4534, %r4535, %r4;
	// inline asm
	ld.local.u32 	%r4538, [%rd8];
	ld.local.u32 	%r4539, [%rd7+12];
	// inline asm
	prmt.b32 %r8445, %r4538, %r4539, %r4;
	// inline asm
	ld.local.u32 	%r4542, [%rd7+12];
	ld.local.u32 	%r4543, [%rd7+8];
	// inline asm
	prmt.b32 %r4541, %r4542, %r4543, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r4541;
	ld.local.u32 	%r4546, [%rd7+8];
	ld.local.u32 	%r4547, [%rd7+4];
	// inline asm
	prmt.b32 %r4545, %r4546, %r4547, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r4545;
	ld.local.u32 	%r4550, [%rd7+4];
	ld.local.u32 	%r4551, [%rd7];
	// inline asm
	prmt.b32 %r4549, %r4550, %r4551, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r4549;
	ld.local.u32 	%r4554, [%rd7];
	ld.local.u32 	%r4555, [%rd6+12];
	// inline asm
	prmt.b32 %r4553, %r4554, %r4555, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r4553;
	ld.local.u32 	%r4558, [%rd6+12];
	ld.local.u32 	%r4559, [%rd6+8];
	// inline asm
	prmt.b32 %r4557, %r4558, %r4559, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r4557;
	ld.local.u32 	%r4562, [%rd6+8];
	ld.local.u32 	%r4563, [%rd6+4];
	// inline asm
	prmt.b32 %r4561, %r4562, %r4563, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r4561;
	ld.local.u32 	%r4566, [%rd6+4];
	ld.local.u32 	%r4567, [%rd6];
	// inline asm
	prmt.b32 %r4565, %r4566, %r4567, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r4565;
	ld.local.u32 	%r4570, [%rd6];
	ld.local.u32 	%r4571, [%rd5+12];
	// inline asm
	prmt.b32 %r4569, %r4570, %r4571, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r4569;
	ld.local.u32 	%r4574, [%rd5+12];
	ld.local.u32 	%r4575, [%rd5+8];
	// inline asm
	prmt.b32 %r4573, %r4574, %r4575, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r4573;
	ld.local.u32 	%r4578, [%rd5+8];
	ld.local.u32 	%r4579, [%rd5+4];
	// inline asm
	prmt.b32 %r4577, %r4578, %r4579, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r4577;
	ld.local.u32 	%r4582, [%rd5+4];
	ld.local.u32 	%r4583, [%rd5];
	// inline asm
	prmt.b32 %r4581, %r4582, %r4583, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4581;
	ld.local.u32 	%r4586, [%rd5];
	ld.local.u32 	%r4587, [%rd4+12];
	// inline asm
	prmt.b32 %r4585, %r4586, %r4587, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4585;
	ld.local.u32 	%r4590, [%rd4+12];
	ld.local.u32 	%r4591, [%rd4+8];
	// inline asm
	prmt.b32 %r4589, %r4590, %r4591, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4589;
	ld.local.u32 	%r4594, [%rd4+8];
	ld.local.u32 	%r4595, [%rd4+4];
	// inline asm
	prmt.b32 %r4593, %r4594, %r4595, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4593;
	ld.local.u32 	%r4598, [%rd4+4];
	ld.local.u32 	%r4599, [%rd4];
	// inline asm
	prmt.b32 %r4597, %r4598, %r4599, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4597;
	ld.local.u32 	%r4602, [%rd4];
	ld.local.u32 	%r4603, [%rd3+12];
	// inline asm
	prmt.b32 %r4601, %r4602, %r4603, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4601;
	ld.local.u32 	%r4606, [%rd3+12];
	ld.local.u32 	%r4607, [%rd3+8];
	// inline asm
	prmt.b32 %r4605, %r4606, %r4607, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4605;
	ld.local.u32 	%r4610, [%rd3+8];
	ld.local.u32 	%r4611, [%rd3+4];
	// inline asm
	prmt.b32 %r4609, %r4610, %r4611, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4609;
	ld.local.u32 	%r4614, [%rd3+4];
	ld.local.u32 	%r4615, [%rd3];
	// inline asm
	prmt.b32 %r4613, %r4614, %r4615, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4613;
	ld.local.u32 	%r4618, [%rd3];
	ld.local.u32 	%r4619, [%rd2+12];
	// inline asm
	prmt.b32 %r4617, %r4618, %r4619, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4617;
	ld.local.u32 	%r4622, [%rd2+12];
	ld.local.u32 	%r4623, [%rd2+8];
	// inline asm
	prmt.b32 %r4621, %r4622, %r4623, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4621;
	ld.local.u32 	%r4626, [%rd2+8];
	ld.local.u32 	%r4627, [%rd2+4];
	// inline asm
	prmt.b32 %r4625, %r4626, %r4627, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4625;
	ld.local.u32 	%r4630, [%rd2+4];
	ld.local.u32 	%r4631, [%rd2];
	// inline asm
	prmt.b32 %r4629, %r4630, %r4631, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4629;
	ld.local.u32 	%r4634, [%rd2];
	ld.local.u32 	%r4635, [%rd1+12];
	// inline asm
	prmt.b32 %r4633, %r4634, %r4635, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4633;
	ld.local.u32 	%r4638, [%rd1+12];
	ld.local.u32 	%r4639, [%rd1+8];
	// inline asm
	prmt.b32 %r4637, %r4638, %r4639, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r4637;
	ld.local.u32 	%r4642, [%rd1+8];
	ld.local.u32 	%r4643, [%rd1+4];
	// inline asm
	prmt.b32 %r4641, %r4642, %r4643, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r4641;
	ld.local.u32 	%r4646, [%rd1+4];
	ld.local.u32 	%r4647, [%rd1];
	// inline asm
	prmt.b32 %r4645, %r4646, %r4647, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r4645;
	ld.local.u32 	%r4650, [%rd1];
	// inline asm
	prmt.b32 %r4649, %r4650, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r4649;
	st.local.u32 	[%rd1+12], %r8441;
	st.local.u32 	[%rd1+8], %r8441;
	mov.u64 	%rd126, 0;
	st.local.u32 	[%rd1+4], %rd126;
	st.local.u32 	[%rd1], %rd126;
	mov.u32 	%r8446, %r8441;
	mov.u32 	%r8447, %r8441;
	mov.u32 	%r8448, %r8441;
	bra.uni 	BB1_80;

BB1_134:
	setp.gt.s32	%p65, %r3, 21;
	@%p65 bra 	BB1_138;

	setp.eq.s32	%p68, %r3, 20;
	@%p68 bra 	BB1_161;
	bra.uni 	BB1_136;

BB1_161:
	ld.local.u32 	%r6447, [%rd3+12];
	ld.local.u32 	%r6448, [%rd3+8];
	// inline asm
	prmt.b32 %r6446, %r6447, %r6448, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6446;
	ld.local.u32 	%r6451, [%rd3+8];
	ld.local.u32 	%r6452, [%rd3+4];
	// inline asm
	prmt.b32 %r6450, %r6451, %r6452, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6450;
	ld.local.u32 	%r6455, [%rd3+4];
	ld.local.u32 	%r6456, [%rd3];
	// inline asm
	prmt.b32 %r6454, %r6455, %r6456, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6454;
	ld.local.u32 	%r6459, [%rd3];
	ld.local.u32 	%r6460, [%rd2+12];
	// inline asm
	prmt.b32 %r6458, %r6459, %r6460, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6458;
	ld.local.u32 	%r6463, [%rd2+12];
	ld.local.u32 	%r6464, [%rd2+8];
	// inline asm
	prmt.b32 %r6462, %r6463, %r6464, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6462;
	ld.local.u32 	%r6467, [%rd2+8];
	ld.local.u32 	%r6468, [%rd2+4];
	// inline asm
	prmt.b32 %r6466, %r6467, %r6468, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6466;
	ld.local.u32 	%r6471, [%rd2+4];
	ld.local.u32 	%r6472, [%rd2];
	// inline asm
	prmt.b32 %r6470, %r6471, %r6472, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6470;
	ld.local.u32 	%r6475, [%rd2];
	ld.local.u32 	%r6476, [%rd1+12];
	// inline asm
	prmt.b32 %r6474, %r6475, %r6476, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6474;
	ld.local.u32 	%r6479, [%rd1+12];
	ld.local.u32 	%r6480, [%rd1+8];
	// inline asm
	prmt.b32 %r6478, %r6479, %r6480, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6478;
	ld.local.u32 	%r6483, [%rd1+8];
	ld.local.u32 	%r6484, [%rd1+4];
	// inline asm
	prmt.b32 %r6482, %r6483, %r6484, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6482;
	ld.local.u32 	%r6487, [%rd1+4];
	ld.local.u32 	%r6488, [%rd1];
	// inline asm
	prmt.b32 %r6486, %r6487, %r6488, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6486;
	ld.local.u32 	%r6491, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r6490, %r6491, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6490;
	st.local.u32 	[%rd5+12], %r8475;
	st.local.u32 	[%rd5+8], %r8475;
	st.local.u32 	[%rd5+4], %r8475;
	st.local.u32 	[%rd5], %r8475;
	st.local.u32 	[%rd4+12], %r8475;
	st.local.u32 	[%rd4+8], %r8475;
	st.local.u32 	[%rd4+4], %r8475;
	st.local.u32 	[%rd4], %r8475;
	st.local.u32 	[%rd3+12], %r8475;
	st.local.u32 	[%rd3+8], %r8475;
	st.local.u32 	[%rd3+4], %r8475;
	st.local.u32 	[%rd3], %r8475;
	st.local.u32 	[%rd2+12], %r8475;
	st.local.u32 	[%rd2+8], %r8475;
	st.local.u32 	[%rd2+4], %r8475;
	st.local.u32 	[%rd2], %r8475;
	st.local.u32 	[%rd1+12], %r8475;
	st.local.u32 	[%rd1+8], %r8475;
	mov.u64 	%rd1158, 0;
	st.local.u32 	[%rd1+4], %rd1158;
	st.local.u32 	[%rd1], %rd1158;
	bra.uni 	BB1_173;

BB1_44:
	setp.gt.s32	%p17, %r3, 21;
	@%p17 bra 	BB1_48;

	setp.eq.s32	%p20, %r3, 20;
	@%p20 bra 	BB1_71;
	bra.uni 	BB1_46;

BB1_71:
	ld.local.u32 	%r2099, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8465, %r8441, %r2099, %r4;
	// inline asm
	ld.local.u32 	%r2102, [%rd8+12];
	ld.local.u32 	%r2103, [%rd8+8];
	// inline asm
	prmt.b32 %r8458, %r2102, %r2103, %r4;
	// inline asm
	ld.local.u32 	%r2106, [%rd8+8];
	ld.local.u32 	%r2107, [%rd8+4];
	// inline asm
	prmt.b32 %r8459, %r2106, %r2107, %r4;
	// inline asm
	ld.local.u32 	%r2110, [%rd8+4];
	ld.local.u32 	%r2111, [%rd8];
	// inline asm
	prmt.b32 %r8460, %r2110, %r2111, %r4;
	// inline asm
	ld.local.u32 	%r2114, [%rd8];
	ld.local.u32 	%r2115, [%rd7+12];
	// inline asm
	prmt.b32 %r8461, %r2114, %r2115, %r4;
	// inline asm
	ld.local.u32 	%r2118, [%rd7+12];
	ld.local.u32 	%r2119, [%rd7+8];
	// inline asm
	prmt.b32 %r8454, %r2118, %r2119, %r4;
	// inline asm
	ld.local.u32 	%r2122, [%rd7+8];
	ld.local.u32 	%r2123, [%rd7+4];
	// inline asm
	prmt.b32 %r8455, %r2122, %r2123, %r4;
	// inline asm
	ld.local.u32 	%r2126, [%rd7+4];
	ld.local.u32 	%r2127, [%rd7];
	// inline asm
	prmt.b32 %r8456, %r2126, %r2127, %r4;
	// inline asm
	ld.local.u32 	%r2130, [%rd7];
	ld.local.u32 	%r2131, [%rd6+12];
	// inline asm
	prmt.b32 %r8457, %r2130, %r2131, %r4;
	// inline asm
	ld.local.u32 	%r2134, [%rd6+12];
	ld.local.u32 	%r2135, [%rd6+8];
	// inline asm
	prmt.b32 %r8450, %r2134, %r2135, %r4;
	// inline asm
	ld.local.u32 	%r2138, [%rd6+8];
	ld.local.u32 	%r2139, [%rd6+4];
	// inline asm
	prmt.b32 %r8451, %r2138, %r2139, %r4;
	// inline asm
	ld.local.u32 	%r2142, [%rd6+4];
	ld.local.u32 	%r2143, [%rd6];
	// inline asm
	prmt.b32 %r8452, %r2142, %r2143, %r4;
	// inline asm
	ld.local.u32 	%r2146, [%rd6];
	ld.local.u32 	%r2147, [%rd5+12];
	// inline asm
	prmt.b32 %r8453, %r2146, %r2147, %r4;
	// inline asm
	ld.local.u32 	%r2150, [%rd5+12];
	ld.local.u32 	%r2151, [%rd5+8];
	// inline asm
	prmt.b32 %r8446, %r2150, %r2151, %r4;
	// inline asm
	ld.local.u32 	%r2154, [%rd5+8];
	ld.local.u32 	%r2155, [%rd5+4];
	// inline asm
	prmt.b32 %r8447, %r2154, %r2155, %r4;
	// inline asm
	ld.local.u32 	%r2158, [%rd5+4];
	ld.local.u32 	%r2159, [%rd5];
	// inline asm
	prmt.b32 %r8448, %r2158, %r2159, %r4;
	// inline asm
	ld.local.u32 	%r2162, [%rd5];
	ld.local.u32 	%r2163, [%rd4+12];
	// inline asm
	prmt.b32 %r8449, %r2162, %r2163, %r4;
	// inline asm
	ld.local.u32 	%r2166, [%rd4+12];
	ld.local.u32 	%r2167, [%rd4+8];
	// inline asm
	prmt.b32 %r8442, %r2166, %r2167, %r4;
	// inline asm
	ld.local.u32 	%r2170, [%rd4+8];
	ld.local.u32 	%r2171, [%rd4+4];
	// inline asm
	prmt.b32 %r8443, %r2170, %r2171, %r4;
	// inline asm
	ld.local.u32 	%r2174, [%rd4+4];
	ld.local.u32 	%r2175, [%rd4];
	// inline asm
	prmt.b32 %r8444, %r2174, %r2175, %r4;
	// inline asm
	ld.local.u32 	%r2178, [%rd4];
	ld.local.u32 	%r2179, [%rd3+12];
	// inline asm
	prmt.b32 %r8445, %r2178, %r2179, %r4;
	// inline asm
	ld.local.u32 	%r2182, [%rd3+12];
	ld.local.u32 	%r2183, [%rd3+8];
	// inline asm
	prmt.b32 %r2181, %r2182, %r2183, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2181;
	ld.local.u32 	%r2186, [%rd3+8];
	ld.local.u32 	%r2187, [%rd3+4];
	// inline asm
	prmt.b32 %r2185, %r2186, %r2187, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2185;
	ld.local.u32 	%r2190, [%rd3+4];
	ld.local.u32 	%r2191, [%rd3];
	// inline asm
	prmt.b32 %r2189, %r2190, %r2191, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2189;
	ld.local.u32 	%r2194, [%rd3];
	ld.local.u32 	%r2195, [%rd2+12];
	// inline asm
	prmt.b32 %r2193, %r2194, %r2195, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2193;
	ld.local.u32 	%r2198, [%rd2+12];
	ld.local.u32 	%r2199, [%rd2+8];
	// inline asm
	prmt.b32 %r2197, %r2198, %r2199, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2197;
	ld.local.u32 	%r2202, [%rd2+8];
	ld.local.u32 	%r2203, [%rd2+4];
	// inline asm
	prmt.b32 %r2201, %r2202, %r2203, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2201;
	ld.local.u32 	%r2206, [%rd2+4];
	ld.local.u32 	%r2207, [%rd2];
	// inline asm
	prmt.b32 %r2205, %r2206, %r2207, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2205;
	ld.local.u32 	%r2210, [%rd2];
	ld.local.u32 	%r2211, [%rd1+12];
	// inline asm
	prmt.b32 %r2209, %r2210, %r2211, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2209;
	ld.local.u32 	%r2214, [%rd1+12];
	ld.local.u32 	%r2215, [%rd1+8];
	// inline asm
	prmt.b32 %r2213, %r2214, %r2215, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2213;
	ld.local.u32 	%r2218, [%rd1+8];
	ld.local.u32 	%r2219, [%rd1+4];
	// inline asm
	prmt.b32 %r2217, %r2218, %r2219, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2217;
	ld.local.u32 	%r2222, [%rd1+4];
	ld.local.u32 	%r2223, [%rd1];
	// inline asm
	prmt.b32 %r2221, %r2222, %r2223, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2221;
	ld.local.u32 	%r2226, [%rd1];
	// inline asm
	prmt.b32 %r2225, %r2226, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r2225;
	st.local.u32 	[%rd5+12], %r8441;
	st.local.u32 	[%rd5+8], %r8441;
	st.local.u32 	[%rd5+4], %r8441;
	st.local.u32 	[%rd5], %r8441;
	st.local.u32 	[%rd4+12], %r8441;
	st.local.u32 	[%rd4+8], %r8441;
	st.local.u32 	[%rd4+4], %r8441;
	st.local.u32 	[%rd4], %r8441;
	st.local.u32 	[%rd3+12], %r8441;
	st.local.u32 	[%rd3+8], %r8441;
	st.local.u32 	[%rd3+4], %r8441;
	st.local.u32 	[%rd3], %r8441;
	st.local.u32 	[%rd2+12], %r8441;
	st.local.u32 	[%rd2+8], %r8441;
	st.local.u32 	[%rd2+4], %r8441;
	st.local.u32 	[%rd2], %r8441;
	st.local.u32 	[%rd1+12], %r8441;
	st.local.u32 	[%rd1+8], %r8441;
	mov.u64 	%rd110, 0;
	st.local.u32 	[%rd1+4], %rd110;
	st.local.u32 	[%rd1], %rd110;
	mov.u32 	%r8462, %r8441;
	mov.u32 	%r8463, %r8441;
	mov.u32 	%r8464, %r8441;
	bra.uni 	BB1_84;

BB1_118:
	setp.gt.s32	%p77, %r3, 13;
	@%p77 bra 	BB1_122;

	setp.eq.s32	%p80, %r3, 12;
	@%p80 bra 	BB1_165;
	bra.uni 	BB1_120;

BB1_165:
	ld.local.u32 	%r6951, [%rd5+12];
	ld.local.u32 	%r6952, [%rd5+8];
	// inline asm
	prmt.b32 %r6950, %r6951, %r6952, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6950;
	ld.local.u32 	%r6955, [%rd5+8];
	ld.local.u32 	%r6956, [%rd5+4];
	// inline asm
	prmt.b32 %r6954, %r6955, %r6956, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6954;
	ld.local.u32 	%r6959, [%rd5+4];
	ld.local.u32 	%r6960, [%rd5];
	// inline asm
	prmt.b32 %r6958, %r6959, %r6960, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6958;
	ld.local.u32 	%r6963, [%rd5];
	ld.local.u32 	%r6964, [%rd4+12];
	// inline asm
	prmt.b32 %r6962, %r6963, %r6964, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6962;
	ld.local.u32 	%r6967, [%rd4+12];
	ld.local.u32 	%r6968, [%rd4+8];
	// inline asm
	prmt.b32 %r6966, %r6967, %r6968, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6966;
	ld.local.u32 	%r6971, [%rd4+8];
	ld.local.u32 	%r6972, [%rd4+4];
	// inline asm
	prmt.b32 %r6970, %r6971, %r6972, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6970;
	ld.local.u32 	%r6975, [%rd4+4];
	ld.local.u32 	%r6976, [%rd4];
	// inline asm
	prmt.b32 %r6974, %r6975, %r6976, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6974;
	ld.local.u32 	%r6979, [%rd4];
	ld.local.u32 	%r6980, [%rd3+12];
	// inline asm
	prmt.b32 %r6978, %r6979, %r6980, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6978;
	ld.local.u32 	%r6983, [%rd3+12];
	ld.local.u32 	%r6984, [%rd3+8];
	// inline asm
	prmt.b32 %r6982, %r6983, %r6984, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6982;
	ld.local.u32 	%r6987, [%rd3+8];
	ld.local.u32 	%r6988, [%rd3+4];
	// inline asm
	prmt.b32 %r6986, %r6987, %r6988, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6986;
	ld.local.u32 	%r6991, [%rd3+4];
	ld.local.u32 	%r6992, [%rd3];
	// inline asm
	prmt.b32 %r6990, %r6991, %r6992, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6990;
	ld.local.u32 	%r6995, [%rd3];
	ld.local.u32 	%r6996, [%rd2+12];
	// inline asm
	prmt.b32 %r6994, %r6995, %r6996, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6994;
	ld.local.u32 	%r6999, [%rd2+12];
	ld.local.u32 	%r7000, [%rd2+8];
	// inline asm
	prmt.b32 %r6998, %r6999, %r7000, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r6998;
	ld.local.u32 	%r7003, [%rd2+8];
	ld.local.u32 	%r7004, [%rd2+4];
	// inline asm
	prmt.b32 %r7002, %r7003, %r7004, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7002;
	ld.local.u32 	%r7007, [%rd2+4];
	ld.local.u32 	%r7008, [%rd2];
	// inline asm
	prmt.b32 %r7006, %r7007, %r7008, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7006;
	ld.local.u32 	%r7011, [%rd2];
	ld.local.u32 	%r7012, [%rd1+12];
	// inline asm
	prmt.b32 %r7010, %r7011, %r7012, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7010;
	ld.local.u32 	%r7015, [%rd1+12];
	ld.local.u32 	%r7016, [%rd1+8];
	// inline asm
	prmt.b32 %r7014, %r7015, %r7016, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7014;
	ld.local.u32 	%r7019, [%rd1+8];
	ld.local.u32 	%r7020, [%rd1+4];
	// inline asm
	prmt.b32 %r7018, %r7019, %r7020, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7018;
	ld.local.u32 	%r7023, [%rd1+4];
	ld.local.u32 	%r7024, [%rd1];
	// inline asm
	prmt.b32 %r7022, %r7023, %r7024, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7022;
	ld.local.u32 	%r7027, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r7026, %r7027, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7026;
	st.local.u32 	[%rd3+12], %r8475;
	st.local.u32 	[%rd3+8], %r8475;
	st.local.u32 	[%rd3+4], %r8475;
	st.local.u32 	[%rd3], %r8475;
	st.local.u32 	[%rd2+12], %r8475;
	st.local.u32 	[%rd2+8], %r8475;
	st.local.u32 	[%rd2+4], %r8475;
	st.local.u32 	[%rd2], %r8475;
	st.local.u32 	[%rd1+12], %r8475;
	st.local.u32 	[%rd1+8], %r8475;
	mov.u64 	%rd1166, 0;
	st.local.u32 	[%rd1+4], %rd1166;
	st.local.u32 	[%rd1], %rd1166;
	bra.uni 	BB1_173;

BB1_28:
	setp.gt.s32	%p29, %r3, 13;
	@%p29 bra 	BB1_32;

	setp.eq.s32	%p32, %r3, 12;
	@%p32 bra 	BB1_75;
	bra.uni 	BB1_30;

BB1_75:
	ld.local.u32 	%r3279, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8457, %r8441, %r3279, %r4;
	// inline asm
	ld.local.u32 	%r3282, [%rd8+12];
	ld.local.u32 	%r3283, [%rd8+8];
	// inline asm
	prmt.b32 %r8450, %r3282, %r3283, %r4;
	// inline asm
	ld.local.u32 	%r3286, [%rd8+8];
	ld.local.u32 	%r3287, [%rd8+4];
	// inline asm
	prmt.b32 %r8451, %r3286, %r3287, %r4;
	// inline asm
	ld.local.u32 	%r3290, [%rd8+4];
	ld.local.u32 	%r3291, [%rd8];
	// inline asm
	prmt.b32 %r8452, %r3290, %r3291, %r4;
	// inline asm
	ld.local.u32 	%r3294, [%rd8];
	ld.local.u32 	%r3295, [%rd7+12];
	// inline asm
	prmt.b32 %r8453, %r3294, %r3295, %r4;
	// inline asm
	ld.local.u32 	%r3298, [%rd7+12];
	ld.local.u32 	%r3299, [%rd7+8];
	// inline asm
	prmt.b32 %r8446, %r3298, %r3299, %r4;
	// inline asm
	ld.local.u32 	%r3302, [%rd7+8];
	ld.local.u32 	%r3303, [%rd7+4];
	// inline asm
	prmt.b32 %r8447, %r3302, %r3303, %r4;
	// inline asm
	ld.local.u32 	%r3306, [%rd7+4];
	ld.local.u32 	%r3307, [%rd7];
	// inline asm
	prmt.b32 %r8448, %r3306, %r3307, %r4;
	// inline asm
	ld.local.u32 	%r3310, [%rd7];
	ld.local.u32 	%r3311, [%rd6+12];
	// inline asm
	prmt.b32 %r8449, %r3310, %r3311, %r4;
	// inline asm
	ld.local.u32 	%r3314, [%rd6+12];
	ld.local.u32 	%r3315, [%rd6+8];
	// inline asm
	prmt.b32 %r8442, %r3314, %r3315, %r4;
	// inline asm
	ld.local.u32 	%r3318, [%rd6+8];
	ld.local.u32 	%r3319, [%rd6+4];
	// inline asm
	prmt.b32 %r8443, %r3318, %r3319, %r4;
	// inline asm
	ld.local.u32 	%r3322, [%rd6+4];
	ld.local.u32 	%r3323, [%rd6];
	// inline asm
	prmt.b32 %r8444, %r3322, %r3323, %r4;
	// inline asm
	ld.local.u32 	%r3326, [%rd6];
	ld.local.u32 	%r3327, [%rd5+12];
	// inline asm
	prmt.b32 %r8445, %r3326, %r3327, %r4;
	// inline asm
	ld.local.u32 	%r3330, [%rd5+12];
	ld.local.u32 	%r3331, [%rd5+8];
	// inline asm
	prmt.b32 %r3329, %r3330, %r3331, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3329;
	ld.local.u32 	%r3334, [%rd5+8];
	ld.local.u32 	%r3335, [%rd5+4];
	// inline asm
	prmt.b32 %r3333, %r3334, %r3335, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3333;
	ld.local.u32 	%r3338, [%rd5+4];
	ld.local.u32 	%r3339, [%rd5];
	// inline asm
	prmt.b32 %r3337, %r3338, %r3339, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3337;
	ld.local.u32 	%r3342, [%rd5];
	ld.local.u32 	%r3343, [%rd4+12];
	// inline asm
	prmt.b32 %r3341, %r3342, %r3343, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3341;
	ld.local.u32 	%r3346, [%rd4+12];
	ld.local.u32 	%r3347, [%rd4+8];
	// inline asm
	prmt.b32 %r3345, %r3346, %r3347, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3345;
	ld.local.u32 	%r3350, [%rd4+8];
	ld.local.u32 	%r3351, [%rd4+4];
	// inline asm
	prmt.b32 %r3349, %r3350, %r3351, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3349;
	ld.local.u32 	%r3354, [%rd4+4];
	ld.local.u32 	%r3355, [%rd4];
	// inline asm
	prmt.b32 %r3353, %r3354, %r3355, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3353;
	ld.local.u32 	%r3358, [%rd4];
	ld.local.u32 	%r3359, [%rd3+12];
	// inline asm
	prmt.b32 %r3357, %r3358, %r3359, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3357;
	ld.local.u32 	%r3362, [%rd3+12];
	ld.local.u32 	%r3363, [%rd3+8];
	// inline asm
	prmt.b32 %r3361, %r3362, %r3363, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3361;
	ld.local.u32 	%r3366, [%rd3+8];
	ld.local.u32 	%r3367, [%rd3+4];
	// inline asm
	prmt.b32 %r3365, %r3366, %r3367, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3365;
	ld.local.u32 	%r3370, [%rd3+4];
	ld.local.u32 	%r3371, [%rd3];
	// inline asm
	prmt.b32 %r3369, %r3370, %r3371, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3369;
	ld.local.u32 	%r3374, [%rd3];
	ld.local.u32 	%r3375, [%rd2+12];
	// inline asm
	prmt.b32 %r3373, %r3374, %r3375, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3373;
	ld.local.u32 	%r3378, [%rd2+12];
	ld.local.u32 	%r3379, [%rd2+8];
	// inline asm
	prmt.b32 %r3377, %r3378, %r3379, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3377;
	ld.local.u32 	%r3382, [%rd2+8];
	ld.local.u32 	%r3383, [%rd2+4];
	// inline asm
	prmt.b32 %r3381, %r3382, %r3383, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3381;
	ld.local.u32 	%r3386, [%rd2+4];
	ld.local.u32 	%r3387, [%rd2];
	// inline asm
	prmt.b32 %r3385, %r3386, %r3387, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3385;
	ld.local.u32 	%r3390, [%rd2];
	ld.local.u32 	%r3391, [%rd1+12];
	// inline asm
	prmt.b32 %r3389, %r3390, %r3391, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3389;
	ld.local.u32 	%r3394, [%rd1+12];
	ld.local.u32 	%r3395, [%rd1+8];
	// inline asm
	prmt.b32 %r3393, %r3394, %r3395, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3393;
	ld.local.u32 	%r3398, [%rd1+8];
	ld.local.u32 	%r3399, [%rd1+4];
	// inline asm
	prmt.b32 %r3397, %r3398, %r3399, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3397;
	ld.local.u32 	%r3402, [%rd1+4];
	ld.local.u32 	%r3403, [%rd1];
	// inline asm
	prmt.b32 %r3401, %r3402, %r3403, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r3401;
	ld.local.u32 	%r3406, [%rd1];
	// inline asm
	prmt.b32 %r3405, %r3406, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r3405;
	st.local.u32 	[%rd3+12], %r8441;
	st.local.u32 	[%rd3+8], %r8441;
	st.local.u32 	[%rd3+4], %r8441;
	st.local.u32 	[%rd3], %r8441;
	st.local.u32 	[%rd2+12], %r8441;
	st.local.u32 	[%rd2+8], %r8441;
	st.local.u32 	[%rd2+4], %r8441;
	st.local.u32 	[%rd2], %r8441;
	st.local.u32 	[%rd1+12], %r8441;
	st.local.u32 	[%rd1+8], %r8441;
	mov.u64 	%rd118, 0;
	st.local.u32 	[%rd1+4], %rd118;
	st.local.u32 	[%rd1], %rd118;
	mov.u32 	%r8454, %r8441;
	mov.u32 	%r8455, %r8441;
	mov.u32 	%r8456, %r8441;
	bra.uni 	BB1_82;

BB1_149:
	setp.gt.s32	%p54, %r3, 29;
	@%p54 bra 	BB1_153;

	setp.eq.s32	%p57, %r3, 28;
	@%p57 bra 	BB1_157;
	bra.uni 	BB1_151;

BB1_157:
	ld.local.u32 	%r6199, [%rd1+12];
	ld.local.u32 	%r6200, [%rd1+8];
	// inline asm
	prmt.b32 %r6198, %r6199, %r6200, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6198;
	ld.local.u32 	%r6203, [%rd1+8];
	ld.local.u32 	%r6204, [%rd1+4];
	// inline asm
	prmt.b32 %r6202, %r6203, %r6204, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6202;
	ld.local.u32 	%r6207, [%rd1+4];
	ld.local.u32 	%r6208, [%rd1];
	// inline asm
	prmt.b32 %r6206, %r6207, %r6208, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6206;
	ld.local.u32 	%r6211, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r6210, %r6211, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6210;
	st.local.u32 	[%rd7+12], %r8475;
	st.local.u32 	[%rd7+8], %r8475;
	st.local.u32 	[%rd7+4], %r8475;
	st.local.u32 	[%rd7], %r8475;
	st.local.u32 	[%rd6+12], %r8475;
	st.local.u32 	[%rd6+8], %r8475;
	st.local.u32 	[%rd6+4], %r8475;
	st.local.u32 	[%rd6], %r8475;
	st.local.u32 	[%rd5+12], %r8475;
	st.local.u32 	[%rd5+8], %r8475;
	st.local.u32 	[%rd5+4], %r8475;
	st.local.u32 	[%rd5], %r8475;
	st.local.u32 	[%rd4+12], %r8475;
	st.local.u32 	[%rd4+8], %r8475;
	st.local.u32 	[%rd4+4], %r8475;
	st.local.u32 	[%rd4], %r8475;
	st.local.u32 	[%rd3+12], %r8475;
	st.local.u32 	[%rd3+8], %r8475;
	st.local.u32 	[%rd3+4], %r8475;
	st.local.u32 	[%rd3], %r8475;
	st.local.u32 	[%rd2+12], %r8475;
	st.local.u32 	[%rd2+8], %r8475;
	st.local.u32 	[%rd2+4], %r8475;
	st.local.u32 	[%rd2], %r8475;
	st.local.u32 	[%rd1+12], %r8475;
	st.local.u32 	[%rd1+8], %r8475;
	mov.u64 	%rd1150, 0;
	st.local.u32 	[%rd1+4], %rd1150;
	st.local.u32 	[%rd1], %rd1150;
	bra.uni 	BB1_173;

BB1_59:
	setp.gt.s32	%p6, %r3, 29;
	@%p6 bra 	BB1_63;

	setp.eq.s32	%p9, %r3, 28;
	@%p9 bra 	BB1_67;
	bra.uni 	BB1_61;

BB1_67:
	ld.local.u32 	%r983, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8473, %r8441, %r983, %r4;
	// inline asm
	ld.local.u32 	%r986, [%rd8+12];
	ld.local.u32 	%r987, [%rd8+8];
	// inline asm
	prmt.b32 %r8466, %r986, %r987, %r4;
	// inline asm
	ld.local.u32 	%r990, [%rd8+8];
	ld.local.u32 	%r991, [%rd8+4];
	// inline asm
	prmt.b32 %r8467, %r990, %r991, %r4;
	// inline asm
	ld.local.u32 	%r994, [%rd8+4];
	ld.local.u32 	%r995, [%rd8];
	// inline asm
	prmt.b32 %r8468, %r994, %r995, %r4;
	// inline asm
	ld.local.u32 	%r998, [%rd8];
	ld.local.u32 	%r999, [%rd7+12];
	// inline asm
	prmt.b32 %r8469, %r998, %r999, %r4;
	// inline asm
	ld.local.u32 	%r1002, [%rd7+12];
	ld.local.u32 	%r1003, [%rd7+8];
	// inline asm
	prmt.b32 %r8462, %r1002, %r1003, %r4;
	// inline asm
	ld.local.u32 	%r1006, [%rd7+8];
	ld.local.u32 	%r1007, [%rd7+4];
	// inline asm
	prmt.b32 %r8463, %r1006, %r1007, %r4;
	// inline asm
	ld.local.u32 	%r1010, [%rd7+4];
	ld.local.u32 	%r1011, [%rd7];
	// inline asm
	prmt.b32 %r8464, %r1010, %r1011, %r4;
	// inline asm
	ld.local.u32 	%r1014, [%rd7];
	ld.local.u32 	%r1015, [%rd6+12];
	// inline asm
	prmt.b32 %r8465, %r1014, %r1015, %r4;
	// inline asm
	ld.local.u32 	%r1018, [%rd6+12];
	ld.local.u32 	%r1019, [%rd6+8];
	// inline asm
	prmt.b32 %r8458, %r1018, %r1019, %r4;
	// inline asm
	ld.local.u32 	%r1022, [%rd6+8];
	ld.local.u32 	%r1023, [%rd6+4];
	// inline asm
	prmt.b32 %r8459, %r1022, %r1023, %r4;
	// inline asm
	ld.local.u32 	%r1026, [%rd6+4];
	ld.local.u32 	%r1027, [%rd6];
	// inline asm
	prmt.b32 %r8460, %r1026, %r1027, %r4;
	// inline asm
	ld.local.u32 	%r1030, [%rd6];
	ld.local.u32 	%r1031, [%rd5+12];
	// inline asm
	prmt.b32 %r8461, %r1030, %r1031, %r4;
	// inline asm
	ld.local.u32 	%r1034, [%rd5+12];
	ld.local.u32 	%r1035, [%rd5+8];
	// inline asm
	prmt.b32 %r8454, %r1034, %r1035, %r4;
	// inline asm
	ld.local.u32 	%r1038, [%rd5+8];
	ld.local.u32 	%r1039, [%rd5+4];
	// inline asm
	prmt.b32 %r8455, %r1038, %r1039, %r4;
	// inline asm
	ld.local.u32 	%r1042, [%rd5+4];
	ld.local.u32 	%r1043, [%rd5];
	// inline asm
	prmt.b32 %r8456, %r1042, %r1043, %r4;
	// inline asm
	ld.local.u32 	%r1046, [%rd5];
	ld.local.u32 	%r1047, [%rd4+12];
	// inline asm
	prmt.b32 %r8457, %r1046, %r1047, %r4;
	// inline asm
	ld.local.u32 	%r1050, [%rd4+12];
	ld.local.u32 	%r1051, [%rd4+8];
	// inline asm
	prmt.b32 %r8450, %r1050, %r1051, %r4;
	// inline asm
	ld.local.u32 	%r1054, [%rd4+8];
	ld.local.u32 	%r1055, [%rd4+4];
	// inline asm
	prmt.b32 %r8451, %r1054, %r1055, %r4;
	// inline asm
	ld.local.u32 	%r1058, [%rd4+4];
	ld.local.u32 	%r1059, [%rd4];
	// inline asm
	prmt.b32 %r8452, %r1058, %r1059, %r4;
	// inline asm
	ld.local.u32 	%r1062, [%rd4];
	ld.local.u32 	%r1063, [%rd3+12];
	// inline asm
	prmt.b32 %r8453, %r1062, %r1063, %r4;
	// inline asm
	ld.local.u32 	%r1066, [%rd3+12];
	ld.local.u32 	%r1067, [%rd3+8];
	// inline asm
	prmt.b32 %r8446, %r1066, %r1067, %r4;
	// inline asm
	ld.local.u32 	%r1070, [%rd3+8];
	ld.local.u32 	%r1071, [%rd3+4];
	// inline asm
	prmt.b32 %r8447, %r1070, %r1071, %r4;
	// inline asm
	ld.local.u32 	%r1074, [%rd3+4];
	ld.local.u32 	%r1075, [%rd3];
	// inline asm
	prmt.b32 %r8448, %r1074, %r1075, %r4;
	// inline asm
	ld.local.u32 	%r1078, [%rd3];
	ld.local.u32 	%r1079, [%rd2+12];
	// inline asm
	prmt.b32 %r8449, %r1078, %r1079, %r4;
	// inline asm
	ld.local.u32 	%r1082, [%rd2+12];
	ld.local.u32 	%r1083, [%rd2+8];
	// inline asm
	prmt.b32 %r8442, %r1082, %r1083, %r4;
	// inline asm
	ld.local.u32 	%r1086, [%rd2+8];
	ld.local.u32 	%r1087, [%rd2+4];
	// inline asm
	prmt.b32 %r8443, %r1086, %r1087, %r4;
	// inline asm
	ld.local.u32 	%r1090, [%rd2+4];
	ld.local.u32 	%r1091, [%rd2];
	// inline asm
	prmt.b32 %r8444, %r1090, %r1091, %r4;
	// inline asm
	ld.local.u32 	%r1094, [%rd2];
	ld.local.u32 	%r1095, [%rd1+12];
	// inline asm
	prmt.b32 %r8445, %r1094, %r1095, %r4;
	// inline asm
	ld.local.u32 	%r1098, [%rd1+12];
	ld.local.u32 	%r1099, [%rd1+8];
	// inline asm
	prmt.b32 %r1097, %r1098, %r1099, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1097;
	ld.local.u32 	%r1102, [%rd1+8];
	ld.local.u32 	%r1103, [%rd1+4];
	// inline asm
	prmt.b32 %r1101, %r1102, %r1103, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1101;
	ld.local.u32 	%r1106, [%rd1+4];
	ld.local.u32 	%r1107, [%rd1];
	// inline asm
	prmt.b32 %r1105, %r1106, %r1107, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1105;
	ld.local.u32 	%r1110, [%rd1];
	// inline asm
	prmt.b32 %r1109, %r1110, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1109;
	st.local.u32 	[%rd7+12], %r8441;
	st.local.u32 	[%rd7+8], %r8441;
	st.local.u32 	[%rd7+4], %r8441;
	st.local.u32 	[%rd7], %r8441;
	st.local.u32 	[%rd6+12], %r8441;
	st.local.u32 	[%rd6+8], %r8441;
	st.local.u32 	[%rd6+4], %r8441;
	st.local.u32 	[%rd6], %r8441;
	st.local.u32 	[%rd5+12], %r8441;
	st.local.u32 	[%rd5+8], %r8441;
	st.local.u32 	[%rd5+4], %r8441;
	st.local.u32 	[%rd5], %r8441;
	st.local.u32 	[%rd4+12], %r8441;
	st.local.u32 	[%rd4+8], %r8441;
	st.local.u32 	[%rd4+4], %r8441;
	st.local.u32 	[%rd4], %r8441;
	st.local.u32 	[%rd3+12], %r8441;
	st.local.u32 	[%rd3+8], %r8441;
	st.local.u32 	[%rd3+4], %r8441;
	st.local.u32 	[%rd3], %r8441;
	st.local.u32 	[%rd2+12], %r8441;
	st.local.u32 	[%rd2+8], %r8441;
	st.local.u32 	[%rd2+4], %r8441;
	st.local.u32 	[%rd2], %r8441;
	st.local.u32 	[%rd1+12], %r8441;
	st.local.u32 	[%rd1+8], %r8441;
	mov.u64 	%rd102, 0;
	st.local.u32 	[%rd1+4], %rd102;
	st.local.u32 	[%rd1], %rd102;
	mov.u32 	%r8470, %r8441;
	mov.u32 	%r8471, %r8441;
	mov.u32 	%r8472, %r8441;
	bra.uni 	BB1_90;

BB1_100:
	setp.eq.s32	%p94, %r3, 2;
	@%p94 bra 	BB1_170;
	bra.uni 	BB1_101;

BB1_170:
	ld.local.u32 	%r7941, [%rd8+4];
	ld.local.u32 	%r7942, [%rd8];
	// inline asm
	prmt.b32 %r7940, %r7941, %r7942, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7940;
	ld.local.u32 	%r7945, [%rd8];
	ld.local.u32 	%r7946, [%rd7+12];
	// inline asm
	prmt.b32 %r7944, %r7945, %r7946, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7944;
	ld.local.u32 	%r7949, [%rd7+12];
	ld.local.u32 	%r7950, [%rd7+8];
	// inline asm
	prmt.b32 %r7948, %r7949, %r7950, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7948;
	ld.local.u32 	%r7953, [%rd7+8];
	ld.local.u32 	%r7954, [%rd7+4];
	// inline asm
	prmt.b32 %r7952, %r7953, %r7954, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7952;
	ld.local.u32 	%r7957, [%rd7+4];
	ld.local.u32 	%r7958, [%rd7];
	// inline asm
	prmt.b32 %r7956, %r7957, %r7958, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7956;
	ld.local.u32 	%r7961, [%rd7];
	ld.local.u32 	%r7962, [%rd6+12];
	// inline asm
	prmt.b32 %r7960, %r7961, %r7962, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7960;
	ld.local.u32 	%r7965, [%rd6+12];
	ld.local.u32 	%r7966, [%rd6+8];
	// inline asm
	prmt.b32 %r7964, %r7965, %r7966, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7964;
	ld.local.u32 	%r7969, [%rd6+8];
	ld.local.u32 	%r7970, [%rd6+4];
	// inline asm
	prmt.b32 %r7968, %r7969, %r7970, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7968;
	ld.local.u32 	%r7973, [%rd6+4];
	ld.local.u32 	%r7974, [%rd6];
	// inline asm
	prmt.b32 %r7972, %r7973, %r7974, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7972;
	ld.local.u32 	%r7977, [%rd6];
	ld.local.u32 	%r7978, [%rd5+12];
	// inline asm
	prmt.b32 %r7976, %r7977, %r7978, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7976;
	ld.local.u32 	%r7981, [%rd5+12];
	ld.local.u32 	%r7982, [%rd5+8];
	// inline asm
	prmt.b32 %r7980, %r7981, %r7982, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7980;
	ld.local.u32 	%r7985, [%rd5+8];
	ld.local.u32 	%r7986, [%rd5+4];
	// inline asm
	prmt.b32 %r7984, %r7985, %r7986, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7984;
	ld.local.u32 	%r7989, [%rd5+4];
	ld.local.u32 	%r7990, [%rd5];
	// inline asm
	prmt.b32 %r7988, %r7989, %r7990, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7988;
	ld.local.u32 	%r7993, [%rd5];
	ld.local.u32 	%r7994, [%rd4+12];
	// inline asm
	prmt.b32 %r7992, %r7993, %r7994, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7992;
	ld.local.u32 	%r7997, [%rd4+12];
	ld.local.u32 	%r7998, [%rd4+8];
	// inline asm
	prmt.b32 %r7996, %r7997, %r7998, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7996;
	ld.local.u32 	%r8001, [%rd4+8];
	ld.local.u32 	%r8002, [%rd4+4];
	// inline asm
	prmt.b32 %r8000, %r8001, %r8002, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r8000;
	ld.local.u32 	%r8005, [%rd4+4];
	ld.local.u32 	%r8006, [%rd4];
	// inline asm
	prmt.b32 %r8004, %r8005, %r8006, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r8004;
	ld.local.u32 	%r8009, [%rd4];
	ld.local.u32 	%r8010, [%rd3+12];
	// inline asm
	prmt.b32 %r8008, %r8009, %r8010, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r8008;
	ld.local.u32 	%r8013, [%rd3+12];
	ld.local.u32 	%r8014, [%rd3+8];
	// inline asm
	prmt.b32 %r8012, %r8013, %r8014, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r8012;
	ld.local.u32 	%r8017, [%rd3+8];
	ld.local.u32 	%r8018, [%rd3+4];
	// inline asm
	prmt.b32 %r8016, %r8017, %r8018, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r8016;
	ld.local.u32 	%r8021, [%rd3+4];
	ld.local.u32 	%r8022, [%rd3];
	// inline asm
	prmt.b32 %r8020, %r8021, %r8022, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r8020;
	ld.local.u32 	%r8025, [%rd3];
	ld.local.u32 	%r8026, [%rd2+12];
	// inline asm
	prmt.b32 %r8024, %r8025, %r8026, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r8024;
	ld.local.u32 	%r8029, [%rd2+12];
	ld.local.u32 	%r8030, [%rd2+8];
	// inline asm
	prmt.b32 %r8028, %r8029, %r8030, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r8028;
	ld.local.u32 	%r8033, [%rd2+8];
	ld.local.u32 	%r8034, [%rd2+4];
	// inline asm
	prmt.b32 %r8032, %r8033, %r8034, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r8032;
	ld.local.u32 	%r8037, [%rd2+4];
	ld.local.u32 	%r8038, [%rd2];
	// inline asm
	prmt.b32 %r8036, %r8037, %r8038, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r8036;
	ld.local.u32 	%r8041, [%rd2];
	ld.local.u32 	%r8042, [%rd1+12];
	// inline asm
	prmt.b32 %r8040, %r8041, %r8042, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r8040;
	ld.local.u32 	%r8045, [%rd1+12];
	ld.local.u32 	%r8046, [%rd1+8];
	// inline asm
	prmt.b32 %r8044, %r8045, %r8046, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r8044;
	ld.local.u32 	%r8049, [%rd1+8];
	ld.local.u32 	%r8050, [%rd1+4];
	// inline asm
	prmt.b32 %r8048, %r8049, %r8050, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r8048;
	ld.local.u32 	%r8053, [%rd1+4];
	ld.local.u32 	%r8054, [%rd1];
	// inline asm
	prmt.b32 %r8052, %r8053, %r8054, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r8052;
	ld.local.u32 	%r8057, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r8056, %r8057, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd1+8], %r8056;
	mov.u64 	%rd1176, 0;
	st.local.u32 	[%rd1+4], %rd1176;
	st.local.u32 	[%rd1], %rd1176;
	bra.uni 	BB1_173;

BB1_9:
	setp.eq.s32	%p46, %r3, 2;
	@%p46 bra 	BB1_86;
	bra.uni 	BB1_10;

BB1_86:
	ld.local.u32 	%r4844, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8443, %r8441, %r4844, %r4;
	// inline asm
	ld.local.u32 	%r4847, [%rd8+12];
	ld.local.u32 	%r4848, [%rd8+8];
	// inline asm
	prmt.b32 %r8444, %r4847, %r4848, %r4;
	// inline asm
	ld.local.u32 	%r4851, [%rd8+8];
	ld.local.u32 	%r4852, [%rd8+4];
	// inline asm
	prmt.b32 %r8445, %r4851, %r4852, %r4;
	// inline asm
	ld.local.u32 	%r4855, [%rd8+4];
	ld.local.u32 	%r4856, [%rd8];
	// inline asm
	prmt.b32 %r4854, %r4855, %r4856, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r4854;
	ld.local.u32 	%r4859, [%rd8];
	ld.local.u32 	%r4860, [%rd7+12];
	// inline asm
	prmt.b32 %r4858, %r4859, %r4860, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r4858;
	ld.local.u32 	%r4863, [%rd7+12];
	ld.local.u32 	%r4864, [%rd7+8];
	// inline asm
	prmt.b32 %r4862, %r4863, %r4864, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r4862;
	ld.local.u32 	%r4867, [%rd7+8];
	ld.local.u32 	%r4868, [%rd7+4];
	// inline asm
	prmt.b32 %r4866, %r4867, %r4868, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r4866;
	ld.local.u32 	%r4871, [%rd7+4];
	ld.local.u32 	%r4872, [%rd7];
	// inline asm
	prmt.b32 %r4870, %r4871, %r4872, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r4870;
	ld.local.u32 	%r4875, [%rd7];
	ld.local.u32 	%r4876, [%rd6+12];
	// inline asm
	prmt.b32 %r4874, %r4875, %r4876, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r4874;
	ld.local.u32 	%r4879, [%rd6+12];
	ld.local.u32 	%r4880, [%rd6+8];
	// inline asm
	prmt.b32 %r4878, %r4879, %r4880, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r4878;
	ld.local.u32 	%r4883, [%rd6+8];
	ld.local.u32 	%r4884, [%rd6+4];
	// inline asm
	prmt.b32 %r4882, %r4883, %r4884, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r4882;
	ld.local.u32 	%r4887, [%rd6+4];
	ld.local.u32 	%r4888, [%rd6];
	// inline asm
	prmt.b32 %r4886, %r4887, %r4888, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r4886;
	ld.local.u32 	%r4891, [%rd6];
	ld.local.u32 	%r4892, [%rd5+12];
	// inline asm
	prmt.b32 %r4890, %r4891, %r4892, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r4890;
	ld.local.u32 	%r4895, [%rd5+12];
	ld.local.u32 	%r4896, [%rd5+8];
	// inline asm
	prmt.b32 %r4894, %r4895, %r4896, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4894;
	ld.local.u32 	%r4899, [%rd5+8];
	ld.local.u32 	%r4900, [%rd5+4];
	// inline asm
	prmt.b32 %r4898, %r4899, %r4900, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4898;
	ld.local.u32 	%r4903, [%rd5+4];
	ld.local.u32 	%r4904, [%rd5];
	// inline asm
	prmt.b32 %r4902, %r4903, %r4904, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4902;
	ld.local.u32 	%r4907, [%rd5];
	ld.local.u32 	%r4908, [%rd4+12];
	// inline asm
	prmt.b32 %r4906, %r4907, %r4908, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4906;
	ld.local.u32 	%r4911, [%rd4+12];
	ld.local.u32 	%r4912, [%rd4+8];
	// inline asm
	prmt.b32 %r4910, %r4911, %r4912, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4910;
	ld.local.u32 	%r4915, [%rd4+8];
	ld.local.u32 	%r4916, [%rd4+4];
	// inline asm
	prmt.b32 %r4914, %r4915, %r4916, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4914;
	ld.local.u32 	%r4919, [%rd4+4];
	ld.local.u32 	%r4920, [%rd4];
	// inline asm
	prmt.b32 %r4918, %r4919, %r4920, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4918;
	ld.local.u32 	%r4923, [%rd4];
	ld.local.u32 	%r4924, [%rd3+12];
	// inline asm
	prmt.b32 %r4922, %r4923, %r4924, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4922;
	ld.local.u32 	%r4927, [%rd3+12];
	ld.local.u32 	%r4928, [%rd3+8];
	// inline asm
	prmt.b32 %r4926, %r4927, %r4928, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4926;
	ld.local.u32 	%r4931, [%rd3+8];
	ld.local.u32 	%r4932, [%rd3+4];
	// inline asm
	prmt.b32 %r4930, %r4931, %r4932, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4930;
	ld.local.u32 	%r4935, [%rd3+4];
	ld.local.u32 	%r4936, [%rd3];
	// inline asm
	prmt.b32 %r4934, %r4935, %r4936, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4934;
	ld.local.u32 	%r4939, [%rd3];
	ld.local.u32 	%r4940, [%rd2+12];
	// inline asm
	prmt.b32 %r4938, %r4939, %r4940, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4938;
	ld.local.u32 	%r4943, [%rd2+12];
	ld.local.u32 	%r4944, [%rd2+8];
	// inline asm
	prmt.b32 %r4942, %r4943, %r4944, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4942;
	ld.local.u32 	%r4947, [%rd2+8];
	ld.local.u32 	%r4948, [%rd2+4];
	// inline asm
	prmt.b32 %r4946, %r4947, %r4948, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4946;
	ld.local.u32 	%r4951, [%rd2+4];
	ld.local.u32 	%r4952, [%rd2];
	// inline asm
	prmt.b32 %r4950, %r4951, %r4952, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r4950;
	ld.local.u32 	%r4955, [%rd2];
	ld.local.u32 	%r4956, [%rd1+12];
	// inline asm
	prmt.b32 %r4954, %r4955, %r4956, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r4954;
	ld.local.u32 	%r4959, [%rd1+12];
	ld.local.u32 	%r4960, [%rd1+8];
	// inline asm
	prmt.b32 %r4958, %r4959, %r4960, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r4958;
	ld.local.u32 	%r4963, [%rd1+8];
	ld.local.u32 	%r4964, [%rd1+4];
	// inline asm
	prmt.b32 %r4962, %r4963, %r4964, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r4962;
	ld.local.u32 	%r4967, [%rd1+4];
	ld.local.u32 	%r4968, [%rd1];
	// inline asm
	prmt.b32 %r4966, %r4967, %r4968, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r4966;
	ld.local.u32 	%r4971, [%rd1];
	// inline asm
	prmt.b32 %r4970, %r4971, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd1+8], %r4970;
	mov.u64 	%rd128, 0;
	st.local.u32 	[%rd1+4], %rd128;
	st.local.u32 	[%rd1], %rd128;
	mov.u32 	%r8442, %r8441;
	bra.uni 	BB1_12;

BB1_131:
	setp.eq.s32	%p71, %r3, 18;
	@%p71 bra 	BB1_162;
	bra.uni 	BB1_132;

BB1_162:
	ld.local.u32 	%r6549, [%rd4+4];
	ld.local.u32 	%r6550, [%rd4];
	// inline asm
	prmt.b32 %r6548, %r6549, %r6550, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6548;
	ld.local.u32 	%r6553, [%rd4];
	ld.local.u32 	%r6554, [%rd3+12];
	// inline asm
	prmt.b32 %r6552, %r6553, %r6554, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6552;
	ld.local.u32 	%r6557, [%rd3+12];
	ld.local.u32 	%r6558, [%rd3+8];
	// inline asm
	prmt.b32 %r6556, %r6557, %r6558, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6556;
	ld.local.u32 	%r6561, [%rd3+8];
	ld.local.u32 	%r6562, [%rd3+4];
	// inline asm
	prmt.b32 %r6560, %r6561, %r6562, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6560;
	ld.local.u32 	%r6565, [%rd3+4];
	ld.local.u32 	%r6566, [%rd3];
	// inline asm
	prmt.b32 %r6564, %r6565, %r6566, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6564;
	ld.local.u32 	%r6569, [%rd3];
	ld.local.u32 	%r6570, [%rd2+12];
	// inline asm
	prmt.b32 %r6568, %r6569, %r6570, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6568;
	ld.local.u32 	%r6573, [%rd2+12];
	ld.local.u32 	%r6574, [%rd2+8];
	// inline asm
	prmt.b32 %r6572, %r6573, %r6574, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6572;
	ld.local.u32 	%r6577, [%rd2+8];
	ld.local.u32 	%r6578, [%rd2+4];
	// inline asm
	prmt.b32 %r6576, %r6577, %r6578, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6576;
	ld.local.u32 	%r6581, [%rd2+4];
	ld.local.u32 	%r6582, [%rd2];
	// inline asm
	prmt.b32 %r6580, %r6581, %r6582, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6580;
	ld.local.u32 	%r6585, [%rd2];
	ld.local.u32 	%r6586, [%rd1+12];
	// inline asm
	prmt.b32 %r6584, %r6585, %r6586, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6584;
	ld.local.u32 	%r6589, [%rd1+12];
	ld.local.u32 	%r6590, [%rd1+8];
	// inline asm
	prmt.b32 %r6588, %r6589, %r6590, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6588;
	ld.local.u32 	%r6593, [%rd1+8];
	ld.local.u32 	%r6594, [%rd1+4];
	// inline asm
	prmt.b32 %r6592, %r6593, %r6594, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6592;
	ld.local.u32 	%r6597, [%rd1+4];
	ld.local.u32 	%r6598, [%rd1];
	// inline asm
	prmt.b32 %r6596, %r6597, %r6598, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r6596;
	ld.local.u32 	%r6601, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r6600, %r6601, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r6600;
	st.local.u32 	[%rd5+4], %r8475;
	st.local.u32 	[%rd5], %r8475;
	st.local.u32 	[%rd4+12], %r8475;
	st.local.u32 	[%rd4+8], %r8475;
	st.local.u32 	[%rd4+4], %r8475;
	st.local.u32 	[%rd4], %r8475;
	st.local.u32 	[%rd3+12], %r8475;
	st.local.u32 	[%rd3+8], %r8475;
	st.local.u32 	[%rd3+4], %r8475;
	st.local.u32 	[%rd3], %r8475;
	st.local.u32 	[%rd2+12], %r8475;
	st.local.u32 	[%rd2+8], %r8475;
	st.local.u32 	[%rd2+4], %r8475;
	st.local.u32 	[%rd2], %r8475;
	st.local.u32 	[%rd1+12], %r8475;
	st.local.u32 	[%rd1+8], %r8475;
	mov.u64 	%rd1160, 0;
	st.local.u32 	[%rd1+4], %rd1160;
	st.local.u32 	[%rd1], %rd1160;
	bra.uni 	BB1_173;

BB1_41:
	setp.eq.s32	%p23, %r3, 18;
	@%p23 bra 	BB1_72;
	bra.uni 	BB1_42;

BB1_72:
	ld.local.u32 	%r2388, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8459, %r8441, %r2388, %r4;
	// inline asm
	ld.local.u32 	%r2391, [%rd8+12];
	ld.local.u32 	%r2392, [%rd8+8];
	// inline asm
	prmt.b32 %r8460, %r2391, %r2392, %r4;
	// inline asm
	ld.local.u32 	%r2395, [%rd8+8];
	ld.local.u32 	%r2396, [%rd8+4];
	// inline asm
	prmt.b32 %r8461, %r2395, %r2396, %r4;
	// inline asm
	ld.local.u32 	%r2399, [%rd8+4];
	ld.local.u32 	%r2400, [%rd8];
	// inline asm
	prmt.b32 %r8454, %r2399, %r2400, %r4;
	// inline asm
	ld.local.u32 	%r2403, [%rd8];
	ld.local.u32 	%r2404, [%rd7+12];
	// inline asm
	prmt.b32 %r8455, %r2403, %r2404, %r4;
	// inline asm
	ld.local.u32 	%r2407, [%rd7+12];
	ld.local.u32 	%r2408, [%rd7+8];
	// inline asm
	prmt.b32 %r8456, %r2407, %r2408, %r4;
	// inline asm
	ld.local.u32 	%r2411, [%rd7+8];
	ld.local.u32 	%r2412, [%rd7+4];
	// inline asm
	prmt.b32 %r8457, %r2411, %r2412, %r4;
	// inline asm
	ld.local.u32 	%r2415, [%rd7+4];
	ld.local.u32 	%r2416, [%rd7];
	// inline asm
	prmt.b32 %r8450, %r2415, %r2416, %r4;
	// inline asm
	ld.local.u32 	%r2419, [%rd7];
	ld.local.u32 	%r2420, [%rd6+12];
	// inline asm
	prmt.b32 %r8451, %r2419, %r2420, %r4;
	// inline asm
	ld.local.u32 	%r2423, [%rd6+12];
	ld.local.u32 	%r2424, [%rd6+8];
	// inline asm
	prmt.b32 %r8452, %r2423, %r2424, %r4;
	// inline asm
	ld.local.u32 	%r2427, [%rd6+8];
	ld.local.u32 	%r2428, [%rd6+4];
	// inline asm
	prmt.b32 %r8453, %r2427, %r2428, %r4;
	// inline asm
	ld.local.u32 	%r2431, [%rd6+4];
	ld.local.u32 	%r2432, [%rd6];
	// inline asm
	prmt.b32 %r8446, %r2431, %r2432, %r4;
	// inline asm
	ld.local.u32 	%r2435, [%rd6];
	ld.local.u32 	%r2436, [%rd5+12];
	// inline asm
	prmt.b32 %r8447, %r2435, %r2436, %r4;
	// inline asm
	ld.local.u32 	%r2439, [%rd5+12];
	ld.local.u32 	%r2440, [%rd5+8];
	// inline asm
	prmt.b32 %r8448, %r2439, %r2440, %r4;
	// inline asm
	ld.local.u32 	%r2443, [%rd5+8];
	ld.local.u32 	%r2444, [%rd5+4];
	// inline asm
	prmt.b32 %r8449, %r2443, %r2444, %r4;
	// inline asm
	ld.local.u32 	%r2447, [%rd5+4];
	ld.local.u32 	%r2448, [%rd5];
	// inline asm
	prmt.b32 %r8442, %r2447, %r2448, %r4;
	// inline asm
	ld.local.u32 	%r2451, [%rd5];
	ld.local.u32 	%r2452, [%rd4+12];
	// inline asm
	prmt.b32 %r8443, %r2451, %r2452, %r4;
	// inline asm
	ld.local.u32 	%r2455, [%rd4+12];
	ld.local.u32 	%r2456, [%rd4+8];
	// inline asm
	prmt.b32 %r8444, %r2455, %r2456, %r4;
	// inline asm
	ld.local.u32 	%r2459, [%rd4+8];
	ld.local.u32 	%r2460, [%rd4+4];
	// inline asm
	prmt.b32 %r8445, %r2459, %r2460, %r4;
	// inline asm
	ld.local.u32 	%r2463, [%rd4+4];
	ld.local.u32 	%r2464, [%rd4];
	// inline asm
	prmt.b32 %r2462, %r2463, %r2464, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2462;
	ld.local.u32 	%r2467, [%rd4];
	ld.local.u32 	%r2468, [%rd3+12];
	// inline asm
	prmt.b32 %r2466, %r2467, %r2468, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2466;
	ld.local.u32 	%r2471, [%rd3+12];
	ld.local.u32 	%r2472, [%rd3+8];
	// inline asm
	prmt.b32 %r2470, %r2471, %r2472, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2470;
	ld.local.u32 	%r2475, [%rd3+8];
	ld.local.u32 	%r2476, [%rd3+4];
	// inline asm
	prmt.b32 %r2474, %r2475, %r2476, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2474;
	ld.local.u32 	%r2479, [%rd3+4];
	ld.local.u32 	%r2480, [%rd3];
	// inline asm
	prmt.b32 %r2478, %r2479, %r2480, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2478;
	ld.local.u32 	%r2483, [%rd3];
	ld.local.u32 	%r2484, [%rd2+12];
	// inline asm
	prmt.b32 %r2482, %r2483, %r2484, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2482;
	ld.local.u32 	%r2487, [%rd2+12];
	ld.local.u32 	%r2488, [%rd2+8];
	// inline asm
	prmt.b32 %r2486, %r2487, %r2488, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2486;
	ld.local.u32 	%r2491, [%rd2+8];
	ld.local.u32 	%r2492, [%rd2+4];
	// inline asm
	prmt.b32 %r2490, %r2491, %r2492, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2490;
	ld.local.u32 	%r2495, [%rd2+4];
	ld.local.u32 	%r2496, [%rd2];
	// inline asm
	prmt.b32 %r2494, %r2495, %r2496, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2494;
	ld.local.u32 	%r2499, [%rd2];
	ld.local.u32 	%r2500, [%rd1+12];
	// inline asm
	prmt.b32 %r2498, %r2499, %r2500, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2498;
	ld.local.u32 	%r2503, [%rd1+12];
	ld.local.u32 	%r2504, [%rd1+8];
	// inline asm
	prmt.b32 %r2502, %r2503, %r2504, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2502;
	ld.local.u32 	%r2507, [%rd1+8];
	ld.local.u32 	%r2508, [%rd1+4];
	// inline asm
	prmt.b32 %r2506, %r2507, %r2508, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r2506;
	ld.local.u32 	%r2511, [%rd1+4];
	ld.local.u32 	%r2512, [%rd1];
	// inline asm
	prmt.b32 %r2510, %r2511, %r2512, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r2510;
	ld.local.u32 	%r2515, [%rd1];
	// inline asm
	prmt.b32 %r2514, %r2515, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r2514;
	st.local.u32 	[%rd5+4], %r8441;
	st.local.u32 	[%rd5], %r8441;
	st.local.u32 	[%rd4+12], %r8441;
	st.local.u32 	[%rd4+8], %r8441;
	st.local.u32 	[%rd4+4], %r8441;
	st.local.u32 	[%rd4], %r8441;
	st.local.u32 	[%rd3+12], %r8441;
	st.local.u32 	[%rd3+8], %r8441;
	st.local.u32 	[%rd3+4], %r8441;
	st.local.u32 	[%rd3], %r8441;
	st.local.u32 	[%rd2+12], %r8441;
	st.local.u32 	[%rd2+8], %r8441;
	st.local.u32 	[%rd2+4], %r8441;
	st.local.u32 	[%rd2], %r8441;
	st.local.u32 	[%rd1+12], %r8441;
	st.local.u32 	[%rd1+8], %r8441;
	mov.u64 	%rd112, 0;
	st.local.u32 	[%rd1+4], %rd112;
	st.local.u32 	[%rd1], %rd112;
	mov.u32 	%r8458, %r8441;
	bra.uni 	BB1_83;

BB1_115:
	setp.eq.s32	%p83, %r3, 10;
	@%p83 bra 	BB1_166;
	bra.uni 	BB1_116;

BB1_166:
	ld.local.u32 	%r7117, [%rd6+4];
	ld.local.u32 	%r7118, [%rd6];
	// inline asm
	prmt.b32 %r7116, %r7117, %r7118, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7116;
	ld.local.u32 	%r7121, [%rd6];
	ld.local.u32 	%r7122, [%rd5+12];
	// inline asm
	prmt.b32 %r7120, %r7121, %r7122, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7120;
	ld.local.u32 	%r7125, [%rd5+12];
	ld.local.u32 	%r7126, [%rd5+8];
	// inline asm
	prmt.b32 %r7124, %r7125, %r7126, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7124;
	ld.local.u32 	%r7129, [%rd5+8];
	ld.local.u32 	%r7130, [%rd5+4];
	// inline asm
	prmt.b32 %r7128, %r7129, %r7130, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7128;
	ld.local.u32 	%r7133, [%rd5+4];
	ld.local.u32 	%r7134, [%rd5];
	// inline asm
	prmt.b32 %r7132, %r7133, %r7134, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7132;
	ld.local.u32 	%r7137, [%rd5];
	ld.local.u32 	%r7138, [%rd4+12];
	// inline asm
	prmt.b32 %r7136, %r7137, %r7138, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7136;
	ld.local.u32 	%r7141, [%rd4+12];
	ld.local.u32 	%r7142, [%rd4+8];
	// inline asm
	prmt.b32 %r7140, %r7141, %r7142, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7140;
	ld.local.u32 	%r7145, [%rd4+8];
	ld.local.u32 	%r7146, [%rd4+4];
	// inline asm
	prmt.b32 %r7144, %r7145, %r7146, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7144;
	ld.local.u32 	%r7149, [%rd4+4];
	ld.local.u32 	%r7150, [%rd4];
	// inline asm
	prmt.b32 %r7148, %r7149, %r7150, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7148;
	ld.local.u32 	%r7153, [%rd4];
	ld.local.u32 	%r7154, [%rd3+12];
	// inline asm
	prmt.b32 %r7152, %r7153, %r7154, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7152;
	ld.local.u32 	%r7157, [%rd3+12];
	ld.local.u32 	%r7158, [%rd3+8];
	// inline asm
	prmt.b32 %r7156, %r7157, %r7158, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7156;
	ld.local.u32 	%r7161, [%rd3+8];
	ld.local.u32 	%r7162, [%rd3+4];
	// inline asm
	prmt.b32 %r7160, %r7161, %r7162, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7160;
	ld.local.u32 	%r7165, [%rd3+4];
	ld.local.u32 	%r7166, [%rd3];
	// inline asm
	prmt.b32 %r7164, %r7165, %r7166, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7164;
	ld.local.u32 	%r7169, [%rd3];
	ld.local.u32 	%r7170, [%rd2+12];
	// inline asm
	prmt.b32 %r7168, %r7169, %r7170, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7168;
	ld.local.u32 	%r7173, [%rd2+12];
	ld.local.u32 	%r7174, [%rd2+8];
	// inline asm
	prmt.b32 %r7172, %r7173, %r7174, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7172;
	ld.local.u32 	%r7177, [%rd2+8];
	ld.local.u32 	%r7178, [%rd2+4];
	// inline asm
	prmt.b32 %r7176, %r7177, %r7178, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7176;
	ld.local.u32 	%r7181, [%rd2+4];
	ld.local.u32 	%r7182, [%rd2];
	// inline asm
	prmt.b32 %r7180, %r7181, %r7182, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7180;
	ld.local.u32 	%r7185, [%rd2];
	ld.local.u32 	%r7186, [%rd1+12];
	// inline asm
	prmt.b32 %r7184, %r7185, %r7186, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7184;
	ld.local.u32 	%r7189, [%rd1+12];
	ld.local.u32 	%r7190, [%rd1+8];
	// inline asm
	prmt.b32 %r7188, %r7189, %r7190, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7188;
	ld.local.u32 	%r7193, [%rd1+8];
	ld.local.u32 	%r7194, [%rd1+4];
	// inline asm
	prmt.b32 %r7192, %r7193, %r7194, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7192;
	ld.local.u32 	%r7197, [%rd1+4];
	ld.local.u32 	%r7198, [%rd1];
	// inline asm
	prmt.b32 %r7196, %r7197, %r7198, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7196;
	ld.local.u32 	%r7201, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r7200, %r7201, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7200;
	st.local.u32 	[%rd3+4], %r8475;
	st.local.u32 	[%rd3], %r8475;
	st.local.u32 	[%rd2+12], %r8475;
	st.local.u32 	[%rd2+8], %r8475;
	st.local.u32 	[%rd2+4], %r8475;
	st.local.u32 	[%rd2], %r8475;
	st.local.u32 	[%rd1+12], %r8475;
	st.local.u32 	[%rd1+8], %r8475;
	mov.u64 	%rd1168, 0;
	st.local.u32 	[%rd1+4], %rd1168;
	st.local.u32 	[%rd1], %rd1168;
	bra.uni 	BB1_173;

BB1_25:
	setp.eq.s32	%p35, %r3, 10;
	@%p35 bra 	BB1_76;
	bra.uni 	BB1_26;

BB1_76:
	ld.local.u32 	%r3584, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8451, %r8441, %r3584, %r4;
	// inline asm
	ld.local.u32 	%r3587, [%rd8+12];
	ld.local.u32 	%r3588, [%rd8+8];
	// inline asm
	prmt.b32 %r8452, %r3587, %r3588, %r4;
	// inline asm
	ld.local.u32 	%r3591, [%rd8+8];
	ld.local.u32 	%r3592, [%rd8+4];
	// inline asm
	prmt.b32 %r8453, %r3591, %r3592, %r4;
	// inline asm
	ld.local.u32 	%r3595, [%rd8+4];
	ld.local.u32 	%r3596, [%rd8];
	// inline asm
	prmt.b32 %r8446, %r3595, %r3596, %r4;
	// inline asm
	ld.local.u32 	%r3599, [%rd8];
	ld.local.u32 	%r3600, [%rd7+12];
	// inline asm
	prmt.b32 %r8447, %r3599, %r3600, %r4;
	// inline asm
	ld.local.u32 	%r3603, [%rd7+12];
	ld.local.u32 	%r3604, [%rd7+8];
	// inline asm
	prmt.b32 %r8448, %r3603, %r3604, %r4;
	// inline asm
	ld.local.u32 	%r3607, [%rd7+8];
	ld.local.u32 	%r3608, [%rd7+4];
	// inline asm
	prmt.b32 %r8449, %r3607, %r3608, %r4;
	// inline asm
	ld.local.u32 	%r3611, [%rd7+4];
	ld.local.u32 	%r3612, [%rd7];
	// inline asm
	prmt.b32 %r8442, %r3611, %r3612, %r4;
	// inline asm
	ld.local.u32 	%r3615, [%rd7];
	ld.local.u32 	%r3616, [%rd6+12];
	// inline asm
	prmt.b32 %r8443, %r3615, %r3616, %r4;
	// inline asm
	ld.local.u32 	%r3619, [%rd6+12];
	ld.local.u32 	%r3620, [%rd6+8];
	// inline asm
	prmt.b32 %r8444, %r3619, %r3620, %r4;
	// inline asm
	ld.local.u32 	%r3623, [%rd6+8];
	ld.local.u32 	%r3624, [%rd6+4];
	// inline asm
	prmt.b32 %r8445, %r3623, %r3624, %r4;
	// inline asm
	ld.local.u32 	%r3627, [%rd6+4];
	ld.local.u32 	%r3628, [%rd6];
	// inline asm
	prmt.b32 %r3626, %r3627, %r3628, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3626;
	ld.local.u32 	%r3631, [%rd6];
	ld.local.u32 	%r3632, [%rd5+12];
	// inline asm
	prmt.b32 %r3630, %r3631, %r3632, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3630;
	ld.local.u32 	%r3635, [%rd5+12];
	ld.local.u32 	%r3636, [%rd5+8];
	// inline asm
	prmt.b32 %r3634, %r3635, %r3636, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3634;
	ld.local.u32 	%r3639, [%rd5+8];
	ld.local.u32 	%r3640, [%rd5+4];
	// inline asm
	prmt.b32 %r3638, %r3639, %r3640, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3638;
	ld.local.u32 	%r3643, [%rd5+4];
	ld.local.u32 	%r3644, [%rd5];
	// inline asm
	prmt.b32 %r3642, %r3643, %r3644, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3642;
	ld.local.u32 	%r3647, [%rd5];
	ld.local.u32 	%r3648, [%rd4+12];
	// inline asm
	prmt.b32 %r3646, %r3647, %r3648, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3646;
	ld.local.u32 	%r3651, [%rd4+12];
	ld.local.u32 	%r3652, [%rd4+8];
	// inline asm
	prmt.b32 %r3650, %r3651, %r3652, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3650;
	ld.local.u32 	%r3655, [%rd4+8];
	ld.local.u32 	%r3656, [%rd4+4];
	// inline asm
	prmt.b32 %r3654, %r3655, %r3656, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3654;
	ld.local.u32 	%r3659, [%rd4+4];
	ld.local.u32 	%r3660, [%rd4];
	// inline asm
	prmt.b32 %r3658, %r3659, %r3660, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3658;
	ld.local.u32 	%r3663, [%rd4];
	ld.local.u32 	%r3664, [%rd3+12];
	// inline asm
	prmt.b32 %r3662, %r3663, %r3664, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3662;
	ld.local.u32 	%r3667, [%rd3+12];
	ld.local.u32 	%r3668, [%rd3+8];
	// inline asm
	prmt.b32 %r3666, %r3667, %r3668, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3666;
	ld.local.u32 	%r3671, [%rd3+8];
	ld.local.u32 	%r3672, [%rd3+4];
	// inline asm
	prmt.b32 %r3670, %r3671, %r3672, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3670;
	ld.local.u32 	%r3675, [%rd3+4];
	ld.local.u32 	%r3676, [%rd3];
	// inline asm
	prmt.b32 %r3674, %r3675, %r3676, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3674;
	ld.local.u32 	%r3679, [%rd3];
	ld.local.u32 	%r3680, [%rd2+12];
	// inline asm
	prmt.b32 %r3678, %r3679, %r3680, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3678;
	ld.local.u32 	%r3683, [%rd2+12];
	ld.local.u32 	%r3684, [%rd2+8];
	// inline asm
	prmt.b32 %r3682, %r3683, %r3684, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3682;
	ld.local.u32 	%r3687, [%rd2+8];
	ld.local.u32 	%r3688, [%rd2+4];
	// inline asm
	prmt.b32 %r3686, %r3687, %r3688, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3686;
	ld.local.u32 	%r3691, [%rd2+4];
	ld.local.u32 	%r3692, [%rd2];
	// inline asm
	prmt.b32 %r3690, %r3691, %r3692, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3690;
	ld.local.u32 	%r3695, [%rd2];
	ld.local.u32 	%r3696, [%rd1+12];
	// inline asm
	prmt.b32 %r3694, %r3695, %r3696, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3694;
	ld.local.u32 	%r3699, [%rd1+12];
	ld.local.u32 	%r3700, [%rd1+8];
	// inline asm
	prmt.b32 %r3698, %r3699, %r3700, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r3698;
	ld.local.u32 	%r3703, [%rd1+8];
	ld.local.u32 	%r3704, [%rd1+4];
	// inline asm
	prmt.b32 %r3702, %r3703, %r3704, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r3702;
	ld.local.u32 	%r3707, [%rd1+4];
	ld.local.u32 	%r3708, [%rd1];
	// inline asm
	prmt.b32 %r3706, %r3707, %r3708, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r3706;
	ld.local.u32 	%r3711, [%rd1];
	// inline asm
	prmt.b32 %r3710, %r3711, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r3710;
	st.local.u32 	[%rd3+4], %r8441;
	st.local.u32 	[%rd3], %r8441;
	st.local.u32 	[%rd2+12], %r8441;
	st.local.u32 	[%rd2+8], %r8441;
	st.local.u32 	[%rd2+4], %r8441;
	st.local.u32 	[%rd2], %r8441;
	st.local.u32 	[%rd1+12], %r8441;
	st.local.u32 	[%rd1+8], %r8441;
	mov.u64 	%rd120, 0;
	st.local.u32 	[%rd1+4], %rd120;
	st.local.u32 	[%rd1], %rd120;
	mov.u32 	%r8450, %r8441;
	bra.uni 	BB1_81;

BB1_146:
	setp.eq.s32	%p60, %r3, 26;
	@%p60 bra 	BB1_158;
	bra.uni 	BB1_147;

BB1_158:
	ld.local.u32 	%r6237, [%rd2+4];
	ld.local.u32 	%r6238, [%rd2];
	// inline asm
	prmt.b32 %r6236, %r6237, %r6238, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6236;
	ld.local.u32 	%r6241, [%rd2];
	ld.local.u32 	%r6242, [%rd1+12];
	// inline asm
	prmt.b32 %r6240, %r6241, %r6242, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6240;
	ld.local.u32 	%r6245, [%rd1+12];
	ld.local.u32 	%r6246, [%rd1+8];
	// inline asm
	prmt.b32 %r6244, %r6245, %r6246, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6244;
	ld.local.u32 	%r6249, [%rd1+8];
	ld.local.u32 	%r6250, [%rd1+4];
	// inline asm
	prmt.b32 %r6248, %r6249, %r6250, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6248;
	ld.local.u32 	%r6253, [%rd1+4];
	ld.local.u32 	%r6254, [%rd1];
	// inline asm
	prmt.b32 %r6252, %r6253, %r6254, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6252;
	ld.local.u32 	%r6257, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r6256, %r6257, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6256;
	st.local.u32 	[%rd7+4], %r8475;
	st.local.u32 	[%rd7], %r8475;
	st.local.u32 	[%rd6+12], %r8475;
	st.local.u32 	[%rd6+8], %r8475;
	st.local.u32 	[%rd6+4], %r8475;
	st.local.u32 	[%rd6], %r8475;
	st.local.u32 	[%rd5+12], %r8475;
	st.local.u32 	[%rd5+8], %r8475;
	st.local.u32 	[%rd5+4], %r8475;
	st.local.u32 	[%rd5], %r8475;
	st.local.u32 	[%rd4+12], %r8475;
	st.local.u32 	[%rd4+8], %r8475;
	st.local.u32 	[%rd4+4], %r8475;
	st.local.u32 	[%rd4], %r8475;
	st.local.u32 	[%rd3+12], %r8475;
	st.local.u32 	[%rd3+8], %r8475;
	st.local.u32 	[%rd3+4], %r8475;
	st.local.u32 	[%rd3], %r8475;
	st.local.u32 	[%rd2+12], %r8475;
	st.local.u32 	[%rd2+8], %r8475;
	st.local.u32 	[%rd2+4], %r8475;
	st.local.u32 	[%rd2], %r8475;
	st.local.u32 	[%rd1+12], %r8475;
	st.local.u32 	[%rd1+8], %r8475;
	mov.u64 	%rd1152, 0;
	st.local.u32 	[%rd1+4], %rd1152;
	st.local.u32 	[%rd1], %rd1152;
	bra.uni 	BB1_173;

BB1_56:
	setp.eq.s32	%p12, %r3, 26;
	@%p12 bra 	BB1_68;
	bra.uni 	BB1_57;

BB1_68:
	ld.local.u32 	%r1256, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8467, %r8441, %r1256, %r4;
	// inline asm
	ld.local.u32 	%r1259, [%rd8+12];
	ld.local.u32 	%r1260, [%rd8+8];
	// inline asm
	prmt.b32 %r8468, %r1259, %r1260, %r4;
	// inline asm
	ld.local.u32 	%r1263, [%rd8+8];
	ld.local.u32 	%r1264, [%rd8+4];
	// inline asm
	prmt.b32 %r8469, %r1263, %r1264, %r4;
	// inline asm
	ld.local.u32 	%r1267, [%rd8+4];
	ld.local.u32 	%r1268, [%rd8];
	// inline asm
	prmt.b32 %r8462, %r1267, %r1268, %r4;
	// inline asm
	ld.local.u32 	%r1271, [%rd8];
	ld.local.u32 	%r1272, [%rd7+12];
	// inline asm
	prmt.b32 %r8463, %r1271, %r1272, %r4;
	// inline asm
	ld.local.u32 	%r1275, [%rd7+12];
	ld.local.u32 	%r1276, [%rd7+8];
	// inline asm
	prmt.b32 %r8464, %r1275, %r1276, %r4;
	// inline asm
	ld.local.u32 	%r1279, [%rd7+8];
	ld.local.u32 	%r1280, [%rd7+4];
	// inline asm
	prmt.b32 %r8465, %r1279, %r1280, %r4;
	// inline asm
	ld.local.u32 	%r1283, [%rd7+4];
	ld.local.u32 	%r1284, [%rd7];
	// inline asm
	prmt.b32 %r8458, %r1283, %r1284, %r4;
	// inline asm
	ld.local.u32 	%r1287, [%rd7];
	ld.local.u32 	%r1288, [%rd6+12];
	// inline asm
	prmt.b32 %r8459, %r1287, %r1288, %r4;
	// inline asm
	ld.local.u32 	%r1291, [%rd6+12];
	ld.local.u32 	%r1292, [%rd6+8];
	// inline asm
	prmt.b32 %r8460, %r1291, %r1292, %r4;
	// inline asm
	ld.local.u32 	%r1295, [%rd6+8];
	ld.local.u32 	%r1296, [%rd6+4];
	// inline asm
	prmt.b32 %r8461, %r1295, %r1296, %r4;
	// inline asm
	ld.local.u32 	%r1299, [%rd6+4];
	ld.local.u32 	%r1300, [%rd6];
	// inline asm
	prmt.b32 %r8454, %r1299, %r1300, %r4;
	// inline asm
	ld.local.u32 	%r1303, [%rd6];
	ld.local.u32 	%r1304, [%rd5+12];
	// inline asm
	prmt.b32 %r8455, %r1303, %r1304, %r4;
	// inline asm
	ld.local.u32 	%r1307, [%rd5+12];
	ld.local.u32 	%r1308, [%rd5+8];
	// inline asm
	prmt.b32 %r8456, %r1307, %r1308, %r4;
	// inline asm
	ld.local.u32 	%r1311, [%rd5+8];
	ld.local.u32 	%r1312, [%rd5+4];
	// inline asm
	prmt.b32 %r8457, %r1311, %r1312, %r4;
	// inline asm
	ld.local.u32 	%r1315, [%rd5+4];
	ld.local.u32 	%r1316, [%rd5];
	// inline asm
	prmt.b32 %r8450, %r1315, %r1316, %r4;
	// inline asm
	ld.local.u32 	%r1319, [%rd5];
	ld.local.u32 	%r1320, [%rd4+12];
	// inline asm
	prmt.b32 %r8451, %r1319, %r1320, %r4;
	// inline asm
	ld.local.u32 	%r1323, [%rd4+12];
	ld.local.u32 	%r1324, [%rd4+8];
	// inline asm
	prmt.b32 %r8452, %r1323, %r1324, %r4;
	// inline asm
	ld.local.u32 	%r1327, [%rd4+8];
	ld.local.u32 	%r1328, [%rd4+4];
	// inline asm
	prmt.b32 %r8453, %r1327, %r1328, %r4;
	// inline asm
	ld.local.u32 	%r1331, [%rd4+4];
	ld.local.u32 	%r1332, [%rd4];
	// inline asm
	prmt.b32 %r8446, %r1331, %r1332, %r4;
	// inline asm
	ld.local.u32 	%r1335, [%rd4];
	ld.local.u32 	%r1336, [%rd3+12];
	// inline asm
	prmt.b32 %r8447, %r1335, %r1336, %r4;
	// inline asm
	ld.local.u32 	%r1339, [%rd3+12];
	ld.local.u32 	%r1340, [%rd3+8];
	// inline asm
	prmt.b32 %r8448, %r1339, %r1340, %r4;
	// inline asm
	ld.local.u32 	%r1343, [%rd3+8];
	ld.local.u32 	%r1344, [%rd3+4];
	// inline asm
	prmt.b32 %r8449, %r1343, %r1344, %r4;
	// inline asm
	ld.local.u32 	%r1347, [%rd3+4];
	ld.local.u32 	%r1348, [%rd3];
	// inline asm
	prmt.b32 %r8442, %r1347, %r1348, %r4;
	// inline asm
	ld.local.u32 	%r1351, [%rd3];
	ld.local.u32 	%r1352, [%rd2+12];
	// inline asm
	prmt.b32 %r8443, %r1351, %r1352, %r4;
	// inline asm
	ld.local.u32 	%r1355, [%rd2+12];
	ld.local.u32 	%r1356, [%rd2+8];
	// inline asm
	prmt.b32 %r8444, %r1355, %r1356, %r4;
	// inline asm
	ld.local.u32 	%r1359, [%rd2+8];
	ld.local.u32 	%r1360, [%rd2+4];
	// inline asm
	prmt.b32 %r8445, %r1359, %r1360, %r4;
	// inline asm
	ld.local.u32 	%r1363, [%rd2+4];
	ld.local.u32 	%r1364, [%rd2];
	// inline asm
	prmt.b32 %r1362, %r1363, %r1364, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1362;
	ld.local.u32 	%r1367, [%rd2];
	ld.local.u32 	%r1368, [%rd1+12];
	// inline asm
	prmt.b32 %r1366, %r1367, %r1368, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1366;
	ld.local.u32 	%r1371, [%rd1+12];
	ld.local.u32 	%r1372, [%rd1+8];
	// inline asm
	prmt.b32 %r1370, %r1371, %r1372, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1370;
	ld.local.u32 	%r1375, [%rd1+8];
	ld.local.u32 	%r1376, [%rd1+4];
	// inline asm
	prmt.b32 %r1374, %r1375, %r1376, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1374;
	ld.local.u32 	%r1379, [%rd1+4];
	ld.local.u32 	%r1380, [%rd1];
	// inline asm
	prmt.b32 %r1378, %r1379, %r1380, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r1378;
	ld.local.u32 	%r1383, [%rd1];
	// inline asm
	prmt.b32 %r1382, %r1383, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r1382;
	st.local.u32 	[%rd7+4], %r8441;
	st.local.u32 	[%rd7], %r8441;
	st.local.u32 	[%rd6+12], %r8441;
	st.local.u32 	[%rd6+8], %r8441;
	st.local.u32 	[%rd6+4], %r8441;
	st.local.u32 	[%rd6], %r8441;
	st.local.u32 	[%rd5+12], %r8441;
	st.local.u32 	[%rd5+8], %r8441;
	st.local.u32 	[%rd5+4], %r8441;
	st.local.u32 	[%rd5], %r8441;
	st.local.u32 	[%rd4+12], %r8441;
	st.local.u32 	[%rd4+8], %r8441;
	st.local.u32 	[%rd4+4], %r8441;
	st.local.u32 	[%rd4], %r8441;
	st.local.u32 	[%rd3+12], %r8441;
	st.local.u32 	[%rd3+8], %r8441;
	st.local.u32 	[%rd3+4], %r8441;
	st.local.u32 	[%rd3], %r8441;
	st.local.u32 	[%rd2+12], %r8441;
	st.local.u32 	[%rd2+8], %r8441;
	st.local.u32 	[%rd2+4], %r8441;
	st.local.u32 	[%rd2], %r8441;
	st.local.u32 	[%rd1+12], %r8441;
	st.local.u32 	[%rd1+8], %r8441;
	mov.u64 	%rd104, 0;
	st.local.u32 	[%rd1+4], %rd104;
	st.local.u32 	[%rd1], %rd104;
	mov.u32 	%r8466, %r8441;
	bra.uni 	BB1_85;

BB1_107:
	setp.eq.s32	%p89, %r3, 6;
	@%p89 bra 	BB1_168;
	bra.uni 	BB1_108;

BB1_168:
	ld.local.u32 	%r7497, [%rd7+4];
	ld.local.u32 	%r7498, [%rd7];
	// inline asm
	prmt.b32 %r7496, %r7497, %r7498, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7496;
	ld.local.u32 	%r7501, [%rd7];
	ld.local.u32 	%r7502, [%rd6+12];
	// inline asm
	prmt.b32 %r7500, %r7501, %r7502, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7500;
	ld.local.u32 	%r7505, [%rd6+12];
	ld.local.u32 	%r7506, [%rd6+8];
	// inline asm
	prmt.b32 %r7504, %r7505, %r7506, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7504;
	ld.local.u32 	%r7509, [%rd6+8];
	ld.local.u32 	%r7510, [%rd6+4];
	// inline asm
	prmt.b32 %r7508, %r7509, %r7510, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7508;
	ld.local.u32 	%r7513, [%rd6+4];
	ld.local.u32 	%r7514, [%rd6];
	// inline asm
	prmt.b32 %r7512, %r7513, %r7514, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7512;
	ld.local.u32 	%r7517, [%rd6];
	ld.local.u32 	%r7518, [%rd5+12];
	// inline asm
	prmt.b32 %r7516, %r7517, %r7518, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7516;
	ld.local.u32 	%r7521, [%rd5+12];
	ld.local.u32 	%r7522, [%rd5+8];
	// inline asm
	prmt.b32 %r7520, %r7521, %r7522, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7520;
	ld.local.u32 	%r7525, [%rd5+8];
	ld.local.u32 	%r7526, [%rd5+4];
	// inline asm
	prmt.b32 %r7524, %r7525, %r7526, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7524;
	ld.local.u32 	%r7529, [%rd5+4];
	ld.local.u32 	%r7530, [%rd5];
	// inline asm
	prmt.b32 %r7528, %r7529, %r7530, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7528;
	ld.local.u32 	%r7533, [%rd5];
	ld.local.u32 	%r7534, [%rd4+12];
	// inline asm
	prmt.b32 %r7532, %r7533, %r7534, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7532;
	ld.local.u32 	%r7537, [%rd4+12];
	ld.local.u32 	%r7538, [%rd4+8];
	// inline asm
	prmt.b32 %r7536, %r7537, %r7538, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7536;
	ld.local.u32 	%r7541, [%rd4+8];
	ld.local.u32 	%r7542, [%rd4+4];
	// inline asm
	prmt.b32 %r7540, %r7541, %r7542, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7540;
	ld.local.u32 	%r7545, [%rd4+4];
	ld.local.u32 	%r7546, [%rd4];
	// inline asm
	prmt.b32 %r7544, %r7545, %r7546, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7544;
	ld.local.u32 	%r7549, [%rd4];
	ld.local.u32 	%r7550, [%rd3+12];
	// inline asm
	prmt.b32 %r7548, %r7549, %r7550, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7548;
	ld.local.u32 	%r7553, [%rd3+12];
	ld.local.u32 	%r7554, [%rd3+8];
	// inline asm
	prmt.b32 %r7552, %r7553, %r7554, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7552;
	ld.local.u32 	%r7557, [%rd3+8];
	ld.local.u32 	%r7558, [%rd3+4];
	// inline asm
	prmt.b32 %r7556, %r7557, %r7558, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7556;
	ld.local.u32 	%r7561, [%rd3+4];
	ld.local.u32 	%r7562, [%rd3];
	// inline asm
	prmt.b32 %r7560, %r7561, %r7562, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7560;
	ld.local.u32 	%r7565, [%rd3];
	ld.local.u32 	%r7566, [%rd2+12];
	// inline asm
	prmt.b32 %r7564, %r7565, %r7566, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7564;
	ld.local.u32 	%r7569, [%rd2+12];
	ld.local.u32 	%r7570, [%rd2+8];
	// inline asm
	prmt.b32 %r7568, %r7569, %r7570, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7568;
	ld.local.u32 	%r7573, [%rd2+8];
	ld.local.u32 	%r7574, [%rd2+4];
	// inline asm
	prmt.b32 %r7572, %r7573, %r7574, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7572;
	ld.local.u32 	%r7577, [%rd2+4];
	ld.local.u32 	%r7578, [%rd2];
	// inline asm
	prmt.b32 %r7576, %r7577, %r7578, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7576;
	ld.local.u32 	%r7581, [%rd2];
	ld.local.u32 	%r7582, [%rd1+12];
	// inline asm
	prmt.b32 %r7580, %r7581, %r7582, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7580;
	ld.local.u32 	%r7585, [%rd1+12];
	ld.local.u32 	%r7586, [%rd1+8];
	// inline asm
	prmt.b32 %r7584, %r7585, %r7586, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r7584;
	ld.local.u32 	%r7589, [%rd1+8];
	ld.local.u32 	%r7590, [%rd1+4];
	// inline asm
	prmt.b32 %r7588, %r7589, %r7590, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r7588;
	ld.local.u32 	%r7593, [%rd1+4];
	ld.local.u32 	%r7594, [%rd1];
	// inline asm
	prmt.b32 %r7592, %r7593, %r7594, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r7592;
	ld.local.u32 	%r7597, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r7596, %r7597, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r7596;
	st.local.u32 	[%rd2+4], %r8475;
	st.local.u32 	[%rd2], %r8475;
	st.local.u32 	[%rd1+12], %r8475;
	st.local.u32 	[%rd1+8], %r8475;
	mov.u64 	%rd1172, 0;
	st.local.u32 	[%rd1+4], %rd1172;
	st.local.u32 	[%rd1], %rd1172;
	bra.uni 	BB1_173;

BB1_17:
	setp.eq.s32	%p41, %r3, 6;
	@%p41 bra 	BB1_78;
	bra.uni 	BB1_18;

BB1_78:
	ld.local.u32 	%r4206, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8447, %r8441, %r4206, %r4;
	// inline asm
	ld.local.u32 	%r4209, [%rd8+12];
	ld.local.u32 	%r4210, [%rd8+8];
	// inline asm
	prmt.b32 %r8448, %r4209, %r4210, %r4;
	// inline asm
	ld.local.u32 	%r4213, [%rd8+8];
	ld.local.u32 	%r4214, [%rd8+4];
	// inline asm
	prmt.b32 %r8449, %r4213, %r4214, %r4;
	// inline asm
	ld.local.u32 	%r4217, [%rd8+4];
	ld.local.u32 	%r4218, [%rd8];
	// inline asm
	prmt.b32 %r8442, %r4217, %r4218, %r4;
	// inline asm
	ld.local.u32 	%r4221, [%rd8];
	ld.local.u32 	%r4222, [%rd7+12];
	// inline asm
	prmt.b32 %r8443, %r4221, %r4222, %r4;
	// inline asm
	ld.local.u32 	%r4225, [%rd7+12];
	ld.local.u32 	%r4226, [%rd7+8];
	// inline asm
	prmt.b32 %r8444, %r4225, %r4226, %r4;
	// inline asm
	ld.local.u32 	%r4229, [%rd7+8];
	ld.local.u32 	%r4230, [%rd7+4];
	// inline asm
	prmt.b32 %r8445, %r4229, %r4230, %r4;
	// inline asm
	ld.local.u32 	%r4233, [%rd7+4];
	ld.local.u32 	%r4234, [%rd7];
	// inline asm
	prmt.b32 %r4232, %r4233, %r4234, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r4232;
	ld.local.u32 	%r4237, [%rd7];
	ld.local.u32 	%r4238, [%rd6+12];
	// inline asm
	prmt.b32 %r4236, %r4237, %r4238, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r4236;
	ld.local.u32 	%r4241, [%rd6+12];
	ld.local.u32 	%r4242, [%rd6+8];
	// inline asm
	prmt.b32 %r4240, %r4241, %r4242, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r4240;
	ld.local.u32 	%r4245, [%rd6+8];
	ld.local.u32 	%r4246, [%rd6+4];
	// inline asm
	prmt.b32 %r4244, %r4245, %r4246, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r4244;
	ld.local.u32 	%r4249, [%rd6+4];
	ld.local.u32 	%r4250, [%rd6];
	// inline asm
	prmt.b32 %r4248, %r4249, %r4250, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r4248;
	ld.local.u32 	%r4253, [%rd6];
	ld.local.u32 	%r4254, [%rd5+12];
	// inline asm
	prmt.b32 %r4252, %r4253, %r4254, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r4252;
	ld.local.u32 	%r4257, [%rd5+12];
	ld.local.u32 	%r4258, [%rd5+8];
	// inline asm
	prmt.b32 %r4256, %r4257, %r4258, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r4256;
	ld.local.u32 	%r4261, [%rd5+8];
	ld.local.u32 	%r4262, [%rd5+4];
	// inline asm
	prmt.b32 %r4260, %r4261, %r4262, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r4260;
	ld.local.u32 	%r4265, [%rd5+4];
	ld.local.u32 	%r4266, [%rd5];
	// inline asm
	prmt.b32 %r4264, %r4265, %r4266, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r4264;
	ld.local.u32 	%r4269, [%rd5];
	ld.local.u32 	%r4270, [%rd4+12];
	// inline asm
	prmt.b32 %r4268, %r4269, %r4270, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r4268;
	ld.local.u32 	%r4273, [%rd4+12];
	ld.local.u32 	%r4274, [%rd4+8];
	// inline asm
	prmt.b32 %r4272, %r4273, %r4274, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4272;
	ld.local.u32 	%r4277, [%rd4+8];
	ld.local.u32 	%r4278, [%rd4+4];
	// inline asm
	prmt.b32 %r4276, %r4277, %r4278, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4276;
	ld.local.u32 	%r4281, [%rd4+4];
	ld.local.u32 	%r4282, [%rd4];
	// inline asm
	prmt.b32 %r4280, %r4281, %r4282, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4280;
	ld.local.u32 	%r4285, [%rd4];
	ld.local.u32 	%r4286, [%rd3+12];
	// inline asm
	prmt.b32 %r4284, %r4285, %r4286, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4284;
	ld.local.u32 	%r4289, [%rd3+12];
	ld.local.u32 	%r4290, [%rd3+8];
	// inline asm
	prmt.b32 %r4288, %r4289, %r4290, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4288;
	ld.local.u32 	%r4293, [%rd3+8];
	ld.local.u32 	%r4294, [%rd3+4];
	// inline asm
	prmt.b32 %r4292, %r4293, %r4294, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4292;
	ld.local.u32 	%r4297, [%rd3+4];
	ld.local.u32 	%r4298, [%rd3];
	// inline asm
	prmt.b32 %r4296, %r4297, %r4298, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4296;
	ld.local.u32 	%r4301, [%rd3];
	ld.local.u32 	%r4302, [%rd2+12];
	// inline asm
	prmt.b32 %r4300, %r4301, %r4302, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4300;
	ld.local.u32 	%r4305, [%rd2+12];
	ld.local.u32 	%r4306, [%rd2+8];
	// inline asm
	prmt.b32 %r4304, %r4305, %r4306, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4304;
	ld.local.u32 	%r4309, [%rd2+8];
	ld.local.u32 	%r4310, [%rd2+4];
	// inline asm
	prmt.b32 %r4308, %r4309, %r4310, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4308;
	ld.local.u32 	%r4313, [%rd2+4];
	ld.local.u32 	%r4314, [%rd2];
	// inline asm
	prmt.b32 %r4312, %r4313, %r4314, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4312;
	ld.local.u32 	%r4317, [%rd2];
	ld.local.u32 	%r4318, [%rd1+12];
	// inline asm
	prmt.b32 %r4316, %r4317, %r4318, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4316;
	ld.local.u32 	%r4321, [%rd1+12];
	ld.local.u32 	%r4322, [%rd1+8];
	// inline asm
	prmt.b32 %r4320, %r4321, %r4322, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4320;
	ld.local.u32 	%r4325, [%rd1+8];
	ld.local.u32 	%r4326, [%rd1+4];
	// inline asm
	prmt.b32 %r4324, %r4325, %r4326, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4324;
	ld.local.u32 	%r4329, [%rd1+4];
	ld.local.u32 	%r4330, [%rd1];
	// inline asm
	prmt.b32 %r4328, %r4329, %r4330, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r4328;
	ld.local.u32 	%r4333, [%rd1];
	// inline asm
	prmt.b32 %r4332, %r4333, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r4332;
	st.local.u32 	[%rd2+4], %r8441;
	st.local.u32 	[%rd2], %r8441;
	st.local.u32 	[%rd1+12], %r8441;
	st.local.u32 	[%rd1+8], %r8441;
	mov.u64 	%rd124, 0;
	st.local.u32 	[%rd1+4], %rd124;
	st.local.u32 	[%rd1], %rd124;
	mov.u32 	%r8446, %r8441;
	bra.uni 	BB1_80;

BB1_138:
	setp.eq.s32	%p66, %r3, 22;
	@%p66 bra 	BB1_160;
	bra.uni 	BB1_139;

BB1_160:
	ld.local.u32 	%r6361, [%rd3+4];
	ld.local.u32 	%r6362, [%rd3];
	// inline asm
	prmt.b32 %r6360, %r6361, %r6362, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6360;
	ld.local.u32 	%r6365, [%rd3];
	ld.local.u32 	%r6366, [%rd2+12];
	// inline asm
	prmt.b32 %r6364, %r6365, %r6366, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6364;
	ld.local.u32 	%r6369, [%rd2+12];
	ld.local.u32 	%r6370, [%rd2+8];
	// inline asm
	prmt.b32 %r6368, %r6369, %r6370, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6368;
	ld.local.u32 	%r6373, [%rd2+8];
	ld.local.u32 	%r6374, [%rd2+4];
	// inline asm
	prmt.b32 %r6372, %r6373, %r6374, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6372;
	ld.local.u32 	%r6377, [%rd2+4];
	ld.local.u32 	%r6378, [%rd2];
	// inline asm
	prmt.b32 %r6376, %r6377, %r6378, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6376;
	ld.local.u32 	%r6381, [%rd2];
	ld.local.u32 	%r6382, [%rd1+12];
	// inline asm
	prmt.b32 %r6380, %r6381, %r6382, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6380;
	ld.local.u32 	%r6385, [%rd1+12];
	ld.local.u32 	%r6386, [%rd1+8];
	// inline asm
	prmt.b32 %r6384, %r6385, %r6386, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6384;
	ld.local.u32 	%r6389, [%rd1+8];
	ld.local.u32 	%r6390, [%rd1+4];
	// inline asm
	prmt.b32 %r6388, %r6389, %r6390, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6388;
	ld.local.u32 	%r6393, [%rd1+4];
	ld.local.u32 	%r6394, [%rd1];
	// inline asm
	prmt.b32 %r6392, %r6393, %r6394, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6392;
	ld.local.u32 	%r6397, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r6396, %r6397, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6396;
	st.local.u32 	[%rd6+4], %r8475;
	st.local.u32 	[%rd6], %r8475;
	st.local.u32 	[%rd5+12], %r8475;
	st.local.u32 	[%rd5+8], %r8475;
	st.local.u32 	[%rd5+4], %r8475;
	st.local.u32 	[%rd5], %r8475;
	st.local.u32 	[%rd4+12], %r8475;
	st.local.u32 	[%rd4+8], %r8475;
	st.local.u32 	[%rd4+4], %r8475;
	st.local.u32 	[%rd4], %r8475;
	st.local.u32 	[%rd3+12], %r8475;
	st.local.u32 	[%rd3+8], %r8475;
	st.local.u32 	[%rd3+4], %r8475;
	st.local.u32 	[%rd3], %r8475;
	st.local.u32 	[%rd2+12], %r8475;
	st.local.u32 	[%rd2+8], %r8475;
	st.local.u32 	[%rd2+4], %r8475;
	st.local.u32 	[%rd2], %r8475;
	st.local.u32 	[%rd1+12], %r8475;
	st.local.u32 	[%rd1+8], %r8475;
	mov.u64 	%rd1156, 0;
	st.local.u32 	[%rd1+4], %rd1156;
	st.local.u32 	[%rd1], %rd1156;
	bra.uni 	BB1_173;

BB1_48:
	setp.eq.s32	%p18, %r3, 22;
	@%p18 bra 	BB1_70;
	bra.uni 	BB1_49;

BB1_70:
	ld.local.u32 	%r1814, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8463, %r8441, %r1814, %r4;
	// inline asm
	ld.local.u32 	%r1817, [%rd8+12];
	ld.local.u32 	%r1818, [%rd8+8];
	// inline asm
	prmt.b32 %r8464, %r1817, %r1818, %r4;
	// inline asm
	ld.local.u32 	%r1821, [%rd8+8];
	ld.local.u32 	%r1822, [%rd8+4];
	// inline asm
	prmt.b32 %r8465, %r1821, %r1822, %r4;
	// inline asm
	ld.local.u32 	%r1825, [%rd8+4];
	ld.local.u32 	%r1826, [%rd8];
	// inline asm
	prmt.b32 %r8458, %r1825, %r1826, %r4;
	// inline asm
	ld.local.u32 	%r1829, [%rd8];
	ld.local.u32 	%r1830, [%rd7+12];
	// inline asm
	prmt.b32 %r8459, %r1829, %r1830, %r4;
	// inline asm
	ld.local.u32 	%r1833, [%rd7+12];
	ld.local.u32 	%r1834, [%rd7+8];
	// inline asm
	prmt.b32 %r8460, %r1833, %r1834, %r4;
	// inline asm
	ld.local.u32 	%r1837, [%rd7+8];
	ld.local.u32 	%r1838, [%rd7+4];
	// inline asm
	prmt.b32 %r8461, %r1837, %r1838, %r4;
	// inline asm
	ld.local.u32 	%r1841, [%rd7+4];
	ld.local.u32 	%r1842, [%rd7];
	// inline asm
	prmt.b32 %r8454, %r1841, %r1842, %r4;
	// inline asm
	ld.local.u32 	%r1845, [%rd7];
	ld.local.u32 	%r1846, [%rd6+12];
	// inline asm
	prmt.b32 %r8455, %r1845, %r1846, %r4;
	// inline asm
	ld.local.u32 	%r1849, [%rd6+12];
	ld.local.u32 	%r1850, [%rd6+8];
	// inline asm
	prmt.b32 %r8456, %r1849, %r1850, %r4;
	// inline asm
	ld.local.u32 	%r1853, [%rd6+8];
	ld.local.u32 	%r1854, [%rd6+4];
	// inline asm
	prmt.b32 %r8457, %r1853, %r1854, %r4;
	// inline asm
	ld.local.u32 	%r1857, [%rd6+4];
	ld.local.u32 	%r1858, [%rd6];
	// inline asm
	prmt.b32 %r8450, %r1857, %r1858, %r4;
	// inline asm
	ld.local.u32 	%r1861, [%rd6];
	ld.local.u32 	%r1862, [%rd5+12];
	// inline asm
	prmt.b32 %r8451, %r1861, %r1862, %r4;
	// inline asm
	ld.local.u32 	%r1865, [%rd5+12];
	ld.local.u32 	%r1866, [%rd5+8];
	// inline asm
	prmt.b32 %r8452, %r1865, %r1866, %r4;
	// inline asm
	ld.local.u32 	%r1869, [%rd5+8];
	ld.local.u32 	%r1870, [%rd5+4];
	// inline asm
	prmt.b32 %r8453, %r1869, %r1870, %r4;
	// inline asm
	ld.local.u32 	%r1873, [%rd5+4];
	ld.local.u32 	%r1874, [%rd5];
	// inline asm
	prmt.b32 %r8446, %r1873, %r1874, %r4;
	// inline asm
	ld.local.u32 	%r1877, [%rd5];
	ld.local.u32 	%r1878, [%rd4+12];
	// inline asm
	prmt.b32 %r8447, %r1877, %r1878, %r4;
	// inline asm
	ld.local.u32 	%r1881, [%rd4+12];
	ld.local.u32 	%r1882, [%rd4+8];
	// inline asm
	prmt.b32 %r8448, %r1881, %r1882, %r4;
	// inline asm
	ld.local.u32 	%r1885, [%rd4+8];
	ld.local.u32 	%r1886, [%rd4+4];
	// inline asm
	prmt.b32 %r8449, %r1885, %r1886, %r4;
	// inline asm
	ld.local.u32 	%r1889, [%rd4+4];
	ld.local.u32 	%r1890, [%rd4];
	// inline asm
	prmt.b32 %r8442, %r1889, %r1890, %r4;
	// inline asm
	ld.local.u32 	%r1893, [%rd4];
	ld.local.u32 	%r1894, [%rd3+12];
	// inline asm
	prmt.b32 %r8443, %r1893, %r1894, %r4;
	// inline asm
	ld.local.u32 	%r1897, [%rd3+12];
	ld.local.u32 	%r1898, [%rd3+8];
	// inline asm
	prmt.b32 %r8444, %r1897, %r1898, %r4;
	// inline asm
	ld.local.u32 	%r1901, [%rd3+8];
	ld.local.u32 	%r1902, [%rd3+4];
	// inline asm
	prmt.b32 %r8445, %r1901, %r1902, %r4;
	// inline asm
	ld.local.u32 	%r1905, [%rd3+4];
	ld.local.u32 	%r1906, [%rd3];
	// inline asm
	prmt.b32 %r1904, %r1905, %r1906, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1904;
	ld.local.u32 	%r1909, [%rd3];
	ld.local.u32 	%r1910, [%rd2+12];
	// inline asm
	prmt.b32 %r1908, %r1909, %r1910, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1908;
	ld.local.u32 	%r1913, [%rd2+12];
	ld.local.u32 	%r1914, [%rd2+8];
	// inline asm
	prmt.b32 %r1912, %r1913, %r1914, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1912;
	ld.local.u32 	%r1917, [%rd2+8];
	ld.local.u32 	%r1918, [%rd2+4];
	// inline asm
	prmt.b32 %r1916, %r1917, %r1918, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1916;
	ld.local.u32 	%r1921, [%rd2+4];
	ld.local.u32 	%r1922, [%rd2];
	// inline asm
	prmt.b32 %r1920, %r1921, %r1922, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r1920;
	ld.local.u32 	%r1925, [%rd2];
	ld.local.u32 	%r1926, [%rd1+12];
	// inline asm
	prmt.b32 %r1924, %r1925, %r1926, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r1924;
	ld.local.u32 	%r1929, [%rd1+12];
	ld.local.u32 	%r1930, [%rd1+8];
	// inline asm
	prmt.b32 %r1928, %r1929, %r1930, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r1928;
	ld.local.u32 	%r1933, [%rd1+8];
	ld.local.u32 	%r1934, [%rd1+4];
	// inline asm
	prmt.b32 %r1932, %r1933, %r1934, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r1932;
	ld.local.u32 	%r1937, [%rd1+4];
	ld.local.u32 	%r1938, [%rd1];
	// inline asm
	prmt.b32 %r1936, %r1937, %r1938, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r1936;
	ld.local.u32 	%r1941, [%rd1];
	// inline asm
	prmt.b32 %r1940, %r1941, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r1940;
	st.local.u32 	[%rd6+4], %r8441;
	st.local.u32 	[%rd6], %r8441;
	st.local.u32 	[%rd5+12], %r8441;
	st.local.u32 	[%rd5+8], %r8441;
	st.local.u32 	[%rd5+4], %r8441;
	st.local.u32 	[%rd5], %r8441;
	st.local.u32 	[%rd4+12], %r8441;
	st.local.u32 	[%rd4+8], %r8441;
	st.local.u32 	[%rd4+4], %r8441;
	st.local.u32 	[%rd4], %r8441;
	st.local.u32 	[%rd3+12], %r8441;
	st.local.u32 	[%rd3+8], %r8441;
	st.local.u32 	[%rd3+4], %r8441;
	st.local.u32 	[%rd3], %r8441;
	st.local.u32 	[%rd2+12], %r8441;
	st.local.u32 	[%rd2+8], %r8441;
	st.local.u32 	[%rd2+4], %r8441;
	st.local.u32 	[%rd2], %r8441;
	st.local.u32 	[%rd1+12], %r8441;
	st.local.u32 	[%rd1+8], %r8441;
	mov.u64 	%rd108, 0;
	st.local.u32 	[%rd1+4], %rd108;
	st.local.u32 	[%rd1], %rd108;
	mov.u32 	%r8462, %r8441;
	bra.uni 	BB1_84;

BB1_122:
	setp.eq.s32	%p78, %r3, 14;
	@%p78 bra 	BB1_164;
	bra.uni 	BB1_123;

BB1_164:
	ld.local.u32 	%r6801, [%rd5+4];
	ld.local.u32 	%r6802, [%rd5];
	// inline asm
	prmt.b32 %r6800, %r6801, %r6802, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6800;
	ld.local.u32 	%r6805, [%rd5];
	ld.local.u32 	%r6806, [%rd4+12];
	// inline asm
	prmt.b32 %r6804, %r6805, %r6806, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6804;
	ld.local.u32 	%r6809, [%rd4+12];
	ld.local.u32 	%r6810, [%rd4+8];
	// inline asm
	prmt.b32 %r6808, %r6809, %r6810, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6808;
	ld.local.u32 	%r6813, [%rd4+8];
	ld.local.u32 	%r6814, [%rd4+4];
	// inline asm
	prmt.b32 %r6812, %r6813, %r6814, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6812;
	ld.local.u32 	%r6817, [%rd4+4];
	ld.local.u32 	%r6818, [%rd4];
	// inline asm
	prmt.b32 %r6816, %r6817, %r6818, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6816;
	ld.local.u32 	%r6821, [%rd4];
	ld.local.u32 	%r6822, [%rd3+12];
	// inline asm
	prmt.b32 %r6820, %r6821, %r6822, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6820;
	ld.local.u32 	%r6825, [%rd3+12];
	ld.local.u32 	%r6826, [%rd3+8];
	// inline asm
	prmt.b32 %r6824, %r6825, %r6826, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6824;
	ld.local.u32 	%r6829, [%rd3+8];
	ld.local.u32 	%r6830, [%rd3+4];
	// inline asm
	prmt.b32 %r6828, %r6829, %r6830, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6828;
	ld.local.u32 	%r6833, [%rd3+4];
	ld.local.u32 	%r6834, [%rd3];
	// inline asm
	prmt.b32 %r6832, %r6833, %r6834, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6832;
	ld.local.u32 	%r6837, [%rd3];
	ld.local.u32 	%r6838, [%rd2+12];
	// inline asm
	prmt.b32 %r6836, %r6837, %r6838, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6836;
	ld.local.u32 	%r6841, [%rd2+12];
	ld.local.u32 	%r6842, [%rd2+8];
	// inline asm
	prmt.b32 %r6840, %r6841, %r6842, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6840;
	ld.local.u32 	%r6845, [%rd2+8];
	ld.local.u32 	%r6846, [%rd2+4];
	// inline asm
	prmt.b32 %r6844, %r6845, %r6846, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6844;
	ld.local.u32 	%r6849, [%rd2+4];
	ld.local.u32 	%r6850, [%rd2];
	// inline asm
	prmt.b32 %r6848, %r6849, %r6850, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r6848;
	ld.local.u32 	%r6853, [%rd2];
	ld.local.u32 	%r6854, [%rd1+12];
	// inline asm
	prmt.b32 %r6852, %r6853, %r6854, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r6852;
	ld.local.u32 	%r6857, [%rd1+12];
	ld.local.u32 	%r6858, [%rd1+8];
	// inline asm
	prmt.b32 %r6856, %r6857, %r6858, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r6856;
	ld.local.u32 	%r6861, [%rd1+8];
	ld.local.u32 	%r6862, [%rd1+4];
	// inline asm
	prmt.b32 %r6860, %r6861, %r6862, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r6860;
	ld.local.u32 	%r6865, [%rd1+4];
	ld.local.u32 	%r6866, [%rd1];
	// inline asm
	prmt.b32 %r6864, %r6865, %r6866, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r6864;
	ld.local.u32 	%r6869, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r6868, %r6869, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r6868;
	st.local.u32 	[%rd4+4], %r8475;
	st.local.u32 	[%rd4], %r8475;
	st.local.u32 	[%rd3+12], %r8475;
	st.local.u32 	[%rd3+8], %r8475;
	st.local.u32 	[%rd3+4], %r8475;
	st.local.u32 	[%rd3], %r8475;
	st.local.u32 	[%rd2+12], %r8475;
	st.local.u32 	[%rd2+8], %r8475;
	st.local.u32 	[%rd2+4], %r8475;
	st.local.u32 	[%rd2], %r8475;
	st.local.u32 	[%rd1+12], %r8475;
	st.local.u32 	[%rd1+8], %r8475;
	mov.u64 	%rd1164, 0;
	st.local.u32 	[%rd1+4], %rd1164;
	st.local.u32 	[%rd1], %rd1164;
	bra.uni 	BB1_173;

BB1_32:
	setp.eq.s32	%p30, %r3, 14;
	@%p30 bra 	BB1_74;
	bra.uni 	BB1_33;

BB1_74:
	ld.local.u32 	%r2978, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8455, %r8441, %r2978, %r4;
	// inline asm
	ld.local.u32 	%r2981, [%rd8+12];
	ld.local.u32 	%r2982, [%rd8+8];
	// inline asm
	prmt.b32 %r8456, %r2981, %r2982, %r4;
	// inline asm
	ld.local.u32 	%r2985, [%rd8+8];
	ld.local.u32 	%r2986, [%rd8+4];
	// inline asm
	prmt.b32 %r8457, %r2985, %r2986, %r4;
	// inline asm
	ld.local.u32 	%r2989, [%rd8+4];
	ld.local.u32 	%r2990, [%rd8];
	// inline asm
	prmt.b32 %r8450, %r2989, %r2990, %r4;
	// inline asm
	ld.local.u32 	%r2993, [%rd8];
	ld.local.u32 	%r2994, [%rd7+12];
	// inline asm
	prmt.b32 %r8451, %r2993, %r2994, %r4;
	// inline asm
	ld.local.u32 	%r2997, [%rd7+12];
	ld.local.u32 	%r2998, [%rd7+8];
	// inline asm
	prmt.b32 %r8452, %r2997, %r2998, %r4;
	// inline asm
	ld.local.u32 	%r3001, [%rd7+8];
	ld.local.u32 	%r3002, [%rd7+4];
	// inline asm
	prmt.b32 %r8453, %r3001, %r3002, %r4;
	// inline asm
	ld.local.u32 	%r3005, [%rd7+4];
	ld.local.u32 	%r3006, [%rd7];
	// inline asm
	prmt.b32 %r8446, %r3005, %r3006, %r4;
	// inline asm
	ld.local.u32 	%r3009, [%rd7];
	ld.local.u32 	%r3010, [%rd6+12];
	// inline asm
	prmt.b32 %r8447, %r3009, %r3010, %r4;
	// inline asm
	ld.local.u32 	%r3013, [%rd6+12];
	ld.local.u32 	%r3014, [%rd6+8];
	// inline asm
	prmt.b32 %r8448, %r3013, %r3014, %r4;
	// inline asm
	ld.local.u32 	%r3017, [%rd6+8];
	ld.local.u32 	%r3018, [%rd6+4];
	// inline asm
	prmt.b32 %r8449, %r3017, %r3018, %r4;
	// inline asm
	ld.local.u32 	%r3021, [%rd6+4];
	ld.local.u32 	%r3022, [%rd6];
	// inline asm
	prmt.b32 %r8442, %r3021, %r3022, %r4;
	// inline asm
	ld.local.u32 	%r3025, [%rd6];
	ld.local.u32 	%r3026, [%rd5+12];
	// inline asm
	prmt.b32 %r8443, %r3025, %r3026, %r4;
	// inline asm
	ld.local.u32 	%r3029, [%rd5+12];
	ld.local.u32 	%r3030, [%rd5+8];
	// inline asm
	prmt.b32 %r8444, %r3029, %r3030, %r4;
	// inline asm
	ld.local.u32 	%r3033, [%rd5+8];
	ld.local.u32 	%r3034, [%rd5+4];
	// inline asm
	prmt.b32 %r8445, %r3033, %r3034, %r4;
	// inline asm
	ld.local.u32 	%r3037, [%rd5+4];
	ld.local.u32 	%r3038, [%rd5];
	// inline asm
	prmt.b32 %r3036, %r3037, %r3038, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3036;
	ld.local.u32 	%r3041, [%rd5];
	ld.local.u32 	%r3042, [%rd4+12];
	// inline asm
	prmt.b32 %r3040, %r3041, %r3042, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3040;
	ld.local.u32 	%r3045, [%rd4+12];
	ld.local.u32 	%r3046, [%rd4+8];
	// inline asm
	prmt.b32 %r3044, %r3045, %r3046, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3044;
	ld.local.u32 	%r3049, [%rd4+8];
	ld.local.u32 	%r3050, [%rd4+4];
	// inline asm
	prmt.b32 %r3048, %r3049, %r3050, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3048;
	ld.local.u32 	%r3053, [%rd4+4];
	ld.local.u32 	%r3054, [%rd4];
	// inline asm
	prmt.b32 %r3052, %r3053, %r3054, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3052;
	ld.local.u32 	%r3057, [%rd4];
	ld.local.u32 	%r3058, [%rd3+12];
	// inline asm
	prmt.b32 %r3056, %r3057, %r3058, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3056;
	ld.local.u32 	%r3061, [%rd3+12];
	ld.local.u32 	%r3062, [%rd3+8];
	// inline asm
	prmt.b32 %r3060, %r3061, %r3062, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3060;
	ld.local.u32 	%r3065, [%rd3+8];
	ld.local.u32 	%r3066, [%rd3+4];
	// inline asm
	prmt.b32 %r3064, %r3065, %r3066, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3064;
	ld.local.u32 	%r3069, [%rd3+4];
	ld.local.u32 	%r3070, [%rd3];
	// inline asm
	prmt.b32 %r3068, %r3069, %r3070, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3068;
	ld.local.u32 	%r3073, [%rd3];
	ld.local.u32 	%r3074, [%rd2+12];
	// inline asm
	prmt.b32 %r3072, %r3073, %r3074, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3072;
	ld.local.u32 	%r3077, [%rd2+12];
	ld.local.u32 	%r3078, [%rd2+8];
	// inline asm
	prmt.b32 %r3076, %r3077, %r3078, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3076;
	ld.local.u32 	%r3081, [%rd2+8];
	ld.local.u32 	%r3082, [%rd2+4];
	// inline asm
	prmt.b32 %r3080, %r3081, %r3082, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3080;
	ld.local.u32 	%r3085, [%rd2+4];
	ld.local.u32 	%r3086, [%rd2];
	// inline asm
	prmt.b32 %r3084, %r3085, %r3086, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3084;
	ld.local.u32 	%r3089, [%rd2];
	ld.local.u32 	%r3090, [%rd1+12];
	// inline asm
	prmt.b32 %r3088, %r3089, %r3090, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3088;
	ld.local.u32 	%r3093, [%rd1+12];
	ld.local.u32 	%r3094, [%rd1+8];
	// inline asm
	prmt.b32 %r3092, %r3093, %r3094, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3092;
	ld.local.u32 	%r3097, [%rd1+8];
	ld.local.u32 	%r3098, [%rd1+4];
	// inline asm
	prmt.b32 %r3096, %r3097, %r3098, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3096;
	ld.local.u32 	%r3101, [%rd1+4];
	ld.local.u32 	%r3102, [%rd1];
	// inline asm
	prmt.b32 %r3100, %r3101, %r3102, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3100;
	ld.local.u32 	%r3105, [%rd1];
	// inline asm
	prmt.b32 %r3104, %r3105, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3104;
	st.local.u32 	[%rd4+4], %r8441;
	st.local.u32 	[%rd4], %r8441;
	st.local.u32 	[%rd3+12], %r8441;
	st.local.u32 	[%rd3+8], %r8441;
	st.local.u32 	[%rd3+4], %r8441;
	st.local.u32 	[%rd3], %r8441;
	st.local.u32 	[%rd2+12], %r8441;
	st.local.u32 	[%rd2+8], %r8441;
	st.local.u32 	[%rd2+4], %r8441;
	st.local.u32 	[%rd2], %r8441;
	st.local.u32 	[%rd1+12], %r8441;
	st.local.u32 	[%rd1+8], %r8441;
	mov.u64 	%rd116, 0;
	st.local.u32 	[%rd1+4], %rd116;
	st.local.u32 	[%rd1], %rd116;
	mov.u32 	%r8454, %r8441;
	bra.uni 	BB1_82;

BB1_153:
	setp.eq.s32	%p55, %r3, 30;
	@%p55 bra 	BB1_156;
	bra.uni 	BB1_154;

BB1_156:
	ld.local.u32 	%r6177, [%rd1+4];
	ld.local.u32 	%r6178, [%rd1];
	// inline asm
	prmt.b32 %r6176, %r6177, %r6178, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6176;
	ld.local.u32 	%r6181, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r6180, %r6181, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6180;
	st.local.u32 	[%rd8+4], %r8475;
	st.local.u32 	[%rd8], %r8475;
	st.local.u32 	[%rd7+12], %r8475;
	st.local.u32 	[%rd7+8], %r8475;
	st.local.u32 	[%rd7+4], %r8475;
	st.local.u32 	[%rd7], %r8475;
	st.local.u32 	[%rd6+12], %r8475;
	st.local.u32 	[%rd6+8], %r8475;
	st.local.u32 	[%rd6+4], %r8475;
	st.local.u32 	[%rd6], %r8475;
	st.local.u32 	[%rd5+12], %r8475;
	st.local.u32 	[%rd5+8], %r8475;
	st.local.u32 	[%rd5+4], %r8475;
	st.local.u32 	[%rd5], %r8475;
	st.local.u32 	[%rd4+12], %r8475;
	st.local.u32 	[%rd4+8], %r8475;
	st.local.u32 	[%rd4+4], %r8475;
	st.local.u32 	[%rd4], %r8475;
	st.local.u32 	[%rd3+12], %r8475;
	st.local.u32 	[%rd3+8], %r8475;
	st.local.u32 	[%rd3+4], %r8475;
	st.local.u32 	[%rd3], %r8475;
	st.local.u32 	[%rd2+12], %r8475;
	st.local.u32 	[%rd2+8], %r8475;
	st.local.u32 	[%rd2+4], %r8475;
	st.local.u32 	[%rd2], %r8475;
	st.local.u32 	[%rd1+12], %r8475;
	st.local.u32 	[%rd1+8], %r8475;
	mov.u64 	%rd1148, 0;
	st.local.u32 	[%rd1+4], %rd1148;
	st.local.u32 	[%rd1], %rd1148;
	bra.uni 	BB1_173;

BB1_63:
	setp.eq.s32	%p7, %r3, 30;
	@%p7 bra 	BB1_66;
	bra.uni 	BB1_64;

BB1_66:
	ld.local.u32 	%r714, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8471, %r8441, %r714, %r4;
	// inline asm
	ld.local.u32 	%r717, [%rd8+12];
	ld.local.u32 	%r718, [%rd8+8];
	// inline asm
	prmt.b32 %r8472, %r717, %r718, %r4;
	// inline asm
	ld.local.u32 	%r721, [%rd8+8];
	ld.local.u32 	%r722, [%rd8+4];
	// inline asm
	prmt.b32 %r8473, %r721, %r722, %r4;
	// inline asm
	ld.local.u32 	%r725, [%rd8+4];
	ld.local.u32 	%r726, [%rd8];
	// inline asm
	prmt.b32 %r8466, %r725, %r726, %r4;
	// inline asm
	ld.local.u32 	%r729, [%rd8];
	ld.local.u32 	%r730, [%rd7+12];
	// inline asm
	prmt.b32 %r8467, %r729, %r730, %r4;
	// inline asm
	ld.local.u32 	%r733, [%rd7+12];
	ld.local.u32 	%r734, [%rd7+8];
	// inline asm
	prmt.b32 %r8468, %r733, %r734, %r4;
	// inline asm
	ld.local.u32 	%r737, [%rd7+8];
	ld.local.u32 	%r738, [%rd7+4];
	// inline asm
	prmt.b32 %r8469, %r737, %r738, %r4;
	// inline asm
	ld.local.u32 	%r741, [%rd7+4];
	ld.local.u32 	%r742, [%rd7];
	// inline asm
	prmt.b32 %r8462, %r741, %r742, %r4;
	// inline asm
	ld.local.u32 	%r745, [%rd7];
	ld.local.u32 	%r746, [%rd6+12];
	// inline asm
	prmt.b32 %r8463, %r745, %r746, %r4;
	// inline asm
	ld.local.u32 	%r749, [%rd6+12];
	ld.local.u32 	%r750, [%rd6+8];
	// inline asm
	prmt.b32 %r8464, %r749, %r750, %r4;
	// inline asm
	ld.local.u32 	%r753, [%rd6+8];
	ld.local.u32 	%r754, [%rd6+4];
	// inline asm
	prmt.b32 %r8465, %r753, %r754, %r4;
	// inline asm
	ld.local.u32 	%r757, [%rd6+4];
	ld.local.u32 	%r758, [%rd6];
	// inline asm
	prmt.b32 %r8458, %r757, %r758, %r4;
	// inline asm
	ld.local.u32 	%r761, [%rd6];
	ld.local.u32 	%r762, [%rd5+12];
	// inline asm
	prmt.b32 %r8459, %r761, %r762, %r4;
	// inline asm
	ld.local.u32 	%r765, [%rd5+12];
	ld.local.u32 	%r766, [%rd5+8];
	// inline asm
	prmt.b32 %r8460, %r765, %r766, %r4;
	// inline asm
	ld.local.u32 	%r769, [%rd5+8];
	ld.local.u32 	%r770, [%rd5+4];
	// inline asm
	prmt.b32 %r8461, %r769, %r770, %r4;
	// inline asm
	ld.local.u32 	%r773, [%rd5+4];
	ld.local.u32 	%r774, [%rd5];
	// inline asm
	prmt.b32 %r8454, %r773, %r774, %r4;
	// inline asm
	ld.local.u32 	%r777, [%rd5];
	ld.local.u32 	%r778, [%rd4+12];
	// inline asm
	prmt.b32 %r8455, %r777, %r778, %r4;
	// inline asm
	ld.local.u32 	%r781, [%rd4+12];
	ld.local.u32 	%r782, [%rd4+8];
	// inline asm
	prmt.b32 %r8456, %r781, %r782, %r4;
	// inline asm
	ld.local.u32 	%r785, [%rd4+8];
	ld.local.u32 	%r786, [%rd4+4];
	// inline asm
	prmt.b32 %r8457, %r785, %r786, %r4;
	// inline asm
	ld.local.u32 	%r789, [%rd4+4];
	ld.local.u32 	%r790, [%rd4];
	// inline asm
	prmt.b32 %r8450, %r789, %r790, %r4;
	// inline asm
	ld.local.u32 	%r793, [%rd4];
	ld.local.u32 	%r794, [%rd3+12];
	// inline asm
	prmt.b32 %r8451, %r793, %r794, %r4;
	// inline asm
	ld.local.u32 	%r797, [%rd3+12];
	ld.local.u32 	%r798, [%rd3+8];
	// inline asm
	prmt.b32 %r8452, %r797, %r798, %r4;
	// inline asm
	ld.local.u32 	%r801, [%rd3+8];
	ld.local.u32 	%r802, [%rd3+4];
	// inline asm
	prmt.b32 %r8453, %r801, %r802, %r4;
	// inline asm
	ld.local.u32 	%r805, [%rd3+4];
	ld.local.u32 	%r806, [%rd3];
	// inline asm
	prmt.b32 %r8446, %r805, %r806, %r4;
	// inline asm
	ld.local.u32 	%r809, [%rd3];
	ld.local.u32 	%r810, [%rd2+12];
	// inline asm
	prmt.b32 %r8447, %r809, %r810, %r4;
	// inline asm
	ld.local.u32 	%r813, [%rd2+12];
	ld.local.u32 	%r814, [%rd2+8];
	// inline asm
	prmt.b32 %r8448, %r813, %r814, %r4;
	// inline asm
	ld.local.u32 	%r817, [%rd2+8];
	ld.local.u32 	%r818, [%rd2+4];
	// inline asm
	prmt.b32 %r8449, %r817, %r818, %r4;
	// inline asm
	ld.local.u32 	%r821, [%rd2+4];
	ld.local.u32 	%r822, [%rd2];
	// inline asm
	prmt.b32 %r8442, %r821, %r822, %r4;
	// inline asm
	ld.local.u32 	%r825, [%rd2];
	ld.local.u32 	%r826, [%rd1+12];
	// inline asm
	prmt.b32 %r8443, %r825, %r826, %r4;
	// inline asm
	ld.local.u32 	%r829, [%rd1+12];
	ld.local.u32 	%r830, [%rd1+8];
	// inline asm
	prmt.b32 %r8444, %r829, %r830, %r4;
	// inline asm
	ld.local.u32 	%r833, [%rd1+8];
	ld.local.u32 	%r834, [%rd1+4];
	// inline asm
	prmt.b32 %r8445, %r833, %r834, %r4;
	// inline asm
	ld.local.u32 	%r837, [%rd1+4];
	ld.local.u32 	%r838, [%rd1];
	// inline asm
	prmt.b32 %r836, %r837, %r838, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r836;
	ld.local.u32 	%r841, [%rd1];
	// inline asm
	prmt.b32 %r840, %r841, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r840;
	st.local.u32 	[%rd8+4], %r8441;
	st.local.u32 	[%rd8], %r8441;
	st.local.u32 	[%rd7+12], %r8441;
	st.local.u32 	[%rd7+8], %r8441;
	st.local.u32 	[%rd7+4], %r8441;
	st.local.u32 	[%rd7], %r8441;
	st.local.u32 	[%rd6+12], %r8441;
	st.local.u32 	[%rd6+8], %r8441;
	st.local.u32 	[%rd6+4], %r8441;
	st.local.u32 	[%rd6], %r8441;
	st.local.u32 	[%rd5+12], %r8441;
	st.local.u32 	[%rd5+8], %r8441;
	st.local.u32 	[%rd5+4], %r8441;
	st.local.u32 	[%rd5], %r8441;
	st.local.u32 	[%rd4+12], %r8441;
	st.local.u32 	[%rd4+8], %r8441;
	st.local.u32 	[%rd4+4], %r8441;
	st.local.u32 	[%rd4], %r8441;
	st.local.u32 	[%rd3+12], %r8441;
	st.local.u32 	[%rd3+8], %r8441;
	st.local.u32 	[%rd3+4], %r8441;
	st.local.u32 	[%rd3], %r8441;
	st.local.u32 	[%rd2+12], %r8441;
	st.local.u32 	[%rd2+8], %r8441;
	st.local.u32 	[%rd2+4], %r8441;
	st.local.u32 	[%rd2], %r8441;
	st.local.u32 	[%rd1+12], %r8441;
	st.local.u32 	[%rd1+8], %r8441;
	mov.u64 	%rd100, 0;
	st.local.u32 	[%rd1+4], %rd100;
	st.local.u32 	[%rd1], %rd100;
	mov.u32 	%r8470, %r8441;
	bra.uni 	BB1_90;

BB1_98:
	setp.eq.s32	%p97, %r3, 1;
	@%p97 bra 	BB1_99;
	bra.uni 	BB1_172;

BB1_99:
	ld.local.u32 	%r8062, [%rd8+8];
	ld.local.u32 	%r8063, [%rd8+4];
	// inline asm
	prmt.b32 %r8061, %r8062, %r8063, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r8061;
	ld.local.u32 	%r8066, [%rd8+4];
	ld.local.u32 	%r8067, [%rd8];
	// inline asm
	prmt.b32 %r8065, %r8066, %r8067, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r8065;
	ld.local.u32 	%r8070, [%rd8];
	ld.local.u32 	%r8071, [%rd7+12];
	// inline asm
	prmt.b32 %r8069, %r8070, %r8071, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r8069;
	ld.local.u32 	%r8074, [%rd7+12];
	ld.local.u32 	%r8075, [%rd7+8];
	// inline asm
	prmt.b32 %r8073, %r8074, %r8075, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r8073;
	ld.local.u32 	%r8078, [%rd7+8];
	ld.local.u32 	%r8079, [%rd7+4];
	// inline asm
	prmt.b32 %r8077, %r8078, %r8079, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r8077;
	ld.local.u32 	%r8082, [%rd7+4];
	ld.local.u32 	%r8083, [%rd7];
	// inline asm
	prmt.b32 %r8081, %r8082, %r8083, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r8081;
	ld.local.u32 	%r8086, [%rd7];
	ld.local.u32 	%r8087, [%rd6+12];
	// inline asm
	prmt.b32 %r8085, %r8086, %r8087, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r8085;
	ld.local.u32 	%r8090, [%rd6+12];
	ld.local.u32 	%r8091, [%rd6+8];
	// inline asm
	prmt.b32 %r8089, %r8090, %r8091, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r8089;
	ld.local.u32 	%r8094, [%rd6+8];
	ld.local.u32 	%r8095, [%rd6+4];
	// inline asm
	prmt.b32 %r8093, %r8094, %r8095, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r8093;
	ld.local.u32 	%r8098, [%rd6+4];
	ld.local.u32 	%r8099, [%rd6];
	// inline asm
	prmt.b32 %r8097, %r8098, %r8099, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r8097;
	ld.local.u32 	%r8102, [%rd6];
	ld.local.u32 	%r8103, [%rd5+12];
	// inline asm
	prmt.b32 %r8101, %r8102, %r8103, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r8101;
	ld.local.u32 	%r8106, [%rd5+12];
	ld.local.u32 	%r8107, [%rd5+8];
	// inline asm
	prmt.b32 %r8105, %r8106, %r8107, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r8105;
	ld.local.u32 	%r8110, [%rd5+8];
	ld.local.u32 	%r8111, [%rd5+4];
	// inline asm
	prmt.b32 %r8109, %r8110, %r8111, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r8109;
	ld.local.u32 	%r8114, [%rd5+4];
	ld.local.u32 	%r8115, [%rd5];
	// inline asm
	prmt.b32 %r8113, %r8114, %r8115, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r8113;
	ld.local.u32 	%r8118, [%rd5];
	ld.local.u32 	%r8119, [%rd4+12];
	// inline asm
	prmt.b32 %r8117, %r8118, %r8119, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r8117;
	ld.local.u32 	%r8122, [%rd4+12];
	ld.local.u32 	%r8123, [%rd4+8];
	// inline asm
	prmt.b32 %r8121, %r8122, %r8123, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r8121;
	ld.local.u32 	%r8126, [%rd4+8];
	ld.local.u32 	%r8127, [%rd4+4];
	// inline asm
	prmt.b32 %r8125, %r8126, %r8127, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r8125;
	ld.local.u32 	%r8130, [%rd4+4];
	ld.local.u32 	%r8131, [%rd4];
	// inline asm
	prmt.b32 %r8129, %r8130, %r8131, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r8129;
	ld.local.u32 	%r8134, [%rd4];
	ld.local.u32 	%r8135, [%rd3+12];
	// inline asm
	prmt.b32 %r8133, %r8134, %r8135, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r8133;
	ld.local.u32 	%r8138, [%rd3+12];
	ld.local.u32 	%r8139, [%rd3+8];
	// inline asm
	prmt.b32 %r8137, %r8138, %r8139, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r8137;
	ld.local.u32 	%r8142, [%rd3+8];
	ld.local.u32 	%r8143, [%rd3+4];
	// inline asm
	prmt.b32 %r8141, %r8142, %r8143, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r8141;
	ld.local.u32 	%r8146, [%rd3+4];
	ld.local.u32 	%r8147, [%rd3];
	// inline asm
	prmt.b32 %r8145, %r8146, %r8147, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r8145;
	ld.local.u32 	%r8150, [%rd3];
	ld.local.u32 	%r8151, [%rd2+12];
	// inline asm
	prmt.b32 %r8149, %r8150, %r8151, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r8149;
	ld.local.u32 	%r8154, [%rd2+12];
	ld.local.u32 	%r8155, [%rd2+8];
	// inline asm
	prmt.b32 %r8153, %r8154, %r8155, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r8153;
	ld.local.u32 	%r8158, [%rd2+8];
	ld.local.u32 	%r8159, [%rd2+4];
	// inline asm
	prmt.b32 %r8157, %r8158, %r8159, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r8157;
	ld.local.u32 	%r8162, [%rd2+4];
	ld.local.u32 	%r8163, [%rd2];
	// inline asm
	prmt.b32 %r8161, %r8162, %r8163, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r8161;
	ld.local.u32 	%r8166, [%rd2];
	ld.local.u32 	%r8167, [%rd1+12];
	// inline asm
	prmt.b32 %r8165, %r8166, %r8167, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r8165;
	ld.local.u32 	%r8170, [%rd1+12];
	ld.local.u32 	%r8171, [%rd1+8];
	// inline asm
	prmt.b32 %r8169, %r8170, %r8171, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r8169;
	ld.local.u32 	%r8174, [%rd1+8];
	ld.local.u32 	%r8175, [%rd1+4];
	// inline asm
	prmt.b32 %r8173, %r8174, %r8175, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r8173;
	ld.local.u32 	%r8178, [%rd1+4];
	ld.local.u32 	%r8179, [%rd1];
	// inline asm
	prmt.b32 %r8177, %r8178, %r8179, %r4;
	// inline asm
	st.local.u32 	[%rd1+8], %r8177;
	ld.local.u32 	%r8182, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r8181, %r8182, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd1+4], %r8181;
	st.local.u32 	[%rd1], %r8475;
	bra.uni 	BB1_173;

BB1_7:
	setp.eq.s32	%p49, %r3, 1;
	@%p49 bra 	BB1_8;
	bra.uni 	BB1_88;

BB1_8:
	ld.local.u32 	%r5006, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8444, %r8441, %r5006, %r4;
	// inline asm
	ld.local.u32 	%r5009, [%rd8+12];
	ld.local.u32 	%r5010, [%rd8+8];
	// inline asm
	prmt.b32 %r8445, %r5009, %r5010, %r4;
	// inline asm
	ld.local.u32 	%r5013, [%rd8+8];
	ld.local.u32 	%r5014, [%rd8+4];
	// inline asm
	prmt.b32 %r5012, %r5013, %r5014, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r5012;
	ld.local.u32 	%r5017, [%rd8+4];
	ld.local.u32 	%r5018, [%rd8];
	// inline asm
	prmt.b32 %r5016, %r5017, %r5018, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r5016;
	ld.local.u32 	%r5021, [%rd8];
	ld.local.u32 	%r5022, [%rd7+12];
	// inline asm
	prmt.b32 %r5020, %r5021, %r5022, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r5020;
	ld.local.u32 	%r5025, [%rd7+12];
	ld.local.u32 	%r5026, [%rd7+8];
	// inline asm
	prmt.b32 %r5024, %r5025, %r5026, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r5024;
	ld.local.u32 	%r5029, [%rd7+8];
	ld.local.u32 	%r5030, [%rd7+4];
	// inline asm
	prmt.b32 %r5028, %r5029, %r5030, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r5028;
	ld.local.u32 	%r5033, [%rd7+4];
	ld.local.u32 	%r5034, [%rd7];
	// inline asm
	prmt.b32 %r5032, %r5033, %r5034, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r5032;
	ld.local.u32 	%r5037, [%rd7];
	ld.local.u32 	%r5038, [%rd6+12];
	// inline asm
	prmt.b32 %r5036, %r5037, %r5038, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r5036;
	ld.local.u32 	%r5041, [%rd6+12];
	ld.local.u32 	%r5042, [%rd6+8];
	// inline asm
	prmt.b32 %r5040, %r5041, %r5042, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r5040;
	ld.local.u32 	%r5045, [%rd6+8];
	ld.local.u32 	%r5046, [%rd6+4];
	// inline asm
	prmt.b32 %r5044, %r5045, %r5046, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r5044;
	ld.local.u32 	%r5049, [%rd6+4];
	ld.local.u32 	%r5050, [%rd6];
	// inline asm
	prmt.b32 %r5048, %r5049, %r5050, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r5048;
	ld.local.u32 	%r5053, [%rd6];
	ld.local.u32 	%r5054, [%rd5+12];
	// inline asm
	prmt.b32 %r5052, %r5053, %r5054, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r5052;
	ld.local.u32 	%r5057, [%rd5+12];
	ld.local.u32 	%r5058, [%rd5+8];
	// inline asm
	prmt.b32 %r5056, %r5057, %r5058, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r5056;
	ld.local.u32 	%r5061, [%rd5+8];
	ld.local.u32 	%r5062, [%rd5+4];
	// inline asm
	prmt.b32 %r5060, %r5061, %r5062, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r5060;
	ld.local.u32 	%r5065, [%rd5+4];
	ld.local.u32 	%r5066, [%rd5];
	// inline asm
	prmt.b32 %r5064, %r5065, %r5066, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r5064;
	ld.local.u32 	%r5069, [%rd5];
	ld.local.u32 	%r5070, [%rd4+12];
	// inline asm
	prmt.b32 %r5068, %r5069, %r5070, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r5068;
	ld.local.u32 	%r5073, [%rd4+12];
	ld.local.u32 	%r5074, [%rd4+8];
	// inline asm
	prmt.b32 %r5072, %r5073, %r5074, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r5072;
	ld.local.u32 	%r5077, [%rd4+8];
	ld.local.u32 	%r5078, [%rd4+4];
	// inline asm
	prmt.b32 %r5076, %r5077, %r5078, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r5076;
	ld.local.u32 	%r5081, [%rd4+4];
	ld.local.u32 	%r5082, [%rd4];
	// inline asm
	prmt.b32 %r5080, %r5081, %r5082, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r5080;
	ld.local.u32 	%r5085, [%rd4];
	ld.local.u32 	%r5086, [%rd3+12];
	// inline asm
	prmt.b32 %r5084, %r5085, %r5086, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r5084;
	ld.local.u32 	%r5089, [%rd3+12];
	ld.local.u32 	%r5090, [%rd3+8];
	// inline asm
	prmt.b32 %r5088, %r5089, %r5090, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r5088;
	ld.local.u32 	%r5093, [%rd3+8];
	ld.local.u32 	%r5094, [%rd3+4];
	// inline asm
	prmt.b32 %r5092, %r5093, %r5094, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r5092;
	ld.local.u32 	%r5097, [%rd3+4];
	ld.local.u32 	%r5098, [%rd3];
	// inline asm
	prmt.b32 %r5096, %r5097, %r5098, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r5096;
	ld.local.u32 	%r5101, [%rd3];
	ld.local.u32 	%r5102, [%rd2+12];
	// inline asm
	prmt.b32 %r5100, %r5101, %r5102, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r5100;
	ld.local.u32 	%r5105, [%rd2+12];
	ld.local.u32 	%r5106, [%rd2+8];
	// inline asm
	prmt.b32 %r5104, %r5105, %r5106, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r5104;
	ld.local.u32 	%r5109, [%rd2+8];
	ld.local.u32 	%r5110, [%rd2+4];
	// inline asm
	prmt.b32 %r5108, %r5109, %r5110, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r5108;
	ld.local.u32 	%r5113, [%rd2+4];
	ld.local.u32 	%r5114, [%rd2];
	// inline asm
	prmt.b32 %r5112, %r5113, %r5114, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r5112;
	ld.local.u32 	%r5117, [%rd2];
	ld.local.u32 	%r5118, [%rd1+12];
	// inline asm
	prmt.b32 %r5116, %r5117, %r5118, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r5116;
	ld.local.u32 	%r5121, [%rd1+12];
	ld.local.u32 	%r5122, [%rd1+8];
	// inline asm
	prmt.b32 %r5120, %r5121, %r5122, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r5120;
	ld.local.u32 	%r5125, [%rd1+8];
	ld.local.u32 	%r5126, [%rd1+4];
	// inline asm
	prmt.b32 %r5124, %r5125, %r5126, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r5124;
	ld.local.u32 	%r5129, [%rd1+4];
	ld.local.u32 	%r5130, [%rd1];
	// inline asm
	prmt.b32 %r5128, %r5129, %r5130, %r4;
	// inline asm
	st.local.u32 	[%rd1+8], %r5128;
	ld.local.u32 	%r5133, [%rd1];
	// inline asm
	prmt.b32 %r5132, %r5133, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd1+4], %r5132;
	st.local.u32 	[%rd1], %r8441;
	mov.u32 	%r8442, %r8441;
	mov.u32 	%r8443, %r8441;
	bra.uni 	BB1_12;

BB1_129:
	setp.eq.s32	%p74, %r3, 17;
	@%p74 bra 	BB1_130;
	bra.uni 	BB1_172;

BB1_130:
	ld.local.u32 	%r6606, [%rd4+8];
	ld.local.u32 	%r6607, [%rd4+4];
	// inline asm
	prmt.b32 %r6605, %r6606, %r6607, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6605;
	ld.local.u32 	%r6610, [%rd4+4];
	ld.local.u32 	%r6611, [%rd4];
	// inline asm
	prmt.b32 %r6609, %r6610, %r6611, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6609;
	ld.local.u32 	%r6614, [%rd4];
	ld.local.u32 	%r6615, [%rd3+12];
	// inline asm
	prmt.b32 %r6613, %r6614, %r6615, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6613;
	ld.local.u32 	%r6618, [%rd3+12];
	ld.local.u32 	%r6619, [%rd3+8];
	// inline asm
	prmt.b32 %r6617, %r6618, %r6619, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6617;
	ld.local.u32 	%r6622, [%rd3+8];
	ld.local.u32 	%r6623, [%rd3+4];
	// inline asm
	prmt.b32 %r6621, %r6622, %r6623, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6621;
	ld.local.u32 	%r6626, [%rd3+4];
	ld.local.u32 	%r6627, [%rd3];
	// inline asm
	prmt.b32 %r6625, %r6626, %r6627, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6625;
	ld.local.u32 	%r6630, [%rd3];
	ld.local.u32 	%r6631, [%rd2+12];
	// inline asm
	prmt.b32 %r6629, %r6630, %r6631, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6629;
	ld.local.u32 	%r6634, [%rd2+12];
	ld.local.u32 	%r6635, [%rd2+8];
	// inline asm
	prmt.b32 %r6633, %r6634, %r6635, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6633;
	ld.local.u32 	%r6638, [%rd2+8];
	ld.local.u32 	%r6639, [%rd2+4];
	// inline asm
	prmt.b32 %r6637, %r6638, %r6639, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6637;
	ld.local.u32 	%r6642, [%rd2+4];
	ld.local.u32 	%r6643, [%rd2];
	// inline asm
	prmt.b32 %r6641, %r6642, %r6643, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6641;
	ld.local.u32 	%r6646, [%rd2];
	ld.local.u32 	%r6647, [%rd1+12];
	// inline asm
	prmt.b32 %r6645, %r6646, %r6647, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6645;
	ld.local.u32 	%r6650, [%rd1+12];
	ld.local.u32 	%r6651, [%rd1+8];
	// inline asm
	prmt.b32 %r6649, %r6650, %r6651, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6649;
	ld.local.u32 	%r6654, [%rd1+8];
	ld.local.u32 	%r6655, [%rd1+4];
	// inline asm
	prmt.b32 %r6653, %r6654, %r6655, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r6653;
	ld.local.u32 	%r6658, [%rd1+4];
	ld.local.u32 	%r6659, [%rd1];
	// inline asm
	prmt.b32 %r6657, %r6658, %r6659, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r6657;
	ld.local.u32 	%r6662, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r6661, %r6662, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r6661;
	st.local.u32 	[%rd5], %r8475;
	st.local.u32 	[%rd4+12], %r8475;
	st.local.u32 	[%rd4+8], %r8475;
	st.local.u32 	[%rd4+4], %r8475;
	st.local.u32 	[%rd4], %r8475;
	st.local.u32 	[%rd3+12], %r8475;
	st.local.u32 	[%rd3+8], %r8475;
	st.local.u32 	[%rd3+4], %r8475;
	st.local.u32 	[%rd3], %r8475;
	st.local.u32 	[%rd2+12], %r8475;
	st.local.u32 	[%rd2+8], %r8475;
	st.local.u32 	[%rd2+4], %r8475;
	st.local.u32 	[%rd2], %r8475;
	st.local.u32 	[%rd1+12], %r8475;
	st.local.u32 	[%rd1+8], %r8475;
	mov.u64 	%rd1161, 0;
	st.local.u32 	[%rd1+4], %rd1161;
	st.local.u32 	[%rd1], %rd1161;
	bra.uni 	BB1_173;

BB1_39:
	setp.eq.s32	%p26, %r3, 17;
	@%p26 bra 	BB1_40;
	bra.uni 	BB1_88;

BB1_40:
	ld.local.u32 	%r2534, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8460, %r8441, %r2534, %r4;
	// inline asm
	ld.local.u32 	%r2537, [%rd8+12];
	ld.local.u32 	%r2538, [%rd8+8];
	// inline asm
	prmt.b32 %r8461, %r2537, %r2538, %r4;
	// inline asm
	ld.local.u32 	%r2541, [%rd8+8];
	ld.local.u32 	%r2542, [%rd8+4];
	// inline asm
	prmt.b32 %r8454, %r2541, %r2542, %r4;
	// inline asm
	ld.local.u32 	%r2545, [%rd8+4];
	ld.local.u32 	%r2546, [%rd8];
	// inline asm
	prmt.b32 %r8455, %r2545, %r2546, %r4;
	// inline asm
	ld.local.u32 	%r2549, [%rd8];
	ld.local.u32 	%r2550, [%rd7+12];
	// inline asm
	prmt.b32 %r8456, %r2549, %r2550, %r4;
	// inline asm
	ld.local.u32 	%r2553, [%rd7+12];
	ld.local.u32 	%r2554, [%rd7+8];
	// inline asm
	prmt.b32 %r8457, %r2553, %r2554, %r4;
	// inline asm
	ld.local.u32 	%r2557, [%rd7+8];
	ld.local.u32 	%r2558, [%rd7+4];
	// inline asm
	prmt.b32 %r8450, %r2557, %r2558, %r4;
	// inline asm
	ld.local.u32 	%r2561, [%rd7+4];
	ld.local.u32 	%r2562, [%rd7];
	// inline asm
	prmt.b32 %r8451, %r2561, %r2562, %r4;
	// inline asm
	ld.local.u32 	%r2565, [%rd7];
	ld.local.u32 	%r2566, [%rd6+12];
	// inline asm
	prmt.b32 %r8452, %r2565, %r2566, %r4;
	// inline asm
	ld.local.u32 	%r2569, [%rd6+12];
	ld.local.u32 	%r2570, [%rd6+8];
	// inline asm
	prmt.b32 %r8453, %r2569, %r2570, %r4;
	// inline asm
	ld.local.u32 	%r2573, [%rd6+8];
	ld.local.u32 	%r2574, [%rd6+4];
	// inline asm
	prmt.b32 %r8446, %r2573, %r2574, %r4;
	// inline asm
	ld.local.u32 	%r2577, [%rd6+4];
	ld.local.u32 	%r2578, [%rd6];
	// inline asm
	prmt.b32 %r8447, %r2577, %r2578, %r4;
	// inline asm
	ld.local.u32 	%r2581, [%rd6];
	ld.local.u32 	%r2582, [%rd5+12];
	// inline asm
	prmt.b32 %r8448, %r2581, %r2582, %r4;
	// inline asm
	ld.local.u32 	%r2585, [%rd5+12];
	ld.local.u32 	%r2586, [%rd5+8];
	// inline asm
	prmt.b32 %r8449, %r2585, %r2586, %r4;
	// inline asm
	ld.local.u32 	%r2589, [%rd5+8];
	ld.local.u32 	%r2590, [%rd5+4];
	// inline asm
	prmt.b32 %r8442, %r2589, %r2590, %r4;
	// inline asm
	ld.local.u32 	%r2593, [%rd5+4];
	ld.local.u32 	%r2594, [%rd5];
	// inline asm
	prmt.b32 %r8443, %r2593, %r2594, %r4;
	// inline asm
	ld.local.u32 	%r2597, [%rd5];
	ld.local.u32 	%r2598, [%rd4+12];
	// inline asm
	prmt.b32 %r8444, %r2597, %r2598, %r4;
	// inline asm
	ld.local.u32 	%r2601, [%rd4+12];
	ld.local.u32 	%r2602, [%rd4+8];
	// inline asm
	prmt.b32 %r8445, %r2601, %r2602, %r4;
	// inline asm
	ld.local.u32 	%r2605, [%rd4+8];
	ld.local.u32 	%r2606, [%rd4+4];
	// inline asm
	prmt.b32 %r2604, %r2605, %r2606, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2604;
	ld.local.u32 	%r2609, [%rd4+4];
	ld.local.u32 	%r2610, [%rd4];
	// inline asm
	prmt.b32 %r2608, %r2609, %r2610, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2608;
	ld.local.u32 	%r2613, [%rd4];
	ld.local.u32 	%r2614, [%rd3+12];
	// inline asm
	prmt.b32 %r2612, %r2613, %r2614, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2612;
	ld.local.u32 	%r2617, [%rd3+12];
	ld.local.u32 	%r2618, [%rd3+8];
	// inline asm
	prmt.b32 %r2616, %r2617, %r2618, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2616;
	ld.local.u32 	%r2621, [%rd3+8];
	ld.local.u32 	%r2622, [%rd3+4];
	// inline asm
	prmt.b32 %r2620, %r2621, %r2622, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2620;
	ld.local.u32 	%r2625, [%rd3+4];
	ld.local.u32 	%r2626, [%rd3];
	// inline asm
	prmt.b32 %r2624, %r2625, %r2626, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2624;
	ld.local.u32 	%r2629, [%rd3];
	ld.local.u32 	%r2630, [%rd2+12];
	// inline asm
	prmt.b32 %r2628, %r2629, %r2630, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2628;
	ld.local.u32 	%r2633, [%rd2+12];
	ld.local.u32 	%r2634, [%rd2+8];
	// inline asm
	prmt.b32 %r2632, %r2633, %r2634, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2632;
	ld.local.u32 	%r2637, [%rd2+8];
	ld.local.u32 	%r2638, [%rd2+4];
	// inline asm
	prmt.b32 %r2636, %r2637, %r2638, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2636;
	ld.local.u32 	%r2641, [%rd2+4];
	ld.local.u32 	%r2642, [%rd2];
	// inline asm
	prmt.b32 %r2640, %r2641, %r2642, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2640;
	ld.local.u32 	%r2645, [%rd2];
	ld.local.u32 	%r2646, [%rd1+12];
	// inline asm
	prmt.b32 %r2644, %r2645, %r2646, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2644;
	ld.local.u32 	%r2649, [%rd1+12];
	ld.local.u32 	%r2650, [%rd1+8];
	// inline asm
	prmt.b32 %r2648, %r2649, %r2650, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r2648;
	ld.local.u32 	%r2653, [%rd1+8];
	ld.local.u32 	%r2654, [%rd1+4];
	// inline asm
	prmt.b32 %r2652, %r2653, %r2654, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r2652;
	ld.local.u32 	%r2657, [%rd1+4];
	ld.local.u32 	%r2658, [%rd1];
	// inline asm
	prmt.b32 %r2656, %r2657, %r2658, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r2656;
	ld.local.u32 	%r2661, [%rd1];
	// inline asm
	prmt.b32 %r2660, %r2661, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r2660;
	st.local.u32 	[%rd5], %r8441;
	st.local.u32 	[%rd4+12], %r8441;
	st.local.u32 	[%rd4+8], %r8441;
	st.local.u32 	[%rd4+4], %r8441;
	st.local.u32 	[%rd4], %r8441;
	st.local.u32 	[%rd3+12], %r8441;
	st.local.u32 	[%rd3+8], %r8441;
	st.local.u32 	[%rd3+4], %r8441;
	st.local.u32 	[%rd3], %r8441;
	st.local.u32 	[%rd2+12], %r8441;
	st.local.u32 	[%rd2+8], %r8441;
	st.local.u32 	[%rd2+4], %r8441;
	st.local.u32 	[%rd2], %r8441;
	st.local.u32 	[%rd1+12], %r8441;
	st.local.u32 	[%rd1+8], %r8441;
	mov.u64 	%rd113, 0;
	st.local.u32 	[%rd1+4], %rd113;
	st.local.u32 	[%rd1], %rd113;
	mov.u32 	%r8458, %r8441;
	mov.u32 	%r8459, %r8441;
	bra.uni 	BB1_83;

BB1_113:
	setp.eq.s32	%p86, %r3, 9;
	@%p86 bra 	BB1_114;
	bra.uni 	BB1_172;

BB1_114:
	ld.local.u32 	%r7206, [%rd6+8];
	ld.local.u32 	%r7207, [%rd6+4];
	// inline asm
	prmt.b32 %r7205, %r7206, %r7207, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7205;
	ld.local.u32 	%r7210, [%rd6+4];
	ld.local.u32 	%r7211, [%rd6];
	// inline asm
	prmt.b32 %r7209, %r7210, %r7211, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7209;
	ld.local.u32 	%r7214, [%rd6];
	ld.local.u32 	%r7215, [%rd5+12];
	// inline asm
	prmt.b32 %r7213, %r7214, %r7215, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7213;
	ld.local.u32 	%r7218, [%rd5+12];
	ld.local.u32 	%r7219, [%rd5+8];
	// inline asm
	prmt.b32 %r7217, %r7218, %r7219, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7217;
	ld.local.u32 	%r7222, [%rd5+8];
	ld.local.u32 	%r7223, [%rd5+4];
	// inline asm
	prmt.b32 %r7221, %r7222, %r7223, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7221;
	ld.local.u32 	%r7226, [%rd5+4];
	ld.local.u32 	%r7227, [%rd5];
	// inline asm
	prmt.b32 %r7225, %r7226, %r7227, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7225;
	ld.local.u32 	%r7230, [%rd5];
	ld.local.u32 	%r7231, [%rd4+12];
	// inline asm
	prmt.b32 %r7229, %r7230, %r7231, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7229;
	ld.local.u32 	%r7234, [%rd4+12];
	ld.local.u32 	%r7235, [%rd4+8];
	// inline asm
	prmt.b32 %r7233, %r7234, %r7235, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7233;
	ld.local.u32 	%r7238, [%rd4+8];
	ld.local.u32 	%r7239, [%rd4+4];
	// inline asm
	prmt.b32 %r7237, %r7238, %r7239, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7237;
	ld.local.u32 	%r7242, [%rd4+4];
	ld.local.u32 	%r7243, [%rd4];
	// inline asm
	prmt.b32 %r7241, %r7242, %r7243, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7241;
	ld.local.u32 	%r7246, [%rd4];
	ld.local.u32 	%r7247, [%rd3+12];
	// inline asm
	prmt.b32 %r7245, %r7246, %r7247, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7245;
	ld.local.u32 	%r7250, [%rd3+12];
	ld.local.u32 	%r7251, [%rd3+8];
	// inline asm
	prmt.b32 %r7249, %r7250, %r7251, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7249;
	ld.local.u32 	%r7254, [%rd3+8];
	ld.local.u32 	%r7255, [%rd3+4];
	// inline asm
	prmt.b32 %r7253, %r7254, %r7255, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7253;
	ld.local.u32 	%r7258, [%rd3+4];
	ld.local.u32 	%r7259, [%rd3];
	// inline asm
	prmt.b32 %r7257, %r7258, %r7259, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7257;
	ld.local.u32 	%r7262, [%rd3];
	ld.local.u32 	%r7263, [%rd2+12];
	// inline asm
	prmt.b32 %r7261, %r7262, %r7263, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7261;
	ld.local.u32 	%r7266, [%rd2+12];
	ld.local.u32 	%r7267, [%rd2+8];
	// inline asm
	prmt.b32 %r7265, %r7266, %r7267, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7265;
	ld.local.u32 	%r7270, [%rd2+8];
	ld.local.u32 	%r7271, [%rd2+4];
	// inline asm
	prmt.b32 %r7269, %r7270, %r7271, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7269;
	ld.local.u32 	%r7274, [%rd2+4];
	ld.local.u32 	%r7275, [%rd2];
	// inline asm
	prmt.b32 %r7273, %r7274, %r7275, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7273;
	ld.local.u32 	%r7278, [%rd2];
	ld.local.u32 	%r7279, [%rd1+12];
	// inline asm
	prmt.b32 %r7277, %r7278, %r7279, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7277;
	ld.local.u32 	%r7282, [%rd1+12];
	ld.local.u32 	%r7283, [%rd1+8];
	// inline asm
	prmt.b32 %r7281, %r7282, %r7283, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7281;
	ld.local.u32 	%r7286, [%rd1+8];
	ld.local.u32 	%r7287, [%rd1+4];
	// inline asm
	prmt.b32 %r7285, %r7286, %r7287, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7285;
	ld.local.u32 	%r7290, [%rd1+4];
	ld.local.u32 	%r7291, [%rd1];
	// inline asm
	prmt.b32 %r7289, %r7290, %r7291, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7289;
	ld.local.u32 	%r7294, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r7293, %r7294, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r7293;
	st.local.u32 	[%rd3], %r8475;
	st.local.u32 	[%rd2+12], %r8475;
	st.local.u32 	[%rd2+8], %r8475;
	st.local.u32 	[%rd2+4], %r8475;
	st.local.u32 	[%rd2], %r8475;
	st.local.u32 	[%rd1+12], %r8475;
	st.local.u32 	[%rd1+8], %r8475;
	mov.u64 	%rd1169, 0;
	st.local.u32 	[%rd1+4], %rd1169;
	st.local.u32 	[%rd1], %rd1169;
	bra.uni 	BB1_173;

BB1_23:
	setp.eq.s32	%p38, %r3, 9;
	@%p38 bra 	BB1_24;
	bra.uni 	BB1_88;

BB1_24:
	ld.local.u32 	%r3738, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8452, %r8441, %r3738, %r4;
	// inline asm
	ld.local.u32 	%r3741, [%rd8+12];
	ld.local.u32 	%r3742, [%rd8+8];
	// inline asm
	prmt.b32 %r8453, %r3741, %r3742, %r4;
	// inline asm
	ld.local.u32 	%r3745, [%rd8+8];
	ld.local.u32 	%r3746, [%rd8+4];
	// inline asm
	prmt.b32 %r8446, %r3745, %r3746, %r4;
	// inline asm
	ld.local.u32 	%r3749, [%rd8+4];
	ld.local.u32 	%r3750, [%rd8];
	// inline asm
	prmt.b32 %r8447, %r3749, %r3750, %r4;
	// inline asm
	ld.local.u32 	%r3753, [%rd8];
	ld.local.u32 	%r3754, [%rd7+12];
	// inline asm
	prmt.b32 %r8448, %r3753, %r3754, %r4;
	// inline asm
	ld.local.u32 	%r3757, [%rd7+12];
	ld.local.u32 	%r3758, [%rd7+8];
	// inline asm
	prmt.b32 %r8449, %r3757, %r3758, %r4;
	// inline asm
	ld.local.u32 	%r3761, [%rd7+8];
	ld.local.u32 	%r3762, [%rd7+4];
	// inline asm
	prmt.b32 %r8442, %r3761, %r3762, %r4;
	// inline asm
	ld.local.u32 	%r3765, [%rd7+4];
	ld.local.u32 	%r3766, [%rd7];
	// inline asm
	prmt.b32 %r8443, %r3765, %r3766, %r4;
	// inline asm
	ld.local.u32 	%r3769, [%rd7];
	ld.local.u32 	%r3770, [%rd6+12];
	// inline asm
	prmt.b32 %r8444, %r3769, %r3770, %r4;
	// inline asm
	ld.local.u32 	%r3773, [%rd6+12];
	ld.local.u32 	%r3774, [%rd6+8];
	// inline asm
	prmt.b32 %r8445, %r3773, %r3774, %r4;
	// inline asm
	ld.local.u32 	%r3777, [%rd6+8];
	ld.local.u32 	%r3778, [%rd6+4];
	// inline asm
	prmt.b32 %r3776, %r3777, %r3778, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3776;
	ld.local.u32 	%r3781, [%rd6+4];
	ld.local.u32 	%r3782, [%rd6];
	// inline asm
	prmt.b32 %r3780, %r3781, %r3782, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3780;
	ld.local.u32 	%r3785, [%rd6];
	ld.local.u32 	%r3786, [%rd5+12];
	// inline asm
	prmt.b32 %r3784, %r3785, %r3786, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3784;
	ld.local.u32 	%r3789, [%rd5+12];
	ld.local.u32 	%r3790, [%rd5+8];
	// inline asm
	prmt.b32 %r3788, %r3789, %r3790, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3788;
	ld.local.u32 	%r3793, [%rd5+8];
	ld.local.u32 	%r3794, [%rd5+4];
	// inline asm
	prmt.b32 %r3792, %r3793, %r3794, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3792;
	ld.local.u32 	%r3797, [%rd5+4];
	ld.local.u32 	%r3798, [%rd5];
	// inline asm
	prmt.b32 %r3796, %r3797, %r3798, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3796;
	ld.local.u32 	%r3801, [%rd5];
	ld.local.u32 	%r3802, [%rd4+12];
	// inline asm
	prmt.b32 %r3800, %r3801, %r3802, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3800;
	ld.local.u32 	%r3805, [%rd4+12];
	ld.local.u32 	%r3806, [%rd4+8];
	// inline asm
	prmt.b32 %r3804, %r3805, %r3806, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3804;
	ld.local.u32 	%r3809, [%rd4+8];
	ld.local.u32 	%r3810, [%rd4+4];
	// inline asm
	prmt.b32 %r3808, %r3809, %r3810, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3808;
	ld.local.u32 	%r3813, [%rd4+4];
	ld.local.u32 	%r3814, [%rd4];
	// inline asm
	prmt.b32 %r3812, %r3813, %r3814, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3812;
	ld.local.u32 	%r3817, [%rd4];
	ld.local.u32 	%r3818, [%rd3+12];
	// inline asm
	prmt.b32 %r3816, %r3817, %r3818, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3816;
	ld.local.u32 	%r3821, [%rd3+12];
	ld.local.u32 	%r3822, [%rd3+8];
	// inline asm
	prmt.b32 %r3820, %r3821, %r3822, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3820;
	ld.local.u32 	%r3825, [%rd3+8];
	ld.local.u32 	%r3826, [%rd3+4];
	// inline asm
	prmt.b32 %r3824, %r3825, %r3826, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3824;
	ld.local.u32 	%r3829, [%rd3+4];
	ld.local.u32 	%r3830, [%rd3];
	// inline asm
	prmt.b32 %r3828, %r3829, %r3830, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3828;
	ld.local.u32 	%r3833, [%rd3];
	ld.local.u32 	%r3834, [%rd2+12];
	// inline asm
	prmt.b32 %r3832, %r3833, %r3834, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3832;
	ld.local.u32 	%r3837, [%rd2+12];
	ld.local.u32 	%r3838, [%rd2+8];
	// inline asm
	prmt.b32 %r3836, %r3837, %r3838, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3836;
	ld.local.u32 	%r3841, [%rd2+8];
	ld.local.u32 	%r3842, [%rd2+4];
	// inline asm
	prmt.b32 %r3840, %r3841, %r3842, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3840;
	ld.local.u32 	%r3845, [%rd2+4];
	ld.local.u32 	%r3846, [%rd2];
	// inline asm
	prmt.b32 %r3844, %r3845, %r3846, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3844;
	ld.local.u32 	%r3849, [%rd2];
	ld.local.u32 	%r3850, [%rd1+12];
	// inline asm
	prmt.b32 %r3848, %r3849, %r3850, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r3848;
	ld.local.u32 	%r3853, [%rd1+12];
	ld.local.u32 	%r3854, [%rd1+8];
	// inline asm
	prmt.b32 %r3852, %r3853, %r3854, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r3852;
	ld.local.u32 	%r3857, [%rd1+8];
	ld.local.u32 	%r3858, [%rd1+4];
	// inline asm
	prmt.b32 %r3856, %r3857, %r3858, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r3856;
	ld.local.u32 	%r3861, [%rd1+4];
	ld.local.u32 	%r3862, [%rd1];
	// inline asm
	prmt.b32 %r3860, %r3861, %r3862, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r3860;
	ld.local.u32 	%r3865, [%rd1];
	// inline asm
	prmt.b32 %r3864, %r3865, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r3864;
	st.local.u32 	[%rd3], %r8441;
	st.local.u32 	[%rd2+12], %r8441;
	st.local.u32 	[%rd2+8], %r8441;
	st.local.u32 	[%rd2+4], %r8441;
	st.local.u32 	[%rd2], %r8441;
	st.local.u32 	[%rd1+12], %r8441;
	st.local.u32 	[%rd1+8], %r8441;
	mov.u64 	%rd121, 0;
	st.local.u32 	[%rd1+4], %rd121;
	st.local.u32 	[%rd1], %rd121;
	mov.u32 	%r8450, %r8441;
	mov.u32 	%r8451, %r8441;
	bra.uni 	BB1_81;

BB1_144:
	setp.eq.s32	%p63, %r3, 25;
	@%p63 bra 	BB1_145;
	bra.uni 	BB1_172;

BB1_145:
	ld.local.u32 	%r6262, [%rd2+8];
	ld.local.u32 	%r6263, [%rd2+4];
	// inline asm
	prmt.b32 %r6261, %r6262, %r6263, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6261;
	ld.local.u32 	%r6266, [%rd2+4];
	ld.local.u32 	%r6267, [%rd2];
	// inline asm
	prmt.b32 %r6265, %r6266, %r6267, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6265;
	ld.local.u32 	%r6270, [%rd2];
	ld.local.u32 	%r6271, [%rd1+12];
	// inline asm
	prmt.b32 %r6269, %r6270, %r6271, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6269;
	ld.local.u32 	%r6274, [%rd1+12];
	ld.local.u32 	%r6275, [%rd1+8];
	// inline asm
	prmt.b32 %r6273, %r6274, %r6275, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6273;
	ld.local.u32 	%r6278, [%rd1+8];
	ld.local.u32 	%r6279, [%rd1+4];
	// inline asm
	prmt.b32 %r6277, %r6278, %r6279, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6277;
	ld.local.u32 	%r6282, [%rd1+4];
	ld.local.u32 	%r6283, [%rd1];
	// inline asm
	prmt.b32 %r6281, %r6282, %r6283, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6281;
	ld.local.u32 	%r6286, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r6285, %r6286, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6285;
	st.local.u32 	[%rd7], %r8475;
	st.local.u32 	[%rd6+12], %r8475;
	st.local.u32 	[%rd6+8], %r8475;
	st.local.u32 	[%rd6+4], %r8475;
	st.local.u32 	[%rd6], %r8475;
	st.local.u32 	[%rd5+12], %r8475;
	st.local.u32 	[%rd5+8], %r8475;
	st.local.u32 	[%rd5+4], %r8475;
	st.local.u32 	[%rd5], %r8475;
	st.local.u32 	[%rd4+12], %r8475;
	st.local.u32 	[%rd4+8], %r8475;
	st.local.u32 	[%rd4+4], %r8475;
	st.local.u32 	[%rd4], %r8475;
	st.local.u32 	[%rd3+12], %r8475;
	st.local.u32 	[%rd3+8], %r8475;
	st.local.u32 	[%rd3+4], %r8475;
	st.local.u32 	[%rd3], %r8475;
	st.local.u32 	[%rd2+12], %r8475;
	st.local.u32 	[%rd2+8], %r8475;
	st.local.u32 	[%rd2+4], %r8475;
	st.local.u32 	[%rd2], %r8475;
	st.local.u32 	[%rd1+12], %r8475;
	st.local.u32 	[%rd1+8], %r8475;
	mov.u64 	%rd1153, 0;
	st.local.u32 	[%rd1+4], %rd1153;
	st.local.u32 	[%rd1], %rd1153;
	bra.uni 	BB1_173;

BB1_54:
	setp.eq.s32	%p15, %r3, 25;
	@%p15 bra 	BB1_55;
	bra.uni 	BB1_88;

BB1_55:
	ld.local.u32 	%r1394, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8468, %r8441, %r1394, %r4;
	// inline asm
	ld.local.u32 	%r1397, [%rd8+12];
	ld.local.u32 	%r1398, [%rd8+8];
	// inline asm
	prmt.b32 %r8469, %r1397, %r1398, %r4;
	// inline asm
	ld.local.u32 	%r1401, [%rd8+8];
	ld.local.u32 	%r1402, [%rd8+4];
	// inline asm
	prmt.b32 %r8462, %r1401, %r1402, %r4;
	// inline asm
	ld.local.u32 	%r1405, [%rd8+4];
	ld.local.u32 	%r1406, [%rd8];
	// inline asm
	prmt.b32 %r8463, %r1405, %r1406, %r4;
	// inline asm
	ld.local.u32 	%r1409, [%rd8];
	ld.local.u32 	%r1410, [%rd7+12];
	// inline asm
	prmt.b32 %r8464, %r1409, %r1410, %r4;
	// inline asm
	ld.local.u32 	%r1413, [%rd7+12];
	ld.local.u32 	%r1414, [%rd7+8];
	// inline asm
	prmt.b32 %r8465, %r1413, %r1414, %r4;
	// inline asm
	ld.local.u32 	%r1417, [%rd7+8];
	ld.local.u32 	%r1418, [%rd7+4];
	// inline asm
	prmt.b32 %r8458, %r1417, %r1418, %r4;
	// inline asm
	ld.local.u32 	%r1421, [%rd7+4];
	ld.local.u32 	%r1422, [%rd7];
	// inline asm
	prmt.b32 %r8459, %r1421, %r1422, %r4;
	// inline asm
	ld.local.u32 	%r1425, [%rd7];
	ld.local.u32 	%r1426, [%rd6+12];
	// inline asm
	prmt.b32 %r8460, %r1425, %r1426, %r4;
	// inline asm
	ld.local.u32 	%r1429, [%rd6+12];
	ld.local.u32 	%r1430, [%rd6+8];
	// inline asm
	prmt.b32 %r8461, %r1429, %r1430, %r4;
	// inline asm
	ld.local.u32 	%r1433, [%rd6+8];
	ld.local.u32 	%r1434, [%rd6+4];
	// inline asm
	prmt.b32 %r8454, %r1433, %r1434, %r4;
	// inline asm
	ld.local.u32 	%r1437, [%rd6+4];
	ld.local.u32 	%r1438, [%rd6];
	// inline asm
	prmt.b32 %r8455, %r1437, %r1438, %r4;
	// inline asm
	ld.local.u32 	%r1441, [%rd6];
	ld.local.u32 	%r1442, [%rd5+12];
	// inline asm
	prmt.b32 %r8456, %r1441, %r1442, %r4;
	// inline asm
	ld.local.u32 	%r1445, [%rd5+12];
	ld.local.u32 	%r1446, [%rd5+8];
	// inline asm
	prmt.b32 %r8457, %r1445, %r1446, %r4;
	// inline asm
	ld.local.u32 	%r1449, [%rd5+8];
	ld.local.u32 	%r1450, [%rd5+4];
	// inline asm
	prmt.b32 %r8450, %r1449, %r1450, %r4;
	// inline asm
	ld.local.u32 	%r1453, [%rd5+4];
	ld.local.u32 	%r1454, [%rd5];
	// inline asm
	prmt.b32 %r8451, %r1453, %r1454, %r4;
	// inline asm
	ld.local.u32 	%r1457, [%rd5];
	ld.local.u32 	%r1458, [%rd4+12];
	// inline asm
	prmt.b32 %r8452, %r1457, %r1458, %r4;
	// inline asm
	ld.local.u32 	%r1461, [%rd4+12];
	ld.local.u32 	%r1462, [%rd4+8];
	// inline asm
	prmt.b32 %r8453, %r1461, %r1462, %r4;
	// inline asm
	ld.local.u32 	%r1465, [%rd4+8];
	ld.local.u32 	%r1466, [%rd4+4];
	// inline asm
	prmt.b32 %r8446, %r1465, %r1466, %r4;
	// inline asm
	ld.local.u32 	%r1469, [%rd4+4];
	ld.local.u32 	%r1470, [%rd4];
	// inline asm
	prmt.b32 %r8447, %r1469, %r1470, %r4;
	// inline asm
	ld.local.u32 	%r1473, [%rd4];
	ld.local.u32 	%r1474, [%rd3+12];
	// inline asm
	prmt.b32 %r8448, %r1473, %r1474, %r4;
	// inline asm
	ld.local.u32 	%r1477, [%rd3+12];
	ld.local.u32 	%r1478, [%rd3+8];
	// inline asm
	prmt.b32 %r8449, %r1477, %r1478, %r4;
	// inline asm
	ld.local.u32 	%r1481, [%rd3+8];
	ld.local.u32 	%r1482, [%rd3+4];
	// inline asm
	prmt.b32 %r8442, %r1481, %r1482, %r4;
	// inline asm
	ld.local.u32 	%r1485, [%rd3+4];
	ld.local.u32 	%r1486, [%rd3];
	// inline asm
	prmt.b32 %r8443, %r1485, %r1486, %r4;
	// inline asm
	ld.local.u32 	%r1489, [%rd3];
	ld.local.u32 	%r1490, [%rd2+12];
	// inline asm
	prmt.b32 %r8444, %r1489, %r1490, %r4;
	// inline asm
	ld.local.u32 	%r1493, [%rd2+12];
	ld.local.u32 	%r1494, [%rd2+8];
	// inline asm
	prmt.b32 %r8445, %r1493, %r1494, %r4;
	// inline asm
	ld.local.u32 	%r1497, [%rd2+8];
	ld.local.u32 	%r1498, [%rd2+4];
	// inline asm
	prmt.b32 %r1496, %r1497, %r1498, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1496;
	ld.local.u32 	%r1501, [%rd2+4];
	ld.local.u32 	%r1502, [%rd2];
	// inline asm
	prmt.b32 %r1500, %r1501, %r1502, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1500;
	ld.local.u32 	%r1505, [%rd2];
	ld.local.u32 	%r1506, [%rd1+12];
	// inline asm
	prmt.b32 %r1504, %r1505, %r1506, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1504;
	ld.local.u32 	%r1509, [%rd1+12];
	ld.local.u32 	%r1510, [%rd1+8];
	// inline asm
	prmt.b32 %r1508, %r1509, %r1510, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1508;
	ld.local.u32 	%r1513, [%rd1+8];
	ld.local.u32 	%r1514, [%rd1+4];
	// inline asm
	prmt.b32 %r1512, %r1513, %r1514, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r1512;
	ld.local.u32 	%r1517, [%rd1+4];
	ld.local.u32 	%r1518, [%rd1];
	// inline asm
	prmt.b32 %r1516, %r1517, %r1518, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r1516;
	ld.local.u32 	%r1521, [%rd1];
	// inline asm
	prmt.b32 %r1520, %r1521, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r1520;
	st.local.u32 	[%rd7], %r8441;
	st.local.u32 	[%rd6+12], %r8441;
	st.local.u32 	[%rd6+8], %r8441;
	st.local.u32 	[%rd6+4], %r8441;
	st.local.u32 	[%rd6], %r8441;
	st.local.u32 	[%rd5+12], %r8441;
	st.local.u32 	[%rd5+8], %r8441;
	st.local.u32 	[%rd5+4], %r8441;
	st.local.u32 	[%rd5], %r8441;
	st.local.u32 	[%rd4+12], %r8441;
	st.local.u32 	[%rd4+8], %r8441;
	st.local.u32 	[%rd4+4], %r8441;
	st.local.u32 	[%rd4], %r8441;
	st.local.u32 	[%rd3+12], %r8441;
	st.local.u32 	[%rd3+8], %r8441;
	st.local.u32 	[%rd3+4], %r8441;
	st.local.u32 	[%rd3], %r8441;
	st.local.u32 	[%rd2+12], %r8441;
	st.local.u32 	[%rd2+8], %r8441;
	st.local.u32 	[%rd2+4], %r8441;
	st.local.u32 	[%rd2], %r8441;
	st.local.u32 	[%rd1+12], %r8441;
	st.local.u32 	[%rd1+8], %r8441;
	mov.u64 	%rd105, 0;
	st.local.u32 	[%rd1+4], %rd105;
	st.local.u32 	[%rd1], %rd105;
	mov.u32 	%r8466, %r8441;
	mov.u32 	%r8467, %r8441;
	bra.uni 	BB1_85;

BB1_105:
	setp.eq.s32	%p92, %r3, 5;
	@%p92 bra 	BB1_106;
	bra.uni 	BB1_172;

BB1_106:
	ld.local.u32 	%r7602, [%rd7+8];
	ld.local.u32 	%r7603, [%rd7+4];
	// inline asm
	prmt.b32 %r7601, %r7602, %r7603, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7601;
	ld.local.u32 	%r7606, [%rd7+4];
	ld.local.u32 	%r7607, [%rd7];
	// inline asm
	prmt.b32 %r7605, %r7606, %r7607, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7605;
	ld.local.u32 	%r7610, [%rd7];
	ld.local.u32 	%r7611, [%rd6+12];
	// inline asm
	prmt.b32 %r7609, %r7610, %r7611, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7609;
	ld.local.u32 	%r7614, [%rd6+12];
	ld.local.u32 	%r7615, [%rd6+8];
	// inline asm
	prmt.b32 %r7613, %r7614, %r7615, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7613;
	ld.local.u32 	%r7618, [%rd6+8];
	ld.local.u32 	%r7619, [%rd6+4];
	// inline asm
	prmt.b32 %r7617, %r7618, %r7619, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7617;
	ld.local.u32 	%r7622, [%rd6+4];
	ld.local.u32 	%r7623, [%rd6];
	// inline asm
	prmt.b32 %r7621, %r7622, %r7623, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7621;
	ld.local.u32 	%r7626, [%rd6];
	ld.local.u32 	%r7627, [%rd5+12];
	// inline asm
	prmt.b32 %r7625, %r7626, %r7627, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7625;
	ld.local.u32 	%r7630, [%rd5+12];
	ld.local.u32 	%r7631, [%rd5+8];
	// inline asm
	prmt.b32 %r7629, %r7630, %r7631, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7629;
	ld.local.u32 	%r7634, [%rd5+8];
	ld.local.u32 	%r7635, [%rd5+4];
	// inline asm
	prmt.b32 %r7633, %r7634, %r7635, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7633;
	ld.local.u32 	%r7638, [%rd5+4];
	ld.local.u32 	%r7639, [%rd5];
	// inline asm
	prmt.b32 %r7637, %r7638, %r7639, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7637;
	ld.local.u32 	%r7642, [%rd5];
	ld.local.u32 	%r7643, [%rd4+12];
	// inline asm
	prmt.b32 %r7641, %r7642, %r7643, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7641;
	ld.local.u32 	%r7646, [%rd4+12];
	ld.local.u32 	%r7647, [%rd4+8];
	// inline asm
	prmt.b32 %r7645, %r7646, %r7647, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7645;
	ld.local.u32 	%r7650, [%rd4+8];
	ld.local.u32 	%r7651, [%rd4+4];
	// inline asm
	prmt.b32 %r7649, %r7650, %r7651, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7649;
	ld.local.u32 	%r7654, [%rd4+4];
	ld.local.u32 	%r7655, [%rd4];
	// inline asm
	prmt.b32 %r7653, %r7654, %r7655, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7653;
	ld.local.u32 	%r7658, [%rd4];
	ld.local.u32 	%r7659, [%rd3+12];
	// inline asm
	prmt.b32 %r7657, %r7658, %r7659, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7657;
	ld.local.u32 	%r7662, [%rd3+12];
	ld.local.u32 	%r7663, [%rd3+8];
	// inline asm
	prmt.b32 %r7661, %r7662, %r7663, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7661;
	ld.local.u32 	%r7666, [%rd3+8];
	ld.local.u32 	%r7667, [%rd3+4];
	// inline asm
	prmt.b32 %r7665, %r7666, %r7667, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7665;
	ld.local.u32 	%r7670, [%rd3+4];
	ld.local.u32 	%r7671, [%rd3];
	// inline asm
	prmt.b32 %r7669, %r7670, %r7671, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7669;
	ld.local.u32 	%r7674, [%rd3];
	ld.local.u32 	%r7675, [%rd2+12];
	// inline asm
	prmt.b32 %r7673, %r7674, %r7675, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7673;
	ld.local.u32 	%r7678, [%rd2+12];
	ld.local.u32 	%r7679, [%rd2+8];
	// inline asm
	prmt.b32 %r7677, %r7678, %r7679, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7677;
	ld.local.u32 	%r7682, [%rd2+8];
	ld.local.u32 	%r7683, [%rd2+4];
	// inline asm
	prmt.b32 %r7681, %r7682, %r7683, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7681;
	ld.local.u32 	%r7686, [%rd2+4];
	ld.local.u32 	%r7687, [%rd2];
	// inline asm
	prmt.b32 %r7685, %r7686, %r7687, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7685;
	ld.local.u32 	%r7690, [%rd2];
	ld.local.u32 	%r7691, [%rd1+12];
	// inline asm
	prmt.b32 %r7689, %r7690, %r7691, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r7689;
	ld.local.u32 	%r7694, [%rd1+12];
	ld.local.u32 	%r7695, [%rd1+8];
	// inline asm
	prmt.b32 %r7693, %r7694, %r7695, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r7693;
	ld.local.u32 	%r7698, [%rd1+8];
	ld.local.u32 	%r7699, [%rd1+4];
	// inline asm
	prmt.b32 %r7697, %r7698, %r7699, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r7697;
	ld.local.u32 	%r7702, [%rd1+4];
	ld.local.u32 	%r7703, [%rd1];
	// inline asm
	prmt.b32 %r7701, %r7702, %r7703, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r7701;
	ld.local.u32 	%r7706, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r7705, %r7706, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r7705;
	st.local.u32 	[%rd2], %r8475;
	st.local.u32 	[%rd1+12], %r8475;
	st.local.u32 	[%rd1+8], %r8475;
	mov.u64 	%rd1173, 0;
	st.local.u32 	[%rd1+4], %rd1173;
	st.local.u32 	[%rd1], %rd1173;
	bra.uni 	BB1_173;

BB1_15:
	setp.eq.s32	%p44, %r3, 5;
	@%p44 bra 	BB1_16;
	bra.uni 	BB1_88;

BB1_16:
	ld.local.u32 	%r4364, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8448, %r8441, %r4364, %r4;
	// inline asm
	ld.local.u32 	%r4367, [%rd8+12];
	ld.local.u32 	%r4368, [%rd8+8];
	// inline asm
	prmt.b32 %r8449, %r4367, %r4368, %r4;
	// inline asm
	ld.local.u32 	%r4371, [%rd8+8];
	ld.local.u32 	%r4372, [%rd8+4];
	// inline asm
	prmt.b32 %r8442, %r4371, %r4372, %r4;
	// inline asm
	ld.local.u32 	%r4375, [%rd8+4];
	ld.local.u32 	%r4376, [%rd8];
	// inline asm
	prmt.b32 %r8443, %r4375, %r4376, %r4;
	// inline asm
	ld.local.u32 	%r4379, [%rd8];
	ld.local.u32 	%r4380, [%rd7+12];
	// inline asm
	prmt.b32 %r8444, %r4379, %r4380, %r4;
	// inline asm
	ld.local.u32 	%r4383, [%rd7+12];
	ld.local.u32 	%r4384, [%rd7+8];
	// inline asm
	prmt.b32 %r8445, %r4383, %r4384, %r4;
	// inline asm
	ld.local.u32 	%r4387, [%rd7+8];
	ld.local.u32 	%r4388, [%rd7+4];
	// inline asm
	prmt.b32 %r4386, %r4387, %r4388, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r4386;
	ld.local.u32 	%r4391, [%rd7+4];
	ld.local.u32 	%r4392, [%rd7];
	// inline asm
	prmt.b32 %r4390, %r4391, %r4392, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r4390;
	ld.local.u32 	%r4395, [%rd7];
	ld.local.u32 	%r4396, [%rd6+12];
	// inline asm
	prmt.b32 %r4394, %r4395, %r4396, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r4394;
	ld.local.u32 	%r4399, [%rd6+12];
	ld.local.u32 	%r4400, [%rd6+8];
	// inline asm
	prmt.b32 %r4398, %r4399, %r4400, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r4398;
	ld.local.u32 	%r4403, [%rd6+8];
	ld.local.u32 	%r4404, [%rd6+4];
	// inline asm
	prmt.b32 %r4402, %r4403, %r4404, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r4402;
	ld.local.u32 	%r4407, [%rd6+4];
	ld.local.u32 	%r4408, [%rd6];
	// inline asm
	prmt.b32 %r4406, %r4407, %r4408, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r4406;
	ld.local.u32 	%r4411, [%rd6];
	ld.local.u32 	%r4412, [%rd5+12];
	// inline asm
	prmt.b32 %r4410, %r4411, %r4412, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r4410;
	ld.local.u32 	%r4415, [%rd5+12];
	ld.local.u32 	%r4416, [%rd5+8];
	// inline asm
	prmt.b32 %r4414, %r4415, %r4416, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r4414;
	ld.local.u32 	%r4419, [%rd5+8];
	ld.local.u32 	%r4420, [%rd5+4];
	// inline asm
	prmt.b32 %r4418, %r4419, %r4420, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r4418;
	ld.local.u32 	%r4423, [%rd5+4];
	ld.local.u32 	%r4424, [%rd5];
	// inline asm
	prmt.b32 %r4422, %r4423, %r4424, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r4422;
	ld.local.u32 	%r4427, [%rd5];
	ld.local.u32 	%r4428, [%rd4+12];
	// inline asm
	prmt.b32 %r4426, %r4427, %r4428, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4426;
	ld.local.u32 	%r4431, [%rd4+12];
	ld.local.u32 	%r4432, [%rd4+8];
	// inline asm
	prmt.b32 %r4430, %r4431, %r4432, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4430;
	ld.local.u32 	%r4435, [%rd4+8];
	ld.local.u32 	%r4436, [%rd4+4];
	// inline asm
	prmt.b32 %r4434, %r4435, %r4436, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4434;
	ld.local.u32 	%r4439, [%rd4+4];
	ld.local.u32 	%r4440, [%rd4];
	// inline asm
	prmt.b32 %r4438, %r4439, %r4440, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4438;
	ld.local.u32 	%r4443, [%rd4];
	ld.local.u32 	%r4444, [%rd3+12];
	// inline asm
	prmt.b32 %r4442, %r4443, %r4444, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4442;
	ld.local.u32 	%r4447, [%rd3+12];
	ld.local.u32 	%r4448, [%rd3+8];
	// inline asm
	prmt.b32 %r4446, %r4447, %r4448, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4446;
	ld.local.u32 	%r4451, [%rd3+8];
	ld.local.u32 	%r4452, [%rd3+4];
	// inline asm
	prmt.b32 %r4450, %r4451, %r4452, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4450;
	ld.local.u32 	%r4455, [%rd3+4];
	ld.local.u32 	%r4456, [%rd3];
	// inline asm
	prmt.b32 %r4454, %r4455, %r4456, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4454;
	ld.local.u32 	%r4459, [%rd3];
	ld.local.u32 	%r4460, [%rd2+12];
	// inline asm
	prmt.b32 %r4458, %r4459, %r4460, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4458;
	ld.local.u32 	%r4463, [%rd2+12];
	ld.local.u32 	%r4464, [%rd2+8];
	// inline asm
	prmt.b32 %r4462, %r4463, %r4464, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4462;
	ld.local.u32 	%r4467, [%rd2+8];
	ld.local.u32 	%r4468, [%rd2+4];
	// inline asm
	prmt.b32 %r4466, %r4467, %r4468, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4466;
	ld.local.u32 	%r4471, [%rd2+4];
	ld.local.u32 	%r4472, [%rd2];
	// inline asm
	prmt.b32 %r4470, %r4471, %r4472, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4470;
	ld.local.u32 	%r4475, [%rd2];
	ld.local.u32 	%r4476, [%rd1+12];
	// inline asm
	prmt.b32 %r4474, %r4475, %r4476, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4474;
	ld.local.u32 	%r4479, [%rd1+12];
	ld.local.u32 	%r4480, [%rd1+8];
	// inline asm
	prmt.b32 %r4478, %r4479, %r4480, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4478;
	ld.local.u32 	%r4483, [%rd1+8];
	ld.local.u32 	%r4484, [%rd1+4];
	// inline asm
	prmt.b32 %r4482, %r4483, %r4484, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r4482;
	ld.local.u32 	%r4487, [%rd1+4];
	ld.local.u32 	%r4488, [%rd1];
	// inline asm
	prmt.b32 %r4486, %r4487, %r4488, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r4486;
	ld.local.u32 	%r4491, [%rd1];
	// inline asm
	prmt.b32 %r4490, %r4491, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r4490;
	st.local.u32 	[%rd2], %r8441;
	st.local.u32 	[%rd1+12], %r8441;
	st.local.u32 	[%rd1+8], %r8441;
	mov.u64 	%rd125, 0;
	st.local.u32 	[%rd1+4], %rd125;
	st.local.u32 	[%rd1], %rd125;
	mov.u32 	%r8446, %r8441;
	mov.u32 	%r8447, %r8441;
	bra.uni 	BB1_80;

BB1_136:
	setp.eq.s32	%p69, %r3, 21;
	@%p69 bra 	BB1_137;
	bra.uni 	BB1_172;

BB1_137:
	ld.local.u32 	%r6402, [%rd3+8];
	ld.local.u32 	%r6403, [%rd3+4];
	// inline asm
	prmt.b32 %r6401, %r6402, %r6403, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6401;
	ld.local.u32 	%r6406, [%rd3+4];
	ld.local.u32 	%r6407, [%rd3];
	// inline asm
	prmt.b32 %r6405, %r6406, %r6407, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6405;
	ld.local.u32 	%r6410, [%rd3];
	ld.local.u32 	%r6411, [%rd2+12];
	// inline asm
	prmt.b32 %r6409, %r6410, %r6411, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6409;
	ld.local.u32 	%r6414, [%rd2+12];
	ld.local.u32 	%r6415, [%rd2+8];
	// inline asm
	prmt.b32 %r6413, %r6414, %r6415, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6413;
	ld.local.u32 	%r6418, [%rd2+8];
	ld.local.u32 	%r6419, [%rd2+4];
	// inline asm
	prmt.b32 %r6417, %r6418, %r6419, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6417;
	ld.local.u32 	%r6422, [%rd2+4];
	ld.local.u32 	%r6423, [%rd2];
	// inline asm
	prmt.b32 %r6421, %r6422, %r6423, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6421;
	ld.local.u32 	%r6426, [%rd2];
	ld.local.u32 	%r6427, [%rd1+12];
	// inline asm
	prmt.b32 %r6425, %r6426, %r6427, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6425;
	ld.local.u32 	%r6430, [%rd1+12];
	ld.local.u32 	%r6431, [%rd1+8];
	// inline asm
	prmt.b32 %r6429, %r6430, %r6431, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6429;
	ld.local.u32 	%r6434, [%rd1+8];
	ld.local.u32 	%r6435, [%rd1+4];
	// inline asm
	prmt.b32 %r6433, %r6434, %r6435, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6433;
	ld.local.u32 	%r6438, [%rd1+4];
	ld.local.u32 	%r6439, [%rd1];
	// inline asm
	prmt.b32 %r6437, %r6438, %r6439, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6437;
	ld.local.u32 	%r6442, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r6441, %r6442, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6441;
	st.local.u32 	[%rd6], %r8475;
	st.local.u32 	[%rd5+12], %r8475;
	st.local.u32 	[%rd5+8], %r8475;
	st.local.u32 	[%rd5+4], %r8475;
	st.local.u32 	[%rd5], %r8475;
	st.local.u32 	[%rd4+12], %r8475;
	st.local.u32 	[%rd4+8], %r8475;
	st.local.u32 	[%rd4+4], %r8475;
	st.local.u32 	[%rd4], %r8475;
	st.local.u32 	[%rd3+12], %r8475;
	st.local.u32 	[%rd3+8], %r8475;
	st.local.u32 	[%rd3+4], %r8475;
	st.local.u32 	[%rd3], %r8475;
	st.local.u32 	[%rd2+12], %r8475;
	st.local.u32 	[%rd2+8], %r8475;
	st.local.u32 	[%rd2+4], %r8475;
	st.local.u32 	[%rd2], %r8475;
	st.local.u32 	[%rd1+12], %r8475;
	st.local.u32 	[%rd1+8], %r8475;
	mov.u64 	%rd1157, 0;
	st.local.u32 	[%rd1+4], %rd1157;
	st.local.u32 	[%rd1], %rd1157;
	bra.uni 	BB1_173;

BB1_46:
	setp.eq.s32	%p21, %r3, 21;
	@%p21 bra 	BB1_47;
	bra.uni 	BB1_88;

BB1_47:
	ld.local.u32 	%r1956, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8464, %r8441, %r1956, %r4;
	// inline asm
	ld.local.u32 	%r1959, [%rd8+12];
	ld.local.u32 	%r1960, [%rd8+8];
	// inline asm
	prmt.b32 %r8465, %r1959, %r1960, %r4;
	// inline asm
	ld.local.u32 	%r1963, [%rd8+8];
	ld.local.u32 	%r1964, [%rd8+4];
	// inline asm
	prmt.b32 %r8458, %r1963, %r1964, %r4;
	// inline asm
	ld.local.u32 	%r1967, [%rd8+4];
	ld.local.u32 	%r1968, [%rd8];
	// inline asm
	prmt.b32 %r8459, %r1967, %r1968, %r4;
	// inline asm
	ld.local.u32 	%r1971, [%rd8];
	ld.local.u32 	%r1972, [%rd7+12];
	// inline asm
	prmt.b32 %r8460, %r1971, %r1972, %r4;
	// inline asm
	ld.local.u32 	%r1975, [%rd7+12];
	ld.local.u32 	%r1976, [%rd7+8];
	// inline asm
	prmt.b32 %r8461, %r1975, %r1976, %r4;
	// inline asm
	ld.local.u32 	%r1979, [%rd7+8];
	ld.local.u32 	%r1980, [%rd7+4];
	// inline asm
	prmt.b32 %r8454, %r1979, %r1980, %r4;
	// inline asm
	ld.local.u32 	%r1983, [%rd7+4];
	ld.local.u32 	%r1984, [%rd7];
	// inline asm
	prmt.b32 %r8455, %r1983, %r1984, %r4;
	// inline asm
	ld.local.u32 	%r1987, [%rd7];
	ld.local.u32 	%r1988, [%rd6+12];
	// inline asm
	prmt.b32 %r8456, %r1987, %r1988, %r4;
	// inline asm
	ld.local.u32 	%r1991, [%rd6+12];
	ld.local.u32 	%r1992, [%rd6+8];
	// inline asm
	prmt.b32 %r8457, %r1991, %r1992, %r4;
	// inline asm
	ld.local.u32 	%r1995, [%rd6+8];
	ld.local.u32 	%r1996, [%rd6+4];
	// inline asm
	prmt.b32 %r8450, %r1995, %r1996, %r4;
	// inline asm
	ld.local.u32 	%r1999, [%rd6+4];
	ld.local.u32 	%r2000, [%rd6];
	// inline asm
	prmt.b32 %r8451, %r1999, %r2000, %r4;
	// inline asm
	ld.local.u32 	%r2003, [%rd6];
	ld.local.u32 	%r2004, [%rd5+12];
	// inline asm
	prmt.b32 %r8452, %r2003, %r2004, %r4;
	// inline asm
	ld.local.u32 	%r2007, [%rd5+12];
	ld.local.u32 	%r2008, [%rd5+8];
	// inline asm
	prmt.b32 %r8453, %r2007, %r2008, %r4;
	// inline asm
	ld.local.u32 	%r2011, [%rd5+8];
	ld.local.u32 	%r2012, [%rd5+4];
	// inline asm
	prmt.b32 %r8446, %r2011, %r2012, %r4;
	// inline asm
	ld.local.u32 	%r2015, [%rd5+4];
	ld.local.u32 	%r2016, [%rd5];
	// inline asm
	prmt.b32 %r8447, %r2015, %r2016, %r4;
	// inline asm
	ld.local.u32 	%r2019, [%rd5];
	ld.local.u32 	%r2020, [%rd4+12];
	// inline asm
	prmt.b32 %r8448, %r2019, %r2020, %r4;
	// inline asm
	ld.local.u32 	%r2023, [%rd4+12];
	ld.local.u32 	%r2024, [%rd4+8];
	// inline asm
	prmt.b32 %r8449, %r2023, %r2024, %r4;
	// inline asm
	ld.local.u32 	%r2027, [%rd4+8];
	ld.local.u32 	%r2028, [%rd4+4];
	// inline asm
	prmt.b32 %r8442, %r2027, %r2028, %r4;
	// inline asm
	ld.local.u32 	%r2031, [%rd4+4];
	ld.local.u32 	%r2032, [%rd4];
	// inline asm
	prmt.b32 %r8443, %r2031, %r2032, %r4;
	// inline asm
	ld.local.u32 	%r2035, [%rd4];
	ld.local.u32 	%r2036, [%rd3+12];
	// inline asm
	prmt.b32 %r8444, %r2035, %r2036, %r4;
	// inline asm
	ld.local.u32 	%r2039, [%rd3+12];
	ld.local.u32 	%r2040, [%rd3+8];
	// inline asm
	prmt.b32 %r8445, %r2039, %r2040, %r4;
	// inline asm
	ld.local.u32 	%r2043, [%rd3+8];
	ld.local.u32 	%r2044, [%rd3+4];
	// inline asm
	prmt.b32 %r2042, %r2043, %r2044, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2042;
	ld.local.u32 	%r2047, [%rd3+4];
	ld.local.u32 	%r2048, [%rd3];
	// inline asm
	prmt.b32 %r2046, %r2047, %r2048, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2046;
	ld.local.u32 	%r2051, [%rd3];
	ld.local.u32 	%r2052, [%rd2+12];
	// inline asm
	prmt.b32 %r2050, %r2051, %r2052, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2050;
	ld.local.u32 	%r2055, [%rd2+12];
	ld.local.u32 	%r2056, [%rd2+8];
	// inline asm
	prmt.b32 %r2054, %r2055, %r2056, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2054;
	ld.local.u32 	%r2059, [%rd2+8];
	ld.local.u32 	%r2060, [%rd2+4];
	// inline asm
	prmt.b32 %r2058, %r2059, %r2060, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2058;
	ld.local.u32 	%r2063, [%rd2+4];
	ld.local.u32 	%r2064, [%rd2];
	// inline asm
	prmt.b32 %r2062, %r2063, %r2064, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2062;
	ld.local.u32 	%r2067, [%rd2];
	ld.local.u32 	%r2068, [%rd1+12];
	// inline asm
	prmt.b32 %r2066, %r2067, %r2068, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2066;
	ld.local.u32 	%r2071, [%rd1+12];
	ld.local.u32 	%r2072, [%rd1+8];
	// inline asm
	prmt.b32 %r2070, %r2071, %r2072, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2070;
	ld.local.u32 	%r2075, [%rd1+8];
	ld.local.u32 	%r2076, [%rd1+4];
	// inline asm
	prmt.b32 %r2074, %r2075, %r2076, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2074;
	ld.local.u32 	%r2079, [%rd1+4];
	ld.local.u32 	%r2080, [%rd1];
	// inline asm
	prmt.b32 %r2078, %r2079, %r2080, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2078;
	ld.local.u32 	%r2083, [%rd1];
	// inline asm
	prmt.b32 %r2082, %r2083, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2082;
	st.local.u32 	[%rd6], %r8441;
	st.local.u32 	[%rd5+12], %r8441;
	st.local.u32 	[%rd5+8], %r8441;
	st.local.u32 	[%rd5+4], %r8441;
	st.local.u32 	[%rd5], %r8441;
	st.local.u32 	[%rd4+12], %r8441;
	st.local.u32 	[%rd4+8], %r8441;
	st.local.u32 	[%rd4+4], %r8441;
	st.local.u32 	[%rd4], %r8441;
	st.local.u32 	[%rd3+12], %r8441;
	st.local.u32 	[%rd3+8], %r8441;
	st.local.u32 	[%rd3+4], %r8441;
	st.local.u32 	[%rd3], %r8441;
	st.local.u32 	[%rd2+12], %r8441;
	st.local.u32 	[%rd2+8], %r8441;
	st.local.u32 	[%rd2+4], %r8441;
	st.local.u32 	[%rd2], %r8441;
	st.local.u32 	[%rd1+12], %r8441;
	st.local.u32 	[%rd1+8], %r8441;
	mov.u64 	%rd109, 0;
	st.local.u32 	[%rd1+4], %rd109;
	st.local.u32 	[%rd1], %rd109;
	mov.u32 	%r8462, %r8441;
	mov.u32 	%r8463, %r8441;
	bra.uni 	BB1_84;

BB1_120:
	setp.eq.s32	%p81, %r3, 13;
	@%p81 bra 	BB1_121;
	bra.uni 	BB1_172;

BB1_121:
	ld.local.u32 	%r6874, [%rd5+8];
	ld.local.u32 	%r6875, [%rd5+4];
	// inline asm
	prmt.b32 %r6873, %r6874, %r6875, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6873;
	ld.local.u32 	%r6878, [%rd5+4];
	ld.local.u32 	%r6879, [%rd5];
	// inline asm
	prmt.b32 %r6877, %r6878, %r6879, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6877;
	ld.local.u32 	%r6882, [%rd5];
	ld.local.u32 	%r6883, [%rd4+12];
	// inline asm
	prmt.b32 %r6881, %r6882, %r6883, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6881;
	ld.local.u32 	%r6886, [%rd4+12];
	ld.local.u32 	%r6887, [%rd4+8];
	// inline asm
	prmt.b32 %r6885, %r6886, %r6887, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6885;
	ld.local.u32 	%r6890, [%rd4+8];
	ld.local.u32 	%r6891, [%rd4+4];
	// inline asm
	prmt.b32 %r6889, %r6890, %r6891, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6889;
	ld.local.u32 	%r6894, [%rd4+4];
	ld.local.u32 	%r6895, [%rd4];
	// inline asm
	prmt.b32 %r6893, %r6894, %r6895, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6893;
	ld.local.u32 	%r6898, [%rd4];
	ld.local.u32 	%r6899, [%rd3+12];
	// inline asm
	prmt.b32 %r6897, %r6898, %r6899, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6897;
	ld.local.u32 	%r6902, [%rd3+12];
	ld.local.u32 	%r6903, [%rd3+8];
	// inline asm
	prmt.b32 %r6901, %r6902, %r6903, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6901;
	ld.local.u32 	%r6906, [%rd3+8];
	ld.local.u32 	%r6907, [%rd3+4];
	// inline asm
	prmt.b32 %r6905, %r6906, %r6907, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6905;
	ld.local.u32 	%r6910, [%rd3+4];
	ld.local.u32 	%r6911, [%rd3];
	// inline asm
	prmt.b32 %r6909, %r6910, %r6911, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6909;
	ld.local.u32 	%r6914, [%rd3];
	ld.local.u32 	%r6915, [%rd2+12];
	// inline asm
	prmt.b32 %r6913, %r6914, %r6915, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6913;
	ld.local.u32 	%r6918, [%rd2+12];
	ld.local.u32 	%r6919, [%rd2+8];
	// inline asm
	prmt.b32 %r6917, %r6918, %r6919, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6917;
	ld.local.u32 	%r6922, [%rd2+8];
	ld.local.u32 	%r6923, [%rd2+4];
	// inline asm
	prmt.b32 %r6921, %r6922, %r6923, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r6921;
	ld.local.u32 	%r6926, [%rd2+4];
	ld.local.u32 	%r6927, [%rd2];
	// inline asm
	prmt.b32 %r6925, %r6926, %r6927, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r6925;
	ld.local.u32 	%r6930, [%rd2];
	ld.local.u32 	%r6931, [%rd1+12];
	// inline asm
	prmt.b32 %r6929, %r6930, %r6931, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r6929;
	ld.local.u32 	%r6934, [%rd1+12];
	ld.local.u32 	%r6935, [%rd1+8];
	// inline asm
	prmt.b32 %r6933, %r6934, %r6935, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r6933;
	ld.local.u32 	%r6938, [%rd1+8];
	ld.local.u32 	%r6939, [%rd1+4];
	// inline asm
	prmt.b32 %r6937, %r6938, %r6939, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r6937;
	ld.local.u32 	%r6942, [%rd1+4];
	ld.local.u32 	%r6943, [%rd1];
	// inline asm
	prmt.b32 %r6941, %r6942, %r6943, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r6941;
	ld.local.u32 	%r6946, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r6945, %r6946, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r6945;
	st.local.u32 	[%rd4], %r8475;
	st.local.u32 	[%rd3+12], %r8475;
	st.local.u32 	[%rd3+8], %r8475;
	st.local.u32 	[%rd3+4], %r8475;
	st.local.u32 	[%rd3], %r8475;
	st.local.u32 	[%rd2+12], %r8475;
	st.local.u32 	[%rd2+8], %r8475;
	st.local.u32 	[%rd2+4], %r8475;
	st.local.u32 	[%rd2], %r8475;
	st.local.u32 	[%rd1+12], %r8475;
	st.local.u32 	[%rd1+8], %r8475;
	mov.u64 	%rd1165, 0;
	st.local.u32 	[%rd1+4], %rd1165;
	st.local.u32 	[%rd1], %rd1165;
	bra.uni 	BB1_173;

BB1_30:
	setp.eq.s32	%p33, %r3, 13;
	@%p33 bra 	BB1_31;
	bra.uni 	BB1_88;

BB1_31:
	ld.local.u32 	%r3128, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8456, %r8441, %r3128, %r4;
	// inline asm
	ld.local.u32 	%r3131, [%rd8+12];
	ld.local.u32 	%r3132, [%rd8+8];
	// inline asm
	prmt.b32 %r8457, %r3131, %r3132, %r4;
	// inline asm
	ld.local.u32 	%r3135, [%rd8+8];
	ld.local.u32 	%r3136, [%rd8+4];
	// inline asm
	prmt.b32 %r8450, %r3135, %r3136, %r4;
	// inline asm
	ld.local.u32 	%r3139, [%rd8+4];
	ld.local.u32 	%r3140, [%rd8];
	// inline asm
	prmt.b32 %r8451, %r3139, %r3140, %r4;
	// inline asm
	ld.local.u32 	%r3143, [%rd8];
	ld.local.u32 	%r3144, [%rd7+12];
	// inline asm
	prmt.b32 %r8452, %r3143, %r3144, %r4;
	// inline asm
	ld.local.u32 	%r3147, [%rd7+12];
	ld.local.u32 	%r3148, [%rd7+8];
	// inline asm
	prmt.b32 %r8453, %r3147, %r3148, %r4;
	// inline asm
	ld.local.u32 	%r3151, [%rd7+8];
	ld.local.u32 	%r3152, [%rd7+4];
	// inline asm
	prmt.b32 %r8446, %r3151, %r3152, %r4;
	// inline asm
	ld.local.u32 	%r3155, [%rd7+4];
	ld.local.u32 	%r3156, [%rd7];
	// inline asm
	prmt.b32 %r8447, %r3155, %r3156, %r4;
	// inline asm
	ld.local.u32 	%r3159, [%rd7];
	ld.local.u32 	%r3160, [%rd6+12];
	// inline asm
	prmt.b32 %r8448, %r3159, %r3160, %r4;
	// inline asm
	ld.local.u32 	%r3163, [%rd6+12];
	ld.local.u32 	%r3164, [%rd6+8];
	// inline asm
	prmt.b32 %r8449, %r3163, %r3164, %r4;
	// inline asm
	ld.local.u32 	%r3167, [%rd6+8];
	ld.local.u32 	%r3168, [%rd6+4];
	// inline asm
	prmt.b32 %r8442, %r3167, %r3168, %r4;
	// inline asm
	ld.local.u32 	%r3171, [%rd6+4];
	ld.local.u32 	%r3172, [%rd6];
	// inline asm
	prmt.b32 %r8443, %r3171, %r3172, %r4;
	// inline asm
	ld.local.u32 	%r3175, [%rd6];
	ld.local.u32 	%r3176, [%rd5+12];
	// inline asm
	prmt.b32 %r8444, %r3175, %r3176, %r4;
	// inline asm
	ld.local.u32 	%r3179, [%rd5+12];
	ld.local.u32 	%r3180, [%rd5+8];
	// inline asm
	prmt.b32 %r8445, %r3179, %r3180, %r4;
	// inline asm
	ld.local.u32 	%r3183, [%rd5+8];
	ld.local.u32 	%r3184, [%rd5+4];
	// inline asm
	prmt.b32 %r3182, %r3183, %r3184, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3182;
	ld.local.u32 	%r3187, [%rd5+4];
	ld.local.u32 	%r3188, [%rd5];
	// inline asm
	prmt.b32 %r3186, %r3187, %r3188, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3186;
	ld.local.u32 	%r3191, [%rd5];
	ld.local.u32 	%r3192, [%rd4+12];
	// inline asm
	prmt.b32 %r3190, %r3191, %r3192, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3190;
	ld.local.u32 	%r3195, [%rd4+12];
	ld.local.u32 	%r3196, [%rd4+8];
	// inline asm
	prmt.b32 %r3194, %r3195, %r3196, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3194;
	ld.local.u32 	%r3199, [%rd4+8];
	ld.local.u32 	%r3200, [%rd4+4];
	// inline asm
	prmt.b32 %r3198, %r3199, %r3200, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3198;
	ld.local.u32 	%r3203, [%rd4+4];
	ld.local.u32 	%r3204, [%rd4];
	// inline asm
	prmt.b32 %r3202, %r3203, %r3204, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3202;
	ld.local.u32 	%r3207, [%rd4];
	ld.local.u32 	%r3208, [%rd3+12];
	// inline asm
	prmt.b32 %r3206, %r3207, %r3208, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3206;
	ld.local.u32 	%r3211, [%rd3+12];
	ld.local.u32 	%r3212, [%rd3+8];
	// inline asm
	prmt.b32 %r3210, %r3211, %r3212, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3210;
	ld.local.u32 	%r3215, [%rd3+8];
	ld.local.u32 	%r3216, [%rd3+4];
	// inline asm
	prmt.b32 %r3214, %r3215, %r3216, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3214;
	ld.local.u32 	%r3219, [%rd3+4];
	ld.local.u32 	%r3220, [%rd3];
	// inline asm
	prmt.b32 %r3218, %r3219, %r3220, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3218;
	ld.local.u32 	%r3223, [%rd3];
	ld.local.u32 	%r3224, [%rd2+12];
	// inline asm
	prmt.b32 %r3222, %r3223, %r3224, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3222;
	ld.local.u32 	%r3227, [%rd2+12];
	ld.local.u32 	%r3228, [%rd2+8];
	// inline asm
	prmt.b32 %r3226, %r3227, %r3228, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3226;
	ld.local.u32 	%r3231, [%rd2+8];
	ld.local.u32 	%r3232, [%rd2+4];
	// inline asm
	prmt.b32 %r3230, %r3231, %r3232, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3230;
	ld.local.u32 	%r3235, [%rd2+4];
	ld.local.u32 	%r3236, [%rd2];
	// inline asm
	prmt.b32 %r3234, %r3235, %r3236, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3234;
	ld.local.u32 	%r3239, [%rd2];
	ld.local.u32 	%r3240, [%rd1+12];
	// inline asm
	prmt.b32 %r3238, %r3239, %r3240, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3238;
	ld.local.u32 	%r3243, [%rd1+12];
	ld.local.u32 	%r3244, [%rd1+8];
	// inline asm
	prmt.b32 %r3242, %r3243, %r3244, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3242;
	ld.local.u32 	%r3247, [%rd1+8];
	ld.local.u32 	%r3248, [%rd1+4];
	// inline asm
	prmt.b32 %r3246, %r3247, %r3248, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3246;
	ld.local.u32 	%r3251, [%rd1+4];
	ld.local.u32 	%r3252, [%rd1];
	// inline asm
	prmt.b32 %r3250, %r3251, %r3252, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3250;
	ld.local.u32 	%r3255, [%rd1];
	// inline asm
	prmt.b32 %r3254, %r3255, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r3254;
	st.local.u32 	[%rd4], %r8441;
	st.local.u32 	[%rd3+12], %r8441;
	st.local.u32 	[%rd3+8], %r8441;
	st.local.u32 	[%rd3+4], %r8441;
	st.local.u32 	[%rd3], %r8441;
	st.local.u32 	[%rd2+12], %r8441;
	st.local.u32 	[%rd2+8], %r8441;
	st.local.u32 	[%rd2+4], %r8441;
	st.local.u32 	[%rd2], %r8441;
	st.local.u32 	[%rd1+12], %r8441;
	st.local.u32 	[%rd1+8], %r8441;
	mov.u64 	%rd117, 0;
	st.local.u32 	[%rd1+4], %rd117;
	st.local.u32 	[%rd1], %rd117;
	mov.u32 	%r8454, %r8441;
	mov.u32 	%r8455, %r8441;
	bra.uni 	BB1_82;

BB1_151:
	setp.eq.s32	%p58, %r3, 29;
	@%p58 bra 	BB1_152;
	bra.uni 	BB1_172;

BB1_152:
	ld.local.u32 	%r6186, [%rd1+8];
	ld.local.u32 	%r6187, [%rd1+4];
	// inline asm
	prmt.b32 %r6185, %r6186, %r6187, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6185;
	ld.local.u32 	%r6190, [%rd1+4];
	ld.local.u32 	%r6191, [%rd1];
	// inline asm
	prmt.b32 %r6189, %r6190, %r6191, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6189;
	ld.local.u32 	%r6194, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r6193, %r6194, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6193;
	st.local.u32 	[%rd8], %r8475;
	st.local.u32 	[%rd7+12], %r8475;
	st.local.u32 	[%rd7+8], %r8475;
	st.local.u32 	[%rd7+4], %r8475;
	st.local.u32 	[%rd7], %r8475;
	st.local.u32 	[%rd6+12], %r8475;
	st.local.u32 	[%rd6+8], %r8475;
	st.local.u32 	[%rd6+4], %r8475;
	st.local.u32 	[%rd6], %r8475;
	st.local.u32 	[%rd5+12], %r8475;
	st.local.u32 	[%rd5+8], %r8475;
	st.local.u32 	[%rd5+4], %r8475;
	st.local.u32 	[%rd5], %r8475;
	st.local.u32 	[%rd4+12], %r8475;
	st.local.u32 	[%rd4+8], %r8475;
	st.local.u32 	[%rd4+4], %r8475;
	st.local.u32 	[%rd4], %r8475;
	st.local.u32 	[%rd3+12], %r8475;
	st.local.u32 	[%rd3+8], %r8475;
	st.local.u32 	[%rd3+4], %r8475;
	st.local.u32 	[%rd3], %r8475;
	st.local.u32 	[%rd2+12], %r8475;
	st.local.u32 	[%rd2+8], %r8475;
	st.local.u32 	[%rd2+4], %r8475;
	st.local.u32 	[%rd2], %r8475;
	st.local.u32 	[%rd1+12], %r8475;
	st.local.u32 	[%rd1+8], %r8475;
	mov.u64 	%rd1149, 0;
	st.local.u32 	[%rd1+4], %rd1149;
	st.local.u32 	[%rd1], %rd1149;
	bra.uni 	BB1_173;

BB1_61:
	setp.eq.s32	%p10, %r3, 29;
	@%p10 bra 	BB1_62;
	bra.uni 	BB1_88;

BB1_62:
	ld.local.u32 	%r848, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8472, %r8441, %r848, %r4;
	// inline asm
	ld.local.u32 	%r851, [%rd8+12];
	ld.local.u32 	%r852, [%rd8+8];
	// inline asm
	prmt.b32 %r8473, %r851, %r852, %r4;
	// inline asm
	ld.local.u32 	%r855, [%rd8+8];
	ld.local.u32 	%r856, [%rd8+4];
	// inline asm
	prmt.b32 %r8466, %r855, %r856, %r4;
	// inline asm
	ld.local.u32 	%r859, [%rd8+4];
	ld.local.u32 	%r860, [%rd8];
	// inline asm
	prmt.b32 %r8467, %r859, %r860, %r4;
	// inline asm
	ld.local.u32 	%r863, [%rd8];
	ld.local.u32 	%r864, [%rd7+12];
	// inline asm
	prmt.b32 %r8468, %r863, %r864, %r4;
	// inline asm
	ld.local.u32 	%r867, [%rd7+12];
	ld.local.u32 	%r868, [%rd7+8];
	// inline asm
	prmt.b32 %r8469, %r867, %r868, %r4;
	// inline asm
	ld.local.u32 	%r871, [%rd7+8];
	ld.local.u32 	%r872, [%rd7+4];
	// inline asm
	prmt.b32 %r8462, %r871, %r872, %r4;
	// inline asm
	ld.local.u32 	%r875, [%rd7+4];
	ld.local.u32 	%r876, [%rd7];
	// inline asm
	prmt.b32 %r8463, %r875, %r876, %r4;
	// inline asm
	ld.local.u32 	%r879, [%rd7];
	ld.local.u32 	%r880, [%rd6+12];
	// inline asm
	prmt.b32 %r8464, %r879, %r880, %r4;
	// inline asm
	ld.local.u32 	%r883, [%rd6+12];
	ld.local.u32 	%r884, [%rd6+8];
	// inline asm
	prmt.b32 %r8465, %r883, %r884, %r4;
	// inline asm
	ld.local.u32 	%r887, [%rd6+8];
	ld.local.u32 	%r888, [%rd6+4];
	// inline asm
	prmt.b32 %r8458, %r887, %r888, %r4;
	// inline asm
	ld.local.u32 	%r891, [%rd6+4];
	ld.local.u32 	%r892, [%rd6];
	// inline asm
	prmt.b32 %r8459, %r891, %r892, %r4;
	// inline asm
	ld.local.u32 	%r895, [%rd6];
	ld.local.u32 	%r896, [%rd5+12];
	// inline asm
	prmt.b32 %r8460, %r895, %r896, %r4;
	// inline asm
	ld.local.u32 	%r899, [%rd5+12];
	ld.local.u32 	%r900, [%rd5+8];
	// inline asm
	prmt.b32 %r8461, %r899, %r900, %r4;
	// inline asm
	ld.local.u32 	%r903, [%rd5+8];
	ld.local.u32 	%r904, [%rd5+4];
	// inline asm
	prmt.b32 %r8454, %r903, %r904, %r4;
	// inline asm
	ld.local.u32 	%r907, [%rd5+4];
	ld.local.u32 	%r908, [%rd5];
	// inline asm
	prmt.b32 %r8455, %r907, %r908, %r4;
	// inline asm
	ld.local.u32 	%r911, [%rd5];
	ld.local.u32 	%r912, [%rd4+12];
	// inline asm
	prmt.b32 %r8456, %r911, %r912, %r4;
	// inline asm
	ld.local.u32 	%r915, [%rd4+12];
	ld.local.u32 	%r916, [%rd4+8];
	// inline asm
	prmt.b32 %r8457, %r915, %r916, %r4;
	// inline asm
	ld.local.u32 	%r919, [%rd4+8];
	ld.local.u32 	%r920, [%rd4+4];
	// inline asm
	prmt.b32 %r8450, %r919, %r920, %r4;
	// inline asm
	ld.local.u32 	%r923, [%rd4+4];
	ld.local.u32 	%r924, [%rd4];
	// inline asm
	prmt.b32 %r8451, %r923, %r924, %r4;
	// inline asm
	ld.local.u32 	%r927, [%rd4];
	ld.local.u32 	%r928, [%rd3+12];
	// inline asm
	prmt.b32 %r8452, %r927, %r928, %r4;
	// inline asm
	ld.local.u32 	%r931, [%rd3+12];
	ld.local.u32 	%r932, [%rd3+8];
	// inline asm
	prmt.b32 %r8453, %r931, %r932, %r4;
	// inline asm
	ld.local.u32 	%r935, [%rd3+8];
	ld.local.u32 	%r936, [%rd3+4];
	// inline asm
	prmt.b32 %r8446, %r935, %r936, %r4;
	// inline asm
	ld.local.u32 	%r939, [%rd3+4];
	ld.local.u32 	%r940, [%rd3];
	// inline asm
	prmt.b32 %r8447, %r939, %r940, %r4;
	// inline asm
	ld.local.u32 	%r943, [%rd3];
	ld.local.u32 	%r944, [%rd2+12];
	// inline asm
	prmt.b32 %r8448, %r943, %r944, %r4;
	// inline asm
	ld.local.u32 	%r947, [%rd2+12];
	ld.local.u32 	%r948, [%rd2+8];
	// inline asm
	prmt.b32 %r8449, %r947, %r948, %r4;
	// inline asm
	ld.local.u32 	%r951, [%rd2+8];
	ld.local.u32 	%r952, [%rd2+4];
	// inline asm
	prmt.b32 %r8442, %r951, %r952, %r4;
	// inline asm
	ld.local.u32 	%r955, [%rd2+4];
	ld.local.u32 	%r956, [%rd2];
	// inline asm
	prmt.b32 %r8443, %r955, %r956, %r4;
	// inline asm
	ld.local.u32 	%r959, [%rd2];
	ld.local.u32 	%r960, [%rd1+12];
	// inline asm
	prmt.b32 %r8444, %r959, %r960, %r4;
	// inline asm
	ld.local.u32 	%r963, [%rd1+12];
	ld.local.u32 	%r964, [%rd1+8];
	// inline asm
	prmt.b32 %r8445, %r963, %r964, %r4;
	// inline asm
	ld.local.u32 	%r967, [%rd1+8];
	ld.local.u32 	%r968, [%rd1+4];
	// inline asm
	prmt.b32 %r966, %r967, %r968, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r966;
	ld.local.u32 	%r971, [%rd1+4];
	ld.local.u32 	%r972, [%rd1];
	// inline asm
	prmt.b32 %r970, %r971, %r972, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r970;
	ld.local.u32 	%r975, [%rd1];
	// inline asm
	prmt.b32 %r974, %r975, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r974;
	st.local.u32 	[%rd8], %r8441;
	st.local.u32 	[%rd7+12], %r8441;
	st.local.u32 	[%rd7+8], %r8441;
	st.local.u32 	[%rd7+4], %r8441;
	st.local.u32 	[%rd7], %r8441;
	st.local.u32 	[%rd6+12], %r8441;
	st.local.u32 	[%rd6+8], %r8441;
	st.local.u32 	[%rd6+4], %r8441;
	st.local.u32 	[%rd6], %r8441;
	st.local.u32 	[%rd5+12], %r8441;
	st.local.u32 	[%rd5+8], %r8441;
	st.local.u32 	[%rd5+4], %r8441;
	st.local.u32 	[%rd5], %r8441;
	st.local.u32 	[%rd4+12], %r8441;
	st.local.u32 	[%rd4+8], %r8441;
	st.local.u32 	[%rd4+4], %r8441;
	st.local.u32 	[%rd4], %r8441;
	st.local.u32 	[%rd3+12], %r8441;
	st.local.u32 	[%rd3+8], %r8441;
	st.local.u32 	[%rd3+4], %r8441;
	st.local.u32 	[%rd3], %r8441;
	st.local.u32 	[%rd2+12], %r8441;
	st.local.u32 	[%rd2+8], %r8441;
	st.local.u32 	[%rd2+4], %r8441;
	st.local.u32 	[%rd2], %r8441;
	st.local.u32 	[%rd1+12], %r8441;
	st.local.u32 	[%rd1+8], %r8441;
	mov.u64 	%rd101, 0;
	st.local.u32 	[%rd1+4], %rd101;
	st.local.u32 	[%rd1], %rd101;
	mov.u32 	%r8470, %r8441;
	mov.u32 	%r8471, %r8441;
	bra.uni 	BB1_90;

BB1_101:
	setp.eq.s32	%p95, %r3, 3;
	@%p95 bra 	BB1_102;
	bra.uni 	BB1_172;

BB1_102:
	ld.local.u32 	%r7824, [%rd8];
	ld.local.u32 	%r7825, [%rd7+12];
	// inline asm
	prmt.b32 %r7823, %r7824, %r7825, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7823;
	ld.local.u32 	%r7828, [%rd7+12];
	ld.local.u32 	%r7829, [%rd7+8];
	// inline asm
	prmt.b32 %r7827, %r7828, %r7829, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7827;
	ld.local.u32 	%r7832, [%rd7+8];
	ld.local.u32 	%r7833, [%rd7+4];
	// inline asm
	prmt.b32 %r7831, %r7832, %r7833, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7831;
	ld.local.u32 	%r7836, [%rd7+4];
	ld.local.u32 	%r7837, [%rd7];
	// inline asm
	prmt.b32 %r7835, %r7836, %r7837, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7835;
	ld.local.u32 	%r7840, [%rd7];
	ld.local.u32 	%r7841, [%rd6+12];
	// inline asm
	prmt.b32 %r7839, %r7840, %r7841, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7839;
	ld.local.u32 	%r7844, [%rd6+12];
	ld.local.u32 	%r7845, [%rd6+8];
	// inline asm
	prmt.b32 %r7843, %r7844, %r7845, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7843;
	ld.local.u32 	%r7848, [%rd6+8];
	ld.local.u32 	%r7849, [%rd6+4];
	// inline asm
	prmt.b32 %r7847, %r7848, %r7849, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7847;
	ld.local.u32 	%r7852, [%rd6+4];
	ld.local.u32 	%r7853, [%rd6];
	// inline asm
	prmt.b32 %r7851, %r7852, %r7853, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7851;
	ld.local.u32 	%r7856, [%rd6];
	ld.local.u32 	%r7857, [%rd5+12];
	// inline asm
	prmt.b32 %r7855, %r7856, %r7857, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7855;
	ld.local.u32 	%r7860, [%rd5+12];
	ld.local.u32 	%r7861, [%rd5+8];
	// inline asm
	prmt.b32 %r7859, %r7860, %r7861, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7859;
	ld.local.u32 	%r7864, [%rd5+8];
	ld.local.u32 	%r7865, [%rd5+4];
	// inline asm
	prmt.b32 %r7863, %r7864, %r7865, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7863;
	ld.local.u32 	%r7868, [%rd5+4];
	ld.local.u32 	%r7869, [%rd5];
	// inline asm
	prmt.b32 %r7867, %r7868, %r7869, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7867;
	ld.local.u32 	%r7872, [%rd5];
	ld.local.u32 	%r7873, [%rd4+12];
	// inline asm
	prmt.b32 %r7871, %r7872, %r7873, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7871;
	ld.local.u32 	%r7876, [%rd4+12];
	ld.local.u32 	%r7877, [%rd4+8];
	// inline asm
	prmt.b32 %r7875, %r7876, %r7877, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7875;
	ld.local.u32 	%r7880, [%rd4+8];
	ld.local.u32 	%r7881, [%rd4+4];
	// inline asm
	prmt.b32 %r7879, %r7880, %r7881, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7879;
	ld.local.u32 	%r7884, [%rd4+4];
	ld.local.u32 	%r7885, [%rd4];
	// inline asm
	prmt.b32 %r7883, %r7884, %r7885, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7883;
	ld.local.u32 	%r7888, [%rd4];
	ld.local.u32 	%r7889, [%rd3+12];
	// inline asm
	prmt.b32 %r7887, %r7888, %r7889, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7887;
	ld.local.u32 	%r7892, [%rd3+12];
	ld.local.u32 	%r7893, [%rd3+8];
	// inline asm
	prmt.b32 %r7891, %r7892, %r7893, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7891;
	ld.local.u32 	%r7896, [%rd3+8];
	ld.local.u32 	%r7897, [%rd3+4];
	// inline asm
	prmt.b32 %r7895, %r7896, %r7897, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7895;
	ld.local.u32 	%r7900, [%rd3+4];
	ld.local.u32 	%r7901, [%rd3];
	// inline asm
	prmt.b32 %r7899, %r7900, %r7901, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7899;
	ld.local.u32 	%r7904, [%rd3];
	ld.local.u32 	%r7905, [%rd2+12];
	// inline asm
	prmt.b32 %r7903, %r7904, %r7905, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7903;
	ld.local.u32 	%r7908, [%rd2+12];
	ld.local.u32 	%r7909, [%rd2+8];
	// inline asm
	prmt.b32 %r7907, %r7908, %r7909, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7907;
	ld.local.u32 	%r7912, [%rd2+8];
	ld.local.u32 	%r7913, [%rd2+4];
	// inline asm
	prmt.b32 %r7911, %r7912, %r7913, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r7911;
	ld.local.u32 	%r7916, [%rd2+4];
	ld.local.u32 	%r7917, [%rd2];
	// inline asm
	prmt.b32 %r7915, %r7916, %r7917, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r7915;
	ld.local.u32 	%r7920, [%rd2];
	ld.local.u32 	%r7921, [%rd1+12];
	// inline asm
	prmt.b32 %r7919, %r7920, %r7921, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r7919;
	ld.local.u32 	%r7924, [%rd1+12];
	ld.local.u32 	%r7925, [%rd1+8];
	// inline asm
	prmt.b32 %r7923, %r7924, %r7925, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r7923;
	ld.local.u32 	%r7928, [%rd1+8];
	ld.local.u32 	%r7929, [%rd1+4];
	// inline asm
	prmt.b32 %r7927, %r7928, %r7929, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r7927;
	ld.local.u32 	%r7932, [%rd1+4];
	ld.local.u32 	%r7933, [%rd1];
	// inline asm
	prmt.b32 %r7931, %r7932, %r7933, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r7931;
	ld.local.u32 	%r7936, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r7935, %r7936, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r7935;
	st.local.u32 	[%rd1+8], %r8475;
	mov.u64 	%rd1175, 0;
	st.local.u32 	[%rd1+4], %rd1175;
	st.local.u32 	[%rd1], %rd1175;
	bra.uni 	BB1_173;

BB1_10:
	setp.eq.s32	%p47, %r3, 3;
	@%p47 bra 	BB1_11;
	bra.uni 	BB1_88;

BB1_11:
	ld.local.u32 	%r4683, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8442, %r8441, %r4683, %r4;
	// inline asm
	ld.local.u32 	%r4686, [%rd8+12];
	ld.local.u32 	%r4687, [%rd8+8];
	// inline asm
	prmt.b32 %r8443, %r4686, %r4687, %r4;
	// inline asm
	ld.local.u32 	%r4690, [%rd8+8];
	ld.local.u32 	%r4691, [%rd8+4];
	// inline asm
	prmt.b32 %r8444, %r4690, %r4691, %r4;
	// inline asm
	ld.local.u32 	%r4694, [%rd8+4];
	ld.local.u32 	%r4695, [%rd8];
	// inline asm
	prmt.b32 %r8445, %r4694, %r4695, %r4;
	// inline asm
	ld.local.u32 	%r4698, [%rd8];
	ld.local.u32 	%r4699, [%rd7+12];
	// inline asm
	prmt.b32 %r4697, %r4698, %r4699, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r4697;
	ld.local.u32 	%r4702, [%rd7+12];
	ld.local.u32 	%r4703, [%rd7+8];
	// inline asm
	prmt.b32 %r4701, %r4702, %r4703, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r4701;
	ld.local.u32 	%r4706, [%rd7+8];
	ld.local.u32 	%r4707, [%rd7+4];
	// inline asm
	prmt.b32 %r4705, %r4706, %r4707, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r4705;
	ld.local.u32 	%r4710, [%rd7+4];
	ld.local.u32 	%r4711, [%rd7];
	// inline asm
	prmt.b32 %r4709, %r4710, %r4711, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r4709;
	ld.local.u32 	%r4714, [%rd7];
	ld.local.u32 	%r4715, [%rd6+12];
	// inline asm
	prmt.b32 %r4713, %r4714, %r4715, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r4713;
	ld.local.u32 	%r4718, [%rd6+12];
	ld.local.u32 	%r4719, [%rd6+8];
	// inline asm
	prmt.b32 %r4717, %r4718, %r4719, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r4717;
	ld.local.u32 	%r4722, [%rd6+8];
	ld.local.u32 	%r4723, [%rd6+4];
	// inline asm
	prmt.b32 %r4721, %r4722, %r4723, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r4721;
	ld.local.u32 	%r4726, [%rd6+4];
	ld.local.u32 	%r4727, [%rd6];
	// inline asm
	prmt.b32 %r4725, %r4726, %r4727, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r4725;
	ld.local.u32 	%r4730, [%rd6];
	ld.local.u32 	%r4731, [%rd5+12];
	// inline asm
	prmt.b32 %r4729, %r4730, %r4731, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r4729;
	ld.local.u32 	%r4734, [%rd5+12];
	ld.local.u32 	%r4735, [%rd5+8];
	// inline asm
	prmt.b32 %r4733, %r4734, %r4735, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r4733;
	ld.local.u32 	%r4738, [%rd5+8];
	ld.local.u32 	%r4739, [%rd5+4];
	// inline asm
	prmt.b32 %r4737, %r4738, %r4739, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4737;
	ld.local.u32 	%r4742, [%rd5+4];
	ld.local.u32 	%r4743, [%rd5];
	// inline asm
	prmt.b32 %r4741, %r4742, %r4743, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4741;
	ld.local.u32 	%r4746, [%rd5];
	ld.local.u32 	%r4747, [%rd4+12];
	// inline asm
	prmt.b32 %r4745, %r4746, %r4747, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4745;
	ld.local.u32 	%r4750, [%rd4+12];
	ld.local.u32 	%r4751, [%rd4+8];
	// inline asm
	prmt.b32 %r4749, %r4750, %r4751, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4749;
	ld.local.u32 	%r4754, [%rd4+8];
	ld.local.u32 	%r4755, [%rd4+4];
	// inline asm
	prmt.b32 %r4753, %r4754, %r4755, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4753;
	ld.local.u32 	%r4758, [%rd4+4];
	ld.local.u32 	%r4759, [%rd4];
	// inline asm
	prmt.b32 %r4757, %r4758, %r4759, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4757;
	ld.local.u32 	%r4762, [%rd4];
	ld.local.u32 	%r4763, [%rd3+12];
	// inline asm
	prmt.b32 %r4761, %r4762, %r4763, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4761;
	ld.local.u32 	%r4766, [%rd3+12];
	ld.local.u32 	%r4767, [%rd3+8];
	// inline asm
	prmt.b32 %r4765, %r4766, %r4767, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4765;
	ld.local.u32 	%r4770, [%rd3+8];
	ld.local.u32 	%r4771, [%rd3+4];
	// inline asm
	prmt.b32 %r4769, %r4770, %r4771, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4769;
	ld.local.u32 	%r4774, [%rd3+4];
	ld.local.u32 	%r4775, [%rd3];
	// inline asm
	prmt.b32 %r4773, %r4774, %r4775, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4773;
	ld.local.u32 	%r4778, [%rd3];
	ld.local.u32 	%r4779, [%rd2+12];
	// inline asm
	prmt.b32 %r4777, %r4778, %r4779, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4777;
	ld.local.u32 	%r4782, [%rd2+12];
	ld.local.u32 	%r4783, [%rd2+8];
	// inline asm
	prmt.b32 %r4781, %r4782, %r4783, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4781;
	ld.local.u32 	%r4786, [%rd2+8];
	ld.local.u32 	%r4787, [%rd2+4];
	// inline asm
	prmt.b32 %r4785, %r4786, %r4787, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4785;
	ld.local.u32 	%r4790, [%rd2+4];
	ld.local.u32 	%r4791, [%rd2];
	// inline asm
	prmt.b32 %r4789, %r4790, %r4791, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4789;
	ld.local.u32 	%r4794, [%rd2];
	ld.local.u32 	%r4795, [%rd1+12];
	// inline asm
	prmt.b32 %r4793, %r4794, %r4795, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r4793;
	ld.local.u32 	%r4798, [%rd1+12];
	ld.local.u32 	%r4799, [%rd1+8];
	// inline asm
	prmt.b32 %r4797, %r4798, %r4799, %r4;
	// inline asm
	st.local.u32 	[%rd2+8], %r4797;
	ld.local.u32 	%r4802, [%rd1+8];
	ld.local.u32 	%r4803, [%rd1+4];
	// inline asm
	prmt.b32 %r4801, %r4802, %r4803, %r4;
	// inline asm
	st.local.u32 	[%rd2+4], %r4801;
	ld.local.u32 	%r4806, [%rd1+4];
	ld.local.u32 	%r4807, [%rd1];
	// inline asm
	prmt.b32 %r4805, %r4806, %r4807, %r4;
	// inline asm
	st.local.u32 	[%rd2], %r4805;
	ld.local.u32 	%r4810, [%rd1];
	// inline asm
	prmt.b32 %r4809, %r4810, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd1+12], %r4809;
	st.local.u32 	[%rd1+8], %r8441;
	mov.u64 	%rd127, 0;
	st.local.u32 	[%rd1+4], %rd127;
	st.local.u32 	[%rd1], %rd127;

BB1_12:
	mov.u32 	%r8446, %r8441;
	mov.u32 	%r8447, %r8441;
	mov.u32 	%r8448, %r8441;
	mov.u32 	%r8449, %r8441;
	bra.uni 	BB1_80;

BB1_132:
	setp.eq.s32	%p72, %r3, 19;
	@%p72 bra 	BB1_133;
	bra.uni 	BB1_172;

BB1_133:
	ld.local.u32 	%r6496, [%rd4];
	ld.local.u32 	%r6497, [%rd3+12];
	// inline asm
	prmt.b32 %r6495, %r6496, %r6497, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6495;
	ld.local.u32 	%r6500, [%rd3+12];
	ld.local.u32 	%r6501, [%rd3+8];
	// inline asm
	prmt.b32 %r6499, %r6500, %r6501, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6499;
	ld.local.u32 	%r6504, [%rd3+8];
	ld.local.u32 	%r6505, [%rd3+4];
	// inline asm
	prmt.b32 %r6503, %r6504, %r6505, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6503;
	ld.local.u32 	%r6508, [%rd3+4];
	ld.local.u32 	%r6509, [%rd3];
	// inline asm
	prmt.b32 %r6507, %r6508, %r6509, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6507;
	ld.local.u32 	%r6512, [%rd3];
	ld.local.u32 	%r6513, [%rd2+12];
	// inline asm
	prmt.b32 %r6511, %r6512, %r6513, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6511;
	ld.local.u32 	%r6516, [%rd2+12];
	ld.local.u32 	%r6517, [%rd2+8];
	// inline asm
	prmt.b32 %r6515, %r6516, %r6517, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6515;
	ld.local.u32 	%r6520, [%rd2+8];
	ld.local.u32 	%r6521, [%rd2+4];
	// inline asm
	prmt.b32 %r6519, %r6520, %r6521, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6519;
	ld.local.u32 	%r6524, [%rd2+4];
	ld.local.u32 	%r6525, [%rd2];
	// inline asm
	prmt.b32 %r6523, %r6524, %r6525, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6523;
	ld.local.u32 	%r6528, [%rd2];
	ld.local.u32 	%r6529, [%rd1+12];
	// inline asm
	prmt.b32 %r6527, %r6528, %r6529, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6527;
	ld.local.u32 	%r6532, [%rd1+12];
	ld.local.u32 	%r6533, [%rd1+8];
	// inline asm
	prmt.b32 %r6531, %r6532, %r6533, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6531;
	ld.local.u32 	%r6536, [%rd1+8];
	ld.local.u32 	%r6537, [%rd1+4];
	// inline asm
	prmt.b32 %r6535, %r6536, %r6537, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6535;
	ld.local.u32 	%r6540, [%rd1+4];
	ld.local.u32 	%r6541, [%rd1];
	// inline asm
	prmt.b32 %r6539, %r6540, %r6541, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6539;
	ld.local.u32 	%r6544, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r6543, %r6544, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r6543;
	st.local.u32 	[%rd5+8], %r8475;
	st.local.u32 	[%rd5+4], %r8475;
	st.local.u32 	[%rd5], %r8475;
	st.local.u32 	[%rd4+12], %r8475;
	st.local.u32 	[%rd4+8], %r8475;
	st.local.u32 	[%rd4+4], %r8475;
	st.local.u32 	[%rd4], %r8475;
	st.local.u32 	[%rd3+12], %r8475;
	st.local.u32 	[%rd3+8], %r8475;
	st.local.u32 	[%rd3+4], %r8475;
	st.local.u32 	[%rd3], %r8475;
	st.local.u32 	[%rd2+12], %r8475;
	st.local.u32 	[%rd2+8], %r8475;
	st.local.u32 	[%rd2+4], %r8475;
	st.local.u32 	[%rd2], %r8475;
	st.local.u32 	[%rd1+12], %r8475;
	st.local.u32 	[%rd1+8], %r8475;
	mov.u64 	%rd1159, 0;
	st.local.u32 	[%rd1+4], %rd1159;
	st.local.u32 	[%rd1], %rd1159;
	bra.uni 	BB1_173;

BB1_42:
	setp.eq.s32	%p24, %r3, 19;
	@%p24 bra 	BB1_43;
	bra.uni 	BB1_88;

BB1_43:
	ld.local.u32 	%r2243, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8458, %r8441, %r2243, %r4;
	// inline asm
	ld.local.u32 	%r2246, [%rd8+12];
	ld.local.u32 	%r2247, [%rd8+8];
	// inline asm
	prmt.b32 %r8459, %r2246, %r2247, %r4;
	// inline asm
	ld.local.u32 	%r2250, [%rd8+8];
	ld.local.u32 	%r2251, [%rd8+4];
	// inline asm
	prmt.b32 %r8460, %r2250, %r2251, %r4;
	// inline asm
	ld.local.u32 	%r2254, [%rd8+4];
	ld.local.u32 	%r2255, [%rd8];
	// inline asm
	prmt.b32 %r8461, %r2254, %r2255, %r4;
	// inline asm
	ld.local.u32 	%r2258, [%rd8];
	ld.local.u32 	%r2259, [%rd7+12];
	// inline asm
	prmt.b32 %r8454, %r2258, %r2259, %r4;
	// inline asm
	ld.local.u32 	%r2262, [%rd7+12];
	ld.local.u32 	%r2263, [%rd7+8];
	// inline asm
	prmt.b32 %r8455, %r2262, %r2263, %r4;
	// inline asm
	ld.local.u32 	%r2266, [%rd7+8];
	ld.local.u32 	%r2267, [%rd7+4];
	// inline asm
	prmt.b32 %r8456, %r2266, %r2267, %r4;
	// inline asm
	ld.local.u32 	%r2270, [%rd7+4];
	ld.local.u32 	%r2271, [%rd7];
	// inline asm
	prmt.b32 %r8457, %r2270, %r2271, %r4;
	// inline asm
	ld.local.u32 	%r2274, [%rd7];
	ld.local.u32 	%r2275, [%rd6+12];
	// inline asm
	prmt.b32 %r8450, %r2274, %r2275, %r4;
	// inline asm
	ld.local.u32 	%r2278, [%rd6+12];
	ld.local.u32 	%r2279, [%rd6+8];
	// inline asm
	prmt.b32 %r8451, %r2278, %r2279, %r4;
	// inline asm
	ld.local.u32 	%r2282, [%rd6+8];
	ld.local.u32 	%r2283, [%rd6+4];
	// inline asm
	prmt.b32 %r8452, %r2282, %r2283, %r4;
	// inline asm
	ld.local.u32 	%r2286, [%rd6+4];
	ld.local.u32 	%r2287, [%rd6];
	// inline asm
	prmt.b32 %r8453, %r2286, %r2287, %r4;
	// inline asm
	ld.local.u32 	%r2290, [%rd6];
	ld.local.u32 	%r2291, [%rd5+12];
	// inline asm
	prmt.b32 %r8446, %r2290, %r2291, %r4;
	// inline asm
	ld.local.u32 	%r2294, [%rd5+12];
	ld.local.u32 	%r2295, [%rd5+8];
	// inline asm
	prmt.b32 %r8447, %r2294, %r2295, %r4;
	// inline asm
	ld.local.u32 	%r2298, [%rd5+8];
	ld.local.u32 	%r2299, [%rd5+4];
	// inline asm
	prmt.b32 %r8448, %r2298, %r2299, %r4;
	// inline asm
	ld.local.u32 	%r2302, [%rd5+4];
	ld.local.u32 	%r2303, [%rd5];
	// inline asm
	prmt.b32 %r8449, %r2302, %r2303, %r4;
	// inline asm
	ld.local.u32 	%r2306, [%rd5];
	ld.local.u32 	%r2307, [%rd4+12];
	// inline asm
	prmt.b32 %r8442, %r2306, %r2307, %r4;
	// inline asm
	ld.local.u32 	%r2310, [%rd4+12];
	ld.local.u32 	%r2311, [%rd4+8];
	// inline asm
	prmt.b32 %r8443, %r2310, %r2311, %r4;
	// inline asm
	ld.local.u32 	%r2314, [%rd4+8];
	ld.local.u32 	%r2315, [%rd4+4];
	// inline asm
	prmt.b32 %r8444, %r2314, %r2315, %r4;
	// inline asm
	ld.local.u32 	%r2318, [%rd4+4];
	ld.local.u32 	%r2319, [%rd4];
	// inline asm
	prmt.b32 %r8445, %r2318, %r2319, %r4;
	// inline asm
	ld.local.u32 	%r2322, [%rd4];
	ld.local.u32 	%r2323, [%rd3+12];
	// inline asm
	prmt.b32 %r2321, %r2322, %r2323, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2321;
	ld.local.u32 	%r2326, [%rd3+12];
	ld.local.u32 	%r2327, [%rd3+8];
	// inline asm
	prmt.b32 %r2325, %r2326, %r2327, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2325;
	ld.local.u32 	%r2330, [%rd3+8];
	ld.local.u32 	%r2331, [%rd3+4];
	// inline asm
	prmt.b32 %r2329, %r2330, %r2331, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2329;
	ld.local.u32 	%r2334, [%rd3+4];
	ld.local.u32 	%r2335, [%rd3];
	// inline asm
	prmt.b32 %r2333, %r2334, %r2335, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2333;
	ld.local.u32 	%r2338, [%rd3];
	ld.local.u32 	%r2339, [%rd2+12];
	// inline asm
	prmt.b32 %r2337, %r2338, %r2339, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2337;
	ld.local.u32 	%r2342, [%rd2+12];
	ld.local.u32 	%r2343, [%rd2+8];
	// inline asm
	prmt.b32 %r2341, %r2342, %r2343, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2341;
	ld.local.u32 	%r2346, [%rd2+8];
	ld.local.u32 	%r2347, [%rd2+4];
	// inline asm
	prmt.b32 %r2345, %r2346, %r2347, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2345;
	ld.local.u32 	%r2350, [%rd2+4];
	ld.local.u32 	%r2351, [%rd2];
	// inline asm
	prmt.b32 %r2349, %r2350, %r2351, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2349;
	ld.local.u32 	%r2354, [%rd2];
	ld.local.u32 	%r2355, [%rd1+12];
	// inline asm
	prmt.b32 %r2353, %r2354, %r2355, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2353;
	ld.local.u32 	%r2358, [%rd1+12];
	ld.local.u32 	%r2359, [%rd1+8];
	// inline asm
	prmt.b32 %r2357, %r2358, %r2359, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2357;
	ld.local.u32 	%r2362, [%rd1+8];
	ld.local.u32 	%r2363, [%rd1+4];
	// inline asm
	prmt.b32 %r2361, %r2362, %r2363, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2361;
	ld.local.u32 	%r2366, [%rd1+4];
	ld.local.u32 	%r2367, [%rd1];
	// inline asm
	prmt.b32 %r2365, %r2366, %r2367, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r2365;
	ld.local.u32 	%r2370, [%rd1];
	// inline asm
	prmt.b32 %r2369, %r2370, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r2369;
	st.local.u32 	[%rd5+8], %r8441;
	st.local.u32 	[%rd5+4], %r8441;
	st.local.u32 	[%rd5], %r8441;
	st.local.u32 	[%rd4+12], %r8441;
	st.local.u32 	[%rd4+8], %r8441;
	st.local.u32 	[%rd4+4], %r8441;
	st.local.u32 	[%rd4], %r8441;
	st.local.u32 	[%rd3+12], %r8441;
	st.local.u32 	[%rd3+8], %r8441;
	st.local.u32 	[%rd3+4], %r8441;
	st.local.u32 	[%rd3], %r8441;
	st.local.u32 	[%rd2+12], %r8441;
	st.local.u32 	[%rd2+8], %r8441;
	st.local.u32 	[%rd2+4], %r8441;
	st.local.u32 	[%rd2], %r8441;
	st.local.u32 	[%rd1+12], %r8441;
	st.local.u32 	[%rd1+8], %r8441;
	mov.u64 	%rd111, 0;
	st.local.u32 	[%rd1+4], %rd111;
	st.local.u32 	[%rd1], %rd111;
	bra.uni 	BB1_83;

BB1_116:
	setp.eq.s32	%p84, %r3, 11;
	@%p84 bra 	BB1_117;
	bra.uni 	BB1_172;

BB1_117:
	ld.local.u32 	%r7032, [%rd6];
	ld.local.u32 	%r7033, [%rd5+12];
	// inline asm
	prmt.b32 %r7031, %r7032, %r7033, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7031;
	ld.local.u32 	%r7036, [%rd5+12];
	ld.local.u32 	%r7037, [%rd5+8];
	// inline asm
	prmt.b32 %r7035, %r7036, %r7037, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7035;
	ld.local.u32 	%r7040, [%rd5+8];
	ld.local.u32 	%r7041, [%rd5+4];
	// inline asm
	prmt.b32 %r7039, %r7040, %r7041, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7039;
	ld.local.u32 	%r7044, [%rd5+4];
	ld.local.u32 	%r7045, [%rd5];
	// inline asm
	prmt.b32 %r7043, %r7044, %r7045, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7043;
	ld.local.u32 	%r7048, [%rd5];
	ld.local.u32 	%r7049, [%rd4+12];
	// inline asm
	prmt.b32 %r7047, %r7048, %r7049, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7047;
	ld.local.u32 	%r7052, [%rd4+12];
	ld.local.u32 	%r7053, [%rd4+8];
	// inline asm
	prmt.b32 %r7051, %r7052, %r7053, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7051;
	ld.local.u32 	%r7056, [%rd4+8];
	ld.local.u32 	%r7057, [%rd4+4];
	// inline asm
	prmt.b32 %r7055, %r7056, %r7057, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7055;
	ld.local.u32 	%r7060, [%rd4+4];
	ld.local.u32 	%r7061, [%rd4];
	// inline asm
	prmt.b32 %r7059, %r7060, %r7061, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7059;
	ld.local.u32 	%r7064, [%rd4];
	ld.local.u32 	%r7065, [%rd3+12];
	// inline asm
	prmt.b32 %r7063, %r7064, %r7065, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7063;
	ld.local.u32 	%r7068, [%rd3+12];
	ld.local.u32 	%r7069, [%rd3+8];
	// inline asm
	prmt.b32 %r7067, %r7068, %r7069, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7067;
	ld.local.u32 	%r7072, [%rd3+8];
	ld.local.u32 	%r7073, [%rd3+4];
	// inline asm
	prmt.b32 %r7071, %r7072, %r7073, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7071;
	ld.local.u32 	%r7076, [%rd3+4];
	ld.local.u32 	%r7077, [%rd3];
	// inline asm
	prmt.b32 %r7075, %r7076, %r7077, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7075;
	ld.local.u32 	%r7080, [%rd3];
	ld.local.u32 	%r7081, [%rd2+12];
	// inline asm
	prmt.b32 %r7079, %r7080, %r7081, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7079;
	ld.local.u32 	%r7084, [%rd2+12];
	ld.local.u32 	%r7085, [%rd2+8];
	// inline asm
	prmt.b32 %r7083, %r7084, %r7085, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7083;
	ld.local.u32 	%r7088, [%rd2+8];
	ld.local.u32 	%r7089, [%rd2+4];
	// inline asm
	prmt.b32 %r7087, %r7088, %r7089, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7087;
	ld.local.u32 	%r7092, [%rd2+4];
	ld.local.u32 	%r7093, [%rd2];
	// inline asm
	prmt.b32 %r7091, %r7092, %r7093, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7091;
	ld.local.u32 	%r7096, [%rd2];
	ld.local.u32 	%r7097, [%rd1+12];
	// inline asm
	prmt.b32 %r7095, %r7096, %r7097, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7095;
	ld.local.u32 	%r7100, [%rd1+12];
	ld.local.u32 	%r7101, [%rd1+8];
	// inline asm
	prmt.b32 %r7099, %r7100, %r7101, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7099;
	ld.local.u32 	%r7104, [%rd1+8];
	ld.local.u32 	%r7105, [%rd1+4];
	// inline asm
	prmt.b32 %r7103, %r7104, %r7105, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7103;
	ld.local.u32 	%r7108, [%rd1+4];
	ld.local.u32 	%r7109, [%rd1];
	// inline asm
	prmt.b32 %r7107, %r7108, %r7109, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7107;
	ld.local.u32 	%r7112, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r7111, %r7112, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7111;
	st.local.u32 	[%rd3+8], %r8475;
	st.local.u32 	[%rd3+4], %r8475;
	st.local.u32 	[%rd3], %r8475;
	st.local.u32 	[%rd2+12], %r8475;
	st.local.u32 	[%rd2+8], %r8475;
	st.local.u32 	[%rd2+4], %r8475;
	st.local.u32 	[%rd2], %r8475;
	st.local.u32 	[%rd1+12], %r8475;
	st.local.u32 	[%rd1+8], %r8475;
	mov.u64 	%rd1167, 0;
	st.local.u32 	[%rd1+4], %rd1167;
	st.local.u32 	[%rd1], %rd1167;
	bra.uni 	BB1_173;

BB1_26:
	setp.eq.s32	%p36, %r3, 11;
	@%p36 bra 	BB1_27;
	bra.uni 	BB1_88;

BB1_27:
	ld.local.u32 	%r3431, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8450, %r8441, %r3431, %r4;
	// inline asm
	ld.local.u32 	%r3434, [%rd8+12];
	ld.local.u32 	%r3435, [%rd8+8];
	// inline asm
	prmt.b32 %r8451, %r3434, %r3435, %r4;
	// inline asm
	ld.local.u32 	%r3438, [%rd8+8];
	ld.local.u32 	%r3439, [%rd8+4];
	// inline asm
	prmt.b32 %r8452, %r3438, %r3439, %r4;
	// inline asm
	ld.local.u32 	%r3442, [%rd8+4];
	ld.local.u32 	%r3443, [%rd8];
	// inline asm
	prmt.b32 %r8453, %r3442, %r3443, %r4;
	// inline asm
	ld.local.u32 	%r3446, [%rd8];
	ld.local.u32 	%r3447, [%rd7+12];
	// inline asm
	prmt.b32 %r8446, %r3446, %r3447, %r4;
	// inline asm
	ld.local.u32 	%r3450, [%rd7+12];
	ld.local.u32 	%r3451, [%rd7+8];
	// inline asm
	prmt.b32 %r8447, %r3450, %r3451, %r4;
	// inline asm
	ld.local.u32 	%r3454, [%rd7+8];
	ld.local.u32 	%r3455, [%rd7+4];
	// inline asm
	prmt.b32 %r8448, %r3454, %r3455, %r4;
	// inline asm
	ld.local.u32 	%r3458, [%rd7+4];
	ld.local.u32 	%r3459, [%rd7];
	// inline asm
	prmt.b32 %r8449, %r3458, %r3459, %r4;
	// inline asm
	ld.local.u32 	%r3462, [%rd7];
	ld.local.u32 	%r3463, [%rd6+12];
	// inline asm
	prmt.b32 %r8442, %r3462, %r3463, %r4;
	// inline asm
	ld.local.u32 	%r3466, [%rd6+12];
	ld.local.u32 	%r3467, [%rd6+8];
	// inline asm
	prmt.b32 %r8443, %r3466, %r3467, %r4;
	// inline asm
	ld.local.u32 	%r3470, [%rd6+8];
	ld.local.u32 	%r3471, [%rd6+4];
	// inline asm
	prmt.b32 %r8444, %r3470, %r3471, %r4;
	// inline asm
	ld.local.u32 	%r3474, [%rd6+4];
	ld.local.u32 	%r3475, [%rd6];
	// inline asm
	prmt.b32 %r8445, %r3474, %r3475, %r4;
	// inline asm
	ld.local.u32 	%r3478, [%rd6];
	ld.local.u32 	%r3479, [%rd5+12];
	// inline asm
	prmt.b32 %r3477, %r3478, %r3479, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r3477;
	ld.local.u32 	%r3482, [%rd5+12];
	ld.local.u32 	%r3483, [%rd5+8];
	// inline asm
	prmt.b32 %r3481, %r3482, %r3483, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r3481;
	ld.local.u32 	%r3486, [%rd5+8];
	ld.local.u32 	%r3487, [%rd5+4];
	// inline asm
	prmt.b32 %r3485, %r3486, %r3487, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r3485;
	ld.local.u32 	%r3490, [%rd5+4];
	ld.local.u32 	%r3491, [%rd5];
	// inline asm
	prmt.b32 %r3489, %r3490, %r3491, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r3489;
	ld.local.u32 	%r3494, [%rd5];
	ld.local.u32 	%r3495, [%rd4+12];
	// inline asm
	prmt.b32 %r3493, %r3494, %r3495, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r3493;
	ld.local.u32 	%r3498, [%rd4+12];
	ld.local.u32 	%r3499, [%rd4+8];
	// inline asm
	prmt.b32 %r3497, %r3498, %r3499, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r3497;
	ld.local.u32 	%r3502, [%rd4+8];
	ld.local.u32 	%r3503, [%rd4+4];
	// inline asm
	prmt.b32 %r3501, %r3502, %r3503, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r3501;
	ld.local.u32 	%r3506, [%rd4+4];
	ld.local.u32 	%r3507, [%rd4];
	// inline asm
	prmt.b32 %r3505, %r3506, %r3507, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r3505;
	ld.local.u32 	%r3510, [%rd4];
	ld.local.u32 	%r3511, [%rd3+12];
	// inline asm
	prmt.b32 %r3509, %r3510, %r3511, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r3509;
	ld.local.u32 	%r3514, [%rd3+12];
	ld.local.u32 	%r3515, [%rd3+8];
	// inline asm
	prmt.b32 %r3513, %r3514, %r3515, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r3513;
	ld.local.u32 	%r3518, [%rd3+8];
	ld.local.u32 	%r3519, [%rd3+4];
	// inline asm
	prmt.b32 %r3517, %r3518, %r3519, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r3517;
	ld.local.u32 	%r3522, [%rd3+4];
	ld.local.u32 	%r3523, [%rd3];
	// inline asm
	prmt.b32 %r3521, %r3522, %r3523, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r3521;
	ld.local.u32 	%r3526, [%rd3];
	ld.local.u32 	%r3527, [%rd2+12];
	// inline asm
	prmt.b32 %r3525, %r3526, %r3527, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r3525;
	ld.local.u32 	%r3530, [%rd2+12];
	ld.local.u32 	%r3531, [%rd2+8];
	// inline asm
	prmt.b32 %r3529, %r3530, %r3531, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r3529;
	ld.local.u32 	%r3534, [%rd2+8];
	ld.local.u32 	%r3535, [%rd2+4];
	// inline asm
	prmt.b32 %r3533, %r3534, %r3535, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r3533;
	ld.local.u32 	%r3538, [%rd2+4];
	ld.local.u32 	%r3539, [%rd2];
	// inline asm
	prmt.b32 %r3537, %r3538, %r3539, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r3537;
	ld.local.u32 	%r3542, [%rd2];
	ld.local.u32 	%r3543, [%rd1+12];
	// inline asm
	prmt.b32 %r3541, %r3542, %r3543, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r3541;
	ld.local.u32 	%r3546, [%rd1+12];
	ld.local.u32 	%r3547, [%rd1+8];
	// inline asm
	prmt.b32 %r3545, %r3546, %r3547, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r3545;
	ld.local.u32 	%r3550, [%rd1+8];
	ld.local.u32 	%r3551, [%rd1+4];
	// inline asm
	prmt.b32 %r3549, %r3550, %r3551, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r3549;
	ld.local.u32 	%r3554, [%rd1+4];
	ld.local.u32 	%r3555, [%rd1];
	// inline asm
	prmt.b32 %r3553, %r3554, %r3555, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r3553;
	ld.local.u32 	%r3558, [%rd1];
	// inline asm
	prmt.b32 %r3557, %r3558, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r3557;
	st.local.u32 	[%rd3+8], %r8441;
	st.local.u32 	[%rd3+4], %r8441;
	st.local.u32 	[%rd3], %r8441;
	st.local.u32 	[%rd2+12], %r8441;
	st.local.u32 	[%rd2+8], %r8441;
	st.local.u32 	[%rd2+4], %r8441;
	st.local.u32 	[%rd2], %r8441;
	st.local.u32 	[%rd1+12], %r8441;
	st.local.u32 	[%rd1+8], %r8441;
	mov.u64 	%rd119, 0;
	st.local.u32 	[%rd1+4], %rd119;
	st.local.u32 	[%rd1], %rd119;
	bra.uni 	BB1_81;

BB1_147:
	setp.eq.s32	%p61, %r3, 27;
	@%p61 bra 	BB1_148;
	bra.uni 	BB1_172;

BB1_148:
	ld.local.u32 	%r6216, [%rd2];
	ld.local.u32 	%r6217, [%rd1+12];
	// inline asm
	prmt.b32 %r6215, %r6216, %r6217, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6215;
	ld.local.u32 	%r6220, [%rd1+12];
	ld.local.u32 	%r6221, [%rd1+8];
	// inline asm
	prmt.b32 %r6219, %r6220, %r6221, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6219;
	ld.local.u32 	%r6224, [%rd1+8];
	ld.local.u32 	%r6225, [%rd1+4];
	// inline asm
	prmt.b32 %r6223, %r6224, %r6225, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6223;
	ld.local.u32 	%r6228, [%rd1+4];
	ld.local.u32 	%r6229, [%rd1];
	// inline asm
	prmt.b32 %r6227, %r6228, %r6229, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6227;
	ld.local.u32 	%r6232, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r6231, %r6232, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6231;
	st.local.u32 	[%rd7+8], %r8475;
	st.local.u32 	[%rd7+4], %r8475;
	st.local.u32 	[%rd7], %r8475;
	st.local.u32 	[%rd6+12], %r8475;
	st.local.u32 	[%rd6+8], %r8475;
	st.local.u32 	[%rd6+4], %r8475;
	st.local.u32 	[%rd6], %r8475;
	st.local.u32 	[%rd5+12], %r8475;
	st.local.u32 	[%rd5+8], %r8475;
	st.local.u32 	[%rd5+4], %r8475;
	st.local.u32 	[%rd5], %r8475;
	st.local.u32 	[%rd4+12], %r8475;
	st.local.u32 	[%rd4+8], %r8475;
	st.local.u32 	[%rd4+4], %r8475;
	st.local.u32 	[%rd4], %r8475;
	st.local.u32 	[%rd3+12], %r8475;
	st.local.u32 	[%rd3+8], %r8475;
	st.local.u32 	[%rd3+4], %r8475;
	st.local.u32 	[%rd3], %r8475;
	st.local.u32 	[%rd2+12], %r8475;
	st.local.u32 	[%rd2+8], %r8475;
	st.local.u32 	[%rd2+4], %r8475;
	st.local.u32 	[%rd2], %r8475;
	st.local.u32 	[%rd1+12], %r8475;
	st.local.u32 	[%rd1+8], %r8475;
	mov.u64 	%rd1151, 0;
	st.local.u32 	[%rd1+4], %rd1151;
	st.local.u32 	[%rd1], %rd1151;
	bra.uni 	BB1_173;

BB1_57:
	setp.eq.s32	%p13, %r3, 27;
	@%p13 bra 	BB1_58;
	bra.uni 	BB1_88;

BB1_58:
	ld.local.u32 	%r1119, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8466, %r8441, %r1119, %r4;
	// inline asm
	ld.local.u32 	%r1122, [%rd8+12];
	ld.local.u32 	%r1123, [%rd8+8];
	// inline asm
	prmt.b32 %r8467, %r1122, %r1123, %r4;
	// inline asm
	ld.local.u32 	%r1126, [%rd8+8];
	ld.local.u32 	%r1127, [%rd8+4];
	// inline asm
	prmt.b32 %r8468, %r1126, %r1127, %r4;
	// inline asm
	ld.local.u32 	%r1130, [%rd8+4];
	ld.local.u32 	%r1131, [%rd8];
	// inline asm
	prmt.b32 %r8469, %r1130, %r1131, %r4;
	// inline asm
	ld.local.u32 	%r1134, [%rd8];
	ld.local.u32 	%r1135, [%rd7+12];
	// inline asm
	prmt.b32 %r8462, %r1134, %r1135, %r4;
	// inline asm
	ld.local.u32 	%r1138, [%rd7+12];
	ld.local.u32 	%r1139, [%rd7+8];
	// inline asm
	prmt.b32 %r8463, %r1138, %r1139, %r4;
	// inline asm
	ld.local.u32 	%r1142, [%rd7+8];
	ld.local.u32 	%r1143, [%rd7+4];
	// inline asm
	prmt.b32 %r8464, %r1142, %r1143, %r4;
	// inline asm
	ld.local.u32 	%r1146, [%rd7+4];
	ld.local.u32 	%r1147, [%rd7];
	// inline asm
	prmt.b32 %r8465, %r1146, %r1147, %r4;
	// inline asm
	ld.local.u32 	%r1150, [%rd7];
	ld.local.u32 	%r1151, [%rd6+12];
	// inline asm
	prmt.b32 %r8458, %r1150, %r1151, %r4;
	// inline asm
	ld.local.u32 	%r1154, [%rd6+12];
	ld.local.u32 	%r1155, [%rd6+8];
	// inline asm
	prmt.b32 %r8459, %r1154, %r1155, %r4;
	// inline asm
	ld.local.u32 	%r1158, [%rd6+8];
	ld.local.u32 	%r1159, [%rd6+4];
	// inline asm
	prmt.b32 %r8460, %r1158, %r1159, %r4;
	// inline asm
	ld.local.u32 	%r1162, [%rd6+4];
	ld.local.u32 	%r1163, [%rd6];
	// inline asm
	prmt.b32 %r8461, %r1162, %r1163, %r4;
	// inline asm
	ld.local.u32 	%r1166, [%rd6];
	ld.local.u32 	%r1167, [%rd5+12];
	// inline asm
	prmt.b32 %r8454, %r1166, %r1167, %r4;
	// inline asm
	ld.local.u32 	%r1170, [%rd5+12];
	ld.local.u32 	%r1171, [%rd5+8];
	// inline asm
	prmt.b32 %r8455, %r1170, %r1171, %r4;
	// inline asm
	ld.local.u32 	%r1174, [%rd5+8];
	ld.local.u32 	%r1175, [%rd5+4];
	// inline asm
	prmt.b32 %r8456, %r1174, %r1175, %r4;
	// inline asm
	ld.local.u32 	%r1178, [%rd5+4];
	ld.local.u32 	%r1179, [%rd5];
	// inline asm
	prmt.b32 %r8457, %r1178, %r1179, %r4;
	// inline asm
	ld.local.u32 	%r1182, [%rd5];
	ld.local.u32 	%r1183, [%rd4+12];
	// inline asm
	prmt.b32 %r8450, %r1182, %r1183, %r4;
	// inline asm
	ld.local.u32 	%r1186, [%rd4+12];
	ld.local.u32 	%r1187, [%rd4+8];
	// inline asm
	prmt.b32 %r8451, %r1186, %r1187, %r4;
	// inline asm
	ld.local.u32 	%r1190, [%rd4+8];
	ld.local.u32 	%r1191, [%rd4+4];
	// inline asm
	prmt.b32 %r8452, %r1190, %r1191, %r4;
	// inline asm
	ld.local.u32 	%r1194, [%rd4+4];
	ld.local.u32 	%r1195, [%rd4];
	// inline asm
	prmt.b32 %r8453, %r1194, %r1195, %r4;
	// inline asm
	ld.local.u32 	%r1198, [%rd4];
	ld.local.u32 	%r1199, [%rd3+12];
	// inline asm
	prmt.b32 %r8446, %r1198, %r1199, %r4;
	// inline asm
	ld.local.u32 	%r1202, [%rd3+12];
	ld.local.u32 	%r1203, [%rd3+8];
	// inline asm
	prmt.b32 %r8447, %r1202, %r1203, %r4;
	// inline asm
	ld.local.u32 	%r1206, [%rd3+8];
	ld.local.u32 	%r1207, [%rd3+4];
	// inline asm
	prmt.b32 %r8448, %r1206, %r1207, %r4;
	// inline asm
	ld.local.u32 	%r1210, [%rd3+4];
	ld.local.u32 	%r1211, [%rd3];
	// inline asm
	prmt.b32 %r8449, %r1210, %r1211, %r4;
	// inline asm
	ld.local.u32 	%r1214, [%rd3];
	ld.local.u32 	%r1215, [%rd2+12];
	// inline asm
	prmt.b32 %r8442, %r1214, %r1215, %r4;
	// inline asm
	ld.local.u32 	%r1218, [%rd2+12];
	ld.local.u32 	%r1219, [%rd2+8];
	// inline asm
	prmt.b32 %r8443, %r1218, %r1219, %r4;
	// inline asm
	ld.local.u32 	%r1222, [%rd2+8];
	ld.local.u32 	%r1223, [%rd2+4];
	// inline asm
	prmt.b32 %r8444, %r1222, %r1223, %r4;
	// inline asm
	ld.local.u32 	%r1226, [%rd2+4];
	ld.local.u32 	%r1227, [%rd2];
	// inline asm
	prmt.b32 %r8445, %r1226, %r1227, %r4;
	// inline asm
	ld.local.u32 	%r1230, [%rd2];
	ld.local.u32 	%r1231, [%rd1+12];
	// inline asm
	prmt.b32 %r1229, %r1230, %r1231, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1229;
	ld.local.u32 	%r1234, [%rd1+12];
	ld.local.u32 	%r1235, [%rd1+8];
	// inline asm
	prmt.b32 %r1233, %r1234, %r1235, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1233;
	ld.local.u32 	%r1238, [%rd1+8];
	ld.local.u32 	%r1239, [%rd1+4];
	// inline asm
	prmt.b32 %r1237, %r1238, %r1239, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1237;
	ld.local.u32 	%r1242, [%rd1+4];
	ld.local.u32 	%r1243, [%rd1];
	// inline asm
	prmt.b32 %r1241, %r1242, %r1243, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1241;
	ld.local.u32 	%r1246, [%rd1];
	// inline asm
	prmt.b32 %r1245, %r1246, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r1245;
	st.local.u32 	[%rd7+8], %r8441;
	st.local.u32 	[%rd7+4], %r8441;
	st.local.u32 	[%rd7], %r8441;
	st.local.u32 	[%rd6+12], %r8441;
	st.local.u32 	[%rd6+8], %r8441;
	st.local.u32 	[%rd6+4], %r8441;
	st.local.u32 	[%rd6], %r8441;
	st.local.u32 	[%rd5+12], %r8441;
	st.local.u32 	[%rd5+8], %r8441;
	st.local.u32 	[%rd5+4], %r8441;
	st.local.u32 	[%rd5], %r8441;
	st.local.u32 	[%rd4+12], %r8441;
	st.local.u32 	[%rd4+8], %r8441;
	st.local.u32 	[%rd4+4], %r8441;
	st.local.u32 	[%rd4], %r8441;
	st.local.u32 	[%rd3+12], %r8441;
	st.local.u32 	[%rd3+8], %r8441;
	st.local.u32 	[%rd3+4], %r8441;
	st.local.u32 	[%rd3], %r8441;
	st.local.u32 	[%rd2+12], %r8441;
	st.local.u32 	[%rd2+8], %r8441;
	st.local.u32 	[%rd2+4], %r8441;
	st.local.u32 	[%rd2], %r8441;
	st.local.u32 	[%rd1+12], %r8441;
	st.local.u32 	[%rd1+8], %r8441;
	mov.u64 	%rd103, 0;
	st.local.u32 	[%rd1+4], %rd103;
	st.local.u32 	[%rd1], %rd103;
	bra.uni 	BB1_85;

BB1_108:
	setp.eq.s32	%p90, %r3, 7;
	@%p90 bra 	BB1_109;
	bra.uni 	BB1_172;

BB1_109:
	ld.local.u32 	%r7396, [%rd7];
	ld.local.u32 	%r7397, [%rd6+12];
	// inline asm
	prmt.b32 %r7395, %r7396, %r7397, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r7395;
	ld.local.u32 	%r7400, [%rd6+12];
	ld.local.u32 	%r7401, [%rd6+8];
	// inline asm
	prmt.b32 %r7399, %r7400, %r7401, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r7399;
	ld.local.u32 	%r7404, [%rd6+8];
	ld.local.u32 	%r7405, [%rd6+4];
	// inline asm
	prmt.b32 %r7403, %r7404, %r7405, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r7403;
	ld.local.u32 	%r7408, [%rd6+4];
	ld.local.u32 	%r7409, [%rd6];
	// inline asm
	prmt.b32 %r7407, %r7408, %r7409, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r7407;
	ld.local.u32 	%r7412, [%rd6];
	ld.local.u32 	%r7413, [%rd5+12];
	// inline asm
	prmt.b32 %r7411, %r7412, %r7413, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r7411;
	ld.local.u32 	%r7416, [%rd5+12];
	ld.local.u32 	%r7417, [%rd5+8];
	// inline asm
	prmt.b32 %r7415, %r7416, %r7417, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r7415;
	ld.local.u32 	%r7420, [%rd5+8];
	ld.local.u32 	%r7421, [%rd5+4];
	// inline asm
	prmt.b32 %r7419, %r7420, %r7421, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r7419;
	ld.local.u32 	%r7424, [%rd5+4];
	ld.local.u32 	%r7425, [%rd5];
	// inline asm
	prmt.b32 %r7423, %r7424, %r7425, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r7423;
	ld.local.u32 	%r7428, [%rd5];
	ld.local.u32 	%r7429, [%rd4+12];
	// inline asm
	prmt.b32 %r7427, %r7428, %r7429, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r7427;
	ld.local.u32 	%r7432, [%rd4+12];
	ld.local.u32 	%r7433, [%rd4+8];
	// inline asm
	prmt.b32 %r7431, %r7432, %r7433, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r7431;
	ld.local.u32 	%r7436, [%rd4+8];
	ld.local.u32 	%r7437, [%rd4+4];
	// inline asm
	prmt.b32 %r7435, %r7436, %r7437, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r7435;
	ld.local.u32 	%r7440, [%rd4+4];
	ld.local.u32 	%r7441, [%rd4];
	// inline asm
	prmt.b32 %r7439, %r7440, %r7441, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r7439;
	ld.local.u32 	%r7444, [%rd4];
	ld.local.u32 	%r7445, [%rd3+12];
	// inline asm
	prmt.b32 %r7443, %r7444, %r7445, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r7443;
	ld.local.u32 	%r7448, [%rd3+12];
	ld.local.u32 	%r7449, [%rd3+8];
	// inline asm
	prmt.b32 %r7447, %r7448, %r7449, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r7447;
	ld.local.u32 	%r7452, [%rd3+8];
	ld.local.u32 	%r7453, [%rd3+4];
	// inline asm
	prmt.b32 %r7451, %r7452, %r7453, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r7451;
	ld.local.u32 	%r7456, [%rd3+4];
	ld.local.u32 	%r7457, [%rd3];
	// inline asm
	prmt.b32 %r7455, %r7456, %r7457, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r7455;
	ld.local.u32 	%r7460, [%rd3];
	ld.local.u32 	%r7461, [%rd2+12];
	// inline asm
	prmt.b32 %r7459, %r7460, %r7461, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r7459;
	ld.local.u32 	%r7464, [%rd2+12];
	ld.local.u32 	%r7465, [%rd2+8];
	// inline asm
	prmt.b32 %r7463, %r7464, %r7465, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r7463;
	ld.local.u32 	%r7468, [%rd2+8];
	ld.local.u32 	%r7469, [%rd2+4];
	// inline asm
	prmt.b32 %r7467, %r7468, %r7469, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r7467;
	ld.local.u32 	%r7472, [%rd2+4];
	ld.local.u32 	%r7473, [%rd2];
	// inline asm
	prmt.b32 %r7471, %r7472, %r7473, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r7471;
	ld.local.u32 	%r7476, [%rd2];
	ld.local.u32 	%r7477, [%rd1+12];
	// inline asm
	prmt.b32 %r7475, %r7476, %r7477, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r7475;
	ld.local.u32 	%r7480, [%rd1+12];
	ld.local.u32 	%r7481, [%rd1+8];
	// inline asm
	prmt.b32 %r7479, %r7480, %r7481, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r7479;
	ld.local.u32 	%r7484, [%rd1+8];
	ld.local.u32 	%r7485, [%rd1+4];
	// inline asm
	prmt.b32 %r7483, %r7484, %r7485, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r7483;
	ld.local.u32 	%r7488, [%rd1+4];
	ld.local.u32 	%r7489, [%rd1];
	// inline asm
	prmt.b32 %r7487, %r7488, %r7489, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r7487;
	ld.local.u32 	%r7492, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r7491, %r7492, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r7491;
	st.local.u32 	[%rd2+8], %r8475;
	st.local.u32 	[%rd2+4], %r8475;
	st.local.u32 	[%rd2], %r8475;
	st.local.u32 	[%rd1+12], %r8475;
	st.local.u32 	[%rd1+8], %r8475;
	mov.u64 	%rd1171, 0;
	st.local.u32 	[%rd1+4], %rd1171;
	st.local.u32 	[%rd1], %rd1171;
	bra.uni 	BB1_173;

BB1_18:
	setp.eq.s32	%p42, %r3, 7;
	@%p42 bra 	BB1_19;
	bra.uni 	BB1_88;

BB1_19:
	ld.local.u32 	%r4049, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8446, %r8441, %r4049, %r4;
	// inline asm
	ld.local.u32 	%r4052, [%rd8+12];
	ld.local.u32 	%r4053, [%rd8+8];
	// inline asm
	prmt.b32 %r8447, %r4052, %r4053, %r4;
	// inline asm
	ld.local.u32 	%r4056, [%rd8+8];
	ld.local.u32 	%r4057, [%rd8+4];
	// inline asm
	prmt.b32 %r8448, %r4056, %r4057, %r4;
	// inline asm
	ld.local.u32 	%r4060, [%rd8+4];
	ld.local.u32 	%r4061, [%rd8];
	// inline asm
	prmt.b32 %r8449, %r4060, %r4061, %r4;
	// inline asm
	ld.local.u32 	%r4064, [%rd8];
	ld.local.u32 	%r4065, [%rd7+12];
	// inline asm
	prmt.b32 %r8442, %r4064, %r4065, %r4;
	// inline asm
	ld.local.u32 	%r4068, [%rd7+12];
	ld.local.u32 	%r4069, [%rd7+8];
	// inline asm
	prmt.b32 %r8443, %r4068, %r4069, %r4;
	// inline asm
	ld.local.u32 	%r4072, [%rd7+8];
	ld.local.u32 	%r4073, [%rd7+4];
	// inline asm
	prmt.b32 %r8444, %r4072, %r4073, %r4;
	// inline asm
	ld.local.u32 	%r4076, [%rd7+4];
	ld.local.u32 	%r4077, [%rd7];
	// inline asm
	prmt.b32 %r8445, %r4076, %r4077, %r4;
	// inline asm
	ld.local.u32 	%r4080, [%rd7];
	ld.local.u32 	%r4081, [%rd6+12];
	// inline asm
	prmt.b32 %r4079, %r4080, %r4081, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r4079;
	ld.local.u32 	%r4084, [%rd6+12];
	ld.local.u32 	%r4085, [%rd6+8];
	// inline asm
	prmt.b32 %r4083, %r4084, %r4085, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r4083;
	ld.local.u32 	%r4088, [%rd6+8];
	ld.local.u32 	%r4089, [%rd6+4];
	// inline asm
	prmt.b32 %r4087, %r4088, %r4089, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r4087;
	ld.local.u32 	%r4092, [%rd6+4];
	ld.local.u32 	%r4093, [%rd6];
	// inline asm
	prmt.b32 %r4091, %r4092, %r4093, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r4091;
	ld.local.u32 	%r4096, [%rd6];
	ld.local.u32 	%r4097, [%rd5+12];
	// inline asm
	prmt.b32 %r4095, %r4096, %r4097, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r4095;
	ld.local.u32 	%r4100, [%rd5+12];
	ld.local.u32 	%r4101, [%rd5+8];
	// inline asm
	prmt.b32 %r4099, %r4100, %r4101, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r4099;
	ld.local.u32 	%r4104, [%rd5+8];
	ld.local.u32 	%r4105, [%rd5+4];
	// inline asm
	prmt.b32 %r4103, %r4104, %r4105, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r4103;
	ld.local.u32 	%r4108, [%rd5+4];
	ld.local.u32 	%r4109, [%rd5];
	// inline asm
	prmt.b32 %r4107, %r4108, %r4109, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r4107;
	ld.local.u32 	%r4112, [%rd5];
	ld.local.u32 	%r4113, [%rd4+12];
	// inline asm
	prmt.b32 %r4111, %r4112, %r4113, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r4111;
	ld.local.u32 	%r4116, [%rd4+12];
	ld.local.u32 	%r4117, [%rd4+8];
	// inline asm
	prmt.b32 %r4115, %r4116, %r4117, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r4115;
	ld.local.u32 	%r4120, [%rd4+8];
	ld.local.u32 	%r4121, [%rd4+4];
	// inline asm
	prmt.b32 %r4119, %r4120, %r4121, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r4119;
	ld.local.u32 	%r4124, [%rd4+4];
	ld.local.u32 	%r4125, [%rd4];
	// inline asm
	prmt.b32 %r4123, %r4124, %r4125, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r4123;
	ld.local.u32 	%r4128, [%rd4];
	ld.local.u32 	%r4129, [%rd3+12];
	// inline asm
	prmt.b32 %r4127, %r4128, %r4129, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r4127;
	ld.local.u32 	%r4132, [%rd3+12];
	ld.local.u32 	%r4133, [%rd3+8];
	// inline asm
	prmt.b32 %r4131, %r4132, %r4133, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r4131;
	ld.local.u32 	%r4136, [%rd3+8];
	ld.local.u32 	%r4137, [%rd3+4];
	// inline asm
	prmt.b32 %r4135, %r4136, %r4137, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r4135;
	ld.local.u32 	%r4140, [%rd3+4];
	ld.local.u32 	%r4141, [%rd3];
	// inline asm
	prmt.b32 %r4139, %r4140, %r4141, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r4139;
	ld.local.u32 	%r4144, [%rd3];
	ld.local.u32 	%r4145, [%rd2+12];
	// inline asm
	prmt.b32 %r4143, %r4144, %r4145, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r4143;
	ld.local.u32 	%r4148, [%rd2+12];
	ld.local.u32 	%r4149, [%rd2+8];
	// inline asm
	prmt.b32 %r4147, %r4148, %r4149, %r4;
	// inline asm
	st.local.u32 	[%rd4+8], %r4147;
	ld.local.u32 	%r4152, [%rd2+8];
	ld.local.u32 	%r4153, [%rd2+4];
	// inline asm
	prmt.b32 %r4151, %r4152, %r4153, %r4;
	// inline asm
	st.local.u32 	[%rd4+4], %r4151;
	ld.local.u32 	%r4156, [%rd2+4];
	ld.local.u32 	%r4157, [%rd2];
	// inline asm
	prmt.b32 %r4155, %r4156, %r4157, %r4;
	// inline asm
	st.local.u32 	[%rd4], %r4155;
	ld.local.u32 	%r4160, [%rd2];
	ld.local.u32 	%r4161, [%rd1+12];
	// inline asm
	prmt.b32 %r4159, %r4160, %r4161, %r4;
	// inline asm
	st.local.u32 	[%rd3+12], %r4159;
	ld.local.u32 	%r4164, [%rd1+12];
	ld.local.u32 	%r4165, [%rd1+8];
	// inline asm
	prmt.b32 %r4163, %r4164, %r4165, %r4;
	// inline asm
	st.local.u32 	[%rd3+8], %r4163;
	ld.local.u32 	%r4168, [%rd1+8];
	ld.local.u32 	%r4169, [%rd1+4];
	// inline asm
	prmt.b32 %r4167, %r4168, %r4169, %r4;
	// inline asm
	st.local.u32 	[%rd3+4], %r4167;
	ld.local.u32 	%r4172, [%rd1+4];
	ld.local.u32 	%r4173, [%rd1];
	// inline asm
	prmt.b32 %r4171, %r4172, %r4173, %r4;
	// inline asm
	st.local.u32 	[%rd3], %r4171;
	ld.local.u32 	%r4176, [%rd1];
	// inline asm
	prmt.b32 %r4175, %r4176, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd2+12], %r4175;
	st.local.u32 	[%rd2+8], %r8441;
	st.local.u32 	[%rd2+4], %r8441;
	st.local.u32 	[%rd2], %r8441;
	st.local.u32 	[%rd1+12], %r8441;
	st.local.u32 	[%rd1+8], %r8441;
	mov.u64 	%rd123, 0;
	st.local.u32 	[%rd1+4], %rd123;
	st.local.u32 	[%rd1], %rd123;

BB1_80:
	mov.u32 	%r8450, %r8441;
	mov.u32 	%r8451, %r8441;
	mov.u32 	%r8452, %r8441;
	mov.u32 	%r8453, %r8441;

BB1_81:
	mov.u32 	%r8454, %r8441;
	mov.u32 	%r8455, %r8441;
	mov.u32 	%r8456, %r8441;
	mov.u32 	%r8457, %r8441;

BB1_82:
	mov.u32 	%r8458, %r8441;
	mov.u32 	%r8459, %r8441;
	mov.u32 	%r8460, %r8441;
	mov.u32 	%r8461, %r8441;

BB1_83:
	mov.u32 	%r8462, %r8441;
	mov.u32 	%r8463, %r8441;
	mov.u32 	%r8464, %r8441;
	mov.u32 	%r8465, %r8441;

BB1_84:
	mov.u32 	%r8466, %r8441;
	mov.u32 	%r8467, %r8441;
	mov.u32 	%r8468, %r8441;
	mov.u32 	%r8469, %r8441;

BB1_85:
	mov.u32 	%r8470, %r8441;
	mov.u32 	%r8471, %r8441;
	mov.u32 	%r8472, %r8441;
	mov.u32 	%r8473, %r8441;
	bra.uni 	BB1_90;

BB1_139:
	setp.eq.s32	%p67, %r3, 23;
	@%p67 bra 	BB1_140;
	bra.uni 	BB1_172;

BB1_140:
	ld.local.u32 	%r6324, [%rd3];
	ld.local.u32 	%r6325, [%rd2+12];
	// inline asm
	prmt.b32 %r6323, %r6324, %r6325, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6323;
	ld.local.u32 	%r6328, [%rd2+12];
	ld.local.u32 	%r6329, [%rd2+8];
	// inline asm
	prmt.b32 %r6327, %r6328, %r6329, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6327;
	ld.local.u32 	%r6332, [%rd2+8];
	ld.local.u32 	%r6333, [%rd2+4];
	// inline asm
	prmt.b32 %r6331, %r6332, %r6333, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6331;
	ld.local.u32 	%r6336, [%rd2+4];
	ld.local.u32 	%r6337, [%rd2];
	// inline asm
	prmt.b32 %r6335, %r6336, %r6337, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6335;
	ld.local.u32 	%r6340, [%rd2];
	ld.local.u32 	%r6341, [%rd1+12];
	// inline asm
	prmt.b32 %r6339, %r6340, %r6341, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6339;
	ld.local.u32 	%r6344, [%rd1+12];
	ld.local.u32 	%r6345, [%rd1+8];
	// inline asm
	prmt.b32 %r6343, %r6344, %r6345, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6343;
	ld.local.u32 	%r6348, [%rd1+8];
	ld.local.u32 	%r6349, [%rd1+4];
	// inline asm
	prmt.b32 %r6347, %r6348, %r6349, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6347;
	ld.local.u32 	%r6352, [%rd1+4];
	ld.local.u32 	%r6353, [%rd1];
	// inline asm
	prmt.b32 %r6351, %r6352, %r6353, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6351;
	ld.local.u32 	%r6356, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r6355, %r6356, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6355;
	st.local.u32 	[%rd6+8], %r8475;
	st.local.u32 	[%rd6+4], %r8475;
	st.local.u32 	[%rd6], %r8475;
	st.local.u32 	[%rd5+12], %r8475;
	st.local.u32 	[%rd5+8], %r8475;
	st.local.u32 	[%rd5+4], %r8475;
	st.local.u32 	[%rd5], %r8475;
	st.local.u32 	[%rd4+12], %r8475;
	st.local.u32 	[%rd4+8], %r8475;
	st.local.u32 	[%rd4+4], %r8475;
	st.local.u32 	[%rd4], %r8475;
	st.local.u32 	[%rd3+12], %r8475;
	st.local.u32 	[%rd3+8], %r8475;
	st.local.u32 	[%rd3+4], %r8475;
	st.local.u32 	[%rd3], %r8475;
	st.local.u32 	[%rd2+12], %r8475;
	st.local.u32 	[%rd2+8], %r8475;
	st.local.u32 	[%rd2+4], %r8475;
	st.local.u32 	[%rd2], %r8475;
	st.local.u32 	[%rd1+12], %r8475;
	st.local.u32 	[%rd1+8], %r8475;
	mov.u64 	%rd1155, 0;
	st.local.u32 	[%rd1+4], %rd1155;
	st.local.u32 	[%rd1], %rd1155;
	bra.uni 	BB1_173;

BB1_49:
	setp.eq.s32	%p19, %r3, 23;
	@%p19 bra 	BB1_50;
	bra.uni 	BB1_88;

BB1_50:
	ld.local.u32 	%r1673, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8462, %r8441, %r1673, %r4;
	// inline asm
	ld.local.u32 	%r1676, [%rd8+12];
	ld.local.u32 	%r1677, [%rd8+8];
	// inline asm
	prmt.b32 %r8463, %r1676, %r1677, %r4;
	// inline asm
	ld.local.u32 	%r1680, [%rd8+8];
	ld.local.u32 	%r1681, [%rd8+4];
	// inline asm
	prmt.b32 %r8464, %r1680, %r1681, %r4;
	// inline asm
	ld.local.u32 	%r1684, [%rd8+4];
	ld.local.u32 	%r1685, [%rd8];
	// inline asm
	prmt.b32 %r8465, %r1684, %r1685, %r4;
	// inline asm
	ld.local.u32 	%r1688, [%rd8];
	ld.local.u32 	%r1689, [%rd7+12];
	// inline asm
	prmt.b32 %r8458, %r1688, %r1689, %r4;
	// inline asm
	ld.local.u32 	%r1692, [%rd7+12];
	ld.local.u32 	%r1693, [%rd7+8];
	// inline asm
	prmt.b32 %r8459, %r1692, %r1693, %r4;
	// inline asm
	ld.local.u32 	%r1696, [%rd7+8];
	ld.local.u32 	%r1697, [%rd7+4];
	// inline asm
	prmt.b32 %r8460, %r1696, %r1697, %r4;
	// inline asm
	ld.local.u32 	%r1700, [%rd7+4];
	ld.local.u32 	%r1701, [%rd7];
	// inline asm
	prmt.b32 %r8461, %r1700, %r1701, %r4;
	// inline asm
	ld.local.u32 	%r1704, [%rd7];
	ld.local.u32 	%r1705, [%rd6+12];
	// inline asm
	prmt.b32 %r8454, %r1704, %r1705, %r4;
	// inline asm
	ld.local.u32 	%r1708, [%rd6+12];
	ld.local.u32 	%r1709, [%rd6+8];
	// inline asm
	prmt.b32 %r8455, %r1708, %r1709, %r4;
	// inline asm
	ld.local.u32 	%r1712, [%rd6+8];
	ld.local.u32 	%r1713, [%rd6+4];
	// inline asm
	prmt.b32 %r8456, %r1712, %r1713, %r4;
	// inline asm
	ld.local.u32 	%r1716, [%rd6+4];
	ld.local.u32 	%r1717, [%rd6];
	// inline asm
	prmt.b32 %r8457, %r1716, %r1717, %r4;
	// inline asm
	ld.local.u32 	%r1720, [%rd6];
	ld.local.u32 	%r1721, [%rd5+12];
	// inline asm
	prmt.b32 %r8450, %r1720, %r1721, %r4;
	// inline asm
	ld.local.u32 	%r1724, [%rd5+12];
	ld.local.u32 	%r1725, [%rd5+8];
	// inline asm
	prmt.b32 %r8451, %r1724, %r1725, %r4;
	// inline asm
	ld.local.u32 	%r1728, [%rd5+8];
	ld.local.u32 	%r1729, [%rd5+4];
	// inline asm
	prmt.b32 %r8452, %r1728, %r1729, %r4;
	// inline asm
	ld.local.u32 	%r1732, [%rd5+4];
	ld.local.u32 	%r1733, [%rd5];
	// inline asm
	prmt.b32 %r8453, %r1732, %r1733, %r4;
	// inline asm
	ld.local.u32 	%r1736, [%rd5];
	ld.local.u32 	%r1737, [%rd4+12];
	// inline asm
	prmt.b32 %r8446, %r1736, %r1737, %r4;
	// inline asm
	ld.local.u32 	%r1740, [%rd4+12];
	ld.local.u32 	%r1741, [%rd4+8];
	// inline asm
	prmt.b32 %r8447, %r1740, %r1741, %r4;
	// inline asm
	ld.local.u32 	%r1744, [%rd4+8];
	ld.local.u32 	%r1745, [%rd4+4];
	// inline asm
	prmt.b32 %r8448, %r1744, %r1745, %r4;
	// inline asm
	ld.local.u32 	%r1748, [%rd4+4];
	ld.local.u32 	%r1749, [%rd4];
	// inline asm
	prmt.b32 %r8449, %r1748, %r1749, %r4;
	// inline asm
	ld.local.u32 	%r1752, [%rd4];
	ld.local.u32 	%r1753, [%rd3+12];
	// inline asm
	prmt.b32 %r8442, %r1752, %r1753, %r4;
	// inline asm
	ld.local.u32 	%r1756, [%rd3+12];
	ld.local.u32 	%r1757, [%rd3+8];
	// inline asm
	prmt.b32 %r8443, %r1756, %r1757, %r4;
	// inline asm
	ld.local.u32 	%r1760, [%rd3+8];
	ld.local.u32 	%r1761, [%rd3+4];
	// inline asm
	prmt.b32 %r8444, %r1760, %r1761, %r4;
	// inline asm
	ld.local.u32 	%r1764, [%rd3+4];
	ld.local.u32 	%r1765, [%rd3];
	// inline asm
	prmt.b32 %r8445, %r1764, %r1765, %r4;
	// inline asm
	ld.local.u32 	%r1768, [%rd3];
	ld.local.u32 	%r1769, [%rd2+12];
	// inline asm
	prmt.b32 %r1767, %r1768, %r1769, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r1767;
	ld.local.u32 	%r1772, [%rd2+12];
	ld.local.u32 	%r1773, [%rd2+8];
	// inline asm
	prmt.b32 %r1771, %r1772, %r1773, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r1771;
	ld.local.u32 	%r1776, [%rd2+8];
	ld.local.u32 	%r1777, [%rd2+4];
	// inline asm
	prmt.b32 %r1775, %r1776, %r1777, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r1775;
	ld.local.u32 	%r1780, [%rd2+4];
	ld.local.u32 	%r1781, [%rd2];
	// inline asm
	prmt.b32 %r1779, %r1780, %r1781, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r1779;
	ld.local.u32 	%r1784, [%rd2];
	ld.local.u32 	%r1785, [%rd1+12];
	// inline asm
	prmt.b32 %r1783, %r1784, %r1785, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r1783;
	ld.local.u32 	%r1788, [%rd1+12];
	ld.local.u32 	%r1789, [%rd1+8];
	// inline asm
	prmt.b32 %r1787, %r1788, %r1789, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r1787;
	ld.local.u32 	%r1792, [%rd1+8];
	ld.local.u32 	%r1793, [%rd1+4];
	// inline asm
	prmt.b32 %r1791, %r1792, %r1793, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r1791;
	ld.local.u32 	%r1796, [%rd1+4];
	ld.local.u32 	%r1797, [%rd1];
	// inline asm
	prmt.b32 %r1795, %r1796, %r1797, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r1795;
	ld.local.u32 	%r1800, [%rd1];
	// inline asm
	prmt.b32 %r1799, %r1800, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r1799;
	st.local.u32 	[%rd6+8], %r8441;
	st.local.u32 	[%rd6+4], %r8441;
	st.local.u32 	[%rd6], %r8441;
	st.local.u32 	[%rd5+12], %r8441;
	st.local.u32 	[%rd5+8], %r8441;
	st.local.u32 	[%rd5+4], %r8441;
	st.local.u32 	[%rd5], %r8441;
	st.local.u32 	[%rd4+12], %r8441;
	st.local.u32 	[%rd4+8], %r8441;
	st.local.u32 	[%rd4+4], %r8441;
	st.local.u32 	[%rd4], %r8441;
	st.local.u32 	[%rd3+12], %r8441;
	st.local.u32 	[%rd3+8], %r8441;
	st.local.u32 	[%rd3+4], %r8441;
	st.local.u32 	[%rd3], %r8441;
	st.local.u32 	[%rd2+12], %r8441;
	st.local.u32 	[%rd2+8], %r8441;
	st.local.u32 	[%rd2+4], %r8441;
	st.local.u32 	[%rd2], %r8441;
	st.local.u32 	[%rd1+12], %r8441;
	st.local.u32 	[%rd1+8], %r8441;
	mov.u64 	%rd107, 0;
	st.local.u32 	[%rd1+4], %rd107;
	st.local.u32 	[%rd1], %rd107;
	bra.uni 	BB1_84;

BB1_123:
	setp.eq.s32	%p79, %r3, 15;
	@%p79 bra 	BB1_124;
	bra.uni 	BB1_172;

BB1_124:
	ld.local.u32 	%r6732, [%rd5];
	ld.local.u32 	%r6733, [%rd4+12];
	// inline asm
	prmt.b32 %r6731, %r6732, %r6733, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6731;
	ld.local.u32 	%r6736, [%rd4+12];
	ld.local.u32 	%r6737, [%rd4+8];
	// inline asm
	prmt.b32 %r6735, %r6736, %r6737, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r6735;
	ld.local.u32 	%r6740, [%rd4+8];
	ld.local.u32 	%r6741, [%rd4+4];
	// inline asm
	prmt.b32 %r6739, %r6740, %r6741, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r6739;
	ld.local.u32 	%r6744, [%rd4+4];
	ld.local.u32 	%r6745, [%rd4];
	// inline asm
	prmt.b32 %r6743, %r6744, %r6745, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r6743;
	ld.local.u32 	%r6748, [%rd4];
	ld.local.u32 	%r6749, [%rd3+12];
	// inline asm
	prmt.b32 %r6747, %r6748, %r6749, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r6747;
	ld.local.u32 	%r6752, [%rd3+12];
	ld.local.u32 	%r6753, [%rd3+8];
	// inline asm
	prmt.b32 %r6751, %r6752, %r6753, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r6751;
	ld.local.u32 	%r6756, [%rd3+8];
	ld.local.u32 	%r6757, [%rd3+4];
	// inline asm
	prmt.b32 %r6755, %r6756, %r6757, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r6755;
	ld.local.u32 	%r6760, [%rd3+4];
	ld.local.u32 	%r6761, [%rd3];
	// inline asm
	prmt.b32 %r6759, %r6760, %r6761, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r6759;
	ld.local.u32 	%r6764, [%rd3];
	ld.local.u32 	%r6765, [%rd2+12];
	// inline asm
	prmt.b32 %r6763, %r6764, %r6765, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r6763;
	ld.local.u32 	%r6768, [%rd2+12];
	ld.local.u32 	%r6769, [%rd2+8];
	// inline asm
	prmt.b32 %r6767, %r6768, %r6769, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r6767;
	ld.local.u32 	%r6772, [%rd2+8];
	ld.local.u32 	%r6773, [%rd2+4];
	// inline asm
	prmt.b32 %r6771, %r6772, %r6773, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r6771;
	ld.local.u32 	%r6776, [%rd2+4];
	ld.local.u32 	%r6777, [%rd2];
	// inline asm
	prmt.b32 %r6775, %r6776, %r6777, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r6775;
	ld.local.u32 	%r6780, [%rd2];
	ld.local.u32 	%r6781, [%rd1+12];
	// inline asm
	prmt.b32 %r6779, %r6780, %r6781, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r6779;
	ld.local.u32 	%r6784, [%rd1+12];
	ld.local.u32 	%r6785, [%rd1+8];
	// inline asm
	prmt.b32 %r6783, %r6784, %r6785, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r6783;
	ld.local.u32 	%r6788, [%rd1+8];
	ld.local.u32 	%r6789, [%rd1+4];
	// inline asm
	prmt.b32 %r6787, %r6788, %r6789, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r6787;
	ld.local.u32 	%r6792, [%rd1+4];
	ld.local.u32 	%r6793, [%rd1];
	// inline asm
	prmt.b32 %r6791, %r6792, %r6793, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r6791;
	ld.local.u32 	%r6796, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r6795, %r6796, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r6795;
	st.local.u32 	[%rd4+8], %r8475;
	st.local.u32 	[%rd4+4], %r8475;
	st.local.u32 	[%rd4], %r8475;
	st.local.u32 	[%rd3+12], %r8475;
	st.local.u32 	[%rd3+8], %r8475;
	st.local.u32 	[%rd3+4], %r8475;
	st.local.u32 	[%rd3], %r8475;
	st.local.u32 	[%rd2+12], %r8475;
	st.local.u32 	[%rd2+8], %r8475;
	st.local.u32 	[%rd2+4], %r8475;
	st.local.u32 	[%rd2], %r8475;
	st.local.u32 	[%rd1+12], %r8475;
	st.local.u32 	[%rd1+8], %r8475;
	mov.u64 	%rd1163, 0;
	st.local.u32 	[%rd1+4], %rd1163;
	st.local.u32 	[%rd1], %rd1163;
	bra.uni 	BB1_173;

BB1_33:
	setp.eq.s32	%p31, %r3, 15;
	@%p31 bra 	BB1_34;
	bra.uni 	BB1_88;

BB1_34:
	ld.local.u32 	%r2829, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8454, %r8441, %r2829, %r4;
	// inline asm
	ld.local.u32 	%r2832, [%rd8+12];
	ld.local.u32 	%r2833, [%rd8+8];
	// inline asm
	prmt.b32 %r8455, %r2832, %r2833, %r4;
	// inline asm
	ld.local.u32 	%r2836, [%rd8+8];
	ld.local.u32 	%r2837, [%rd8+4];
	// inline asm
	prmt.b32 %r8456, %r2836, %r2837, %r4;
	// inline asm
	ld.local.u32 	%r2840, [%rd8+4];
	ld.local.u32 	%r2841, [%rd8];
	// inline asm
	prmt.b32 %r8457, %r2840, %r2841, %r4;
	// inline asm
	ld.local.u32 	%r2844, [%rd8];
	ld.local.u32 	%r2845, [%rd7+12];
	// inline asm
	prmt.b32 %r8450, %r2844, %r2845, %r4;
	// inline asm
	ld.local.u32 	%r2848, [%rd7+12];
	ld.local.u32 	%r2849, [%rd7+8];
	// inline asm
	prmt.b32 %r8451, %r2848, %r2849, %r4;
	// inline asm
	ld.local.u32 	%r2852, [%rd7+8];
	ld.local.u32 	%r2853, [%rd7+4];
	// inline asm
	prmt.b32 %r8452, %r2852, %r2853, %r4;
	// inline asm
	ld.local.u32 	%r2856, [%rd7+4];
	ld.local.u32 	%r2857, [%rd7];
	// inline asm
	prmt.b32 %r8453, %r2856, %r2857, %r4;
	// inline asm
	ld.local.u32 	%r2860, [%rd7];
	ld.local.u32 	%r2861, [%rd6+12];
	// inline asm
	prmt.b32 %r8446, %r2860, %r2861, %r4;
	// inline asm
	ld.local.u32 	%r2864, [%rd6+12];
	ld.local.u32 	%r2865, [%rd6+8];
	// inline asm
	prmt.b32 %r8447, %r2864, %r2865, %r4;
	// inline asm
	ld.local.u32 	%r2868, [%rd6+8];
	ld.local.u32 	%r2869, [%rd6+4];
	// inline asm
	prmt.b32 %r8448, %r2868, %r2869, %r4;
	// inline asm
	ld.local.u32 	%r2872, [%rd6+4];
	ld.local.u32 	%r2873, [%rd6];
	// inline asm
	prmt.b32 %r8449, %r2872, %r2873, %r4;
	// inline asm
	ld.local.u32 	%r2876, [%rd6];
	ld.local.u32 	%r2877, [%rd5+12];
	// inline asm
	prmt.b32 %r8442, %r2876, %r2877, %r4;
	// inline asm
	ld.local.u32 	%r2880, [%rd5+12];
	ld.local.u32 	%r2881, [%rd5+8];
	// inline asm
	prmt.b32 %r8443, %r2880, %r2881, %r4;
	// inline asm
	ld.local.u32 	%r2884, [%rd5+8];
	ld.local.u32 	%r2885, [%rd5+4];
	// inline asm
	prmt.b32 %r8444, %r2884, %r2885, %r4;
	// inline asm
	ld.local.u32 	%r2888, [%rd5+4];
	ld.local.u32 	%r2889, [%rd5];
	// inline asm
	prmt.b32 %r8445, %r2888, %r2889, %r4;
	// inline asm
	ld.local.u32 	%r2892, [%rd5];
	ld.local.u32 	%r2893, [%rd4+12];
	// inline asm
	prmt.b32 %r2891, %r2892, %r2893, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r2891;
	ld.local.u32 	%r2896, [%rd4+12];
	ld.local.u32 	%r2897, [%rd4+8];
	// inline asm
	prmt.b32 %r2895, %r2896, %r2897, %r4;
	// inline asm
	st.local.u32 	[%rd8+8], %r2895;
	ld.local.u32 	%r2900, [%rd4+8];
	ld.local.u32 	%r2901, [%rd4+4];
	// inline asm
	prmt.b32 %r2899, %r2900, %r2901, %r4;
	// inline asm
	st.local.u32 	[%rd8+4], %r2899;
	ld.local.u32 	%r2904, [%rd4+4];
	ld.local.u32 	%r2905, [%rd4];
	// inline asm
	prmt.b32 %r2903, %r2904, %r2905, %r4;
	// inline asm
	st.local.u32 	[%rd8], %r2903;
	ld.local.u32 	%r2908, [%rd4];
	ld.local.u32 	%r2909, [%rd3+12];
	// inline asm
	prmt.b32 %r2907, %r2908, %r2909, %r4;
	// inline asm
	st.local.u32 	[%rd7+12], %r2907;
	ld.local.u32 	%r2912, [%rd3+12];
	ld.local.u32 	%r2913, [%rd3+8];
	// inline asm
	prmt.b32 %r2911, %r2912, %r2913, %r4;
	// inline asm
	st.local.u32 	[%rd7+8], %r2911;
	ld.local.u32 	%r2916, [%rd3+8];
	ld.local.u32 	%r2917, [%rd3+4];
	// inline asm
	prmt.b32 %r2915, %r2916, %r2917, %r4;
	// inline asm
	st.local.u32 	[%rd7+4], %r2915;
	ld.local.u32 	%r2920, [%rd3+4];
	ld.local.u32 	%r2921, [%rd3];
	// inline asm
	prmt.b32 %r2919, %r2920, %r2921, %r4;
	// inline asm
	st.local.u32 	[%rd7], %r2919;
	ld.local.u32 	%r2924, [%rd3];
	ld.local.u32 	%r2925, [%rd2+12];
	// inline asm
	prmt.b32 %r2923, %r2924, %r2925, %r4;
	// inline asm
	st.local.u32 	[%rd6+12], %r2923;
	ld.local.u32 	%r2928, [%rd2+12];
	ld.local.u32 	%r2929, [%rd2+8];
	// inline asm
	prmt.b32 %r2927, %r2928, %r2929, %r4;
	// inline asm
	st.local.u32 	[%rd6+8], %r2927;
	ld.local.u32 	%r2932, [%rd2+8];
	ld.local.u32 	%r2933, [%rd2+4];
	// inline asm
	prmt.b32 %r2931, %r2932, %r2933, %r4;
	// inline asm
	st.local.u32 	[%rd6+4], %r2931;
	ld.local.u32 	%r2936, [%rd2+4];
	ld.local.u32 	%r2937, [%rd2];
	// inline asm
	prmt.b32 %r2935, %r2936, %r2937, %r4;
	// inline asm
	st.local.u32 	[%rd6], %r2935;
	ld.local.u32 	%r2940, [%rd2];
	ld.local.u32 	%r2941, [%rd1+12];
	// inline asm
	prmt.b32 %r2939, %r2940, %r2941, %r4;
	// inline asm
	st.local.u32 	[%rd5+12], %r2939;
	ld.local.u32 	%r2944, [%rd1+12];
	ld.local.u32 	%r2945, [%rd1+8];
	// inline asm
	prmt.b32 %r2943, %r2944, %r2945, %r4;
	// inline asm
	st.local.u32 	[%rd5+8], %r2943;
	ld.local.u32 	%r2948, [%rd1+8];
	ld.local.u32 	%r2949, [%rd1+4];
	// inline asm
	prmt.b32 %r2947, %r2948, %r2949, %r4;
	// inline asm
	st.local.u32 	[%rd5+4], %r2947;
	ld.local.u32 	%r2952, [%rd1+4];
	ld.local.u32 	%r2953, [%rd1];
	// inline asm
	prmt.b32 %r2951, %r2952, %r2953, %r4;
	// inline asm
	st.local.u32 	[%rd5], %r2951;
	ld.local.u32 	%r2956, [%rd1];
	// inline asm
	prmt.b32 %r2955, %r2956, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd4+12], %r2955;
	st.local.u32 	[%rd4+8], %r8441;
	st.local.u32 	[%rd4+4], %r8441;
	st.local.u32 	[%rd4], %r8441;
	st.local.u32 	[%rd3+12], %r8441;
	st.local.u32 	[%rd3+8], %r8441;
	st.local.u32 	[%rd3+4], %r8441;
	st.local.u32 	[%rd3], %r8441;
	st.local.u32 	[%rd2+12], %r8441;
	st.local.u32 	[%rd2+8], %r8441;
	st.local.u32 	[%rd2+4], %r8441;
	st.local.u32 	[%rd2], %r8441;
	st.local.u32 	[%rd1+12], %r8441;
	st.local.u32 	[%rd1+8], %r8441;
	mov.u64 	%rd115, 0;
	st.local.u32 	[%rd1+4], %rd115;
	st.local.u32 	[%rd1], %rd115;
	bra.uni 	BB1_82;

BB1_154:
	setp.ne.s32	%p56, %r3, 31;
	@%p56 bra 	BB1_172;

	ld.local.u32 	%r6172, [%rd1];
	mov.u32 	%r8475, 0;
	// inline asm
	prmt.b32 %r6171, %r6172, %r8475, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r6171;
	st.local.u32 	[%rd8+8], %r8475;
	st.local.u32 	[%rd8+4], %r8475;
	st.local.u32 	[%rd8], %r8475;
	st.local.u32 	[%rd7+12], %r8475;
	st.local.u32 	[%rd7+8], %r8475;
	st.local.u32 	[%rd7+4], %r8475;
	st.local.u32 	[%rd7], %r8475;
	st.local.u32 	[%rd6+12], %r8475;
	st.local.u32 	[%rd6+8], %r8475;
	st.local.u32 	[%rd6+4], %r8475;
	st.local.u32 	[%rd6], %r8475;
	st.local.u32 	[%rd5+12], %r8475;
	st.local.u32 	[%rd5+8], %r8475;
	st.local.u32 	[%rd5+4], %r8475;
	st.local.u32 	[%rd5], %r8475;
	st.local.u32 	[%rd4+12], %r8475;
	st.local.u32 	[%rd4+8], %r8475;
	st.local.u32 	[%rd4+4], %r8475;
	st.local.u32 	[%rd4], %r8475;
	st.local.u32 	[%rd3+12], %r8475;
	st.local.u32 	[%rd3+8], %r8475;
	st.local.u32 	[%rd3+4], %r8475;
	st.local.u32 	[%rd3], %r8475;
	st.local.u32 	[%rd2+12], %r8475;
	st.local.u32 	[%rd2+8], %r8475;
	st.local.u32 	[%rd2+4], %r8475;
	st.local.u32 	[%rd2], %r8475;
	st.local.u32 	[%rd1+12], %r8475;
	st.local.u32 	[%rd1+8], %r8475;
	mov.u64 	%rd1147, 0;
	st.local.u32 	[%rd1+4], %rd1147;
	st.local.u32 	[%rd1], %rd1147;
	bra.uni 	BB1_173;

BB1_172:
	ld.local.u32 	%r8475, [%rd1];

BB1_173:
	ld.local.u32 	%r8314, [%rd9+64];
	or.b32  	%r8315, %r8314, %r8475;
	st.local.u32 	[%rd9+64], %r8315;
	ld.local.u32 	%r8316, [%rd9+68];
	ld.local.u32 	%r8317, [%rd1+4];
	or.b32  	%r8318, %r8316, %r8317;
	st.local.u32 	[%rd9+68], %r8318;
	ld.local.u32 	%r8319, [%rd9+72];
	ld.local.u32 	%r8320, [%rd1+8];
	or.b32  	%r8321, %r8319, %r8320;
	st.local.u32 	[%rd9+72], %r8321;
	ld.local.u32 	%r8322, [%rd9+76];
	ld.local.u32 	%r8323, [%rd1+12];
	or.b32  	%r8324, %r8322, %r8323;
	st.local.u32 	[%rd9+76], %r8324;
	ld.local.u32 	%r8325, [%rd9+80];
	ld.local.u32 	%r8326, [%rd2];
	or.b32  	%r8327, %r8325, %r8326;
	st.local.u32 	[%rd9+80], %r8327;
	ld.local.u32 	%r8328, [%rd9+84];
	ld.local.u32 	%r8329, [%rd2+4];
	or.b32  	%r8330, %r8328, %r8329;
	st.local.u32 	[%rd9+84], %r8330;
	ld.local.u32 	%r8331, [%rd9+88];
	ld.local.u32 	%r8332, [%rd2+8];
	or.b32  	%r8333, %r8331, %r8332;
	st.local.u32 	[%rd9+88], %r8333;
	ld.local.u32 	%r8334, [%rd9+92];
	ld.local.u32 	%r8335, [%rd2+12];
	or.b32  	%r8336, %r8334, %r8335;
	st.local.u32 	[%rd9+92], %r8336;
	ld.local.u32 	%r8337, [%rd9+96];
	ld.local.u32 	%r8338, [%rd3];
	or.b32  	%r8339, %r8337, %r8338;
	st.local.u32 	[%rd9+96], %r8339;
	ld.local.u32 	%r8340, [%rd9+100];
	ld.local.u32 	%r8341, [%rd3+4];
	or.b32  	%r8342, %r8340, %r8341;
	st.local.u32 	[%rd9+100], %r8342;
	ld.local.u32 	%r8343, [%rd9+104];
	ld.local.u32 	%r8344, [%rd3+8];
	or.b32  	%r8345, %r8343, %r8344;
	st.local.u32 	[%rd9+104], %r8345;
	ld.local.u32 	%r8346, [%rd9+108];
	ld.local.u32 	%r8347, [%rd3+12];
	or.b32  	%r8348, %r8346, %r8347;
	st.local.u32 	[%rd9+108], %r8348;
	ld.local.u32 	%r8349, [%rd9+112];
	ld.local.u32 	%r8350, [%rd4];
	or.b32  	%r8351, %r8349, %r8350;
	st.local.u32 	[%rd9+112], %r8351;
	ld.local.u32 	%r8352, [%rd9+116];
	ld.local.u32 	%r8353, [%rd4+4];
	or.b32  	%r8354, %r8352, %r8353;
	st.local.u32 	[%rd9+116], %r8354;
	ld.local.u32 	%r8355, [%rd9+120];
	ld.local.u32 	%r8356, [%rd4+8];
	or.b32  	%r8357, %r8355, %r8356;
	st.local.u32 	[%rd9+120], %r8357;
	ld.local.u32 	%r8358, [%rd9+124];
	ld.local.u32 	%r8359, [%rd4+12];
	or.b32  	%r8360, %r8358, %r8359;
	st.local.u32 	[%rd9+124], %r8360;
	ld.local.u32 	%r8361, [%rd9+128];
	ld.local.u32 	%r8362, [%rd5];
	or.b32  	%r8363, %r8361, %r8362;
	st.local.u32 	[%rd9+128], %r8363;
	ld.local.u32 	%r8364, [%rd9+132];
	ld.local.u32 	%r8365, [%rd5+4];
	or.b32  	%r8366, %r8364, %r8365;
	st.local.u32 	[%rd9+132], %r8366;
	ld.local.u32 	%r8367, [%rd9+136];
	ld.local.u32 	%r8368, [%rd5+8];
	or.b32  	%r8369, %r8367, %r8368;
	st.local.u32 	[%rd9+136], %r8369;
	ld.local.u32 	%r8370, [%rd9+140];
	ld.local.u32 	%r8371, [%rd5+12];
	or.b32  	%r8372, %r8370, %r8371;
	st.local.u32 	[%rd9+140], %r8372;
	ld.local.u32 	%r8373, [%rd9+144];
	ld.local.u32 	%r8374, [%rd6];
	or.b32  	%r8375, %r8373, %r8374;
	st.local.u32 	[%rd9+144], %r8375;
	ld.local.u32 	%r8376, [%rd9+148];
	ld.local.u32 	%r8377, [%rd6+4];
	or.b32  	%r8378, %r8376, %r8377;
	st.local.u32 	[%rd9+148], %r8378;
	ld.local.u32 	%r8379, [%rd9+152];
	ld.local.u32 	%r8380, [%rd6+8];
	or.b32  	%r8381, %r8379, %r8380;
	st.local.u32 	[%rd9+152], %r8381;
	ld.local.u32 	%r8382, [%rd9+156];
	ld.local.u32 	%r8383, [%rd6+12];
	or.b32  	%r8384, %r8382, %r8383;
	st.local.u32 	[%rd9+156], %r8384;
	ld.local.u32 	%r8385, [%rd9+160];
	ld.local.u32 	%r8386, [%rd7];
	or.b32  	%r8387, %r8385, %r8386;
	st.local.u32 	[%rd9+160], %r8387;
	ld.local.u32 	%r8388, [%rd9+164];
	ld.local.u32 	%r8389, [%rd7+4];
	or.b32  	%r8390, %r8388, %r8389;
	st.local.u32 	[%rd9+164], %r8390;
	ld.local.u32 	%r8391, [%rd9+168];
	ld.local.u32 	%r8392, [%rd7+8];
	or.b32  	%r8393, %r8391, %r8392;
	st.local.u32 	[%rd9+168], %r8393;
	ld.local.u32 	%r8394, [%rd9+172];
	ld.local.u32 	%r8395, [%rd7+12];
	or.b32  	%r8396, %r8394, %r8395;
	st.local.u32 	[%rd9+172], %r8396;
	ld.local.u32 	%r8397, [%rd9+176];
	ld.local.u32 	%r8398, [%rd8];
	or.b32  	%r8399, %r8397, %r8398;
	st.local.u32 	[%rd9+176], %r8399;
	ld.local.u32 	%r8400, [%rd9+180];
	ld.local.u32 	%r8401, [%rd8+4];
	or.b32  	%r8402, %r8400, %r8401;
	st.local.u32 	[%rd9+180], %r8402;
	ld.local.u32 	%r8403, [%rd9+184];
	ld.local.u32 	%r8404, [%rd8+8];
	or.b32  	%r8405, %r8403, %r8404;
	st.local.u32 	[%rd9+184], %r8405;
	ld.local.u32 	%r8406, [%rd9+188];
	ld.local.u32 	%r8407, [%rd8+12];
	or.b32  	%r8408, %r8406, %r8407;
	st.local.u32 	[%rd9+188], %r8408;
	bra.uni 	BB1_175;

BB1_64:
	setp.ne.s32	%p8, %r3, 31;
	@%p8 bra 	BB1_88;

	ld.local.u32 	%r581, [%rd8+12];
	mov.u32 	%r8441, 0;
	// inline asm
	prmt.b32 %r8470, %r8441, %r581, %r4;
	// inline asm
	ld.local.u32 	%r584, [%rd8+12];
	ld.local.u32 	%r585, [%rd8+8];
	// inline asm
	prmt.b32 %r8471, %r584, %r585, %r4;
	// inline asm
	ld.local.u32 	%r588, [%rd8+8];
	ld.local.u32 	%r589, [%rd8+4];
	// inline asm
	prmt.b32 %r8472, %r588, %r589, %r4;
	// inline asm
	ld.local.u32 	%r592, [%rd8+4];
	ld.local.u32 	%r593, [%rd8];
	// inline asm
	prmt.b32 %r8473, %r592, %r593, %r4;
	// inline asm
	ld.local.u32 	%r596, [%rd8];
	ld.local.u32 	%r597, [%rd7+12];
	// inline asm
	prmt.b32 %r8466, %r596, %r597, %r4;
	// inline asm
	ld.local.u32 	%r600, [%rd7+12];
	ld.local.u32 	%r601, [%rd7+8];
	// inline asm
	prmt.b32 %r8467, %r600, %r601, %r4;
	// inline asm
	ld.local.u32 	%r604, [%rd7+8];
	ld.local.u32 	%r605, [%rd7+4];
	// inline asm
	prmt.b32 %r8468, %r604, %r605, %r4;
	// inline asm
	ld.local.u32 	%r608, [%rd7+4];
	ld.local.u32 	%r609, [%rd7];
	// inline asm
	prmt.b32 %r8469, %r608, %r609, %r4;
	// inline asm
	ld.local.u32 	%r612, [%rd7];
	ld.local.u32 	%r613, [%rd6+12];
	// inline asm
	prmt.b32 %r8462, %r612, %r613, %r4;
	// inline asm
	ld.local.u32 	%r616, [%rd6+12];
	ld.local.u32 	%r617, [%rd6+8];
	// inline asm
	prmt.b32 %r8463, %r616, %r617, %r4;
	// inline asm
	ld.local.u32 	%r620, [%rd6+8];
	ld.local.u32 	%r621, [%rd6+4];
	// inline asm
	prmt.b32 %r8464, %r620, %r621, %r4;
	// inline asm
	ld.local.u32 	%r624, [%rd6+4];
	ld.local.u32 	%r625, [%rd6];
	// inline asm
	prmt.b32 %r8465, %r624, %r625, %r4;
	// inline asm
	ld.local.u32 	%r628, [%rd6];
	ld.local.u32 	%r629, [%rd5+12];
	// inline asm
	prmt.b32 %r8458, %r628, %r629, %r4;
	// inline asm
	ld.local.u32 	%r632, [%rd5+12];
	ld.local.u32 	%r633, [%rd5+8];
	// inline asm
	prmt.b32 %r8459, %r632, %r633, %r4;
	// inline asm
	ld.local.u32 	%r636, [%rd5+8];
	ld.local.u32 	%r637, [%rd5+4];
	// inline asm
	prmt.b32 %r8460, %r636, %r637, %r4;
	// inline asm
	ld.local.u32 	%r640, [%rd5+4];
	ld.local.u32 	%r641, [%rd5];
	// inline asm
	prmt.b32 %r8461, %r640, %r641, %r4;
	// inline asm
	ld.local.u32 	%r644, [%rd5];
	ld.local.u32 	%r645, [%rd4+12];
	// inline asm
	prmt.b32 %r8454, %r644, %r645, %r4;
	// inline asm
	ld.local.u32 	%r648, [%rd4+12];
	ld.local.u32 	%r649, [%rd4+8];
	// inline asm
	prmt.b32 %r8455, %r648, %r649, %r4;
	// inline asm
	ld.local.u32 	%r652, [%rd4+8];
	ld.local.u32 	%r653, [%rd4+4];
	// inline asm
	prmt.b32 %r8456, %r652, %r653, %r4;
	// inline asm
	ld.local.u32 	%r656, [%rd4+4];
	ld.local.u32 	%r657, [%rd4];
	// inline asm
	prmt.b32 %r8457, %r656, %r657, %r4;
	// inline asm
	ld.local.u32 	%r660, [%rd4];
	ld.local.u32 	%r661, [%rd3+12];
	// inline asm
	prmt.b32 %r8450, %r660, %r661, %r4;
	// inline asm
	ld.local.u32 	%r664, [%rd3+12];
	ld.local.u32 	%r665, [%rd3+8];
	// inline asm
	prmt.b32 %r8451, %r664, %r665, %r4;
	// inline asm
	ld.local.u32 	%r668, [%rd3+8];
	ld.local.u32 	%r669, [%rd3+4];
	// inline asm
	prmt.b32 %r8452, %r668, %r669, %r4;
	// inline asm
	ld.local.u32 	%r672, [%rd3+4];
	ld.local.u32 	%r673, [%rd3];
	// inline asm
	prmt.b32 %r8453, %r672, %r673, %r4;
	// inline asm
	ld.local.u32 	%r676, [%rd3];
	ld.local.u32 	%r677, [%rd2+12];
	// inline asm
	prmt.b32 %r8446, %r676, %r677, %r4;
	// inline asm
	ld.local.u32 	%r680, [%rd2+12];
	ld.local.u32 	%r681, [%rd2+8];
	// inline asm
	prmt.b32 %r8447, %r680, %r681, %r4;
	// inline asm
	ld.local.u32 	%r684, [%rd2+8];
	ld.local.u32 	%r685, [%rd2+4];
	// inline asm
	prmt.b32 %r8448, %r684, %r685, %r4;
	// inline asm
	ld.local.u32 	%r688, [%rd2+4];
	ld.local.u32 	%r689, [%rd2];
	// inline asm
	prmt.b32 %r8449, %r688, %r689, %r4;
	// inline asm
	ld.local.u32 	%r692, [%rd2];
	ld.local.u32 	%r693, [%rd1+12];
	// inline asm
	prmt.b32 %r8442, %r692, %r693, %r4;
	// inline asm
	ld.local.u32 	%r696, [%rd1+12];
	ld.local.u32 	%r697, [%rd1+8];
	// inline asm
	prmt.b32 %r8443, %r696, %r697, %r4;
	// inline asm
	ld.local.u32 	%r700, [%rd1+8];
	ld.local.u32 	%r701, [%rd1+4];
	// inline asm
	prmt.b32 %r8444, %r700, %r701, %r4;
	// inline asm
	ld.local.u32 	%r704, [%rd1+4];
	ld.local.u32 	%r705, [%rd1];
	// inline asm
	prmt.b32 %r8445, %r704, %r705, %r4;
	// inline asm
	ld.local.u32 	%r708, [%rd1];
	// inline asm
	prmt.b32 %r707, %r708, %r8441, %r4;
	// inline asm
	st.local.u32 	[%rd8+12], %r707;
	st.local.u32 	[%rd8+8], %r8441;
	st.local.u32 	[%rd8+4], %r8441;
	st.local.u32 	[%rd8], %r8441;
	st.local.u32 	[%rd7+12], %r8441;
	st.local.u32 	[%rd7+8], %r8441;
	st.local.u32 	[%rd7+4], %r8441;
	st.local.u32 	[%rd7], %r8441;
	st.local.u32 	[%rd6+12], %r8441;
	st.local.u32 	[%rd6+8], %r8441;
	st.local.u32 	[%rd6+4], %r8441;
	st.local.u32 	[%rd6], %r8441;
	st.local.u32 	[%rd5+12], %r8441;
	st.local.u32 	[%rd5+8], %r8441;
	st.local.u32 	[%rd5+4], %r8441;
	st.local.u32 	[%rd5], %r8441;
	st.local.u32 	[%rd4+12], %r8441;
	st.local.u32 	[%rd4+8], %r8441;
	st.local.u32 	[%rd4+4], %r8441;
	st.local.u32 	[%rd4], %r8441;
	st.local.u32 	[%rd3+12], %r8441;
	st.local.u32 	[%rd3+8], %r8441;
	st.local.u32 	[%rd3+4], %r8441;
	st.local.u32 	[%rd3], %r8441;
	st.local.u32 	[%rd2+12], %r8441;
	st.local.u32 	[%rd2+8], %r8441;
	st.local.u32 	[%rd2+4], %r8441;
	st.local.u32 	[%rd2], %r8441;
	st.local.u32 	[%rd1+12], %r8441;
	st.local.u32 	[%rd1+8], %r8441;
	mov.u64 	%rd99, 0;
	st.local.u32 	[%rd1+4], %rd99;
	st.local.u32 	[%rd1], %rd99;
	bra.uni 	BB1_90;

BB1_88:
	ld.local.u32 	%r8441, [%rd1];
	mov.u32 	%r8442, 0;
	mov.u32 	%r8443, %r8442;
	mov.u32 	%r8444, %r8442;
	mov.u32 	%r8445, %r8442;

BB1_89:
	mov.u32 	%r8446, %r8442;
	mov.u32 	%r8447, %r8442;
	mov.u32 	%r8448, %r8442;
	mov.u32 	%r8449, %r8442;
	mov.u32 	%r8450, %r8442;
	mov.u32 	%r8451, %r8442;
	mov.u32 	%r8452, %r8442;
	mov.u32 	%r8453, %r8442;
	mov.u32 	%r8454, %r8442;
	mov.u32 	%r8455, %r8442;
	mov.u32 	%r8456, %r8442;
	mov.u32 	%r8457, %r8442;
	mov.u32 	%r8458, %r8442;
	mov.u32 	%r8459, %r8442;
	mov.u32 	%r8460, %r8442;
	mov.u32 	%r8461, %r8442;
	mov.u32 	%r8462, %r8442;
	mov.u32 	%r8463, %r8442;
	mov.u32 	%r8464, %r8442;
	mov.u32 	%r8465, %r8442;
	mov.u32 	%r8466, %r8442;
	mov.u32 	%r8467, %r8442;
	mov.u32 	%r8468, %r8442;
	mov.u32 	%r8469, %r8442;
	mov.u32 	%r8470, %r8442;
	mov.u32 	%r8471, %r8442;
	mov.u32 	%r8472, %r8442;
	mov.u32 	%r8473, %r8442;

BB1_90:
	ld.local.u32 	%r5363, [%rd9+64];
	or.b32  	%r5364, %r5363, %r8441;
	st.local.u32 	[%rd9+64], %r5364;
	ld.local.u32 	%r5365, [%rd9+68];
	ld.local.u32 	%r5366, [%rd1+4];
	or.b32  	%r5367, %r5365, %r5366;
	st.local.u32 	[%rd9+68], %r5367;
	ld.local.u32 	%r5368, [%rd9+72];
	ld.local.u32 	%r5369, [%rd1+8];
	or.b32  	%r5370, %r5368, %r5369;
	st.local.u32 	[%rd9+72], %r5370;
	ld.local.u32 	%r5371, [%rd9+76];
	ld.local.u32 	%r5372, [%rd1+12];
	or.b32  	%r5373, %r5371, %r5372;
	st.local.u32 	[%rd9+76], %r5373;
	ld.local.u32 	%r5374, [%rd9+80];
	ld.local.u32 	%r5375, [%rd2];
	or.b32  	%r5376, %r5374, %r5375;
	st.local.u32 	[%rd9+80], %r5376;
	ld.local.u32 	%r5377, [%rd9+84];
	ld.local.u32 	%r5378, [%rd2+4];
	or.b32  	%r5379, %r5377, %r5378;
	st.local.u32 	[%rd9+84], %r5379;
	ld.local.u32 	%r5380, [%rd9+88];
	ld.local.u32 	%r5381, [%rd2+8];
	or.b32  	%r5382, %r5380, %r5381;
	st.local.u32 	[%rd9+88], %r5382;
	ld.local.u32 	%r5383, [%rd9+92];
	ld.local.u32 	%r5384, [%rd2+12];
	or.b32  	%r5385, %r5383, %r5384;
	st.local.u32 	[%rd9+92], %r5385;
	ld.local.u32 	%r5386, [%rd9+96];
	ld.local.u32 	%r5387, [%rd3];
	or.b32  	%r5388, %r5386, %r5387;
	st.local.u32 	[%rd9+96], %r5388;
	ld.local.u32 	%r5389, [%rd9+100];
	ld.local.u32 	%r5390, [%rd3+4];
	or.b32  	%r5391, %r5389, %r5390;
	st.local.u32 	[%rd9+100], %r5391;
	ld.local.u32 	%r5392, [%rd9+104];
	ld.local.u32 	%r5393, [%rd3+8];
	or.b32  	%r5394, %r5392, %r5393;
	st.local.u32 	[%rd9+104], %r5394;
	ld.local.u32 	%r5395, [%rd9+108];
	ld.local.u32 	%r5396, [%rd3+12];
	or.b32  	%r5397, %r5395, %r5396;
	st.local.u32 	[%rd9+108], %r5397;
	ld.local.u32 	%r5398, [%rd9+112];
	ld.local.u32 	%r5399, [%rd4];
	or.b32  	%r5400, %r5398, %r5399;
	st.local.u32 	[%rd9+112], %r5400;
	ld.local.u32 	%r5401, [%rd9+116];
	ld.local.u32 	%r5402, [%rd4+4];
	or.b32  	%r5403, %r5401, %r5402;
	st.local.u32 	[%rd9+116], %r5403;
	ld.local.u32 	%r5404, [%rd9+120];
	ld.local.u32 	%r5405, [%rd4+8];
	or.b32  	%r5406, %r5404, %r5405;
	st.local.u32 	[%rd9+120], %r5406;
	ld.local.u32 	%r5407, [%rd9+124];
	ld.local.u32 	%r5408, [%rd4+12];
	or.b32  	%r5409, %r5407, %r5408;
	st.local.u32 	[%rd9+124], %r5409;
	ld.local.u32 	%r5410, [%rd9+128];
	ld.local.u32 	%r5411, [%rd5];
	or.b32  	%r5412, %r5410, %r5411;
	st.local.u32 	[%rd9+128], %r5412;
	ld.local.u32 	%r5413, [%rd9+132];
	ld.local.u32 	%r5414, [%rd5+4];
	or.b32  	%r5415, %r5413, %r5414;
	st.local.u32 	[%rd9+132], %r5415;
	ld.local.u32 	%r5416, [%rd9+136];
	ld.local.u32 	%r5417, [%rd5+8];
	or.b32  	%r5418, %r5416, %r5417;
	st.local.u32 	[%rd9+136], %r5418;
	ld.local.u32 	%r5419, [%rd9+140];
	ld.local.u32 	%r5420, [%rd5+12];
	or.b32  	%r5421, %r5419, %r5420;
	st.local.u32 	[%rd9+140], %r5421;
	ld.local.u32 	%r5422, [%rd9+144];
	ld.local.u32 	%r5423, [%rd6];
	or.b32  	%r5424, %r5422, %r5423;
	st.local.u32 	[%rd9+144], %r5424;
	ld.local.u32 	%r5425, [%rd9+148];
	ld.local.u32 	%r5426, [%rd6+4];
	or.b32  	%r5427, %r5425, %r5426;
	st.local.u32 	[%rd9+148], %r5427;
	ld.local.u32 	%r5428, [%rd9+152];
	ld.local.u32 	%r5429, [%rd6+8];
	or.b32  	%r5430, %r5428, %r5429;
	st.local.u32 	[%rd9+152], %r5430;
	ld.local.u32 	%r5431, [%rd9+156];
	ld.local.u32 	%r5432, [%rd6+12];
	or.b32  	%r5433, %r5431, %r5432;
	st.local.u32 	[%rd9+156], %r5433;
	ld.local.u32 	%r5434, [%rd9+160];
	ld.local.u32 	%r5435, [%rd7];
	or.b32  	%r5436, %r5434, %r5435;
	st.local.u32 	[%rd9+160], %r5436;
	ld.local.u32 	%r5437, [%rd9+164];
	ld.local.u32 	%r5438, [%rd7+4];
	or.b32  	%r5439, %r5437, %r5438;
	st.local.u32 	[%rd9+164], %r5439;
	ld.local.u32 	%r5440, [%rd9+168];
	ld.local.u32 	%r5441, [%rd7+8];
	or.b32  	%r5442, %r5440, %r5441;
	st.local.u32 	[%rd9+168], %r5442;
	ld.local.u32 	%r5443, [%rd9+172];
	ld.local.u32 	%r5444, [%rd7+12];
	or.b32  	%r5445, %r5443, %r5444;
	st.local.u32 	[%rd9+172], %r5445;
	ld.local.u32 	%r5446, [%rd9+176];
	ld.local.u32 	%r5447, [%rd8];
	or.b32  	%r5448, %r5446, %r5447;
	st.local.u32 	[%rd9+176], %r5448;
	ld.local.u32 	%r5449, [%rd9+180];
	ld.local.u32 	%r5450, [%rd8+4];
	or.b32  	%r5451, %r5449, %r5450;
	st.local.u32 	[%rd9+180], %r5451;
	ld.local.u32 	%r5452, [%rd9+184];
	ld.local.u32 	%r5453, [%rd8+8];
	or.b32  	%r5454, %r5452, %r5453;
	st.local.u32 	[%rd9+184], %r5454;
	ld.local.u32 	%r5455, [%rd9+188];
	ld.local.u32 	%r5456, [%rd8+12];
	or.b32  	%r5457, %r5455, %r5456;
	st.local.u32 	[%rd9+188], %r5457;
	mov.b64	%rd1195, {%r5367, %r5364};
	mov.b64	%rd1196, {%r5373, %r5370};
	mov.b64	%rd1197, {%r5379, %r5376};
	mov.b64	%rd1198, {%r5385, %r5382};
	mov.b64	%rd1199, {%r5391, %r5388};
	mov.b64	%rd1200, {%r5397, %r5394};
	mov.b64	%rd1201, {%r5403, %r5400};
	mov.b64	%rd1202, {%r5409, %r5406};
	mov.b64	%rd1186, {%r5415, %r5412};
	mov.b64	%rd1185, {%r5421, %r5418};
	mov.b64	%rd1184, {%r5427, %r5424};
	mov.b64	%rd1183, {%r5433, %r5430};
	mov.b64	%rd1182, {%r5439, %r5436};
	mov.b64	%rd1181, {%r5445, %r5442};
	mov.b64	%rd1180, {%r5451, %r5448};
	mov.b64	%rd1179, {%r5457, %r5454};
	ld.local.u64 	%rd26, [%rd9+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5458,%dummy}, %rd26;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5459}, %rd26;
	}
	shf.r.wrap.b32 	%r5460, %r5459, %r5458, 14;
	shf.r.wrap.b32 	%r5461, %r5458, %r5459, 14;
	mov.b64 	%rd129, {%r5461, %r5460};
	shf.r.wrap.b32 	%r5462, %r5459, %r5458, 18;
	shf.r.wrap.b32 	%r5463, %r5458, %r5459, 18;
	mov.b64 	%rd130, {%r5463, %r5462};
	xor.b64  	%rd131, %rd129, %rd130;
	shf.l.wrap.b32 	%r5464, %r5458, %r5459, 23;
	shf.l.wrap.b32 	%r5465, %r5459, %r5458, 23;
	mov.b64 	%rd132, {%r5465, %r5464};
	xor.b64  	%rd133, %rd131, %rd132;
	ld.local.u64 	%rd27, [%rd9+48];
	ld.local.u64 	%rd28, [%rd9+40];
	xor.b64  	%rd134, %rd27, %rd28;
	and.b64  	%rd135, %rd134, %rd26;
	xor.b64  	%rd136, %rd135, %rd27;
	ld.local.u64 	%rd29, [%rd9+56];
	add.s64 	%rd137, %rd133, %rd29;
	add.s64 	%rd138, %rd137, %rd136;
	add.s64 	%rd139, %rd138, %rd1195;
	ld.const.u64 	%rd140, [k_sha512];
	add.s64 	%rd141, %rd139, %rd140;
	ld.local.u64 	%rd30, [%rd9+24];
	add.s64 	%rd142, %rd141, %rd30;
	ld.local.u64 	%rd31, [%rd9];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5466,%dummy}, %rd31;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5467}, %rd31;
	}
	shf.r.wrap.b32 	%r5468, %r5467, %r5466, 28;
	shf.r.wrap.b32 	%r5469, %r5466, %r5467, 28;
	mov.b64 	%rd143, {%r5469, %r5468};
	shf.l.wrap.b32 	%r5470, %r5466, %r5467, 30;
	shf.l.wrap.b32 	%r5471, %r5467, %r5466, 30;
	mov.b64 	%rd144, {%r5471, %r5470};
	xor.b64  	%rd145, %rd143, %rd144;
	shf.l.wrap.b32 	%r5472, %r5466, %r5467, 25;
	shf.l.wrap.b32 	%r5473, %r5467, %r5466, 25;
	mov.b64 	%rd146, {%r5473, %r5472};
	xor.b64  	%rd147, %rd145, %rd146;
	ld.local.u64 	%rd32, [%rd9+8];
	and.b64  	%rd148, %rd32, %rd31;
	xor.b64  	%rd149, %rd32, %rd31;
	ld.local.u64 	%rd33, [%rd9+16];
	and.b64  	%rd150, %rd33, %rd149;
	or.b64  	%rd151, %rd150, %rd148;
	add.s64 	%rd152, %rd151, %rd147;
	add.s64 	%rd153, %rd152, %rd141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5474,%dummy}, %rd142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5475}, %rd142;
	}
	shf.r.wrap.b32 	%r5476, %r5475, %r5474, 14;
	shf.r.wrap.b32 	%r5477, %r5474, %r5475, 14;
	mov.b64 	%rd154, {%r5477, %r5476};
	shf.r.wrap.b32 	%r5478, %r5475, %r5474, 18;
	shf.r.wrap.b32 	%r5479, %r5474, %r5475, 18;
	mov.b64 	%rd155, {%r5479, %r5478};
	xor.b64  	%rd156, %rd154, %rd155;
	shf.l.wrap.b32 	%r5480, %r5474, %r5475, 23;
	shf.l.wrap.b32 	%r5481, %r5475, %r5474, 23;
	mov.b64 	%rd157, {%r5481, %r5480};
	xor.b64  	%rd158, %rd156, %rd157;
	xor.b64  	%rd159, %rd28, %rd26;
	and.b64  	%rd160, %rd142, %rd159;
	xor.b64  	%rd161, %rd160, %rd28;
	add.s64 	%rd162, %rd1196, %rd27;
	ld.const.u64 	%rd163, [k_sha512+8];
	add.s64 	%rd164, %rd162, %rd163;
	add.s64 	%rd165, %rd164, %rd161;
	add.s64 	%rd166, %rd165, %rd158;
	add.s64 	%rd167, %rd166, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5482,%dummy}, %rd153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5483}, %rd153;
	}
	shf.r.wrap.b32 	%r5484, %r5483, %r5482, 28;
	shf.r.wrap.b32 	%r5485, %r5482, %r5483, 28;
	mov.b64 	%rd168, {%r5485, %r5484};
	shf.l.wrap.b32 	%r5486, %r5482, %r5483, 30;
	shf.l.wrap.b32 	%r5487, %r5483, %r5482, 30;
	mov.b64 	%rd169, {%r5487, %r5486};
	xor.b64  	%rd170, %rd168, %rd169;
	shf.l.wrap.b32 	%r5488, %r5482, %r5483, 25;
	shf.l.wrap.b32 	%r5489, %r5483, %r5482, 25;
	mov.b64 	%rd171, {%r5489, %r5488};
	xor.b64  	%rd172, %rd170, %rd171;
	and.b64  	%rd173, %rd153, %rd31;
	xor.b64  	%rd174, %rd153, %rd31;
	and.b64  	%rd175, %rd174, %rd32;
	or.b64  	%rd176, %rd175, %rd173;
	add.s64 	%rd177, %rd172, %rd176;
	add.s64 	%rd178, %rd177, %rd166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5490,%dummy}, %rd167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5491}, %rd167;
	}
	shf.r.wrap.b32 	%r5492, %r5491, %r5490, 14;
	shf.r.wrap.b32 	%r5493, %r5490, %r5491, 14;
	mov.b64 	%rd179, {%r5493, %r5492};
	shf.r.wrap.b32 	%r5494, %r5491, %r5490, 18;
	shf.r.wrap.b32 	%r5495, %r5490, %r5491, 18;
	mov.b64 	%rd180, {%r5495, %r5494};
	xor.b64  	%rd181, %rd179, %rd180;
	shf.l.wrap.b32 	%r5496, %r5490, %r5491, 23;
	shf.l.wrap.b32 	%r5497, %r5491, %r5490, 23;
	mov.b64 	%rd182, {%r5497, %r5496};
	xor.b64  	%rd183, %rd181, %rd182;
	xor.b64  	%rd184, %rd142, %rd26;
	and.b64  	%rd185, %rd167, %rd184;
	xor.b64  	%rd186, %rd185, %rd26;
	add.s64 	%rd187, %rd1197, %rd28;
	ld.const.u64 	%rd188, [k_sha512+16];
	add.s64 	%rd189, %rd187, %rd188;
	add.s64 	%rd190, %rd189, %rd186;
	add.s64 	%rd191, %rd190, %rd183;
	add.s64 	%rd192, %rd191, %rd32;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5498,%dummy}, %rd178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5499}, %rd178;
	}
	shf.r.wrap.b32 	%r5500, %r5499, %r5498, 28;
	shf.r.wrap.b32 	%r5501, %r5498, %r5499, 28;
	mov.b64 	%rd193, {%r5501, %r5500};
	shf.l.wrap.b32 	%r5502, %r5498, %r5499, 30;
	shf.l.wrap.b32 	%r5503, %r5499, %r5498, 30;
	mov.b64 	%rd194, {%r5503, %r5502};
	xor.b64  	%rd195, %rd193, %rd194;
	shf.l.wrap.b32 	%r5504, %r5498, %r5499, 25;
	shf.l.wrap.b32 	%r5505, %r5499, %r5498, 25;
	mov.b64 	%rd196, {%r5505, %r5504};
	xor.b64  	%rd197, %rd195, %rd196;
	and.b64  	%rd198, %rd178, %rd153;
	xor.b64  	%rd199, %rd178, %rd153;
	and.b64  	%rd200, %rd199, %rd31;
	or.b64  	%rd201, %rd200, %rd198;
	add.s64 	%rd202, %rd197, %rd201;
	add.s64 	%rd203, %rd202, %rd191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5506,%dummy}, %rd192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5507}, %rd192;
	}
	shf.r.wrap.b32 	%r5508, %r5507, %r5506, 14;
	shf.r.wrap.b32 	%r5509, %r5506, %r5507, 14;
	mov.b64 	%rd204, {%r5509, %r5508};
	shf.r.wrap.b32 	%r5510, %r5507, %r5506, 18;
	shf.r.wrap.b32 	%r5511, %r5506, %r5507, 18;
	mov.b64 	%rd205, {%r5511, %r5510};
	xor.b64  	%rd206, %rd204, %rd205;
	shf.l.wrap.b32 	%r5512, %r5506, %r5507, 23;
	shf.l.wrap.b32 	%r5513, %r5507, %r5506, 23;
	mov.b64 	%rd207, {%r5513, %r5512};
	xor.b64  	%rd208, %rd206, %rd207;
	xor.b64  	%rd209, %rd167, %rd142;
	and.b64  	%rd210, %rd192, %rd209;
	xor.b64  	%rd211, %rd210, %rd142;
	add.s64 	%rd212, %rd1198, %rd26;
	ld.const.u64 	%rd213, [k_sha512+24];
	add.s64 	%rd214, %rd212, %rd213;
	add.s64 	%rd215, %rd214, %rd211;
	add.s64 	%rd216, %rd215, %rd208;
	add.s64 	%rd217, %rd216, %rd31;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5514,%dummy}, %rd203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5515}, %rd203;
	}
	shf.r.wrap.b32 	%r5516, %r5515, %r5514, 28;
	shf.r.wrap.b32 	%r5517, %r5514, %r5515, 28;
	mov.b64 	%rd218, {%r5517, %r5516};
	shf.l.wrap.b32 	%r5518, %r5514, %r5515, 30;
	shf.l.wrap.b32 	%r5519, %r5515, %r5514, 30;
	mov.b64 	%rd219, {%r5519, %r5518};
	xor.b64  	%rd220, %rd218, %rd219;
	shf.l.wrap.b32 	%r5520, %r5514, %r5515, 25;
	shf.l.wrap.b32 	%r5521, %r5515, %r5514, 25;
	mov.b64 	%rd221, {%r5521, %r5520};
	xor.b64  	%rd222, %rd220, %rd221;
	and.b64  	%rd223, %rd203, %rd178;
	xor.b64  	%rd224, %rd203, %rd178;
	and.b64  	%rd225, %rd224, %rd153;
	or.b64  	%rd226, %rd225, %rd223;
	add.s64 	%rd227, %rd222, %rd226;
	add.s64 	%rd228, %rd227, %rd216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5522,%dummy}, %rd217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5523}, %rd217;
	}
	shf.r.wrap.b32 	%r5524, %r5523, %r5522, 14;
	shf.r.wrap.b32 	%r5525, %r5522, %r5523, 14;
	mov.b64 	%rd229, {%r5525, %r5524};
	shf.r.wrap.b32 	%r5526, %r5523, %r5522, 18;
	shf.r.wrap.b32 	%r5527, %r5522, %r5523, 18;
	mov.b64 	%rd230, {%r5527, %r5526};
	xor.b64  	%rd231, %rd229, %rd230;
	shf.l.wrap.b32 	%r5528, %r5522, %r5523, 23;
	shf.l.wrap.b32 	%r5529, %r5523, %r5522, 23;
	mov.b64 	%rd232, {%r5529, %r5528};
	xor.b64  	%rd233, %rd231, %rd232;
	xor.b64  	%rd234, %rd192, %rd167;
	and.b64  	%rd235, %rd217, %rd234;
	xor.b64  	%rd236, %rd235, %rd167;
	add.s64 	%rd237, %rd142, %rd1199;
	ld.const.u64 	%rd238, [k_sha512+32];
	add.s64 	%rd239, %rd237, %rd238;
	add.s64 	%rd240, %rd239, %rd236;
	add.s64 	%rd241, %rd240, %rd233;
	add.s64 	%rd242, %rd241, %rd153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5530,%dummy}, %rd228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5531}, %rd228;
	}
	shf.r.wrap.b32 	%r5532, %r5531, %r5530, 28;
	shf.r.wrap.b32 	%r5533, %r5530, %r5531, 28;
	mov.b64 	%rd243, {%r5533, %r5532};
	shf.l.wrap.b32 	%r5534, %r5530, %r5531, 30;
	shf.l.wrap.b32 	%r5535, %r5531, %r5530, 30;
	mov.b64 	%rd244, {%r5535, %r5534};
	xor.b64  	%rd245, %rd243, %rd244;
	shf.l.wrap.b32 	%r5536, %r5530, %r5531, 25;
	shf.l.wrap.b32 	%r5537, %r5531, %r5530, 25;
	mov.b64 	%rd246, {%r5537, %r5536};
	xor.b64  	%rd247, %rd245, %rd246;
	and.b64  	%rd248, %rd228, %rd203;
	xor.b64  	%rd249, %rd228, %rd203;
	and.b64  	%rd250, %rd249, %rd178;
	or.b64  	%rd251, %rd250, %rd248;
	add.s64 	%rd252, %rd247, %rd251;
	add.s64 	%rd253, %rd252, %rd241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5538,%dummy}, %rd242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5539}, %rd242;
	}
	shf.r.wrap.b32 	%r5540, %r5539, %r5538, 14;
	shf.r.wrap.b32 	%r5541, %r5538, %r5539, 14;
	mov.b64 	%rd254, {%r5541, %r5540};
	shf.r.wrap.b32 	%r5542, %r5539, %r5538, 18;
	shf.r.wrap.b32 	%r5543, %r5538, %r5539, 18;
	mov.b64 	%rd255, {%r5543, %r5542};
	xor.b64  	%rd256, %rd254, %rd255;
	shf.l.wrap.b32 	%r5544, %r5538, %r5539, 23;
	shf.l.wrap.b32 	%r5545, %r5539, %r5538, 23;
	mov.b64 	%rd257, {%r5545, %r5544};
	xor.b64  	%rd258, %rd256, %rd257;
	xor.b64  	%rd259, %rd217, %rd192;
	and.b64  	%rd260, %rd242, %rd259;
	xor.b64  	%rd261, %rd260, %rd192;
	ld.const.u64 	%rd262, [k_sha512+40];
	add.s64 	%rd263, %rd262, %rd1200;
	add.s64 	%rd264, %rd263, %rd167;
	add.s64 	%rd265, %rd264, %rd261;
	add.s64 	%rd266, %rd265, %rd258;
	add.s64 	%rd267, %rd266, %rd178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5546,%dummy}, %rd253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5547}, %rd253;
	}
	shf.r.wrap.b32 	%r5548, %r5547, %r5546, 28;
	shf.r.wrap.b32 	%r5549, %r5546, %r5547, 28;
	mov.b64 	%rd268, {%r5549, %r5548};
	shf.l.wrap.b32 	%r5550, %r5546, %r5547, 30;
	shf.l.wrap.b32 	%r5551, %r5547, %r5546, 30;
	mov.b64 	%rd269, {%r5551, %r5550};
	xor.b64  	%rd270, %rd268, %rd269;
	shf.l.wrap.b32 	%r5552, %r5546, %r5547, 25;
	shf.l.wrap.b32 	%r5553, %r5547, %r5546, 25;
	mov.b64 	%rd271, {%r5553, %r5552};
	xor.b64  	%rd272, %rd270, %rd271;
	and.b64  	%rd273, %rd253, %rd228;
	xor.b64  	%rd274, %rd253, %rd228;
	and.b64  	%rd275, %rd274, %rd203;
	or.b64  	%rd276, %rd275, %rd273;
	add.s64 	%rd277, %rd272, %rd276;
	add.s64 	%rd278, %rd277, %rd266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5554,%dummy}, %rd267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5555}, %rd267;
	}
	shf.r.wrap.b32 	%r5556, %r5555, %r5554, 14;
	shf.r.wrap.b32 	%r5557, %r5554, %r5555, 14;
	mov.b64 	%rd279, {%r5557, %r5556};
	shf.r.wrap.b32 	%r5558, %r5555, %r5554, 18;
	shf.r.wrap.b32 	%r5559, %r5554, %r5555, 18;
	mov.b64 	%rd280, {%r5559, %r5558};
	xor.b64  	%rd281, %rd279, %rd280;
	shf.l.wrap.b32 	%r5560, %r5554, %r5555, 23;
	shf.l.wrap.b32 	%r5561, %r5555, %r5554, 23;
	mov.b64 	%rd282, {%r5561, %r5560};
	xor.b64  	%rd283, %rd281, %rd282;
	xor.b64  	%rd284, %rd242, %rd217;
	and.b64  	%rd285, %rd267, %rd284;
	xor.b64  	%rd286, %rd285, %rd217;
	ld.const.u64 	%rd287, [k_sha512+48];
	add.s64 	%rd288, %rd287, %rd1201;
	add.s64 	%rd289, %rd288, %rd192;
	add.s64 	%rd290, %rd289, %rd286;
	add.s64 	%rd291, %rd290, %rd283;
	add.s64 	%rd292, %rd291, %rd203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5562,%dummy}, %rd278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5563}, %rd278;
	}
	shf.r.wrap.b32 	%r5564, %r5563, %r5562, 28;
	shf.r.wrap.b32 	%r5565, %r5562, %r5563, 28;
	mov.b64 	%rd293, {%r5565, %r5564};
	shf.l.wrap.b32 	%r5566, %r5562, %r5563, 30;
	shf.l.wrap.b32 	%r5567, %r5563, %r5562, 30;
	mov.b64 	%rd294, {%r5567, %r5566};
	xor.b64  	%rd295, %rd293, %rd294;
	shf.l.wrap.b32 	%r5568, %r5562, %r5563, 25;
	shf.l.wrap.b32 	%r5569, %r5563, %r5562, 25;
	mov.b64 	%rd296, {%r5569, %r5568};
	xor.b64  	%rd297, %rd295, %rd296;
	and.b64  	%rd298, %rd278, %rd253;
	xor.b64  	%rd299, %rd278, %rd253;
	and.b64  	%rd300, %rd299, %rd228;
	or.b64  	%rd301, %rd300, %rd298;
	add.s64 	%rd302, %rd297, %rd301;
	add.s64 	%rd303, %rd302, %rd291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5570,%dummy}, %rd292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5571}, %rd292;
	}
	shf.r.wrap.b32 	%r5572, %r5571, %r5570, 14;
	shf.r.wrap.b32 	%r5573, %r5570, %r5571, 14;
	mov.b64 	%rd304, {%r5573, %r5572};
	shf.r.wrap.b32 	%r5574, %r5571, %r5570, 18;
	shf.r.wrap.b32 	%r5575, %r5570, %r5571, 18;
	mov.b64 	%rd305, {%r5575, %r5574};
	xor.b64  	%rd306, %rd304, %rd305;
	shf.l.wrap.b32 	%r5576, %r5570, %r5571, 23;
	shf.l.wrap.b32 	%r5577, %r5571, %r5570, 23;
	mov.b64 	%rd307, {%r5577, %r5576};
	xor.b64  	%rd308, %rd306, %rd307;
	xor.b64  	%rd309, %rd267, %rd242;
	and.b64  	%rd310, %rd292, %rd309;
	xor.b64  	%rd311, %rd310, %rd242;
	ld.const.u64 	%rd312, [k_sha512+56];
	add.s64 	%rd313, %rd312, %rd1202;
	add.s64 	%rd314, %rd313, %rd217;
	add.s64 	%rd315, %rd314, %rd311;
	add.s64 	%rd316, %rd315, %rd308;
	add.s64 	%rd317, %rd316, %rd228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5578,%dummy}, %rd303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5579}, %rd303;
	}
	shf.r.wrap.b32 	%r5580, %r5579, %r5578, 28;
	shf.r.wrap.b32 	%r5581, %r5578, %r5579, 28;
	mov.b64 	%rd318, {%r5581, %r5580};
	shf.l.wrap.b32 	%r5582, %r5578, %r5579, 30;
	shf.l.wrap.b32 	%r5583, %r5579, %r5578, 30;
	mov.b64 	%rd319, {%r5583, %r5582};
	xor.b64  	%rd320, %rd318, %rd319;
	shf.l.wrap.b32 	%r5584, %r5578, %r5579, 25;
	shf.l.wrap.b32 	%r5585, %r5579, %r5578, 25;
	mov.b64 	%rd321, {%r5585, %r5584};
	xor.b64  	%rd322, %rd320, %rd321;
	and.b64  	%rd323, %rd303, %rd278;
	xor.b64  	%rd324, %rd303, %rd278;
	and.b64  	%rd325, %rd324, %rd253;
	or.b64  	%rd326, %rd325, %rd323;
	add.s64 	%rd327, %rd322, %rd326;
	add.s64 	%rd328, %rd327, %rd316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5586,%dummy}, %rd317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5587}, %rd317;
	}
	shf.r.wrap.b32 	%r5588, %r5587, %r5586, 14;
	shf.r.wrap.b32 	%r5589, %r5586, %r5587, 14;
	mov.b64 	%rd329, {%r5589, %r5588};
	shf.r.wrap.b32 	%r5590, %r5587, %r5586, 18;
	shf.r.wrap.b32 	%r5591, %r5586, %r5587, 18;
	mov.b64 	%rd330, {%r5591, %r5590};
	xor.b64  	%rd331, %rd329, %rd330;
	shf.l.wrap.b32 	%r5592, %r5586, %r5587, 23;
	shf.l.wrap.b32 	%r5593, %r5587, %r5586, 23;
	mov.b64 	%rd332, {%r5593, %r5592};
	xor.b64  	%rd333, %rd331, %rd332;
	xor.b64  	%rd334, %rd292, %rd267;
	and.b64  	%rd335, %rd317, %rd334;
	xor.b64  	%rd336, %rd335, %rd267;
	ld.const.u64 	%rd337, [k_sha512+64];
	add.s64 	%rd338, %rd337, %rd1186;
	add.s64 	%rd339, %rd338, %rd242;
	add.s64 	%rd340, %rd339, %rd336;
	add.s64 	%rd341, %rd340, %rd333;
	add.s64 	%rd342, %rd341, %rd253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5594,%dummy}, %rd328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5595}, %rd328;
	}
	shf.r.wrap.b32 	%r5596, %r5595, %r5594, 28;
	shf.r.wrap.b32 	%r5597, %r5594, %r5595, 28;
	mov.b64 	%rd343, {%r5597, %r5596};
	shf.l.wrap.b32 	%r5598, %r5594, %r5595, 30;
	shf.l.wrap.b32 	%r5599, %r5595, %r5594, 30;
	mov.b64 	%rd344, {%r5599, %r5598};
	xor.b64  	%rd345, %rd343, %rd344;
	shf.l.wrap.b32 	%r5600, %r5594, %r5595, 25;
	shf.l.wrap.b32 	%r5601, %r5595, %r5594, 25;
	mov.b64 	%rd346, {%r5601, %r5600};
	xor.b64  	%rd347, %rd345, %rd346;
	and.b64  	%rd348, %rd328, %rd303;
	xor.b64  	%rd349, %rd328, %rd303;
	and.b64  	%rd350, %rd349, %rd278;
	or.b64  	%rd351, %rd350, %rd348;
	add.s64 	%rd352, %rd347, %rd351;
	add.s64 	%rd353, %rd352, %rd341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5602,%dummy}, %rd342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5603}, %rd342;
	}
	shf.r.wrap.b32 	%r5604, %r5603, %r5602, 14;
	shf.r.wrap.b32 	%r5605, %r5602, %r5603, 14;
	mov.b64 	%rd354, {%r5605, %r5604};
	shf.r.wrap.b32 	%r5606, %r5603, %r5602, 18;
	shf.r.wrap.b32 	%r5607, %r5602, %r5603, 18;
	mov.b64 	%rd355, {%r5607, %r5606};
	xor.b64  	%rd356, %rd354, %rd355;
	shf.l.wrap.b32 	%r5608, %r5602, %r5603, 23;
	shf.l.wrap.b32 	%r5609, %r5603, %r5602, 23;
	mov.b64 	%rd357, {%r5609, %r5608};
	xor.b64  	%rd358, %rd356, %rd357;
	xor.b64  	%rd359, %rd317, %rd292;
	and.b64  	%rd360, %rd342, %rd359;
	xor.b64  	%rd361, %rd360, %rd292;
	ld.const.u64 	%rd362, [k_sha512+72];
	add.s64 	%rd363, %rd362, %rd1185;
	add.s64 	%rd364, %rd363, %rd267;
	add.s64 	%rd365, %rd364, %rd361;
	add.s64 	%rd366, %rd365, %rd358;
	add.s64 	%rd367, %rd366, %rd278;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5610,%dummy}, %rd353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5611}, %rd353;
	}
	shf.r.wrap.b32 	%r5612, %r5611, %r5610, 28;
	shf.r.wrap.b32 	%r5613, %r5610, %r5611, 28;
	mov.b64 	%rd368, {%r5613, %r5612};
	shf.l.wrap.b32 	%r5614, %r5610, %r5611, 30;
	shf.l.wrap.b32 	%r5615, %r5611, %r5610, 30;
	mov.b64 	%rd369, {%r5615, %r5614};
	xor.b64  	%rd370, %rd368, %rd369;
	shf.l.wrap.b32 	%r5616, %r5610, %r5611, 25;
	shf.l.wrap.b32 	%r5617, %r5611, %r5610, 25;
	mov.b64 	%rd371, {%r5617, %r5616};
	xor.b64  	%rd372, %rd370, %rd371;
	and.b64  	%rd373, %rd353, %rd328;
	xor.b64  	%rd374, %rd353, %rd328;
	and.b64  	%rd375, %rd374, %rd303;
	or.b64  	%rd376, %rd375, %rd373;
	add.s64 	%rd377, %rd372, %rd376;
	add.s64 	%rd378, %rd377, %rd366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5618,%dummy}, %rd367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5619}, %rd367;
	}
	shf.r.wrap.b32 	%r5620, %r5619, %r5618, 14;
	shf.r.wrap.b32 	%r5621, %r5618, %r5619, 14;
	mov.b64 	%rd379, {%r5621, %r5620};
	shf.r.wrap.b32 	%r5622, %r5619, %r5618, 18;
	shf.r.wrap.b32 	%r5623, %r5618, %r5619, 18;
	mov.b64 	%rd380, {%r5623, %r5622};
	xor.b64  	%rd381, %rd379, %rd380;
	shf.l.wrap.b32 	%r5624, %r5618, %r5619, 23;
	shf.l.wrap.b32 	%r5625, %r5619, %r5618, 23;
	mov.b64 	%rd382, {%r5625, %r5624};
	xor.b64  	%rd383, %rd381, %rd382;
	xor.b64  	%rd384, %rd342, %rd317;
	and.b64  	%rd385, %rd367, %rd384;
	xor.b64  	%rd386, %rd385, %rd317;
	ld.const.u64 	%rd387, [k_sha512+80];
	add.s64 	%rd388, %rd387, %rd1184;
	add.s64 	%rd389, %rd388, %rd292;
	add.s64 	%rd390, %rd389, %rd386;
	add.s64 	%rd391, %rd390, %rd383;
	add.s64 	%rd392, %rd391, %rd303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5626,%dummy}, %rd378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5627}, %rd378;
	}
	shf.r.wrap.b32 	%r5628, %r5627, %r5626, 28;
	shf.r.wrap.b32 	%r5629, %r5626, %r5627, 28;
	mov.b64 	%rd393, {%r5629, %r5628};
	shf.l.wrap.b32 	%r5630, %r5626, %r5627, 30;
	shf.l.wrap.b32 	%r5631, %r5627, %r5626, 30;
	mov.b64 	%rd394, {%r5631, %r5630};
	xor.b64  	%rd395, %rd393, %rd394;
	shf.l.wrap.b32 	%r5632, %r5626, %r5627, 25;
	shf.l.wrap.b32 	%r5633, %r5627, %r5626, 25;
	mov.b64 	%rd396, {%r5633, %r5632};
	xor.b64  	%rd397, %rd395, %rd396;
	and.b64  	%rd398, %rd378, %rd353;
	xor.b64  	%rd399, %rd378, %rd353;
	and.b64  	%rd400, %rd399, %rd328;
	or.b64  	%rd401, %rd400, %rd398;
	add.s64 	%rd402, %rd397, %rd401;
	add.s64 	%rd403, %rd402, %rd391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5634,%dummy}, %rd392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5635}, %rd392;
	}
	shf.r.wrap.b32 	%r5636, %r5635, %r5634, 14;
	shf.r.wrap.b32 	%r5637, %r5634, %r5635, 14;
	mov.b64 	%rd404, {%r5637, %r5636};
	shf.r.wrap.b32 	%r5638, %r5635, %r5634, 18;
	shf.r.wrap.b32 	%r5639, %r5634, %r5635, 18;
	mov.b64 	%rd405, {%r5639, %r5638};
	xor.b64  	%rd406, %rd404, %rd405;
	shf.l.wrap.b32 	%r5640, %r5634, %r5635, 23;
	shf.l.wrap.b32 	%r5641, %r5635, %r5634, 23;
	mov.b64 	%rd407, {%r5641, %r5640};
	xor.b64  	%rd408, %rd406, %rd407;
	xor.b64  	%rd409, %rd367, %rd342;
	and.b64  	%rd410, %rd392, %rd409;
	xor.b64  	%rd411, %rd410, %rd342;
	ld.const.u64 	%rd412, [k_sha512+88];
	add.s64 	%rd413, %rd412, %rd1183;
	add.s64 	%rd414, %rd413, %rd317;
	add.s64 	%rd415, %rd414, %rd411;
	add.s64 	%rd416, %rd415, %rd408;
	add.s64 	%rd417, %rd416, %rd328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5642,%dummy}, %rd403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5643}, %rd403;
	}
	shf.r.wrap.b32 	%r5644, %r5643, %r5642, 28;
	shf.r.wrap.b32 	%r5645, %r5642, %r5643, 28;
	mov.b64 	%rd418, {%r5645, %r5644};
	shf.l.wrap.b32 	%r5646, %r5642, %r5643, 30;
	shf.l.wrap.b32 	%r5647, %r5643, %r5642, 30;
	mov.b64 	%rd419, {%r5647, %r5646};
	xor.b64  	%rd420, %rd418, %rd419;
	shf.l.wrap.b32 	%r5648, %r5642, %r5643, 25;
	shf.l.wrap.b32 	%r5649, %r5643, %r5642, 25;
	mov.b64 	%rd421, {%r5649, %r5648};
	xor.b64  	%rd422, %rd420, %rd421;
	and.b64  	%rd423, %rd403, %rd378;
	xor.b64  	%rd424, %rd403, %rd378;
	and.b64  	%rd425, %rd424, %rd353;
	or.b64  	%rd426, %rd425, %rd423;
	add.s64 	%rd427, %rd422, %rd426;
	add.s64 	%rd428, %rd427, %rd416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5650,%dummy}, %rd417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5651}, %rd417;
	}
	shf.r.wrap.b32 	%r5652, %r5651, %r5650, 14;
	shf.r.wrap.b32 	%r5653, %r5650, %r5651, 14;
	mov.b64 	%rd429, {%r5653, %r5652};
	shf.r.wrap.b32 	%r5654, %r5651, %r5650, 18;
	shf.r.wrap.b32 	%r5655, %r5650, %r5651, 18;
	mov.b64 	%rd430, {%r5655, %r5654};
	xor.b64  	%rd431, %rd429, %rd430;
	shf.l.wrap.b32 	%r5656, %r5650, %r5651, 23;
	shf.l.wrap.b32 	%r5657, %r5651, %r5650, 23;
	mov.b64 	%rd432, {%r5657, %r5656};
	xor.b64  	%rd433, %rd431, %rd432;
	xor.b64  	%rd434, %rd392, %rd367;
	and.b64  	%rd435, %rd417, %rd434;
	xor.b64  	%rd436, %rd435, %rd367;
	ld.const.u64 	%rd437, [k_sha512+96];
	add.s64 	%rd438, %rd437, %rd1182;
	add.s64 	%rd439, %rd438, %rd342;
	add.s64 	%rd440, %rd439, %rd436;
	add.s64 	%rd441, %rd440, %rd433;
	add.s64 	%rd1194, %rd441, %rd353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5658,%dummy}, %rd428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5659}, %rd428;
	}
	shf.r.wrap.b32 	%r5660, %r5659, %r5658, 28;
	shf.r.wrap.b32 	%r5661, %r5658, %r5659, 28;
	mov.b64 	%rd442, {%r5661, %r5660};
	shf.l.wrap.b32 	%r5662, %r5658, %r5659, 30;
	shf.l.wrap.b32 	%r5663, %r5659, %r5658, 30;
	mov.b64 	%rd443, {%r5663, %r5662};
	xor.b64  	%rd444, %rd442, %rd443;
	shf.l.wrap.b32 	%r5664, %r5658, %r5659, 25;
	shf.l.wrap.b32 	%r5665, %r5659, %r5658, 25;
	mov.b64 	%rd445, {%r5665, %r5664};
	xor.b64  	%rd446, %rd444, %rd445;
	and.b64  	%rd447, %rd428, %rd403;
	xor.b64  	%rd448, %rd428, %rd403;
	and.b64  	%rd449, %rd448, %rd378;
	or.b64  	%rd450, %rd449, %rd447;
	add.s64 	%rd451, %rd446, %rd450;
	add.s64 	%rd1190, %rd451, %rd441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5666,%dummy}, %rd1194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5667}, %rd1194;
	}
	shf.r.wrap.b32 	%r5668, %r5667, %r5666, 14;
	shf.r.wrap.b32 	%r5669, %r5666, %r5667, 14;
	mov.b64 	%rd452, {%r5669, %r5668};
	shf.r.wrap.b32 	%r5670, %r5667, %r5666, 18;
	shf.r.wrap.b32 	%r5671, %r5666, %r5667, 18;
	mov.b64 	%rd453, {%r5671, %r5670};
	xor.b64  	%rd454, %rd452, %rd453;
	shf.l.wrap.b32 	%r5672, %r5666, %r5667, 23;
	shf.l.wrap.b32 	%r5673, %r5667, %r5666, 23;
	mov.b64 	%rd455, {%r5673, %r5672};
	xor.b64  	%rd456, %rd454, %rd455;
	xor.b64  	%rd457, %rd417, %rd392;
	and.b64  	%rd458, %rd1194, %rd457;
	xor.b64  	%rd459, %rd458, %rd392;
	ld.const.u64 	%rd460, [k_sha512+104];
	add.s64 	%rd461, %rd460, %rd1181;
	add.s64 	%rd462, %rd461, %rd367;
	add.s64 	%rd463, %rd462, %rd459;
	add.s64 	%rd464, %rd463, %rd456;
	add.s64 	%rd1193, %rd464, %rd378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5674,%dummy}, %rd1190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5675}, %rd1190;
	}
	shf.r.wrap.b32 	%r5676, %r5675, %r5674, 28;
	shf.r.wrap.b32 	%r5677, %r5674, %r5675, 28;
	mov.b64 	%rd465, {%r5677, %r5676};
	shf.l.wrap.b32 	%r5678, %r5674, %r5675, 30;
	shf.l.wrap.b32 	%r5679, %r5675, %r5674, 30;
	mov.b64 	%rd466, {%r5679, %r5678};
	xor.b64  	%rd467, %rd465, %rd466;
	shf.l.wrap.b32 	%r5680, %r5674, %r5675, 25;
	shf.l.wrap.b32 	%r5681, %r5675, %r5674, 25;
	mov.b64 	%rd468, {%r5681, %r5680};
	xor.b64  	%rd469, %rd467, %rd468;
	and.b64  	%rd470, %rd1190, %rd428;
	xor.b64  	%rd471, %rd1190, %rd428;
	and.b64  	%rd472, %rd471, %rd403;
	or.b64  	%rd473, %rd472, %rd470;
	add.s64 	%rd474, %rd469, %rd473;
	add.s64 	%rd1189, %rd474, %rd464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5682,%dummy}, %rd1193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5683}, %rd1193;
	}
	shf.r.wrap.b32 	%r5684, %r5683, %r5682, 14;
	shf.r.wrap.b32 	%r5685, %r5682, %r5683, 14;
	mov.b64 	%rd475, {%r5685, %r5684};
	shf.r.wrap.b32 	%r5686, %r5683, %r5682, 18;
	shf.r.wrap.b32 	%r5687, %r5682, %r5683, 18;
	mov.b64 	%rd476, {%r5687, %r5686};
	xor.b64  	%rd477, %rd475, %rd476;
	shf.l.wrap.b32 	%r5688, %r5682, %r5683, 23;
	shf.l.wrap.b32 	%r5689, %r5683, %r5682, 23;
	mov.b64 	%rd478, {%r5689, %r5688};
	xor.b64  	%rd479, %rd477, %rd478;
	xor.b64  	%rd480, %rd1194, %rd417;
	and.b64  	%rd481, %rd1193, %rd480;
	xor.b64  	%rd482, %rd481, %rd417;
	ld.const.u64 	%rd483, [k_sha512+112];
	add.s64 	%rd484, %rd483, %rd1180;
	add.s64 	%rd485, %rd484, %rd392;
	add.s64 	%rd486, %rd485, %rd482;
	add.s64 	%rd487, %rd486, %rd479;
	add.s64 	%rd1192, %rd487, %rd403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5690,%dummy}, %rd1189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5691}, %rd1189;
	}
	shf.r.wrap.b32 	%r5692, %r5691, %r5690, 28;
	shf.r.wrap.b32 	%r5693, %r5690, %r5691, 28;
	mov.b64 	%rd488, {%r5693, %r5692};
	shf.l.wrap.b32 	%r5694, %r5690, %r5691, 30;
	shf.l.wrap.b32 	%r5695, %r5691, %r5690, 30;
	mov.b64 	%rd489, {%r5695, %r5694};
	xor.b64  	%rd490, %rd488, %rd489;
	shf.l.wrap.b32 	%r5696, %r5690, %r5691, 25;
	shf.l.wrap.b32 	%r5697, %r5691, %r5690, 25;
	mov.b64 	%rd491, {%r5697, %r5696};
	xor.b64  	%rd492, %rd490, %rd491;
	and.b64  	%rd493, %rd1189, %rd1190;
	xor.b64  	%rd494, %rd1189, %rd1190;
	and.b64  	%rd495, %rd494, %rd428;
	or.b64  	%rd496, %rd495, %rd493;
	add.s64 	%rd497, %rd492, %rd496;
	add.s64 	%rd1188, %rd497, %rd487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5698,%dummy}, %rd1192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5699}, %rd1192;
	}
	shf.r.wrap.b32 	%r5700, %r5699, %r5698, 14;
	shf.r.wrap.b32 	%r5701, %r5698, %r5699, 14;
	mov.b64 	%rd498, {%r5701, %r5700};
	shf.r.wrap.b32 	%r5702, %r5699, %r5698, 18;
	shf.r.wrap.b32 	%r5703, %r5698, %r5699, 18;
	mov.b64 	%rd499, {%r5703, %r5702};
	xor.b64  	%rd500, %rd498, %rd499;
	shf.l.wrap.b32 	%r5704, %r5698, %r5699, 23;
	shf.l.wrap.b32 	%r5705, %r5699, %r5698, 23;
	mov.b64 	%rd501, {%r5705, %r5704};
	xor.b64  	%rd502, %rd500, %rd501;
	xor.b64  	%rd503, %rd1193, %rd1194;
	and.b64  	%rd504, %rd1192, %rd503;
	xor.b64  	%rd505, %rd504, %rd1194;
	ld.const.u64 	%rd506, [k_sha512+120];
	add.s64 	%rd507, %rd506, %rd1179;
	add.s64 	%rd508, %rd507, %rd417;
	add.s64 	%rd509, %rd508, %rd505;
	add.s64 	%rd510, %rd509, %rd502;
	add.s64 	%rd1191, %rd510, %rd428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5706,%dummy}, %rd1188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5707}, %rd1188;
	}
	shf.r.wrap.b32 	%r5708, %r5707, %r5706, 28;
	shf.r.wrap.b32 	%r5709, %r5706, %r5707, 28;
	mov.b64 	%rd511, {%r5709, %r5708};
	shf.l.wrap.b32 	%r5710, %r5706, %r5707, 30;
	shf.l.wrap.b32 	%r5711, %r5707, %r5706, 30;
	mov.b64 	%rd512, {%r5711, %r5710};
	xor.b64  	%rd513, %rd511, %rd512;
	shf.l.wrap.b32 	%r5712, %r5706, %r5707, 25;
	shf.l.wrap.b32 	%r5713, %r5707, %r5706, 25;
	mov.b64 	%rd514, {%r5713, %r5712};
	xor.b64  	%rd515, %rd513, %rd514;
	and.b64  	%rd516, %rd1188, %rd1189;
	xor.b64  	%rd517, %rd1188, %rd1189;
	and.b64  	%rd518, %rd517, %rd1190;
	or.b64  	%rd519, %rd518, %rd516;
	add.s64 	%rd520, %rd515, %rd519;
	add.s64 	%rd1187, %rd520, %rd510;
	mov.u32 	%r8474, 16;

BB1_91:
	shr.u64 	%rd521, %rd1180, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5714}, %rd1180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5715,%dummy}, %rd1180;
	}
	shf.l.wrap.b32 	%r5716, %r5715, %r5714, 3;
	shf.l.wrap.b32 	%r5717, %r5714, %r5715, 3;
	mov.b64 	%rd522, {%r5717, %r5716};
	xor.b64  	%rd523, %rd522, %rd521;
	shf.r.wrap.b32 	%r5718, %r5714, %r5715, 19;
	shf.r.wrap.b32 	%r5719, %r5715, %r5714, 19;
	mov.b64 	%rd524, {%r5719, %r5718};
	xor.b64  	%rd525, %rd523, %rd524;
	shr.u64 	%rd526, %rd1196, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5720,%dummy}, %rd1196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5721}, %rd1196;
	}
	shf.r.wrap.b32 	%r5722, %r5721, %r5720, 8;
	shf.r.wrap.b32 	%r5723, %r5720, %r5721, 8;
	mov.b64 	%rd527, {%r5723, %r5722};
	xor.b64  	%rd528, %rd527, %rd526;
	shf.r.wrap.b32 	%r5724, %r5721, %r5720, 1;
	shf.r.wrap.b32 	%r5725, %r5720, %r5721, 1;
	mov.b64 	%rd529, {%r5725, %r5724};
	xor.b64  	%rd530, %rd528, %rd529;
	add.s64 	%rd531, %rd530, %rd1195;
	add.s64 	%rd532, %rd531, %rd1185;
	add.s64 	%rd1195, %rd532, %rd525;
	shr.u64 	%rd533, %rd1179, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5726}, %rd1179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5727,%dummy}, %rd1179;
	}
	shf.l.wrap.b32 	%r5728, %r5727, %r5726, 3;
	shf.l.wrap.b32 	%r5729, %r5726, %r5727, 3;
	mov.b64 	%rd534, {%r5729, %r5728};
	xor.b64  	%rd535, %rd534, %rd533;
	shf.r.wrap.b32 	%r5730, %r5726, %r5727, 19;
	shf.r.wrap.b32 	%r5731, %r5727, %r5726, 19;
	mov.b64 	%rd536, {%r5731, %r5730};
	xor.b64  	%rd537, %rd535, %rd536;
	shr.u64 	%rd538, %rd1197, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5732,%dummy}, %rd1197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5733}, %rd1197;
	}
	shf.r.wrap.b32 	%r5734, %r5733, %r5732, 8;
	shf.r.wrap.b32 	%r5735, %r5732, %r5733, 8;
	mov.b64 	%rd539, {%r5735, %r5734};
	xor.b64  	%rd540, %rd539, %rd538;
	shf.r.wrap.b32 	%r5736, %r5733, %r5732, 1;
	shf.r.wrap.b32 	%r5737, %r5732, %r5733, 1;
	mov.b64 	%rd541, {%r5737, %r5736};
	xor.b64  	%rd542, %rd540, %rd541;
	add.s64 	%rd543, %rd542, %rd1196;
	add.s64 	%rd544, %rd543, %rd1184;
	add.s64 	%rd1196, %rd544, %rd537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5738,%dummy}, %rd1195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5739}, %rd1195;
	}
	shf.r.wrap.b32 	%r5740, %r5739, %r5738, 19;
	shf.r.wrap.b32 	%r5741, %r5738, %r5739, 19;
	mov.b64 	%rd545, {%r5741, %r5740};
	shf.l.wrap.b32 	%r5742, %r5738, %r5739, 3;
	shf.l.wrap.b32 	%r5743, %r5739, %r5738, 3;
	mov.b64 	%rd546, {%r5743, %r5742};
	shr.u64 	%rd547, %rd1195, 6;
	xor.b64  	%rd548, %rd546, %rd547;
	xor.b64  	%rd549, %rd548, %rd545;
	shr.u64 	%rd550, %rd1198, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5744,%dummy}, %rd1198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5745}, %rd1198;
	}
	shf.r.wrap.b32 	%r5746, %r5745, %r5744, 8;
	shf.r.wrap.b32 	%r5747, %r5744, %r5745, 8;
	mov.b64 	%rd551, {%r5747, %r5746};
	xor.b64  	%rd552, %rd551, %rd550;
	shf.r.wrap.b32 	%r5748, %r5745, %r5744, 1;
	shf.r.wrap.b32 	%r5749, %r5744, %r5745, 1;
	mov.b64 	%rd553, {%r5749, %r5748};
	xor.b64  	%rd554, %rd552, %rd553;
	add.s64 	%rd555, %rd554, %rd1197;
	add.s64 	%rd556, %rd555, %rd1183;
	add.s64 	%rd1197, %rd556, %rd549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5750,%dummy}, %rd1196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5751}, %rd1196;
	}
	shf.r.wrap.b32 	%r5752, %r5751, %r5750, 19;
	shf.r.wrap.b32 	%r5753, %r5750, %r5751, 19;
	mov.b64 	%rd557, {%r5753, %r5752};
	shf.l.wrap.b32 	%r5754, %r5750, %r5751, 3;
	shf.l.wrap.b32 	%r5755, %r5751, %r5750, 3;
	mov.b64 	%rd558, {%r5755, %r5754};
	shr.u64 	%rd559, %rd1196, 6;
	xor.b64  	%rd560, %rd558, %rd559;
	xor.b64  	%rd561, %rd560, %rd557;
	shr.u64 	%rd562, %rd1199, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5756,%dummy}, %rd1199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5757}, %rd1199;
	}
	shf.r.wrap.b32 	%r5758, %r5757, %r5756, 8;
	shf.r.wrap.b32 	%r5759, %r5756, %r5757, 8;
	mov.b64 	%rd563, {%r5759, %r5758};
	xor.b64  	%rd564, %rd563, %rd562;
	shf.r.wrap.b32 	%r5760, %r5757, %r5756, 1;
	shf.r.wrap.b32 	%r5761, %r5756, %r5757, 1;
	mov.b64 	%rd565, {%r5761, %r5760};
	xor.b64  	%rd566, %rd564, %rd565;
	add.s64 	%rd567, %rd566, %rd1198;
	add.s64 	%rd568, %rd567, %rd1182;
	add.s64 	%rd1198, %rd568, %rd561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5762,%dummy}, %rd1197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5763}, %rd1197;
	}
	shf.r.wrap.b32 	%r5764, %r5763, %r5762, 19;
	shf.r.wrap.b32 	%r5765, %r5762, %r5763, 19;
	mov.b64 	%rd569, {%r5765, %r5764};
	shf.l.wrap.b32 	%r5766, %r5762, %r5763, 3;
	shf.l.wrap.b32 	%r5767, %r5763, %r5762, 3;
	mov.b64 	%rd570, {%r5767, %r5766};
	shr.u64 	%rd571, %rd1197, 6;
	xor.b64  	%rd572, %rd570, %rd571;
	xor.b64  	%rd573, %rd572, %rd569;
	shr.u64 	%rd574, %rd1200, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5768,%dummy}, %rd1200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5769}, %rd1200;
	}
	shf.r.wrap.b32 	%r5770, %r5769, %r5768, 8;
	shf.r.wrap.b32 	%r5771, %r5768, %r5769, 8;
	mov.b64 	%rd575, {%r5771, %r5770};
	xor.b64  	%rd576, %rd575, %rd574;
	shf.r.wrap.b32 	%r5772, %r5769, %r5768, 1;
	shf.r.wrap.b32 	%r5773, %r5768, %r5769, 1;
	mov.b64 	%rd577, {%r5773, %r5772};
	xor.b64  	%rd578, %rd576, %rd577;
	add.s64 	%rd579, %rd578, %rd1199;
	add.s64 	%rd580, %rd579, %rd1181;
	add.s64 	%rd1199, %rd580, %rd573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5774,%dummy}, %rd1198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5775}, %rd1198;
	}
	shf.r.wrap.b32 	%r5776, %r5775, %r5774, 19;
	shf.r.wrap.b32 	%r5777, %r5774, %r5775, 19;
	mov.b64 	%rd581, {%r5777, %r5776};
	shf.l.wrap.b32 	%r5778, %r5774, %r5775, 3;
	shf.l.wrap.b32 	%r5779, %r5775, %r5774, 3;
	mov.b64 	%rd582, {%r5779, %r5778};
	shr.u64 	%rd583, %rd1198, 6;
	xor.b64  	%rd584, %rd582, %rd583;
	xor.b64  	%rd585, %rd584, %rd581;
	shr.u64 	%rd586, %rd1201, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5780,%dummy}, %rd1201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5781}, %rd1201;
	}
	shf.r.wrap.b32 	%r5782, %r5781, %r5780, 8;
	shf.r.wrap.b32 	%r5783, %r5780, %r5781, 8;
	mov.b64 	%rd587, {%r5783, %r5782};
	xor.b64  	%rd588, %rd587, %rd586;
	shf.r.wrap.b32 	%r5784, %r5781, %r5780, 1;
	shf.r.wrap.b32 	%r5785, %r5780, %r5781, 1;
	mov.b64 	%rd589, {%r5785, %r5784};
	xor.b64  	%rd590, %rd588, %rd589;
	add.s64 	%rd591, %rd590, %rd1200;
	add.s64 	%rd592, %rd591, %rd1180;
	add.s64 	%rd1200, %rd592, %rd585;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5786,%dummy}, %rd1199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5787}, %rd1199;
	}
	shf.r.wrap.b32 	%r5788, %r5787, %r5786, 19;
	shf.r.wrap.b32 	%r5789, %r5786, %r5787, 19;
	mov.b64 	%rd593, {%r5789, %r5788};
	shf.l.wrap.b32 	%r5790, %r5786, %r5787, 3;
	shf.l.wrap.b32 	%r5791, %r5787, %r5786, 3;
	mov.b64 	%rd594, {%r5791, %r5790};
	shr.u64 	%rd595, %rd1199, 6;
	xor.b64  	%rd596, %rd594, %rd595;
	xor.b64  	%rd597, %rd596, %rd593;
	shr.u64 	%rd598, %rd1202, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5792,%dummy}, %rd1202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5793}, %rd1202;
	}
	shf.r.wrap.b32 	%r5794, %r5793, %r5792, 8;
	shf.r.wrap.b32 	%r5795, %r5792, %r5793, 8;
	mov.b64 	%rd599, {%r5795, %r5794};
	xor.b64  	%rd600, %rd599, %rd598;
	shf.r.wrap.b32 	%r5796, %r5793, %r5792, 1;
	shf.r.wrap.b32 	%r5797, %r5792, %r5793, 1;
	mov.b64 	%rd601, {%r5797, %r5796};
	xor.b64  	%rd602, %rd600, %rd601;
	add.s64 	%rd603, %rd602, %rd1201;
	add.s64 	%rd604, %rd603, %rd1179;
	add.s64 	%rd1201, %rd604, %rd597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5798,%dummy}, %rd1200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5799}, %rd1200;
	}
	shf.r.wrap.b32 	%r5800, %r5799, %r5798, 19;
	shf.r.wrap.b32 	%r5801, %r5798, %r5799, 19;
	mov.b64 	%rd605, {%r5801, %r5800};
	shf.l.wrap.b32 	%r5802, %r5798, %r5799, 3;
	shf.l.wrap.b32 	%r5803, %r5799, %r5798, 3;
	mov.b64 	%rd606, {%r5803, %r5802};
	shr.u64 	%rd607, %rd1200, 6;
	xor.b64  	%rd608, %rd606, %rd607;
	xor.b64  	%rd609, %rd608, %rd605;
	shr.u64 	%rd610, %rd1186, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5804,%dummy}, %rd1186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5805}, %rd1186;
	}
	shf.r.wrap.b32 	%r5806, %r5805, %r5804, 8;
	shf.r.wrap.b32 	%r5807, %r5804, %r5805, 8;
	mov.b64 	%rd611, {%r5807, %r5806};
	xor.b64  	%rd612, %rd611, %rd610;
	shf.r.wrap.b32 	%r5808, %r5805, %r5804, 1;
	shf.r.wrap.b32 	%r5809, %r5804, %r5805, 1;
	mov.b64 	%rd613, {%r5809, %r5808};
	xor.b64  	%rd614, %rd612, %rd613;
	add.s64 	%rd615, %rd614, %rd1202;
	add.s64 	%rd616, %rd615, %rd1195;
	add.s64 	%rd1202, %rd616, %rd609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5810,%dummy}, %rd1201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5811}, %rd1201;
	}
	shf.r.wrap.b32 	%r5812, %r5811, %r5810, 19;
	shf.r.wrap.b32 	%r5813, %r5810, %r5811, 19;
	mov.b64 	%rd617, {%r5813, %r5812};
	shf.l.wrap.b32 	%r5814, %r5810, %r5811, 3;
	shf.l.wrap.b32 	%r5815, %r5811, %r5810, 3;
	mov.b64 	%rd618, {%r5815, %r5814};
	shr.u64 	%rd619, %rd1201, 6;
	xor.b64  	%rd620, %rd618, %rd619;
	xor.b64  	%rd621, %rd620, %rd617;
	shr.u64 	%rd622, %rd1185, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5816,%dummy}, %rd1185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5817}, %rd1185;
	}
	shf.r.wrap.b32 	%r5818, %r5817, %r5816, 8;
	shf.r.wrap.b32 	%r5819, %r5816, %r5817, 8;
	mov.b64 	%rd623, {%r5819, %r5818};
	xor.b64  	%rd624, %rd623, %rd622;
	shf.r.wrap.b32 	%r5820, %r5817, %r5816, 1;
	shf.r.wrap.b32 	%r5821, %r5816, %r5817, 1;
	mov.b64 	%rd625, {%r5821, %r5820};
	xor.b64  	%rd626, %rd624, %rd625;
	add.s64 	%rd627, %rd626, %rd1186;
	add.s64 	%rd628, %rd627, %rd1196;
	add.s64 	%rd1186, %rd628, %rd621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5822,%dummy}, %rd1202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5823}, %rd1202;
	}
	shf.r.wrap.b32 	%r5824, %r5823, %r5822, 19;
	shf.r.wrap.b32 	%r5825, %r5822, %r5823, 19;
	mov.b64 	%rd629, {%r5825, %r5824};
	shf.l.wrap.b32 	%r5826, %r5822, %r5823, 3;
	shf.l.wrap.b32 	%r5827, %r5823, %r5822, 3;
	mov.b64 	%rd630, {%r5827, %r5826};
	shr.u64 	%rd631, %rd1202, 6;
	xor.b64  	%rd632, %rd630, %rd631;
	xor.b64  	%rd633, %rd632, %rd629;
	shr.u64 	%rd634, %rd1184, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5828,%dummy}, %rd1184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5829}, %rd1184;
	}
	shf.r.wrap.b32 	%r5830, %r5829, %r5828, 8;
	shf.r.wrap.b32 	%r5831, %r5828, %r5829, 8;
	mov.b64 	%rd635, {%r5831, %r5830};
	xor.b64  	%rd636, %rd635, %rd634;
	shf.r.wrap.b32 	%r5832, %r5829, %r5828, 1;
	shf.r.wrap.b32 	%r5833, %r5828, %r5829, 1;
	mov.b64 	%rd637, {%r5833, %r5832};
	xor.b64  	%rd638, %rd636, %rd637;
	add.s64 	%rd639, %rd638, %rd1185;
	add.s64 	%rd640, %rd639, %rd1197;
	add.s64 	%rd1185, %rd640, %rd633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5834,%dummy}, %rd1186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5835}, %rd1186;
	}
	shf.r.wrap.b32 	%r5836, %r5835, %r5834, 19;
	shf.r.wrap.b32 	%r5837, %r5834, %r5835, 19;
	mov.b64 	%rd641, {%r5837, %r5836};
	shf.l.wrap.b32 	%r5838, %r5834, %r5835, 3;
	shf.l.wrap.b32 	%r5839, %r5835, %r5834, 3;
	mov.b64 	%rd642, {%r5839, %r5838};
	shr.u64 	%rd643, %rd1186, 6;
	xor.b64  	%rd644, %rd642, %rd643;
	xor.b64  	%rd645, %rd644, %rd641;
	shr.u64 	%rd646, %rd1183, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5840,%dummy}, %rd1183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5841}, %rd1183;
	}
	shf.r.wrap.b32 	%r5842, %r5841, %r5840, 8;
	shf.r.wrap.b32 	%r5843, %r5840, %r5841, 8;
	mov.b64 	%rd647, {%r5843, %r5842};
	xor.b64  	%rd648, %rd647, %rd646;
	shf.r.wrap.b32 	%r5844, %r5841, %r5840, 1;
	shf.r.wrap.b32 	%r5845, %r5840, %r5841, 1;
	mov.b64 	%rd649, {%r5845, %r5844};
	xor.b64  	%rd650, %rd648, %rd649;
	add.s64 	%rd651, %rd650, %rd1184;
	add.s64 	%rd652, %rd651, %rd1198;
	add.s64 	%rd1184, %rd652, %rd645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5846,%dummy}, %rd1185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5847}, %rd1185;
	}
	shf.r.wrap.b32 	%r5848, %r5847, %r5846, 19;
	shf.r.wrap.b32 	%r5849, %r5846, %r5847, 19;
	mov.b64 	%rd653, {%r5849, %r5848};
	shf.l.wrap.b32 	%r5850, %r5846, %r5847, 3;
	shf.l.wrap.b32 	%r5851, %r5847, %r5846, 3;
	mov.b64 	%rd654, {%r5851, %r5850};
	shr.u64 	%rd655, %rd1185, 6;
	xor.b64  	%rd656, %rd654, %rd655;
	xor.b64  	%rd657, %rd656, %rd653;
	shr.u64 	%rd658, %rd1182, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5852,%dummy}, %rd1182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5853}, %rd1182;
	}
	shf.r.wrap.b32 	%r5854, %r5853, %r5852, 8;
	shf.r.wrap.b32 	%r5855, %r5852, %r5853, 8;
	mov.b64 	%rd659, {%r5855, %r5854};
	xor.b64  	%rd660, %rd659, %rd658;
	shf.r.wrap.b32 	%r5856, %r5853, %r5852, 1;
	shf.r.wrap.b32 	%r5857, %r5852, %r5853, 1;
	mov.b64 	%rd661, {%r5857, %r5856};
	xor.b64  	%rd662, %rd660, %rd661;
	add.s64 	%rd663, %rd662, %rd1183;
	add.s64 	%rd664, %rd663, %rd1199;
	add.s64 	%rd1183, %rd664, %rd657;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5858,%dummy}, %rd1184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5859}, %rd1184;
	}
	shf.r.wrap.b32 	%r5860, %r5859, %r5858, 19;
	shf.r.wrap.b32 	%r5861, %r5858, %r5859, 19;
	mov.b64 	%rd665, {%r5861, %r5860};
	shf.l.wrap.b32 	%r5862, %r5858, %r5859, 3;
	shf.l.wrap.b32 	%r5863, %r5859, %r5858, 3;
	mov.b64 	%rd666, {%r5863, %r5862};
	shr.u64 	%rd667, %rd1184, 6;
	xor.b64  	%rd668, %rd666, %rd667;
	xor.b64  	%rd669, %rd668, %rd665;
	shr.u64 	%rd670, %rd1181, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5864,%dummy}, %rd1181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5865}, %rd1181;
	}
	shf.r.wrap.b32 	%r5866, %r5865, %r5864, 8;
	shf.r.wrap.b32 	%r5867, %r5864, %r5865, 8;
	mov.b64 	%rd671, {%r5867, %r5866};
	xor.b64  	%rd672, %rd671, %rd670;
	shf.r.wrap.b32 	%r5868, %r5865, %r5864, 1;
	shf.r.wrap.b32 	%r5869, %r5864, %r5865, 1;
	mov.b64 	%rd673, {%r5869, %r5868};
	xor.b64  	%rd674, %rd672, %rd673;
	add.s64 	%rd675, %rd674, %rd1182;
	add.s64 	%rd676, %rd675, %rd1200;
	add.s64 	%rd1182, %rd676, %rd669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5870,%dummy}, %rd1183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5871}, %rd1183;
	}
	shf.r.wrap.b32 	%r5872, %r5871, %r5870, 19;
	shf.r.wrap.b32 	%r5873, %r5870, %r5871, 19;
	mov.b64 	%rd677, {%r5873, %r5872};
	shf.l.wrap.b32 	%r5874, %r5870, %r5871, 3;
	shf.l.wrap.b32 	%r5875, %r5871, %r5870, 3;
	mov.b64 	%rd678, {%r5875, %r5874};
	shr.u64 	%rd679, %rd1183, 6;
	xor.b64  	%rd680, %rd678, %rd679;
	xor.b64  	%rd681, %rd680, %rd677;
	shr.u64 	%rd682, %rd1180, 7;
	shf.r.wrap.b32 	%r5876, %r5714, %r5715, 8;
	shf.r.wrap.b32 	%r5877, %r5715, %r5714, 8;
	mov.b64 	%rd683, {%r5877, %r5876};
	xor.b64  	%rd684, %rd683, %rd682;
	shf.r.wrap.b32 	%r5878, %r5714, %r5715, 1;
	shf.r.wrap.b32 	%r5879, %r5715, %r5714, 1;
	mov.b64 	%rd685, {%r5879, %r5878};
	xor.b64  	%rd686, %rd684, %rd685;
	add.s64 	%rd687, %rd686, %rd1181;
	add.s64 	%rd688, %rd687, %rd1201;
	add.s64 	%rd1181, %rd688, %rd681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5880,%dummy}, %rd1182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5881}, %rd1182;
	}
	shf.r.wrap.b32 	%r5882, %r5881, %r5880, 19;
	shf.r.wrap.b32 	%r5883, %r5880, %r5881, 19;
	mov.b64 	%rd689, {%r5883, %r5882};
	shf.l.wrap.b32 	%r5884, %r5880, %r5881, 3;
	shf.l.wrap.b32 	%r5885, %r5881, %r5880, 3;
	mov.b64 	%rd690, {%r5885, %r5884};
	shr.u64 	%rd691, %rd1182, 6;
	xor.b64  	%rd692, %rd690, %rd691;
	xor.b64  	%rd693, %rd692, %rd689;
	shr.u64 	%rd694, %rd1179, 7;
	shf.r.wrap.b32 	%r5886, %r5726, %r5727, 8;
	shf.r.wrap.b32 	%r5887, %r5727, %r5726, 8;
	mov.b64 	%rd695, {%r5887, %r5886};
	xor.b64  	%rd696, %rd695, %rd694;
	shf.r.wrap.b32 	%r5888, %r5726, %r5727, 1;
	shf.r.wrap.b32 	%r5889, %r5727, %r5726, 1;
	mov.b64 	%rd697, {%r5889, %r5888};
	xor.b64  	%rd698, %rd696, %rd697;
	add.s64 	%rd699, %rd698, %rd1180;
	add.s64 	%rd700, %rd699, %rd1202;
	add.s64 	%rd1180, %rd700, %rd693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5890,%dummy}, %rd1181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5891}, %rd1181;
	}
	shf.r.wrap.b32 	%r5892, %r5891, %r5890, 19;
	shf.r.wrap.b32 	%r5893, %r5890, %r5891, 19;
	mov.b64 	%rd701, {%r5893, %r5892};
	shf.l.wrap.b32 	%r5894, %r5890, %r5891, 3;
	shf.l.wrap.b32 	%r5895, %r5891, %r5890, 3;
	mov.b64 	%rd702, {%r5895, %r5894};
	shr.u64 	%rd703, %rd1181, 6;
	xor.b64  	%rd704, %rd702, %rd703;
	xor.b64  	%rd705, %rd704, %rd701;
	shf.r.wrap.b32 	%r5896, %r5739, %r5738, 1;
	shf.r.wrap.b32 	%r5897, %r5738, %r5739, 1;
	mov.b64 	%rd706, {%r5897, %r5896};
	shf.r.wrap.b32 	%r5898, %r5739, %r5738, 8;
	shf.r.wrap.b32 	%r5899, %r5738, %r5739, 8;
	mov.b64 	%rd707, {%r5899, %r5898};
	shr.u64 	%rd708, %rd1195, 7;
	xor.b64  	%rd709, %rd707, %rd708;
	xor.b64  	%rd710, %rd709, %rd706;
	add.s64 	%rd711, %rd710, %rd1179;
	add.s64 	%rd712, %rd711, %rd1186;
	add.s64 	%rd1179, %rd712, %rd705;
	mul.wide.s32 	%rd713, %r8474, 8;
	mov.u64 	%rd714, k_sha512;
	add.s64 	%rd715, %rd714, %rd713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5900,%dummy}, %rd1191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5901}, %rd1191;
	}
	shf.r.wrap.b32 	%r5902, %r5901, %r5900, 18;
	shf.r.wrap.b32 	%r5903, %r5900, %r5901, 18;
	mov.b64 	%rd716, {%r5903, %r5902};
	shf.r.wrap.b32 	%r5904, %r5901, %r5900, 14;
	shf.r.wrap.b32 	%r5905, %r5900, %r5901, 14;
	mov.b64 	%rd717, {%r5905, %r5904};
	xor.b64  	%rd718, %rd717, %rd716;
	shf.l.wrap.b32 	%r5906, %r5900, %r5901, 23;
	shf.l.wrap.b32 	%r5907, %r5901, %r5900, 23;
	mov.b64 	%rd719, {%r5907, %r5906};
	xor.b64  	%rd720, %rd718, %rd719;
	xor.b64  	%rd721, %rd1192, %rd1193;
	and.b64  	%rd722, %rd1191, %rd721;
	xor.b64  	%rd723, %rd722, %rd1193;
	add.s64 	%rd724, %rd723, %rd1194;
	add.s64 	%rd725, %rd724, %rd720;
	add.s64 	%rd726, %rd725, %rd1195;
	ld.const.u64 	%rd727, [%rd715];
	add.s64 	%rd728, %rd726, %rd727;
	add.s64 	%rd729, %rd728, %rd1190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5908}, %rd1187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5909,%dummy}, %rd1187;
	}
	shf.l.wrap.b32 	%r5910, %r5909, %r5908, 30;
	shf.l.wrap.b32 	%r5911, %r5908, %r5909, 30;
	mov.b64 	%rd730, {%r5911, %r5910};
	shf.r.wrap.b32 	%r5912, %r5908, %r5909, 28;
	shf.r.wrap.b32 	%r5913, %r5909, %r5908, 28;
	mov.b64 	%rd731, {%r5913, %r5912};
	xor.b64  	%rd732, %rd731, %rd730;
	shf.l.wrap.b32 	%r5914, %r5909, %r5908, 25;
	shf.l.wrap.b32 	%r5915, %r5908, %r5909, 25;
	mov.b64 	%rd733, {%r5915, %r5914};
	xor.b64  	%rd734, %rd732, %rd733;
	xor.b64  	%rd735, %rd1187, %rd1188;
	and.b64  	%rd736, %rd735, %rd1189;
	and.b64  	%rd737, %rd1187, %rd1188;
	or.b64  	%rd738, %rd736, %rd737;
	add.s64 	%rd739, %rd734, %rd738;
	add.s64 	%rd740, %rd739, %rd728;
	add.s32 	%r5916, %r8474, 1;
	mul.wide.s32 	%rd741, %r5916, 8;
	add.s64 	%rd742, %rd714, %rd741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5917,%dummy}, %rd729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5918}, %rd729;
	}
	shf.r.wrap.b32 	%r5919, %r5918, %r5917, 14;
	shf.r.wrap.b32 	%r5920, %r5917, %r5918, 14;
	mov.b64 	%rd743, {%r5920, %r5919};
	shf.r.wrap.b32 	%r5921, %r5918, %r5917, 18;
	shf.r.wrap.b32 	%r5922, %r5917, %r5918, 18;
	mov.b64 	%rd744, {%r5922, %r5921};
	xor.b64  	%rd745, %rd743, %rd744;
	shf.l.wrap.b32 	%r5923, %r5917, %r5918, 23;
	shf.l.wrap.b32 	%r5924, %r5918, %r5917, 23;
	mov.b64 	%rd746, {%r5924, %r5923};
	xor.b64  	%rd747, %rd745, %rd746;
	xor.b64  	%rd748, %rd1191, %rd1192;
	and.b64  	%rd749, %rd729, %rd748;
	xor.b64  	%rd750, %rd749, %rd1192;
	add.s64 	%rd751, %rd1196, %rd1193;
	ld.const.u64 	%rd752, [%rd742];
	add.s64 	%rd753, %rd751, %rd752;
	add.s64 	%rd754, %rd753, %rd750;
	add.s64 	%rd755, %rd754, %rd747;
	add.s64 	%rd756, %rd755, %rd1189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5925,%dummy}, %rd740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5926}, %rd740;
	}
	shf.r.wrap.b32 	%r5927, %r5926, %r5925, 28;
	shf.r.wrap.b32 	%r5928, %r5925, %r5926, 28;
	mov.b64 	%rd757, {%r5928, %r5927};
	shf.l.wrap.b32 	%r5929, %r5925, %r5926, 30;
	shf.l.wrap.b32 	%r5930, %r5926, %r5925, 30;
	mov.b64 	%rd758, {%r5930, %r5929};
	xor.b64  	%rd759, %rd757, %rd758;
	shf.l.wrap.b32 	%r5931, %r5925, %r5926, 25;
	shf.l.wrap.b32 	%r5932, %r5926, %r5925, 25;
	mov.b64 	%rd760, {%r5932, %r5931};
	xor.b64  	%rd761, %rd759, %rd760;
	and.b64  	%rd762, %rd740, %rd1187;
	xor.b64  	%rd763, %rd740, %rd1187;
	and.b64  	%rd764, %rd763, %rd1188;
	or.b64  	%rd765, %rd764, %rd762;
	add.s64 	%rd766, %rd761, %rd765;
	add.s64 	%rd767, %rd766, %rd755;
	add.s32 	%r5933, %r8474, 2;
	mul.wide.s32 	%rd768, %r5933, 8;
	add.s64 	%rd769, %rd714, %rd768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5934,%dummy}, %rd756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5935}, %rd756;
	}
	shf.r.wrap.b32 	%r5936, %r5935, %r5934, 14;
	shf.r.wrap.b32 	%r5937, %r5934, %r5935, 14;
	mov.b64 	%rd770, {%r5937, %r5936};
	shf.r.wrap.b32 	%r5938, %r5935, %r5934, 18;
	shf.r.wrap.b32 	%r5939, %r5934, %r5935, 18;
	mov.b64 	%rd771, {%r5939, %r5938};
	xor.b64  	%rd772, %rd770, %rd771;
	shf.l.wrap.b32 	%r5940, %r5934, %r5935, 23;
	shf.l.wrap.b32 	%r5941, %r5935, %r5934, 23;
	mov.b64 	%rd773, {%r5941, %r5940};
	xor.b64  	%rd774, %rd772, %rd773;
	xor.b64  	%rd775, %rd729, %rd1191;
	and.b64  	%rd776, %rd756, %rd775;
	xor.b64  	%rd777, %rd776, %rd1191;
	add.s64 	%rd778, %rd1197, %rd1192;
	ld.const.u64 	%rd779, [%rd769];
	add.s64 	%rd780, %rd778, %rd779;
	add.s64 	%rd781, %rd780, %rd777;
	add.s64 	%rd782, %rd781, %rd774;
	add.s64 	%rd783, %rd782, %rd1188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5942,%dummy}, %rd767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5943}, %rd767;
	}
	shf.r.wrap.b32 	%r5944, %r5943, %r5942, 28;
	shf.r.wrap.b32 	%r5945, %r5942, %r5943, 28;
	mov.b64 	%rd784, {%r5945, %r5944};
	shf.l.wrap.b32 	%r5946, %r5942, %r5943, 30;
	shf.l.wrap.b32 	%r5947, %r5943, %r5942, 30;
	mov.b64 	%rd785, {%r5947, %r5946};
	xor.b64  	%rd786, %rd784, %rd785;
	shf.l.wrap.b32 	%r5948, %r5942, %r5943, 25;
	shf.l.wrap.b32 	%r5949, %r5943, %r5942, 25;
	mov.b64 	%rd787, {%r5949, %r5948};
	xor.b64  	%rd788, %rd786, %rd787;
	and.b64  	%rd789, %rd767, %rd740;
	xor.b64  	%rd790, %rd767, %rd740;
	and.b64  	%rd791, %rd790, %rd1187;
	or.b64  	%rd792, %rd791, %rd789;
	add.s64 	%rd793, %rd788, %rd792;
	add.s64 	%rd794, %rd793, %rd782;
	add.s32 	%r5950, %r8474, 3;
	mul.wide.s32 	%rd795, %r5950, 8;
	add.s64 	%rd796, %rd714, %rd795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5951,%dummy}, %rd783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5952}, %rd783;
	}
	shf.r.wrap.b32 	%r5953, %r5952, %r5951, 14;
	shf.r.wrap.b32 	%r5954, %r5951, %r5952, 14;
	mov.b64 	%rd797, {%r5954, %r5953};
	shf.r.wrap.b32 	%r5955, %r5952, %r5951, 18;
	shf.r.wrap.b32 	%r5956, %r5951, %r5952, 18;
	mov.b64 	%rd798, {%r5956, %r5955};
	xor.b64  	%rd799, %rd797, %rd798;
	shf.l.wrap.b32 	%r5957, %r5951, %r5952, 23;
	shf.l.wrap.b32 	%r5958, %r5952, %r5951, 23;
	mov.b64 	%rd800, {%r5958, %r5957};
	xor.b64  	%rd801, %rd799, %rd800;
	xor.b64  	%rd802, %rd756, %rd729;
	and.b64  	%rd803, %rd783, %rd802;
	xor.b64  	%rd804, %rd803, %rd729;
	add.s64 	%rd805, %rd1198, %rd1191;
	ld.const.u64 	%rd806, [%rd796];
	add.s64 	%rd807, %rd805, %rd806;
	add.s64 	%rd808, %rd807, %rd804;
	add.s64 	%rd809, %rd808, %rd801;
	add.s64 	%rd810, %rd809, %rd1187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5959,%dummy}, %rd794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5960}, %rd794;
	}
	shf.r.wrap.b32 	%r5961, %r5960, %r5959, 28;
	shf.r.wrap.b32 	%r5962, %r5959, %r5960, 28;
	mov.b64 	%rd811, {%r5962, %r5961};
	shf.l.wrap.b32 	%r5963, %r5959, %r5960, 30;
	shf.l.wrap.b32 	%r5964, %r5960, %r5959, 30;
	mov.b64 	%rd812, {%r5964, %r5963};
	xor.b64  	%rd813, %rd811, %rd812;
	shf.l.wrap.b32 	%r5965, %r5959, %r5960, 25;
	shf.l.wrap.b32 	%r5966, %r5960, %r5959, 25;
	mov.b64 	%rd814, {%r5966, %r5965};
	xor.b64  	%rd815, %rd813, %rd814;
	and.b64  	%rd816, %rd794, %rd767;
	xor.b64  	%rd817, %rd794, %rd767;
	and.b64  	%rd818, %rd817, %rd740;
	or.b64  	%rd819, %rd818, %rd816;
	add.s64 	%rd820, %rd815, %rd819;
	add.s64 	%rd821, %rd820, %rd809;
	add.s32 	%r5967, %r8474, 4;
	mul.wide.s32 	%rd822, %r5967, 8;
	add.s64 	%rd823, %rd714, %rd822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5968,%dummy}, %rd810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5969}, %rd810;
	}
	shf.r.wrap.b32 	%r5970, %r5969, %r5968, 14;
	shf.r.wrap.b32 	%r5971, %r5968, %r5969, 14;
	mov.b64 	%rd824, {%r5971, %r5970};
	shf.r.wrap.b32 	%r5972, %r5969, %r5968, 18;
	shf.r.wrap.b32 	%r5973, %r5968, %r5969, 18;
	mov.b64 	%rd825, {%r5973, %r5972};
	xor.b64  	%rd826, %rd824, %rd825;
	shf.l.wrap.b32 	%r5974, %r5968, %r5969, 23;
	shf.l.wrap.b32 	%r5975, %r5969, %r5968, 23;
	mov.b64 	%rd827, {%r5975, %r5974};
	xor.b64  	%rd828, %rd826, %rd827;
	xor.b64  	%rd829, %rd783, %rd756;
	and.b64  	%rd830, %rd810, %rd829;
	xor.b64  	%rd831, %rd830, %rd756;
	add.s64 	%rd832, %rd729, %rd1199;
	ld.const.u64 	%rd833, [%rd823];
	add.s64 	%rd834, %rd832, %rd833;
	add.s64 	%rd835, %rd834, %rd831;
	add.s64 	%rd836, %rd835, %rd828;
	add.s64 	%rd837, %rd836, %rd740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5976,%dummy}, %rd821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5977}, %rd821;
	}
	shf.r.wrap.b32 	%r5978, %r5977, %r5976, 28;
	shf.r.wrap.b32 	%r5979, %r5976, %r5977, 28;
	mov.b64 	%rd838, {%r5979, %r5978};
	shf.l.wrap.b32 	%r5980, %r5976, %r5977, 30;
	shf.l.wrap.b32 	%r5981, %r5977, %r5976, 30;
	mov.b64 	%rd839, {%r5981, %r5980};
	xor.b64  	%rd840, %rd838, %rd839;
	shf.l.wrap.b32 	%r5982, %r5976, %r5977, 25;
	shf.l.wrap.b32 	%r5983, %r5977, %r5976, 25;
	mov.b64 	%rd841, {%r5983, %r5982};
	xor.b64  	%rd842, %rd840, %rd841;
	and.b64  	%rd843, %rd821, %rd794;
	xor.b64  	%rd844, %rd821, %rd794;
	and.b64  	%rd845, %rd844, %rd767;
	or.b64  	%rd846, %rd845, %rd843;
	add.s64 	%rd847, %rd842, %rd846;
	add.s64 	%rd848, %rd847, %rd836;
	add.s32 	%r5984, %r8474, 5;
	mul.wide.s32 	%rd849, %r5984, 8;
	add.s64 	%rd850, %rd714, %rd849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5985,%dummy}, %rd837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5986}, %rd837;
	}
	shf.r.wrap.b32 	%r5987, %r5986, %r5985, 14;
	shf.r.wrap.b32 	%r5988, %r5985, %r5986, 14;
	mov.b64 	%rd851, {%r5988, %r5987};
	shf.r.wrap.b32 	%r5989, %r5986, %r5985, 18;
	shf.r.wrap.b32 	%r5990, %r5985, %r5986, 18;
	mov.b64 	%rd852, {%r5990, %r5989};
	xor.b64  	%rd853, %rd851, %rd852;
	shf.l.wrap.b32 	%r5991, %r5985, %r5986, 23;
	shf.l.wrap.b32 	%r5992, %r5986, %r5985, 23;
	mov.b64 	%rd854, {%r5992, %r5991};
	xor.b64  	%rd855, %rd853, %rd854;
	xor.b64  	%rd856, %rd810, %rd783;
	and.b64  	%rd857, %rd837, %rd856;
	xor.b64  	%rd858, %rd857, %rd783;
	ld.const.u64 	%rd859, [%rd850];
	add.s64 	%rd860, %rd859, %rd1200;
	add.s64 	%rd861, %rd860, %rd756;
	add.s64 	%rd862, %rd861, %rd858;
	add.s64 	%rd863, %rd862, %rd855;
	add.s64 	%rd864, %rd863, %rd767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5993,%dummy}, %rd848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5994}, %rd848;
	}
	shf.r.wrap.b32 	%r5995, %r5994, %r5993, 28;
	shf.r.wrap.b32 	%r5996, %r5993, %r5994, 28;
	mov.b64 	%rd865, {%r5996, %r5995};
	shf.l.wrap.b32 	%r5997, %r5993, %r5994, 30;
	shf.l.wrap.b32 	%r5998, %r5994, %r5993, 30;
	mov.b64 	%rd866, {%r5998, %r5997};
	xor.b64  	%rd867, %rd865, %rd866;
	shf.l.wrap.b32 	%r5999, %r5993, %r5994, 25;
	shf.l.wrap.b32 	%r6000, %r5994, %r5993, 25;
	mov.b64 	%rd868, {%r6000, %r5999};
	xor.b64  	%rd869, %rd867, %rd868;
	and.b64  	%rd870, %rd848, %rd821;
	xor.b64  	%rd871, %rd848, %rd821;
	and.b64  	%rd872, %rd871, %rd794;
	or.b64  	%rd873, %rd872, %rd870;
	add.s64 	%rd874, %rd869, %rd873;
	add.s64 	%rd875, %rd874, %rd863;
	add.s32 	%r6001, %r8474, 6;
	mul.wide.s32 	%rd876, %r6001, 8;
	add.s64 	%rd877, %rd714, %rd876;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6002,%dummy}, %rd864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6003}, %rd864;
	}
	shf.r.wrap.b32 	%r6004, %r6003, %r6002, 14;
	shf.r.wrap.b32 	%r6005, %r6002, %r6003, 14;
	mov.b64 	%rd878, {%r6005, %r6004};
	shf.r.wrap.b32 	%r6006, %r6003, %r6002, 18;
	shf.r.wrap.b32 	%r6007, %r6002, %r6003, 18;
	mov.b64 	%rd879, {%r6007, %r6006};
	xor.b64  	%rd880, %rd878, %rd879;
	shf.l.wrap.b32 	%r6008, %r6002, %r6003, 23;
	shf.l.wrap.b32 	%r6009, %r6003, %r6002, 23;
	mov.b64 	%rd881, {%r6009, %r6008};
	xor.b64  	%rd882, %rd880, %rd881;
	xor.b64  	%rd883, %rd837, %rd810;
	and.b64  	%rd884, %rd864, %rd883;
	xor.b64  	%rd885, %rd884, %rd810;
	ld.const.u64 	%rd886, [%rd877];
	add.s64 	%rd887, %rd886, %rd1201;
	add.s64 	%rd888, %rd887, %rd783;
	add.s64 	%rd889, %rd888, %rd885;
	add.s64 	%rd890, %rd889, %rd882;
	add.s64 	%rd891, %rd890, %rd794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6010,%dummy}, %rd875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6011}, %rd875;
	}
	shf.r.wrap.b32 	%r6012, %r6011, %r6010, 28;
	shf.r.wrap.b32 	%r6013, %r6010, %r6011, 28;
	mov.b64 	%rd892, {%r6013, %r6012};
	shf.l.wrap.b32 	%r6014, %r6010, %r6011, 30;
	shf.l.wrap.b32 	%r6015, %r6011, %r6010, 30;
	mov.b64 	%rd893, {%r6015, %r6014};
	xor.b64  	%rd894, %rd892, %rd893;
	shf.l.wrap.b32 	%r6016, %r6010, %r6011, 25;
	shf.l.wrap.b32 	%r6017, %r6011, %r6010, 25;
	mov.b64 	%rd895, {%r6017, %r6016};
	xor.b64  	%rd896, %rd894, %rd895;
	and.b64  	%rd897, %rd875, %rd848;
	xor.b64  	%rd898, %rd875, %rd848;
	and.b64  	%rd899, %rd898, %rd821;
	or.b64  	%rd900, %rd899, %rd897;
	add.s64 	%rd901, %rd896, %rd900;
	add.s64 	%rd902, %rd901, %rd890;
	add.s32 	%r6018, %r8474, 7;
	mul.wide.s32 	%rd903, %r6018, 8;
	add.s64 	%rd904, %rd714, %rd903;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6019,%dummy}, %rd891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6020}, %rd891;
	}
	shf.r.wrap.b32 	%r6021, %r6020, %r6019, 14;
	shf.r.wrap.b32 	%r6022, %r6019, %r6020, 14;
	mov.b64 	%rd905, {%r6022, %r6021};
	shf.r.wrap.b32 	%r6023, %r6020, %r6019, 18;
	shf.r.wrap.b32 	%r6024, %r6019, %r6020, 18;
	mov.b64 	%rd906, {%r6024, %r6023};
	xor.b64  	%rd907, %rd905, %rd906;
	shf.l.wrap.b32 	%r6025, %r6019, %r6020, 23;
	shf.l.wrap.b32 	%r6026, %r6020, %r6019, 23;
	mov.b64 	%rd908, {%r6026, %r6025};
	xor.b64  	%rd909, %rd907, %rd908;
	xor.b64  	%rd910, %rd864, %rd837;
	and.b64  	%rd911, %rd891, %rd910;
	xor.b64  	%rd912, %rd911, %rd837;
	ld.const.u64 	%rd913, [%rd904];
	add.s64 	%rd914, %rd913, %rd1202;
	add.s64 	%rd915, %rd914, %rd810;
	add.s64 	%rd916, %rd915, %rd912;
	add.s64 	%rd917, %rd916, %rd909;
	add.s64 	%rd918, %rd917, %rd821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6027,%dummy}, %rd902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6028}, %rd902;
	}
	shf.r.wrap.b32 	%r6029, %r6028, %r6027, 28;
	shf.r.wrap.b32 	%r6030, %r6027, %r6028, 28;
	mov.b64 	%rd919, {%r6030, %r6029};
	shf.l.wrap.b32 	%r6031, %r6027, %r6028, 30;
	shf.l.wrap.b32 	%r6032, %r6028, %r6027, 30;
	mov.b64 	%rd920, {%r6032, %r6031};
	xor.b64  	%rd921, %rd919, %rd920;
	shf.l.wrap.b32 	%r6033, %r6027, %r6028, 25;
	shf.l.wrap.b32 	%r6034, %r6028, %r6027, 25;
	mov.b64 	%rd922, {%r6034, %r6033};
	xor.b64  	%rd923, %rd921, %rd922;
	and.b64  	%rd924, %rd902, %rd875;
	xor.b64  	%rd925, %rd902, %rd875;
	and.b64  	%rd926, %rd925, %rd848;
	or.b64  	%rd927, %rd926, %rd924;
	add.s64 	%rd928, %rd923, %rd927;
	add.s64 	%rd929, %rd928, %rd917;
	add.s32 	%r6035, %r8474, 8;
	mul.wide.s32 	%rd930, %r6035, 8;
	add.s64 	%rd931, %rd714, %rd930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6036,%dummy}, %rd918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6037}, %rd918;
	}
	shf.r.wrap.b32 	%r6038, %r6037, %r6036, 14;
	shf.r.wrap.b32 	%r6039, %r6036, %r6037, 14;
	mov.b64 	%rd932, {%r6039, %r6038};
	shf.r.wrap.b32 	%r6040, %r6037, %r6036, 18;
	shf.r.wrap.b32 	%r6041, %r6036, %r6037, 18;
	mov.b64 	%rd933, {%r6041, %r6040};
	xor.b64  	%rd934, %rd932, %rd933;
	shf.l.wrap.b32 	%r6042, %r6036, %r6037, 23;
	shf.l.wrap.b32 	%r6043, %r6037, %r6036, 23;
	mov.b64 	%rd935, {%r6043, %r6042};
	xor.b64  	%rd936, %rd934, %rd935;
	xor.b64  	%rd937, %rd891, %rd864;
	and.b64  	%rd938, %rd918, %rd937;
	xor.b64  	%rd939, %rd938, %rd864;
	ld.const.u64 	%rd940, [%rd931];
	add.s64 	%rd941, %rd940, %rd1186;
	add.s64 	%rd942, %rd941, %rd837;
	add.s64 	%rd943, %rd942, %rd939;
	add.s64 	%rd944, %rd943, %rd936;
	add.s64 	%rd945, %rd944, %rd848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6044,%dummy}, %rd929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6045}, %rd929;
	}
	shf.r.wrap.b32 	%r6046, %r6045, %r6044, 28;
	shf.r.wrap.b32 	%r6047, %r6044, %r6045, 28;
	mov.b64 	%rd946, {%r6047, %r6046};
	shf.l.wrap.b32 	%r6048, %r6044, %r6045, 30;
	shf.l.wrap.b32 	%r6049, %r6045, %r6044, 30;
	mov.b64 	%rd947, {%r6049, %r6048};
	xor.b64  	%rd948, %rd946, %rd947;
	shf.l.wrap.b32 	%r6050, %r6044, %r6045, 25;
	shf.l.wrap.b32 	%r6051, %r6045, %r6044, 25;
	mov.b64 	%rd949, {%r6051, %r6050};
	xor.b64  	%rd950, %rd948, %rd949;
	and.b64  	%rd951, %rd929, %rd902;
	xor.b64  	%rd952, %rd929, %rd902;
	and.b64  	%rd953, %rd952, %rd875;
	or.b64  	%rd954, %rd953, %rd951;
	add.s64 	%rd955, %rd950, %rd954;
	add.s64 	%rd956, %rd955, %rd944;
	add.s32 	%r6052, %r8474, 9;
	mul.wide.s32 	%rd957, %r6052, 8;
	add.s64 	%rd958, %rd714, %rd957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6053,%dummy}, %rd945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6054}, %rd945;
	}
	shf.r.wrap.b32 	%r6055, %r6054, %r6053, 14;
	shf.r.wrap.b32 	%r6056, %r6053, %r6054, 14;
	mov.b64 	%rd959, {%r6056, %r6055};
	shf.r.wrap.b32 	%r6057, %r6054, %r6053, 18;
	shf.r.wrap.b32 	%r6058, %r6053, %r6054, 18;
	mov.b64 	%rd960, {%r6058, %r6057};
	xor.b64  	%rd961, %rd959, %rd960;
	shf.l.wrap.b32 	%r6059, %r6053, %r6054, 23;
	shf.l.wrap.b32 	%r6060, %r6054, %r6053, 23;
	mov.b64 	%rd962, {%r6060, %r6059};
	xor.b64  	%rd963, %rd961, %rd962;
	xor.b64  	%rd964, %rd918, %rd891;
	and.b64  	%rd965, %rd945, %rd964;
	xor.b64  	%rd966, %rd965, %rd891;
	ld.const.u64 	%rd967, [%rd958];
	add.s64 	%rd968, %rd967, %rd1185;
	add.s64 	%rd969, %rd968, %rd864;
	add.s64 	%rd970, %rd969, %rd966;
	add.s64 	%rd971, %rd970, %rd963;
	add.s64 	%rd972, %rd971, %rd875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6061,%dummy}, %rd956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6062}, %rd956;
	}
	shf.r.wrap.b32 	%r6063, %r6062, %r6061, 28;
	shf.r.wrap.b32 	%r6064, %r6061, %r6062, 28;
	mov.b64 	%rd973, {%r6064, %r6063};
	shf.l.wrap.b32 	%r6065, %r6061, %r6062, 30;
	shf.l.wrap.b32 	%r6066, %r6062, %r6061, 30;
	mov.b64 	%rd974, {%r6066, %r6065};
	xor.b64  	%rd975, %rd973, %rd974;
	shf.l.wrap.b32 	%r6067, %r6061, %r6062, 25;
	shf.l.wrap.b32 	%r6068, %r6062, %r6061, 25;
	mov.b64 	%rd976, {%r6068, %r6067};
	xor.b64  	%rd977, %rd975, %rd976;
	and.b64  	%rd978, %rd956, %rd929;
	xor.b64  	%rd979, %rd956, %rd929;
	and.b64  	%rd980, %rd979, %rd902;
	or.b64  	%rd981, %rd980, %rd978;
	add.s64 	%rd982, %rd977, %rd981;
	add.s64 	%rd983, %rd982, %rd971;
	add.s32 	%r6069, %r8474, 10;
	mul.wide.s32 	%rd984, %r6069, 8;
	add.s64 	%rd985, %rd714, %rd984;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6070,%dummy}, %rd972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6071}, %rd972;
	}
	shf.r.wrap.b32 	%r6072, %r6071, %r6070, 14;
	shf.r.wrap.b32 	%r6073, %r6070, %r6071, 14;
	mov.b64 	%rd986, {%r6073, %r6072};
	shf.r.wrap.b32 	%r6074, %r6071, %r6070, 18;
	shf.r.wrap.b32 	%r6075, %r6070, %r6071, 18;
	mov.b64 	%rd987, {%r6075, %r6074};
	xor.b64  	%rd988, %rd986, %rd987;
	shf.l.wrap.b32 	%r6076, %r6070, %r6071, 23;
	shf.l.wrap.b32 	%r6077, %r6071, %r6070, 23;
	mov.b64 	%rd989, {%r6077, %r6076};
	xor.b64  	%rd990, %rd988, %rd989;
	xor.b64  	%rd991, %rd945, %rd918;
	and.b64  	%rd992, %rd972, %rd991;
	xor.b64  	%rd993, %rd992, %rd918;
	ld.const.u64 	%rd994, [%rd985];
	add.s64 	%rd995, %rd994, %rd1184;
	add.s64 	%rd996, %rd995, %rd891;
	add.s64 	%rd997, %rd996, %rd993;
	add.s64 	%rd998, %rd997, %rd990;
	add.s64 	%rd999, %rd998, %rd902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6078,%dummy}, %rd983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6079}, %rd983;
	}
	shf.r.wrap.b32 	%r6080, %r6079, %r6078, 28;
	shf.r.wrap.b32 	%r6081, %r6078, %r6079, 28;
	mov.b64 	%rd1000, {%r6081, %r6080};
	shf.l.wrap.b32 	%r6082, %r6078, %r6079, 30;
	shf.l.wrap.b32 	%r6083, %r6079, %r6078, 30;
	mov.b64 	%rd1001, {%r6083, %r6082};
	xor.b64  	%rd1002, %rd1000, %rd1001;
	shf.l.wrap.b32 	%r6084, %r6078, %r6079, 25;
	shf.l.wrap.b32 	%r6085, %r6079, %r6078, 25;
	mov.b64 	%rd1003, {%r6085, %r6084};
	xor.b64  	%rd1004, %rd1002, %rd1003;
	and.b64  	%rd1005, %rd983, %rd956;
	xor.b64  	%rd1006, %rd983, %rd956;
	and.b64  	%rd1007, %rd1006, %rd929;
	or.b64  	%rd1008, %rd1007, %rd1005;
	add.s64 	%rd1009, %rd1004, %rd1008;
	add.s64 	%rd1010, %rd1009, %rd998;
	add.s32 	%r6086, %r8474, 11;
	mul.wide.s32 	%rd1011, %r6086, 8;
	add.s64 	%rd1012, %rd714, %rd1011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6087,%dummy}, %rd999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6088}, %rd999;
	}
	shf.r.wrap.b32 	%r6089, %r6088, %r6087, 14;
	shf.r.wrap.b32 	%r6090, %r6087, %r6088, 14;
	mov.b64 	%rd1013, {%r6090, %r6089};
	shf.r.wrap.b32 	%r6091, %r6088, %r6087, 18;
	shf.r.wrap.b32 	%r6092, %r6087, %r6088, 18;
	mov.b64 	%rd1014, {%r6092, %r6091};
	xor.b64  	%rd1015, %rd1013, %rd1014;
	shf.l.wrap.b32 	%r6093, %r6087, %r6088, 23;
	shf.l.wrap.b32 	%r6094, %r6088, %r6087, 23;
	mov.b64 	%rd1016, {%r6094, %r6093};
	xor.b64  	%rd1017, %rd1015, %rd1016;
	xor.b64  	%rd1018, %rd972, %rd945;
	and.b64  	%rd1019, %rd999, %rd1018;
	xor.b64  	%rd1020, %rd1019, %rd945;
	ld.const.u64 	%rd1021, [%rd1012];
	add.s64 	%rd1022, %rd1021, %rd1183;
	add.s64 	%rd1023, %rd1022, %rd918;
	add.s64 	%rd1024, %rd1023, %rd1020;
	add.s64 	%rd1025, %rd1024, %rd1017;
	add.s64 	%rd1026, %rd1025, %rd929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6095,%dummy}, %rd1010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6096}, %rd1010;
	}
	shf.r.wrap.b32 	%r6097, %r6096, %r6095, 28;
	shf.r.wrap.b32 	%r6098, %r6095, %r6096, 28;
	mov.b64 	%rd1027, {%r6098, %r6097};
	shf.l.wrap.b32 	%r6099, %r6095, %r6096, 30;
	shf.l.wrap.b32 	%r6100, %r6096, %r6095, 30;
	mov.b64 	%rd1028, {%r6100, %r6099};
	xor.b64  	%rd1029, %rd1027, %rd1028;
	shf.l.wrap.b32 	%r6101, %r6095, %r6096, 25;
	shf.l.wrap.b32 	%r6102, %r6096, %r6095, 25;
	mov.b64 	%rd1030, {%r6102, %r6101};
	xor.b64  	%rd1031, %rd1029, %rd1030;
	and.b64  	%rd1032, %rd1010, %rd983;
	xor.b64  	%rd1033, %rd1010, %rd983;
	and.b64  	%rd1034, %rd1033, %rd956;
	or.b64  	%rd1035, %rd1034, %rd1032;
	add.s64 	%rd1036, %rd1031, %rd1035;
	add.s64 	%rd1037, %rd1036, %rd1025;
	add.s32 	%r6103, %r8474, 12;
	mul.wide.s32 	%rd1038, %r6103, 8;
	add.s64 	%rd1039, %rd714, %rd1038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6104,%dummy}, %rd1026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6105}, %rd1026;
	}
	shf.r.wrap.b32 	%r6106, %r6105, %r6104, 14;
	shf.r.wrap.b32 	%r6107, %r6104, %r6105, 14;
	mov.b64 	%rd1040, {%r6107, %r6106};
	shf.r.wrap.b32 	%r6108, %r6105, %r6104, 18;
	shf.r.wrap.b32 	%r6109, %r6104, %r6105, 18;
	mov.b64 	%rd1041, {%r6109, %r6108};
	xor.b64  	%rd1042, %rd1040, %rd1041;
	shf.l.wrap.b32 	%r6110, %r6104, %r6105, 23;
	shf.l.wrap.b32 	%r6111, %r6105, %r6104, 23;
	mov.b64 	%rd1043, {%r6111, %r6110};
	xor.b64  	%rd1044, %rd1042, %rd1043;
	xor.b64  	%rd1045, %rd999, %rd972;
	and.b64  	%rd1046, %rd1026, %rd1045;
	xor.b64  	%rd1047, %rd1046, %rd972;
	ld.const.u64 	%rd1048, [%rd1039];
	add.s64 	%rd1049, %rd1048, %rd1182;
	add.s64 	%rd1050, %rd1049, %rd945;
	add.s64 	%rd1051, %rd1050, %rd1047;
	add.s64 	%rd1052, %rd1051, %rd1044;
	add.s64 	%rd1194, %rd1052, %rd956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6112,%dummy}, %rd1037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6113}, %rd1037;
	}
	shf.r.wrap.b32 	%r6114, %r6113, %r6112, 28;
	shf.r.wrap.b32 	%r6115, %r6112, %r6113, 28;
	mov.b64 	%rd1053, {%r6115, %r6114};
	shf.l.wrap.b32 	%r6116, %r6112, %r6113, 30;
	shf.l.wrap.b32 	%r6117, %r6113, %r6112, 30;
	mov.b64 	%rd1054, {%r6117, %r6116};
	xor.b64  	%rd1055, %rd1053, %rd1054;
	shf.l.wrap.b32 	%r6118, %r6112, %r6113, 25;
	shf.l.wrap.b32 	%r6119, %r6113, %r6112, 25;
	mov.b64 	%rd1056, {%r6119, %r6118};
	xor.b64  	%rd1057, %rd1055, %rd1056;
	and.b64  	%rd1058, %rd1037, %rd1010;
	xor.b64  	%rd1059, %rd1037, %rd1010;
	and.b64  	%rd1060, %rd1059, %rd983;
	or.b64  	%rd1061, %rd1060, %rd1058;
	add.s64 	%rd1062, %rd1057, %rd1061;
	add.s64 	%rd1190, %rd1062, %rd1052;
	add.s32 	%r6120, %r8474, 13;
	mul.wide.s32 	%rd1063, %r6120, 8;
	add.s64 	%rd1064, %rd714, %rd1063;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6121,%dummy}, %rd1194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6122}, %rd1194;
	}
	shf.r.wrap.b32 	%r6123, %r6122, %r6121, 14;
	shf.r.wrap.b32 	%r6124, %r6121, %r6122, 14;
	mov.b64 	%rd1065, {%r6124, %r6123};
	shf.r.wrap.b32 	%r6125, %r6122, %r6121, 18;
	shf.r.wrap.b32 	%r6126, %r6121, %r6122, 18;
	mov.b64 	%rd1066, {%r6126, %r6125};
	xor.b64  	%rd1067, %rd1065, %rd1066;
	shf.l.wrap.b32 	%r6127, %r6121, %r6122, 23;
	shf.l.wrap.b32 	%r6128, %r6122, %r6121, 23;
	mov.b64 	%rd1068, {%r6128, %r6127};
	xor.b64  	%rd1069, %rd1067, %rd1068;
	xor.b64  	%rd1070, %rd1026, %rd999;
	and.b64  	%rd1071, %rd1194, %rd1070;
	xor.b64  	%rd1072, %rd1071, %rd999;
	ld.const.u64 	%rd1073, [%rd1064];
	add.s64 	%rd1074, %rd1073, %rd1181;
	add.s64 	%rd1075, %rd1074, %rd972;
	add.s64 	%rd1076, %rd1075, %rd1072;
	add.s64 	%rd1077, %rd1076, %rd1069;
	add.s64 	%rd1193, %rd1077, %rd983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6129,%dummy}, %rd1190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6130}, %rd1190;
	}
	shf.r.wrap.b32 	%r6131, %r6130, %r6129, 28;
	shf.r.wrap.b32 	%r6132, %r6129, %r6130, 28;
	mov.b64 	%rd1078, {%r6132, %r6131};
	shf.l.wrap.b32 	%r6133, %r6129, %r6130, 30;
	shf.l.wrap.b32 	%r6134, %r6130, %r6129, 30;
	mov.b64 	%rd1079, {%r6134, %r6133};
	xor.b64  	%rd1080, %rd1078, %rd1079;
	shf.l.wrap.b32 	%r6135, %r6129, %r6130, 25;
	shf.l.wrap.b32 	%r6136, %r6130, %r6129, 25;
	mov.b64 	%rd1081, {%r6136, %r6135};
	xor.b64  	%rd1082, %rd1080, %rd1081;
	and.b64  	%rd1083, %rd1190, %rd1037;
	xor.b64  	%rd1084, %rd1190, %rd1037;
	and.b64  	%rd1085, %rd1084, %rd1010;
	or.b64  	%rd1086, %rd1085, %rd1083;
	add.s64 	%rd1087, %rd1082, %rd1086;
	add.s64 	%rd1189, %rd1087, %rd1077;
	add.s32 	%r6137, %r8474, 14;
	mul.wide.s32 	%rd1088, %r6137, 8;
	add.s64 	%rd1089, %rd714, %rd1088;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6138,%dummy}, %rd1193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6139}, %rd1193;
	}
	shf.r.wrap.b32 	%r6140, %r6139, %r6138, 14;
	shf.r.wrap.b32 	%r6141, %r6138, %r6139, 14;
	mov.b64 	%rd1090, {%r6141, %r6140};
	shf.r.wrap.b32 	%r6142, %r6139, %r6138, 18;
	shf.r.wrap.b32 	%r6143, %r6138, %r6139, 18;
	mov.b64 	%rd1091, {%r6143, %r6142};
	xor.b64  	%rd1092, %rd1090, %rd1091;
	shf.l.wrap.b32 	%r6144, %r6138, %r6139, 23;
	shf.l.wrap.b32 	%r6145, %r6139, %r6138, 23;
	mov.b64 	%rd1093, {%r6145, %r6144};
	xor.b64  	%rd1094, %rd1092, %rd1093;
	xor.b64  	%rd1095, %rd1194, %rd1026;
	and.b64  	%rd1096, %rd1193, %rd1095;
	xor.b64  	%rd1097, %rd1096, %rd1026;
	ld.const.u64 	%rd1098, [%rd1089];
	add.s64 	%rd1099, %rd1098, %rd1180;
	add.s64 	%rd1100, %rd1099, %rd999;
	add.s64 	%rd1101, %rd1100, %rd1097;
	add.s64 	%rd1102, %rd1101, %rd1094;
	add.s64 	%rd1192, %rd1102, %rd1010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6146,%dummy}, %rd1189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6147}, %rd1189;
	}
	shf.r.wrap.b32 	%r6148, %r6147, %r6146, 28;
	shf.r.wrap.b32 	%r6149, %r6146, %r6147, 28;
	mov.b64 	%rd1103, {%r6149, %r6148};
	shf.l.wrap.b32 	%r6150, %r6146, %r6147, 30;
	shf.l.wrap.b32 	%r6151, %r6147, %r6146, 30;
	mov.b64 	%rd1104, {%r6151, %r6150};
	xor.b64  	%rd1105, %rd1103, %rd1104;
	shf.l.wrap.b32 	%r6152, %r6146, %r6147, 25;
	shf.l.wrap.b32 	%r6153, %r6147, %r6146, 25;
	mov.b64 	%rd1106, {%r6153, %r6152};
	xor.b64  	%rd1107, %rd1105, %rd1106;
	and.b64  	%rd1108, %rd1189, %rd1190;
	xor.b64  	%rd1109, %rd1189, %rd1190;
	and.b64  	%rd1110, %rd1109, %rd1037;
	or.b64  	%rd1111, %rd1110, %rd1108;
	add.s64 	%rd1112, %rd1107, %rd1111;
	add.s64 	%rd1188, %rd1112, %rd1102;
	add.s32 	%r6154, %r8474, 15;
	mul.wide.s32 	%rd1113, %r6154, 8;
	add.s64 	%rd1114, %rd714, %rd1113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6155,%dummy}, %rd1192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6156}, %rd1192;
	}
	shf.r.wrap.b32 	%r6157, %r6156, %r6155, 14;
	shf.r.wrap.b32 	%r6158, %r6155, %r6156, 14;
	mov.b64 	%rd1115, {%r6158, %r6157};
	shf.r.wrap.b32 	%r6159, %r6156, %r6155, 18;
	shf.r.wrap.b32 	%r6160, %r6155, %r6156, 18;
	mov.b64 	%rd1116, {%r6160, %r6159};
	xor.b64  	%rd1117, %rd1115, %rd1116;
	shf.l.wrap.b32 	%r6161, %r6155, %r6156, 23;
	shf.l.wrap.b32 	%r6162, %r6156, %r6155, 23;
	mov.b64 	%rd1118, {%r6162, %r6161};
	xor.b64  	%rd1119, %rd1117, %rd1118;
	xor.b64  	%rd1120, %rd1193, %rd1194;
	and.b64  	%rd1121, %rd1192, %rd1120;
	xor.b64  	%rd1122, %rd1121, %rd1194;
	ld.const.u64 	%rd1123, [%rd1114];
	add.s64 	%rd1124, %rd1123, %rd1179;
	add.s64 	%rd1125, %rd1124, %rd1026;
	add.s64 	%rd1126, %rd1125, %rd1122;
	add.s64 	%rd1127, %rd1126, %rd1119;
	add.s64 	%rd1191, %rd1127, %rd1037;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6163,%dummy}, %rd1188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6164}, %rd1188;
	}
	shf.r.wrap.b32 	%r6165, %r6164, %r6163, 28;
	shf.r.wrap.b32 	%r6166, %r6163, %r6164, 28;
	mov.b64 	%rd1128, {%r6166, %r6165};
	shf.l.wrap.b32 	%r6167, %r6163, %r6164, 30;
	shf.l.wrap.b32 	%r6168, %r6164, %r6163, 30;
	mov.b64 	%rd1129, {%r6168, %r6167};
	xor.b64  	%rd1130, %rd1128, %rd1129;
	shf.l.wrap.b32 	%r6169, %r6163, %r6164, 25;
	shf.l.wrap.b32 	%r6170, %r6164, %r6163, 25;
	mov.b64 	%rd1131, {%r6170, %r6169};
	xor.b64  	%rd1132, %rd1130, %rd1131;
	and.b64  	%rd1133, %rd1188, %rd1189;
	xor.b64  	%rd1134, %rd1188, %rd1189;
	and.b64  	%rd1135, %rd1134, %rd1190;
	or.b64  	%rd1136, %rd1135, %rd1133;
	add.s64 	%rd1137, %rd1132, %rd1136;
	add.s64 	%rd1187, %rd1137, %rd1127;
	add.s32 	%r8474, %r8474, 16;
	setp.lt.s32	%p50, %r8474, 80;
	@%p50 bra 	BB1_91;

	ld.param.u64 	%rd1178, [sha512_hmac_update_128_param_0];
	cvta.to.local.u64 	%rd1177, %rd1178;
	add.s64 	%rd1139, %rd31, %rd1187;
	st.local.u64 	[%rd1177], %rd1139;
	add.s64 	%rd1140, %rd32, %rd1188;
	st.local.u64 	[%rd1177+8], %rd1140;
	add.s64 	%rd1141, %rd33, %rd1189;
	st.local.u64 	[%rd1177+16], %rd1141;
	add.s64 	%rd1142, %rd30, %rd1190;
	st.local.u64 	[%rd1177+24], %rd1142;
	add.s64 	%rd1143, %rd26, %rd1191;
	st.local.u64 	[%rd1177+32], %rd1143;
	add.s64 	%rd1144, %rd28, %rd1192;
	st.local.u64 	[%rd1177+40], %rd1144;
	add.s64 	%rd1145, %rd27, %rd1193;
	st.local.u64 	[%rd1177+48], %rd1145;
	add.s64 	%rd1146, %rd29, %rd1194;
	st.local.u64 	[%rd1177+56], %rd1146;
	st.local.u32 	[%rd1177+64], %r8445;
	st.local.u32 	[%rd1177+68], %r8444;
	st.local.u32 	[%rd1177+72], %r8443;
	st.local.u32 	[%rd1177+76], %r8442;
	st.local.u32 	[%rd1177+80], %r8449;
	st.local.u32 	[%rd1177+84], %r8448;
	st.local.u32 	[%rd1177+88], %r8447;
	st.local.u32 	[%rd1177+92], %r8446;
	st.local.u32 	[%rd1177+96], %r8453;
	st.local.u32 	[%rd1177+100], %r8452;
	st.local.u32 	[%rd1177+104], %r8451;
	st.local.u32 	[%rd1177+108], %r8450;
	st.local.u32 	[%rd1177+112], %r8457;
	st.local.u32 	[%rd1177+116], %r8456;
	st.local.u32 	[%rd1177+120], %r8455;
	st.local.u32 	[%rd1177+124], %r8454;
	st.local.u32 	[%rd1177+128], %r8461;
	st.local.u32 	[%rd1177+132], %r8460;
	st.local.u32 	[%rd1177+136], %r8459;
	st.local.u32 	[%rd1177+140], %r8458;
	st.local.u32 	[%rd1177+144], %r8465;
	st.local.u32 	[%rd1177+148], %r8464;
	st.local.u32 	[%rd1177+152], %r8463;
	st.local.u32 	[%rd1177+156], %r8462;
	st.local.u32 	[%rd1177+160], %r8469;
	st.local.u32 	[%rd1177+164], %r8468;
	st.local.u32 	[%rd1177+168], %r8467;
	st.local.u32 	[%rd1177+172], %r8466;
	st.local.u32 	[%rd1177+176], %r8473;
	st.local.u32 	[%rd1177+180], %r8472;
	st.local.u32 	[%rd1177+184], %r8471;
	st.local.u32 	[%rd1177+188], %r8470;

BB1_175:
	ret;
}

.func sha512_hmac_update_global_swap(
	.param .b64 sha512_hmac_update_global_swap_param_0,
	.param .b64 sha512_hmac_update_global_swap_param_1,
	.param .b32 sha512_hmac_update_global_swap_param_2
)
{
	.reg .pred 	%p<151>;
	.reg .b32 	%r<19492>;
	.reg .b64 	%rd<4478>;


	ld.param.u64 	%rd344, [sha512_hmac_update_global_swap_param_0];
	ld.param.u64 	%rd343, [sha512_hmac_update_global_swap_param_1];
	ld.param.u32 	%r2949, [sha512_hmac_update_global_swap_param_2];
	cvta.to.local.u64 	%rd1, %rd344;
	ld.const.u64 	%rd2, [k_sha512];
	ld.const.u64 	%rd3, [k_sha512+8];
	ld.const.u64 	%rd4, [k_sha512+16];
	ld.const.u64 	%rd5, [k_sha512+24];
	ld.const.u64 	%rd6, [k_sha512+32];
	ld.const.u64 	%rd7, [k_sha512+40];
	ld.const.u64 	%rd8, [k_sha512+48];
	ld.const.u64 	%rd9, [k_sha512+56];
	ld.const.u64 	%rd10, [k_sha512+64];
	ld.const.u64 	%rd11, [k_sha512+72];
	ld.const.u64 	%rd12, [k_sha512+80];
	ld.const.u64 	%rd13, [k_sha512+88];
	ld.const.u64 	%rd14, [k_sha512+96];
	ld.const.u64 	%rd15, [k_sha512+104];
	ld.const.u64 	%rd16, [k_sha512+112];
	mov.u32 	%r19294, 0;
	ld.const.u64 	%rd17, [k_sha512+120];
	mov.u32 	%r19295, %r19294;
	bra.uni 	BB2_1;

BB2_309:
	st.local.u64 	[%rd1+56], %rd4477;
	st.local.u32 	[%rd1+64], %r19429;
	st.local.u32 	[%rd1+68], %r19428;
	st.local.u32 	[%rd1+72], %r19427;
	st.local.u32 	[%rd1+76], %r19426;
	st.local.u32 	[%rd1+80], %r19433;
	st.local.u32 	[%rd1+84], %r19432;
	st.local.u32 	[%rd1+88], %r19431;
	st.local.u32 	[%rd1+92], %r19430;
	st.local.u32 	[%rd1+96], %r19437;
	st.local.u32 	[%rd1+100], %r19436;
	st.local.u32 	[%rd1+104], %r19435;
	st.local.u32 	[%rd1+108], %r19434;
	st.local.u32 	[%rd1+112], %r19441;
	st.local.u32 	[%rd1+116], %r19440;
	st.local.u32 	[%rd1+120], %r19439;
	st.local.u32 	[%rd1+124], %r19438;
	st.local.u32 	[%rd1+128], %r19445;
	st.local.u32 	[%rd1+132], %r19444;
	st.local.u32 	[%rd1+136], %r19443;
	st.local.u32 	[%rd1+140], %r19442;
	st.local.u32 	[%rd1+144], %r19449;
	st.local.u32 	[%rd1+148], %r19448;
	st.local.u32 	[%rd1+152], %r19447;
	st.local.u32 	[%rd1+156], %r19446;
	st.local.u32 	[%rd1+160], %r19453;
	st.local.u32 	[%rd1+164], %r19452;
	st.local.u32 	[%rd1+168], %r19451;
	st.local.u32 	[%rd1+172], %r19450;
	st.local.u32 	[%rd1+176], %r19457;
	st.local.u32 	[%rd1+180], %r19456;
	st.local.u32 	[%rd1+184], %r19455;
	st.local.u32 	[%rd1+188], %r19454;
	add.s32 	%r19294, %r19294, 128;
	add.s32 	%r19295, %r19295, 32;

BB2_1:
	add.s32 	%r2952, %r2949, -128;
	setp.lt.s32	%p1, %r19294, %r2952;
	mul.wide.s32 	%rd345, %r19295, 4;
	add.s64 	%rd346, %rd343, %rd345;
	ld.global.u32 	%r3, [%rd346];
	add.s32 	%r2953, %r19295, 1;
	mul.wide.s32 	%rd347, %r2953, 4;
	add.s64 	%rd348, %rd343, %rd347;
	ld.global.u32 	%r4, [%rd348];
	add.s32 	%r2954, %r19295, 2;
	mul.wide.s32 	%rd349, %r2954, 4;
	add.s64 	%rd350, %rd343, %rd349;
	ld.global.u32 	%r5, [%rd350];
	add.s32 	%r2955, %r19295, 3;
	mul.wide.s32 	%rd351, %r2955, 4;
	add.s64 	%rd352, %rd343, %rd351;
	ld.global.u32 	%r6, [%rd352];
	add.s32 	%r2956, %r19295, 4;
	mul.wide.s32 	%rd353, %r2956, 4;
	add.s64 	%rd354, %rd343, %rd353;
	ld.global.u32 	%r7, [%rd354];
	add.s32 	%r2957, %r19295, 5;
	mul.wide.s32 	%rd355, %r2957, 4;
	add.s64 	%rd356, %rd343, %rd355;
	ld.global.u32 	%r8, [%rd356];
	add.s32 	%r2958, %r19295, 6;
	mul.wide.s32 	%rd357, %r2958, 4;
	add.s64 	%rd358, %rd343, %rd357;
	ld.global.u32 	%r9, [%rd358];
	add.s32 	%r2959, %r19295, 7;
	mul.wide.s32 	%rd359, %r2959, 4;
	add.s64 	%rd360, %rd343, %rd359;
	ld.global.u32 	%r10, [%rd360];
	add.s32 	%r2960, %r19295, 8;
	mul.wide.s32 	%rd361, %r2960, 4;
	add.s64 	%rd362, %rd343, %rd361;
	ld.global.u32 	%r11, [%rd362];
	add.s32 	%r2961, %r19295, 9;
	mul.wide.s32 	%rd363, %r2961, 4;
	add.s64 	%rd364, %rd343, %rd363;
	ld.global.u32 	%r12, [%rd364];
	add.s32 	%r2962, %r19295, 10;
	mul.wide.s32 	%rd365, %r2962, 4;
	add.s64 	%rd366, %rd343, %rd365;
	ld.global.u32 	%r13, [%rd366];
	add.s32 	%r2963, %r19295, 11;
	mul.wide.s32 	%rd367, %r2963, 4;
	add.s64 	%rd368, %rd343, %rd367;
	ld.global.u32 	%r14, [%rd368];
	add.s32 	%r2964, %r19295, 12;
	mul.wide.s32 	%rd369, %r2964, 4;
	add.s64 	%rd370, %rd343, %rd369;
	ld.global.u32 	%r15, [%rd370];
	add.s32 	%r2965, %r19295, 13;
	mul.wide.s32 	%rd371, %r2965, 4;
	add.s64 	%rd372, %rd343, %rd371;
	ld.global.u32 	%r16, [%rd372];
	add.s32 	%r2966, %r19295, 14;
	mul.wide.s32 	%rd373, %r2966, 4;
	add.s64 	%rd374, %rd343, %rd373;
	ld.global.u32 	%r17, [%rd374];
	add.s32 	%r2967, %r19295, 15;
	mul.wide.s32 	%rd375, %r2967, 4;
	add.s64 	%rd376, %rd343, %rd375;
	ld.global.u32 	%r18, [%rd376];
	add.s32 	%r2968, %r19295, 16;
	mul.wide.s32 	%rd377, %r2968, 4;
	add.s64 	%rd378, %rd343, %rd377;
	ld.global.u32 	%r19, [%rd378];
	add.s32 	%r2969, %r19295, 17;
	mul.wide.s32 	%rd379, %r2969, 4;
	add.s64 	%rd380, %rd343, %rd379;
	ld.global.u32 	%r20, [%rd380];
	add.s32 	%r2970, %r19295, 18;
	mul.wide.s32 	%rd381, %r2970, 4;
	add.s64 	%rd382, %rd343, %rd381;
	ld.global.u32 	%r21, [%rd382];
	add.s32 	%r2971, %r19295, 19;
	mul.wide.s32 	%rd383, %r2971, 4;
	add.s64 	%rd384, %rd343, %rd383;
	ld.global.u32 	%r22, [%rd384];
	add.s32 	%r2972, %r19295, 20;
	mul.wide.s32 	%rd385, %r2972, 4;
	add.s64 	%rd386, %rd343, %rd385;
	ld.global.u32 	%r23, [%rd386];
	add.s32 	%r2973, %r19295, 21;
	mul.wide.s32 	%rd387, %r2973, 4;
	add.s64 	%rd388, %rd343, %rd387;
	ld.global.u32 	%r24, [%rd388];
	add.s32 	%r2974, %r19295, 22;
	mul.wide.s32 	%rd389, %r2974, 4;
	add.s64 	%rd390, %rd343, %rd389;
	ld.global.u32 	%r25, [%rd390];
	add.s32 	%r2975, %r19295, 23;
	mul.wide.s32 	%rd391, %r2975, 4;
	add.s64 	%rd392, %rd343, %rd391;
	ld.global.u32 	%r26, [%rd392];
	add.s32 	%r2976, %r19295, 24;
	mul.wide.s32 	%rd393, %r2976, 4;
	add.s64 	%rd394, %rd343, %rd393;
	ld.global.u32 	%r27, [%rd394];
	add.s32 	%r2977, %r19295, 25;
	mul.wide.s32 	%rd395, %r2977, 4;
	add.s64 	%rd396, %rd343, %rd395;
	ld.global.u32 	%r28, [%rd396];
	add.s32 	%r2978, %r19295, 26;
	mul.wide.s32 	%rd397, %r2978, 4;
	add.s64 	%rd398, %rd343, %rd397;
	ld.global.u32 	%r29, [%rd398];
	add.s32 	%r2979, %r19295, 27;
	mul.wide.s32 	%rd399, %r2979, 4;
	add.s64 	%rd400, %rd343, %rd399;
	ld.global.u32 	%r30, [%rd400];
	add.s32 	%r2980, %r19295, 28;
	mul.wide.s32 	%rd401, %r2980, 4;
	add.s64 	%rd402, %rd343, %rd401;
	ld.global.u32 	%r31, [%rd402];
	add.s32 	%r2981, %r19295, 29;
	mul.wide.s32 	%rd403, %r2981, 4;
	add.s64 	%rd404, %rd343, %rd403;
	ld.global.u32 	%r32, [%rd404];
	add.s32 	%r2982, %r19295, 30;
	mul.wide.s32 	%rd405, %r2982, 4;
	add.s64 	%rd406, %rd343, %rd405;
	ld.global.u32 	%r33, [%rd406];
	add.s32 	%r2983, %r19295, 31;
	mul.wide.s32 	%rd407, %r2983, 4;
	add.s64 	%rd408, %rd343, %rd407;
	ld.global.u32 	%r34, [%rd408];
	@%p1 bra 	BB2_215;
	bra.uni 	BB2_2;

BB2_215:
	// inline asm
	prmt.b32 %r12452, %r3, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r12454, %r4, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r12456, %r5, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r12458, %r6, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19401, %r7, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19400, %r8, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19399, %r9, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19398, %r10, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19405, %r11, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19404, %r12, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19403, %r13, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19402, %r14, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19409, %r15, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19408, %r16, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19407, %r17, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19406, %r18, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19413, %r19, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19412, %r20, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19411, %r21, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19410, %r22, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19417, %r23, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19416, %r24, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19415, %r25, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19414, %r26, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19421, %r27, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19420, %r28, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19419, %r29, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19418, %r30, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19425, %r31, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r32, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r33, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r34, 0, 0x0123;
	// inline asm
	ld.local.u32 	%r1788, [%rd1+192];
	and.b32  	%r1789, %r1788, 127;
	add.s32 	%r12516, %r1788, 128;
	st.local.u32 	[%rd1+192], %r12516;
	setp.eq.s32	%p101, %r1789, 0;
	@%p101 bra 	BB2_306;
	bra.uni 	BB2_216;

BB2_306:
	st.local.u32 	[%rd1+64], %r12452;
	st.local.u32 	[%rd1+68], %r12454;
	st.local.u32 	[%rd1+72], %r12456;
	st.local.u32 	[%rd1+76], %r12458;
	st.local.u32 	[%rd1+80], %r19401;
	st.local.u32 	[%rd1+84], %r19400;
	st.local.u32 	[%rd1+88], %r19399;
	st.local.u32 	[%rd1+92], %r19398;
	st.local.u32 	[%rd1+96], %r19405;
	st.local.u32 	[%rd1+100], %r19404;
	st.local.u32 	[%rd1+104], %r19403;
	st.local.u32 	[%rd1+108], %r19402;
	st.local.u32 	[%rd1+112], %r19409;
	st.local.u32 	[%rd1+116], %r19408;
	st.local.u32 	[%rd1+120], %r19407;
	st.local.u32 	[%rd1+124], %r19406;
	st.local.u32 	[%rd1+128], %r19413;
	st.local.u32 	[%rd1+132], %r19412;
	st.local.u32 	[%rd1+136], %r19411;
	st.local.u32 	[%rd1+140], %r19410;
	st.local.u32 	[%rd1+144], %r19417;
	st.local.u32 	[%rd1+148], %r19416;
	st.local.u32 	[%rd1+152], %r19415;
	st.local.u32 	[%rd1+156], %r19414;
	st.local.u32 	[%rd1+160], %r19421;
	st.local.u32 	[%rd1+164], %r19420;
	st.local.u32 	[%rd1+168], %r19419;
	st.local.u32 	[%rd1+172], %r19418;
	st.local.u32 	[%rd1+176], %r19425;
	st.local.u32 	[%rd1+180], %r19424;
	st.local.u32 	[%rd1+184], %r19423;
	st.local.u32 	[%rd1+188], %r19422;
	mov.b64	%rd4469, {%r12454, %r12452};
	mov.b64	%rd4470, {%r12458, %r12456};
	mov.b64	%rd4471, {%r19400, %r19401};
	mov.b64	%rd4472, {%r19398, %r19399};
	mov.b64	%rd4473, {%r19404, %r19405};
	mov.b64	%rd4474, {%r19402, %r19403};
	mov.b64	%rd4475, {%r19408, %r19409};
	mov.b64	%rd4476, {%r19406, %r19407};
	mov.b64	%rd4460, {%r19412, %r19413};
	mov.b64	%rd4459, {%r19410, %r19411};
	mov.b64	%rd4458, {%r19416, %r19417};
	mov.b64	%rd4457, {%r19414, %r19415};
	mov.b64	%rd4456, {%r19420, %r19421};
	mov.b64	%rd4455, {%r19418, %r19419};
	mov.b64	%rd4454, {%r19424, %r19425};
	mov.b64	%rd4453, {%r19422, %r19423};
	ld.local.u64 	%rd277, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18549,%dummy}, %rd277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18550}, %rd277;
	}
	shf.r.wrap.b32 	%r18551, %r18550, %r18549, 14;
	shf.r.wrap.b32 	%r18552, %r18549, %r18550, 14;
	mov.b64 	%rd3380, {%r18552, %r18551};
	shf.r.wrap.b32 	%r18553, %r18550, %r18549, 18;
	shf.r.wrap.b32 	%r18554, %r18549, %r18550, 18;
	mov.b64 	%rd3381, {%r18554, %r18553};
	xor.b64  	%rd3382, %rd3381, %rd3380;
	shf.l.wrap.b32 	%r18555, %r18549, %r18550, 23;
	shf.l.wrap.b32 	%r18556, %r18550, %r18549, 23;
	mov.b64 	%rd3383, {%r18556, %r18555};
	xor.b64  	%rd3384, %rd3382, %rd3383;
	ld.local.u64 	%rd278, [%rd1+48];
	ld.local.u64 	%rd279, [%rd1+40];
	xor.b64  	%rd3385, %rd278, %rd279;
	and.b64  	%rd3386, %rd3385, %rd277;
	xor.b64  	%rd3387, %rd3386, %rd278;
	ld.local.u64 	%rd280, [%rd1+56];
	add.s64 	%rd3388, %rd3387, %rd280;
	add.s64 	%rd3389, %rd3388, %rd4469;
	add.s64 	%rd3390, %rd3389, %rd2;
	add.s64 	%rd3391, %rd3390, %rd3384;
	ld.local.u64 	%rd281, [%rd1+24];
	add.s64 	%rd3392, %rd3391, %rd281;
	ld.local.u64 	%rd282, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18557,%dummy}, %rd282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18558}, %rd282;
	}
	shf.r.wrap.b32 	%r18559, %r18558, %r18557, 28;
	shf.r.wrap.b32 	%r18560, %r18557, %r18558, 28;
	mov.b64 	%rd3393, {%r18560, %r18559};
	shf.l.wrap.b32 	%r18561, %r18557, %r18558, 30;
	shf.l.wrap.b32 	%r18562, %r18558, %r18557, 30;
	mov.b64 	%rd3394, {%r18562, %r18561};
	xor.b64  	%rd3395, %rd3394, %rd3393;
	shf.l.wrap.b32 	%r18563, %r18557, %r18558, 25;
	shf.l.wrap.b32 	%r18564, %r18558, %r18557, 25;
	mov.b64 	%rd3396, {%r18564, %r18563};
	xor.b64  	%rd3397, %rd3395, %rd3396;
	ld.local.u64 	%rd283, [%rd1+8];
	and.b64  	%rd3398, %rd283, %rd282;
	xor.b64  	%rd3399, %rd283, %rd282;
	ld.local.u64 	%rd284, [%rd1+16];
	and.b64  	%rd3400, %rd284, %rd3399;
	or.b64  	%rd3401, %rd3400, %rd3398;
	add.s64 	%rd3402, %rd3391, %rd3401;
	add.s64 	%rd3403, %rd3402, %rd3397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18565,%dummy}, %rd3392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18566}, %rd3392;
	}
	shf.r.wrap.b32 	%r18567, %r18566, %r18565, 14;
	shf.r.wrap.b32 	%r18568, %r18565, %r18566, 14;
	mov.b64 	%rd3404, {%r18568, %r18567};
	shf.r.wrap.b32 	%r18569, %r18566, %r18565, 18;
	shf.r.wrap.b32 	%r18570, %r18565, %r18566, 18;
	mov.b64 	%rd3405, {%r18570, %r18569};
	xor.b64  	%rd3406, %rd3405, %rd3404;
	shf.l.wrap.b32 	%r18571, %r18565, %r18566, 23;
	shf.l.wrap.b32 	%r18572, %r18566, %r18565, 23;
	mov.b64 	%rd3407, {%r18572, %r18571};
	xor.b64  	%rd3408, %rd3406, %rd3407;
	xor.b64  	%rd3409, %rd279, %rd277;
	and.b64  	%rd3410, %rd3392, %rd3409;
	xor.b64  	%rd3411, %rd3410, %rd279;
	add.s64 	%rd3412, %rd4470, %rd278;
	add.s64 	%rd3413, %rd3412, %rd3;
	add.s64 	%rd3414, %rd3413, %rd3411;
	add.s64 	%rd3415, %rd3414, %rd3408;
	add.s64 	%rd3416, %rd3415, %rd284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18573,%dummy}, %rd3403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18574}, %rd3403;
	}
	shf.r.wrap.b32 	%r18575, %r18574, %r18573, 28;
	shf.r.wrap.b32 	%r18576, %r18573, %r18574, 28;
	mov.b64 	%rd3417, {%r18576, %r18575};
	shf.l.wrap.b32 	%r18577, %r18573, %r18574, 30;
	shf.l.wrap.b32 	%r18578, %r18574, %r18573, 30;
	mov.b64 	%rd3418, {%r18578, %r18577};
	xor.b64  	%rd3419, %rd3418, %rd3417;
	shf.l.wrap.b32 	%r18579, %r18573, %r18574, 25;
	shf.l.wrap.b32 	%r18580, %r18574, %r18573, 25;
	mov.b64 	%rd3420, {%r18580, %r18579};
	xor.b64  	%rd3421, %rd3419, %rd3420;
	and.b64  	%rd3422, %rd3403, %rd282;
	xor.b64  	%rd3423, %rd3403, %rd282;
	and.b64  	%rd3424, %rd3423, %rd283;
	or.b64  	%rd3425, %rd3424, %rd3422;
	add.s64 	%rd3426, %rd3415, %rd3425;
	add.s64 	%rd3427, %rd3426, %rd3421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18581,%dummy}, %rd3416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18582}, %rd3416;
	}
	shf.r.wrap.b32 	%r18583, %r18582, %r18581, 14;
	shf.r.wrap.b32 	%r18584, %r18581, %r18582, 14;
	mov.b64 	%rd3428, {%r18584, %r18583};
	shf.r.wrap.b32 	%r18585, %r18582, %r18581, 18;
	shf.r.wrap.b32 	%r18586, %r18581, %r18582, 18;
	mov.b64 	%rd3429, {%r18586, %r18585};
	xor.b64  	%rd3430, %rd3429, %rd3428;
	shf.l.wrap.b32 	%r18587, %r18581, %r18582, 23;
	shf.l.wrap.b32 	%r18588, %r18582, %r18581, 23;
	mov.b64 	%rd3431, {%r18588, %r18587};
	xor.b64  	%rd3432, %rd3430, %rd3431;
	xor.b64  	%rd3433, %rd3392, %rd277;
	and.b64  	%rd3434, %rd3416, %rd3433;
	xor.b64  	%rd3435, %rd3434, %rd277;
	add.s64 	%rd3436, %rd4471, %rd279;
	add.s64 	%rd3437, %rd3436, %rd4;
	add.s64 	%rd3438, %rd3437, %rd3435;
	add.s64 	%rd3439, %rd3438, %rd3432;
	add.s64 	%rd3440, %rd3439, %rd283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18589,%dummy}, %rd3427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18590}, %rd3427;
	}
	shf.r.wrap.b32 	%r18591, %r18590, %r18589, 28;
	shf.r.wrap.b32 	%r18592, %r18589, %r18590, 28;
	mov.b64 	%rd3441, {%r18592, %r18591};
	shf.l.wrap.b32 	%r18593, %r18589, %r18590, 30;
	shf.l.wrap.b32 	%r18594, %r18590, %r18589, 30;
	mov.b64 	%rd3442, {%r18594, %r18593};
	xor.b64  	%rd3443, %rd3442, %rd3441;
	shf.l.wrap.b32 	%r18595, %r18589, %r18590, 25;
	shf.l.wrap.b32 	%r18596, %r18590, %r18589, 25;
	mov.b64 	%rd3444, {%r18596, %r18595};
	xor.b64  	%rd3445, %rd3443, %rd3444;
	and.b64  	%rd3446, %rd3427, %rd3403;
	xor.b64  	%rd3447, %rd3427, %rd3403;
	and.b64  	%rd3448, %rd3447, %rd282;
	or.b64  	%rd3449, %rd3448, %rd3446;
	add.s64 	%rd3450, %rd3439, %rd3449;
	add.s64 	%rd3451, %rd3450, %rd3445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18597,%dummy}, %rd3440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18598}, %rd3440;
	}
	shf.r.wrap.b32 	%r18599, %r18598, %r18597, 14;
	shf.r.wrap.b32 	%r18600, %r18597, %r18598, 14;
	mov.b64 	%rd3452, {%r18600, %r18599};
	shf.r.wrap.b32 	%r18601, %r18598, %r18597, 18;
	shf.r.wrap.b32 	%r18602, %r18597, %r18598, 18;
	mov.b64 	%rd3453, {%r18602, %r18601};
	xor.b64  	%rd3454, %rd3453, %rd3452;
	shf.l.wrap.b32 	%r18603, %r18597, %r18598, 23;
	shf.l.wrap.b32 	%r18604, %r18598, %r18597, 23;
	mov.b64 	%rd3455, {%r18604, %r18603};
	xor.b64  	%rd3456, %rd3454, %rd3455;
	xor.b64  	%rd3457, %rd3416, %rd3392;
	and.b64  	%rd3458, %rd3440, %rd3457;
	xor.b64  	%rd3459, %rd3458, %rd3392;
	add.s64 	%rd3460, %rd4472, %rd277;
	add.s64 	%rd3461, %rd3460, %rd5;
	add.s64 	%rd3462, %rd3461, %rd3459;
	add.s64 	%rd3463, %rd3462, %rd3456;
	add.s64 	%rd3464, %rd3463, %rd282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18605,%dummy}, %rd3451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18606}, %rd3451;
	}
	shf.r.wrap.b32 	%r18607, %r18606, %r18605, 28;
	shf.r.wrap.b32 	%r18608, %r18605, %r18606, 28;
	mov.b64 	%rd3465, {%r18608, %r18607};
	shf.l.wrap.b32 	%r18609, %r18605, %r18606, 30;
	shf.l.wrap.b32 	%r18610, %r18606, %r18605, 30;
	mov.b64 	%rd3466, {%r18610, %r18609};
	xor.b64  	%rd3467, %rd3466, %rd3465;
	shf.l.wrap.b32 	%r18611, %r18605, %r18606, 25;
	shf.l.wrap.b32 	%r18612, %r18606, %r18605, 25;
	mov.b64 	%rd3468, {%r18612, %r18611};
	xor.b64  	%rd3469, %rd3467, %rd3468;
	and.b64  	%rd3470, %rd3451, %rd3427;
	xor.b64  	%rd3471, %rd3451, %rd3427;
	and.b64  	%rd3472, %rd3471, %rd3403;
	or.b64  	%rd3473, %rd3472, %rd3470;
	add.s64 	%rd3474, %rd3463, %rd3473;
	add.s64 	%rd3475, %rd3474, %rd3469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18613,%dummy}, %rd3464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18614}, %rd3464;
	}
	shf.r.wrap.b32 	%r18615, %r18614, %r18613, 14;
	shf.r.wrap.b32 	%r18616, %r18613, %r18614, 14;
	mov.b64 	%rd3476, {%r18616, %r18615};
	shf.r.wrap.b32 	%r18617, %r18614, %r18613, 18;
	shf.r.wrap.b32 	%r18618, %r18613, %r18614, 18;
	mov.b64 	%rd3477, {%r18618, %r18617};
	xor.b64  	%rd3478, %rd3477, %rd3476;
	shf.l.wrap.b32 	%r18619, %r18613, %r18614, 23;
	shf.l.wrap.b32 	%r18620, %r18614, %r18613, 23;
	mov.b64 	%rd3479, {%r18620, %r18619};
	xor.b64  	%rd3480, %rd3478, %rd3479;
	xor.b64  	%rd3481, %rd3440, %rd3416;
	and.b64  	%rd3482, %rd3464, %rd3481;
	xor.b64  	%rd3483, %rd3482, %rd3416;
	add.s64 	%rd3484, %rd3392, %rd4473;
	add.s64 	%rd3485, %rd3484, %rd6;
	add.s64 	%rd3486, %rd3485, %rd3483;
	add.s64 	%rd3487, %rd3486, %rd3480;
	add.s64 	%rd3488, %rd3487, %rd3403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18621,%dummy}, %rd3475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18622}, %rd3475;
	}
	shf.r.wrap.b32 	%r18623, %r18622, %r18621, 28;
	shf.r.wrap.b32 	%r18624, %r18621, %r18622, 28;
	mov.b64 	%rd3489, {%r18624, %r18623};
	shf.l.wrap.b32 	%r18625, %r18621, %r18622, 30;
	shf.l.wrap.b32 	%r18626, %r18622, %r18621, 30;
	mov.b64 	%rd3490, {%r18626, %r18625};
	xor.b64  	%rd3491, %rd3490, %rd3489;
	shf.l.wrap.b32 	%r18627, %r18621, %r18622, 25;
	shf.l.wrap.b32 	%r18628, %r18622, %r18621, 25;
	mov.b64 	%rd3492, {%r18628, %r18627};
	xor.b64  	%rd3493, %rd3491, %rd3492;
	and.b64  	%rd3494, %rd3475, %rd3451;
	xor.b64  	%rd3495, %rd3475, %rd3451;
	and.b64  	%rd3496, %rd3495, %rd3427;
	or.b64  	%rd3497, %rd3496, %rd3494;
	add.s64 	%rd3498, %rd3487, %rd3497;
	add.s64 	%rd3499, %rd3498, %rd3493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18629,%dummy}, %rd3488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18630}, %rd3488;
	}
	shf.r.wrap.b32 	%r18631, %r18630, %r18629, 14;
	shf.r.wrap.b32 	%r18632, %r18629, %r18630, 14;
	mov.b64 	%rd3500, {%r18632, %r18631};
	shf.r.wrap.b32 	%r18633, %r18630, %r18629, 18;
	shf.r.wrap.b32 	%r18634, %r18629, %r18630, 18;
	mov.b64 	%rd3501, {%r18634, %r18633};
	xor.b64  	%rd3502, %rd3501, %rd3500;
	shf.l.wrap.b32 	%r18635, %r18629, %r18630, 23;
	shf.l.wrap.b32 	%r18636, %r18630, %r18629, 23;
	mov.b64 	%rd3503, {%r18636, %r18635};
	xor.b64  	%rd3504, %rd3502, %rd3503;
	xor.b64  	%rd3505, %rd3464, %rd3440;
	and.b64  	%rd3506, %rd3488, %rd3505;
	xor.b64  	%rd3507, %rd3506, %rd3440;
	add.s64 	%rd3508, %rd3416, %rd4474;
	add.s64 	%rd3509, %rd3508, %rd7;
	add.s64 	%rd3510, %rd3509, %rd3507;
	add.s64 	%rd3511, %rd3510, %rd3504;
	add.s64 	%rd3512, %rd3511, %rd3427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18637,%dummy}, %rd3499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18638}, %rd3499;
	}
	shf.r.wrap.b32 	%r18639, %r18638, %r18637, 28;
	shf.r.wrap.b32 	%r18640, %r18637, %r18638, 28;
	mov.b64 	%rd3513, {%r18640, %r18639};
	shf.l.wrap.b32 	%r18641, %r18637, %r18638, 30;
	shf.l.wrap.b32 	%r18642, %r18638, %r18637, 30;
	mov.b64 	%rd3514, {%r18642, %r18641};
	xor.b64  	%rd3515, %rd3514, %rd3513;
	shf.l.wrap.b32 	%r18643, %r18637, %r18638, 25;
	shf.l.wrap.b32 	%r18644, %r18638, %r18637, 25;
	mov.b64 	%rd3516, {%r18644, %r18643};
	xor.b64  	%rd3517, %rd3515, %rd3516;
	and.b64  	%rd3518, %rd3499, %rd3475;
	xor.b64  	%rd3519, %rd3499, %rd3475;
	and.b64  	%rd3520, %rd3519, %rd3451;
	or.b64  	%rd3521, %rd3520, %rd3518;
	add.s64 	%rd3522, %rd3511, %rd3521;
	add.s64 	%rd3523, %rd3522, %rd3517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18645,%dummy}, %rd3512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18646}, %rd3512;
	}
	shf.r.wrap.b32 	%r18647, %r18646, %r18645, 14;
	shf.r.wrap.b32 	%r18648, %r18645, %r18646, 14;
	mov.b64 	%rd3524, {%r18648, %r18647};
	shf.r.wrap.b32 	%r18649, %r18646, %r18645, 18;
	shf.r.wrap.b32 	%r18650, %r18645, %r18646, 18;
	mov.b64 	%rd3525, {%r18650, %r18649};
	xor.b64  	%rd3526, %rd3525, %rd3524;
	shf.l.wrap.b32 	%r18651, %r18645, %r18646, 23;
	shf.l.wrap.b32 	%r18652, %r18646, %r18645, 23;
	mov.b64 	%rd3527, {%r18652, %r18651};
	xor.b64  	%rd3528, %rd3526, %rd3527;
	xor.b64  	%rd3529, %rd3488, %rd3464;
	and.b64  	%rd3530, %rd3512, %rd3529;
	xor.b64  	%rd3531, %rd3530, %rd3464;
	add.s64 	%rd3532, %rd3440, %rd4475;
	add.s64 	%rd3533, %rd3532, %rd8;
	add.s64 	%rd3534, %rd3533, %rd3531;
	add.s64 	%rd3535, %rd3534, %rd3528;
	add.s64 	%rd3536, %rd3535, %rd3451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18653,%dummy}, %rd3523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18654}, %rd3523;
	}
	shf.r.wrap.b32 	%r18655, %r18654, %r18653, 28;
	shf.r.wrap.b32 	%r18656, %r18653, %r18654, 28;
	mov.b64 	%rd3537, {%r18656, %r18655};
	shf.l.wrap.b32 	%r18657, %r18653, %r18654, 30;
	shf.l.wrap.b32 	%r18658, %r18654, %r18653, 30;
	mov.b64 	%rd3538, {%r18658, %r18657};
	xor.b64  	%rd3539, %rd3538, %rd3537;
	shf.l.wrap.b32 	%r18659, %r18653, %r18654, 25;
	shf.l.wrap.b32 	%r18660, %r18654, %r18653, 25;
	mov.b64 	%rd3540, {%r18660, %r18659};
	xor.b64  	%rd3541, %rd3539, %rd3540;
	and.b64  	%rd3542, %rd3523, %rd3499;
	xor.b64  	%rd3543, %rd3523, %rd3499;
	and.b64  	%rd3544, %rd3543, %rd3475;
	or.b64  	%rd3545, %rd3544, %rd3542;
	add.s64 	%rd3546, %rd3535, %rd3545;
	add.s64 	%rd3547, %rd3546, %rd3541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18661,%dummy}, %rd3536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18662}, %rd3536;
	}
	shf.r.wrap.b32 	%r18663, %r18662, %r18661, 14;
	shf.r.wrap.b32 	%r18664, %r18661, %r18662, 14;
	mov.b64 	%rd3548, {%r18664, %r18663};
	shf.r.wrap.b32 	%r18665, %r18662, %r18661, 18;
	shf.r.wrap.b32 	%r18666, %r18661, %r18662, 18;
	mov.b64 	%rd3549, {%r18666, %r18665};
	xor.b64  	%rd3550, %rd3549, %rd3548;
	shf.l.wrap.b32 	%r18667, %r18661, %r18662, 23;
	shf.l.wrap.b32 	%r18668, %r18662, %r18661, 23;
	mov.b64 	%rd3551, {%r18668, %r18667};
	xor.b64  	%rd3552, %rd3550, %rd3551;
	xor.b64  	%rd3553, %rd3512, %rd3488;
	and.b64  	%rd3554, %rd3536, %rd3553;
	xor.b64  	%rd3555, %rd3554, %rd3488;
	add.s64 	%rd3556, %rd3464, %rd4476;
	add.s64 	%rd3557, %rd3556, %rd9;
	add.s64 	%rd3558, %rd3557, %rd3555;
	add.s64 	%rd3559, %rd3558, %rd3552;
	add.s64 	%rd3560, %rd3559, %rd3475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18669,%dummy}, %rd3547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18670}, %rd3547;
	}
	shf.r.wrap.b32 	%r18671, %r18670, %r18669, 28;
	shf.r.wrap.b32 	%r18672, %r18669, %r18670, 28;
	mov.b64 	%rd3561, {%r18672, %r18671};
	shf.l.wrap.b32 	%r18673, %r18669, %r18670, 30;
	shf.l.wrap.b32 	%r18674, %r18670, %r18669, 30;
	mov.b64 	%rd3562, {%r18674, %r18673};
	xor.b64  	%rd3563, %rd3562, %rd3561;
	shf.l.wrap.b32 	%r18675, %r18669, %r18670, 25;
	shf.l.wrap.b32 	%r18676, %r18670, %r18669, 25;
	mov.b64 	%rd3564, {%r18676, %r18675};
	xor.b64  	%rd3565, %rd3563, %rd3564;
	and.b64  	%rd3566, %rd3547, %rd3523;
	xor.b64  	%rd3567, %rd3547, %rd3523;
	and.b64  	%rd3568, %rd3567, %rd3499;
	or.b64  	%rd3569, %rd3568, %rd3566;
	add.s64 	%rd3570, %rd3559, %rd3569;
	add.s64 	%rd3571, %rd3570, %rd3565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18677,%dummy}, %rd3560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18678}, %rd3560;
	}
	shf.r.wrap.b32 	%r18679, %r18678, %r18677, 14;
	shf.r.wrap.b32 	%r18680, %r18677, %r18678, 14;
	mov.b64 	%rd3572, {%r18680, %r18679};
	shf.r.wrap.b32 	%r18681, %r18678, %r18677, 18;
	shf.r.wrap.b32 	%r18682, %r18677, %r18678, 18;
	mov.b64 	%rd3573, {%r18682, %r18681};
	xor.b64  	%rd3574, %rd3573, %rd3572;
	shf.l.wrap.b32 	%r18683, %r18677, %r18678, 23;
	shf.l.wrap.b32 	%r18684, %r18678, %r18677, 23;
	mov.b64 	%rd3575, {%r18684, %r18683};
	xor.b64  	%rd3576, %rd3574, %rd3575;
	xor.b64  	%rd3577, %rd3536, %rd3512;
	and.b64  	%rd3578, %rd3560, %rd3577;
	xor.b64  	%rd3579, %rd3578, %rd3512;
	add.s64 	%rd3580, %rd3488, %rd4460;
	add.s64 	%rd3581, %rd3580, %rd10;
	add.s64 	%rd3582, %rd3581, %rd3579;
	add.s64 	%rd3583, %rd3582, %rd3576;
	add.s64 	%rd3584, %rd3583, %rd3499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18685,%dummy}, %rd3571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18686}, %rd3571;
	}
	shf.r.wrap.b32 	%r18687, %r18686, %r18685, 28;
	shf.r.wrap.b32 	%r18688, %r18685, %r18686, 28;
	mov.b64 	%rd3585, {%r18688, %r18687};
	shf.l.wrap.b32 	%r18689, %r18685, %r18686, 30;
	shf.l.wrap.b32 	%r18690, %r18686, %r18685, 30;
	mov.b64 	%rd3586, {%r18690, %r18689};
	xor.b64  	%rd3587, %rd3586, %rd3585;
	shf.l.wrap.b32 	%r18691, %r18685, %r18686, 25;
	shf.l.wrap.b32 	%r18692, %r18686, %r18685, 25;
	mov.b64 	%rd3588, {%r18692, %r18691};
	xor.b64  	%rd3589, %rd3587, %rd3588;
	and.b64  	%rd3590, %rd3571, %rd3547;
	xor.b64  	%rd3591, %rd3571, %rd3547;
	and.b64  	%rd3592, %rd3591, %rd3523;
	or.b64  	%rd3593, %rd3592, %rd3590;
	add.s64 	%rd3594, %rd3583, %rd3593;
	add.s64 	%rd3595, %rd3594, %rd3589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18693,%dummy}, %rd3584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18694}, %rd3584;
	}
	shf.r.wrap.b32 	%r18695, %r18694, %r18693, 14;
	shf.r.wrap.b32 	%r18696, %r18693, %r18694, 14;
	mov.b64 	%rd3596, {%r18696, %r18695};
	shf.r.wrap.b32 	%r18697, %r18694, %r18693, 18;
	shf.r.wrap.b32 	%r18698, %r18693, %r18694, 18;
	mov.b64 	%rd3597, {%r18698, %r18697};
	xor.b64  	%rd3598, %rd3597, %rd3596;
	shf.l.wrap.b32 	%r18699, %r18693, %r18694, 23;
	shf.l.wrap.b32 	%r18700, %r18694, %r18693, 23;
	mov.b64 	%rd3599, {%r18700, %r18699};
	xor.b64  	%rd3600, %rd3598, %rd3599;
	xor.b64  	%rd3601, %rd3560, %rd3536;
	and.b64  	%rd3602, %rd3584, %rd3601;
	xor.b64  	%rd3603, %rd3602, %rd3536;
	add.s64 	%rd3604, %rd3512, %rd4459;
	add.s64 	%rd3605, %rd3604, %rd11;
	add.s64 	%rd3606, %rd3605, %rd3603;
	add.s64 	%rd3607, %rd3606, %rd3600;
	add.s64 	%rd3608, %rd3607, %rd3523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18701,%dummy}, %rd3595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18702}, %rd3595;
	}
	shf.r.wrap.b32 	%r18703, %r18702, %r18701, 28;
	shf.r.wrap.b32 	%r18704, %r18701, %r18702, 28;
	mov.b64 	%rd3609, {%r18704, %r18703};
	shf.l.wrap.b32 	%r18705, %r18701, %r18702, 30;
	shf.l.wrap.b32 	%r18706, %r18702, %r18701, 30;
	mov.b64 	%rd3610, {%r18706, %r18705};
	xor.b64  	%rd3611, %rd3610, %rd3609;
	shf.l.wrap.b32 	%r18707, %r18701, %r18702, 25;
	shf.l.wrap.b32 	%r18708, %r18702, %r18701, 25;
	mov.b64 	%rd3612, {%r18708, %r18707};
	xor.b64  	%rd3613, %rd3611, %rd3612;
	and.b64  	%rd3614, %rd3595, %rd3571;
	xor.b64  	%rd3615, %rd3595, %rd3571;
	and.b64  	%rd3616, %rd3615, %rd3547;
	or.b64  	%rd3617, %rd3616, %rd3614;
	add.s64 	%rd3618, %rd3607, %rd3617;
	add.s64 	%rd3619, %rd3618, %rd3613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18709,%dummy}, %rd3608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18710}, %rd3608;
	}
	shf.r.wrap.b32 	%r18711, %r18710, %r18709, 14;
	shf.r.wrap.b32 	%r18712, %r18709, %r18710, 14;
	mov.b64 	%rd3620, {%r18712, %r18711};
	shf.r.wrap.b32 	%r18713, %r18710, %r18709, 18;
	shf.r.wrap.b32 	%r18714, %r18709, %r18710, 18;
	mov.b64 	%rd3621, {%r18714, %r18713};
	xor.b64  	%rd3622, %rd3621, %rd3620;
	shf.l.wrap.b32 	%r18715, %r18709, %r18710, 23;
	shf.l.wrap.b32 	%r18716, %r18710, %r18709, 23;
	mov.b64 	%rd3623, {%r18716, %r18715};
	xor.b64  	%rd3624, %rd3622, %rd3623;
	xor.b64  	%rd3625, %rd3584, %rd3560;
	and.b64  	%rd3626, %rd3608, %rd3625;
	xor.b64  	%rd3627, %rd3626, %rd3560;
	add.s64 	%rd3628, %rd3536, %rd4458;
	add.s64 	%rd3629, %rd3628, %rd12;
	add.s64 	%rd3630, %rd3629, %rd3627;
	add.s64 	%rd3631, %rd3630, %rd3624;
	add.s64 	%rd3632, %rd3631, %rd3547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18717,%dummy}, %rd3619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18718}, %rd3619;
	}
	shf.r.wrap.b32 	%r18719, %r18718, %r18717, 28;
	shf.r.wrap.b32 	%r18720, %r18717, %r18718, 28;
	mov.b64 	%rd3633, {%r18720, %r18719};
	shf.l.wrap.b32 	%r18721, %r18717, %r18718, 30;
	shf.l.wrap.b32 	%r18722, %r18718, %r18717, 30;
	mov.b64 	%rd3634, {%r18722, %r18721};
	xor.b64  	%rd3635, %rd3634, %rd3633;
	shf.l.wrap.b32 	%r18723, %r18717, %r18718, 25;
	shf.l.wrap.b32 	%r18724, %r18718, %r18717, 25;
	mov.b64 	%rd3636, {%r18724, %r18723};
	xor.b64  	%rd3637, %rd3635, %rd3636;
	and.b64  	%rd3638, %rd3619, %rd3595;
	xor.b64  	%rd3639, %rd3619, %rd3595;
	and.b64  	%rd3640, %rd3639, %rd3571;
	or.b64  	%rd3641, %rd3640, %rd3638;
	add.s64 	%rd3642, %rd3631, %rd3641;
	add.s64 	%rd3643, %rd3642, %rd3637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18725,%dummy}, %rd3632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18726}, %rd3632;
	}
	shf.r.wrap.b32 	%r18727, %r18726, %r18725, 14;
	shf.r.wrap.b32 	%r18728, %r18725, %r18726, 14;
	mov.b64 	%rd3644, {%r18728, %r18727};
	shf.r.wrap.b32 	%r18729, %r18726, %r18725, 18;
	shf.r.wrap.b32 	%r18730, %r18725, %r18726, 18;
	mov.b64 	%rd3645, {%r18730, %r18729};
	xor.b64  	%rd3646, %rd3645, %rd3644;
	shf.l.wrap.b32 	%r18731, %r18725, %r18726, 23;
	shf.l.wrap.b32 	%r18732, %r18726, %r18725, 23;
	mov.b64 	%rd3647, {%r18732, %r18731};
	xor.b64  	%rd3648, %rd3646, %rd3647;
	xor.b64  	%rd3649, %rd3608, %rd3584;
	and.b64  	%rd3650, %rd3632, %rd3649;
	xor.b64  	%rd3651, %rd3650, %rd3584;
	add.s64 	%rd3652, %rd3560, %rd4457;
	add.s64 	%rd3653, %rd3652, %rd13;
	add.s64 	%rd3654, %rd3653, %rd3651;
	add.s64 	%rd3655, %rd3654, %rd3648;
	add.s64 	%rd3656, %rd3655, %rd3571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18733,%dummy}, %rd3643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18734}, %rd3643;
	}
	shf.r.wrap.b32 	%r18735, %r18734, %r18733, 28;
	shf.r.wrap.b32 	%r18736, %r18733, %r18734, 28;
	mov.b64 	%rd3657, {%r18736, %r18735};
	shf.l.wrap.b32 	%r18737, %r18733, %r18734, 30;
	shf.l.wrap.b32 	%r18738, %r18734, %r18733, 30;
	mov.b64 	%rd3658, {%r18738, %r18737};
	xor.b64  	%rd3659, %rd3658, %rd3657;
	shf.l.wrap.b32 	%r18739, %r18733, %r18734, 25;
	shf.l.wrap.b32 	%r18740, %r18734, %r18733, 25;
	mov.b64 	%rd3660, {%r18740, %r18739};
	xor.b64  	%rd3661, %rd3659, %rd3660;
	and.b64  	%rd3662, %rd3643, %rd3619;
	xor.b64  	%rd3663, %rd3643, %rd3619;
	and.b64  	%rd3664, %rd3663, %rd3595;
	or.b64  	%rd3665, %rd3664, %rd3662;
	add.s64 	%rd3666, %rd3655, %rd3665;
	add.s64 	%rd3667, %rd3666, %rd3661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18741,%dummy}, %rd3656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18742}, %rd3656;
	}
	shf.r.wrap.b32 	%r18743, %r18742, %r18741, 14;
	shf.r.wrap.b32 	%r18744, %r18741, %r18742, 14;
	mov.b64 	%rd3668, {%r18744, %r18743};
	shf.r.wrap.b32 	%r18745, %r18742, %r18741, 18;
	shf.r.wrap.b32 	%r18746, %r18741, %r18742, 18;
	mov.b64 	%rd3669, {%r18746, %r18745};
	xor.b64  	%rd3670, %rd3669, %rd3668;
	shf.l.wrap.b32 	%r18747, %r18741, %r18742, 23;
	shf.l.wrap.b32 	%r18748, %r18742, %r18741, 23;
	mov.b64 	%rd3671, {%r18748, %r18747};
	xor.b64  	%rd3672, %rd3670, %rd3671;
	xor.b64  	%rd3673, %rd3632, %rd3608;
	and.b64  	%rd3674, %rd3656, %rd3673;
	xor.b64  	%rd3675, %rd3674, %rd3608;
	add.s64 	%rd3676, %rd3584, %rd4456;
	add.s64 	%rd3677, %rd3676, %rd14;
	add.s64 	%rd3678, %rd3677, %rd3675;
	add.s64 	%rd3679, %rd3678, %rd3672;
	add.s64 	%rd4468, %rd3679, %rd3595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18749,%dummy}, %rd3667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18750}, %rd3667;
	}
	shf.r.wrap.b32 	%r18751, %r18750, %r18749, 28;
	shf.r.wrap.b32 	%r18752, %r18749, %r18750, 28;
	mov.b64 	%rd3680, {%r18752, %r18751};
	shf.l.wrap.b32 	%r18753, %r18749, %r18750, 30;
	shf.l.wrap.b32 	%r18754, %r18750, %r18749, 30;
	mov.b64 	%rd3681, {%r18754, %r18753};
	xor.b64  	%rd3682, %rd3681, %rd3680;
	shf.l.wrap.b32 	%r18755, %r18749, %r18750, 25;
	shf.l.wrap.b32 	%r18756, %r18750, %r18749, 25;
	mov.b64 	%rd3683, {%r18756, %r18755};
	xor.b64  	%rd3684, %rd3682, %rd3683;
	and.b64  	%rd3685, %rd3667, %rd3643;
	xor.b64  	%rd3686, %rd3667, %rd3643;
	and.b64  	%rd3687, %rd3686, %rd3619;
	or.b64  	%rd3688, %rd3687, %rd3685;
	add.s64 	%rd3689, %rd3679, %rd3688;
	add.s64 	%rd4464, %rd3689, %rd3684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18757,%dummy}, %rd4468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18758}, %rd4468;
	}
	shf.r.wrap.b32 	%r18759, %r18758, %r18757, 14;
	shf.r.wrap.b32 	%r18760, %r18757, %r18758, 14;
	mov.b64 	%rd3690, {%r18760, %r18759};
	shf.r.wrap.b32 	%r18761, %r18758, %r18757, 18;
	shf.r.wrap.b32 	%r18762, %r18757, %r18758, 18;
	mov.b64 	%rd3691, {%r18762, %r18761};
	xor.b64  	%rd3692, %rd3691, %rd3690;
	shf.l.wrap.b32 	%r18763, %r18757, %r18758, 23;
	shf.l.wrap.b32 	%r18764, %r18758, %r18757, 23;
	mov.b64 	%rd3693, {%r18764, %r18763};
	xor.b64  	%rd3694, %rd3692, %rd3693;
	xor.b64  	%rd3695, %rd3656, %rd3632;
	and.b64  	%rd3696, %rd4468, %rd3695;
	xor.b64  	%rd3697, %rd3696, %rd3632;
	add.s64 	%rd3698, %rd3608, %rd4455;
	add.s64 	%rd3699, %rd3698, %rd15;
	add.s64 	%rd3700, %rd3699, %rd3697;
	add.s64 	%rd3701, %rd3700, %rd3694;
	add.s64 	%rd4467, %rd3701, %rd3619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18765,%dummy}, %rd4464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18766}, %rd4464;
	}
	shf.r.wrap.b32 	%r18767, %r18766, %r18765, 28;
	shf.r.wrap.b32 	%r18768, %r18765, %r18766, 28;
	mov.b64 	%rd3702, {%r18768, %r18767};
	shf.l.wrap.b32 	%r18769, %r18765, %r18766, 30;
	shf.l.wrap.b32 	%r18770, %r18766, %r18765, 30;
	mov.b64 	%rd3703, {%r18770, %r18769};
	xor.b64  	%rd3704, %rd3703, %rd3702;
	shf.l.wrap.b32 	%r18771, %r18765, %r18766, 25;
	shf.l.wrap.b32 	%r18772, %r18766, %r18765, 25;
	mov.b64 	%rd3705, {%r18772, %r18771};
	xor.b64  	%rd3706, %rd3704, %rd3705;
	and.b64  	%rd3707, %rd4464, %rd3667;
	xor.b64  	%rd3708, %rd4464, %rd3667;
	and.b64  	%rd3709, %rd3708, %rd3643;
	or.b64  	%rd3710, %rd3709, %rd3707;
	add.s64 	%rd3711, %rd3701, %rd3710;
	add.s64 	%rd4463, %rd3711, %rd3706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18773,%dummy}, %rd4467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18774}, %rd4467;
	}
	shf.r.wrap.b32 	%r18775, %r18774, %r18773, 14;
	shf.r.wrap.b32 	%r18776, %r18773, %r18774, 14;
	mov.b64 	%rd3712, {%r18776, %r18775};
	shf.r.wrap.b32 	%r18777, %r18774, %r18773, 18;
	shf.r.wrap.b32 	%r18778, %r18773, %r18774, 18;
	mov.b64 	%rd3713, {%r18778, %r18777};
	xor.b64  	%rd3714, %rd3713, %rd3712;
	shf.l.wrap.b32 	%r18779, %r18773, %r18774, 23;
	shf.l.wrap.b32 	%r18780, %r18774, %r18773, 23;
	mov.b64 	%rd3715, {%r18780, %r18779};
	xor.b64  	%rd3716, %rd3714, %rd3715;
	xor.b64  	%rd3717, %rd4468, %rd3656;
	and.b64  	%rd3718, %rd4467, %rd3717;
	xor.b64  	%rd3719, %rd3718, %rd3656;
	add.s64 	%rd3720, %rd3632, %rd4454;
	add.s64 	%rd3721, %rd3720, %rd16;
	add.s64 	%rd3722, %rd3721, %rd3719;
	add.s64 	%rd3723, %rd3722, %rd3716;
	add.s64 	%rd4466, %rd3723, %rd3643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18781,%dummy}, %rd4463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18782}, %rd4463;
	}
	shf.r.wrap.b32 	%r18783, %r18782, %r18781, 28;
	shf.r.wrap.b32 	%r18784, %r18781, %r18782, 28;
	mov.b64 	%rd3724, {%r18784, %r18783};
	shf.l.wrap.b32 	%r18785, %r18781, %r18782, 30;
	shf.l.wrap.b32 	%r18786, %r18782, %r18781, 30;
	mov.b64 	%rd3725, {%r18786, %r18785};
	xor.b64  	%rd3726, %rd3725, %rd3724;
	shf.l.wrap.b32 	%r18787, %r18781, %r18782, 25;
	shf.l.wrap.b32 	%r18788, %r18782, %r18781, 25;
	mov.b64 	%rd3727, {%r18788, %r18787};
	xor.b64  	%rd3728, %rd3726, %rd3727;
	and.b64  	%rd3729, %rd4463, %rd4464;
	xor.b64  	%rd3730, %rd4463, %rd4464;
	and.b64  	%rd3731, %rd3730, %rd3667;
	or.b64  	%rd3732, %rd3731, %rd3729;
	add.s64 	%rd3733, %rd3723, %rd3732;
	add.s64 	%rd4462, %rd3733, %rd3728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18789,%dummy}, %rd4466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18790}, %rd4466;
	}
	shf.r.wrap.b32 	%r18791, %r18790, %r18789, 14;
	shf.r.wrap.b32 	%r18792, %r18789, %r18790, 14;
	mov.b64 	%rd3734, {%r18792, %r18791};
	shf.r.wrap.b32 	%r18793, %r18790, %r18789, 18;
	shf.r.wrap.b32 	%r18794, %r18789, %r18790, 18;
	mov.b64 	%rd3735, {%r18794, %r18793};
	xor.b64  	%rd3736, %rd3735, %rd3734;
	shf.l.wrap.b32 	%r18795, %r18789, %r18790, 23;
	shf.l.wrap.b32 	%r18796, %r18790, %r18789, 23;
	mov.b64 	%rd3737, {%r18796, %r18795};
	xor.b64  	%rd3738, %rd3736, %rd3737;
	xor.b64  	%rd3739, %rd4467, %rd4468;
	and.b64  	%rd3740, %rd4466, %rd3739;
	xor.b64  	%rd3741, %rd3740, %rd4468;
	add.s64 	%rd3742, %rd3656, %rd4453;
	add.s64 	%rd3743, %rd3742, %rd17;
	add.s64 	%rd3744, %rd3743, %rd3741;
	add.s64 	%rd3745, %rd3744, %rd3738;
	add.s64 	%rd4465, %rd3745, %rd3667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18797,%dummy}, %rd4462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18798}, %rd4462;
	}
	shf.r.wrap.b32 	%r18799, %r18798, %r18797, 28;
	shf.r.wrap.b32 	%r18800, %r18797, %r18798, 28;
	mov.b64 	%rd3746, {%r18800, %r18799};
	shf.l.wrap.b32 	%r18801, %r18797, %r18798, 30;
	shf.l.wrap.b32 	%r18802, %r18798, %r18797, 30;
	mov.b64 	%rd3747, {%r18802, %r18801};
	xor.b64  	%rd3748, %rd3747, %rd3746;
	shf.l.wrap.b32 	%r18803, %r18797, %r18798, 25;
	shf.l.wrap.b32 	%r18804, %r18798, %r18797, 25;
	mov.b64 	%rd3749, {%r18804, %r18803};
	xor.b64  	%rd3750, %rd3748, %rd3749;
	and.b64  	%rd3751, %rd4462, %rd4463;
	xor.b64  	%rd3752, %rd4462, %rd4463;
	and.b64  	%rd3753, %rd3752, %rd4464;
	or.b64  	%rd3754, %rd3753, %rd3751;
	add.s64 	%rd3755, %rd3745, %rd3754;
	add.s64 	%rd4461, %rd3755, %rd3750;
	mov.u32 	%r19459, 16;

BB2_307:
	shr.u64 	%rd3756, %rd4454, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18805,%dummy}, %rd4454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18806}, %rd4454;
	}
	shf.r.wrap.b32 	%r18807, %r18806, %r18805, 19;
	shf.r.wrap.b32 	%r18808, %r18805, %r18806, 19;
	mov.b64 	%rd3757, {%r18808, %r18807};
	xor.b64  	%rd3758, %rd3757, %rd3756;
	shf.l.wrap.b32 	%r18809, %r18805, %r18806, 3;
	shf.l.wrap.b32 	%r18810, %r18806, %r18805, 3;
	mov.b64 	%rd3759, {%r18810, %r18809};
	xor.b64  	%rd3760, %rd3758, %rd3759;
	shr.u64 	%rd3761, %rd4470, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18811,%dummy}, %rd4470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18812}, %rd4470;
	}
	shf.r.wrap.b32 	%r18813, %r18812, %r18811, 1;
	shf.r.wrap.b32 	%r18814, %r18811, %r18812, 1;
	mov.b64 	%rd3762, {%r18814, %r18813};
	xor.b64  	%rd3763, %rd3762, %rd3761;
	shf.r.wrap.b32 	%r18815, %r18812, %r18811, 8;
	shf.r.wrap.b32 	%r18816, %r18811, %r18812, 8;
	mov.b64 	%rd3764, {%r18816, %r18815};
	xor.b64  	%rd3765, %rd3763, %rd3764;
	add.s64 	%rd3766, %rd4459, %rd4469;
	add.s64 	%rd3767, %rd3766, %rd3760;
	add.s64 	%rd4469, %rd3767, %rd3765;
	shr.u64 	%rd3768, %rd4453, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18817,%dummy}, %rd4453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18818}, %rd4453;
	}
	shf.r.wrap.b32 	%r18819, %r18818, %r18817, 19;
	shf.r.wrap.b32 	%r18820, %r18817, %r18818, 19;
	mov.b64 	%rd3769, {%r18820, %r18819};
	xor.b64  	%rd3770, %rd3769, %rd3768;
	shf.l.wrap.b32 	%r18821, %r18817, %r18818, 3;
	shf.l.wrap.b32 	%r18822, %r18818, %r18817, 3;
	mov.b64 	%rd3771, {%r18822, %r18821};
	xor.b64  	%rd3772, %rd3770, %rd3771;
	shr.u64 	%rd3773, %rd4471, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18823,%dummy}, %rd4471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18824}, %rd4471;
	}
	shf.r.wrap.b32 	%r18825, %r18824, %r18823, 1;
	shf.r.wrap.b32 	%r18826, %r18823, %r18824, 1;
	mov.b64 	%rd3774, {%r18826, %r18825};
	xor.b64  	%rd3775, %rd3774, %rd3773;
	shf.r.wrap.b32 	%r18827, %r18824, %r18823, 8;
	shf.r.wrap.b32 	%r18828, %r18823, %r18824, 8;
	mov.b64 	%rd3776, {%r18828, %r18827};
	xor.b64  	%rd3777, %rd3775, %rd3776;
	add.s64 	%rd3778, %rd4458, %rd4470;
	add.s64 	%rd3779, %rd3778, %rd3772;
	add.s64 	%rd4470, %rd3779, %rd3777;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18829,%dummy}, %rd4469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18830}, %rd4469;
	}
	shf.r.wrap.b32 	%r18831, %r18830, %r18829, 19;
	shf.r.wrap.b32 	%r18832, %r18829, %r18830, 19;
	mov.b64 	%rd3780, {%r18832, %r18831};
	shf.l.wrap.b32 	%r18833, %r18829, %r18830, 3;
	shf.l.wrap.b32 	%r18834, %r18830, %r18829, 3;
	mov.b64 	%rd3781, {%r18834, %r18833};
	shr.u64 	%rd3782, %rd4469, 6;
	xor.b64  	%rd3783, %rd3780, %rd3782;
	xor.b64  	%rd3784, %rd3783, %rd3781;
	shr.u64 	%rd3785, %rd4472, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18835,%dummy}, %rd4472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18836}, %rd4472;
	}
	shf.r.wrap.b32 	%r18837, %r18836, %r18835, 1;
	shf.r.wrap.b32 	%r18838, %r18835, %r18836, 1;
	mov.b64 	%rd3786, {%r18838, %r18837};
	xor.b64  	%rd3787, %rd3786, %rd3785;
	shf.r.wrap.b32 	%r18839, %r18836, %r18835, 8;
	shf.r.wrap.b32 	%r18840, %r18835, %r18836, 8;
	mov.b64 	%rd3788, {%r18840, %r18839};
	xor.b64  	%rd3789, %rd3787, %rd3788;
	add.s64 	%rd3790, %rd4457, %rd4471;
	add.s64 	%rd3791, %rd3790, %rd3784;
	add.s64 	%rd4471, %rd3791, %rd3789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18841,%dummy}, %rd4470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18842}, %rd4470;
	}
	shf.r.wrap.b32 	%r18843, %r18842, %r18841, 19;
	shf.r.wrap.b32 	%r18844, %r18841, %r18842, 19;
	mov.b64 	%rd3792, {%r18844, %r18843};
	shf.l.wrap.b32 	%r18845, %r18841, %r18842, 3;
	shf.l.wrap.b32 	%r18846, %r18842, %r18841, 3;
	mov.b64 	%rd3793, {%r18846, %r18845};
	shr.u64 	%rd3794, %rd4470, 6;
	xor.b64  	%rd3795, %rd3792, %rd3794;
	xor.b64  	%rd3796, %rd3795, %rd3793;
	shr.u64 	%rd3797, %rd4473, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18847,%dummy}, %rd4473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18848}, %rd4473;
	}
	shf.r.wrap.b32 	%r18849, %r18848, %r18847, 1;
	shf.r.wrap.b32 	%r18850, %r18847, %r18848, 1;
	mov.b64 	%rd3798, {%r18850, %r18849};
	xor.b64  	%rd3799, %rd3798, %rd3797;
	shf.r.wrap.b32 	%r18851, %r18848, %r18847, 8;
	shf.r.wrap.b32 	%r18852, %r18847, %r18848, 8;
	mov.b64 	%rd3800, {%r18852, %r18851};
	xor.b64  	%rd3801, %rd3799, %rd3800;
	add.s64 	%rd3802, %rd4456, %rd4472;
	add.s64 	%rd3803, %rd3802, %rd3796;
	add.s64 	%rd4472, %rd3803, %rd3801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18853,%dummy}, %rd4471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18854}, %rd4471;
	}
	shf.r.wrap.b32 	%r18855, %r18854, %r18853, 19;
	shf.r.wrap.b32 	%r18856, %r18853, %r18854, 19;
	mov.b64 	%rd3804, {%r18856, %r18855};
	shf.l.wrap.b32 	%r18857, %r18853, %r18854, 3;
	shf.l.wrap.b32 	%r18858, %r18854, %r18853, 3;
	mov.b64 	%rd3805, {%r18858, %r18857};
	shr.u64 	%rd3806, %rd4471, 6;
	xor.b64  	%rd3807, %rd3804, %rd3806;
	xor.b64  	%rd3808, %rd3807, %rd3805;
	shr.u64 	%rd3809, %rd4474, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18859,%dummy}, %rd4474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18860}, %rd4474;
	}
	shf.r.wrap.b32 	%r18861, %r18860, %r18859, 1;
	shf.r.wrap.b32 	%r18862, %r18859, %r18860, 1;
	mov.b64 	%rd3810, {%r18862, %r18861};
	xor.b64  	%rd3811, %rd3810, %rd3809;
	shf.r.wrap.b32 	%r18863, %r18860, %r18859, 8;
	shf.r.wrap.b32 	%r18864, %r18859, %r18860, 8;
	mov.b64 	%rd3812, {%r18864, %r18863};
	xor.b64  	%rd3813, %rd3811, %rd3812;
	add.s64 	%rd3814, %rd4455, %rd4473;
	add.s64 	%rd3815, %rd3814, %rd3808;
	add.s64 	%rd4473, %rd3815, %rd3813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18865,%dummy}, %rd4472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18866}, %rd4472;
	}
	shf.r.wrap.b32 	%r18867, %r18866, %r18865, 19;
	shf.r.wrap.b32 	%r18868, %r18865, %r18866, 19;
	mov.b64 	%rd3816, {%r18868, %r18867};
	shf.l.wrap.b32 	%r18869, %r18865, %r18866, 3;
	shf.l.wrap.b32 	%r18870, %r18866, %r18865, 3;
	mov.b64 	%rd3817, {%r18870, %r18869};
	shr.u64 	%rd3818, %rd4472, 6;
	xor.b64  	%rd3819, %rd3816, %rd3818;
	xor.b64  	%rd3820, %rd3819, %rd3817;
	shr.u64 	%rd3821, %rd4475, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18871,%dummy}, %rd4475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18872}, %rd4475;
	}
	shf.r.wrap.b32 	%r18873, %r18872, %r18871, 1;
	shf.r.wrap.b32 	%r18874, %r18871, %r18872, 1;
	mov.b64 	%rd3822, {%r18874, %r18873};
	xor.b64  	%rd3823, %rd3822, %rd3821;
	shf.r.wrap.b32 	%r18875, %r18872, %r18871, 8;
	shf.r.wrap.b32 	%r18876, %r18871, %r18872, 8;
	mov.b64 	%rd3824, {%r18876, %r18875};
	xor.b64  	%rd3825, %rd3823, %rd3824;
	add.s64 	%rd3826, %rd4454, %rd4474;
	add.s64 	%rd3827, %rd3826, %rd3820;
	add.s64 	%rd4474, %rd3827, %rd3825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18877,%dummy}, %rd4473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18878}, %rd4473;
	}
	shf.r.wrap.b32 	%r18879, %r18878, %r18877, 19;
	shf.r.wrap.b32 	%r18880, %r18877, %r18878, 19;
	mov.b64 	%rd3828, {%r18880, %r18879};
	shf.l.wrap.b32 	%r18881, %r18877, %r18878, 3;
	shf.l.wrap.b32 	%r18882, %r18878, %r18877, 3;
	mov.b64 	%rd3829, {%r18882, %r18881};
	shr.u64 	%rd3830, %rd4473, 6;
	xor.b64  	%rd3831, %rd3828, %rd3830;
	xor.b64  	%rd3832, %rd3831, %rd3829;
	shr.u64 	%rd3833, %rd4476, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18883,%dummy}, %rd4476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18884}, %rd4476;
	}
	shf.r.wrap.b32 	%r18885, %r18884, %r18883, 1;
	shf.r.wrap.b32 	%r18886, %r18883, %r18884, 1;
	mov.b64 	%rd3834, {%r18886, %r18885};
	xor.b64  	%rd3835, %rd3834, %rd3833;
	shf.r.wrap.b32 	%r18887, %r18884, %r18883, 8;
	shf.r.wrap.b32 	%r18888, %r18883, %r18884, 8;
	mov.b64 	%rd3836, {%r18888, %r18887};
	xor.b64  	%rd3837, %rd3835, %rd3836;
	add.s64 	%rd3838, %rd4453, %rd4475;
	add.s64 	%rd3839, %rd3838, %rd3832;
	add.s64 	%rd4475, %rd3839, %rd3837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18889,%dummy}, %rd4474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18890}, %rd4474;
	}
	shf.r.wrap.b32 	%r18891, %r18890, %r18889, 19;
	shf.r.wrap.b32 	%r18892, %r18889, %r18890, 19;
	mov.b64 	%rd3840, {%r18892, %r18891};
	shf.l.wrap.b32 	%r18893, %r18889, %r18890, 3;
	shf.l.wrap.b32 	%r18894, %r18890, %r18889, 3;
	mov.b64 	%rd3841, {%r18894, %r18893};
	shr.u64 	%rd3842, %rd4474, 6;
	xor.b64  	%rd3843, %rd3840, %rd3842;
	xor.b64  	%rd3844, %rd3843, %rd3841;
	shr.u64 	%rd3845, %rd4460, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18895,%dummy}, %rd4460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18896}, %rd4460;
	}
	shf.r.wrap.b32 	%r18897, %r18896, %r18895, 1;
	shf.r.wrap.b32 	%r18898, %r18895, %r18896, 1;
	mov.b64 	%rd3846, {%r18898, %r18897};
	xor.b64  	%rd3847, %rd3846, %rd3845;
	shf.r.wrap.b32 	%r18899, %r18896, %r18895, 8;
	shf.r.wrap.b32 	%r18900, %r18895, %r18896, 8;
	mov.b64 	%rd3848, {%r18900, %r18899};
	xor.b64  	%rd3849, %rd3847, %rd3848;
	add.s64 	%rd3850, %rd4469, %rd4476;
	add.s64 	%rd3851, %rd3850, %rd3844;
	add.s64 	%rd4476, %rd3851, %rd3849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18901,%dummy}, %rd4475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18902}, %rd4475;
	}
	shf.r.wrap.b32 	%r18903, %r18902, %r18901, 19;
	shf.r.wrap.b32 	%r18904, %r18901, %r18902, 19;
	mov.b64 	%rd3852, {%r18904, %r18903};
	shf.l.wrap.b32 	%r18905, %r18901, %r18902, 3;
	shf.l.wrap.b32 	%r18906, %r18902, %r18901, 3;
	mov.b64 	%rd3853, {%r18906, %r18905};
	shr.u64 	%rd3854, %rd4475, 6;
	xor.b64  	%rd3855, %rd3852, %rd3854;
	xor.b64  	%rd3856, %rd3855, %rd3853;
	shr.u64 	%rd3857, %rd4459, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18907,%dummy}, %rd4459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18908}, %rd4459;
	}
	shf.r.wrap.b32 	%r18909, %r18908, %r18907, 1;
	shf.r.wrap.b32 	%r18910, %r18907, %r18908, 1;
	mov.b64 	%rd3858, {%r18910, %r18909};
	xor.b64  	%rd3859, %rd3858, %rd3857;
	shf.r.wrap.b32 	%r18911, %r18908, %r18907, 8;
	shf.r.wrap.b32 	%r18912, %r18907, %r18908, 8;
	mov.b64 	%rd3860, {%r18912, %r18911};
	xor.b64  	%rd3861, %rd3859, %rd3860;
	add.s64 	%rd3862, %rd4470, %rd4460;
	add.s64 	%rd3863, %rd3862, %rd3856;
	add.s64 	%rd4460, %rd3863, %rd3861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18913,%dummy}, %rd4476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18914}, %rd4476;
	}
	shf.r.wrap.b32 	%r18915, %r18914, %r18913, 19;
	shf.r.wrap.b32 	%r18916, %r18913, %r18914, 19;
	mov.b64 	%rd3864, {%r18916, %r18915};
	shf.l.wrap.b32 	%r18917, %r18913, %r18914, 3;
	shf.l.wrap.b32 	%r18918, %r18914, %r18913, 3;
	mov.b64 	%rd3865, {%r18918, %r18917};
	shr.u64 	%rd3866, %rd4476, 6;
	xor.b64  	%rd3867, %rd3864, %rd3866;
	xor.b64  	%rd3868, %rd3867, %rd3865;
	shr.u64 	%rd3869, %rd4458, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18919,%dummy}, %rd4458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18920}, %rd4458;
	}
	shf.r.wrap.b32 	%r18921, %r18920, %r18919, 1;
	shf.r.wrap.b32 	%r18922, %r18919, %r18920, 1;
	mov.b64 	%rd3870, {%r18922, %r18921};
	xor.b64  	%rd3871, %rd3870, %rd3869;
	shf.r.wrap.b32 	%r18923, %r18920, %r18919, 8;
	shf.r.wrap.b32 	%r18924, %r18919, %r18920, 8;
	mov.b64 	%rd3872, {%r18924, %r18923};
	xor.b64  	%rd3873, %rd3871, %rd3872;
	add.s64 	%rd3874, %rd4471, %rd4459;
	add.s64 	%rd3875, %rd3874, %rd3868;
	add.s64 	%rd4459, %rd3875, %rd3873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18925,%dummy}, %rd4460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18926}, %rd4460;
	}
	shf.r.wrap.b32 	%r18927, %r18926, %r18925, 19;
	shf.r.wrap.b32 	%r18928, %r18925, %r18926, 19;
	mov.b64 	%rd3876, {%r18928, %r18927};
	shf.l.wrap.b32 	%r18929, %r18925, %r18926, 3;
	shf.l.wrap.b32 	%r18930, %r18926, %r18925, 3;
	mov.b64 	%rd3877, {%r18930, %r18929};
	shr.u64 	%rd3878, %rd4460, 6;
	xor.b64  	%rd3879, %rd3876, %rd3878;
	xor.b64  	%rd3880, %rd3879, %rd3877;
	shr.u64 	%rd3881, %rd4457, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18931,%dummy}, %rd4457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18932}, %rd4457;
	}
	shf.r.wrap.b32 	%r18933, %r18932, %r18931, 1;
	shf.r.wrap.b32 	%r18934, %r18931, %r18932, 1;
	mov.b64 	%rd3882, {%r18934, %r18933};
	xor.b64  	%rd3883, %rd3882, %rd3881;
	shf.r.wrap.b32 	%r18935, %r18932, %r18931, 8;
	shf.r.wrap.b32 	%r18936, %r18931, %r18932, 8;
	mov.b64 	%rd3884, {%r18936, %r18935};
	xor.b64  	%rd3885, %rd3883, %rd3884;
	add.s64 	%rd3886, %rd4472, %rd4458;
	add.s64 	%rd3887, %rd3886, %rd3880;
	add.s64 	%rd4458, %rd3887, %rd3885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18937,%dummy}, %rd4459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18938}, %rd4459;
	}
	shf.r.wrap.b32 	%r18939, %r18938, %r18937, 19;
	shf.r.wrap.b32 	%r18940, %r18937, %r18938, 19;
	mov.b64 	%rd3888, {%r18940, %r18939};
	shf.l.wrap.b32 	%r18941, %r18937, %r18938, 3;
	shf.l.wrap.b32 	%r18942, %r18938, %r18937, 3;
	mov.b64 	%rd3889, {%r18942, %r18941};
	shr.u64 	%rd3890, %rd4459, 6;
	xor.b64  	%rd3891, %rd3888, %rd3890;
	xor.b64  	%rd3892, %rd3891, %rd3889;
	shr.u64 	%rd3893, %rd4456, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18943,%dummy}, %rd4456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18944}, %rd4456;
	}
	shf.r.wrap.b32 	%r18945, %r18944, %r18943, 1;
	shf.r.wrap.b32 	%r18946, %r18943, %r18944, 1;
	mov.b64 	%rd3894, {%r18946, %r18945};
	xor.b64  	%rd3895, %rd3894, %rd3893;
	shf.r.wrap.b32 	%r18947, %r18944, %r18943, 8;
	shf.r.wrap.b32 	%r18948, %r18943, %r18944, 8;
	mov.b64 	%rd3896, {%r18948, %r18947};
	xor.b64  	%rd3897, %rd3895, %rd3896;
	add.s64 	%rd3898, %rd4473, %rd4457;
	add.s64 	%rd3899, %rd3898, %rd3892;
	add.s64 	%rd4457, %rd3899, %rd3897;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18949,%dummy}, %rd4458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18950}, %rd4458;
	}
	shf.r.wrap.b32 	%r18951, %r18950, %r18949, 19;
	shf.r.wrap.b32 	%r18952, %r18949, %r18950, 19;
	mov.b64 	%rd3900, {%r18952, %r18951};
	shf.l.wrap.b32 	%r18953, %r18949, %r18950, 3;
	shf.l.wrap.b32 	%r18954, %r18950, %r18949, 3;
	mov.b64 	%rd3901, {%r18954, %r18953};
	shr.u64 	%rd3902, %rd4458, 6;
	xor.b64  	%rd3903, %rd3900, %rd3902;
	xor.b64  	%rd3904, %rd3903, %rd3901;
	shr.u64 	%rd3905, %rd4455, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18955,%dummy}, %rd4455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18956}, %rd4455;
	}
	shf.r.wrap.b32 	%r18957, %r18956, %r18955, 1;
	shf.r.wrap.b32 	%r18958, %r18955, %r18956, 1;
	mov.b64 	%rd3906, {%r18958, %r18957};
	xor.b64  	%rd3907, %rd3906, %rd3905;
	shf.r.wrap.b32 	%r18959, %r18956, %r18955, 8;
	shf.r.wrap.b32 	%r18960, %r18955, %r18956, 8;
	mov.b64 	%rd3908, {%r18960, %r18959};
	xor.b64  	%rd3909, %rd3907, %rd3908;
	add.s64 	%rd3910, %rd4474, %rd4456;
	add.s64 	%rd3911, %rd3910, %rd3904;
	add.s64 	%rd4456, %rd3911, %rd3909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18961,%dummy}, %rd4457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18962}, %rd4457;
	}
	shf.r.wrap.b32 	%r18963, %r18962, %r18961, 19;
	shf.r.wrap.b32 	%r18964, %r18961, %r18962, 19;
	mov.b64 	%rd3912, {%r18964, %r18963};
	shf.l.wrap.b32 	%r18965, %r18961, %r18962, 3;
	shf.l.wrap.b32 	%r18966, %r18962, %r18961, 3;
	mov.b64 	%rd3913, {%r18966, %r18965};
	shr.u64 	%rd3914, %rd4457, 6;
	xor.b64  	%rd3915, %rd3912, %rd3914;
	xor.b64  	%rd3916, %rd3915, %rd3913;
	shr.u64 	%rd3917, %rd4454, 7;
	shf.r.wrap.b32 	%r18967, %r18806, %r18805, 1;
	shf.r.wrap.b32 	%r18968, %r18805, %r18806, 1;
	mov.b64 	%rd3918, {%r18968, %r18967};
	xor.b64  	%rd3919, %rd3918, %rd3917;
	shf.r.wrap.b32 	%r18969, %r18806, %r18805, 8;
	shf.r.wrap.b32 	%r18970, %r18805, %r18806, 8;
	mov.b64 	%rd3920, {%r18970, %r18969};
	xor.b64  	%rd3921, %rd3919, %rd3920;
	add.s64 	%rd3922, %rd4475, %rd4455;
	add.s64 	%rd3923, %rd3922, %rd3916;
	add.s64 	%rd4455, %rd3923, %rd3921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18971,%dummy}, %rd4456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18972}, %rd4456;
	}
	shf.r.wrap.b32 	%r18973, %r18972, %r18971, 19;
	shf.r.wrap.b32 	%r18974, %r18971, %r18972, 19;
	mov.b64 	%rd3924, {%r18974, %r18973};
	shf.l.wrap.b32 	%r18975, %r18971, %r18972, 3;
	shf.l.wrap.b32 	%r18976, %r18972, %r18971, 3;
	mov.b64 	%rd3925, {%r18976, %r18975};
	shr.u64 	%rd3926, %rd4456, 6;
	xor.b64  	%rd3927, %rd3924, %rd3926;
	xor.b64  	%rd3928, %rd3927, %rd3925;
	shr.u64 	%rd3929, %rd4453, 7;
	shf.r.wrap.b32 	%r18977, %r18818, %r18817, 1;
	shf.r.wrap.b32 	%r18978, %r18817, %r18818, 1;
	mov.b64 	%rd3930, {%r18978, %r18977};
	xor.b64  	%rd3931, %rd3930, %rd3929;
	shf.r.wrap.b32 	%r18979, %r18818, %r18817, 8;
	shf.r.wrap.b32 	%r18980, %r18817, %r18818, 8;
	mov.b64 	%rd3932, {%r18980, %r18979};
	xor.b64  	%rd3933, %rd3931, %rd3932;
	add.s64 	%rd3934, %rd4476, %rd4454;
	add.s64 	%rd3935, %rd3934, %rd3928;
	add.s64 	%rd4454, %rd3935, %rd3933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18981,%dummy}, %rd4455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18982}, %rd4455;
	}
	shf.r.wrap.b32 	%r18983, %r18982, %r18981, 19;
	shf.r.wrap.b32 	%r18984, %r18981, %r18982, 19;
	mov.b64 	%rd3936, {%r18984, %r18983};
	shf.l.wrap.b32 	%r18985, %r18981, %r18982, 3;
	shf.l.wrap.b32 	%r18986, %r18982, %r18981, 3;
	mov.b64 	%rd3937, {%r18986, %r18985};
	shr.u64 	%rd3938, %rd4455, 6;
	xor.b64  	%rd3939, %rd3936, %rd3938;
	xor.b64  	%rd3940, %rd3939, %rd3937;
	shf.r.wrap.b32 	%r18987, %r18830, %r18829, 1;
	shf.r.wrap.b32 	%r18988, %r18829, %r18830, 1;
	mov.b64 	%rd3941, {%r18988, %r18987};
	shf.r.wrap.b32 	%r18989, %r18830, %r18829, 8;
	shf.r.wrap.b32 	%r18990, %r18829, %r18830, 8;
	mov.b64 	%rd3942, {%r18990, %r18989};
	shr.u64 	%rd3943, %rd4469, 7;
	xor.b64  	%rd3944, %rd3941, %rd3943;
	xor.b64  	%rd3945, %rd3944, %rd3942;
	add.s64 	%rd3946, %rd4460, %rd4453;
	add.s64 	%rd3947, %rd3946, %rd3940;
	add.s64 	%rd4453, %rd3947, %rd3945;
	mul.wide.s32 	%rd3948, %r19459, 8;
	mov.u64 	%rd3949, k_sha512;
	add.s64 	%rd3950, %rd3949, %rd3948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18991,%dummy}, %rd4465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18992}, %rd4465;
	}
	shf.r.wrap.b32 	%r18993, %r18992, %r18991, 18;
	shf.r.wrap.b32 	%r18994, %r18991, %r18992, 18;
	mov.b64 	%rd3951, {%r18994, %r18993};
	shf.r.wrap.b32 	%r18995, %r18992, %r18991, 14;
	shf.r.wrap.b32 	%r18996, %r18991, %r18992, 14;
	mov.b64 	%rd3952, {%r18996, %r18995};
	xor.b64  	%rd3953, %rd3951, %rd3952;
	shf.l.wrap.b32 	%r18997, %r18991, %r18992, 23;
	shf.l.wrap.b32 	%r18998, %r18992, %r18991, 23;
	mov.b64 	%rd3954, {%r18998, %r18997};
	xor.b64  	%rd3955, %rd3953, %rd3954;
	xor.b64  	%rd3956, %rd4466, %rd4467;
	and.b64  	%rd3957, %rd4465, %rd3956;
	xor.b64  	%rd3958, %rd3957, %rd4467;
	add.s64 	%rd3959, %rd3958, %rd4468;
	add.s64 	%rd3960, %rd3959, %rd4469;
	ld.const.u64 	%rd3961, [%rd3950];
	add.s64 	%rd3962, %rd3960, %rd3961;
	add.s64 	%rd3963, %rd3962, %rd3955;
	add.s64 	%rd3964, %rd3963, %rd4464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18999}, %rd4461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19000,%dummy}, %rd4461;
	}
	shf.l.wrap.b32 	%r19001, %r19000, %r18999, 30;
	shf.l.wrap.b32 	%r19002, %r18999, %r19000, 30;
	mov.b64 	%rd3965, {%r19002, %r19001};
	shf.r.wrap.b32 	%r19003, %r18999, %r19000, 28;
	shf.r.wrap.b32 	%r19004, %r19000, %r18999, 28;
	mov.b64 	%rd3966, {%r19004, %r19003};
	xor.b64  	%rd3967, %rd3965, %rd3966;
	shf.l.wrap.b32 	%r19005, %r19000, %r18999, 25;
	shf.l.wrap.b32 	%r19006, %r18999, %r19000, 25;
	mov.b64 	%rd3968, {%r19006, %r19005};
	xor.b64  	%rd3969, %rd3967, %rd3968;
	xor.b64  	%rd3970, %rd4461, %rd4462;
	and.b64  	%rd3971, %rd3970, %rd4463;
	and.b64  	%rd3972, %rd4461, %rd4462;
	or.b64  	%rd3973, %rd3971, %rd3972;
	add.s64 	%rd3974, %rd3963, %rd3973;
	add.s64 	%rd3975, %rd3974, %rd3969;
	add.s32 	%r19007, %r19459, 1;
	mul.wide.s32 	%rd3976, %r19007, 8;
	add.s64 	%rd3977, %rd3949, %rd3976;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19008,%dummy}, %rd3964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19009}, %rd3964;
	}
	shf.r.wrap.b32 	%r19010, %r19009, %r19008, 14;
	shf.r.wrap.b32 	%r19011, %r19008, %r19009, 14;
	mov.b64 	%rd3978, {%r19011, %r19010};
	shf.r.wrap.b32 	%r19012, %r19009, %r19008, 18;
	shf.r.wrap.b32 	%r19013, %r19008, %r19009, 18;
	mov.b64 	%rd3979, {%r19013, %r19012};
	xor.b64  	%rd3980, %rd3979, %rd3978;
	shf.l.wrap.b32 	%r19014, %r19008, %r19009, 23;
	shf.l.wrap.b32 	%r19015, %r19009, %r19008, 23;
	mov.b64 	%rd3981, {%r19015, %r19014};
	xor.b64  	%rd3982, %rd3980, %rd3981;
	xor.b64  	%rd3983, %rd4465, %rd4466;
	and.b64  	%rd3984, %rd3964, %rd3983;
	xor.b64  	%rd3985, %rd3984, %rd4466;
	add.s64 	%rd3986, %rd4470, %rd4467;
	ld.const.u64 	%rd3987, [%rd3977];
	add.s64 	%rd3988, %rd3986, %rd3987;
	add.s64 	%rd3989, %rd3988, %rd3985;
	add.s64 	%rd3990, %rd3989, %rd3982;
	add.s64 	%rd3991, %rd3990, %rd4463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19016,%dummy}, %rd3975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19017}, %rd3975;
	}
	shf.r.wrap.b32 	%r19018, %r19017, %r19016, 28;
	shf.r.wrap.b32 	%r19019, %r19016, %r19017, 28;
	mov.b64 	%rd3992, {%r19019, %r19018};
	shf.l.wrap.b32 	%r19020, %r19016, %r19017, 30;
	shf.l.wrap.b32 	%r19021, %r19017, %r19016, 30;
	mov.b64 	%rd3993, {%r19021, %r19020};
	xor.b64  	%rd3994, %rd3993, %rd3992;
	shf.l.wrap.b32 	%r19022, %r19016, %r19017, 25;
	shf.l.wrap.b32 	%r19023, %r19017, %r19016, 25;
	mov.b64 	%rd3995, {%r19023, %r19022};
	xor.b64  	%rd3996, %rd3994, %rd3995;
	and.b64  	%rd3997, %rd3975, %rd4461;
	xor.b64  	%rd3998, %rd3975, %rd4461;
	and.b64  	%rd3999, %rd3998, %rd4462;
	or.b64  	%rd4000, %rd3999, %rd3997;
	add.s64 	%rd4001, %rd3990, %rd4000;
	add.s64 	%rd4002, %rd4001, %rd3996;
	add.s32 	%r19024, %r19459, 2;
	mul.wide.s32 	%rd4003, %r19024, 8;
	add.s64 	%rd4004, %rd3949, %rd4003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19025,%dummy}, %rd3991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19026}, %rd3991;
	}
	shf.r.wrap.b32 	%r19027, %r19026, %r19025, 14;
	shf.r.wrap.b32 	%r19028, %r19025, %r19026, 14;
	mov.b64 	%rd4005, {%r19028, %r19027};
	shf.r.wrap.b32 	%r19029, %r19026, %r19025, 18;
	shf.r.wrap.b32 	%r19030, %r19025, %r19026, 18;
	mov.b64 	%rd4006, {%r19030, %r19029};
	xor.b64  	%rd4007, %rd4006, %rd4005;
	shf.l.wrap.b32 	%r19031, %r19025, %r19026, 23;
	shf.l.wrap.b32 	%r19032, %r19026, %r19025, 23;
	mov.b64 	%rd4008, {%r19032, %r19031};
	xor.b64  	%rd4009, %rd4007, %rd4008;
	xor.b64  	%rd4010, %rd3964, %rd4465;
	and.b64  	%rd4011, %rd3991, %rd4010;
	xor.b64  	%rd4012, %rd4011, %rd4465;
	add.s64 	%rd4013, %rd4471, %rd4466;
	ld.const.u64 	%rd4014, [%rd4004];
	add.s64 	%rd4015, %rd4013, %rd4014;
	add.s64 	%rd4016, %rd4015, %rd4012;
	add.s64 	%rd4017, %rd4016, %rd4009;
	add.s64 	%rd4018, %rd4017, %rd4462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19033,%dummy}, %rd4002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19034}, %rd4002;
	}
	shf.r.wrap.b32 	%r19035, %r19034, %r19033, 28;
	shf.r.wrap.b32 	%r19036, %r19033, %r19034, 28;
	mov.b64 	%rd4019, {%r19036, %r19035};
	shf.l.wrap.b32 	%r19037, %r19033, %r19034, 30;
	shf.l.wrap.b32 	%r19038, %r19034, %r19033, 30;
	mov.b64 	%rd4020, {%r19038, %r19037};
	xor.b64  	%rd4021, %rd4020, %rd4019;
	shf.l.wrap.b32 	%r19039, %r19033, %r19034, 25;
	shf.l.wrap.b32 	%r19040, %r19034, %r19033, 25;
	mov.b64 	%rd4022, {%r19040, %r19039};
	xor.b64  	%rd4023, %rd4021, %rd4022;
	and.b64  	%rd4024, %rd4002, %rd3975;
	xor.b64  	%rd4025, %rd4002, %rd3975;
	and.b64  	%rd4026, %rd4025, %rd4461;
	or.b64  	%rd4027, %rd4026, %rd4024;
	add.s64 	%rd4028, %rd4017, %rd4027;
	add.s64 	%rd4029, %rd4028, %rd4023;
	add.s32 	%r19041, %r19459, 3;
	mul.wide.s32 	%rd4030, %r19041, 8;
	add.s64 	%rd4031, %rd3949, %rd4030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19042,%dummy}, %rd4018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19043}, %rd4018;
	}
	shf.r.wrap.b32 	%r19044, %r19043, %r19042, 14;
	shf.r.wrap.b32 	%r19045, %r19042, %r19043, 14;
	mov.b64 	%rd4032, {%r19045, %r19044};
	shf.r.wrap.b32 	%r19046, %r19043, %r19042, 18;
	shf.r.wrap.b32 	%r19047, %r19042, %r19043, 18;
	mov.b64 	%rd4033, {%r19047, %r19046};
	xor.b64  	%rd4034, %rd4033, %rd4032;
	shf.l.wrap.b32 	%r19048, %r19042, %r19043, 23;
	shf.l.wrap.b32 	%r19049, %r19043, %r19042, 23;
	mov.b64 	%rd4035, {%r19049, %r19048};
	xor.b64  	%rd4036, %rd4034, %rd4035;
	xor.b64  	%rd4037, %rd3991, %rd3964;
	and.b64  	%rd4038, %rd4018, %rd4037;
	xor.b64  	%rd4039, %rd4038, %rd3964;
	add.s64 	%rd4040, %rd4472, %rd4465;
	ld.const.u64 	%rd4041, [%rd4031];
	add.s64 	%rd4042, %rd4040, %rd4041;
	add.s64 	%rd4043, %rd4042, %rd4039;
	add.s64 	%rd4044, %rd4043, %rd4036;
	add.s64 	%rd4045, %rd4044, %rd4461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19050,%dummy}, %rd4029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19051}, %rd4029;
	}
	shf.r.wrap.b32 	%r19052, %r19051, %r19050, 28;
	shf.r.wrap.b32 	%r19053, %r19050, %r19051, 28;
	mov.b64 	%rd4046, {%r19053, %r19052};
	shf.l.wrap.b32 	%r19054, %r19050, %r19051, 30;
	shf.l.wrap.b32 	%r19055, %r19051, %r19050, 30;
	mov.b64 	%rd4047, {%r19055, %r19054};
	xor.b64  	%rd4048, %rd4047, %rd4046;
	shf.l.wrap.b32 	%r19056, %r19050, %r19051, 25;
	shf.l.wrap.b32 	%r19057, %r19051, %r19050, 25;
	mov.b64 	%rd4049, {%r19057, %r19056};
	xor.b64  	%rd4050, %rd4048, %rd4049;
	and.b64  	%rd4051, %rd4029, %rd4002;
	xor.b64  	%rd4052, %rd4029, %rd4002;
	and.b64  	%rd4053, %rd4052, %rd3975;
	or.b64  	%rd4054, %rd4053, %rd4051;
	add.s64 	%rd4055, %rd4044, %rd4054;
	add.s64 	%rd4056, %rd4055, %rd4050;
	add.s32 	%r19058, %r19459, 4;
	mul.wide.s32 	%rd4057, %r19058, 8;
	add.s64 	%rd4058, %rd3949, %rd4057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19059,%dummy}, %rd4045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19060}, %rd4045;
	}
	shf.r.wrap.b32 	%r19061, %r19060, %r19059, 14;
	shf.r.wrap.b32 	%r19062, %r19059, %r19060, 14;
	mov.b64 	%rd4059, {%r19062, %r19061};
	shf.r.wrap.b32 	%r19063, %r19060, %r19059, 18;
	shf.r.wrap.b32 	%r19064, %r19059, %r19060, 18;
	mov.b64 	%rd4060, {%r19064, %r19063};
	xor.b64  	%rd4061, %rd4060, %rd4059;
	shf.l.wrap.b32 	%r19065, %r19059, %r19060, 23;
	shf.l.wrap.b32 	%r19066, %r19060, %r19059, 23;
	mov.b64 	%rd4062, {%r19066, %r19065};
	xor.b64  	%rd4063, %rd4061, %rd4062;
	xor.b64  	%rd4064, %rd4018, %rd3991;
	and.b64  	%rd4065, %rd4045, %rd4064;
	xor.b64  	%rd4066, %rd4065, %rd3991;
	add.s64 	%rd4067, %rd3964, %rd4473;
	ld.const.u64 	%rd4068, [%rd4058];
	add.s64 	%rd4069, %rd4067, %rd4068;
	add.s64 	%rd4070, %rd4069, %rd4066;
	add.s64 	%rd4071, %rd4070, %rd4063;
	add.s64 	%rd4072, %rd4071, %rd3975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19067,%dummy}, %rd4056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19068}, %rd4056;
	}
	shf.r.wrap.b32 	%r19069, %r19068, %r19067, 28;
	shf.r.wrap.b32 	%r19070, %r19067, %r19068, 28;
	mov.b64 	%rd4073, {%r19070, %r19069};
	shf.l.wrap.b32 	%r19071, %r19067, %r19068, 30;
	shf.l.wrap.b32 	%r19072, %r19068, %r19067, 30;
	mov.b64 	%rd4074, {%r19072, %r19071};
	xor.b64  	%rd4075, %rd4074, %rd4073;
	shf.l.wrap.b32 	%r19073, %r19067, %r19068, 25;
	shf.l.wrap.b32 	%r19074, %r19068, %r19067, 25;
	mov.b64 	%rd4076, {%r19074, %r19073};
	xor.b64  	%rd4077, %rd4075, %rd4076;
	and.b64  	%rd4078, %rd4056, %rd4029;
	xor.b64  	%rd4079, %rd4056, %rd4029;
	and.b64  	%rd4080, %rd4079, %rd4002;
	or.b64  	%rd4081, %rd4080, %rd4078;
	add.s64 	%rd4082, %rd4071, %rd4081;
	add.s64 	%rd4083, %rd4082, %rd4077;
	add.s32 	%r19075, %r19459, 5;
	mul.wide.s32 	%rd4084, %r19075, 8;
	add.s64 	%rd4085, %rd3949, %rd4084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19076,%dummy}, %rd4072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19077}, %rd4072;
	}
	shf.r.wrap.b32 	%r19078, %r19077, %r19076, 14;
	shf.r.wrap.b32 	%r19079, %r19076, %r19077, 14;
	mov.b64 	%rd4086, {%r19079, %r19078};
	shf.r.wrap.b32 	%r19080, %r19077, %r19076, 18;
	shf.r.wrap.b32 	%r19081, %r19076, %r19077, 18;
	mov.b64 	%rd4087, {%r19081, %r19080};
	xor.b64  	%rd4088, %rd4087, %rd4086;
	shf.l.wrap.b32 	%r19082, %r19076, %r19077, 23;
	shf.l.wrap.b32 	%r19083, %r19077, %r19076, 23;
	mov.b64 	%rd4089, {%r19083, %r19082};
	xor.b64  	%rd4090, %rd4088, %rd4089;
	xor.b64  	%rd4091, %rd4045, %rd4018;
	and.b64  	%rd4092, %rd4072, %rd4091;
	xor.b64  	%rd4093, %rd4092, %rd4018;
	add.s64 	%rd4094, %rd3991, %rd4474;
	ld.const.u64 	%rd4095, [%rd4085];
	add.s64 	%rd4096, %rd4094, %rd4095;
	add.s64 	%rd4097, %rd4096, %rd4093;
	add.s64 	%rd4098, %rd4097, %rd4090;
	add.s64 	%rd4099, %rd4098, %rd4002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19084,%dummy}, %rd4083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19085}, %rd4083;
	}
	shf.r.wrap.b32 	%r19086, %r19085, %r19084, 28;
	shf.r.wrap.b32 	%r19087, %r19084, %r19085, 28;
	mov.b64 	%rd4100, {%r19087, %r19086};
	shf.l.wrap.b32 	%r19088, %r19084, %r19085, 30;
	shf.l.wrap.b32 	%r19089, %r19085, %r19084, 30;
	mov.b64 	%rd4101, {%r19089, %r19088};
	xor.b64  	%rd4102, %rd4101, %rd4100;
	shf.l.wrap.b32 	%r19090, %r19084, %r19085, 25;
	shf.l.wrap.b32 	%r19091, %r19085, %r19084, 25;
	mov.b64 	%rd4103, {%r19091, %r19090};
	xor.b64  	%rd4104, %rd4102, %rd4103;
	and.b64  	%rd4105, %rd4083, %rd4056;
	xor.b64  	%rd4106, %rd4083, %rd4056;
	and.b64  	%rd4107, %rd4106, %rd4029;
	or.b64  	%rd4108, %rd4107, %rd4105;
	add.s64 	%rd4109, %rd4098, %rd4108;
	add.s64 	%rd4110, %rd4109, %rd4104;
	add.s32 	%r19092, %r19459, 6;
	mul.wide.s32 	%rd4111, %r19092, 8;
	add.s64 	%rd4112, %rd3949, %rd4111;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19093,%dummy}, %rd4099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19094}, %rd4099;
	}
	shf.r.wrap.b32 	%r19095, %r19094, %r19093, 14;
	shf.r.wrap.b32 	%r19096, %r19093, %r19094, 14;
	mov.b64 	%rd4113, {%r19096, %r19095};
	shf.r.wrap.b32 	%r19097, %r19094, %r19093, 18;
	shf.r.wrap.b32 	%r19098, %r19093, %r19094, 18;
	mov.b64 	%rd4114, {%r19098, %r19097};
	xor.b64  	%rd4115, %rd4114, %rd4113;
	shf.l.wrap.b32 	%r19099, %r19093, %r19094, 23;
	shf.l.wrap.b32 	%r19100, %r19094, %r19093, 23;
	mov.b64 	%rd4116, {%r19100, %r19099};
	xor.b64  	%rd4117, %rd4115, %rd4116;
	xor.b64  	%rd4118, %rd4072, %rd4045;
	and.b64  	%rd4119, %rd4099, %rd4118;
	xor.b64  	%rd4120, %rd4119, %rd4045;
	add.s64 	%rd4121, %rd4018, %rd4475;
	ld.const.u64 	%rd4122, [%rd4112];
	add.s64 	%rd4123, %rd4121, %rd4122;
	add.s64 	%rd4124, %rd4123, %rd4120;
	add.s64 	%rd4125, %rd4124, %rd4117;
	add.s64 	%rd4126, %rd4125, %rd4029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19101,%dummy}, %rd4110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19102}, %rd4110;
	}
	shf.r.wrap.b32 	%r19103, %r19102, %r19101, 28;
	shf.r.wrap.b32 	%r19104, %r19101, %r19102, 28;
	mov.b64 	%rd4127, {%r19104, %r19103};
	shf.l.wrap.b32 	%r19105, %r19101, %r19102, 30;
	shf.l.wrap.b32 	%r19106, %r19102, %r19101, 30;
	mov.b64 	%rd4128, {%r19106, %r19105};
	xor.b64  	%rd4129, %rd4128, %rd4127;
	shf.l.wrap.b32 	%r19107, %r19101, %r19102, 25;
	shf.l.wrap.b32 	%r19108, %r19102, %r19101, 25;
	mov.b64 	%rd4130, {%r19108, %r19107};
	xor.b64  	%rd4131, %rd4129, %rd4130;
	and.b64  	%rd4132, %rd4110, %rd4083;
	xor.b64  	%rd4133, %rd4110, %rd4083;
	and.b64  	%rd4134, %rd4133, %rd4056;
	or.b64  	%rd4135, %rd4134, %rd4132;
	add.s64 	%rd4136, %rd4125, %rd4135;
	add.s64 	%rd4137, %rd4136, %rd4131;
	add.s32 	%r19109, %r19459, 7;
	mul.wide.s32 	%rd4138, %r19109, 8;
	add.s64 	%rd4139, %rd3949, %rd4138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19110,%dummy}, %rd4126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19111}, %rd4126;
	}
	shf.r.wrap.b32 	%r19112, %r19111, %r19110, 14;
	shf.r.wrap.b32 	%r19113, %r19110, %r19111, 14;
	mov.b64 	%rd4140, {%r19113, %r19112};
	shf.r.wrap.b32 	%r19114, %r19111, %r19110, 18;
	shf.r.wrap.b32 	%r19115, %r19110, %r19111, 18;
	mov.b64 	%rd4141, {%r19115, %r19114};
	xor.b64  	%rd4142, %rd4141, %rd4140;
	shf.l.wrap.b32 	%r19116, %r19110, %r19111, 23;
	shf.l.wrap.b32 	%r19117, %r19111, %r19110, 23;
	mov.b64 	%rd4143, {%r19117, %r19116};
	xor.b64  	%rd4144, %rd4142, %rd4143;
	xor.b64  	%rd4145, %rd4099, %rd4072;
	and.b64  	%rd4146, %rd4126, %rd4145;
	xor.b64  	%rd4147, %rd4146, %rd4072;
	add.s64 	%rd4148, %rd4045, %rd4476;
	ld.const.u64 	%rd4149, [%rd4139];
	add.s64 	%rd4150, %rd4148, %rd4149;
	add.s64 	%rd4151, %rd4150, %rd4147;
	add.s64 	%rd4152, %rd4151, %rd4144;
	add.s64 	%rd4153, %rd4152, %rd4056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19118,%dummy}, %rd4137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19119}, %rd4137;
	}
	shf.r.wrap.b32 	%r19120, %r19119, %r19118, 28;
	shf.r.wrap.b32 	%r19121, %r19118, %r19119, 28;
	mov.b64 	%rd4154, {%r19121, %r19120};
	shf.l.wrap.b32 	%r19122, %r19118, %r19119, 30;
	shf.l.wrap.b32 	%r19123, %r19119, %r19118, 30;
	mov.b64 	%rd4155, {%r19123, %r19122};
	xor.b64  	%rd4156, %rd4155, %rd4154;
	shf.l.wrap.b32 	%r19124, %r19118, %r19119, 25;
	shf.l.wrap.b32 	%r19125, %r19119, %r19118, 25;
	mov.b64 	%rd4157, {%r19125, %r19124};
	xor.b64  	%rd4158, %rd4156, %rd4157;
	and.b64  	%rd4159, %rd4137, %rd4110;
	xor.b64  	%rd4160, %rd4137, %rd4110;
	and.b64  	%rd4161, %rd4160, %rd4083;
	or.b64  	%rd4162, %rd4161, %rd4159;
	add.s64 	%rd4163, %rd4152, %rd4162;
	add.s64 	%rd4164, %rd4163, %rd4158;
	add.s32 	%r19126, %r19459, 8;
	mul.wide.s32 	%rd4165, %r19126, 8;
	add.s64 	%rd4166, %rd3949, %rd4165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19127,%dummy}, %rd4153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19128}, %rd4153;
	}
	shf.r.wrap.b32 	%r19129, %r19128, %r19127, 14;
	shf.r.wrap.b32 	%r19130, %r19127, %r19128, 14;
	mov.b64 	%rd4167, {%r19130, %r19129};
	shf.r.wrap.b32 	%r19131, %r19128, %r19127, 18;
	shf.r.wrap.b32 	%r19132, %r19127, %r19128, 18;
	mov.b64 	%rd4168, {%r19132, %r19131};
	xor.b64  	%rd4169, %rd4168, %rd4167;
	shf.l.wrap.b32 	%r19133, %r19127, %r19128, 23;
	shf.l.wrap.b32 	%r19134, %r19128, %r19127, 23;
	mov.b64 	%rd4170, {%r19134, %r19133};
	xor.b64  	%rd4171, %rd4169, %rd4170;
	xor.b64  	%rd4172, %rd4126, %rd4099;
	and.b64  	%rd4173, %rd4153, %rd4172;
	xor.b64  	%rd4174, %rd4173, %rd4099;
	add.s64 	%rd4175, %rd4072, %rd4460;
	ld.const.u64 	%rd4176, [%rd4166];
	add.s64 	%rd4177, %rd4175, %rd4176;
	add.s64 	%rd4178, %rd4177, %rd4174;
	add.s64 	%rd4179, %rd4178, %rd4171;
	add.s64 	%rd4180, %rd4179, %rd4083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19135,%dummy}, %rd4164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19136}, %rd4164;
	}
	shf.r.wrap.b32 	%r19137, %r19136, %r19135, 28;
	shf.r.wrap.b32 	%r19138, %r19135, %r19136, 28;
	mov.b64 	%rd4181, {%r19138, %r19137};
	shf.l.wrap.b32 	%r19139, %r19135, %r19136, 30;
	shf.l.wrap.b32 	%r19140, %r19136, %r19135, 30;
	mov.b64 	%rd4182, {%r19140, %r19139};
	xor.b64  	%rd4183, %rd4182, %rd4181;
	shf.l.wrap.b32 	%r19141, %r19135, %r19136, 25;
	shf.l.wrap.b32 	%r19142, %r19136, %r19135, 25;
	mov.b64 	%rd4184, {%r19142, %r19141};
	xor.b64  	%rd4185, %rd4183, %rd4184;
	and.b64  	%rd4186, %rd4164, %rd4137;
	xor.b64  	%rd4187, %rd4164, %rd4137;
	and.b64  	%rd4188, %rd4187, %rd4110;
	or.b64  	%rd4189, %rd4188, %rd4186;
	add.s64 	%rd4190, %rd4179, %rd4189;
	add.s64 	%rd4191, %rd4190, %rd4185;
	add.s32 	%r19143, %r19459, 9;
	mul.wide.s32 	%rd4192, %r19143, 8;
	add.s64 	%rd4193, %rd3949, %rd4192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19144,%dummy}, %rd4180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19145}, %rd4180;
	}
	shf.r.wrap.b32 	%r19146, %r19145, %r19144, 14;
	shf.r.wrap.b32 	%r19147, %r19144, %r19145, 14;
	mov.b64 	%rd4194, {%r19147, %r19146};
	shf.r.wrap.b32 	%r19148, %r19145, %r19144, 18;
	shf.r.wrap.b32 	%r19149, %r19144, %r19145, 18;
	mov.b64 	%rd4195, {%r19149, %r19148};
	xor.b64  	%rd4196, %rd4195, %rd4194;
	shf.l.wrap.b32 	%r19150, %r19144, %r19145, 23;
	shf.l.wrap.b32 	%r19151, %r19145, %r19144, 23;
	mov.b64 	%rd4197, {%r19151, %r19150};
	xor.b64  	%rd4198, %rd4196, %rd4197;
	xor.b64  	%rd4199, %rd4153, %rd4126;
	and.b64  	%rd4200, %rd4180, %rd4199;
	xor.b64  	%rd4201, %rd4200, %rd4126;
	add.s64 	%rd4202, %rd4099, %rd4459;
	ld.const.u64 	%rd4203, [%rd4193];
	add.s64 	%rd4204, %rd4202, %rd4203;
	add.s64 	%rd4205, %rd4204, %rd4201;
	add.s64 	%rd4206, %rd4205, %rd4198;
	add.s64 	%rd4207, %rd4206, %rd4110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19152,%dummy}, %rd4191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19153}, %rd4191;
	}
	shf.r.wrap.b32 	%r19154, %r19153, %r19152, 28;
	shf.r.wrap.b32 	%r19155, %r19152, %r19153, 28;
	mov.b64 	%rd4208, {%r19155, %r19154};
	shf.l.wrap.b32 	%r19156, %r19152, %r19153, 30;
	shf.l.wrap.b32 	%r19157, %r19153, %r19152, 30;
	mov.b64 	%rd4209, {%r19157, %r19156};
	xor.b64  	%rd4210, %rd4209, %rd4208;
	shf.l.wrap.b32 	%r19158, %r19152, %r19153, 25;
	shf.l.wrap.b32 	%r19159, %r19153, %r19152, 25;
	mov.b64 	%rd4211, {%r19159, %r19158};
	xor.b64  	%rd4212, %rd4210, %rd4211;
	and.b64  	%rd4213, %rd4191, %rd4164;
	xor.b64  	%rd4214, %rd4191, %rd4164;
	and.b64  	%rd4215, %rd4214, %rd4137;
	or.b64  	%rd4216, %rd4215, %rd4213;
	add.s64 	%rd4217, %rd4206, %rd4216;
	add.s64 	%rd4218, %rd4217, %rd4212;
	add.s32 	%r19160, %r19459, 10;
	mul.wide.s32 	%rd4219, %r19160, 8;
	add.s64 	%rd4220, %rd3949, %rd4219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19161,%dummy}, %rd4207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19162}, %rd4207;
	}
	shf.r.wrap.b32 	%r19163, %r19162, %r19161, 14;
	shf.r.wrap.b32 	%r19164, %r19161, %r19162, 14;
	mov.b64 	%rd4221, {%r19164, %r19163};
	shf.r.wrap.b32 	%r19165, %r19162, %r19161, 18;
	shf.r.wrap.b32 	%r19166, %r19161, %r19162, 18;
	mov.b64 	%rd4222, {%r19166, %r19165};
	xor.b64  	%rd4223, %rd4222, %rd4221;
	shf.l.wrap.b32 	%r19167, %r19161, %r19162, 23;
	shf.l.wrap.b32 	%r19168, %r19162, %r19161, 23;
	mov.b64 	%rd4224, {%r19168, %r19167};
	xor.b64  	%rd4225, %rd4223, %rd4224;
	xor.b64  	%rd4226, %rd4180, %rd4153;
	and.b64  	%rd4227, %rd4207, %rd4226;
	xor.b64  	%rd4228, %rd4227, %rd4153;
	add.s64 	%rd4229, %rd4126, %rd4458;
	ld.const.u64 	%rd4230, [%rd4220];
	add.s64 	%rd4231, %rd4229, %rd4230;
	add.s64 	%rd4232, %rd4231, %rd4228;
	add.s64 	%rd4233, %rd4232, %rd4225;
	add.s64 	%rd4234, %rd4233, %rd4137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19169,%dummy}, %rd4218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19170}, %rd4218;
	}
	shf.r.wrap.b32 	%r19171, %r19170, %r19169, 28;
	shf.r.wrap.b32 	%r19172, %r19169, %r19170, 28;
	mov.b64 	%rd4235, {%r19172, %r19171};
	shf.l.wrap.b32 	%r19173, %r19169, %r19170, 30;
	shf.l.wrap.b32 	%r19174, %r19170, %r19169, 30;
	mov.b64 	%rd4236, {%r19174, %r19173};
	xor.b64  	%rd4237, %rd4236, %rd4235;
	shf.l.wrap.b32 	%r19175, %r19169, %r19170, 25;
	shf.l.wrap.b32 	%r19176, %r19170, %r19169, 25;
	mov.b64 	%rd4238, {%r19176, %r19175};
	xor.b64  	%rd4239, %rd4237, %rd4238;
	and.b64  	%rd4240, %rd4218, %rd4191;
	xor.b64  	%rd4241, %rd4218, %rd4191;
	and.b64  	%rd4242, %rd4241, %rd4164;
	or.b64  	%rd4243, %rd4242, %rd4240;
	add.s64 	%rd4244, %rd4233, %rd4243;
	add.s64 	%rd4245, %rd4244, %rd4239;
	add.s32 	%r19177, %r19459, 11;
	mul.wide.s32 	%rd4246, %r19177, 8;
	add.s64 	%rd4247, %rd3949, %rd4246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19178,%dummy}, %rd4234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19179}, %rd4234;
	}
	shf.r.wrap.b32 	%r19180, %r19179, %r19178, 14;
	shf.r.wrap.b32 	%r19181, %r19178, %r19179, 14;
	mov.b64 	%rd4248, {%r19181, %r19180};
	shf.r.wrap.b32 	%r19182, %r19179, %r19178, 18;
	shf.r.wrap.b32 	%r19183, %r19178, %r19179, 18;
	mov.b64 	%rd4249, {%r19183, %r19182};
	xor.b64  	%rd4250, %rd4249, %rd4248;
	shf.l.wrap.b32 	%r19184, %r19178, %r19179, 23;
	shf.l.wrap.b32 	%r19185, %r19179, %r19178, 23;
	mov.b64 	%rd4251, {%r19185, %r19184};
	xor.b64  	%rd4252, %rd4250, %rd4251;
	xor.b64  	%rd4253, %rd4207, %rd4180;
	and.b64  	%rd4254, %rd4234, %rd4253;
	xor.b64  	%rd4255, %rd4254, %rd4180;
	add.s64 	%rd4256, %rd4153, %rd4457;
	ld.const.u64 	%rd4257, [%rd4247];
	add.s64 	%rd4258, %rd4256, %rd4257;
	add.s64 	%rd4259, %rd4258, %rd4255;
	add.s64 	%rd4260, %rd4259, %rd4252;
	add.s64 	%rd4261, %rd4260, %rd4164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19186,%dummy}, %rd4245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19187}, %rd4245;
	}
	shf.r.wrap.b32 	%r19188, %r19187, %r19186, 28;
	shf.r.wrap.b32 	%r19189, %r19186, %r19187, 28;
	mov.b64 	%rd4262, {%r19189, %r19188};
	shf.l.wrap.b32 	%r19190, %r19186, %r19187, 30;
	shf.l.wrap.b32 	%r19191, %r19187, %r19186, 30;
	mov.b64 	%rd4263, {%r19191, %r19190};
	xor.b64  	%rd4264, %rd4263, %rd4262;
	shf.l.wrap.b32 	%r19192, %r19186, %r19187, 25;
	shf.l.wrap.b32 	%r19193, %r19187, %r19186, 25;
	mov.b64 	%rd4265, {%r19193, %r19192};
	xor.b64  	%rd4266, %rd4264, %rd4265;
	and.b64  	%rd4267, %rd4245, %rd4218;
	xor.b64  	%rd4268, %rd4245, %rd4218;
	and.b64  	%rd4269, %rd4268, %rd4191;
	or.b64  	%rd4270, %rd4269, %rd4267;
	add.s64 	%rd4271, %rd4260, %rd4270;
	add.s64 	%rd4272, %rd4271, %rd4266;
	add.s32 	%r19194, %r19459, 12;
	mul.wide.s32 	%rd4273, %r19194, 8;
	add.s64 	%rd4274, %rd3949, %rd4273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19195,%dummy}, %rd4261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19196}, %rd4261;
	}
	shf.r.wrap.b32 	%r19197, %r19196, %r19195, 14;
	shf.r.wrap.b32 	%r19198, %r19195, %r19196, 14;
	mov.b64 	%rd4275, {%r19198, %r19197};
	shf.r.wrap.b32 	%r19199, %r19196, %r19195, 18;
	shf.r.wrap.b32 	%r19200, %r19195, %r19196, 18;
	mov.b64 	%rd4276, {%r19200, %r19199};
	xor.b64  	%rd4277, %rd4276, %rd4275;
	shf.l.wrap.b32 	%r19201, %r19195, %r19196, 23;
	shf.l.wrap.b32 	%r19202, %r19196, %r19195, 23;
	mov.b64 	%rd4278, {%r19202, %r19201};
	xor.b64  	%rd4279, %rd4277, %rd4278;
	xor.b64  	%rd4280, %rd4234, %rd4207;
	and.b64  	%rd4281, %rd4261, %rd4280;
	xor.b64  	%rd4282, %rd4281, %rd4207;
	add.s64 	%rd4283, %rd4180, %rd4456;
	ld.const.u64 	%rd4284, [%rd4274];
	add.s64 	%rd4285, %rd4283, %rd4284;
	add.s64 	%rd4286, %rd4285, %rd4282;
	add.s64 	%rd4287, %rd4286, %rd4279;
	add.s64 	%rd4468, %rd4287, %rd4191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19203,%dummy}, %rd4272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19204}, %rd4272;
	}
	shf.r.wrap.b32 	%r19205, %r19204, %r19203, 28;
	shf.r.wrap.b32 	%r19206, %r19203, %r19204, 28;
	mov.b64 	%rd4288, {%r19206, %r19205};
	shf.l.wrap.b32 	%r19207, %r19203, %r19204, 30;
	shf.l.wrap.b32 	%r19208, %r19204, %r19203, 30;
	mov.b64 	%rd4289, {%r19208, %r19207};
	xor.b64  	%rd4290, %rd4289, %rd4288;
	shf.l.wrap.b32 	%r19209, %r19203, %r19204, 25;
	shf.l.wrap.b32 	%r19210, %r19204, %r19203, 25;
	mov.b64 	%rd4291, {%r19210, %r19209};
	xor.b64  	%rd4292, %rd4290, %rd4291;
	and.b64  	%rd4293, %rd4272, %rd4245;
	xor.b64  	%rd4294, %rd4272, %rd4245;
	and.b64  	%rd4295, %rd4294, %rd4218;
	or.b64  	%rd4296, %rd4295, %rd4293;
	add.s64 	%rd4297, %rd4287, %rd4296;
	add.s64 	%rd4464, %rd4297, %rd4292;
	add.s32 	%r19211, %r19459, 13;
	mul.wide.s32 	%rd4298, %r19211, 8;
	add.s64 	%rd4299, %rd3949, %rd4298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19212,%dummy}, %rd4468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19213}, %rd4468;
	}
	shf.r.wrap.b32 	%r19214, %r19213, %r19212, 14;
	shf.r.wrap.b32 	%r19215, %r19212, %r19213, 14;
	mov.b64 	%rd4300, {%r19215, %r19214};
	shf.r.wrap.b32 	%r19216, %r19213, %r19212, 18;
	shf.r.wrap.b32 	%r19217, %r19212, %r19213, 18;
	mov.b64 	%rd4301, {%r19217, %r19216};
	xor.b64  	%rd4302, %rd4301, %rd4300;
	shf.l.wrap.b32 	%r19218, %r19212, %r19213, 23;
	shf.l.wrap.b32 	%r19219, %r19213, %r19212, 23;
	mov.b64 	%rd4303, {%r19219, %r19218};
	xor.b64  	%rd4304, %rd4302, %rd4303;
	xor.b64  	%rd4305, %rd4261, %rd4234;
	and.b64  	%rd4306, %rd4468, %rd4305;
	xor.b64  	%rd4307, %rd4306, %rd4234;
	add.s64 	%rd4308, %rd4207, %rd4455;
	ld.const.u64 	%rd4309, [%rd4299];
	add.s64 	%rd4310, %rd4308, %rd4309;
	add.s64 	%rd4311, %rd4310, %rd4307;
	add.s64 	%rd4312, %rd4311, %rd4304;
	add.s64 	%rd4467, %rd4312, %rd4218;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19220,%dummy}, %rd4464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19221}, %rd4464;
	}
	shf.r.wrap.b32 	%r19222, %r19221, %r19220, 28;
	shf.r.wrap.b32 	%r19223, %r19220, %r19221, 28;
	mov.b64 	%rd4313, {%r19223, %r19222};
	shf.l.wrap.b32 	%r19224, %r19220, %r19221, 30;
	shf.l.wrap.b32 	%r19225, %r19221, %r19220, 30;
	mov.b64 	%rd4314, {%r19225, %r19224};
	xor.b64  	%rd4315, %rd4314, %rd4313;
	shf.l.wrap.b32 	%r19226, %r19220, %r19221, 25;
	shf.l.wrap.b32 	%r19227, %r19221, %r19220, 25;
	mov.b64 	%rd4316, {%r19227, %r19226};
	xor.b64  	%rd4317, %rd4315, %rd4316;
	and.b64  	%rd4318, %rd4464, %rd4272;
	xor.b64  	%rd4319, %rd4464, %rd4272;
	and.b64  	%rd4320, %rd4319, %rd4245;
	or.b64  	%rd4321, %rd4320, %rd4318;
	add.s64 	%rd4322, %rd4312, %rd4321;
	add.s64 	%rd4463, %rd4322, %rd4317;
	add.s32 	%r19228, %r19459, 14;
	mul.wide.s32 	%rd4323, %r19228, 8;
	add.s64 	%rd4324, %rd3949, %rd4323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19229,%dummy}, %rd4467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19230}, %rd4467;
	}
	shf.r.wrap.b32 	%r19231, %r19230, %r19229, 14;
	shf.r.wrap.b32 	%r19232, %r19229, %r19230, 14;
	mov.b64 	%rd4325, {%r19232, %r19231};
	shf.r.wrap.b32 	%r19233, %r19230, %r19229, 18;
	shf.r.wrap.b32 	%r19234, %r19229, %r19230, 18;
	mov.b64 	%rd4326, {%r19234, %r19233};
	xor.b64  	%rd4327, %rd4326, %rd4325;
	shf.l.wrap.b32 	%r19235, %r19229, %r19230, 23;
	shf.l.wrap.b32 	%r19236, %r19230, %r19229, 23;
	mov.b64 	%rd4328, {%r19236, %r19235};
	xor.b64  	%rd4329, %rd4327, %rd4328;
	xor.b64  	%rd4330, %rd4468, %rd4261;
	and.b64  	%rd4331, %rd4467, %rd4330;
	xor.b64  	%rd4332, %rd4331, %rd4261;
	add.s64 	%rd4333, %rd4234, %rd4454;
	ld.const.u64 	%rd4334, [%rd4324];
	add.s64 	%rd4335, %rd4333, %rd4334;
	add.s64 	%rd4336, %rd4335, %rd4332;
	add.s64 	%rd4337, %rd4336, %rd4329;
	add.s64 	%rd4466, %rd4337, %rd4245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19237,%dummy}, %rd4463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19238}, %rd4463;
	}
	shf.r.wrap.b32 	%r19239, %r19238, %r19237, 28;
	shf.r.wrap.b32 	%r19240, %r19237, %r19238, 28;
	mov.b64 	%rd4338, {%r19240, %r19239};
	shf.l.wrap.b32 	%r19241, %r19237, %r19238, 30;
	shf.l.wrap.b32 	%r19242, %r19238, %r19237, 30;
	mov.b64 	%rd4339, {%r19242, %r19241};
	xor.b64  	%rd4340, %rd4339, %rd4338;
	shf.l.wrap.b32 	%r19243, %r19237, %r19238, 25;
	shf.l.wrap.b32 	%r19244, %r19238, %r19237, 25;
	mov.b64 	%rd4341, {%r19244, %r19243};
	xor.b64  	%rd4342, %rd4340, %rd4341;
	and.b64  	%rd4343, %rd4463, %rd4464;
	xor.b64  	%rd4344, %rd4463, %rd4464;
	and.b64  	%rd4345, %rd4344, %rd4272;
	or.b64  	%rd4346, %rd4345, %rd4343;
	add.s64 	%rd4347, %rd4337, %rd4346;
	add.s64 	%rd4462, %rd4347, %rd4342;
	add.s32 	%r19245, %r19459, 15;
	mul.wide.s32 	%rd4348, %r19245, 8;
	add.s64 	%rd4349, %rd3949, %rd4348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19246,%dummy}, %rd4466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19247}, %rd4466;
	}
	shf.r.wrap.b32 	%r19248, %r19247, %r19246, 14;
	shf.r.wrap.b32 	%r19249, %r19246, %r19247, 14;
	mov.b64 	%rd4350, {%r19249, %r19248};
	shf.r.wrap.b32 	%r19250, %r19247, %r19246, 18;
	shf.r.wrap.b32 	%r19251, %r19246, %r19247, 18;
	mov.b64 	%rd4351, {%r19251, %r19250};
	xor.b64  	%rd4352, %rd4351, %rd4350;
	shf.l.wrap.b32 	%r19252, %r19246, %r19247, 23;
	shf.l.wrap.b32 	%r19253, %r19247, %r19246, 23;
	mov.b64 	%rd4353, {%r19253, %r19252};
	xor.b64  	%rd4354, %rd4352, %rd4353;
	xor.b64  	%rd4355, %rd4467, %rd4468;
	and.b64  	%rd4356, %rd4466, %rd4355;
	xor.b64  	%rd4357, %rd4356, %rd4468;
	add.s64 	%rd4358, %rd4261, %rd4453;
	ld.const.u64 	%rd4359, [%rd4349];
	add.s64 	%rd4360, %rd4358, %rd4359;
	add.s64 	%rd4361, %rd4360, %rd4357;
	add.s64 	%rd4362, %rd4361, %rd4354;
	add.s64 	%rd4465, %rd4362, %rd4272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r19254,%dummy}, %rd4462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r19255}, %rd4462;
	}
	shf.r.wrap.b32 	%r19256, %r19255, %r19254, 28;
	shf.r.wrap.b32 	%r19257, %r19254, %r19255, 28;
	mov.b64 	%rd4363, {%r19257, %r19256};
	shf.l.wrap.b32 	%r19258, %r19254, %r19255, 30;
	shf.l.wrap.b32 	%r19259, %r19255, %r19254, 30;
	mov.b64 	%rd4364, {%r19259, %r19258};
	xor.b64  	%rd4365, %rd4364, %rd4363;
	shf.l.wrap.b32 	%r19260, %r19254, %r19255, 25;
	shf.l.wrap.b32 	%r19261, %r19255, %r19254, 25;
	mov.b64 	%rd4366, {%r19261, %r19260};
	xor.b64  	%rd4367, %rd4365, %rd4366;
	and.b64  	%rd4368, %rd4462, %rd4463;
	xor.b64  	%rd4369, %rd4462, %rd4463;
	and.b64  	%rd4370, %rd4369, %rd4464;
	or.b64  	%rd4371, %rd4370, %rd4368;
	add.s64 	%rd4372, %rd4362, %rd4371;
	add.s64 	%rd4461, %rd4372, %rd4367;
	add.s32 	%r19459, %r19459, 16;
	setp.lt.s32	%p150, %r19459, 80;
	@%p150 bra 	BB2_307;

	add.s64 	%rd4373, %rd282, %rd4461;
	st.local.u64 	[%rd1], %rd4373;
	add.s64 	%rd4374, %rd283, %rd4462;
	st.local.u64 	[%rd1+8], %rd4374;
	add.s64 	%rd4375, %rd284, %rd4463;
	st.local.u64 	[%rd1+16], %rd4375;
	add.s64 	%rd4376, %rd281, %rd4464;
	st.local.u64 	[%rd1+24], %rd4376;
	add.s64 	%rd4377, %rd277, %rd4465;
	st.local.u64 	[%rd1+32], %rd4377;
	add.s64 	%rd4378, %rd279, %rd4466;
	st.local.u64 	[%rd1+40], %rd4378;
	add.s64 	%rd4379, %rd278, %rd4467;
	st.local.u64 	[%rd1+48], %rd4379;
	add.s64 	%rd4477, %rd280, %rd4468;
	mov.u32 	%r19429, 0;
	mov.u32 	%r19428, %r19429;
	mov.u32 	%r19427, %r19429;
	mov.u32 	%r19426, %r19429;
	mov.u32 	%r19433, %r19429;
	mov.u32 	%r19432, %r19429;
	mov.u32 	%r19431, %r19429;
	mov.u32 	%r19430, %r19429;
	mov.u32 	%r19437, %r19429;
	mov.u32 	%r19436, %r19429;
	mov.u32 	%r19435, %r19429;
	mov.u32 	%r19434, %r19429;
	mov.u32 	%r19441, %r19429;
	mov.u32 	%r19440, %r19429;
	mov.u32 	%r19439, %r19429;
	mov.u32 	%r19438, %r19429;
	mov.u32 	%r19445, %r19429;
	mov.u32 	%r19444, %r19429;
	mov.u32 	%r19443, %r19429;
	mov.u32 	%r19442, %r19429;
	mov.u32 	%r19449, %r19429;
	mov.u32 	%r19448, %r19429;
	mov.u32 	%r19447, %r19429;
	mov.u32 	%r19446, %r19429;
	mov.u32 	%r19453, %r19429;
	mov.u32 	%r19452, %r19429;
	mov.u32 	%r19451, %r19429;
	mov.u32 	%r19450, %r19429;
	mov.u32 	%r19457, %r19429;
	mov.u32 	%r19456, %r19429;
	mov.u32 	%r19455, %r19429;
	mov.u32 	%r19454, %r19429;
	bra.uni 	BB2_309;

BB2_216:
	shr.u32 	%r12549, %r1789, 2;
	and.b32  	%r12550, %r1788, 3;
	shl.b32 	%r12551, %r12550, 2;
	mov.u32 	%r12552, 1985229328;
	shr.u32 	%r12553, %r12552, %r12551;
	and.b32  	%r1790, %r12553, 65535;
	mov.u32 	%r19426, 0;
	setp.gt.s32	%p102, %r12549, 15;
	@%p102 bra 	BB2_249;

	setp.gt.s32	%p126, %r12549, 7;
	@%p126 bra 	BB2_234;

	setp.gt.s32	%p138, %r12549, 3;
	@%p138 bra 	BB2_226;

	setp.gt.s32	%p144, %r12549, 1;
	@%p144 bra 	BB2_223;

	setp.eq.s32	%p147, %r12549, 0;
	@%p147 bra 	BB2_301;
	bra.uni 	BB2_221;

BB2_301:
	mov.u32 	%r19426, 0;
	// inline asm
	prmt.b32 %r19429, %r19426, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19425, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19418, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19419, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19420, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19421, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19414, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19415, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19416, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19417, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19410, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19411, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19412, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19413, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19406, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19407, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19408, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19409, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19402, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19403, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19404, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19405, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19398, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19399, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19400, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19401, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19394, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19395, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19396, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19397, %r12452, %r19426, %r1790;
	// inline asm
	mov.u32 	%r19427, %r19426;
	mov.u32 	%r19428, %r19426;
	bra.uni 	BB2_302;

BB2_249:
	setp.gt.s32	%p103, %r12549, 23;
	@%p103 bra 	BB2_265;

	setp.gt.s32	%p115, %r12549, 19;
	@%p115 bra 	BB2_258;

	setp.gt.s32	%p121, %r12549, 17;
	@%p121 bra 	BB2_255;

	setp.eq.s32	%p124, %r12549, 16;
	@%p124 bra 	BB2_288;
	bra.uni 	BB2_253;

BB2_288:
	mov.u32 	%r19394, 0;
	// inline asm
	prmt.b32 %r19445, %r19394, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19438, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19439, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19440, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19441, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19434, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19435, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19436, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19437, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19430, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19431, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19432, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19433, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19426, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19427, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19428, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19425, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19418, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19419, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19420, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19421, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19414, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19415, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19416, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19417, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19410, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19411, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19412, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19413, %r12452, %r19394, %r1790;
	// inline asm
	mov.u32 	%r19395, %r19394;
	mov.u32 	%r19396, %r19394;
	mov.u32 	%r19397, %r19394;
	mov.u32 	%r19398, %r19394;
	mov.u32 	%r19399, %r19394;
	mov.u32 	%r19400, %r19394;
	mov.u32 	%r19401, %r19394;
	mov.u32 	%r19402, %r19394;
	mov.u32 	%r19403, %r19394;
	mov.u32 	%r19404, %r19394;
	mov.u32 	%r19405, %r19394;
	mov.u32 	%r19406, %r19394;
	mov.u32 	%r19407, %r19394;
	mov.u32 	%r19408, %r19394;
	mov.u32 	%r19409, %r19394;
	mov.u32 	%r19442, %r19394;
	mov.u32 	%r19443, %r19394;
	mov.u32 	%r19444, %r19394;
	bra.uni 	BB2_295;

BB2_234:
	setp.gt.s32	%p127, %r12549, 11;
	@%p127 bra 	BB2_242;

	setp.gt.s32	%p133, %r12549, 9;
	@%p133 bra 	BB2_239;

	setp.eq.s32	%p136, %r12549, 8;
	@%p136 bra 	BB2_292;
	bra.uni 	BB2_237;

BB2_292:
	mov.u32 	%r19394, 0;
	// inline asm
	prmt.b32 %r19437, %r19394, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19430, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19431, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19432, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19433, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19426, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19427, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19428, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19425, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19418, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19419, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19420, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19421, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19414, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19415, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19416, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19417, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19410, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19411, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19412, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19413, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19406, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19407, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19408, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19409, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19402, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19403, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19404, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19405, %r12452, %r19394, %r1790;
	// inline asm
	mov.u32 	%r19395, %r19394;
	mov.u32 	%r19396, %r19394;
	mov.u32 	%r19397, %r19394;
	mov.u32 	%r19398, %r19394;
	mov.u32 	%r19399, %r19394;
	mov.u32 	%r19400, %r19394;
	mov.u32 	%r19401, %r19394;
	mov.u32 	%r19434, %r19394;
	mov.u32 	%r19435, %r19394;
	mov.u32 	%r19436, %r19394;
	bra.uni 	BB2_293;

BB2_265:
	setp.gt.s32	%p104, %r12549, 27;
	@%p104 bra 	BB2_273;

	setp.gt.s32	%p110, %r12549, 25;
	@%p110 bra 	BB2_270;

	setp.eq.s32	%p113, %r12549, 24;
	@%p113 bra 	BB2_284;
	bra.uni 	BB2_268;

BB2_284:
	mov.u32 	%r19394, 0;
	// inline asm
	prmt.b32 %r19453, %r19394, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19446, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19447, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19448, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19449, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19442, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19443, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19444, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19445, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19438, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19439, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19440, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19441, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19434, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19435, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19436, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19437, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19430, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19431, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19432, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19433, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19426, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19427, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19428, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19425, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19418, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19419, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19420, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19421, %r12452, %r19394, %r1790;
	// inline asm
	mov.u32 	%r19395, %r19394;
	mov.u32 	%r19396, %r19394;
	mov.u32 	%r19397, %r19394;
	mov.u32 	%r19398, %r19394;
	mov.u32 	%r19399, %r19394;
	mov.u32 	%r19400, %r19394;
	mov.u32 	%r19401, %r19394;
	mov.u32 	%r19402, %r19394;
	mov.u32 	%r19403, %r19394;
	mov.u32 	%r19404, %r19394;
	mov.u32 	%r19405, %r19394;
	mov.u32 	%r19406, %r19394;
	mov.u32 	%r19407, %r19394;
	mov.u32 	%r19408, %r19394;
	mov.u32 	%r19409, %r19394;
	mov.u32 	%r19410, %r19394;
	mov.u32 	%r19411, %r19394;
	mov.u32 	%r19412, %r19394;
	mov.u32 	%r19413, %r19394;
	mov.u32 	%r19414, %r19394;
	mov.u32 	%r19415, %r19394;
	mov.u32 	%r19416, %r19394;
	mov.u32 	%r19417, %r19394;
	mov.u32 	%r19450, %r19394;
	mov.u32 	%r19451, %r19394;
	mov.u32 	%r19452, %r19394;
	bra.uni 	BB2_297;

BB2_226:
	setp.gt.s32	%p139, %r12549, 5;
	@%p139 bra 	BB2_230;

	setp.eq.s32	%p142, %r12549, 4;
	@%p142 bra 	BB2_299;
	bra.uni 	BB2_228;

BB2_299:
	mov.u32 	%r19394, 0;
	// inline asm
	prmt.b32 %r19433, %r19394, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19426, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19427, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19428, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19425, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19418, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19419, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19420, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19421, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19414, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19415, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19416, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19417, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19410, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19411, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19412, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19413, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19406, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19407, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19408, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19409, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19402, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19403, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19404, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19405, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19398, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19399, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19400, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19401, %r12452, %r19394, %r1790;
	// inline asm
	mov.u32 	%r19395, %r19394;
	mov.u32 	%r19396, %r19394;
	mov.u32 	%r19397, %r19394;
	mov.u32 	%r19430, %r19394;
	mov.u32 	%r19431, %r19394;
	mov.u32 	%r19432, %r19394;
	bra.uni 	BB2_233;

BB2_258:
	setp.gt.s32	%p116, %r12549, 21;
	@%p116 bra 	BB2_262;

	setp.eq.s32	%p119, %r12549, 20;
	@%p119 bra 	BB2_286;
	bra.uni 	BB2_260;

BB2_286:
	mov.u32 	%r19394, 0;
	// inline asm
	prmt.b32 %r19449, %r19394, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19442, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19443, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19444, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19445, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19438, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19439, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19440, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19441, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19434, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19435, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19436, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19437, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19430, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19431, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19432, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19433, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19426, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19427, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19428, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19425, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19418, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19419, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19420, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19421, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19414, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19415, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19416, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19417, %r12452, %r19394, %r1790;
	// inline asm
	mov.u32 	%r19395, %r19394;
	mov.u32 	%r19396, %r19394;
	mov.u32 	%r19397, %r19394;
	mov.u32 	%r19398, %r19394;
	mov.u32 	%r19399, %r19394;
	mov.u32 	%r19400, %r19394;
	mov.u32 	%r19401, %r19394;
	mov.u32 	%r19402, %r19394;
	mov.u32 	%r19403, %r19394;
	mov.u32 	%r19404, %r19394;
	mov.u32 	%r19405, %r19394;
	mov.u32 	%r19406, %r19394;
	mov.u32 	%r19407, %r19394;
	mov.u32 	%r19408, %r19394;
	mov.u32 	%r19409, %r19394;
	mov.u32 	%r19410, %r19394;
	mov.u32 	%r19411, %r19394;
	mov.u32 	%r19412, %r19394;
	mov.u32 	%r19413, %r19394;
	mov.u32 	%r19446, %r19394;
	mov.u32 	%r19447, %r19394;
	mov.u32 	%r19448, %r19394;
	bra.uni 	BB2_296;

BB2_242:
	setp.gt.s32	%p128, %r12549, 13;
	@%p128 bra 	BB2_246;

	setp.eq.s32	%p131, %r12549, 12;
	@%p131 bra 	BB2_290;
	bra.uni 	BB2_244;

BB2_290:
	mov.u32 	%r19394, 0;
	// inline asm
	prmt.b32 %r19441, %r19394, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19434, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19435, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19436, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19437, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19430, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19431, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19432, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19433, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19426, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19427, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19428, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19425, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19418, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19419, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19420, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19421, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19414, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19415, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19416, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19417, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19410, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19411, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19412, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19413, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19406, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19407, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19408, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19409, %r12452, %r19394, %r1790;
	// inline asm
	mov.u32 	%r19395, %r19394;
	mov.u32 	%r19396, %r19394;
	mov.u32 	%r19397, %r19394;
	mov.u32 	%r19398, %r19394;
	mov.u32 	%r19399, %r19394;
	mov.u32 	%r19400, %r19394;
	mov.u32 	%r19401, %r19394;
	mov.u32 	%r19402, %r19394;
	mov.u32 	%r19403, %r19394;
	mov.u32 	%r19404, %r19394;
	mov.u32 	%r19405, %r19394;
	mov.u32 	%r19438, %r19394;
	mov.u32 	%r19439, %r19394;
	mov.u32 	%r19440, %r19394;
	bra.uni 	BB2_294;

BB2_273:
	setp.gt.s32	%p105, %r12549, 29;
	@%p105 bra 	BB2_277;

	setp.eq.s32	%p108, %r12549, 28;
	@%p108 bra 	BB2_282;
	bra.uni 	BB2_275;

BB2_282:
	mov.u32 	%r19394, 0;
	// inline asm
	prmt.b32 %r19457, %r19394, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19450, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19451, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19452, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19453, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19446, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19447, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19448, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19449, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19442, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19443, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19444, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19445, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19438, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19439, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19440, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19441, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19434, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19435, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19436, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19437, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19430, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19431, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19432, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19433, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19426, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19427, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19428, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19425, %r12452, %r19394, %r1790;
	// inline asm
	mov.u32 	%r19395, %r19394;
	mov.u32 	%r19396, %r19394;
	mov.u32 	%r19397, %r19394;
	mov.u32 	%r19398, %r19394;
	mov.u32 	%r19399, %r19394;
	mov.u32 	%r19400, %r19394;
	mov.u32 	%r19401, %r19394;
	mov.u32 	%r19402, %r19394;
	mov.u32 	%r19403, %r19394;
	mov.u32 	%r19404, %r19394;
	mov.u32 	%r19405, %r19394;
	mov.u32 	%r19406, %r19394;
	mov.u32 	%r19407, %r19394;
	mov.u32 	%r19408, %r19394;
	mov.u32 	%r19409, %r19394;
	mov.u32 	%r19410, %r19394;
	mov.u32 	%r19411, %r19394;
	mov.u32 	%r19412, %r19394;
	mov.u32 	%r19413, %r19394;
	mov.u32 	%r19414, %r19394;
	mov.u32 	%r19415, %r19394;
	mov.u32 	%r19416, %r19394;
	mov.u32 	%r19417, %r19394;
	mov.u32 	%r19418, %r19394;
	mov.u32 	%r19419, %r19394;
	mov.u32 	%r19420, %r19394;
	mov.u32 	%r19421, %r19394;
	mov.u32 	%r19454, %r19394;
	mov.u32 	%r19455, %r19394;
	mov.u32 	%r19456, %r19394;
	bra.uni 	BB2_303;

BB2_223:
	setp.eq.s32	%p145, %r12549, 2;
	@%p145 bra 	BB2_300;
	bra.uni 	BB2_224;

BB2_300:
	mov.u32 	%r19396, 0;
	// inline asm
	prmt.b32 %r19427, %r19396, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19428, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19425, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19418, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19419, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19420, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19421, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19414, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19415, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19416, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19417, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19410, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19411, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19412, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19413, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19406, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19407, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19408, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19409, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19402, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19403, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19404, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19405, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19398, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19399, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19400, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19401, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19394, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19395, %r12452, %r19396, %r1790;
	// inline asm
	mov.u32 	%r19397, %r19396;
	mov.u32 	%r19426, %r19396;
	mov.u32 	%r19430, %r19396;
	mov.u32 	%r19431, %r19396;
	mov.u32 	%r19432, %r19396;
	mov.u32 	%r19433, %r19396;
	mov.u32 	%r19434, %r19396;
	mov.u32 	%r19435, %r19396;
	mov.u32 	%r19436, %r19396;
	mov.u32 	%r19437, %r19396;
	mov.u32 	%r19438, %r19396;
	mov.u32 	%r19439, %r19396;
	mov.u32 	%r19440, %r19396;
	mov.u32 	%r19441, %r19396;
	mov.u32 	%r19442, %r19396;
	mov.u32 	%r19443, %r19396;
	mov.u32 	%r19444, %r19396;
	mov.u32 	%r19445, %r19396;
	mov.u32 	%r19446, %r19396;
	mov.u32 	%r19447, %r19396;
	mov.u32 	%r19448, %r19396;
	mov.u32 	%r19449, %r19396;
	mov.u32 	%r19450, %r19396;
	mov.u32 	%r19451, %r19396;
	mov.u32 	%r19452, %r19396;
	mov.u32 	%r19453, %r19396;
	mov.u32 	%r19454, %r19396;
	mov.u32 	%r19455, %r19396;
	mov.u32 	%r19456, %r19396;
	mov.u32 	%r19457, %r19396;
	bra.uni 	BB2_303;

BB2_255:
	setp.eq.s32	%p122, %r12549, 18;
	@%p122 bra 	BB2_287;
	bra.uni 	BB2_256;

BB2_287:
	mov.u32 	%r19394, 0;
	// inline asm
	prmt.b32 %r19443, %r19394, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19444, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19445, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19438, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19439, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19440, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19441, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19434, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19435, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19436, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19437, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19430, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19431, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19432, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19433, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19426, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19427, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19428, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19425, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19418, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19419, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19420, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19421, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19414, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19415, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19416, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19417, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19410, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19411, %r12452, %r19394, %r1790;
	// inline asm
	mov.u32 	%r19395, %r19394;
	mov.u32 	%r19396, %r19394;
	mov.u32 	%r19397, %r19394;
	mov.u32 	%r19398, %r19394;
	mov.u32 	%r19399, %r19394;
	mov.u32 	%r19400, %r19394;
	mov.u32 	%r19401, %r19394;
	mov.u32 	%r19402, %r19394;
	mov.u32 	%r19403, %r19394;
	mov.u32 	%r19404, %r19394;
	mov.u32 	%r19405, %r19394;
	mov.u32 	%r19406, %r19394;
	mov.u32 	%r19407, %r19394;
	mov.u32 	%r19408, %r19394;
	mov.u32 	%r19409, %r19394;
	mov.u32 	%r19412, %r19394;
	mov.u32 	%r19413, %r19394;
	mov.u32 	%r19442, %r19394;
	bra.uni 	BB2_295;

BB2_239:
	setp.eq.s32	%p134, %r12549, 10;
	@%p134 bra 	BB2_291;
	bra.uni 	BB2_240;

BB2_291:
	mov.u32 	%r19394, 0;
	// inline asm
	prmt.b32 %r19435, %r19394, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19436, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19437, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19430, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19431, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19432, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19433, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19426, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19427, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19428, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19425, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19418, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19419, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19420, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19421, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19414, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19415, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19416, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19417, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19410, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19411, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19412, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19413, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19406, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19407, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19408, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19409, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19402, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19403, %r12452, %r19394, %r1790;
	// inline asm
	mov.u32 	%r19395, %r19394;
	mov.u32 	%r19396, %r19394;
	mov.u32 	%r19397, %r19394;
	mov.u32 	%r19398, %r19394;
	mov.u32 	%r19399, %r19394;
	mov.u32 	%r19400, %r19394;
	mov.u32 	%r19401, %r19394;
	mov.u32 	%r19404, %r19394;
	mov.u32 	%r19405, %r19394;
	mov.u32 	%r19434, %r19394;
	bra.uni 	BB2_293;

BB2_270:
	setp.eq.s32	%p111, %r12549, 26;
	@%p111 bra 	BB2_283;
	bra.uni 	BB2_271;

BB2_283:
	mov.u32 	%r19394, 0;
	// inline asm
	prmt.b32 %r19451, %r19394, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19452, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19453, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19446, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19447, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19448, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19449, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19442, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19443, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19444, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19445, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19438, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19439, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19440, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19441, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19434, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19435, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19436, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19437, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19430, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19431, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19432, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19433, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19426, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19427, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19428, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19425, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19418, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19419, %r12452, %r19394, %r1790;
	// inline asm
	mov.u32 	%r19395, %r19394;
	mov.u32 	%r19396, %r19394;
	mov.u32 	%r19397, %r19394;
	mov.u32 	%r19398, %r19394;
	mov.u32 	%r19399, %r19394;
	mov.u32 	%r19400, %r19394;
	mov.u32 	%r19401, %r19394;
	mov.u32 	%r19402, %r19394;
	mov.u32 	%r19403, %r19394;
	mov.u32 	%r19404, %r19394;
	mov.u32 	%r19405, %r19394;
	mov.u32 	%r19406, %r19394;
	mov.u32 	%r19407, %r19394;
	mov.u32 	%r19408, %r19394;
	mov.u32 	%r19409, %r19394;
	mov.u32 	%r19410, %r19394;
	mov.u32 	%r19411, %r19394;
	mov.u32 	%r19412, %r19394;
	mov.u32 	%r19413, %r19394;
	mov.u32 	%r19414, %r19394;
	mov.u32 	%r19415, %r19394;
	mov.u32 	%r19416, %r19394;
	mov.u32 	%r19417, %r19394;
	mov.u32 	%r19420, %r19394;
	mov.u32 	%r19421, %r19394;
	mov.u32 	%r19450, %r19394;
	bra.uni 	BB2_297;

BB2_230:
	setp.eq.s32	%p140, %r12549, 6;
	@%p140 bra 	BB2_298;
	bra.uni 	BB2_231;

BB2_298:
	mov.u32 	%r19394, 0;
	// inline asm
	prmt.b32 %r19431, %r19394, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19432, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19433, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19426, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19427, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19428, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19425, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19418, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19419, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19420, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19421, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19414, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19415, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19416, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19417, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19410, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19411, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19412, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19413, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19406, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19407, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19408, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19409, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19402, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19403, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19404, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19405, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19398, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19399, %r12452, %r19394, %r1790;
	// inline asm
	mov.u32 	%r19395, %r19394;
	mov.u32 	%r19396, %r19394;
	mov.u32 	%r19397, %r19394;
	mov.u32 	%r19400, %r19394;
	mov.u32 	%r19401, %r19394;
	mov.u32 	%r19430, %r19394;
	bra.uni 	BB2_233;

BB2_262:
	setp.eq.s32	%p117, %r12549, 22;
	@%p117 bra 	BB2_285;
	bra.uni 	BB2_263;

BB2_285:
	mov.u32 	%r19394, 0;
	// inline asm
	prmt.b32 %r19447, %r19394, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19448, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19449, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19442, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19443, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19444, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19445, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19438, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19439, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19440, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19441, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19434, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19435, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19436, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19437, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19430, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19431, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19432, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19433, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19426, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19427, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19428, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19425, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19418, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19419, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19420, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19421, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19414, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19415, %r12452, %r19394, %r1790;
	// inline asm
	mov.u32 	%r19395, %r19394;
	mov.u32 	%r19396, %r19394;
	mov.u32 	%r19397, %r19394;
	mov.u32 	%r19398, %r19394;
	mov.u32 	%r19399, %r19394;
	mov.u32 	%r19400, %r19394;
	mov.u32 	%r19401, %r19394;
	mov.u32 	%r19402, %r19394;
	mov.u32 	%r19403, %r19394;
	mov.u32 	%r19404, %r19394;
	mov.u32 	%r19405, %r19394;
	mov.u32 	%r19406, %r19394;
	mov.u32 	%r19407, %r19394;
	mov.u32 	%r19408, %r19394;
	mov.u32 	%r19409, %r19394;
	mov.u32 	%r19410, %r19394;
	mov.u32 	%r19411, %r19394;
	mov.u32 	%r19412, %r19394;
	mov.u32 	%r19413, %r19394;
	mov.u32 	%r19416, %r19394;
	mov.u32 	%r19417, %r19394;
	mov.u32 	%r19446, %r19394;
	bra.uni 	BB2_296;

BB2_246:
	setp.eq.s32	%p129, %r12549, 14;
	@%p129 bra 	BB2_289;
	bra.uni 	BB2_247;

BB2_289:
	mov.u32 	%r19394, 0;
	// inline asm
	prmt.b32 %r19439, %r19394, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19440, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19441, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19434, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19435, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19436, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19437, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19430, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19431, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19432, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19433, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19426, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19427, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19428, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19425, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19418, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19419, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19420, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19421, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19414, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19415, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19416, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19417, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19410, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19411, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19412, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19413, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19406, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19407, %r12452, %r19394, %r1790;
	// inline asm
	mov.u32 	%r19395, %r19394;
	mov.u32 	%r19396, %r19394;
	mov.u32 	%r19397, %r19394;
	mov.u32 	%r19398, %r19394;
	mov.u32 	%r19399, %r19394;
	mov.u32 	%r19400, %r19394;
	mov.u32 	%r19401, %r19394;
	mov.u32 	%r19402, %r19394;
	mov.u32 	%r19403, %r19394;
	mov.u32 	%r19404, %r19394;
	mov.u32 	%r19405, %r19394;
	mov.u32 	%r19408, %r19394;
	mov.u32 	%r19409, %r19394;
	mov.u32 	%r19438, %r19394;
	bra.uni 	BB2_294;

BB2_277:
	setp.eq.s32	%p106, %r12549, 30;
	@%p106 bra 	BB2_281;
	bra.uni 	BB2_278;

BB2_281:
	mov.u32 	%r19394, 0;
	// inline asm
	prmt.b32 %r19455, %r19394, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19456, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19457, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19450, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19451, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19452, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19453, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19446, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19447, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19448, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19449, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19442, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19443, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19444, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19445, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19438, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19439, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19440, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19441, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19434, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19435, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19436, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19437, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19430, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19431, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19432, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19433, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19426, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19427, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19428, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r12452, %r19394, %r1790;
	// inline asm
	mov.u32 	%r19395, %r19394;
	mov.u32 	%r19396, %r19394;
	mov.u32 	%r19397, %r19394;
	mov.u32 	%r19398, %r19394;
	mov.u32 	%r19399, %r19394;
	mov.u32 	%r19400, %r19394;
	mov.u32 	%r19401, %r19394;
	mov.u32 	%r19402, %r19394;
	mov.u32 	%r19403, %r19394;
	mov.u32 	%r19404, %r19394;
	mov.u32 	%r19405, %r19394;
	mov.u32 	%r19406, %r19394;
	mov.u32 	%r19407, %r19394;
	mov.u32 	%r19408, %r19394;
	mov.u32 	%r19409, %r19394;
	mov.u32 	%r19410, %r19394;
	mov.u32 	%r19411, %r19394;
	mov.u32 	%r19412, %r19394;
	mov.u32 	%r19413, %r19394;
	mov.u32 	%r19414, %r19394;
	mov.u32 	%r19415, %r19394;
	mov.u32 	%r19416, %r19394;
	mov.u32 	%r19417, %r19394;
	mov.u32 	%r19418, %r19394;
	mov.u32 	%r19419, %r19394;
	mov.u32 	%r19420, %r19394;
	mov.u32 	%r19421, %r19394;
	mov.u32 	%r19424, %r19394;
	mov.u32 	%r19425, %r19394;
	mov.u32 	%r19454, %r19394;
	bra.uni 	BB2_303;

BB2_221:
	setp.eq.s32	%p148, %r12549, 1;
	@%p148 bra 	BB2_222;
	bra.uni 	BB2_279;

BB2_222:
	mov.u32 	%r19397, 0;
	// inline asm
	prmt.b32 %r19428, %r19397, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19425, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19418, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19419, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19420, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19421, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19414, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19415, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19416, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19417, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19410, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19411, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19412, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19413, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19406, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19407, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19408, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19409, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19402, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19403, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19404, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19405, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19398, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19399, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19400, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19401, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19394, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19395, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19396, %r12452, %r19397, %r1790;
	// inline asm
	mov.u32 	%r19426, %r19397;
	mov.u32 	%r19427, %r19397;
	mov.u32 	%r19430, %r19397;
	mov.u32 	%r19431, %r19397;
	mov.u32 	%r19432, %r19397;
	mov.u32 	%r19433, %r19397;
	mov.u32 	%r19434, %r19397;
	mov.u32 	%r19435, %r19397;
	mov.u32 	%r19436, %r19397;
	mov.u32 	%r19437, %r19397;
	mov.u32 	%r19438, %r19397;
	mov.u32 	%r19439, %r19397;
	mov.u32 	%r19440, %r19397;
	mov.u32 	%r19441, %r19397;
	mov.u32 	%r19442, %r19397;
	mov.u32 	%r19443, %r19397;
	mov.u32 	%r19444, %r19397;
	mov.u32 	%r19445, %r19397;
	mov.u32 	%r19446, %r19397;
	mov.u32 	%r19447, %r19397;
	mov.u32 	%r19448, %r19397;
	mov.u32 	%r19449, %r19397;
	mov.u32 	%r19450, %r19397;
	mov.u32 	%r19451, %r19397;
	mov.u32 	%r19452, %r19397;
	mov.u32 	%r19453, %r19397;
	mov.u32 	%r19454, %r19397;
	mov.u32 	%r19455, %r19397;
	mov.u32 	%r19456, %r19397;
	mov.u32 	%r19457, %r19397;
	bra.uni 	BB2_303;

BB2_253:
	setp.eq.s32	%p125, %r12549, 17;
	@%p125 bra 	BB2_254;
	bra.uni 	BB2_279;

BB2_254:
	mov.u32 	%r19394, 0;
	// inline asm
	prmt.b32 %r19444, %r19394, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19445, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19438, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19439, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19440, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19441, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19434, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19435, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19436, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19437, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19430, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19431, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19432, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19433, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19426, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19427, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19428, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19425, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19418, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19419, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19420, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19421, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19414, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19415, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19416, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19417, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19410, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19411, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19412, %r12452, %r19394, %r1790;
	// inline asm
	mov.u32 	%r19395, %r19394;
	mov.u32 	%r19396, %r19394;
	mov.u32 	%r19397, %r19394;
	mov.u32 	%r19398, %r19394;
	mov.u32 	%r19399, %r19394;
	mov.u32 	%r19400, %r19394;
	mov.u32 	%r19401, %r19394;
	mov.u32 	%r19402, %r19394;
	mov.u32 	%r19403, %r19394;
	mov.u32 	%r19404, %r19394;
	mov.u32 	%r19405, %r19394;
	mov.u32 	%r19406, %r19394;
	mov.u32 	%r19407, %r19394;
	mov.u32 	%r19408, %r19394;
	mov.u32 	%r19409, %r19394;
	mov.u32 	%r19413, %r19394;
	mov.u32 	%r19442, %r19394;
	mov.u32 	%r19443, %r19394;
	bra.uni 	BB2_295;

BB2_237:
	setp.eq.s32	%p137, %r12549, 9;
	@%p137 bra 	BB2_238;
	bra.uni 	BB2_279;

BB2_238:
	mov.u32 	%r19394, 0;
	// inline asm
	prmt.b32 %r19436, %r19394, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19437, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19430, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19431, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19432, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19433, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19426, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19427, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19428, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19425, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19418, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19419, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19420, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19421, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19414, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19415, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19416, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19417, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19410, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19411, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19412, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19413, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19406, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19407, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19408, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19409, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19402, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19403, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19404, %r12452, %r19394, %r1790;
	// inline asm
	mov.u32 	%r19395, %r19394;
	mov.u32 	%r19396, %r19394;
	mov.u32 	%r19397, %r19394;
	mov.u32 	%r19398, %r19394;
	mov.u32 	%r19399, %r19394;
	mov.u32 	%r19400, %r19394;
	mov.u32 	%r19401, %r19394;
	mov.u32 	%r19405, %r19394;
	mov.u32 	%r19434, %r19394;
	mov.u32 	%r19435, %r19394;
	bra.uni 	BB2_293;

BB2_268:
	setp.eq.s32	%p114, %r12549, 25;
	@%p114 bra 	BB2_269;
	bra.uni 	BB2_279;

BB2_269:
	mov.u32 	%r19394, 0;
	// inline asm
	prmt.b32 %r19452, %r19394, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19453, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19446, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19447, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19448, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19449, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19442, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19443, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19444, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19445, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19438, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19439, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19440, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19441, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19434, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19435, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19436, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19437, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19430, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19431, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19432, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19433, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19426, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19427, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19428, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19425, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19418, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19419, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19420, %r12452, %r19394, %r1790;
	// inline asm
	mov.u32 	%r19395, %r19394;
	mov.u32 	%r19396, %r19394;
	mov.u32 	%r19397, %r19394;
	mov.u32 	%r19398, %r19394;
	mov.u32 	%r19399, %r19394;
	mov.u32 	%r19400, %r19394;
	mov.u32 	%r19401, %r19394;
	mov.u32 	%r19402, %r19394;
	mov.u32 	%r19403, %r19394;
	mov.u32 	%r19404, %r19394;
	mov.u32 	%r19405, %r19394;
	mov.u32 	%r19406, %r19394;
	mov.u32 	%r19407, %r19394;
	mov.u32 	%r19408, %r19394;
	mov.u32 	%r19409, %r19394;
	mov.u32 	%r19410, %r19394;
	mov.u32 	%r19411, %r19394;
	mov.u32 	%r19412, %r19394;
	mov.u32 	%r19413, %r19394;
	mov.u32 	%r19414, %r19394;
	mov.u32 	%r19415, %r19394;
	mov.u32 	%r19416, %r19394;
	mov.u32 	%r19417, %r19394;
	mov.u32 	%r19421, %r19394;
	mov.u32 	%r19450, %r19394;
	mov.u32 	%r19451, %r19394;
	bra.uni 	BB2_297;

BB2_228:
	setp.eq.s32	%p143, %r12549, 5;
	@%p143 bra 	BB2_229;
	bra.uni 	BB2_279;

BB2_229:
	mov.u32 	%r19394, 0;
	// inline asm
	prmt.b32 %r19432, %r19394, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19433, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19426, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19427, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19428, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19425, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19418, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19419, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19420, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19421, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19414, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19415, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19416, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19417, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19410, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19411, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19412, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19413, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19406, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19407, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19408, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19409, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19402, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19403, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19404, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19405, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19398, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19399, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19400, %r12452, %r19394, %r1790;
	// inline asm
	mov.u32 	%r19395, %r19394;
	mov.u32 	%r19396, %r19394;
	mov.u32 	%r19397, %r19394;
	mov.u32 	%r19401, %r19394;
	mov.u32 	%r19430, %r19394;
	mov.u32 	%r19431, %r19394;
	bra.uni 	BB2_233;

BB2_260:
	setp.eq.s32	%p120, %r12549, 21;
	@%p120 bra 	BB2_261;
	bra.uni 	BB2_279;

BB2_261:
	mov.u32 	%r19394, 0;
	// inline asm
	prmt.b32 %r19448, %r19394, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19449, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19442, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19443, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19444, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19445, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19438, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19439, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19440, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19441, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19434, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19435, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19436, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19437, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19430, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19431, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19432, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19433, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19426, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19427, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19428, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19425, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19418, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19419, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19420, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19421, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19414, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19415, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19416, %r12452, %r19394, %r1790;
	// inline asm
	mov.u32 	%r19395, %r19394;
	mov.u32 	%r19396, %r19394;
	mov.u32 	%r19397, %r19394;
	mov.u32 	%r19398, %r19394;
	mov.u32 	%r19399, %r19394;
	mov.u32 	%r19400, %r19394;
	mov.u32 	%r19401, %r19394;
	mov.u32 	%r19402, %r19394;
	mov.u32 	%r19403, %r19394;
	mov.u32 	%r19404, %r19394;
	mov.u32 	%r19405, %r19394;
	mov.u32 	%r19406, %r19394;
	mov.u32 	%r19407, %r19394;
	mov.u32 	%r19408, %r19394;
	mov.u32 	%r19409, %r19394;
	mov.u32 	%r19410, %r19394;
	mov.u32 	%r19411, %r19394;
	mov.u32 	%r19412, %r19394;
	mov.u32 	%r19413, %r19394;
	mov.u32 	%r19417, %r19394;
	mov.u32 	%r19446, %r19394;
	mov.u32 	%r19447, %r19394;
	bra.uni 	BB2_296;

BB2_244:
	setp.eq.s32	%p132, %r12549, 13;
	@%p132 bra 	BB2_245;
	bra.uni 	BB2_279;

BB2_245:
	mov.u32 	%r19394, 0;
	// inline asm
	prmt.b32 %r19440, %r19394, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19441, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19434, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19435, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19436, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19437, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19430, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19431, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19432, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19433, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19426, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19427, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19428, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19425, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19418, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19419, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19420, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19421, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19414, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19415, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19416, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19417, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19410, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19411, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19412, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19413, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19406, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19407, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19408, %r12452, %r19394, %r1790;
	// inline asm
	mov.u32 	%r19395, %r19394;
	mov.u32 	%r19396, %r19394;
	mov.u32 	%r19397, %r19394;
	mov.u32 	%r19398, %r19394;
	mov.u32 	%r19399, %r19394;
	mov.u32 	%r19400, %r19394;
	mov.u32 	%r19401, %r19394;
	mov.u32 	%r19402, %r19394;
	mov.u32 	%r19403, %r19394;
	mov.u32 	%r19404, %r19394;
	mov.u32 	%r19405, %r19394;
	mov.u32 	%r19409, %r19394;
	mov.u32 	%r19438, %r19394;
	mov.u32 	%r19439, %r19394;
	bra.uni 	BB2_294;

BB2_275:
	setp.eq.s32	%p109, %r12549, 29;
	@%p109 bra 	BB2_276;
	bra.uni 	BB2_279;

BB2_276:
	mov.u32 	%r19394, 0;
	// inline asm
	prmt.b32 %r19456, %r19394, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19457, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19450, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19451, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19452, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19453, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19446, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19447, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19448, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19449, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19442, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19443, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19444, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19445, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19438, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19439, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19440, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19441, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19434, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19435, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19436, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19437, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19430, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19431, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19432, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19433, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19426, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19427, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19428, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r12452, %r19394, %r1790;
	// inline asm
	mov.u32 	%r19395, %r19394;
	mov.u32 	%r19396, %r19394;
	mov.u32 	%r19397, %r19394;
	mov.u32 	%r19398, %r19394;
	mov.u32 	%r19399, %r19394;
	mov.u32 	%r19400, %r19394;
	mov.u32 	%r19401, %r19394;
	mov.u32 	%r19402, %r19394;
	mov.u32 	%r19403, %r19394;
	mov.u32 	%r19404, %r19394;
	mov.u32 	%r19405, %r19394;
	mov.u32 	%r19406, %r19394;
	mov.u32 	%r19407, %r19394;
	mov.u32 	%r19408, %r19394;
	mov.u32 	%r19409, %r19394;
	mov.u32 	%r19410, %r19394;
	mov.u32 	%r19411, %r19394;
	mov.u32 	%r19412, %r19394;
	mov.u32 	%r19413, %r19394;
	mov.u32 	%r19414, %r19394;
	mov.u32 	%r19415, %r19394;
	mov.u32 	%r19416, %r19394;
	mov.u32 	%r19417, %r19394;
	mov.u32 	%r19418, %r19394;
	mov.u32 	%r19419, %r19394;
	mov.u32 	%r19420, %r19394;
	mov.u32 	%r19421, %r19394;
	mov.u32 	%r19425, %r19394;
	mov.u32 	%r19454, %r19394;
	mov.u32 	%r19455, %r19394;
	bra.uni 	BB2_303;

BB2_224:
	setp.eq.s32	%p146, %r12549, 3;
	@%p146 bra 	BB2_225;
	bra.uni 	BB2_279;

BB2_225:
	mov.u32 	%r19395, 0;
	// inline asm
	prmt.b32 %r19426, %r19395, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19427, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19428, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19425, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19418, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19419, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19420, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19421, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19414, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19415, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19416, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19417, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19410, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19411, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19412, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19413, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19406, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19407, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19408, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19409, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19402, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19403, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19404, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19405, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19398, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19399, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19400, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19401, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19394, %r12452, %r19395, %r1790;
	// inline asm
	mov.u32 	%r19396, %r19395;
	mov.u32 	%r19397, %r19395;
	mov.u32 	%r19430, %r19395;
	mov.u32 	%r19431, %r19395;
	mov.u32 	%r19432, %r19395;
	mov.u32 	%r19433, %r19395;
	mov.u32 	%r19434, %r19395;
	mov.u32 	%r19435, %r19395;
	mov.u32 	%r19436, %r19395;
	mov.u32 	%r19437, %r19395;
	mov.u32 	%r19438, %r19395;
	mov.u32 	%r19439, %r19395;
	mov.u32 	%r19440, %r19395;
	mov.u32 	%r19441, %r19395;
	mov.u32 	%r19442, %r19395;
	mov.u32 	%r19443, %r19395;
	mov.u32 	%r19444, %r19395;
	mov.u32 	%r19445, %r19395;
	mov.u32 	%r19446, %r19395;
	mov.u32 	%r19447, %r19395;
	mov.u32 	%r19448, %r19395;
	mov.u32 	%r19449, %r19395;
	mov.u32 	%r19450, %r19395;
	mov.u32 	%r19451, %r19395;
	mov.u32 	%r19452, %r19395;
	mov.u32 	%r19453, %r19395;
	mov.u32 	%r19454, %r19395;
	mov.u32 	%r19455, %r19395;
	mov.u32 	%r19456, %r19395;
	mov.u32 	%r19457, %r19395;
	bra.uni 	BB2_303;

BB2_256:
	setp.eq.s32	%p123, %r12549, 19;
	@%p123 bra 	BB2_257;
	bra.uni 	BB2_279;

BB2_257:
	mov.u32 	%r19394, 0;
	// inline asm
	prmt.b32 %r19442, %r19394, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19443, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19444, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19445, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19438, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19439, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19440, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19441, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19434, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19435, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19436, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19437, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19430, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19431, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19432, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19433, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19426, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19427, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19428, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19425, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19418, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19419, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19420, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19421, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19414, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19415, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19416, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19417, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19410, %r12452, %r19394, %r1790;
	// inline asm
	mov.u32 	%r19395, %r19394;
	mov.u32 	%r19396, %r19394;
	mov.u32 	%r19397, %r19394;
	mov.u32 	%r19398, %r19394;
	mov.u32 	%r19399, %r19394;
	mov.u32 	%r19400, %r19394;
	mov.u32 	%r19401, %r19394;
	mov.u32 	%r19402, %r19394;
	mov.u32 	%r19403, %r19394;
	mov.u32 	%r19404, %r19394;
	mov.u32 	%r19405, %r19394;
	mov.u32 	%r19406, %r19394;
	mov.u32 	%r19407, %r19394;
	mov.u32 	%r19408, %r19394;
	mov.u32 	%r19409, %r19394;
	mov.u32 	%r19411, %r19394;
	mov.u32 	%r19412, %r19394;
	mov.u32 	%r19413, %r19394;
	bra.uni 	BB2_295;

BB2_240:
	setp.eq.s32	%p135, %r12549, 11;
	@%p135 bra 	BB2_241;
	bra.uni 	BB2_279;

BB2_241:
	mov.u32 	%r19394, 0;
	// inline asm
	prmt.b32 %r19434, %r19394, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19435, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19436, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19437, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19430, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19431, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19432, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19433, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19426, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19427, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19428, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19425, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19418, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19419, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19420, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19421, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19414, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19415, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19416, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19417, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19410, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19411, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19412, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19413, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19406, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19407, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19408, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19409, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19402, %r12452, %r19394, %r1790;
	// inline asm
	mov.u32 	%r19395, %r19394;
	mov.u32 	%r19396, %r19394;
	mov.u32 	%r19397, %r19394;
	mov.u32 	%r19398, %r19394;
	mov.u32 	%r19399, %r19394;
	mov.u32 	%r19400, %r19394;
	mov.u32 	%r19401, %r19394;
	mov.u32 	%r19403, %r19394;
	mov.u32 	%r19404, %r19394;
	mov.u32 	%r19405, %r19394;
	bra.uni 	BB2_293;

BB2_271:
	setp.eq.s32	%p112, %r12549, 27;
	@%p112 bra 	BB2_272;
	bra.uni 	BB2_279;

BB2_272:
	mov.u32 	%r19394, 0;
	// inline asm
	prmt.b32 %r19450, %r19394, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19451, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19452, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19453, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19446, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19447, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19448, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19449, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19442, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19443, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19444, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19445, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19438, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19439, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19440, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19441, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19434, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19435, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19436, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19437, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19430, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19431, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19432, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19433, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19426, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19427, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19428, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19425, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19418, %r12452, %r19394, %r1790;
	// inline asm
	mov.u32 	%r19395, %r19394;
	mov.u32 	%r19396, %r19394;
	mov.u32 	%r19397, %r19394;
	mov.u32 	%r19398, %r19394;
	mov.u32 	%r19399, %r19394;
	mov.u32 	%r19400, %r19394;
	mov.u32 	%r19401, %r19394;
	mov.u32 	%r19402, %r19394;
	mov.u32 	%r19403, %r19394;
	mov.u32 	%r19404, %r19394;
	mov.u32 	%r19405, %r19394;
	mov.u32 	%r19406, %r19394;
	mov.u32 	%r19407, %r19394;
	mov.u32 	%r19408, %r19394;
	mov.u32 	%r19409, %r19394;
	mov.u32 	%r19410, %r19394;
	mov.u32 	%r19411, %r19394;
	mov.u32 	%r19412, %r19394;
	mov.u32 	%r19413, %r19394;
	mov.u32 	%r19414, %r19394;
	mov.u32 	%r19415, %r19394;
	mov.u32 	%r19416, %r19394;
	mov.u32 	%r19417, %r19394;
	mov.u32 	%r19419, %r19394;
	mov.u32 	%r19420, %r19394;
	mov.u32 	%r19421, %r19394;
	bra.uni 	BB2_297;

BB2_231:
	setp.eq.s32	%p141, %r12549, 7;
	@%p141 bra 	BB2_232;
	bra.uni 	BB2_279;

BB2_232:
	mov.u32 	%r19394, 0;
	// inline asm
	prmt.b32 %r19430, %r19394, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19431, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19432, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19433, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19426, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19427, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19428, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19425, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19418, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19419, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19420, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19421, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19414, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19415, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19416, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19417, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19410, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19411, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19412, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19413, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19406, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19407, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19408, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19409, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19402, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19403, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19404, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19405, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19398, %r12452, %r19394, %r1790;
	// inline asm
	mov.u32 	%r19395, %r19394;
	mov.u32 	%r19396, %r19394;
	mov.u32 	%r19397, %r19394;
	mov.u32 	%r19399, %r19394;
	mov.u32 	%r19400, %r19394;
	mov.u32 	%r19401, %r19394;

BB2_233:
	mov.u32 	%r19434, %r19394;
	mov.u32 	%r19435, %r19394;
	mov.u32 	%r19436, %r19394;
	mov.u32 	%r19437, %r19394;

BB2_293:
	mov.u32 	%r19438, %r19394;
	mov.u32 	%r19439, %r19394;
	mov.u32 	%r19440, %r19394;
	mov.u32 	%r19441, %r19394;

BB2_294:
	mov.u32 	%r19442, %r19394;
	mov.u32 	%r19443, %r19394;
	mov.u32 	%r19444, %r19394;
	mov.u32 	%r19445, %r19394;

BB2_295:
	mov.u32 	%r19446, %r19394;
	mov.u32 	%r19447, %r19394;
	mov.u32 	%r19448, %r19394;
	mov.u32 	%r19449, %r19394;

BB2_296:
	mov.u32 	%r19450, %r19394;
	mov.u32 	%r19451, %r19394;
	mov.u32 	%r19452, %r19394;
	mov.u32 	%r19453, %r19394;

BB2_297:
	mov.u32 	%r19454, %r19394;
	mov.u32 	%r19455, %r19394;
	mov.u32 	%r19456, %r19394;
	mov.u32 	%r19457, %r19394;
	bra.uni 	BB2_303;

BB2_263:
	setp.eq.s32	%p118, %r12549, 23;
	@%p118 bra 	BB2_264;
	bra.uni 	BB2_279;

BB2_264:
	mov.u32 	%r19394, 0;
	// inline asm
	prmt.b32 %r19446, %r19394, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19447, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19448, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19449, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19442, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19443, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19444, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19445, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19438, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19439, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19440, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19441, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19434, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19435, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19436, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19437, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19430, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19431, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19432, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19433, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19426, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19427, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19428, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19425, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19418, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19419, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19420, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19421, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19414, %r12452, %r19394, %r1790;
	// inline asm
	mov.u32 	%r19395, %r19394;
	mov.u32 	%r19396, %r19394;
	mov.u32 	%r19397, %r19394;
	mov.u32 	%r19398, %r19394;
	mov.u32 	%r19399, %r19394;
	mov.u32 	%r19400, %r19394;
	mov.u32 	%r19401, %r19394;
	mov.u32 	%r19402, %r19394;
	mov.u32 	%r19403, %r19394;
	mov.u32 	%r19404, %r19394;
	mov.u32 	%r19405, %r19394;
	mov.u32 	%r19406, %r19394;
	mov.u32 	%r19407, %r19394;
	mov.u32 	%r19408, %r19394;
	mov.u32 	%r19409, %r19394;
	mov.u32 	%r19410, %r19394;
	mov.u32 	%r19411, %r19394;
	mov.u32 	%r19412, %r19394;
	mov.u32 	%r19413, %r19394;
	mov.u32 	%r19415, %r19394;
	mov.u32 	%r19416, %r19394;
	mov.u32 	%r19417, %r19394;
	bra.uni 	BB2_296;

BB2_247:
	setp.eq.s32	%p130, %r12549, 15;
	@%p130 bra 	BB2_248;
	bra.uni 	BB2_279;

BB2_248:
	mov.u32 	%r19394, 0;
	// inline asm
	prmt.b32 %r19438, %r19394, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19439, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19440, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19441, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19434, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19435, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19436, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19437, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19430, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19431, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19432, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19433, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19426, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19427, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19428, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19423, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19424, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19425, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19418, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19419, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19420, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19421, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19414, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19415, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19416, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19417, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19410, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19411, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19412, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19413, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19406, %r12452, %r19394, %r1790;
	// inline asm
	mov.u32 	%r19395, %r19394;
	mov.u32 	%r19396, %r19394;
	mov.u32 	%r19397, %r19394;
	mov.u32 	%r19398, %r19394;
	mov.u32 	%r19399, %r19394;
	mov.u32 	%r19400, %r19394;
	mov.u32 	%r19401, %r19394;
	mov.u32 	%r19402, %r19394;
	mov.u32 	%r19403, %r19394;
	mov.u32 	%r19404, %r19394;
	mov.u32 	%r19405, %r19394;
	mov.u32 	%r19407, %r19394;
	mov.u32 	%r19408, %r19394;
	mov.u32 	%r19409, %r19394;
	bra.uni 	BB2_294;

BB2_278:
	setp.ne.s32	%p107, %r12549, 31;
	@%p107 bra 	BB2_279;

	mov.u32 	%r19394, 0;
	// inline asm
	prmt.b32 %r19454, %r19394, %r19422, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19455, %r19422, %r19423, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19456, %r19423, %r19424, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19457, %r19424, %r19425, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19450, %r19425, %r19418, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19451, %r19418, %r19419, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19452, %r19419, %r19420, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19453, %r19420, %r19421, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19446, %r19421, %r19414, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19447, %r19414, %r19415, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19448, %r19415, %r19416, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19449, %r19416, %r19417, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19442, %r19417, %r19410, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19443, %r19410, %r19411, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19444, %r19411, %r19412, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19445, %r19412, %r19413, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19438, %r19413, %r19406, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19439, %r19406, %r19407, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19440, %r19407, %r19408, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19441, %r19408, %r19409, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19434, %r19409, %r19402, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19435, %r19402, %r19403, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19436, %r19403, %r19404, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19437, %r19404, %r19405, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19430, %r19405, %r19398, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19431, %r19398, %r19399, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19432, %r19399, %r19400, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19433, %r19400, %r19401, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19426, %r19401, %r12458, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19427, %r12458, %r12456, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19428, %r12456, %r12454, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19429, %r12454, %r12452, %r1790;
	// inline asm
	// inline asm
	prmt.b32 %r19422, %r12452, %r19394, %r1790;
	// inline asm
	mov.u32 	%r19395, %r19394;
	mov.u32 	%r19396, %r19394;
	mov.u32 	%r19397, %r19394;
	mov.u32 	%r19398, %r19394;
	mov.u32 	%r19399, %r19394;
	mov.u32 	%r19400, %r19394;
	mov.u32 	%r19401, %r19394;
	mov.u32 	%r19402, %r19394;
	mov.u32 	%r19403, %r19394;
	mov.u32 	%r19404, %r19394;
	mov.u32 	%r19405, %r19394;
	mov.u32 	%r19406, %r19394;
	mov.u32 	%r19407, %r19394;
	mov.u32 	%r19408, %r19394;
	mov.u32 	%r19409, %r19394;
	mov.u32 	%r19410, %r19394;
	mov.u32 	%r19411, %r19394;
	mov.u32 	%r19412, %r19394;
	mov.u32 	%r19413, %r19394;
	mov.u32 	%r19414, %r19394;
	mov.u32 	%r19415, %r19394;
	mov.u32 	%r19416, %r19394;
	mov.u32 	%r19417, %r19394;
	mov.u32 	%r19418, %r19394;
	mov.u32 	%r19419, %r19394;
	mov.u32 	%r19420, %r19394;
	mov.u32 	%r19421, %r19394;
	mov.u32 	%r19423, %r19394;
	mov.u32 	%r19424, %r19394;
	mov.u32 	%r19425, %r19394;
	bra.uni 	BB2_303;

BB2_279:
	mov.u32 	%r19394, %r12458;
	mov.u32 	%r19395, %r12456;
	mov.u32 	%r19396, %r12454;
	mov.u32 	%r19397, %r12452;
	mov.u32 	%r19427, %r19426;
	mov.u32 	%r19428, %r19426;
	mov.u32 	%r19429, %r19426;

BB2_302:
	mov.u32 	%r19430, %r19426;
	mov.u32 	%r19431, %r19426;
	mov.u32 	%r19432, %r19426;
	mov.u32 	%r19433, %r19426;
	mov.u32 	%r19434, %r19426;
	mov.u32 	%r19435, %r19426;
	mov.u32 	%r19436, %r19426;
	mov.u32 	%r19437, %r19426;
	mov.u32 	%r19438, %r19426;
	mov.u32 	%r19439, %r19426;
	mov.u32 	%r19440, %r19426;
	mov.u32 	%r19441, %r19426;
	mov.u32 	%r19442, %r19426;
	mov.u32 	%r19443, %r19426;
	mov.u32 	%r19444, %r19426;
	mov.u32 	%r19445, %r19426;
	mov.u32 	%r19446, %r19426;
	mov.u32 	%r19447, %r19426;
	mov.u32 	%r19448, %r19426;
	mov.u32 	%r19449, %r19426;
	mov.u32 	%r19450, %r19426;
	mov.u32 	%r19451, %r19426;
	mov.u32 	%r19452, %r19426;
	mov.u32 	%r19453, %r19426;
	mov.u32 	%r19454, %r19426;
	mov.u32 	%r19455, %r19426;
	mov.u32 	%r19456, %r19426;
	mov.u32 	%r19457, %r19426;

BB2_303:
	ld.local.u32 	%r17771, [%rd1+64];
	or.b32  	%r17772, %r17771, %r19397;
	st.local.u32 	[%rd1+64], %r17772;
	ld.local.u32 	%r17773, [%rd1+68];
	or.b32  	%r17774, %r17773, %r19396;
	st.local.u32 	[%rd1+68], %r17774;
	ld.local.u32 	%r17775, [%rd1+72];
	or.b32  	%r17776, %r17775, %r19395;
	st.local.u32 	[%rd1+72], %r17776;
	ld.local.u32 	%r17777, [%rd1+76];
	or.b32  	%r17778, %r17777, %r19394;
	st.local.u32 	[%rd1+76], %r17778;
	ld.local.u32 	%r17779, [%rd1+80];
	or.b32  	%r17780, %r17779, %r19401;
	st.local.u32 	[%rd1+80], %r17780;
	ld.local.u32 	%r17781, [%rd1+84];
	or.b32  	%r17782, %r17781, %r19400;
	st.local.u32 	[%rd1+84], %r17782;
	ld.local.u32 	%r17783, [%rd1+88];
	or.b32  	%r17784, %r17783, %r19399;
	st.local.u32 	[%rd1+88], %r17784;
	ld.local.u32 	%r17785, [%rd1+92];
	or.b32  	%r17786, %r17785, %r19398;
	st.local.u32 	[%rd1+92], %r17786;
	ld.local.u32 	%r17787, [%rd1+96];
	or.b32  	%r17788, %r17787, %r19405;
	st.local.u32 	[%rd1+96], %r17788;
	ld.local.u32 	%r17789, [%rd1+100];
	or.b32  	%r17790, %r17789, %r19404;
	st.local.u32 	[%rd1+100], %r17790;
	ld.local.u32 	%r17791, [%rd1+104];
	or.b32  	%r17792, %r17791, %r19403;
	st.local.u32 	[%rd1+104], %r17792;
	ld.local.u32 	%r17793, [%rd1+108];
	or.b32  	%r17794, %r17793, %r19402;
	st.local.u32 	[%rd1+108], %r17794;
	ld.local.u32 	%r17795, [%rd1+112];
	or.b32  	%r17796, %r17795, %r19409;
	st.local.u32 	[%rd1+112], %r17796;
	ld.local.u32 	%r17797, [%rd1+116];
	or.b32  	%r17798, %r17797, %r19408;
	st.local.u32 	[%rd1+116], %r17798;
	ld.local.u32 	%r17799, [%rd1+120];
	or.b32  	%r17800, %r17799, %r19407;
	st.local.u32 	[%rd1+120], %r17800;
	ld.local.u32 	%r17801, [%rd1+124];
	or.b32  	%r17802, %r17801, %r19406;
	st.local.u32 	[%rd1+124], %r17802;
	ld.local.u32 	%r17803, [%rd1+128];
	or.b32  	%r17804, %r17803, %r19413;
	st.local.u32 	[%rd1+128], %r17804;
	ld.local.u32 	%r17805, [%rd1+132];
	or.b32  	%r17806, %r17805, %r19412;
	st.local.u32 	[%rd1+132], %r17806;
	ld.local.u32 	%r17807, [%rd1+136];
	or.b32  	%r17808, %r17807, %r19411;
	st.local.u32 	[%rd1+136], %r17808;
	ld.local.u32 	%r17809, [%rd1+140];
	or.b32  	%r17810, %r17809, %r19410;
	st.local.u32 	[%rd1+140], %r17810;
	ld.local.u32 	%r17811, [%rd1+144];
	or.b32  	%r17812, %r17811, %r19417;
	st.local.u32 	[%rd1+144], %r17812;
	ld.local.u32 	%r17813, [%rd1+148];
	or.b32  	%r17814, %r17813, %r19416;
	st.local.u32 	[%rd1+148], %r17814;
	ld.local.u32 	%r17815, [%rd1+152];
	or.b32  	%r17816, %r17815, %r19415;
	st.local.u32 	[%rd1+152], %r17816;
	ld.local.u32 	%r17817, [%rd1+156];
	or.b32  	%r17818, %r17817, %r19414;
	st.local.u32 	[%rd1+156], %r17818;
	ld.local.u32 	%r17819, [%rd1+160];
	or.b32  	%r17820, %r17819, %r19421;
	st.local.u32 	[%rd1+160], %r17820;
	ld.local.u32 	%r17821, [%rd1+164];
	or.b32  	%r17822, %r17821, %r19420;
	st.local.u32 	[%rd1+164], %r17822;
	ld.local.u32 	%r17823, [%rd1+168];
	or.b32  	%r17824, %r17823, %r19419;
	st.local.u32 	[%rd1+168], %r17824;
	ld.local.u32 	%r17825, [%rd1+172];
	or.b32  	%r17826, %r17825, %r19418;
	st.local.u32 	[%rd1+172], %r17826;
	ld.local.u32 	%r17827, [%rd1+176];
	or.b32  	%r17828, %r17827, %r19425;
	st.local.u32 	[%rd1+176], %r17828;
	ld.local.u32 	%r17829, [%rd1+180];
	or.b32  	%r17830, %r17829, %r19424;
	st.local.u32 	[%rd1+180], %r17830;
	ld.local.u32 	%r17831, [%rd1+184];
	or.b32  	%r17832, %r17831, %r19423;
	st.local.u32 	[%rd1+184], %r17832;
	ld.local.u32 	%r17833, [%rd1+188];
	or.b32  	%r17834, %r17833, %r19422;
	st.local.u32 	[%rd1+188], %r17834;
	mov.b64	%rd4445, {%r17774, %r17772};
	mov.b64	%rd4446, {%r17778, %r17776};
	mov.b64	%rd4447, {%r17782, %r17780};
	mov.b64	%rd4448, {%r17786, %r17784};
	mov.b64	%rd4449, {%r17790, %r17788};
	mov.b64	%rd4450, {%r17794, %r17792};
	mov.b64	%rd4451, {%r17798, %r17796};
	mov.b64	%rd4452, {%r17802, %r17800};
	mov.b64	%rd4436, {%r17806, %r17804};
	mov.b64	%rd4435, {%r17810, %r17808};
	mov.b64	%rd4434, {%r17814, %r17812};
	mov.b64	%rd4433, {%r17818, %r17816};
	mov.b64	%rd4432, {%r17822, %r17820};
	mov.b64	%rd4431, {%r17826, %r17824};
	mov.b64	%rd4430, {%r17830, %r17828};
	mov.b64	%rd4429, {%r17834, %r17832};
	ld.local.u64 	%rd196, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17835,%dummy}, %rd196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17836}, %rd196;
	}
	shf.r.wrap.b32 	%r17837, %r17836, %r17835, 14;
	shf.r.wrap.b32 	%r17838, %r17835, %r17836, 14;
	mov.b64 	%rd2380, {%r17838, %r17837};
	shf.r.wrap.b32 	%r17839, %r17836, %r17835, 18;
	shf.r.wrap.b32 	%r17840, %r17835, %r17836, 18;
	mov.b64 	%rd2381, {%r17840, %r17839};
	xor.b64  	%rd2382, %rd2381, %rd2380;
	shf.l.wrap.b32 	%r17841, %r17835, %r17836, 23;
	shf.l.wrap.b32 	%r17842, %r17836, %r17835, 23;
	mov.b64 	%rd2383, {%r17842, %r17841};
	xor.b64  	%rd2384, %rd2382, %rd2383;
	ld.local.u64 	%rd197, [%rd1+48];
	ld.local.u64 	%rd198, [%rd1+40];
	xor.b64  	%rd2385, %rd197, %rd198;
	and.b64  	%rd2386, %rd2385, %rd196;
	xor.b64  	%rd2387, %rd2386, %rd197;
	ld.local.u64 	%rd199, [%rd1+56];
	add.s64 	%rd2388, %rd2387, %rd199;
	add.s64 	%rd2389, %rd2388, %rd4445;
	add.s64 	%rd2390, %rd2389, %rd2;
	add.s64 	%rd2391, %rd2390, %rd2384;
	ld.local.u64 	%rd200, [%rd1+24];
	add.s64 	%rd2392, %rd2391, %rd200;
	ld.local.u64 	%rd201, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17843,%dummy}, %rd201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17844}, %rd201;
	}
	shf.r.wrap.b32 	%r17845, %r17844, %r17843, 28;
	shf.r.wrap.b32 	%r17846, %r17843, %r17844, 28;
	mov.b64 	%rd2393, {%r17846, %r17845};
	shf.l.wrap.b32 	%r17847, %r17843, %r17844, 30;
	shf.l.wrap.b32 	%r17848, %r17844, %r17843, 30;
	mov.b64 	%rd2394, {%r17848, %r17847};
	xor.b64  	%rd2395, %rd2394, %rd2393;
	shf.l.wrap.b32 	%r17849, %r17843, %r17844, 25;
	shf.l.wrap.b32 	%r17850, %r17844, %r17843, 25;
	mov.b64 	%rd2396, {%r17850, %r17849};
	xor.b64  	%rd2397, %rd2395, %rd2396;
	ld.local.u64 	%rd202, [%rd1+8];
	and.b64  	%rd2398, %rd202, %rd201;
	xor.b64  	%rd2399, %rd202, %rd201;
	ld.local.u64 	%rd203, [%rd1+16];
	and.b64  	%rd2400, %rd203, %rd2399;
	or.b64  	%rd2401, %rd2400, %rd2398;
	add.s64 	%rd2402, %rd2391, %rd2401;
	add.s64 	%rd2403, %rd2402, %rd2397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17851,%dummy}, %rd2392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17852}, %rd2392;
	}
	shf.r.wrap.b32 	%r17853, %r17852, %r17851, 14;
	shf.r.wrap.b32 	%r17854, %r17851, %r17852, 14;
	mov.b64 	%rd2404, {%r17854, %r17853};
	shf.r.wrap.b32 	%r17855, %r17852, %r17851, 18;
	shf.r.wrap.b32 	%r17856, %r17851, %r17852, 18;
	mov.b64 	%rd2405, {%r17856, %r17855};
	xor.b64  	%rd2406, %rd2405, %rd2404;
	shf.l.wrap.b32 	%r17857, %r17851, %r17852, 23;
	shf.l.wrap.b32 	%r17858, %r17852, %r17851, 23;
	mov.b64 	%rd2407, {%r17858, %r17857};
	xor.b64  	%rd2408, %rd2406, %rd2407;
	xor.b64  	%rd2409, %rd198, %rd196;
	and.b64  	%rd2410, %rd2392, %rd2409;
	xor.b64  	%rd2411, %rd2410, %rd198;
	add.s64 	%rd2412, %rd4446, %rd197;
	add.s64 	%rd2413, %rd2412, %rd3;
	add.s64 	%rd2414, %rd2413, %rd2411;
	add.s64 	%rd2415, %rd2414, %rd2408;
	add.s64 	%rd2416, %rd2415, %rd203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17859,%dummy}, %rd2403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17860}, %rd2403;
	}
	shf.r.wrap.b32 	%r17861, %r17860, %r17859, 28;
	shf.r.wrap.b32 	%r17862, %r17859, %r17860, 28;
	mov.b64 	%rd2417, {%r17862, %r17861};
	shf.l.wrap.b32 	%r17863, %r17859, %r17860, 30;
	shf.l.wrap.b32 	%r17864, %r17860, %r17859, 30;
	mov.b64 	%rd2418, {%r17864, %r17863};
	xor.b64  	%rd2419, %rd2418, %rd2417;
	shf.l.wrap.b32 	%r17865, %r17859, %r17860, 25;
	shf.l.wrap.b32 	%r17866, %r17860, %r17859, 25;
	mov.b64 	%rd2420, {%r17866, %r17865};
	xor.b64  	%rd2421, %rd2419, %rd2420;
	and.b64  	%rd2422, %rd2403, %rd201;
	xor.b64  	%rd2423, %rd2403, %rd201;
	and.b64  	%rd2424, %rd2423, %rd202;
	or.b64  	%rd2425, %rd2424, %rd2422;
	add.s64 	%rd2426, %rd2415, %rd2425;
	add.s64 	%rd2427, %rd2426, %rd2421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17867,%dummy}, %rd2416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17868}, %rd2416;
	}
	shf.r.wrap.b32 	%r17869, %r17868, %r17867, 14;
	shf.r.wrap.b32 	%r17870, %r17867, %r17868, 14;
	mov.b64 	%rd2428, {%r17870, %r17869};
	shf.r.wrap.b32 	%r17871, %r17868, %r17867, 18;
	shf.r.wrap.b32 	%r17872, %r17867, %r17868, 18;
	mov.b64 	%rd2429, {%r17872, %r17871};
	xor.b64  	%rd2430, %rd2429, %rd2428;
	shf.l.wrap.b32 	%r17873, %r17867, %r17868, 23;
	shf.l.wrap.b32 	%r17874, %r17868, %r17867, 23;
	mov.b64 	%rd2431, {%r17874, %r17873};
	xor.b64  	%rd2432, %rd2430, %rd2431;
	xor.b64  	%rd2433, %rd2392, %rd196;
	and.b64  	%rd2434, %rd2416, %rd2433;
	xor.b64  	%rd2435, %rd2434, %rd196;
	add.s64 	%rd2436, %rd4447, %rd198;
	add.s64 	%rd2437, %rd2436, %rd4;
	add.s64 	%rd2438, %rd2437, %rd2435;
	add.s64 	%rd2439, %rd2438, %rd2432;
	add.s64 	%rd2440, %rd2439, %rd202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17875,%dummy}, %rd2427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17876}, %rd2427;
	}
	shf.r.wrap.b32 	%r17877, %r17876, %r17875, 28;
	shf.r.wrap.b32 	%r17878, %r17875, %r17876, 28;
	mov.b64 	%rd2441, {%r17878, %r17877};
	shf.l.wrap.b32 	%r17879, %r17875, %r17876, 30;
	shf.l.wrap.b32 	%r17880, %r17876, %r17875, 30;
	mov.b64 	%rd2442, {%r17880, %r17879};
	xor.b64  	%rd2443, %rd2442, %rd2441;
	shf.l.wrap.b32 	%r17881, %r17875, %r17876, 25;
	shf.l.wrap.b32 	%r17882, %r17876, %r17875, 25;
	mov.b64 	%rd2444, {%r17882, %r17881};
	xor.b64  	%rd2445, %rd2443, %rd2444;
	and.b64  	%rd2446, %rd2427, %rd2403;
	xor.b64  	%rd2447, %rd2427, %rd2403;
	and.b64  	%rd2448, %rd2447, %rd201;
	or.b64  	%rd2449, %rd2448, %rd2446;
	add.s64 	%rd2450, %rd2439, %rd2449;
	add.s64 	%rd2451, %rd2450, %rd2445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17883,%dummy}, %rd2440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17884}, %rd2440;
	}
	shf.r.wrap.b32 	%r17885, %r17884, %r17883, 14;
	shf.r.wrap.b32 	%r17886, %r17883, %r17884, 14;
	mov.b64 	%rd2452, {%r17886, %r17885};
	shf.r.wrap.b32 	%r17887, %r17884, %r17883, 18;
	shf.r.wrap.b32 	%r17888, %r17883, %r17884, 18;
	mov.b64 	%rd2453, {%r17888, %r17887};
	xor.b64  	%rd2454, %rd2453, %rd2452;
	shf.l.wrap.b32 	%r17889, %r17883, %r17884, 23;
	shf.l.wrap.b32 	%r17890, %r17884, %r17883, 23;
	mov.b64 	%rd2455, {%r17890, %r17889};
	xor.b64  	%rd2456, %rd2454, %rd2455;
	xor.b64  	%rd2457, %rd2416, %rd2392;
	and.b64  	%rd2458, %rd2440, %rd2457;
	xor.b64  	%rd2459, %rd2458, %rd2392;
	add.s64 	%rd2460, %rd4448, %rd196;
	add.s64 	%rd2461, %rd2460, %rd5;
	add.s64 	%rd2462, %rd2461, %rd2459;
	add.s64 	%rd2463, %rd2462, %rd2456;
	add.s64 	%rd2464, %rd2463, %rd201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17891,%dummy}, %rd2451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17892}, %rd2451;
	}
	shf.r.wrap.b32 	%r17893, %r17892, %r17891, 28;
	shf.r.wrap.b32 	%r17894, %r17891, %r17892, 28;
	mov.b64 	%rd2465, {%r17894, %r17893};
	shf.l.wrap.b32 	%r17895, %r17891, %r17892, 30;
	shf.l.wrap.b32 	%r17896, %r17892, %r17891, 30;
	mov.b64 	%rd2466, {%r17896, %r17895};
	xor.b64  	%rd2467, %rd2466, %rd2465;
	shf.l.wrap.b32 	%r17897, %r17891, %r17892, 25;
	shf.l.wrap.b32 	%r17898, %r17892, %r17891, 25;
	mov.b64 	%rd2468, {%r17898, %r17897};
	xor.b64  	%rd2469, %rd2467, %rd2468;
	and.b64  	%rd2470, %rd2451, %rd2427;
	xor.b64  	%rd2471, %rd2451, %rd2427;
	and.b64  	%rd2472, %rd2471, %rd2403;
	or.b64  	%rd2473, %rd2472, %rd2470;
	add.s64 	%rd2474, %rd2463, %rd2473;
	add.s64 	%rd2475, %rd2474, %rd2469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17899,%dummy}, %rd2464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17900}, %rd2464;
	}
	shf.r.wrap.b32 	%r17901, %r17900, %r17899, 14;
	shf.r.wrap.b32 	%r17902, %r17899, %r17900, 14;
	mov.b64 	%rd2476, {%r17902, %r17901};
	shf.r.wrap.b32 	%r17903, %r17900, %r17899, 18;
	shf.r.wrap.b32 	%r17904, %r17899, %r17900, 18;
	mov.b64 	%rd2477, {%r17904, %r17903};
	xor.b64  	%rd2478, %rd2477, %rd2476;
	shf.l.wrap.b32 	%r17905, %r17899, %r17900, 23;
	shf.l.wrap.b32 	%r17906, %r17900, %r17899, 23;
	mov.b64 	%rd2479, {%r17906, %r17905};
	xor.b64  	%rd2480, %rd2478, %rd2479;
	xor.b64  	%rd2481, %rd2440, %rd2416;
	and.b64  	%rd2482, %rd2464, %rd2481;
	xor.b64  	%rd2483, %rd2482, %rd2416;
	add.s64 	%rd2484, %rd2392, %rd4449;
	add.s64 	%rd2485, %rd2484, %rd6;
	add.s64 	%rd2486, %rd2485, %rd2483;
	add.s64 	%rd2487, %rd2486, %rd2480;
	add.s64 	%rd2488, %rd2487, %rd2403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17907,%dummy}, %rd2475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17908}, %rd2475;
	}
	shf.r.wrap.b32 	%r17909, %r17908, %r17907, 28;
	shf.r.wrap.b32 	%r17910, %r17907, %r17908, 28;
	mov.b64 	%rd2489, {%r17910, %r17909};
	shf.l.wrap.b32 	%r17911, %r17907, %r17908, 30;
	shf.l.wrap.b32 	%r17912, %r17908, %r17907, 30;
	mov.b64 	%rd2490, {%r17912, %r17911};
	xor.b64  	%rd2491, %rd2490, %rd2489;
	shf.l.wrap.b32 	%r17913, %r17907, %r17908, 25;
	shf.l.wrap.b32 	%r17914, %r17908, %r17907, 25;
	mov.b64 	%rd2492, {%r17914, %r17913};
	xor.b64  	%rd2493, %rd2491, %rd2492;
	and.b64  	%rd2494, %rd2475, %rd2451;
	xor.b64  	%rd2495, %rd2475, %rd2451;
	and.b64  	%rd2496, %rd2495, %rd2427;
	or.b64  	%rd2497, %rd2496, %rd2494;
	add.s64 	%rd2498, %rd2487, %rd2497;
	add.s64 	%rd2499, %rd2498, %rd2493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17915,%dummy}, %rd2488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17916}, %rd2488;
	}
	shf.r.wrap.b32 	%r17917, %r17916, %r17915, 14;
	shf.r.wrap.b32 	%r17918, %r17915, %r17916, 14;
	mov.b64 	%rd2500, {%r17918, %r17917};
	shf.r.wrap.b32 	%r17919, %r17916, %r17915, 18;
	shf.r.wrap.b32 	%r17920, %r17915, %r17916, 18;
	mov.b64 	%rd2501, {%r17920, %r17919};
	xor.b64  	%rd2502, %rd2501, %rd2500;
	shf.l.wrap.b32 	%r17921, %r17915, %r17916, 23;
	shf.l.wrap.b32 	%r17922, %r17916, %r17915, 23;
	mov.b64 	%rd2503, {%r17922, %r17921};
	xor.b64  	%rd2504, %rd2502, %rd2503;
	xor.b64  	%rd2505, %rd2464, %rd2440;
	and.b64  	%rd2506, %rd2488, %rd2505;
	xor.b64  	%rd2507, %rd2506, %rd2440;
	add.s64 	%rd2508, %rd2416, %rd4450;
	add.s64 	%rd2509, %rd2508, %rd7;
	add.s64 	%rd2510, %rd2509, %rd2507;
	add.s64 	%rd2511, %rd2510, %rd2504;
	add.s64 	%rd2512, %rd2511, %rd2427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17923,%dummy}, %rd2499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17924}, %rd2499;
	}
	shf.r.wrap.b32 	%r17925, %r17924, %r17923, 28;
	shf.r.wrap.b32 	%r17926, %r17923, %r17924, 28;
	mov.b64 	%rd2513, {%r17926, %r17925};
	shf.l.wrap.b32 	%r17927, %r17923, %r17924, 30;
	shf.l.wrap.b32 	%r17928, %r17924, %r17923, 30;
	mov.b64 	%rd2514, {%r17928, %r17927};
	xor.b64  	%rd2515, %rd2514, %rd2513;
	shf.l.wrap.b32 	%r17929, %r17923, %r17924, 25;
	shf.l.wrap.b32 	%r17930, %r17924, %r17923, 25;
	mov.b64 	%rd2516, {%r17930, %r17929};
	xor.b64  	%rd2517, %rd2515, %rd2516;
	and.b64  	%rd2518, %rd2499, %rd2475;
	xor.b64  	%rd2519, %rd2499, %rd2475;
	and.b64  	%rd2520, %rd2519, %rd2451;
	or.b64  	%rd2521, %rd2520, %rd2518;
	add.s64 	%rd2522, %rd2511, %rd2521;
	add.s64 	%rd2523, %rd2522, %rd2517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17931,%dummy}, %rd2512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17932}, %rd2512;
	}
	shf.r.wrap.b32 	%r17933, %r17932, %r17931, 14;
	shf.r.wrap.b32 	%r17934, %r17931, %r17932, 14;
	mov.b64 	%rd2524, {%r17934, %r17933};
	shf.r.wrap.b32 	%r17935, %r17932, %r17931, 18;
	shf.r.wrap.b32 	%r17936, %r17931, %r17932, 18;
	mov.b64 	%rd2525, {%r17936, %r17935};
	xor.b64  	%rd2526, %rd2525, %rd2524;
	shf.l.wrap.b32 	%r17937, %r17931, %r17932, 23;
	shf.l.wrap.b32 	%r17938, %r17932, %r17931, 23;
	mov.b64 	%rd2527, {%r17938, %r17937};
	xor.b64  	%rd2528, %rd2526, %rd2527;
	xor.b64  	%rd2529, %rd2488, %rd2464;
	and.b64  	%rd2530, %rd2512, %rd2529;
	xor.b64  	%rd2531, %rd2530, %rd2464;
	add.s64 	%rd2532, %rd2440, %rd4451;
	add.s64 	%rd2533, %rd2532, %rd8;
	add.s64 	%rd2534, %rd2533, %rd2531;
	add.s64 	%rd2535, %rd2534, %rd2528;
	add.s64 	%rd2536, %rd2535, %rd2451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17939,%dummy}, %rd2523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17940}, %rd2523;
	}
	shf.r.wrap.b32 	%r17941, %r17940, %r17939, 28;
	shf.r.wrap.b32 	%r17942, %r17939, %r17940, 28;
	mov.b64 	%rd2537, {%r17942, %r17941};
	shf.l.wrap.b32 	%r17943, %r17939, %r17940, 30;
	shf.l.wrap.b32 	%r17944, %r17940, %r17939, 30;
	mov.b64 	%rd2538, {%r17944, %r17943};
	xor.b64  	%rd2539, %rd2538, %rd2537;
	shf.l.wrap.b32 	%r17945, %r17939, %r17940, 25;
	shf.l.wrap.b32 	%r17946, %r17940, %r17939, 25;
	mov.b64 	%rd2540, {%r17946, %r17945};
	xor.b64  	%rd2541, %rd2539, %rd2540;
	and.b64  	%rd2542, %rd2523, %rd2499;
	xor.b64  	%rd2543, %rd2523, %rd2499;
	and.b64  	%rd2544, %rd2543, %rd2475;
	or.b64  	%rd2545, %rd2544, %rd2542;
	add.s64 	%rd2546, %rd2535, %rd2545;
	add.s64 	%rd2547, %rd2546, %rd2541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17947,%dummy}, %rd2536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17948}, %rd2536;
	}
	shf.r.wrap.b32 	%r17949, %r17948, %r17947, 14;
	shf.r.wrap.b32 	%r17950, %r17947, %r17948, 14;
	mov.b64 	%rd2548, {%r17950, %r17949};
	shf.r.wrap.b32 	%r17951, %r17948, %r17947, 18;
	shf.r.wrap.b32 	%r17952, %r17947, %r17948, 18;
	mov.b64 	%rd2549, {%r17952, %r17951};
	xor.b64  	%rd2550, %rd2549, %rd2548;
	shf.l.wrap.b32 	%r17953, %r17947, %r17948, 23;
	shf.l.wrap.b32 	%r17954, %r17948, %r17947, 23;
	mov.b64 	%rd2551, {%r17954, %r17953};
	xor.b64  	%rd2552, %rd2550, %rd2551;
	xor.b64  	%rd2553, %rd2512, %rd2488;
	and.b64  	%rd2554, %rd2536, %rd2553;
	xor.b64  	%rd2555, %rd2554, %rd2488;
	add.s64 	%rd2556, %rd2464, %rd4452;
	add.s64 	%rd2557, %rd2556, %rd9;
	add.s64 	%rd2558, %rd2557, %rd2555;
	add.s64 	%rd2559, %rd2558, %rd2552;
	add.s64 	%rd2560, %rd2559, %rd2475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17955,%dummy}, %rd2547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17956}, %rd2547;
	}
	shf.r.wrap.b32 	%r17957, %r17956, %r17955, 28;
	shf.r.wrap.b32 	%r17958, %r17955, %r17956, 28;
	mov.b64 	%rd2561, {%r17958, %r17957};
	shf.l.wrap.b32 	%r17959, %r17955, %r17956, 30;
	shf.l.wrap.b32 	%r17960, %r17956, %r17955, 30;
	mov.b64 	%rd2562, {%r17960, %r17959};
	xor.b64  	%rd2563, %rd2562, %rd2561;
	shf.l.wrap.b32 	%r17961, %r17955, %r17956, 25;
	shf.l.wrap.b32 	%r17962, %r17956, %r17955, 25;
	mov.b64 	%rd2564, {%r17962, %r17961};
	xor.b64  	%rd2565, %rd2563, %rd2564;
	and.b64  	%rd2566, %rd2547, %rd2523;
	xor.b64  	%rd2567, %rd2547, %rd2523;
	and.b64  	%rd2568, %rd2567, %rd2499;
	or.b64  	%rd2569, %rd2568, %rd2566;
	add.s64 	%rd2570, %rd2559, %rd2569;
	add.s64 	%rd2571, %rd2570, %rd2565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17963,%dummy}, %rd2560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17964}, %rd2560;
	}
	shf.r.wrap.b32 	%r17965, %r17964, %r17963, 14;
	shf.r.wrap.b32 	%r17966, %r17963, %r17964, 14;
	mov.b64 	%rd2572, {%r17966, %r17965};
	shf.r.wrap.b32 	%r17967, %r17964, %r17963, 18;
	shf.r.wrap.b32 	%r17968, %r17963, %r17964, 18;
	mov.b64 	%rd2573, {%r17968, %r17967};
	xor.b64  	%rd2574, %rd2573, %rd2572;
	shf.l.wrap.b32 	%r17969, %r17963, %r17964, 23;
	shf.l.wrap.b32 	%r17970, %r17964, %r17963, 23;
	mov.b64 	%rd2575, {%r17970, %r17969};
	xor.b64  	%rd2576, %rd2574, %rd2575;
	xor.b64  	%rd2577, %rd2536, %rd2512;
	and.b64  	%rd2578, %rd2560, %rd2577;
	xor.b64  	%rd2579, %rd2578, %rd2512;
	add.s64 	%rd2580, %rd2488, %rd4436;
	add.s64 	%rd2581, %rd2580, %rd10;
	add.s64 	%rd2582, %rd2581, %rd2579;
	add.s64 	%rd2583, %rd2582, %rd2576;
	add.s64 	%rd2584, %rd2583, %rd2499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17971,%dummy}, %rd2571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17972}, %rd2571;
	}
	shf.r.wrap.b32 	%r17973, %r17972, %r17971, 28;
	shf.r.wrap.b32 	%r17974, %r17971, %r17972, 28;
	mov.b64 	%rd2585, {%r17974, %r17973};
	shf.l.wrap.b32 	%r17975, %r17971, %r17972, 30;
	shf.l.wrap.b32 	%r17976, %r17972, %r17971, 30;
	mov.b64 	%rd2586, {%r17976, %r17975};
	xor.b64  	%rd2587, %rd2586, %rd2585;
	shf.l.wrap.b32 	%r17977, %r17971, %r17972, 25;
	shf.l.wrap.b32 	%r17978, %r17972, %r17971, 25;
	mov.b64 	%rd2588, {%r17978, %r17977};
	xor.b64  	%rd2589, %rd2587, %rd2588;
	and.b64  	%rd2590, %rd2571, %rd2547;
	xor.b64  	%rd2591, %rd2571, %rd2547;
	and.b64  	%rd2592, %rd2591, %rd2523;
	or.b64  	%rd2593, %rd2592, %rd2590;
	add.s64 	%rd2594, %rd2583, %rd2593;
	add.s64 	%rd2595, %rd2594, %rd2589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17979,%dummy}, %rd2584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17980}, %rd2584;
	}
	shf.r.wrap.b32 	%r17981, %r17980, %r17979, 14;
	shf.r.wrap.b32 	%r17982, %r17979, %r17980, 14;
	mov.b64 	%rd2596, {%r17982, %r17981};
	shf.r.wrap.b32 	%r17983, %r17980, %r17979, 18;
	shf.r.wrap.b32 	%r17984, %r17979, %r17980, 18;
	mov.b64 	%rd2597, {%r17984, %r17983};
	xor.b64  	%rd2598, %rd2597, %rd2596;
	shf.l.wrap.b32 	%r17985, %r17979, %r17980, 23;
	shf.l.wrap.b32 	%r17986, %r17980, %r17979, 23;
	mov.b64 	%rd2599, {%r17986, %r17985};
	xor.b64  	%rd2600, %rd2598, %rd2599;
	xor.b64  	%rd2601, %rd2560, %rd2536;
	and.b64  	%rd2602, %rd2584, %rd2601;
	xor.b64  	%rd2603, %rd2602, %rd2536;
	add.s64 	%rd2604, %rd2512, %rd4435;
	add.s64 	%rd2605, %rd2604, %rd11;
	add.s64 	%rd2606, %rd2605, %rd2603;
	add.s64 	%rd2607, %rd2606, %rd2600;
	add.s64 	%rd2608, %rd2607, %rd2523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17987,%dummy}, %rd2595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17988}, %rd2595;
	}
	shf.r.wrap.b32 	%r17989, %r17988, %r17987, 28;
	shf.r.wrap.b32 	%r17990, %r17987, %r17988, 28;
	mov.b64 	%rd2609, {%r17990, %r17989};
	shf.l.wrap.b32 	%r17991, %r17987, %r17988, 30;
	shf.l.wrap.b32 	%r17992, %r17988, %r17987, 30;
	mov.b64 	%rd2610, {%r17992, %r17991};
	xor.b64  	%rd2611, %rd2610, %rd2609;
	shf.l.wrap.b32 	%r17993, %r17987, %r17988, 25;
	shf.l.wrap.b32 	%r17994, %r17988, %r17987, 25;
	mov.b64 	%rd2612, {%r17994, %r17993};
	xor.b64  	%rd2613, %rd2611, %rd2612;
	and.b64  	%rd2614, %rd2595, %rd2571;
	xor.b64  	%rd2615, %rd2595, %rd2571;
	and.b64  	%rd2616, %rd2615, %rd2547;
	or.b64  	%rd2617, %rd2616, %rd2614;
	add.s64 	%rd2618, %rd2607, %rd2617;
	add.s64 	%rd2619, %rd2618, %rd2613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17995,%dummy}, %rd2608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r17996}, %rd2608;
	}
	shf.r.wrap.b32 	%r17997, %r17996, %r17995, 14;
	shf.r.wrap.b32 	%r17998, %r17995, %r17996, 14;
	mov.b64 	%rd2620, {%r17998, %r17997};
	shf.r.wrap.b32 	%r17999, %r17996, %r17995, 18;
	shf.r.wrap.b32 	%r18000, %r17995, %r17996, 18;
	mov.b64 	%rd2621, {%r18000, %r17999};
	xor.b64  	%rd2622, %rd2621, %rd2620;
	shf.l.wrap.b32 	%r18001, %r17995, %r17996, 23;
	shf.l.wrap.b32 	%r18002, %r17996, %r17995, 23;
	mov.b64 	%rd2623, {%r18002, %r18001};
	xor.b64  	%rd2624, %rd2622, %rd2623;
	xor.b64  	%rd2625, %rd2584, %rd2560;
	and.b64  	%rd2626, %rd2608, %rd2625;
	xor.b64  	%rd2627, %rd2626, %rd2560;
	add.s64 	%rd2628, %rd2536, %rd4434;
	add.s64 	%rd2629, %rd2628, %rd12;
	add.s64 	%rd2630, %rd2629, %rd2627;
	add.s64 	%rd2631, %rd2630, %rd2624;
	add.s64 	%rd2632, %rd2631, %rd2547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18003,%dummy}, %rd2619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18004}, %rd2619;
	}
	shf.r.wrap.b32 	%r18005, %r18004, %r18003, 28;
	shf.r.wrap.b32 	%r18006, %r18003, %r18004, 28;
	mov.b64 	%rd2633, {%r18006, %r18005};
	shf.l.wrap.b32 	%r18007, %r18003, %r18004, 30;
	shf.l.wrap.b32 	%r18008, %r18004, %r18003, 30;
	mov.b64 	%rd2634, {%r18008, %r18007};
	xor.b64  	%rd2635, %rd2634, %rd2633;
	shf.l.wrap.b32 	%r18009, %r18003, %r18004, 25;
	shf.l.wrap.b32 	%r18010, %r18004, %r18003, 25;
	mov.b64 	%rd2636, {%r18010, %r18009};
	xor.b64  	%rd2637, %rd2635, %rd2636;
	and.b64  	%rd2638, %rd2619, %rd2595;
	xor.b64  	%rd2639, %rd2619, %rd2595;
	and.b64  	%rd2640, %rd2639, %rd2571;
	or.b64  	%rd2641, %rd2640, %rd2638;
	add.s64 	%rd2642, %rd2631, %rd2641;
	add.s64 	%rd2643, %rd2642, %rd2637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18011,%dummy}, %rd2632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18012}, %rd2632;
	}
	shf.r.wrap.b32 	%r18013, %r18012, %r18011, 14;
	shf.r.wrap.b32 	%r18014, %r18011, %r18012, 14;
	mov.b64 	%rd2644, {%r18014, %r18013};
	shf.r.wrap.b32 	%r18015, %r18012, %r18011, 18;
	shf.r.wrap.b32 	%r18016, %r18011, %r18012, 18;
	mov.b64 	%rd2645, {%r18016, %r18015};
	xor.b64  	%rd2646, %rd2645, %rd2644;
	shf.l.wrap.b32 	%r18017, %r18011, %r18012, 23;
	shf.l.wrap.b32 	%r18018, %r18012, %r18011, 23;
	mov.b64 	%rd2647, {%r18018, %r18017};
	xor.b64  	%rd2648, %rd2646, %rd2647;
	xor.b64  	%rd2649, %rd2608, %rd2584;
	and.b64  	%rd2650, %rd2632, %rd2649;
	xor.b64  	%rd2651, %rd2650, %rd2584;
	add.s64 	%rd2652, %rd2560, %rd4433;
	add.s64 	%rd2653, %rd2652, %rd13;
	add.s64 	%rd2654, %rd2653, %rd2651;
	add.s64 	%rd2655, %rd2654, %rd2648;
	add.s64 	%rd2656, %rd2655, %rd2571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18019,%dummy}, %rd2643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18020}, %rd2643;
	}
	shf.r.wrap.b32 	%r18021, %r18020, %r18019, 28;
	shf.r.wrap.b32 	%r18022, %r18019, %r18020, 28;
	mov.b64 	%rd2657, {%r18022, %r18021};
	shf.l.wrap.b32 	%r18023, %r18019, %r18020, 30;
	shf.l.wrap.b32 	%r18024, %r18020, %r18019, 30;
	mov.b64 	%rd2658, {%r18024, %r18023};
	xor.b64  	%rd2659, %rd2658, %rd2657;
	shf.l.wrap.b32 	%r18025, %r18019, %r18020, 25;
	shf.l.wrap.b32 	%r18026, %r18020, %r18019, 25;
	mov.b64 	%rd2660, {%r18026, %r18025};
	xor.b64  	%rd2661, %rd2659, %rd2660;
	and.b64  	%rd2662, %rd2643, %rd2619;
	xor.b64  	%rd2663, %rd2643, %rd2619;
	and.b64  	%rd2664, %rd2663, %rd2595;
	or.b64  	%rd2665, %rd2664, %rd2662;
	add.s64 	%rd2666, %rd2655, %rd2665;
	add.s64 	%rd2667, %rd2666, %rd2661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18027,%dummy}, %rd2656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18028}, %rd2656;
	}
	shf.r.wrap.b32 	%r18029, %r18028, %r18027, 14;
	shf.r.wrap.b32 	%r18030, %r18027, %r18028, 14;
	mov.b64 	%rd2668, {%r18030, %r18029};
	shf.r.wrap.b32 	%r18031, %r18028, %r18027, 18;
	shf.r.wrap.b32 	%r18032, %r18027, %r18028, 18;
	mov.b64 	%rd2669, {%r18032, %r18031};
	xor.b64  	%rd2670, %rd2669, %rd2668;
	shf.l.wrap.b32 	%r18033, %r18027, %r18028, 23;
	shf.l.wrap.b32 	%r18034, %r18028, %r18027, 23;
	mov.b64 	%rd2671, {%r18034, %r18033};
	xor.b64  	%rd2672, %rd2670, %rd2671;
	xor.b64  	%rd2673, %rd2632, %rd2608;
	and.b64  	%rd2674, %rd2656, %rd2673;
	xor.b64  	%rd2675, %rd2674, %rd2608;
	add.s64 	%rd2676, %rd2584, %rd4432;
	add.s64 	%rd2677, %rd2676, %rd14;
	add.s64 	%rd2678, %rd2677, %rd2675;
	add.s64 	%rd2679, %rd2678, %rd2672;
	add.s64 	%rd4444, %rd2679, %rd2595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18035,%dummy}, %rd2667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18036}, %rd2667;
	}
	shf.r.wrap.b32 	%r18037, %r18036, %r18035, 28;
	shf.r.wrap.b32 	%r18038, %r18035, %r18036, 28;
	mov.b64 	%rd2680, {%r18038, %r18037};
	shf.l.wrap.b32 	%r18039, %r18035, %r18036, 30;
	shf.l.wrap.b32 	%r18040, %r18036, %r18035, 30;
	mov.b64 	%rd2681, {%r18040, %r18039};
	xor.b64  	%rd2682, %rd2681, %rd2680;
	shf.l.wrap.b32 	%r18041, %r18035, %r18036, 25;
	shf.l.wrap.b32 	%r18042, %r18036, %r18035, 25;
	mov.b64 	%rd2683, {%r18042, %r18041};
	xor.b64  	%rd2684, %rd2682, %rd2683;
	and.b64  	%rd2685, %rd2667, %rd2643;
	xor.b64  	%rd2686, %rd2667, %rd2643;
	and.b64  	%rd2687, %rd2686, %rd2619;
	or.b64  	%rd2688, %rd2687, %rd2685;
	add.s64 	%rd2689, %rd2679, %rd2688;
	add.s64 	%rd4440, %rd2689, %rd2684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18043,%dummy}, %rd4444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18044}, %rd4444;
	}
	shf.r.wrap.b32 	%r18045, %r18044, %r18043, 14;
	shf.r.wrap.b32 	%r18046, %r18043, %r18044, 14;
	mov.b64 	%rd2690, {%r18046, %r18045};
	shf.r.wrap.b32 	%r18047, %r18044, %r18043, 18;
	shf.r.wrap.b32 	%r18048, %r18043, %r18044, 18;
	mov.b64 	%rd2691, {%r18048, %r18047};
	xor.b64  	%rd2692, %rd2691, %rd2690;
	shf.l.wrap.b32 	%r18049, %r18043, %r18044, 23;
	shf.l.wrap.b32 	%r18050, %r18044, %r18043, 23;
	mov.b64 	%rd2693, {%r18050, %r18049};
	xor.b64  	%rd2694, %rd2692, %rd2693;
	xor.b64  	%rd2695, %rd2656, %rd2632;
	and.b64  	%rd2696, %rd4444, %rd2695;
	xor.b64  	%rd2697, %rd2696, %rd2632;
	add.s64 	%rd2698, %rd2608, %rd4431;
	add.s64 	%rd2699, %rd2698, %rd15;
	add.s64 	%rd2700, %rd2699, %rd2697;
	add.s64 	%rd2701, %rd2700, %rd2694;
	add.s64 	%rd4443, %rd2701, %rd2619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18051,%dummy}, %rd4440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18052}, %rd4440;
	}
	shf.r.wrap.b32 	%r18053, %r18052, %r18051, 28;
	shf.r.wrap.b32 	%r18054, %r18051, %r18052, 28;
	mov.b64 	%rd2702, {%r18054, %r18053};
	shf.l.wrap.b32 	%r18055, %r18051, %r18052, 30;
	shf.l.wrap.b32 	%r18056, %r18052, %r18051, 30;
	mov.b64 	%rd2703, {%r18056, %r18055};
	xor.b64  	%rd2704, %rd2703, %rd2702;
	shf.l.wrap.b32 	%r18057, %r18051, %r18052, 25;
	shf.l.wrap.b32 	%r18058, %r18052, %r18051, 25;
	mov.b64 	%rd2705, {%r18058, %r18057};
	xor.b64  	%rd2706, %rd2704, %rd2705;
	and.b64  	%rd2707, %rd4440, %rd2667;
	xor.b64  	%rd2708, %rd4440, %rd2667;
	and.b64  	%rd2709, %rd2708, %rd2643;
	or.b64  	%rd2710, %rd2709, %rd2707;
	add.s64 	%rd2711, %rd2701, %rd2710;
	add.s64 	%rd4439, %rd2711, %rd2706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18059,%dummy}, %rd4443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18060}, %rd4443;
	}
	shf.r.wrap.b32 	%r18061, %r18060, %r18059, 14;
	shf.r.wrap.b32 	%r18062, %r18059, %r18060, 14;
	mov.b64 	%rd2712, {%r18062, %r18061};
	shf.r.wrap.b32 	%r18063, %r18060, %r18059, 18;
	shf.r.wrap.b32 	%r18064, %r18059, %r18060, 18;
	mov.b64 	%rd2713, {%r18064, %r18063};
	xor.b64  	%rd2714, %rd2713, %rd2712;
	shf.l.wrap.b32 	%r18065, %r18059, %r18060, 23;
	shf.l.wrap.b32 	%r18066, %r18060, %r18059, 23;
	mov.b64 	%rd2715, {%r18066, %r18065};
	xor.b64  	%rd2716, %rd2714, %rd2715;
	xor.b64  	%rd2717, %rd4444, %rd2656;
	and.b64  	%rd2718, %rd4443, %rd2717;
	xor.b64  	%rd2719, %rd2718, %rd2656;
	add.s64 	%rd2720, %rd2632, %rd4430;
	add.s64 	%rd2721, %rd2720, %rd16;
	add.s64 	%rd2722, %rd2721, %rd2719;
	add.s64 	%rd2723, %rd2722, %rd2716;
	add.s64 	%rd4442, %rd2723, %rd2643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18067,%dummy}, %rd4439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18068}, %rd4439;
	}
	shf.r.wrap.b32 	%r18069, %r18068, %r18067, 28;
	shf.r.wrap.b32 	%r18070, %r18067, %r18068, 28;
	mov.b64 	%rd2724, {%r18070, %r18069};
	shf.l.wrap.b32 	%r18071, %r18067, %r18068, 30;
	shf.l.wrap.b32 	%r18072, %r18068, %r18067, 30;
	mov.b64 	%rd2725, {%r18072, %r18071};
	xor.b64  	%rd2726, %rd2725, %rd2724;
	shf.l.wrap.b32 	%r18073, %r18067, %r18068, 25;
	shf.l.wrap.b32 	%r18074, %r18068, %r18067, 25;
	mov.b64 	%rd2727, {%r18074, %r18073};
	xor.b64  	%rd2728, %rd2726, %rd2727;
	and.b64  	%rd2729, %rd4439, %rd4440;
	xor.b64  	%rd2730, %rd4439, %rd4440;
	and.b64  	%rd2731, %rd2730, %rd2667;
	or.b64  	%rd2732, %rd2731, %rd2729;
	add.s64 	%rd2733, %rd2723, %rd2732;
	add.s64 	%rd4438, %rd2733, %rd2728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18075,%dummy}, %rd4442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18076}, %rd4442;
	}
	shf.r.wrap.b32 	%r18077, %r18076, %r18075, 14;
	shf.r.wrap.b32 	%r18078, %r18075, %r18076, 14;
	mov.b64 	%rd2734, {%r18078, %r18077};
	shf.r.wrap.b32 	%r18079, %r18076, %r18075, 18;
	shf.r.wrap.b32 	%r18080, %r18075, %r18076, 18;
	mov.b64 	%rd2735, {%r18080, %r18079};
	xor.b64  	%rd2736, %rd2735, %rd2734;
	shf.l.wrap.b32 	%r18081, %r18075, %r18076, 23;
	shf.l.wrap.b32 	%r18082, %r18076, %r18075, 23;
	mov.b64 	%rd2737, {%r18082, %r18081};
	xor.b64  	%rd2738, %rd2736, %rd2737;
	xor.b64  	%rd2739, %rd4443, %rd4444;
	and.b64  	%rd2740, %rd4442, %rd2739;
	xor.b64  	%rd2741, %rd2740, %rd4444;
	add.s64 	%rd2742, %rd2656, %rd4429;
	add.s64 	%rd2743, %rd2742, %rd17;
	add.s64 	%rd2744, %rd2743, %rd2741;
	add.s64 	%rd2745, %rd2744, %rd2738;
	add.s64 	%rd4441, %rd2745, %rd2667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18083,%dummy}, %rd4438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18084}, %rd4438;
	}
	shf.r.wrap.b32 	%r18085, %r18084, %r18083, 28;
	shf.r.wrap.b32 	%r18086, %r18083, %r18084, 28;
	mov.b64 	%rd2746, {%r18086, %r18085};
	shf.l.wrap.b32 	%r18087, %r18083, %r18084, 30;
	shf.l.wrap.b32 	%r18088, %r18084, %r18083, 30;
	mov.b64 	%rd2747, {%r18088, %r18087};
	xor.b64  	%rd2748, %rd2747, %rd2746;
	shf.l.wrap.b32 	%r18089, %r18083, %r18084, 25;
	shf.l.wrap.b32 	%r18090, %r18084, %r18083, 25;
	mov.b64 	%rd2749, {%r18090, %r18089};
	xor.b64  	%rd2750, %rd2748, %rd2749;
	and.b64  	%rd2751, %rd4438, %rd4439;
	xor.b64  	%rd2752, %rd4438, %rd4439;
	and.b64  	%rd2753, %rd2752, %rd4440;
	or.b64  	%rd2754, %rd2753, %rd2751;
	add.s64 	%rd2755, %rd2745, %rd2754;
	add.s64 	%rd4437, %rd2755, %rd2750;
	mov.u32 	%r19458, 16;

BB2_304:
	shr.u64 	%rd2756, %rd4430, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18091,%dummy}, %rd4430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18092}, %rd4430;
	}
	shf.r.wrap.b32 	%r18093, %r18092, %r18091, 19;
	shf.r.wrap.b32 	%r18094, %r18091, %r18092, 19;
	mov.b64 	%rd2757, {%r18094, %r18093};
	xor.b64  	%rd2758, %rd2757, %rd2756;
	shf.l.wrap.b32 	%r18095, %r18091, %r18092, 3;
	shf.l.wrap.b32 	%r18096, %r18092, %r18091, 3;
	mov.b64 	%rd2759, {%r18096, %r18095};
	xor.b64  	%rd2760, %rd2758, %rd2759;
	shr.u64 	%rd2761, %rd4446, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18097,%dummy}, %rd4446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18098}, %rd4446;
	}
	shf.r.wrap.b32 	%r18099, %r18098, %r18097, 1;
	shf.r.wrap.b32 	%r18100, %r18097, %r18098, 1;
	mov.b64 	%rd2762, {%r18100, %r18099};
	xor.b64  	%rd2763, %rd2762, %rd2761;
	shf.r.wrap.b32 	%r18101, %r18098, %r18097, 8;
	shf.r.wrap.b32 	%r18102, %r18097, %r18098, 8;
	mov.b64 	%rd2764, {%r18102, %r18101};
	xor.b64  	%rd2765, %rd2763, %rd2764;
	add.s64 	%rd2766, %rd4435, %rd4445;
	add.s64 	%rd2767, %rd2766, %rd2760;
	add.s64 	%rd4445, %rd2767, %rd2765;
	shr.u64 	%rd2768, %rd4429, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18103,%dummy}, %rd4429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18104}, %rd4429;
	}
	shf.r.wrap.b32 	%r18105, %r18104, %r18103, 19;
	shf.r.wrap.b32 	%r18106, %r18103, %r18104, 19;
	mov.b64 	%rd2769, {%r18106, %r18105};
	xor.b64  	%rd2770, %rd2769, %rd2768;
	shf.l.wrap.b32 	%r18107, %r18103, %r18104, 3;
	shf.l.wrap.b32 	%r18108, %r18104, %r18103, 3;
	mov.b64 	%rd2771, {%r18108, %r18107};
	xor.b64  	%rd2772, %rd2770, %rd2771;
	shr.u64 	%rd2773, %rd4447, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18109,%dummy}, %rd4447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18110}, %rd4447;
	}
	shf.r.wrap.b32 	%r18111, %r18110, %r18109, 1;
	shf.r.wrap.b32 	%r18112, %r18109, %r18110, 1;
	mov.b64 	%rd2774, {%r18112, %r18111};
	xor.b64  	%rd2775, %rd2774, %rd2773;
	shf.r.wrap.b32 	%r18113, %r18110, %r18109, 8;
	shf.r.wrap.b32 	%r18114, %r18109, %r18110, 8;
	mov.b64 	%rd2776, {%r18114, %r18113};
	xor.b64  	%rd2777, %rd2775, %rd2776;
	add.s64 	%rd2778, %rd4434, %rd4446;
	add.s64 	%rd2779, %rd2778, %rd2772;
	add.s64 	%rd4446, %rd2779, %rd2777;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18115,%dummy}, %rd4445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18116}, %rd4445;
	}
	shf.r.wrap.b32 	%r18117, %r18116, %r18115, 19;
	shf.r.wrap.b32 	%r18118, %r18115, %r18116, 19;
	mov.b64 	%rd2780, {%r18118, %r18117};
	shf.l.wrap.b32 	%r18119, %r18115, %r18116, 3;
	shf.l.wrap.b32 	%r18120, %r18116, %r18115, 3;
	mov.b64 	%rd2781, {%r18120, %r18119};
	shr.u64 	%rd2782, %rd4445, 6;
	xor.b64  	%rd2783, %rd2780, %rd2782;
	xor.b64  	%rd2784, %rd2783, %rd2781;
	shr.u64 	%rd2785, %rd4448, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18121,%dummy}, %rd4448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18122}, %rd4448;
	}
	shf.r.wrap.b32 	%r18123, %r18122, %r18121, 1;
	shf.r.wrap.b32 	%r18124, %r18121, %r18122, 1;
	mov.b64 	%rd2786, {%r18124, %r18123};
	xor.b64  	%rd2787, %rd2786, %rd2785;
	shf.r.wrap.b32 	%r18125, %r18122, %r18121, 8;
	shf.r.wrap.b32 	%r18126, %r18121, %r18122, 8;
	mov.b64 	%rd2788, {%r18126, %r18125};
	xor.b64  	%rd2789, %rd2787, %rd2788;
	add.s64 	%rd2790, %rd4433, %rd4447;
	add.s64 	%rd2791, %rd2790, %rd2784;
	add.s64 	%rd4447, %rd2791, %rd2789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18127,%dummy}, %rd4446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18128}, %rd4446;
	}
	shf.r.wrap.b32 	%r18129, %r18128, %r18127, 19;
	shf.r.wrap.b32 	%r18130, %r18127, %r18128, 19;
	mov.b64 	%rd2792, {%r18130, %r18129};
	shf.l.wrap.b32 	%r18131, %r18127, %r18128, 3;
	shf.l.wrap.b32 	%r18132, %r18128, %r18127, 3;
	mov.b64 	%rd2793, {%r18132, %r18131};
	shr.u64 	%rd2794, %rd4446, 6;
	xor.b64  	%rd2795, %rd2792, %rd2794;
	xor.b64  	%rd2796, %rd2795, %rd2793;
	shr.u64 	%rd2797, %rd4449, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18133,%dummy}, %rd4449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18134}, %rd4449;
	}
	shf.r.wrap.b32 	%r18135, %r18134, %r18133, 1;
	shf.r.wrap.b32 	%r18136, %r18133, %r18134, 1;
	mov.b64 	%rd2798, {%r18136, %r18135};
	xor.b64  	%rd2799, %rd2798, %rd2797;
	shf.r.wrap.b32 	%r18137, %r18134, %r18133, 8;
	shf.r.wrap.b32 	%r18138, %r18133, %r18134, 8;
	mov.b64 	%rd2800, {%r18138, %r18137};
	xor.b64  	%rd2801, %rd2799, %rd2800;
	add.s64 	%rd2802, %rd4432, %rd4448;
	add.s64 	%rd2803, %rd2802, %rd2796;
	add.s64 	%rd4448, %rd2803, %rd2801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18139,%dummy}, %rd4447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18140}, %rd4447;
	}
	shf.r.wrap.b32 	%r18141, %r18140, %r18139, 19;
	shf.r.wrap.b32 	%r18142, %r18139, %r18140, 19;
	mov.b64 	%rd2804, {%r18142, %r18141};
	shf.l.wrap.b32 	%r18143, %r18139, %r18140, 3;
	shf.l.wrap.b32 	%r18144, %r18140, %r18139, 3;
	mov.b64 	%rd2805, {%r18144, %r18143};
	shr.u64 	%rd2806, %rd4447, 6;
	xor.b64  	%rd2807, %rd2804, %rd2806;
	xor.b64  	%rd2808, %rd2807, %rd2805;
	shr.u64 	%rd2809, %rd4450, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18145,%dummy}, %rd4450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18146}, %rd4450;
	}
	shf.r.wrap.b32 	%r18147, %r18146, %r18145, 1;
	shf.r.wrap.b32 	%r18148, %r18145, %r18146, 1;
	mov.b64 	%rd2810, {%r18148, %r18147};
	xor.b64  	%rd2811, %rd2810, %rd2809;
	shf.r.wrap.b32 	%r18149, %r18146, %r18145, 8;
	shf.r.wrap.b32 	%r18150, %r18145, %r18146, 8;
	mov.b64 	%rd2812, {%r18150, %r18149};
	xor.b64  	%rd2813, %rd2811, %rd2812;
	add.s64 	%rd2814, %rd4431, %rd4449;
	add.s64 	%rd2815, %rd2814, %rd2808;
	add.s64 	%rd4449, %rd2815, %rd2813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18151,%dummy}, %rd4448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18152}, %rd4448;
	}
	shf.r.wrap.b32 	%r18153, %r18152, %r18151, 19;
	shf.r.wrap.b32 	%r18154, %r18151, %r18152, 19;
	mov.b64 	%rd2816, {%r18154, %r18153};
	shf.l.wrap.b32 	%r18155, %r18151, %r18152, 3;
	shf.l.wrap.b32 	%r18156, %r18152, %r18151, 3;
	mov.b64 	%rd2817, {%r18156, %r18155};
	shr.u64 	%rd2818, %rd4448, 6;
	xor.b64  	%rd2819, %rd2816, %rd2818;
	xor.b64  	%rd2820, %rd2819, %rd2817;
	shr.u64 	%rd2821, %rd4451, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18157,%dummy}, %rd4451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18158}, %rd4451;
	}
	shf.r.wrap.b32 	%r18159, %r18158, %r18157, 1;
	shf.r.wrap.b32 	%r18160, %r18157, %r18158, 1;
	mov.b64 	%rd2822, {%r18160, %r18159};
	xor.b64  	%rd2823, %rd2822, %rd2821;
	shf.r.wrap.b32 	%r18161, %r18158, %r18157, 8;
	shf.r.wrap.b32 	%r18162, %r18157, %r18158, 8;
	mov.b64 	%rd2824, {%r18162, %r18161};
	xor.b64  	%rd2825, %rd2823, %rd2824;
	add.s64 	%rd2826, %rd4430, %rd4450;
	add.s64 	%rd2827, %rd2826, %rd2820;
	add.s64 	%rd4450, %rd2827, %rd2825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18163,%dummy}, %rd4449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18164}, %rd4449;
	}
	shf.r.wrap.b32 	%r18165, %r18164, %r18163, 19;
	shf.r.wrap.b32 	%r18166, %r18163, %r18164, 19;
	mov.b64 	%rd2828, {%r18166, %r18165};
	shf.l.wrap.b32 	%r18167, %r18163, %r18164, 3;
	shf.l.wrap.b32 	%r18168, %r18164, %r18163, 3;
	mov.b64 	%rd2829, {%r18168, %r18167};
	shr.u64 	%rd2830, %rd4449, 6;
	xor.b64  	%rd2831, %rd2828, %rd2830;
	xor.b64  	%rd2832, %rd2831, %rd2829;
	shr.u64 	%rd2833, %rd4452, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18169,%dummy}, %rd4452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18170}, %rd4452;
	}
	shf.r.wrap.b32 	%r18171, %r18170, %r18169, 1;
	shf.r.wrap.b32 	%r18172, %r18169, %r18170, 1;
	mov.b64 	%rd2834, {%r18172, %r18171};
	xor.b64  	%rd2835, %rd2834, %rd2833;
	shf.r.wrap.b32 	%r18173, %r18170, %r18169, 8;
	shf.r.wrap.b32 	%r18174, %r18169, %r18170, 8;
	mov.b64 	%rd2836, {%r18174, %r18173};
	xor.b64  	%rd2837, %rd2835, %rd2836;
	add.s64 	%rd2838, %rd4429, %rd4451;
	add.s64 	%rd2839, %rd2838, %rd2832;
	add.s64 	%rd4451, %rd2839, %rd2837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18175,%dummy}, %rd4450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18176}, %rd4450;
	}
	shf.r.wrap.b32 	%r18177, %r18176, %r18175, 19;
	shf.r.wrap.b32 	%r18178, %r18175, %r18176, 19;
	mov.b64 	%rd2840, {%r18178, %r18177};
	shf.l.wrap.b32 	%r18179, %r18175, %r18176, 3;
	shf.l.wrap.b32 	%r18180, %r18176, %r18175, 3;
	mov.b64 	%rd2841, {%r18180, %r18179};
	shr.u64 	%rd2842, %rd4450, 6;
	xor.b64  	%rd2843, %rd2840, %rd2842;
	xor.b64  	%rd2844, %rd2843, %rd2841;
	shr.u64 	%rd2845, %rd4436, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18181,%dummy}, %rd4436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18182}, %rd4436;
	}
	shf.r.wrap.b32 	%r18183, %r18182, %r18181, 1;
	shf.r.wrap.b32 	%r18184, %r18181, %r18182, 1;
	mov.b64 	%rd2846, {%r18184, %r18183};
	xor.b64  	%rd2847, %rd2846, %rd2845;
	shf.r.wrap.b32 	%r18185, %r18182, %r18181, 8;
	shf.r.wrap.b32 	%r18186, %r18181, %r18182, 8;
	mov.b64 	%rd2848, {%r18186, %r18185};
	xor.b64  	%rd2849, %rd2847, %rd2848;
	add.s64 	%rd2850, %rd4445, %rd4452;
	add.s64 	%rd2851, %rd2850, %rd2844;
	add.s64 	%rd4452, %rd2851, %rd2849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18187,%dummy}, %rd4451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18188}, %rd4451;
	}
	shf.r.wrap.b32 	%r18189, %r18188, %r18187, 19;
	shf.r.wrap.b32 	%r18190, %r18187, %r18188, 19;
	mov.b64 	%rd2852, {%r18190, %r18189};
	shf.l.wrap.b32 	%r18191, %r18187, %r18188, 3;
	shf.l.wrap.b32 	%r18192, %r18188, %r18187, 3;
	mov.b64 	%rd2853, {%r18192, %r18191};
	shr.u64 	%rd2854, %rd4451, 6;
	xor.b64  	%rd2855, %rd2852, %rd2854;
	xor.b64  	%rd2856, %rd2855, %rd2853;
	shr.u64 	%rd2857, %rd4435, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18193,%dummy}, %rd4435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18194}, %rd4435;
	}
	shf.r.wrap.b32 	%r18195, %r18194, %r18193, 1;
	shf.r.wrap.b32 	%r18196, %r18193, %r18194, 1;
	mov.b64 	%rd2858, {%r18196, %r18195};
	xor.b64  	%rd2859, %rd2858, %rd2857;
	shf.r.wrap.b32 	%r18197, %r18194, %r18193, 8;
	shf.r.wrap.b32 	%r18198, %r18193, %r18194, 8;
	mov.b64 	%rd2860, {%r18198, %r18197};
	xor.b64  	%rd2861, %rd2859, %rd2860;
	add.s64 	%rd2862, %rd4446, %rd4436;
	add.s64 	%rd2863, %rd2862, %rd2856;
	add.s64 	%rd4436, %rd2863, %rd2861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18199,%dummy}, %rd4452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18200}, %rd4452;
	}
	shf.r.wrap.b32 	%r18201, %r18200, %r18199, 19;
	shf.r.wrap.b32 	%r18202, %r18199, %r18200, 19;
	mov.b64 	%rd2864, {%r18202, %r18201};
	shf.l.wrap.b32 	%r18203, %r18199, %r18200, 3;
	shf.l.wrap.b32 	%r18204, %r18200, %r18199, 3;
	mov.b64 	%rd2865, {%r18204, %r18203};
	shr.u64 	%rd2866, %rd4452, 6;
	xor.b64  	%rd2867, %rd2864, %rd2866;
	xor.b64  	%rd2868, %rd2867, %rd2865;
	shr.u64 	%rd2869, %rd4434, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18205,%dummy}, %rd4434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18206}, %rd4434;
	}
	shf.r.wrap.b32 	%r18207, %r18206, %r18205, 1;
	shf.r.wrap.b32 	%r18208, %r18205, %r18206, 1;
	mov.b64 	%rd2870, {%r18208, %r18207};
	xor.b64  	%rd2871, %rd2870, %rd2869;
	shf.r.wrap.b32 	%r18209, %r18206, %r18205, 8;
	shf.r.wrap.b32 	%r18210, %r18205, %r18206, 8;
	mov.b64 	%rd2872, {%r18210, %r18209};
	xor.b64  	%rd2873, %rd2871, %rd2872;
	add.s64 	%rd2874, %rd4447, %rd4435;
	add.s64 	%rd2875, %rd2874, %rd2868;
	add.s64 	%rd4435, %rd2875, %rd2873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18211,%dummy}, %rd4436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18212}, %rd4436;
	}
	shf.r.wrap.b32 	%r18213, %r18212, %r18211, 19;
	shf.r.wrap.b32 	%r18214, %r18211, %r18212, 19;
	mov.b64 	%rd2876, {%r18214, %r18213};
	shf.l.wrap.b32 	%r18215, %r18211, %r18212, 3;
	shf.l.wrap.b32 	%r18216, %r18212, %r18211, 3;
	mov.b64 	%rd2877, {%r18216, %r18215};
	shr.u64 	%rd2878, %rd4436, 6;
	xor.b64  	%rd2879, %rd2876, %rd2878;
	xor.b64  	%rd2880, %rd2879, %rd2877;
	shr.u64 	%rd2881, %rd4433, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18217,%dummy}, %rd4433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18218}, %rd4433;
	}
	shf.r.wrap.b32 	%r18219, %r18218, %r18217, 1;
	shf.r.wrap.b32 	%r18220, %r18217, %r18218, 1;
	mov.b64 	%rd2882, {%r18220, %r18219};
	xor.b64  	%rd2883, %rd2882, %rd2881;
	shf.r.wrap.b32 	%r18221, %r18218, %r18217, 8;
	shf.r.wrap.b32 	%r18222, %r18217, %r18218, 8;
	mov.b64 	%rd2884, {%r18222, %r18221};
	xor.b64  	%rd2885, %rd2883, %rd2884;
	add.s64 	%rd2886, %rd4448, %rd4434;
	add.s64 	%rd2887, %rd2886, %rd2880;
	add.s64 	%rd4434, %rd2887, %rd2885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18223,%dummy}, %rd4435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18224}, %rd4435;
	}
	shf.r.wrap.b32 	%r18225, %r18224, %r18223, 19;
	shf.r.wrap.b32 	%r18226, %r18223, %r18224, 19;
	mov.b64 	%rd2888, {%r18226, %r18225};
	shf.l.wrap.b32 	%r18227, %r18223, %r18224, 3;
	shf.l.wrap.b32 	%r18228, %r18224, %r18223, 3;
	mov.b64 	%rd2889, {%r18228, %r18227};
	shr.u64 	%rd2890, %rd4435, 6;
	xor.b64  	%rd2891, %rd2888, %rd2890;
	xor.b64  	%rd2892, %rd2891, %rd2889;
	shr.u64 	%rd2893, %rd4432, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18229,%dummy}, %rd4432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18230}, %rd4432;
	}
	shf.r.wrap.b32 	%r18231, %r18230, %r18229, 1;
	shf.r.wrap.b32 	%r18232, %r18229, %r18230, 1;
	mov.b64 	%rd2894, {%r18232, %r18231};
	xor.b64  	%rd2895, %rd2894, %rd2893;
	shf.r.wrap.b32 	%r18233, %r18230, %r18229, 8;
	shf.r.wrap.b32 	%r18234, %r18229, %r18230, 8;
	mov.b64 	%rd2896, {%r18234, %r18233};
	xor.b64  	%rd2897, %rd2895, %rd2896;
	add.s64 	%rd2898, %rd4449, %rd4433;
	add.s64 	%rd2899, %rd2898, %rd2892;
	add.s64 	%rd4433, %rd2899, %rd2897;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18235,%dummy}, %rd4434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18236}, %rd4434;
	}
	shf.r.wrap.b32 	%r18237, %r18236, %r18235, 19;
	shf.r.wrap.b32 	%r18238, %r18235, %r18236, 19;
	mov.b64 	%rd2900, {%r18238, %r18237};
	shf.l.wrap.b32 	%r18239, %r18235, %r18236, 3;
	shf.l.wrap.b32 	%r18240, %r18236, %r18235, 3;
	mov.b64 	%rd2901, {%r18240, %r18239};
	shr.u64 	%rd2902, %rd4434, 6;
	xor.b64  	%rd2903, %rd2900, %rd2902;
	xor.b64  	%rd2904, %rd2903, %rd2901;
	shr.u64 	%rd2905, %rd4431, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18241,%dummy}, %rd4431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18242}, %rd4431;
	}
	shf.r.wrap.b32 	%r18243, %r18242, %r18241, 1;
	shf.r.wrap.b32 	%r18244, %r18241, %r18242, 1;
	mov.b64 	%rd2906, {%r18244, %r18243};
	xor.b64  	%rd2907, %rd2906, %rd2905;
	shf.r.wrap.b32 	%r18245, %r18242, %r18241, 8;
	shf.r.wrap.b32 	%r18246, %r18241, %r18242, 8;
	mov.b64 	%rd2908, {%r18246, %r18245};
	xor.b64  	%rd2909, %rd2907, %rd2908;
	add.s64 	%rd2910, %rd4450, %rd4432;
	add.s64 	%rd2911, %rd2910, %rd2904;
	add.s64 	%rd4432, %rd2911, %rd2909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18247,%dummy}, %rd4433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18248}, %rd4433;
	}
	shf.r.wrap.b32 	%r18249, %r18248, %r18247, 19;
	shf.r.wrap.b32 	%r18250, %r18247, %r18248, 19;
	mov.b64 	%rd2912, {%r18250, %r18249};
	shf.l.wrap.b32 	%r18251, %r18247, %r18248, 3;
	shf.l.wrap.b32 	%r18252, %r18248, %r18247, 3;
	mov.b64 	%rd2913, {%r18252, %r18251};
	shr.u64 	%rd2914, %rd4433, 6;
	xor.b64  	%rd2915, %rd2912, %rd2914;
	xor.b64  	%rd2916, %rd2915, %rd2913;
	shr.u64 	%rd2917, %rd4430, 7;
	shf.r.wrap.b32 	%r18253, %r18092, %r18091, 1;
	shf.r.wrap.b32 	%r18254, %r18091, %r18092, 1;
	mov.b64 	%rd2918, {%r18254, %r18253};
	xor.b64  	%rd2919, %rd2918, %rd2917;
	shf.r.wrap.b32 	%r18255, %r18092, %r18091, 8;
	shf.r.wrap.b32 	%r18256, %r18091, %r18092, 8;
	mov.b64 	%rd2920, {%r18256, %r18255};
	xor.b64  	%rd2921, %rd2919, %rd2920;
	add.s64 	%rd2922, %rd4451, %rd4431;
	add.s64 	%rd2923, %rd2922, %rd2916;
	add.s64 	%rd4431, %rd2923, %rd2921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18257,%dummy}, %rd4432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18258}, %rd4432;
	}
	shf.r.wrap.b32 	%r18259, %r18258, %r18257, 19;
	shf.r.wrap.b32 	%r18260, %r18257, %r18258, 19;
	mov.b64 	%rd2924, {%r18260, %r18259};
	shf.l.wrap.b32 	%r18261, %r18257, %r18258, 3;
	shf.l.wrap.b32 	%r18262, %r18258, %r18257, 3;
	mov.b64 	%rd2925, {%r18262, %r18261};
	shr.u64 	%rd2926, %rd4432, 6;
	xor.b64  	%rd2927, %rd2924, %rd2926;
	xor.b64  	%rd2928, %rd2927, %rd2925;
	shr.u64 	%rd2929, %rd4429, 7;
	shf.r.wrap.b32 	%r18263, %r18104, %r18103, 1;
	shf.r.wrap.b32 	%r18264, %r18103, %r18104, 1;
	mov.b64 	%rd2930, {%r18264, %r18263};
	xor.b64  	%rd2931, %rd2930, %rd2929;
	shf.r.wrap.b32 	%r18265, %r18104, %r18103, 8;
	shf.r.wrap.b32 	%r18266, %r18103, %r18104, 8;
	mov.b64 	%rd2932, {%r18266, %r18265};
	xor.b64  	%rd2933, %rd2931, %rd2932;
	add.s64 	%rd2934, %rd4452, %rd4430;
	add.s64 	%rd2935, %rd2934, %rd2928;
	add.s64 	%rd4430, %rd2935, %rd2933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18267,%dummy}, %rd4431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18268}, %rd4431;
	}
	shf.r.wrap.b32 	%r18269, %r18268, %r18267, 19;
	shf.r.wrap.b32 	%r18270, %r18267, %r18268, 19;
	mov.b64 	%rd2936, {%r18270, %r18269};
	shf.l.wrap.b32 	%r18271, %r18267, %r18268, 3;
	shf.l.wrap.b32 	%r18272, %r18268, %r18267, 3;
	mov.b64 	%rd2937, {%r18272, %r18271};
	shr.u64 	%rd2938, %rd4431, 6;
	xor.b64  	%rd2939, %rd2936, %rd2938;
	xor.b64  	%rd2940, %rd2939, %rd2937;
	shf.r.wrap.b32 	%r18273, %r18116, %r18115, 1;
	shf.r.wrap.b32 	%r18274, %r18115, %r18116, 1;
	mov.b64 	%rd2941, {%r18274, %r18273};
	shf.r.wrap.b32 	%r18275, %r18116, %r18115, 8;
	shf.r.wrap.b32 	%r18276, %r18115, %r18116, 8;
	mov.b64 	%rd2942, {%r18276, %r18275};
	shr.u64 	%rd2943, %rd4445, 7;
	xor.b64  	%rd2944, %rd2941, %rd2943;
	xor.b64  	%rd2945, %rd2944, %rd2942;
	add.s64 	%rd2946, %rd4436, %rd4429;
	add.s64 	%rd2947, %rd2946, %rd2940;
	add.s64 	%rd4429, %rd2947, %rd2945;
	mul.wide.s32 	%rd2948, %r19458, 8;
	mov.u64 	%rd2949, k_sha512;
	add.s64 	%rd2950, %rd2949, %rd2948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18277,%dummy}, %rd4441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18278}, %rd4441;
	}
	shf.r.wrap.b32 	%r18279, %r18278, %r18277, 18;
	shf.r.wrap.b32 	%r18280, %r18277, %r18278, 18;
	mov.b64 	%rd2951, {%r18280, %r18279};
	shf.r.wrap.b32 	%r18281, %r18278, %r18277, 14;
	shf.r.wrap.b32 	%r18282, %r18277, %r18278, 14;
	mov.b64 	%rd2952, {%r18282, %r18281};
	xor.b64  	%rd2953, %rd2951, %rd2952;
	shf.l.wrap.b32 	%r18283, %r18277, %r18278, 23;
	shf.l.wrap.b32 	%r18284, %r18278, %r18277, 23;
	mov.b64 	%rd2954, {%r18284, %r18283};
	xor.b64  	%rd2955, %rd2953, %rd2954;
	xor.b64  	%rd2956, %rd4442, %rd4443;
	and.b64  	%rd2957, %rd4441, %rd2956;
	xor.b64  	%rd2958, %rd2957, %rd4443;
	add.s64 	%rd2959, %rd2958, %rd4444;
	add.s64 	%rd2960, %rd2959, %rd4445;
	ld.const.u64 	%rd2961, [%rd2950];
	add.s64 	%rd2962, %rd2960, %rd2961;
	add.s64 	%rd2963, %rd2962, %rd2955;
	add.s64 	%rd2964, %rd2963, %rd4440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18285}, %rd4437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18286,%dummy}, %rd4437;
	}
	shf.l.wrap.b32 	%r18287, %r18286, %r18285, 30;
	shf.l.wrap.b32 	%r18288, %r18285, %r18286, 30;
	mov.b64 	%rd2965, {%r18288, %r18287};
	shf.r.wrap.b32 	%r18289, %r18285, %r18286, 28;
	shf.r.wrap.b32 	%r18290, %r18286, %r18285, 28;
	mov.b64 	%rd2966, {%r18290, %r18289};
	xor.b64  	%rd2967, %rd2965, %rd2966;
	shf.l.wrap.b32 	%r18291, %r18286, %r18285, 25;
	shf.l.wrap.b32 	%r18292, %r18285, %r18286, 25;
	mov.b64 	%rd2968, {%r18292, %r18291};
	xor.b64  	%rd2969, %rd2967, %rd2968;
	xor.b64  	%rd2970, %rd4437, %rd4438;
	and.b64  	%rd2971, %rd2970, %rd4439;
	and.b64  	%rd2972, %rd4437, %rd4438;
	or.b64  	%rd2973, %rd2971, %rd2972;
	add.s64 	%rd2974, %rd2963, %rd2973;
	add.s64 	%rd2975, %rd2974, %rd2969;
	add.s32 	%r18293, %r19458, 1;
	mul.wide.s32 	%rd2976, %r18293, 8;
	add.s64 	%rd2977, %rd2949, %rd2976;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18294,%dummy}, %rd2964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18295}, %rd2964;
	}
	shf.r.wrap.b32 	%r18296, %r18295, %r18294, 14;
	shf.r.wrap.b32 	%r18297, %r18294, %r18295, 14;
	mov.b64 	%rd2978, {%r18297, %r18296};
	shf.r.wrap.b32 	%r18298, %r18295, %r18294, 18;
	shf.r.wrap.b32 	%r18299, %r18294, %r18295, 18;
	mov.b64 	%rd2979, {%r18299, %r18298};
	xor.b64  	%rd2980, %rd2979, %rd2978;
	shf.l.wrap.b32 	%r18300, %r18294, %r18295, 23;
	shf.l.wrap.b32 	%r18301, %r18295, %r18294, 23;
	mov.b64 	%rd2981, {%r18301, %r18300};
	xor.b64  	%rd2982, %rd2980, %rd2981;
	xor.b64  	%rd2983, %rd4441, %rd4442;
	and.b64  	%rd2984, %rd2964, %rd2983;
	xor.b64  	%rd2985, %rd2984, %rd4442;
	add.s64 	%rd2986, %rd4446, %rd4443;
	ld.const.u64 	%rd2987, [%rd2977];
	add.s64 	%rd2988, %rd2986, %rd2987;
	add.s64 	%rd2989, %rd2988, %rd2985;
	add.s64 	%rd2990, %rd2989, %rd2982;
	add.s64 	%rd2991, %rd2990, %rd4439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18302,%dummy}, %rd2975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18303}, %rd2975;
	}
	shf.r.wrap.b32 	%r18304, %r18303, %r18302, 28;
	shf.r.wrap.b32 	%r18305, %r18302, %r18303, 28;
	mov.b64 	%rd2992, {%r18305, %r18304};
	shf.l.wrap.b32 	%r18306, %r18302, %r18303, 30;
	shf.l.wrap.b32 	%r18307, %r18303, %r18302, 30;
	mov.b64 	%rd2993, {%r18307, %r18306};
	xor.b64  	%rd2994, %rd2993, %rd2992;
	shf.l.wrap.b32 	%r18308, %r18302, %r18303, 25;
	shf.l.wrap.b32 	%r18309, %r18303, %r18302, 25;
	mov.b64 	%rd2995, {%r18309, %r18308};
	xor.b64  	%rd2996, %rd2994, %rd2995;
	and.b64  	%rd2997, %rd2975, %rd4437;
	xor.b64  	%rd2998, %rd2975, %rd4437;
	and.b64  	%rd2999, %rd2998, %rd4438;
	or.b64  	%rd3000, %rd2999, %rd2997;
	add.s64 	%rd3001, %rd2990, %rd3000;
	add.s64 	%rd3002, %rd3001, %rd2996;
	add.s32 	%r18310, %r19458, 2;
	mul.wide.s32 	%rd3003, %r18310, 8;
	add.s64 	%rd3004, %rd2949, %rd3003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18311,%dummy}, %rd2991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18312}, %rd2991;
	}
	shf.r.wrap.b32 	%r18313, %r18312, %r18311, 14;
	shf.r.wrap.b32 	%r18314, %r18311, %r18312, 14;
	mov.b64 	%rd3005, {%r18314, %r18313};
	shf.r.wrap.b32 	%r18315, %r18312, %r18311, 18;
	shf.r.wrap.b32 	%r18316, %r18311, %r18312, 18;
	mov.b64 	%rd3006, {%r18316, %r18315};
	xor.b64  	%rd3007, %rd3006, %rd3005;
	shf.l.wrap.b32 	%r18317, %r18311, %r18312, 23;
	shf.l.wrap.b32 	%r18318, %r18312, %r18311, 23;
	mov.b64 	%rd3008, {%r18318, %r18317};
	xor.b64  	%rd3009, %rd3007, %rd3008;
	xor.b64  	%rd3010, %rd2964, %rd4441;
	and.b64  	%rd3011, %rd2991, %rd3010;
	xor.b64  	%rd3012, %rd3011, %rd4441;
	add.s64 	%rd3013, %rd4447, %rd4442;
	ld.const.u64 	%rd3014, [%rd3004];
	add.s64 	%rd3015, %rd3013, %rd3014;
	add.s64 	%rd3016, %rd3015, %rd3012;
	add.s64 	%rd3017, %rd3016, %rd3009;
	add.s64 	%rd3018, %rd3017, %rd4438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18319,%dummy}, %rd3002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18320}, %rd3002;
	}
	shf.r.wrap.b32 	%r18321, %r18320, %r18319, 28;
	shf.r.wrap.b32 	%r18322, %r18319, %r18320, 28;
	mov.b64 	%rd3019, {%r18322, %r18321};
	shf.l.wrap.b32 	%r18323, %r18319, %r18320, 30;
	shf.l.wrap.b32 	%r18324, %r18320, %r18319, 30;
	mov.b64 	%rd3020, {%r18324, %r18323};
	xor.b64  	%rd3021, %rd3020, %rd3019;
	shf.l.wrap.b32 	%r18325, %r18319, %r18320, 25;
	shf.l.wrap.b32 	%r18326, %r18320, %r18319, 25;
	mov.b64 	%rd3022, {%r18326, %r18325};
	xor.b64  	%rd3023, %rd3021, %rd3022;
	and.b64  	%rd3024, %rd3002, %rd2975;
	xor.b64  	%rd3025, %rd3002, %rd2975;
	and.b64  	%rd3026, %rd3025, %rd4437;
	or.b64  	%rd3027, %rd3026, %rd3024;
	add.s64 	%rd3028, %rd3017, %rd3027;
	add.s64 	%rd3029, %rd3028, %rd3023;
	add.s32 	%r18327, %r19458, 3;
	mul.wide.s32 	%rd3030, %r18327, 8;
	add.s64 	%rd3031, %rd2949, %rd3030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18328,%dummy}, %rd3018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18329}, %rd3018;
	}
	shf.r.wrap.b32 	%r18330, %r18329, %r18328, 14;
	shf.r.wrap.b32 	%r18331, %r18328, %r18329, 14;
	mov.b64 	%rd3032, {%r18331, %r18330};
	shf.r.wrap.b32 	%r18332, %r18329, %r18328, 18;
	shf.r.wrap.b32 	%r18333, %r18328, %r18329, 18;
	mov.b64 	%rd3033, {%r18333, %r18332};
	xor.b64  	%rd3034, %rd3033, %rd3032;
	shf.l.wrap.b32 	%r18334, %r18328, %r18329, 23;
	shf.l.wrap.b32 	%r18335, %r18329, %r18328, 23;
	mov.b64 	%rd3035, {%r18335, %r18334};
	xor.b64  	%rd3036, %rd3034, %rd3035;
	xor.b64  	%rd3037, %rd2991, %rd2964;
	and.b64  	%rd3038, %rd3018, %rd3037;
	xor.b64  	%rd3039, %rd3038, %rd2964;
	add.s64 	%rd3040, %rd4448, %rd4441;
	ld.const.u64 	%rd3041, [%rd3031];
	add.s64 	%rd3042, %rd3040, %rd3041;
	add.s64 	%rd3043, %rd3042, %rd3039;
	add.s64 	%rd3044, %rd3043, %rd3036;
	add.s64 	%rd3045, %rd3044, %rd4437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18336,%dummy}, %rd3029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18337}, %rd3029;
	}
	shf.r.wrap.b32 	%r18338, %r18337, %r18336, 28;
	shf.r.wrap.b32 	%r18339, %r18336, %r18337, 28;
	mov.b64 	%rd3046, {%r18339, %r18338};
	shf.l.wrap.b32 	%r18340, %r18336, %r18337, 30;
	shf.l.wrap.b32 	%r18341, %r18337, %r18336, 30;
	mov.b64 	%rd3047, {%r18341, %r18340};
	xor.b64  	%rd3048, %rd3047, %rd3046;
	shf.l.wrap.b32 	%r18342, %r18336, %r18337, 25;
	shf.l.wrap.b32 	%r18343, %r18337, %r18336, 25;
	mov.b64 	%rd3049, {%r18343, %r18342};
	xor.b64  	%rd3050, %rd3048, %rd3049;
	and.b64  	%rd3051, %rd3029, %rd3002;
	xor.b64  	%rd3052, %rd3029, %rd3002;
	and.b64  	%rd3053, %rd3052, %rd2975;
	or.b64  	%rd3054, %rd3053, %rd3051;
	add.s64 	%rd3055, %rd3044, %rd3054;
	add.s64 	%rd3056, %rd3055, %rd3050;
	add.s32 	%r18344, %r19458, 4;
	mul.wide.s32 	%rd3057, %r18344, 8;
	add.s64 	%rd3058, %rd2949, %rd3057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18345,%dummy}, %rd3045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18346}, %rd3045;
	}
	shf.r.wrap.b32 	%r18347, %r18346, %r18345, 14;
	shf.r.wrap.b32 	%r18348, %r18345, %r18346, 14;
	mov.b64 	%rd3059, {%r18348, %r18347};
	shf.r.wrap.b32 	%r18349, %r18346, %r18345, 18;
	shf.r.wrap.b32 	%r18350, %r18345, %r18346, 18;
	mov.b64 	%rd3060, {%r18350, %r18349};
	xor.b64  	%rd3061, %rd3060, %rd3059;
	shf.l.wrap.b32 	%r18351, %r18345, %r18346, 23;
	shf.l.wrap.b32 	%r18352, %r18346, %r18345, 23;
	mov.b64 	%rd3062, {%r18352, %r18351};
	xor.b64  	%rd3063, %rd3061, %rd3062;
	xor.b64  	%rd3064, %rd3018, %rd2991;
	and.b64  	%rd3065, %rd3045, %rd3064;
	xor.b64  	%rd3066, %rd3065, %rd2991;
	add.s64 	%rd3067, %rd2964, %rd4449;
	ld.const.u64 	%rd3068, [%rd3058];
	add.s64 	%rd3069, %rd3067, %rd3068;
	add.s64 	%rd3070, %rd3069, %rd3066;
	add.s64 	%rd3071, %rd3070, %rd3063;
	add.s64 	%rd3072, %rd3071, %rd2975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18353,%dummy}, %rd3056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18354}, %rd3056;
	}
	shf.r.wrap.b32 	%r18355, %r18354, %r18353, 28;
	shf.r.wrap.b32 	%r18356, %r18353, %r18354, 28;
	mov.b64 	%rd3073, {%r18356, %r18355};
	shf.l.wrap.b32 	%r18357, %r18353, %r18354, 30;
	shf.l.wrap.b32 	%r18358, %r18354, %r18353, 30;
	mov.b64 	%rd3074, {%r18358, %r18357};
	xor.b64  	%rd3075, %rd3074, %rd3073;
	shf.l.wrap.b32 	%r18359, %r18353, %r18354, 25;
	shf.l.wrap.b32 	%r18360, %r18354, %r18353, 25;
	mov.b64 	%rd3076, {%r18360, %r18359};
	xor.b64  	%rd3077, %rd3075, %rd3076;
	and.b64  	%rd3078, %rd3056, %rd3029;
	xor.b64  	%rd3079, %rd3056, %rd3029;
	and.b64  	%rd3080, %rd3079, %rd3002;
	or.b64  	%rd3081, %rd3080, %rd3078;
	add.s64 	%rd3082, %rd3071, %rd3081;
	add.s64 	%rd3083, %rd3082, %rd3077;
	add.s32 	%r18361, %r19458, 5;
	mul.wide.s32 	%rd3084, %r18361, 8;
	add.s64 	%rd3085, %rd2949, %rd3084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18362,%dummy}, %rd3072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18363}, %rd3072;
	}
	shf.r.wrap.b32 	%r18364, %r18363, %r18362, 14;
	shf.r.wrap.b32 	%r18365, %r18362, %r18363, 14;
	mov.b64 	%rd3086, {%r18365, %r18364};
	shf.r.wrap.b32 	%r18366, %r18363, %r18362, 18;
	shf.r.wrap.b32 	%r18367, %r18362, %r18363, 18;
	mov.b64 	%rd3087, {%r18367, %r18366};
	xor.b64  	%rd3088, %rd3087, %rd3086;
	shf.l.wrap.b32 	%r18368, %r18362, %r18363, 23;
	shf.l.wrap.b32 	%r18369, %r18363, %r18362, 23;
	mov.b64 	%rd3089, {%r18369, %r18368};
	xor.b64  	%rd3090, %rd3088, %rd3089;
	xor.b64  	%rd3091, %rd3045, %rd3018;
	and.b64  	%rd3092, %rd3072, %rd3091;
	xor.b64  	%rd3093, %rd3092, %rd3018;
	add.s64 	%rd3094, %rd2991, %rd4450;
	ld.const.u64 	%rd3095, [%rd3085];
	add.s64 	%rd3096, %rd3094, %rd3095;
	add.s64 	%rd3097, %rd3096, %rd3093;
	add.s64 	%rd3098, %rd3097, %rd3090;
	add.s64 	%rd3099, %rd3098, %rd3002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18370,%dummy}, %rd3083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18371}, %rd3083;
	}
	shf.r.wrap.b32 	%r18372, %r18371, %r18370, 28;
	shf.r.wrap.b32 	%r18373, %r18370, %r18371, 28;
	mov.b64 	%rd3100, {%r18373, %r18372};
	shf.l.wrap.b32 	%r18374, %r18370, %r18371, 30;
	shf.l.wrap.b32 	%r18375, %r18371, %r18370, 30;
	mov.b64 	%rd3101, {%r18375, %r18374};
	xor.b64  	%rd3102, %rd3101, %rd3100;
	shf.l.wrap.b32 	%r18376, %r18370, %r18371, 25;
	shf.l.wrap.b32 	%r18377, %r18371, %r18370, 25;
	mov.b64 	%rd3103, {%r18377, %r18376};
	xor.b64  	%rd3104, %rd3102, %rd3103;
	and.b64  	%rd3105, %rd3083, %rd3056;
	xor.b64  	%rd3106, %rd3083, %rd3056;
	and.b64  	%rd3107, %rd3106, %rd3029;
	or.b64  	%rd3108, %rd3107, %rd3105;
	add.s64 	%rd3109, %rd3098, %rd3108;
	add.s64 	%rd3110, %rd3109, %rd3104;
	add.s32 	%r18378, %r19458, 6;
	mul.wide.s32 	%rd3111, %r18378, 8;
	add.s64 	%rd3112, %rd2949, %rd3111;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18379,%dummy}, %rd3099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18380}, %rd3099;
	}
	shf.r.wrap.b32 	%r18381, %r18380, %r18379, 14;
	shf.r.wrap.b32 	%r18382, %r18379, %r18380, 14;
	mov.b64 	%rd3113, {%r18382, %r18381};
	shf.r.wrap.b32 	%r18383, %r18380, %r18379, 18;
	shf.r.wrap.b32 	%r18384, %r18379, %r18380, 18;
	mov.b64 	%rd3114, {%r18384, %r18383};
	xor.b64  	%rd3115, %rd3114, %rd3113;
	shf.l.wrap.b32 	%r18385, %r18379, %r18380, 23;
	shf.l.wrap.b32 	%r18386, %r18380, %r18379, 23;
	mov.b64 	%rd3116, {%r18386, %r18385};
	xor.b64  	%rd3117, %rd3115, %rd3116;
	xor.b64  	%rd3118, %rd3072, %rd3045;
	and.b64  	%rd3119, %rd3099, %rd3118;
	xor.b64  	%rd3120, %rd3119, %rd3045;
	add.s64 	%rd3121, %rd3018, %rd4451;
	ld.const.u64 	%rd3122, [%rd3112];
	add.s64 	%rd3123, %rd3121, %rd3122;
	add.s64 	%rd3124, %rd3123, %rd3120;
	add.s64 	%rd3125, %rd3124, %rd3117;
	add.s64 	%rd3126, %rd3125, %rd3029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18387,%dummy}, %rd3110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18388}, %rd3110;
	}
	shf.r.wrap.b32 	%r18389, %r18388, %r18387, 28;
	shf.r.wrap.b32 	%r18390, %r18387, %r18388, 28;
	mov.b64 	%rd3127, {%r18390, %r18389};
	shf.l.wrap.b32 	%r18391, %r18387, %r18388, 30;
	shf.l.wrap.b32 	%r18392, %r18388, %r18387, 30;
	mov.b64 	%rd3128, {%r18392, %r18391};
	xor.b64  	%rd3129, %rd3128, %rd3127;
	shf.l.wrap.b32 	%r18393, %r18387, %r18388, 25;
	shf.l.wrap.b32 	%r18394, %r18388, %r18387, 25;
	mov.b64 	%rd3130, {%r18394, %r18393};
	xor.b64  	%rd3131, %rd3129, %rd3130;
	and.b64  	%rd3132, %rd3110, %rd3083;
	xor.b64  	%rd3133, %rd3110, %rd3083;
	and.b64  	%rd3134, %rd3133, %rd3056;
	or.b64  	%rd3135, %rd3134, %rd3132;
	add.s64 	%rd3136, %rd3125, %rd3135;
	add.s64 	%rd3137, %rd3136, %rd3131;
	add.s32 	%r18395, %r19458, 7;
	mul.wide.s32 	%rd3138, %r18395, 8;
	add.s64 	%rd3139, %rd2949, %rd3138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18396,%dummy}, %rd3126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18397}, %rd3126;
	}
	shf.r.wrap.b32 	%r18398, %r18397, %r18396, 14;
	shf.r.wrap.b32 	%r18399, %r18396, %r18397, 14;
	mov.b64 	%rd3140, {%r18399, %r18398};
	shf.r.wrap.b32 	%r18400, %r18397, %r18396, 18;
	shf.r.wrap.b32 	%r18401, %r18396, %r18397, 18;
	mov.b64 	%rd3141, {%r18401, %r18400};
	xor.b64  	%rd3142, %rd3141, %rd3140;
	shf.l.wrap.b32 	%r18402, %r18396, %r18397, 23;
	shf.l.wrap.b32 	%r18403, %r18397, %r18396, 23;
	mov.b64 	%rd3143, {%r18403, %r18402};
	xor.b64  	%rd3144, %rd3142, %rd3143;
	xor.b64  	%rd3145, %rd3099, %rd3072;
	and.b64  	%rd3146, %rd3126, %rd3145;
	xor.b64  	%rd3147, %rd3146, %rd3072;
	add.s64 	%rd3148, %rd3045, %rd4452;
	ld.const.u64 	%rd3149, [%rd3139];
	add.s64 	%rd3150, %rd3148, %rd3149;
	add.s64 	%rd3151, %rd3150, %rd3147;
	add.s64 	%rd3152, %rd3151, %rd3144;
	add.s64 	%rd3153, %rd3152, %rd3056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18404,%dummy}, %rd3137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18405}, %rd3137;
	}
	shf.r.wrap.b32 	%r18406, %r18405, %r18404, 28;
	shf.r.wrap.b32 	%r18407, %r18404, %r18405, 28;
	mov.b64 	%rd3154, {%r18407, %r18406};
	shf.l.wrap.b32 	%r18408, %r18404, %r18405, 30;
	shf.l.wrap.b32 	%r18409, %r18405, %r18404, 30;
	mov.b64 	%rd3155, {%r18409, %r18408};
	xor.b64  	%rd3156, %rd3155, %rd3154;
	shf.l.wrap.b32 	%r18410, %r18404, %r18405, 25;
	shf.l.wrap.b32 	%r18411, %r18405, %r18404, 25;
	mov.b64 	%rd3157, {%r18411, %r18410};
	xor.b64  	%rd3158, %rd3156, %rd3157;
	and.b64  	%rd3159, %rd3137, %rd3110;
	xor.b64  	%rd3160, %rd3137, %rd3110;
	and.b64  	%rd3161, %rd3160, %rd3083;
	or.b64  	%rd3162, %rd3161, %rd3159;
	add.s64 	%rd3163, %rd3152, %rd3162;
	add.s64 	%rd3164, %rd3163, %rd3158;
	add.s32 	%r18412, %r19458, 8;
	mul.wide.s32 	%rd3165, %r18412, 8;
	add.s64 	%rd3166, %rd2949, %rd3165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18413,%dummy}, %rd3153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18414}, %rd3153;
	}
	shf.r.wrap.b32 	%r18415, %r18414, %r18413, 14;
	shf.r.wrap.b32 	%r18416, %r18413, %r18414, 14;
	mov.b64 	%rd3167, {%r18416, %r18415};
	shf.r.wrap.b32 	%r18417, %r18414, %r18413, 18;
	shf.r.wrap.b32 	%r18418, %r18413, %r18414, 18;
	mov.b64 	%rd3168, {%r18418, %r18417};
	xor.b64  	%rd3169, %rd3168, %rd3167;
	shf.l.wrap.b32 	%r18419, %r18413, %r18414, 23;
	shf.l.wrap.b32 	%r18420, %r18414, %r18413, 23;
	mov.b64 	%rd3170, {%r18420, %r18419};
	xor.b64  	%rd3171, %rd3169, %rd3170;
	xor.b64  	%rd3172, %rd3126, %rd3099;
	and.b64  	%rd3173, %rd3153, %rd3172;
	xor.b64  	%rd3174, %rd3173, %rd3099;
	add.s64 	%rd3175, %rd3072, %rd4436;
	ld.const.u64 	%rd3176, [%rd3166];
	add.s64 	%rd3177, %rd3175, %rd3176;
	add.s64 	%rd3178, %rd3177, %rd3174;
	add.s64 	%rd3179, %rd3178, %rd3171;
	add.s64 	%rd3180, %rd3179, %rd3083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18421,%dummy}, %rd3164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18422}, %rd3164;
	}
	shf.r.wrap.b32 	%r18423, %r18422, %r18421, 28;
	shf.r.wrap.b32 	%r18424, %r18421, %r18422, 28;
	mov.b64 	%rd3181, {%r18424, %r18423};
	shf.l.wrap.b32 	%r18425, %r18421, %r18422, 30;
	shf.l.wrap.b32 	%r18426, %r18422, %r18421, 30;
	mov.b64 	%rd3182, {%r18426, %r18425};
	xor.b64  	%rd3183, %rd3182, %rd3181;
	shf.l.wrap.b32 	%r18427, %r18421, %r18422, 25;
	shf.l.wrap.b32 	%r18428, %r18422, %r18421, 25;
	mov.b64 	%rd3184, {%r18428, %r18427};
	xor.b64  	%rd3185, %rd3183, %rd3184;
	and.b64  	%rd3186, %rd3164, %rd3137;
	xor.b64  	%rd3187, %rd3164, %rd3137;
	and.b64  	%rd3188, %rd3187, %rd3110;
	or.b64  	%rd3189, %rd3188, %rd3186;
	add.s64 	%rd3190, %rd3179, %rd3189;
	add.s64 	%rd3191, %rd3190, %rd3185;
	add.s32 	%r18429, %r19458, 9;
	mul.wide.s32 	%rd3192, %r18429, 8;
	add.s64 	%rd3193, %rd2949, %rd3192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18430,%dummy}, %rd3180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18431}, %rd3180;
	}
	shf.r.wrap.b32 	%r18432, %r18431, %r18430, 14;
	shf.r.wrap.b32 	%r18433, %r18430, %r18431, 14;
	mov.b64 	%rd3194, {%r18433, %r18432};
	shf.r.wrap.b32 	%r18434, %r18431, %r18430, 18;
	shf.r.wrap.b32 	%r18435, %r18430, %r18431, 18;
	mov.b64 	%rd3195, {%r18435, %r18434};
	xor.b64  	%rd3196, %rd3195, %rd3194;
	shf.l.wrap.b32 	%r18436, %r18430, %r18431, 23;
	shf.l.wrap.b32 	%r18437, %r18431, %r18430, 23;
	mov.b64 	%rd3197, {%r18437, %r18436};
	xor.b64  	%rd3198, %rd3196, %rd3197;
	xor.b64  	%rd3199, %rd3153, %rd3126;
	and.b64  	%rd3200, %rd3180, %rd3199;
	xor.b64  	%rd3201, %rd3200, %rd3126;
	add.s64 	%rd3202, %rd3099, %rd4435;
	ld.const.u64 	%rd3203, [%rd3193];
	add.s64 	%rd3204, %rd3202, %rd3203;
	add.s64 	%rd3205, %rd3204, %rd3201;
	add.s64 	%rd3206, %rd3205, %rd3198;
	add.s64 	%rd3207, %rd3206, %rd3110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18438,%dummy}, %rd3191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18439}, %rd3191;
	}
	shf.r.wrap.b32 	%r18440, %r18439, %r18438, 28;
	shf.r.wrap.b32 	%r18441, %r18438, %r18439, 28;
	mov.b64 	%rd3208, {%r18441, %r18440};
	shf.l.wrap.b32 	%r18442, %r18438, %r18439, 30;
	shf.l.wrap.b32 	%r18443, %r18439, %r18438, 30;
	mov.b64 	%rd3209, {%r18443, %r18442};
	xor.b64  	%rd3210, %rd3209, %rd3208;
	shf.l.wrap.b32 	%r18444, %r18438, %r18439, 25;
	shf.l.wrap.b32 	%r18445, %r18439, %r18438, 25;
	mov.b64 	%rd3211, {%r18445, %r18444};
	xor.b64  	%rd3212, %rd3210, %rd3211;
	and.b64  	%rd3213, %rd3191, %rd3164;
	xor.b64  	%rd3214, %rd3191, %rd3164;
	and.b64  	%rd3215, %rd3214, %rd3137;
	or.b64  	%rd3216, %rd3215, %rd3213;
	add.s64 	%rd3217, %rd3206, %rd3216;
	add.s64 	%rd3218, %rd3217, %rd3212;
	add.s32 	%r18446, %r19458, 10;
	mul.wide.s32 	%rd3219, %r18446, 8;
	add.s64 	%rd3220, %rd2949, %rd3219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18447,%dummy}, %rd3207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18448}, %rd3207;
	}
	shf.r.wrap.b32 	%r18449, %r18448, %r18447, 14;
	shf.r.wrap.b32 	%r18450, %r18447, %r18448, 14;
	mov.b64 	%rd3221, {%r18450, %r18449};
	shf.r.wrap.b32 	%r18451, %r18448, %r18447, 18;
	shf.r.wrap.b32 	%r18452, %r18447, %r18448, 18;
	mov.b64 	%rd3222, {%r18452, %r18451};
	xor.b64  	%rd3223, %rd3222, %rd3221;
	shf.l.wrap.b32 	%r18453, %r18447, %r18448, 23;
	shf.l.wrap.b32 	%r18454, %r18448, %r18447, 23;
	mov.b64 	%rd3224, {%r18454, %r18453};
	xor.b64  	%rd3225, %rd3223, %rd3224;
	xor.b64  	%rd3226, %rd3180, %rd3153;
	and.b64  	%rd3227, %rd3207, %rd3226;
	xor.b64  	%rd3228, %rd3227, %rd3153;
	add.s64 	%rd3229, %rd3126, %rd4434;
	ld.const.u64 	%rd3230, [%rd3220];
	add.s64 	%rd3231, %rd3229, %rd3230;
	add.s64 	%rd3232, %rd3231, %rd3228;
	add.s64 	%rd3233, %rd3232, %rd3225;
	add.s64 	%rd3234, %rd3233, %rd3137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18455,%dummy}, %rd3218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18456}, %rd3218;
	}
	shf.r.wrap.b32 	%r18457, %r18456, %r18455, 28;
	shf.r.wrap.b32 	%r18458, %r18455, %r18456, 28;
	mov.b64 	%rd3235, {%r18458, %r18457};
	shf.l.wrap.b32 	%r18459, %r18455, %r18456, 30;
	shf.l.wrap.b32 	%r18460, %r18456, %r18455, 30;
	mov.b64 	%rd3236, {%r18460, %r18459};
	xor.b64  	%rd3237, %rd3236, %rd3235;
	shf.l.wrap.b32 	%r18461, %r18455, %r18456, 25;
	shf.l.wrap.b32 	%r18462, %r18456, %r18455, 25;
	mov.b64 	%rd3238, {%r18462, %r18461};
	xor.b64  	%rd3239, %rd3237, %rd3238;
	and.b64  	%rd3240, %rd3218, %rd3191;
	xor.b64  	%rd3241, %rd3218, %rd3191;
	and.b64  	%rd3242, %rd3241, %rd3164;
	or.b64  	%rd3243, %rd3242, %rd3240;
	add.s64 	%rd3244, %rd3233, %rd3243;
	add.s64 	%rd3245, %rd3244, %rd3239;
	add.s32 	%r18463, %r19458, 11;
	mul.wide.s32 	%rd3246, %r18463, 8;
	add.s64 	%rd3247, %rd2949, %rd3246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18464,%dummy}, %rd3234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18465}, %rd3234;
	}
	shf.r.wrap.b32 	%r18466, %r18465, %r18464, 14;
	shf.r.wrap.b32 	%r18467, %r18464, %r18465, 14;
	mov.b64 	%rd3248, {%r18467, %r18466};
	shf.r.wrap.b32 	%r18468, %r18465, %r18464, 18;
	shf.r.wrap.b32 	%r18469, %r18464, %r18465, 18;
	mov.b64 	%rd3249, {%r18469, %r18468};
	xor.b64  	%rd3250, %rd3249, %rd3248;
	shf.l.wrap.b32 	%r18470, %r18464, %r18465, 23;
	shf.l.wrap.b32 	%r18471, %r18465, %r18464, 23;
	mov.b64 	%rd3251, {%r18471, %r18470};
	xor.b64  	%rd3252, %rd3250, %rd3251;
	xor.b64  	%rd3253, %rd3207, %rd3180;
	and.b64  	%rd3254, %rd3234, %rd3253;
	xor.b64  	%rd3255, %rd3254, %rd3180;
	add.s64 	%rd3256, %rd3153, %rd4433;
	ld.const.u64 	%rd3257, [%rd3247];
	add.s64 	%rd3258, %rd3256, %rd3257;
	add.s64 	%rd3259, %rd3258, %rd3255;
	add.s64 	%rd3260, %rd3259, %rd3252;
	add.s64 	%rd3261, %rd3260, %rd3164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18472,%dummy}, %rd3245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18473}, %rd3245;
	}
	shf.r.wrap.b32 	%r18474, %r18473, %r18472, 28;
	shf.r.wrap.b32 	%r18475, %r18472, %r18473, 28;
	mov.b64 	%rd3262, {%r18475, %r18474};
	shf.l.wrap.b32 	%r18476, %r18472, %r18473, 30;
	shf.l.wrap.b32 	%r18477, %r18473, %r18472, 30;
	mov.b64 	%rd3263, {%r18477, %r18476};
	xor.b64  	%rd3264, %rd3263, %rd3262;
	shf.l.wrap.b32 	%r18478, %r18472, %r18473, 25;
	shf.l.wrap.b32 	%r18479, %r18473, %r18472, 25;
	mov.b64 	%rd3265, {%r18479, %r18478};
	xor.b64  	%rd3266, %rd3264, %rd3265;
	and.b64  	%rd3267, %rd3245, %rd3218;
	xor.b64  	%rd3268, %rd3245, %rd3218;
	and.b64  	%rd3269, %rd3268, %rd3191;
	or.b64  	%rd3270, %rd3269, %rd3267;
	add.s64 	%rd3271, %rd3260, %rd3270;
	add.s64 	%rd3272, %rd3271, %rd3266;
	add.s32 	%r18480, %r19458, 12;
	mul.wide.s32 	%rd3273, %r18480, 8;
	add.s64 	%rd3274, %rd2949, %rd3273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18481,%dummy}, %rd3261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18482}, %rd3261;
	}
	shf.r.wrap.b32 	%r18483, %r18482, %r18481, 14;
	shf.r.wrap.b32 	%r18484, %r18481, %r18482, 14;
	mov.b64 	%rd3275, {%r18484, %r18483};
	shf.r.wrap.b32 	%r18485, %r18482, %r18481, 18;
	shf.r.wrap.b32 	%r18486, %r18481, %r18482, 18;
	mov.b64 	%rd3276, {%r18486, %r18485};
	xor.b64  	%rd3277, %rd3276, %rd3275;
	shf.l.wrap.b32 	%r18487, %r18481, %r18482, 23;
	shf.l.wrap.b32 	%r18488, %r18482, %r18481, 23;
	mov.b64 	%rd3278, {%r18488, %r18487};
	xor.b64  	%rd3279, %rd3277, %rd3278;
	xor.b64  	%rd3280, %rd3234, %rd3207;
	and.b64  	%rd3281, %rd3261, %rd3280;
	xor.b64  	%rd3282, %rd3281, %rd3207;
	add.s64 	%rd3283, %rd3180, %rd4432;
	ld.const.u64 	%rd3284, [%rd3274];
	add.s64 	%rd3285, %rd3283, %rd3284;
	add.s64 	%rd3286, %rd3285, %rd3282;
	add.s64 	%rd3287, %rd3286, %rd3279;
	add.s64 	%rd4444, %rd3287, %rd3191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18489,%dummy}, %rd3272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18490}, %rd3272;
	}
	shf.r.wrap.b32 	%r18491, %r18490, %r18489, 28;
	shf.r.wrap.b32 	%r18492, %r18489, %r18490, 28;
	mov.b64 	%rd3288, {%r18492, %r18491};
	shf.l.wrap.b32 	%r18493, %r18489, %r18490, 30;
	shf.l.wrap.b32 	%r18494, %r18490, %r18489, 30;
	mov.b64 	%rd3289, {%r18494, %r18493};
	xor.b64  	%rd3290, %rd3289, %rd3288;
	shf.l.wrap.b32 	%r18495, %r18489, %r18490, 25;
	shf.l.wrap.b32 	%r18496, %r18490, %r18489, 25;
	mov.b64 	%rd3291, {%r18496, %r18495};
	xor.b64  	%rd3292, %rd3290, %rd3291;
	and.b64  	%rd3293, %rd3272, %rd3245;
	xor.b64  	%rd3294, %rd3272, %rd3245;
	and.b64  	%rd3295, %rd3294, %rd3218;
	or.b64  	%rd3296, %rd3295, %rd3293;
	add.s64 	%rd3297, %rd3287, %rd3296;
	add.s64 	%rd4440, %rd3297, %rd3292;
	add.s32 	%r18497, %r19458, 13;
	mul.wide.s32 	%rd3298, %r18497, 8;
	add.s64 	%rd3299, %rd2949, %rd3298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18498,%dummy}, %rd4444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18499}, %rd4444;
	}
	shf.r.wrap.b32 	%r18500, %r18499, %r18498, 14;
	shf.r.wrap.b32 	%r18501, %r18498, %r18499, 14;
	mov.b64 	%rd3300, {%r18501, %r18500};
	shf.r.wrap.b32 	%r18502, %r18499, %r18498, 18;
	shf.r.wrap.b32 	%r18503, %r18498, %r18499, 18;
	mov.b64 	%rd3301, {%r18503, %r18502};
	xor.b64  	%rd3302, %rd3301, %rd3300;
	shf.l.wrap.b32 	%r18504, %r18498, %r18499, 23;
	shf.l.wrap.b32 	%r18505, %r18499, %r18498, 23;
	mov.b64 	%rd3303, {%r18505, %r18504};
	xor.b64  	%rd3304, %rd3302, %rd3303;
	xor.b64  	%rd3305, %rd3261, %rd3234;
	and.b64  	%rd3306, %rd4444, %rd3305;
	xor.b64  	%rd3307, %rd3306, %rd3234;
	add.s64 	%rd3308, %rd3207, %rd4431;
	ld.const.u64 	%rd3309, [%rd3299];
	add.s64 	%rd3310, %rd3308, %rd3309;
	add.s64 	%rd3311, %rd3310, %rd3307;
	add.s64 	%rd3312, %rd3311, %rd3304;
	add.s64 	%rd4443, %rd3312, %rd3218;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18506,%dummy}, %rd4440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18507}, %rd4440;
	}
	shf.r.wrap.b32 	%r18508, %r18507, %r18506, 28;
	shf.r.wrap.b32 	%r18509, %r18506, %r18507, 28;
	mov.b64 	%rd3313, {%r18509, %r18508};
	shf.l.wrap.b32 	%r18510, %r18506, %r18507, 30;
	shf.l.wrap.b32 	%r18511, %r18507, %r18506, 30;
	mov.b64 	%rd3314, {%r18511, %r18510};
	xor.b64  	%rd3315, %rd3314, %rd3313;
	shf.l.wrap.b32 	%r18512, %r18506, %r18507, 25;
	shf.l.wrap.b32 	%r18513, %r18507, %r18506, 25;
	mov.b64 	%rd3316, {%r18513, %r18512};
	xor.b64  	%rd3317, %rd3315, %rd3316;
	and.b64  	%rd3318, %rd4440, %rd3272;
	xor.b64  	%rd3319, %rd4440, %rd3272;
	and.b64  	%rd3320, %rd3319, %rd3245;
	or.b64  	%rd3321, %rd3320, %rd3318;
	add.s64 	%rd3322, %rd3312, %rd3321;
	add.s64 	%rd4439, %rd3322, %rd3317;
	add.s32 	%r18514, %r19458, 14;
	mul.wide.s32 	%rd3323, %r18514, 8;
	add.s64 	%rd3324, %rd2949, %rd3323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18515,%dummy}, %rd4443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18516}, %rd4443;
	}
	shf.r.wrap.b32 	%r18517, %r18516, %r18515, 14;
	shf.r.wrap.b32 	%r18518, %r18515, %r18516, 14;
	mov.b64 	%rd3325, {%r18518, %r18517};
	shf.r.wrap.b32 	%r18519, %r18516, %r18515, 18;
	shf.r.wrap.b32 	%r18520, %r18515, %r18516, 18;
	mov.b64 	%rd3326, {%r18520, %r18519};
	xor.b64  	%rd3327, %rd3326, %rd3325;
	shf.l.wrap.b32 	%r18521, %r18515, %r18516, 23;
	shf.l.wrap.b32 	%r18522, %r18516, %r18515, 23;
	mov.b64 	%rd3328, {%r18522, %r18521};
	xor.b64  	%rd3329, %rd3327, %rd3328;
	xor.b64  	%rd3330, %rd4444, %rd3261;
	and.b64  	%rd3331, %rd4443, %rd3330;
	xor.b64  	%rd3332, %rd3331, %rd3261;
	add.s64 	%rd3333, %rd3234, %rd4430;
	ld.const.u64 	%rd3334, [%rd3324];
	add.s64 	%rd3335, %rd3333, %rd3334;
	add.s64 	%rd3336, %rd3335, %rd3332;
	add.s64 	%rd3337, %rd3336, %rd3329;
	add.s64 	%rd4442, %rd3337, %rd3245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18523,%dummy}, %rd4439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18524}, %rd4439;
	}
	shf.r.wrap.b32 	%r18525, %r18524, %r18523, 28;
	shf.r.wrap.b32 	%r18526, %r18523, %r18524, 28;
	mov.b64 	%rd3338, {%r18526, %r18525};
	shf.l.wrap.b32 	%r18527, %r18523, %r18524, 30;
	shf.l.wrap.b32 	%r18528, %r18524, %r18523, 30;
	mov.b64 	%rd3339, {%r18528, %r18527};
	xor.b64  	%rd3340, %rd3339, %rd3338;
	shf.l.wrap.b32 	%r18529, %r18523, %r18524, 25;
	shf.l.wrap.b32 	%r18530, %r18524, %r18523, 25;
	mov.b64 	%rd3341, {%r18530, %r18529};
	xor.b64  	%rd3342, %rd3340, %rd3341;
	and.b64  	%rd3343, %rd4439, %rd4440;
	xor.b64  	%rd3344, %rd4439, %rd4440;
	and.b64  	%rd3345, %rd3344, %rd3272;
	or.b64  	%rd3346, %rd3345, %rd3343;
	add.s64 	%rd3347, %rd3337, %rd3346;
	add.s64 	%rd4438, %rd3347, %rd3342;
	add.s32 	%r18531, %r19458, 15;
	mul.wide.s32 	%rd3348, %r18531, 8;
	add.s64 	%rd3349, %rd2949, %rd3348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18532,%dummy}, %rd4442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18533}, %rd4442;
	}
	shf.r.wrap.b32 	%r18534, %r18533, %r18532, 14;
	shf.r.wrap.b32 	%r18535, %r18532, %r18533, 14;
	mov.b64 	%rd3350, {%r18535, %r18534};
	shf.r.wrap.b32 	%r18536, %r18533, %r18532, 18;
	shf.r.wrap.b32 	%r18537, %r18532, %r18533, 18;
	mov.b64 	%rd3351, {%r18537, %r18536};
	xor.b64  	%rd3352, %rd3351, %rd3350;
	shf.l.wrap.b32 	%r18538, %r18532, %r18533, 23;
	shf.l.wrap.b32 	%r18539, %r18533, %r18532, 23;
	mov.b64 	%rd3353, {%r18539, %r18538};
	xor.b64  	%rd3354, %rd3352, %rd3353;
	xor.b64  	%rd3355, %rd4443, %rd4444;
	and.b64  	%rd3356, %rd4442, %rd3355;
	xor.b64  	%rd3357, %rd3356, %rd4444;
	add.s64 	%rd3358, %rd3261, %rd4429;
	ld.const.u64 	%rd3359, [%rd3349];
	add.s64 	%rd3360, %rd3358, %rd3359;
	add.s64 	%rd3361, %rd3360, %rd3357;
	add.s64 	%rd3362, %rd3361, %rd3354;
	add.s64 	%rd4441, %rd3362, %rd3272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r18540,%dummy}, %rd4438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18541}, %rd4438;
	}
	shf.r.wrap.b32 	%r18542, %r18541, %r18540, 28;
	shf.r.wrap.b32 	%r18543, %r18540, %r18541, 28;
	mov.b64 	%rd3363, {%r18543, %r18542};
	shf.l.wrap.b32 	%r18544, %r18540, %r18541, 30;
	shf.l.wrap.b32 	%r18545, %r18541, %r18540, 30;
	mov.b64 	%rd3364, {%r18545, %r18544};
	xor.b64  	%rd3365, %rd3364, %rd3363;
	shf.l.wrap.b32 	%r18546, %r18540, %r18541, 25;
	shf.l.wrap.b32 	%r18547, %r18541, %r18540, 25;
	mov.b64 	%rd3366, {%r18547, %r18546};
	xor.b64  	%rd3367, %rd3365, %rd3366;
	and.b64  	%rd3368, %rd4438, %rd4439;
	xor.b64  	%rd3369, %rd4438, %rd4439;
	and.b64  	%rd3370, %rd3369, %rd4440;
	or.b64  	%rd3371, %rd3370, %rd3368;
	add.s64 	%rd3372, %rd3362, %rd3371;
	add.s64 	%rd4437, %rd3372, %rd3367;
	add.s32 	%r19458, %r19458, 16;
	setp.lt.s32	%p149, %r19458, 80;
	@%p149 bra 	BB2_304;

	add.s64 	%rd3373, %rd201, %rd4437;
	st.local.u64 	[%rd1], %rd3373;
	add.s64 	%rd3374, %rd202, %rd4438;
	st.local.u64 	[%rd1+8], %rd3374;
	add.s64 	%rd3375, %rd203, %rd4439;
	st.local.u64 	[%rd1+16], %rd3375;
	add.s64 	%rd3376, %rd200, %rd4440;
	st.local.u64 	[%rd1+24], %rd3376;
	add.s64 	%rd3377, %rd196, %rd4441;
	st.local.u64 	[%rd1+32], %rd3377;
	add.s64 	%rd3378, %rd198, %rd4442;
	st.local.u64 	[%rd1+40], %rd3378;
	add.s64 	%rd3379, %rd197, %rd4443;
	st.local.u64 	[%rd1+48], %rd3379;
	add.s64 	%rd4477, %rd199, %rd4444;
	bra.uni 	BB2_309;

BB2_2:
	// inline asm
	prmt.b32 %r2984, %r3, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2986, %r4, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2988, %r5, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2990, %r6, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2992, %r7, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2994, %r8, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2996, %r9, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r2998, %r10, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3000, %r11, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3002, %r12, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3004, %r13, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3006, %r14, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3008, %r15, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3010, %r16, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3012, %r17, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r18, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r19, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r20, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r21, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r22, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r23, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r24, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r25, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r26, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r27, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r28, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r29, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r30, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r31, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r32, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r33, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r34, 0, 0x0123;
	// inline asm
	ld.local.u32 	%r67, [%rd1+192];
	and.b32  	%r68, %r67, 127;
	sub.s32 	%r69, %r2949, %r19294;
	add.s32 	%r3048, %r67, %r69;
	st.local.u32 	[%rd1+192], %r3048;
	setp.eq.s32	%p2, %r68, 0;
	@%p2 bra 	BB2_210;

	add.s32 	%r3049, %r68, %r69;
	setp.lt.s32	%p3, %r3049, 128;
	shr.u32 	%r70, %r68, 2;
	and.b32  	%r3050, %r67, 3;
	shl.b32 	%r3051, %r3050, 2;
	mov.u32 	%r3052, 1985229328;
	shr.u32 	%r3053, %r3052, %r3051;
	and.b32  	%r71, %r3053, 65535;
	@%p3 bra 	BB2_94;
	bra.uni 	BB2_4;

BB2_94:
	setp.gt.s32	%p52, %r70, 15;
	@%p52 bra 	BB2_126;

	setp.gt.s32	%p76, %r70, 7;
	@%p76 bra 	BB2_111;

	setp.gt.s32	%p88, %r70, 3;
	@%p88 bra 	BB2_104;

	setp.gt.s32	%p94, %r70, 1;
	@%p94 bra 	BB2_101;

	setp.eq.s32	%p97, %r70, 0;
	@%p97 bra 	BB2_208;
	bra.uni 	BB2_99;

BB2_208:
	// inline asm
	prmt.b32 %r3046, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3012, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3010, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3008, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3006, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3004, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3002, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3000, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2998, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2996, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2994, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2992, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2990, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2988, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2986, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r11686, 0;
	// inline asm
	prmt.b32 %r19392, %r2984, %r11686, %r71;
	// inline asm
	bra.uni 	BB2_209;

BB2_210:
	st.local.u32 	[%rd1+64], %r2984;
	st.local.u32 	[%rd1+68], %r2986;
	st.local.u32 	[%rd1+72], %r2988;
	st.local.u32 	[%rd1+76], %r2990;
	st.local.u32 	[%rd1+80], %r2992;
	st.local.u32 	[%rd1+84], %r2994;
	st.local.u32 	[%rd1+88], %r2996;
	st.local.u32 	[%rd1+92], %r2998;
	st.local.u32 	[%rd1+96], %r3000;
	st.local.u32 	[%rd1+100], %r3002;
	st.local.u32 	[%rd1+104], %r3004;
	st.local.u32 	[%rd1+108], %r3006;
	st.local.u32 	[%rd1+112], %r3008;
	st.local.u32 	[%rd1+116], %r3010;
	st.local.u32 	[%rd1+120], %r3012;
	st.local.u32 	[%rd1+124], %r3014;
	st.local.u32 	[%rd1+128], %r3016;
	st.local.u32 	[%rd1+132], %r3018;
	st.local.u32 	[%rd1+136], %r3020;
	st.local.u32 	[%rd1+140], %r3022;
	st.local.u32 	[%rd1+144], %r3024;
	st.local.u32 	[%rd1+148], %r3026;
	st.local.u32 	[%rd1+152], %r3028;
	st.local.u32 	[%rd1+156], %r3030;
	st.local.u32 	[%rd1+160], %r3032;
	st.local.u32 	[%rd1+164], %r3034;
	st.local.u32 	[%rd1+168], %r3036;
	st.local.u32 	[%rd1+172], %r3038;
	st.local.u32 	[%rd1+176], %r3040;
	st.local.u32 	[%rd1+180], %r3042;
	st.local.u32 	[%rd1+184], %r3044;
	st.local.u32 	[%rd1+188], %r3046;
	setp.ne.s32	%p99, %r69, 128;
	@%p99 bra 	BB2_214;

	mov.b64	%rd4421, {%r2986, %r2984};
	mov.b64	%rd4422, {%r2990, %r2988};
	mov.b64	%rd4423, {%r2994, %r2992};
	mov.b64	%rd4424, {%r2998, %r2996};
	mov.b64	%rd4425, {%r3002, %r3000};
	mov.b64	%rd4426, {%r3006, %r3004};
	mov.b64	%rd4427, {%r3010, %r3008};
	mov.b64	%rd4428, {%r3014, %r3012};
	mov.b64	%rd4412, {%r3018, %r3016};
	mov.b64	%rd4411, {%r3022, %r3020};
	mov.b64	%rd4410, {%r3026, %r3024};
	mov.b64	%rd4409, {%r3030, %r3028};
	mov.b64	%rd4408, {%r3034, %r3032};
	mov.b64	%rd4407, {%r3038, %r3036};
	mov.b64	%rd4406, {%r3042, %r3040};
	mov.b64	%rd4405, {%r3046, %r3044};
	ld.local.u64 	%rd114, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11753,%dummy}, %rd114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11754}, %rd114;
	}
	shf.r.wrap.b32 	%r11755, %r11754, %r11753, 14;
	shf.r.wrap.b32 	%r11756, %r11753, %r11754, 14;
	mov.b64 	%rd1411, {%r11756, %r11755};
	shf.r.wrap.b32 	%r11757, %r11754, %r11753, 18;
	shf.r.wrap.b32 	%r11758, %r11753, %r11754, 18;
	mov.b64 	%rd1412, {%r11758, %r11757};
	xor.b64  	%rd1413, %rd1412, %rd1411;
	shf.l.wrap.b32 	%r11759, %r11753, %r11754, 23;
	shf.l.wrap.b32 	%r11760, %r11754, %r11753, 23;
	mov.b64 	%rd1414, {%r11760, %r11759};
	xor.b64  	%rd1415, %rd1413, %rd1414;
	ld.local.u64 	%rd115, [%rd1+48];
	ld.local.u64 	%rd116, [%rd1+40];
	xor.b64  	%rd1416, %rd115, %rd116;
	and.b64  	%rd1417, %rd1416, %rd114;
	xor.b64  	%rd1418, %rd1417, %rd115;
	ld.local.u64 	%rd117, [%rd1+56];
	add.s64 	%rd1419, %rd117, %rd4421;
	add.s64 	%rd1420, %rd1419, %rd2;
	add.s64 	%rd1421, %rd1420, %rd1418;
	add.s64 	%rd1422, %rd1421, %rd1415;
	ld.local.u64 	%rd118, [%rd1+24];
	add.s64 	%rd1423, %rd1422, %rd118;
	ld.local.u64 	%rd119, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11761,%dummy}, %rd119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11762}, %rd119;
	}
	shf.r.wrap.b32 	%r11763, %r11762, %r11761, 28;
	shf.r.wrap.b32 	%r11764, %r11761, %r11762, 28;
	mov.b64 	%rd1424, {%r11764, %r11763};
	shf.l.wrap.b32 	%r11765, %r11761, %r11762, 30;
	shf.l.wrap.b32 	%r11766, %r11762, %r11761, 30;
	mov.b64 	%rd1425, {%r11766, %r11765};
	xor.b64  	%rd1426, %rd1425, %rd1424;
	shf.l.wrap.b32 	%r11767, %r11761, %r11762, 25;
	shf.l.wrap.b32 	%r11768, %r11762, %r11761, 25;
	mov.b64 	%rd1427, {%r11768, %r11767};
	xor.b64  	%rd1428, %rd1426, %rd1427;
	ld.local.u64 	%rd120, [%rd1+8];
	and.b64  	%rd1429, %rd120, %rd119;
	xor.b64  	%rd1430, %rd120, %rd119;
	ld.local.u64 	%rd121, [%rd1+16];
	and.b64  	%rd1431, %rd121, %rd1430;
	or.b64  	%rd1432, %rd1431, %rd1429;
	add.s64 	%rd1433, %rd1422, %rd1432;
	add.s64 	%rd1434, %rd1433, %rd1428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11769,%dummy}, %rd1423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11770}, %rd1423;
	}
	shf.r.wrap.b32 	%r11771, %r11770, %r11769, 14;
	shf.r.wrap.b32 	%r11772, %r11769, %r11770, 14;
	mov.b64 	%rd1435, {%r11772, %r11771};
	shf.r.wrap.b32 	%r11773, %r11770, %r11769, 18;
	shf.r.wrap.b32 	%r11774, %r11769, %r11770, 18;
	mov.b64 	%rd1436, {%r11774, %r11773};
	xor.b64  	%rd1437, %rd1436, %rd1435;
	shf.l.wrap.b32 	%r11775, %r11769, %r11770, 23;
	shf.l.wrap.b32 	%r11776, %r11770, %r11769, 23;
	mov.b64 	%rd1438, {%r11776, %r11775};
	xor.b64  	%rd1439, %rd1437, %rd1438;
	xor.b64  	%rd1440, %rd116, %rd114;
	and.b64  	%rd1441, %rd1423, %rd1440;
	xor.b64  	%rd1442, %rd1441, %rd116;
	add.s64 	%rd1443, %rd115, %rd4422;
	add.s64 	%rd1444, %rd1443, %rd3;
	add.s64 	%rd1445, %rd1444, %rd1442;
	add.s64 	%rd1446, %rd1445, %rd1439;
	add.s64 	%rd1447, %rd1446, %rd121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11777,%dummy}, %rd1434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11778}, %rd1434;
	}
	shf.r.wrap.b32 	%r11779, %r11778, %r11777, 28;
	shf.r.wrap.b32 	%r11780, %r11777, %r11778, 28;
	mov.b64 	%rd1448, {%r11780, %r11779};
	shf.l.wrap.b32 	%r11781, %r11777, %r11778, 30;
	shf.l.wrap.b32 	%r11782, %r11778, %r11777, 30;
	mov.b64 	%rd1449, {%r11782, %r11781};
	xor.b64  	%rd1450, %rd1449, %rd1448;
	shf.l.wrap.b32 	%r11783, %r11777, %r11778, 25;
	shf.l.wrap.b32 	%r11784, %r11778, %r11777, 25;
	mov.b64 	%rd1451, {%r11784, %r11783};
	xor.b64  	%rd1452, %rd1450, %rd1451;
	and.b64  	%rd1453, %rd1434, %rd119;
	xor.b64  	%rd1454, %rd1434, %rd119;
	and.b64  	%rd1455, %rd1454, %rd120;
	or.b64  	%rd1456, %rd1455, %rd1453;
	add.s64 	%rd1457, %rd1446, %rd1456;
	add.s64 	%rd1458, %rd1457, %rd1452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11785,%dummy}, %rd1447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11786}, %rd1447;
	}
	shf.r.wrap.b32 	%r11787, %r11786, %r11785, 14;
	shf.r.wrap.b32 	%r11788, %r11785, %r11786, 14;
	mov.b64 	%rd1459, {%r11788, %r11787};
	shf.r.wrap.b32 	%r11789, %r11786, %r11785, 18;
	shf.r.wrap.b32 	%r11790, %r11785, %r11786, 18;
	mov.b64 	%rd1460, {%r11790, %r11789};
	xor.b64  	%rd1461, %rd1460, %rd1459;
	shf.l.wrap.b32 	%r11791, %r11785, %r11786, 23;
	shf.l.wrap.b32 	%r11792, %r11786, %r11785, 23;
	mov.b64 	%rd1462, {%r11792, %r11791};
	xor.b64  	%rd1463, %rd1461, %rd1462;
	xor.b64  	%rd1464, %rd1423, %rd114;
	and.b64  	%rd1465, %rd1447, %rd1464;
	xor.b64  	%rd1466, %rd1465, %rd114;
	add.s64 	%rd1467, %rd116, %rd4423;
	add.s64 	%rd1468, %rd1467, %rd4;
	add.s64 	%rd1469, %rd1468, %rd1466;
	add.s64 	%rd1470, %rd1469, %rd1463;
	add.s64 	%rd1471, %rd1470, %rd120;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11793,%dummy}, %rd1458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11794}, %rd1458;
	}
	shf.r.wrap.b32 	%r11795, %r11794, %r11793, 28;
	shf.r.wrap.b32 	%r11796, %r11793, %r11794, 28;
	mov.b64 	%rd1472, {%r11796, %r11795};
	shf.l.wrap.b32 	%r11797, %r11793, %r11794, 30;
	shf.l.wrap.b32 	%r11798, %r11794, %r11793, 30;
	mov.b64 	%rd1473, {%r11798, %r11797};
	xor.b64  	%rd1474, %rd1473, %rd1472;
	shf.l.wrap.b32 	%r11799, %r11793, %r11794, 25;
	shf.l.wrap.b32 	%r11800, %r11794, %r11793, 25;
	mov.b64 	%rd1475, {%r11800, %r11799};
	xor.b64  	%rd1476, %rd1474, %rd1475;
	and.b64  	%rd1477, %rd1458, %rd1434;
	xor.b64  	%rd1478, %rd1458, %rd1434;
	and.b64  	%rd1479, %rd1478, %rd119;
	or.b64  	%rd1480, %rd1479, %rd1477;
	add.s64 	%rd1481, %rd1470, %rd1480;
	add.s64 	%rd1482, %rd1481, %rd1476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11801,%dummy}, %rd1471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11802}, %rd1471;
	}
	shf.r.wrap.b32 	%r11803, %r11802, %r11801, 14;
	shf.r.wrap.b32 	%r11804, %r11801, %r11802, 14;
	mov.b64 	%rd1483, {%r11804, %r11803};
	shf.r.wrap.b32 	%r11805, %r11802, %r11801, 18;
	shf.r.wrap.b32 	%r11806, %r11801, %r11802, 18;
	mov.b64 	%rd1484, {%r11806, %r11805};
	xor.b64  	%rd1485, %rd1484, %rd1483;
	shf.l.wrap.b32 	%r11807, %r11801, %r11802, 23;
	shf.l.wrap.b32 	%r11808, %r11802, %r11801, 23;
	mov.b64 	%rd1486, {%r11808, %r11807};
	xor.b64  	%rd1487, %rd1485, %rd1486;
	xor.b64  	%rd1488, %rd1447, %rd1423;
	and.b64  	%rd1489, %rd1471, %rd1488;
	xor.b64  	%rd1490, %rd1489, %rd1423;
	add.s64 	%rd1491, %rd114, %rd4424;
	add.s64 	%rd1492, %rd1491, %rd5;
	add.s64 	%rd1493, %rd1492, %rd1490;
	add.s64 	%rd1494, %rd1493, %rd1487;
	add.s64 	%rd1495, %rd1494, %rd119;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11809,%dummy}, %rd1482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11810}, %rd1482;
	}
	shf.r.wrap.b32 	%r11811, %r11810, %r11809, 28;
	shf.r.wrap.b32 	%r11812, %r11809, %r11810, 28;
	mov.b64 	%rd1496, {%r11812, %r11811};
	shf.l.wrap.b32 	%r11813, %r11809, %r11810, 30;
	shf.l.wrap.b32 	%r11814, %r11810, %r11809, 30;
	mov.b64 	%rd1497, {%r11814, %r11813};
	xor.b64  	%rd1498, %rd1497, %rd1496;
	shf.l.wrap.b32 	%r11815, %r11809, %r11810, 25;
	shf.l.wrap.b32 	%r11816, %r11810, %r11809, 25;
	mov.b64 	%rd1499, {%r11816, %r11815};
	xor.b64  	%rd1500, %rd1498, %rd1499;
	and.b64  	%rd1501, %rd1482, %rd1458;
	xor.b64  	%rd1502, %rd1482, %rd1458;
	and.b64  	%rd1503, %rd1502, %rd1434;
	or.b64  	%rd1504, %rd1503, %rd1501;
	add.s64 	%rd1505, %rd1494, %rd1504;
	add.s64 	%rd1506, %rd1505, %rd1500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11817,%dummy}, %rd1495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11818}, %rd1495;
	}
	shf.r.wrap.b32 	%r11819, %r11818, %r11817, 14;
	shf.r.wrap.b32 	%r11820, %r11817, %r11818, 14;
	mov.b64 	%rd1507, {%r11820, %r11819};
	shf.r.wrap.b32 	%r11821, %r11818, %r11817, 18;
	shf.r.wrap.b32 	%r11822, %r11817, %r11818, 18;
	mov.b64 	%rd1508, {%r11822, %r11821};
	xor.b64  	%rd1509, %rd1508, %rd1507;
	shf.l.wrap.b32 	%r11823, %r11817, %r11818, 23;
	shf.l.wrap.b32 	%r11824, %r11818, %r11817, 23;
	mov.b64 	%rd1510, {%r11824, %r11823};
	xor.b64  	%rd1511, %rd1509, %rd1510;
	xor.b64  	%rd1512, %rd1471, %rd1447;
	and.b64  	%rd1513, %rd1495, %rd1512;
	xor.b64  	%rd1514, %rd1513, %rd1447;
	add.s64 	%rd1515, %rd1423, %rd4425;
	add.s64 	%rd1516, %rd1515, %rd6;
	add.s64 	%rd1517, %rd1516, %rd1514;
	add.s64 	%rd1518, %rd1517, %rd1511;
	add.s64 	%rd1519, %rd1518, %rd1434;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11825,%dummy}, %rd1506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11826}, %rd1506;
	}
	shf.r.wrap.b32 	%r11827, %r11826, %r11825, 28;
	shf.r.wrap.b32 	%r11828, %r11825, %r11826, 28;
	mov.b64 	%rd1520, {%r11828, %r11827};
	shf.l.wrap.b32 	%r11829, %r11825, %r11826, 30;
	shf.l.wrap.b32 	%r11830, %r11826, %r11825, 30;
	mov.b64 	%rd1521, {%r11830, %r11829};
	xor.b64  	%rd1522, %rd1521, %rd1520;
	shf.l.wrap.b32 	%r11831, %r11825, %r11826, 25;
	shf.l.wrap.b32 	%r11832, %r11826, %r11825, 25;
	mov.b64 	%rd1523, {%r11832, %r11831};
	xor.b64  	%rd1524, %rd1522, %rd1523;
	and.b64  	%rd1525, %rd1506, %rd1482;
	xor.b64  	%rd1526, %rd1506, %rd1482;
	and.b64  	%rd1527, %rd1526, %rd1458;
	or.b64  	%rd1528, %rd1527, %rd1525;
	add.s64 	%rd1529, %rd1518, %rd1528;
	add.s64 	%rd1530, %rd1529, %rd1524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11833,%dummy}, %rd1519;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11834}, %rd1519;
	}
	shf.r.wrap.b32 	%r11835, %r11834, %r11833, 14;
	shf.r.wrap.b32 	%r11836, %r11833, %r11834, 14;
	mov.b64 	%rd1531, {%r11836, %r11835};
	shf.r.wrap.b32 	%r11837, %r11834, %r11833, 18;
	shf.r.wrap.b32 	%r11838, %r11833, %r11834, 18;
	mov.b64 	%rd1532, {%r11838, %r11837};
	xor.b64  	%rd1533, %rd1532, %rd1531;
	shf.l.wrap.b32 	%r11839, %r11833, %r11834, 23;
	shf.l.wrap.b32 	%r11840, %r11834, %r11833, 23;
	mov.b64 	%rd1534, {%r11840, %r11839};
	xor.b64  	%rd1535, %rd1533, %rd1534;
	xor.b64  	%rd1536, %rd1495, %rd1471;
	and.b64  	%rd1537, %rd1519, %rd1536;
	xor.b64  	%rd1538, %rd1537, %rd1471;
	add.s64 	%rd1539, %rd1447, %rd4426;
	add.s64 	%rd1540, %rd1539, %rd7;
	add.s64 	%rd1541, %rd1540, %rd1538;
	add.s64 	%rd1542, %rd1541, %rd1535;
	add.s64 	%rd1543, %rd1542, %rd1458;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11841,%dummy}, %rd1530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11842}, %rd1530;
	}
	shf.r.wrap.b32 	%r11843, %r11842, %r11841, 28;
	shf.r.wrap.b32 	%r11844, %r11841, %r11842, 28;
	mov.b64 	%rd1544, {%r11844, %r11843};
	shf.l.wrap.b32 	%r11845, %r11841, %r11842, 30;
	shf.l.wrap.b32 	%r11846, %r11842, %r11841, 30;
	mov.b64 	%rd1545, {%r11846, %r11845};
	xor.b64  	%rd1546, %rd1545, %rd1544;
	shf.l.wrap.b32 	%r11847, %r11841, %r11842, 25;
	shf.l.wrap.b32 	%r11848, %r11842, %r11841, 25;
	mov.b64 	%rd1547, {%r11848, %r11847};
	xor.b64  	%rd1548, %rd1546, %rd1547;
	and.b64  	%rd1549, %rd1530, %rd1506;
	xor.b64  	%rd1550, %rd1530, %rd1506;
	and.b64  	%rd1551, %rd1550, %rd1482;
	or.b64  	%rd1552, %rd1551, %rd1549;
	add.s64 	%rd1553, %rd1542, %rd1552;
	add.s64 	%rd1554, %rd1553, %rd1548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11849,%dummy}, %rd1543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11850}, %rd1543;
	}
	shf.r.wrap.b32 	%r11851, %r11850, %r11849, 14;
	shf.r.wrap.b32 	%r11852, %r11849, %r11850, 14;
	mov.b64 	%rd1555, {%r11852, %r11851};
	shf.r.wrap.b32 	%r11853, %r11850, %r11849, 18;
	shf.r.wrap.b32 	%r11854, %r11849, %r11850, 18;
	mov.b64 	%rd1556, {%r11854, %r11853};
	xor.b64  	%rd1557, %rd1556, %rd1555;
	shf.l.wrap.b32 	%r11855, %r11849, %r11850, 23;
	shf.l.wrap.b32 	%r11856, %r11850, %r11849, 23;
	mov.b64 	%rd1558, {%r11856, %r11855};
	xor.b64  	%rd1559, %rd1557, %rd1558;
	xor.b64  	%rd1560, %rd1519, %rd1495;
	and.b64  	%rd1561, %rd1543, %rd1560;
	xor.b64  	%rd1562, %rd1561, %rd1495;
	add.s64 	%rd1563, %rd1471, %rd4427;
	add.s64 	%rd1564, %rd1563, %rd8;
	add.s64 	%rd1565, %rd1564, %rd1562;
	add.s64 	%rd1566, %rd1565, %rd1559;
	add.s64 	%rd1567, %rd1566, %rd1482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11857,%dummy}, %rd1554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11858}, %rd1554;
	}
	shf.r.wrap.b32 	%r11859, %r11858, %r11857, 28;
	shf.r.wrap.b32 	%r11860, %r11857, %r11858, 28;
	mov.b64 	%rd1568, {%r11860, %r11859};
	shf.l.wrap.b32 	%r11861, %r11857, %r11858, 30;
	shf.l.wrap.b32 	%r11862, %r11858, %r11857, 30;
	mov.b64 	%rd1569, {%r11862, %r11861};
	xor.b64  	%rd1570, %rd1569, %rd1568;
	shf.l.wrap.b32 	%r11863, %r11857, %r11858, 25;
	shf.l.wrap.b32 	%r11864, %r11858, %r11857, 25;
	mov.b64 	%rd1571, {%r11864, %r11863};
	xor.b64  	%rd1572, %rd1570, %rd1571;
	and.b64  	%rd1573, %rd1554, %rd1530;
	xor.b64  	%rd1574, %rd1554, %rd1530;
	and.b64  	%rd1575, %rd1574, %rd1506;
	or.b64  	%rd1576, %rd1575, %rd1573;
	add.s64 	%rd1577, %rd1566, %rd1576;
	add.s64 	%rd1578, %rd1577, %rd1572;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11865,%dummy}, %rd1567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11866}, %rd1567;
	}
	shf.r.wrap.b32 	%r11867, %r11866, %r11865, 14;
	shf.r.wrap.b32 	%r11868, %r11865, %r11866, 14;
	mov.b64 	%rd1579, {%r11868, %r11867};
	shf.r.wrap.b32 	%r11869, %r11866, %r11865, 18;
	shf.r.wrap.b32 	%r11870, %r11865, %r11866, 18;
	mov.b64 	%rd1580, {%r11870, %r11869};
	xor.b64  	%rd1581, %rd1580, %rd1579;
	shf.l.wrap.b32 	%r11871, %r11865, %r11866, 23;
	shf.l.wrap.b32 	%r11872, %r11866, %r11865, 23;
	mov.b64 	%rd1582, {%r11872, %r11871};
	xor.b64  	%rd1583, %rd1581, %rd1582;
	xor.b64  	%rd1584, %rd1543, %rd1519;
	and.b64  	%rd1585, %rd1567, %rd1584;
	xor.b64  	%rd1586, %rd1585, %rd1519;
	add.s64 	%rd1587, %rd1495, %rd4428;
	add.s64 	%rd1588, %rd1587, %rd9;
	add.s64 	%rd1589, %rd1588, %rd1586;
	add.s64 	%rd1590, %rd1589, %rd1583;
	add.s64 	%rd1591, %rd1590, %rd1506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11873,%dummy}, %rd1578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11874}, %rd1578;
	}
	shf.r.wrap.b32 	%r11875, %r11874, %r11873, 28;
	shf.r.wrap.b32 	%r11876, %r11873, %r11874, 28;
	mov.b64 	%rd1592, {%r11876, %r11875};
	shf.l.wrap.b32 	%r11877, %r11873, %r11874, 30;
	shf.l.wrap.b32 	%r11878, %r11874, %r11873, 30;
	mov.b64 	%rd1593, {%r11878, %r11877};
	xor.b64  	%rd1594, %rd1593, %rd1592;
	shf.l.wrap.b32 	%r11879, %r11873, %r11874, 25;
	shf.l.wrap.b32 	%r11880, %r11874, %r11873, 25;
	mov.b64 	%rd1595, {%r11880, %r11879};
	xor.b64  	%rd1596, %rd1594, %rd1595;
	and.b64  	%rd1597, %rd1578, %rd1554;
	xor.b64  	%rd1598, %rd1578, %rd1554;
	and.b64  	%rd1599, %rd1598, %rd1530;
	or.b64  	%rd1600, %rd1599, %rd1597;
	add.s64 	%rd1601, %rd1590, %rd1600;
	add.s64 	%rd1602, %rd1601, %rd1596;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11881,%dummy}, %rd1591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11882}, %rd1591;
	}
	shf.r.wrap.b32 	%r11883, %r11882, %r11881, 14;
	shf.r.wrap.b32 	%r11884, %r11881, %r11882, 14;
	mov.b64 	%rd1603, {%r11884, %r11883};
	shf.r.wrap.b32 	%r11885, %r11882, %r11881, 18;
	shf.r.wrap.b32 	%r11886, %r11881, %r11882, 18;
	mov.b64 	%rd1604, {%r11886, %r11885};
	xor.b64  	%rd1605, %rd1604, %rd1603;
	shf.l.wrap.b32 	%r11887, %r11881, %r11882, 23;
	shf.l.wrap.b32 	%r11888, %r11882, %r11881, 23;
	mov.b64 	%rd1606, {%r11888, %r11887};
	xor.b64  	%rd1607, %rd1605, %rd1606;
	xor.b64  	%rd1608, %rd1567, %rd1543;
	and.b64  	%rd1609, %rd1591, %rd1608;
	xor.b64  	%rd1610, %rd1609, %rd1543;
	add.s64 	%rd1611, %rd1519, %rd4412;
	add.s64 	%rd1612, %rd1611, %rd10;
	add.s64 	%rd1613, %rd1612, %rd1610;
	add.s64 	%rd1614, %rd1613, %rd1607;
	add.s64 	%rd1615, %rd1614, %rd1530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11889,%dummy}, %rd1602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11890}, %rd1602;
	}
	shf.r.wrap.b32 	%r11891, %r11890, %r11889, 28;
	shf.r.wrap.b32 	%r11892, %r11889, %r11890, 28;
	mov.b64 	%rd1616, {%r11892, %r11891};
	shf.l.wrap.b32 	%r11893, %r11889, %r11890, 30;
	shf.l.wrap.b32 	%r11894, %r11890, %r11889, 30;
	mov.b64 	%rd1617, {%r11894, %r11893};
	xor.b64  	%rd1618, %rd1617, %rd1616;
	shf.l.wrap.b32 	%r11895, %r11889, %r11890, 25;
	shf.l.wrap.b32 	%r11896, %r11890, %r11889, 25;
	mov.b64 	%rd1619, {%r11896, %r11895};
	xor.b64  	%rd1620, %rd1618, %rd1619;
	and.b64  	%rd1621, %rd1602, %rd1578;
	xor.b64  	%rd1622, %rd1602, %rd1578;
	and.b64  	%rd1623, %rd1622, %rd1554;
	or.b64  	%rd1624, %rd1623, %rd1621;
	add.s64 	%rd1625, %rd1614, %rd1624;
	add.s64 	%rd1626, %rd1625, %rd1620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11897,%dummy}, %rd1615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11898}, %rd1615;
	}
	shf.r.wrap.b32 	%r11899, %r11898, %r11897, 14;
	shf.r.wrap.b32 	%r11900, %r11897, %r11898, 14;
	mov.b64 	%rd1627, {%r11900, %r11899};
	shf.r.wrap.b32 	%r11901, %r11898, %r11897, 18;
	shf.r.wrap.b32 	%r11902, %r11897, %r11898, 18;
	mov.b64 	%rd1628, {%r11902, %r11901};
	xor.b64  	%rd1629, %rd1628, %rd1627;
	shf.l.wrap.b32 	%r11903, %r11897, %r11898, 23;
	shf.l.wrap.b32 	%r11904, %r11898, %r11897, 23;
	mov.b64 	%rd1630, {%r11904, %r11903};
	xor.b64  	%rd1631, %rd1629, %rd1630;
	xor.b64  	%rd1632, %rd1591, %rd1567;
	and.b64  	%rd1633, %rd1615, %rd1632;
	xor.b64  	%rd1634, %rd1633, %rd1567;
	add.s64 	%rd1635, %rd1543, %rd4411;
	add.s64 	%rd1636, %rd1635, %rd11;
	add.s64 	%rd1637, %rd1636, %rd1634;
	add.s64 	%rd1638, %rd1637, %rd1631;
	add.s64 	%rd1639, %rd1638, %rd1554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11905,%dummy}, %rd1626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11906}, %rd1626;
	}
	shf.r.wrap.b32 	%r11907, %r11906, %r11905, 28;
	shf.r.wrap.b32 	%r11908, %r11905, %r11906, 28;
	mov.b64 	%rd1640, {%r11908, %r11907};
	shf.l.wrap.b32 	%r11909, %r11905, %r11906, 30;
	shf.l.wrap.b32 	%r11910, %r11906, %r11905, 30;
	mov.b64 	%rd1641, {%r11910, %r11909};
	xor.b64  	%rd1642, %rd1641, %rd1640;
	shf.l.wrap.b32 	%r11911, %r11905, %r11906, 25;
	shf.l.wrap.b32 	%r11912, %r11906, %r11905, 25;
	mov.b64 	%rd1643, {%r11912, %r11911};
	xor.b64  	%rd1644, %rd1642, %rd1643;
	and.b64  	%rd1645, %rd1626, %rd1602;
	xor.b64  	%rd1646, %rd1626, %rd1602;
	and.b64  	%rd1647, %rd1646, %rd1578;
	or.b64  	%rd1648, %rd1647, %rd1645;
	add.s64 	%rd1649, %rd1638, %rd1648;
	add.s64 	%rd1650, %rd1649, %rd1644;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11913,%dummy}, %rd1639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11914}, %rd1639;
	}
	shf.r.wrap.b32 	%r11915, %r11914, %r11913, 14;
	shf.r.wrap.b32 	%r11916, %r11913, %r11914, 14;
	mov.b64 	%rd1651, {%r11916, %r11915};
	shf.r.wrap.b32 	%r11917, %r11914, %r11913, 18;
	shf.r.wrap.b32 	%r11918, %r11913, %r11914, 18;
	mov.b64 	%rd1652, {%r11918, %r11917};
	xor.b64  	%rd1653, %rd1652, %rd1651;
	shf.l.wrap.b32 	%r11919, %r11913, %r11914, 23;
	shf.l.wrap.b32 	%r11920, %r11914, %r11913, 23;
	mov.b64 	%rd1654, {%r11920, %r11919};
	xor.b64  	%rd1655, %rd1653, %rd1654;
	xor.b64  	%rd1656, %rd1615, %rd1591;
	and.b64  	%rd1657, %rd1639, %rd1656;
	xor.b64  	%rd1658, %rd1657, %rd1591;
	add.s64 	%rd1659, %rd1567, %rd4410;
	add.s64 	%rd1660, %rd1659, %rd12;
	add.s64 	%rd1661, %rd1660, %rd1658;
	add.s64 	%rd1662, %rd1661, %rd1655;
	add.s64 	%rd1663, %rd1662, %rd1578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11921,%dummy}, %rd1650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11922}, %rd1650;
	}
	shf.r.wrap.b32 	%r11923, %r11922, %r11921, 28;
	shf.r.wrap.b32 	%r11924, %r11921, %r11922, 28;
	mov.b64 	%rd1664, {%r11924, %r11923};
	shf.l.wrap.b32 	%r11925, %r11921, %r11922, 30;
	shf.l.wrap.b32 	%r11926, %r11922, %r11921, 30;
	mov.b64 	%rd1665, {%r11926, %r11925};
	xor.b64  	%rd1666, %rd1665, %rd1664;
	shf.l.wrap.b32 	%r11927, %r11921, %r11922, 25;
	shf.l.wrap.b32 	%r11928, %r11922, %r11921, 25;
	mov.b64 	%rd1667, {%r11928, %r11927};
	xor.b64  	%rd1668, %rd1666, %rd1667;
	and.b64  	%rd1669, %rd1650, %rd1626;
	xor.b64  	%rd1670, %rd1650, %rd1626;
	and.b64  	%rd1671, %rd1670, %rd1602;
	or.b64  	%rd1672, %rd1671, %rd1669;
	add.s64 	%rd1673, %rd1662, %rd1672;
	add.s64 	%rd1674, %rd1673, %rd1668;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11929,%dummy}, %rd1663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11930}, %rd1663;
	}
	shf.r.wrap.b32 	%r11931, %r11930, %r11929, 14;
	shf.r.wrap.b32 	%r11932, %r11929, %r11930, 14;
	mov.b64 	%rd1675, {%r11932, %r11931};
	shf.r.wrap.b32 	%r11933, %r11930, %r11929, 18;
	shf.r.wrap.b32 	%r11934, %r11929, %r11930, 18;
	mov.b64 	%rd1676, {%r11934, %r11933};
	xor.b64  	%rd1677, %rd1676, %rd1675;
	shf.l.wrap.b32 	%r11935, %r11929, %r11930, 23;
	shf.l.wrap.b32 	%r11936, %r11930, %r11929, 23;
	mov.b64 	%rd1678, {%r11936, %r11935};
	xor.b64  	%rd1679, %rd1677, %rd1678;
	xor.b64  	%rd1680, %rd1639, %rd1615;
	and.b64  	%rd1681, %rd1663, %rd1680;
	xor.b64  	%rd1682, %rd1681, %rd1615;
	add.s64 	%rd1683, %rd1591, %rd4409;
	add.s64 	%rd1684, %rd1683, %rd13;
	add.s64 	%rd1685, %rd1684, %rd1682;
	add.s64 	%rd1686, %rd1685, %rd1679;
	add.s64 	%rd1687, %rd1686, %rd1602;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11937,%dummy}, %rd1674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11938}, %rd1674;
	}
	shf.r.wrap.b32 	%r11939, %r11938, %r11937, 28;
	shf.r.wrap.b32 	%r11940, %r11937, %r11938, 28;
	mov.b64 	%rd1688, {%r11940, %r11939};
	shf.l.wrap.b32 	%r11941, %r11937, %r11938, 30;
	shf.l.wrap.b32 	%r11942, %r11938, %r11937, 30;
	mov.b64 	%rd1689, {%r11942, %r11941};
	xor.b64  	%rd1690, %rd1689, %rd1688;
	shf.l.wrap.b32 	%r11943, %r11937, %r11938, 25;
	shf.l.wrap.b32 	%r11944, %r11938, %r11937, 25;
	mov.b64 	%rd1691, {%r11944, %r11943};
	xor.b64  	%rd1692, %rd1690, %rd1691;
	and.b64  	%rd1693, %rd1674, %rd1650;
	xor.b64  	%rd1694, %rd1674, %rd1650;
	and.b64  	%rd1695, %rd1694, %rd1626;
	or.b64  	%rd1696, %rd1695, %rd1693;
	add.s64 	%rd1697, %rd1686, %rd1696;
	add.s64 	%rd1698, %rd1697, %rd1692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11945,%dummy}, %rd1687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11946}, %rd1687;
	}
	shf.r.wrap.b32 	%r11947, %r11946, %r11945, 14;
	shf.r.wrap.b32 	%r11948, %r11945, %r11946, 14;
	mov.b64 	%rd1699, {%r11948, %r11947};
	shf.r.wrap.b32 	%r11949, %r11946, %r11945, 18;
	shf.r.wrap.b32 	%r11950, %r11945, %r11946, 18;
	mov.b64 	%rd1700, {%r11950, %r11949};
	xor.b64  	%rd1701, %rd1700, %rd1699;
	shf.l.wrap.b32 	%r11951, %r11945, %r11946, 23;
	shf.l.wrap.b32 	%r11952, %r11946, %r11945, 23;
	mov.b64 	%rd1702, {%r11952, %r11951};
	xor.b64  	%rd1703, %rd1701, %rd1702;
	xor.b64  	%rd1704, %rd1663, %rd1639;
	and.b64  	%rd1705, %rd1687, %rd1704;
	xor.b64  	%rd1706, %rd1705, %rd1639;
	add.s64 	%rd1707, %rd1615, %rd4408;
	add.s64 	%rd1708, %rd1707, %rd14;
	add.s64 	%rd1709, %rd1708, %rd1706;
	add.s64 	%rd1710, %rd1709, %rd1703;
	add.s64 	%rd4420, %rd1710, %rd1626;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11953,%dummy}, %rd1698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11954}, %rd1698;
	}
	shf.r.wrap.b32 	%r11955, %r11954, %r11953, 28;
	shf.r.wrap.b32 	%r11956, %r11953, %r11954, 28;
	mov.b64 	%rd1711, {%r11956, %r11955};
	shf.l.wrap.b32 	%r11957, %r11953, %r11954, 30;
	shf.l.wrap.b32 	%r11958, %r11954, %r11953, 30;
	mov.b64 	%rd1712, {%r11958, %r11957};
	xor.b64  	%rd1713, %rd1712, %rd1711;
	shf.l.wrap.b32 	%r11959, %r11953, %r11954, 25;
	shf.l.wrap.b32 	%r11960, %r11954, %r11953, 25;
	mov.b64 	%rd1714, {%r11960, %r11959};
	xor.b64  	%rd1715, %rd1713, %rd1714;
	and.b64  	%rd1716, %rd1698, %rd1674;
	xor.b64  	%rd1717, %rd1698, %rd1674;
	and.b64  	%rd1718, %rd1717, %rd1650;
	or.b64  	%rd1719, %rd1718, %rd1716;
	add.s64 	%rd1720, %rd1710, %rd1719;
	add.s64 	%rd4416, %rd1720, %rd1715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11961,%dummy}, %rd4420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11962}, %rd4420;
	}
	shf.r.wrap.b32 	%r11963, %r11962, %r11961, 14;
	shf.r.wrap.b32 	%r11964, %r11961, %r11962, 14;
	mov.b64 	%rd1721, {%r11964, %r11963};
	shf.r.wrap.b32 	%r11965, %r11962, %r11961, 18;
	shf.r.wrap.b32 	%r11966, %r11961, %r11962, 18;
	mov.b64 	%rd1722, {%r11966, %r11965};
	xor.b64  	%rd1723, %rd1722, %rd1721;
	shf.l.wrap.b32 	%r11967, %r11961, %r11962, 23;
	shf.l.wrap.b32 	%r11968, %r11962, %r11961, 23;
	mov.b64 	%rd1724, {%r11968, %r11967};
	xor.b64  	%rd1725, %rd1723, %rd1724;
	xor.b64  	%rd1726, %rd1687, %rd1663;
	and.b64  	%rd1727, %rd4420, %rd1726;
	xor.b64  	%rd1728, %rd1727, %rd1663;
	add.s64 	%rd1729, %rd1639, %rd4407;
	add.s64 	%rd1730, %rd1729, %rd15;
	add.s64 	%rd1731, %rd1730, %rd1728;
	add.s64 	%rd1732, %rd1731, %rd1725;
	add.s64 	%rd4419, %rd1732, %rd1650;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11969,%dummy}, %rd4416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11970}, %rd4416;
	}
	shf.r.wrap.b32 	%r11971, %r11970, %r11969, 28;
	shf.r.wrap.b32 	%r11972, %r11969, %r11970, 28;
	mov.b64 	%rd1733, {%r11972, %r11971};
	shf.l.wrap.b32 	%r11973, %r11969, %r11970, 30;
	shf.l.wrap.b32 	%r11974, %r11970, %r11969, 30;
	mov.b64 	%rd1734, {%r11974, %r11973};
	xor.b64  	%rd1735, %rd1734, %rd1733;
	shf.l.wrap.b32 	%r11975, %r11969, %r11970, 25;
	shf.l.wrap.b32 	%r11976, %r11970, %r11969, 25;
	mov.b64 	%rd1736, {%r11976, %r11975};
	xor.b64  	%rd1737, %rd1735, %rd1736;
	and.b64  	%rd1738, %rd4416, %rd1698;
	xor.b64  	%rd1739, %rd4416, %rd1698;
	and.b64  	%rd1740, %rd1739, %rd1674;
	or.b64  	%rd1741, %rd1740, %rd1738;
	add.s64 	%rd1742, %rd1732, %rd1741;
	add.s64 	%rd4415, %rd1742, %rd1737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11977,%dummy}, %rd4419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11978}, %rd4419;
	}
	shf.r.wrap.b32 	%r11979, %r11978, %r11977, 14;
	shf.r.wrap.b32 	%r11980, %r11977, %r11978, 14;
	mov.b64 	%rd1743, {%r11980, %r11979};
	shf.r.wrap.b32 	%r11981, %r11978, %r11977, 18;
	shf.r.wrap.b32 	%r11982, %r11977, %r11978, 18;
	mov.b64 	%rd1744, {%r11982, %r11981};
	xor.b64  	%rd1745, %rd1744, %rd1743;
	shf.l.wrap.b32 	%r11983, %r11977, %r11978, 23;
	shf.l.wrap.b32 	%r11984, %r11978, %r11977, 23;
	mov.b64 	%rd1746, {%r11984, %r11983};
	xor.b64  	%rd1747, %rd1745, %rd1746;
	xor.b64  	%rd1748, %rd4420, %rd1687;
	and.b64  	%rd1749, %rd4419, %rd1748;
	xor.b64  	%rd1750, %rd1749, %rd1687;
	add.s64 	%rd1751, %rd1663, %rd4406;
	add.s64 	%rd1752, %rd1751, %rd16;
	add.s64 	%rd1753, %rd1752, %rd1750;
	add.s64 	%rd1754, %rd1753, %rd1747;
	add.s64 	%rd4418, %rd1754, %rd1674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11985,%dummy}, %rd4415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11986}, %rd4415;
	}
	shf.r.wrap.b32 	%r11987, %r11986, %r11985, 28;
	shf.r.wrap.b32 	%r11988, %r11985, %r11986, 28;
	mov.b64 	%rd1755, {%r11988, %r11987};
	shf.l.wrap.b32 	%r11989, %r11985, %r11986, 30;
	shf.l.wrap.b32 	%r11990, %r11986, %r11985, 30;
	mov.b64 	%rd1756, {%r11990, %r11989};
	xor.b64  	%rd1757, %rd1756, %rd1755;
	shf.l.wrap.b32 	%r11991, %r11985, %r11986, 25;
	shf.l.wrap.b32 	%r11992, %r11986, %r11985, 25;
	mov.b64 	%rd1758, {%r11992, %r11991};
	xor.b64  	%rd1759, %rd1757, %rd1758;
	and.b64  	%rd1760, %rd4415, %rd4416;
	xor.b64  	%rd1761, %rd4415, %rd4416;
	and.b64  	%rd1762, %rd1761, %rd1698;
	or.b64  	%rd1763, %rd1762, %rd1760;
	add.s64 	%rd1764, %rd1754, %rd1763;
	add.s64 	%rd4414, %rd1764, %rd1759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11993,%dummy}, %rd4418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11994}, %rd4418;
	}
	shf.r.wrap.b32 	%r11995, %r11994, %r11993, 14;
	shf.r.wrap.b32 	%r11996, %r11993, %r11994, 14;
	mov.b64 	%rd1765, {%r11996, %r11995};
	shf.r.wrap.b32 	%r11997, %r11994, %r11993, 18;
	shf.r.wrap.b32 	%r11998, %r11993, %r11994, 18;
	mov.b64 	%rd1766, {%r11998, %r11997};
	xor.b64  	%rd1767, %rd1766, %rd1765;
	shf.l.wrap.b32 	%r11999, %r11993, %r11994, 23;
	shf.l.wrap.b32 	%r12000, %r11994, %r11993, 23;
	mov.b64 	%rd1768, {%r12000, %r11999};
	xor.b64  	%rd1769, %rd1767, %rd1768;
	xor.b64  	%rd1770, %rd4419, %rd4420;
	and.b64  	%rd1771, %rd4418, %rd1770;
	xor.b64  	%rd1772, %rd1771, %rd4420;
	add.s64 	%rd1773, %rd1687, %rd4405;
	add.s64 	%rd1774, %rd1773, %rd17;
	add.s64 	%rd1775, %rd1774, %rd1772;
	add.s64 	%rd1776, %rd1775, %rd1769;
	add.s64 	%rd4417, %rd1776, %rd1698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12001,%dummy}, %rd4414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12002}, %rd4414;
	}
	shf.r.wrap.b32 	%r12003, %r12002, %r12001, 28;
	shf.r.wrap.b32 	%r12004, %r12001, %r12002, 28;
	mov.b64 	%rd1777, {%r12004, %r12003};
	shf.l.wrap.b32 	%r12005, %r12001, %r12002, 30;
	shf.l.wrap.b32 	%r12006, %r12002, %r12001, 30;
	mov.b64 	%rd1778, {%r12006, %r12005};
	xor.b64  	%rd1779, %rd1778, %rd1777;
	shf.l.wrap.b32 	%r12007, %r12001, %r12002, 25;
	shf.l.wrap.b32 	%r12008, %r12002, %r12001, 25;
	mov.b64 	%rd1780, {%r12008, %r12007};
	xor.b64  	%rd1781, %rd1779, %rd1780;
	and.b64  	%rd1782, %rd4414, %rd4415;
	xor.b64  	%rd1783, %rd4414, %rd4415;
	and.b64  	%rd1784, %rd1783, %rd4416;
	or.b64  	%rd1785, %rd1784, %rd1782;
	add.s64 	%rd1786, %rd1776, %rd1785;
	add.s64 	%rd4413, %rd1786, %rd1781;
	mov.u32 	%r19393, 16;
	mov.u64 	%rd4404, k_sha512;

BB2_212:
	shr.u64 	%rd1787, %rd4406, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12009,%dummy}, %rd4406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12010}, %rd4406;
	}
	shf.r.wrap.b32 	%r12011, %r12010, %r12009, 19;
	shf.r.wrap.b32 	%r12012, %r12009, %r12010, 19;
	mov.b64 	%rd1788, {%r12012, %r12011};
	xor.b64  	%rd1789, %rd1788, %rd1787;
	shf.l.wrap.b32 	%r12013, %r12009, %r12010, 3;
	shf.l.wrap.b32 	%r12014, %r12010, %r12009, 3;
	mov.b64 	%rd1790, {%r12014, %r12013};
	xor.b64  	%rd1791, %rd1789, %rd1790;
	shr.u64 	%rd1792, %rd4422, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12015,%dummy}, %rd4422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12016}, %rd4422;
	}
	shf.r.wrap.b32 	%r12017, %r12016, %r12015, 1;
	shf.r.wrap.b32 	%r12018, %r12015, %r12016, 1;
	mov.b64 	%rd1793, {%r12018, %r12017};
	xor.b64  	%rd1794, %rd1793, %rd1792;
	shf.r.wrap.b32 	%r12019, %r12016, %r12015, 8;
	shf.r.wrap.b32 	%r12020, %r12015, %r12016, 8;
	mov.b64 	%rd1795, {%r12020, %r12019};
	xor.b64  	%rd1796, %rd1794, %rd1795;
	add.s64 	%rd1797, %rd4421, %rd4411;
	add.s64 	%rd1798, %rd1797, %rd1791;
	add.s64 	%rd4421, %rd1798, %rd1796;
	shr.u64 	%rd1799, %rd4405, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12021,%dummy}, %rd4405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12022}, %rd4405;
	}
	shf.r.wrap.b32 	%r12023, %r12022, %r12021, 19;
	shf.r.wrap.b32 	%r12024, %r12021, %r12022, 19;
	mov.b64 	%rd1800, {%r12024, %r12023};
	xor.b64  	%rd1801, %rd1800, %rd1799;
	shf.l.wrap.b32 	%r12025, %r12021, %r12022, 3;
	shf.l.wrap.b32 	%r12026, %r12022, %r12021, 3;
	mov.b64 	%rd1802, {%r12026, %r12025};
	xor.b64  	%rd1803, %rd1801, %rd1802;
	shr.u64 	%rd1804, %rd4423, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12027,%dummy}, %rd4423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12028}, %rd4423;
	}
	shf.r.wrap.b32 	%r12029, %r12028, %r12027, 1;
	shf.r.wrap.b32 	%r12030, %r12027, %r12028, 1;
	mov.b64 	%rd1805, {%r12030, %r12029};
	xor.b64  	%rd1806, %rd1805, %rd1804;
	shf.r.wrap.b32 	%r12031, %r12028, %r12027, 8;
	shf.r.wrap.b32 	%r12032, %r12027, %r12028, 8;
	mov.b64 	%rd1807, {%r12032, %r12031};
	xor.b64  	%rd1808, %rd1806, %rd1807;
	add.s64 	%rd1809, %rd4422, %rd4410;
	add.s64 	%rd1810, %rd1809, %rd1803;
	add.s64 	%rd4422, %rd1810, %rd1808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12033,%dummy}, %rd4421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12034}, %rd4421;
	}
	shf.r.wrap.b32 	%r12035, %r12034, %r12033, 19;
	shf.r.wrap.b32 	%r12036, %r12033, %r12034, 19;
	mov.b64 	%rd1811, {%r12036, %r12035};
	shf.l.wrap.b32 	%r12037, %r12033, %r12034, 3;
	shf.l.wrap.b32 	%r12038, %r12034, %r12033, 3;
	mov.b64 	%rd1812, {%r12038, %r12037};
	shr.u64 	%rd1813, %rd4421, 6;
	xor.b64  	%rd1814, %rd1811, %rd1813;
	xor.b64  	%rd1815, %rd1814, %rd1812;
	shr.u64 	%rd1816, %rd4424, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12039,%dummy}, %rd4424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12040}, %rd4424;
	}
	shf.r.wrap.b32 	%r12041, %r12040, %r12039, 1;
	shf.r.wrap.b32 	%r12042, %r12039, %r12040, 1;
	mov.b64 	%rd1817, {%r12042, %r12041};
	xor.b64  	%rd1818, %rd1817, %rd1816;
	shf.r.wrap.b32 	%r12043, %r12040, %r12039, 8;
	shf.r.wrap.b32 	%r12044, %r12039, %r12040, 8;
	mov.b64 	%rd1819, {%r12044, %r12043};
	xor.b64  	%rd1820, %rd1818, %rd1819;
	add.s64 	%rd1821, %rd4423, %rd4409;
	add.s64 	%rd1822, %rd1821, %rd1815;
	add.s64 	%rd4423, %rd1822, %rd1820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12045,%dummy}, %rd4422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12046}, %rd4422;
	}
	shf.r.wrap.b32 	%r12047, %r12046, %r12045, 19;
	shf.r.wrap.b32 	%r12048, %r12045, %r12046, 19;
	mov.b64 	%rd1823, {%r12048, %r12047};
	shf.l.wrap.b32 	%r12049, %r12045, %r12046, 3;
	shf.l.wrap.b32 	%r12050, %r12046, %r12045, 3;
	mov.b64 	%rd1824, {%r12050, %r12049};
	shr.u64 	%rd1825, %rd4422, 6;
	xor.b64  	%rd1826, %rd1823, %rd1825;
	xor.b64  	%rd1827, %rd1826, %rd1824;
	shr.u64 	%rd1828, %rd4425, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12051,%dummy}, %rd4425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12052}, %rd4425;
	}
	shf.r.wrap.b32 	%r12053, %r12052, %r12051, 1;
	shf.r.wrap.b32 	%r12054, %r12051, %r12052, 1;
	mov.b64 	%rd1829, {%r12054, %r12053};
	xor.b64  	%rd1830, %rd1829, %rd1828;
	shf.r.wrap.b32 	%r12055, %r12052, %r12051, 8;
	shf.r.wrap.b32 	%r12056, %r12051, %r12052, 8;
	mov.b64 	%rd1831, {%r12056, %r12055};
	xor.b64  	%rd1832, %rd1830, %rd1831;
	add.s64 	%rd1833, %rd4424, %rd4408;
	add.s64 	%rd1834, %rd1833, %rd1827;
	add.s64 	%rd4424, %rd1834, %rd1832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12057,%dummy}, %rd4423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12058}, %rd4423;
	}
	shf.r.wrap.b32 	%r12059, %r12058, %r12057, 19;
	shf.r.wrap.b32 	%r12060, %r12057, %r12058, 19;
	mov.b64 	%rd1835, {%r12060, %r12059};
	shf.l.wrap.b32 	%r12061, %r12057, %r12058, 3;
	shf.l.wrap.b32 	%r12062, %r12058, %r12057, 3;
	mov.b64 	%rd1836, {%r12062, %r12061};
	shr.u64 	%rd1837, %rd4423, 6;
	xor.b64  	%rd1838, %rd1835, %rd1837;
	xor.b64  	%rd1839, %rd1838, %rd1836;
	shr.u64 	%rd1840, %rd4426, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12063,%dummy}, %rd4426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12064}, %rd4426;
	}
	shf.r.wrap.b32 	%r12065, %r12064, %r12063, 1;
	shf.r.wrap.b32 	%r12066, %r12063, %r12064, 1;
	mov.b64 	%rd1841, {%r12066, %r12065};
	xor.b64  	%rd1842, %rd1841, %rd1840;
	shf.r.wrap.b32 	%r12067, %r12064, %r12063, 8;
	shf.r.wrap.b32 	%r12068, %r12063, %r12064, 8;
	mov.b64 	%rd1843, {%r12068, %r12067};
	xor.b64  	%rd1844, %rd1842, %rd1843;
	add.s64 	%rd1845, %rd4425, %rd4407;
	add.s64 	%rd1846, %rd1845, %rd1839;
	add.s64 	%rd4425, %rd1846, %rd1844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12069,%dummy}, %rd4424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12070}, %rd4424;
	}
	shf.r.wrap.b32 	%r12071, %r12070, %r12069, 19;
	shf.r.wrap.b32 	%r12072, %r12069, %r12070, 19;
	mov.b64 	%rd1847, {%r12072, %r12071};
	shf.l.wrap.b32 	%r12073, %r12069, %r12070, 3;
	shf.l.wrap.b32 	%r12074, %r12070, %r12069, 3;
	mov.b64 	%rd1848, {%r12074, %r12073};
	shr.u64 	%rd1849, %rd4424, 6;
	xor.b64  	%rd1850, %rd1847, %rd1849;
	xor.b64  	%rd1851, %rd1850, %rd1848;
	shr.u64 	%rd1852, %rd4427, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12075,%dummy}, %rd4427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12076}, %rd4427;
	}
	shf.r.wrap.b32 	%r12077, %r12076, %r12075, 1;
	shf.r.wrap.b32 	%r12078, %r12075, %r12076, 1;
	mov.b64 	%rd1853, {%r12078, %r12077};
	xor.b64  	%rd1854, %rd1853, %rd1852;
	shf.r.wrap.b32 	%r12079, %r12076, %r12075, 8;
	shf.r.wrap.b32 	%r12080, %r12075, %r12076, 8;
	mov.b64 	%rd1855, {%r12080, %r12079};
	xor.b64  	%rd1856, %rd1854, %rd1855;
	add.s64 	%rd1857, %rd4426, %rd4406;
	add.s64 	%rd1858, %rd1857, %rd1851;
	add.s64 	%rd4426, %rd1858, %rd1856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12081,%dummy}, %rd4425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12082}, %rd4425;
	}
	shf.r.wrap.b32 	%r12083, %r12082, %r12081, 19;
	shf.r.wrap.b32 	%r12084, %r12081, %r12082, 19;
	mov.b64 	%rd1859, {%r12084, %r12083};
	shf.l.wrap.b32 	%r12085, %r12081, %r12082, 3;
	shf.l.wrap.b32 	%r12086, %r12082, %r12081, 3;
	mov.b64 	%rd1860, {%r12086, %r12085};
	shr.u64 	%rd1861, %rd4425, 6;
	xor.b64  	%rd1862, %rd1859, %rd1861;
	xor.b64  	%rd1863, %rd1862, %rd1860;
	shr.u64 	%rd1864, %rd4428, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12087,%dummy}, %rd4428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12088}, %rd4428;
	}
	shf.r.wrap.b32 	%r12089, %r12088, %r12087, 1;
	shf.r.wrap.b32 	%r12090, %r12087, %r12088, 1;
	mov.b64 	%rd1865, {%r12090, %r12089};
	xor.b64  	%rd1866, %rd1865, %rd1864;
	shf.r.wrap.b32 	%r12091, %r12088, %r12087, 8;
	shf.r.wrap.b32 	%r12092, %r12087, %r12088, 8;
	mov.b64 	%rd1867, {%r12092, %r12091};
	xor.b64  	%rd1868, %rd1866, %rd1867;
	add.s64 	%rd1869, %rd4427, %rd4405;
	add.s64 	%rd1870, %rd1869, %rd1863;
	add.s64 	%rd4427, %rd1870, %rd1868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12093,%dummy}, %rd4426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12094}, %rd4426;
	}
	shf.r.wrap.b32 	%r12095, %r12094, %r12093, 19;
	shf.r.wrap.b32 	%r12096, %r12093, %r12094, 19;
	mov.b64 	%rd1871, {%r12096, %r12095};
	shf.l.wrap.b32 	%r12097, %r12093, %r12094, 3;
	shf.l.wrap.b32 	%r12098, %r12094, %r12093, 3;
	mov.b64 	%rd1872, {%r12098, %r12097};
	shr.u64 	%rd1873, %rd4426, 6;
	xor.b64  	%rd1874, %rd1871, %rd1873;
	xor.b64  	%rd1875, %rd1874, %rd1872;
	shr.u64 	%rd1876, %rd4412, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12099,%dummy}, %rd4412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12100}, %rd4412;
	}
	shf.r.wrap.b32 	%r12101, %r12100, %r12099, 1;
	shf.r.wrap.b32 	%r12102, %r12099, %r12100, 1;
	mov.b64 	%rd1877, {%r12102, %r12101};
	xor.b64  	%rd1878, %rd1877, %rd1876;
	shf.r.wrap.b32 	%r12103, %r12100, %r12099, 8;
	shf.r.wrap.b32 	%r12104, %r12099, %r12100, 8;
	mov.b64 	%rd1879, {%r12104, %r12103};
	xor.b64  	%rd1880, %rd1878, %rd1879;
	add.s64 	%rd1881, %rd4421, %rd4428;
	add.s64 	%rd1882, %rd1881, %rd1875;
	add.s64 	%rd4428, %rd1882, %rd1880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12105,%dummy}, %rd4427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12106}, %rd4427;
	}
	shf.r.wrap.b32 	%r12107, %r12106, %r12105, 19;
	shf.r.wrap.b32 	%r12108, %r12105, %r12106, 19;
	mov.b64 	%rd1883, {%r12108, %r12107};
	shf.l.wrap.b32 	%r12109, %r12105, %r12106, 3;
	shf.l.wrap.b32 	%r12110, %r12106, %r12105, 3;
	mov.b64 	%rd1884, {%r12110, %r12109};
	shr.u64 	%rd1885, %rd4427, 6;
	xor.b64  	%rd1886, %rd1883, %rd1885;
	xor.b64  	%rd1887, %rd1886, %rd1884;
	shr.u64 	%rd1888, %rd4411, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12111,%dummy}, %rd4411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12112}, %rd4411;
	}
	shf.r.wrap.b32 	%r12113, %r12112, %r12111, 1;
	shf.r.wrap.b32 	%r12114, %r12111, %r12112, 1;
	mov.b64 	%rd1889, {%r12114, %r12113};
	xor.b64  	%rd1890, %rd1889, %rd1888;
	shf.r.wrap.b32 	%r12115, %r12112, %r12111, 8;
	shf.r.wrap.b32 	%r12116, %r12111, %r12112, 8;
	mov.b64 	%rd1891, {%r12116, %r12115};
	xor.b64  	%rd1892, %rd1890, %rd1891;
	add.s64 	%rd1893, %rd4422, %rd4412;
	add.s64 	%rd1894, %rd1893, %rd1887;
	add.s64 	%rd4412, %rd1894, %rd1892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12117,%dummy}, %rd4428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12118}, %rd4428;
	}
	shf.r.wrap.b32 	%r12119, %r12118, %r12117, 19;
	shf.r.wrap.b32 	%r12120, %r12117, %r12118, 19;
	mov.b64 	%rd1895, {%r12120, %r12119};
	shf.l.wrap.b32 	%r12121, %r12117, %r12118, 3;
	shf.l.wrap.b32 	%r12122, %r12118, %r12117, 3;
	mov.b64 	%rd1896, {%r12122, %r12121};
	shr.u64 	%rd1897, %rd4428, 6;
	xor.b64  	%rd1898, %rd1895, %rd1897;
	xor.b64  	%rd1899, %rd1898, %rd1896;
	shr.u64 	%rd1900, %rd4410, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12123,%dummy}, %rd4410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12124}, %rd4410;
	}
	shf.r.wrap.b32 	%r12125, %r12124, %r12123, 1;
	shf.r.wrap.b32 	%r12126, %r12123, %r12124, 1;
	mov.b64 	%rd1901, {%r12126, %r12125};
	xor.b64  	%rd1902, %rd1901, %rd1900;
	shf.r.wrap.b32 	%r12127, %r12124, %r12123, 8;
	shf.r.wrap.b32 	%r12128, %r12123, %r12124, 8;
	mov.b64 	%rd1903, {%r12128, %r12127};
	xor.b64  	%rd1904, %rd1902, %rd1903;
	add.s64 	%rd1905, %rd4423, %rd4411;
	add.s64 	%rd1906, %rd1905, %rd1899;
	add.s64 	%rd4411, %rd1906, %rd1904;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12129,%dummy}, %rd4412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12130}, %rd4412;
	}
	shf.r.wrap.b32 	%r12131, %r12130, %r12129, 19;
	shf.r.wrap.b32 	%r12132, %r12129, %r12130, 19;
	mov.b64 	%rd1907, {%r12132, %r12131};
	shf.l.wrap.b32 	%r12133, %r12129, %r12130, 3;
	shf.l.wrap.b32 	%r12134, %r12130, %r12129, 3;
	mov.b64 	%rd1908, {%r12134, %r12133};
	shr.u64 	%rd1909, %rd4412, 6;
	xor.b64  	%rd1910, %rd1907, %rd1909;
	xor.b64  	%rd1911, %rd1910, %rd1908;
	shr.u64 	%rd1912, %rd4409, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12135,%dummy}, %rd4409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12136}, %rd4409;
	}
	shf.r.wrap.b32 	%r12137, %r12136, %r12135, 1;
	shf.r.wrap.b32 	%r12138, %r12135, %r12136, 1;
	mov.b64 	%rd1913, {%r12138, %r12137};
	xor.b64  	%rd1914, %rd1913, %rd1912;
	shf.r.wrap.b32 	%r12139, %r12136, %r12135, 8;
	shf.r.wrap.b32 	%r12140, %r12135, %r12136, 8;
	mov.b64 	%rd1915, {%r12140, %r12139};
	xor.b64  	%rd1916, %rd1914, %rd1915;
	add.s64 	%rd1917, %rd4424, %rd4410;
	add.s64 	%rd1918, %rd1917, %rd1911;
	add.s64 	%rd4410, %rd1918, %rd1916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12141,%dummy}, %rd4411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12142}, %rd4411;
	}
	shf.r.wrap.b32 	%r12143, %r12142, %r12141, 19;
	shf.r.wrap.b32 	%r12144, %r12141, %r12142, 19;
	mov.b64 	%rd1919, {%r12144, %r12143};
	shf.l.wrap.b32 	%r12145, %r12141, %r12142, 3;
	shf.l.wrap.b32 	%r12146, %r12142, %r12141, 3;
	mov.b64 	%rd1920, {%r12146, %r12145};
	shr.u64 	%rd1921, %rd4411, 6;
	xor.b64  	%rd1922, %rd1919, %rd1921;
	xor.b64  	%rd1923, %rd1922, %rd1920;
	shr.u64 	%rd1924, %rd4408, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12147,%dummy}, %rd4408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12148}, %rd4408;
	}
	shf.r.wrap.b32 	%r12149, %r12148, %r12147, 1;
	shf.r.wrap.b32 	%r12150, %r12147, %r12148, 1;
	mov.b64 	%rd1925, {%r12150, %r12149};
	xor.b64  	%rd1926, %rd1925, %rd1924;
	shf.r.wrap.b32 	%r12151, %r12148, %r12147, 8;
	shf.r.wrap.b32 	%r12152, %r12147, %r12148, 8;
	mov.b64 	%rd1927, {%r12152, %r12151};
	xor.b64  	%rd1928, %rd1926, %rd1927;
	add.s64 	%rd1929, %rd4425, %rd4409;
	add.s64 	%rd1930, %rd1929, %rd1923;
	add.s64 	%rd4409, %rd1930, %rd1928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12153,%dummy}, %rd4410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12154}, %rd4410;
	}
	shf.r.wrap.b32 	%r12155, %r12154, %r12153, 19;
	shf.r.wrap.b32 	%r12156, %r12153, %r12154, 19;
	mov.b64 	%rd1931, {%r12156, %r12155};
	shf.l.wrap.b32 	%r12157, %r12153, %r12154, 3;
	shf.l.wrap.b32 	%r12158, %r12154, %r12153, 3;
	mov.b64 	%rd1932, {%r12158, %r12157};
	shr.u64 	%rd1933, %rd4410, 6;
	xor.b64  	%rd1934, %rd1931, %rd1933;
	xor.b64  	%rd1935, %rd1934, %rd1932;
	shr.u64 	%rd1936, %rd4407, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12159,%dummy}, %rd4407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12160}, %rd4407;
	}
	shf.r.wrap.b32 	%r12161, %r12160, %r12159, 1;
	shf.r.wrap.b32 	%r12162, %r12159, %r12160, 1;
	mov.b64 	%rd1937, {%r12162, %r12161};
	xor.b64  	%rd1938, %rd1937, %rd1936;
	shf.r.wrap.b32 	%r12163, %r12160, %r12159, 8;
	shf.r.wrap.b32 	%r12164, %r12159, %r12160, 8;
	mov.b64 	%rd1939, {%r12164, %r12163};
	xor.b64  	%rd1940, %rd1938, %rd1939;
	add.s64 	%rd1941, %rd4426, %rd4408;
	add.s64 	%rd1942, %rd1941, %rd1935;
	add.s64 	%rd4408, %rd1942, %rd1940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12165,%dummy}, %rd4409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12166}, %rd4409;
	}
	shf.r.wrap.b32 	%r12167, %r12166, %r12165, 19;
	shf.r.wrap.b32 	%r12168, %r12165, %r12166, 19;
	mov.b64 	%rd1943, {%r12168, %r12167};
	shf.l.wrap.b32 	%r12169, %r12165, %r12166, 3;
	shf.l.wrap.b32 	%r12170, %r12166, %r12165, 3;
	mov.b64 	%rd1944, {%r12170, %r12169};
	shr.u64 	%rd1945, %rd4409, 6;
	xor.b64  	%rd1946, %rd1943, %rd1945;
	xor.b64  	%rd1947, %rd1946, %rd1944;
	shr.u64 	%rd1948, %rd4406, 7;
	shf.r.wrap.b32 	%r12171, %r12010, %r12009, 1;
	shf.r.wrap.b32 	%r12172, %r12009, %r12010, 1;
	mov.b64 	%rd1949, {%r12172, %r12171};
	xor.b64  	%rd1950, %rd1949, %rd1948;
	shf.r.wrap.b32 	%r12173, %r12010, %r12009, 8;
	shf.r.wrap.b32 	%r12174, %r12009, %r12010, 8;
	mov.b64 	%rd1951, {%r12174, %r12173};
	xor.b64  	%rd1952, %rd1950, %rd1951;
	add.s64 	%rd1953, %rd4427, %rd4407;
	add.s64 	%rd1954, %rd1953, %rd1947;
	add.s64 	%rd4407, %rd1954, %rd1952;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12175,%dummy}, %rd4408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12176}, %rd4408;
	}
	shf.r.wrap.b32 	%r12177, %r12176, %r12175, 19;
	shf.r.wrap.b32 	%r12178, %r12175, %r12176, 19;
	mov.b64 	%rd1955, {%r12178, %r12177};
	shf.l.wrap.b32 	%r12179, %r12175, %r12176, 3;
	shf.l.wrap.b32 	%r12180, %r12176, %r12175, 3;
	mov.b64 	%rd1956, {%r12180, %r12179};
	shr.u64 	%rd1957, %rd4408, 6;
	xor.b64  	%rd1958, %rd1955, %rd1957;
	xor.b64  	%rd1959, %rd1958, %rd1956;
	shr.u64 	%rd1960, %rd4405, 7;
	shf.r.wrap.b32 	%r12181, %r12022, %r12021, 1;
	shf.r.wrap.b32 	%r12182, %r12021, %r12022, 1;
	mov.b64 	%rd1961, {%r12182, %r12181};
	xor.b64  	%rd1962, %rd1961, %rd1960;
	shf.r.wrap.b32 	%r12183, %r12022, %r12021, 8;
	shf.r.wrap.b32 	%r12184, %r12021, %r12022, 8;
	mov.b64 	%rd1963, {%r12184, %r12183};
	xor.b64  	%rd1964, %rd1962, %rd1963;
	add.s64 	%rd1965, %rd4428, %rd4406;
	add.s64 	%rd1966, %rd1965, %rd1959;
	add.s64 	%rd4406, %rd1966, %rd1964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12185,%dummy}, %rd4407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12186}, %rd4407;
	}
	shf.r.wrap.b32 	%r12187, %r12186, %r12185, 19;
	shf.r.wrap.b32 	%r12188, %r12185, %r12186, 19;
	mov.b64 	%rd1967, {%r12188, %r12187};
	shf.l.wrap.b32 	%r12189, %r12185, %r12186, 3;
	shf.l.wrap.b32 	%r12190, %r12186, %r12185, 3;
	mov.b64 	%rd1968, {%r12190, %r12189};
	shr.u64 	%rd1969, %rd4407, 6;
	xor.b64  	%rd1970, %rd1967, %rd1969;
	xor.b64  	%rd1971, %rd1970, %rd1968;
	shf.r.wrap.b32 	%r12191, %r12034, %r12033, 1;
	shf.r.wrap.b32 	%r12192, %r12033, %r12034, 1;
	mov.b64 	%rd1972, {%r12192, %r12191};
	shf.r.wrap.b32 	%r12193, %r12034, %r12033, 8;
	shf.r.wrap.b32 	%r12194, %r12033, %r12034, 8;
	mov.b64 	%rd1973, {%r12194, %r12193};
	shr.u64 	%rd1974, %rd4421, 7;
	xor.b64  	%rd1975, %rd1972, %rd1974;
	xor.b64  	%rd1976, %rd1975, %rd1973;
	add.s64 	%rd1977, %rd4412, %rd4405;
	add.s64 	%rd1978, %rd1977, %rd1971;
	add.s64 	%rd4405, %rd1978, %rd1976;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12195,%dummy}, %rd4417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12196}, %rd4417;
	}
	shf.r.wrap.b32 	%r12197, %r12196, %r12195, 18;
	shf.r.wrap.b32 	%r12198, %r12195, %r12196, 18;
	mov.b64 	%rd1979, {%r12198, %r12197};
	shf.r.wrap.b32 	%r12199, %r12196, %r12195, 14;
	shf.r.wrap.b32 	%r12200, %r12195, %r12196, 14;
	mov.b64 	%rd1980, {%r12200, %r12199};
	xor.b64  	%rd1981, %rd1979, %rd1980;
	shf.l.wrap.b32 	%r12201, %r12195, %r12196, 23;
	shf.l.wrap.b32 	%r12202, %r12196, %r12195, 23;
	mov.b64 	%rd1982, {%r12202, %r12201};
	xor.b64  	%rd1983, %rd1981, %rd1982;
	xor.b64  	%rd1984, %rd4419, %rd4418;
	and.b64  	%rd1985, %rd1984, %rd4417;
	xor.b64  	%rd1986, %rd1985, %rd4419;
	add.s64 	%rd1987, %rd1986, %rd4420;
	add.s64 	%rd1988, %rd1987, %rd4421;
	add.s64 	%rd179, %rd4404, 128;
	ld.const.u64 	%rd1989, [%rd4404+128];
	add.s64 	%rd1990, %rd1988, %rd1989;
	add.s64 	%rd1991, %rd1990, %rd1983;
	add.s64 	%rd1992, %rd1991, %rd4416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12203}, %rd4413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12204,%dummy}, %rd4413;
	}
	shf.l.wrap.b32 	%r12205, %r12204, %r12203, 30;
	shf.l.wrap.b32 	%r12206, %r12203, %r12204, 30;
	mov.b64 	%rd1993, {%r12206, %r12205};
	shf.r.wrap.b32 	%r12207, %r12203, %r12204, 28;
	shf.r.wrap.b32 	%r12208, %r12204, %r12203, 28;
	mov.b64 	%rd1994, {%r12208, %r12207};
	xor.b64  	%rd1995, %rd1993, %rd1994;
	shf.l.wrap.b32 	%r12209, %r12204, %r12203, 25;
	shf.l.wrap.b32 	%r12210, %r12203, %r12204, 25;
	mov.b64 	%rd1996, {%r12210, %r12209};
	xor.b64  	%rd1997, %rd1995, %rd1996;
	xor.b64  	%rd1998, %rd4414, %rd4413;
	and.b64  	%rd1999, %rd1998, %rd4415;
	and.b64  	%rd2000, %rd4414, %rd4413;
	or.b64  	%rd2001, %rd1999, %rd2000;
	add.s64 	%rd2002, %rd1991, %rd2001;
	add.s64 	%rd2003, %rd2002, %rd1997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12211,%dummy}, %rd1992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12212}, %rd1992;
	}
	shf.r.wrap.b32 	%r12213, %r12212, %r12211, 14;
	shf.r.wrap.b32 	%r12214, %r12211, %r12212, 14;
	mov.b64 	%rd2004, {%r12214, %r12213};
	shf.r.wrap.b32 	%r12215, %r12212, %r12211, 18;
	shf.r.wrap.b32 	%r12216, %r12211, %r12212, 18;
	mov.b64 	%rd2005, {%r12216, %r12215};
	xor.b64  	%rd2006, %rd2005, %rd2004;
	shf.l.wrap.b32 	%r12217, %r12211, %r12212, 23;
	shf.l.wrap.b32 	%r12218, %r12212, %r12211, 23;
	mov.b64 	%rd2007, {%r12218, %r12217};
	xor.b64  	%rd2008, %rd2006, %rd2007;
	xor.b64  	%rd2009, %rd4418, %rd4417;
	and.b64  	%rd2010, %rd1992, %rd2009;
	xor.b64  	%rd2011, %rd2010, %rd4418;
	add.s64 	%rd2012, %rd4422, %rd4419;
	ld.const.u64 	%rd2013, [%rd4404+136];
	add.s64 	%rd2014, %rd2012, %rd2013;
	add.s64 	%rd2015, %rd2014, %rd2011;
	add.s64 	%rd2016, %rd2015, %rd2008;
	add.s64 	%rd2017, %rd2016, %rd4415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12219,%dummy}, %rd2003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12220}, %rd2003;
	}
	shf.r.wrap.b32 	%r12221, %r12220, %r12219, 28;
	shf.r.wrap.b32 	%r12222, %r12219, %r12220, 28;
	mov.b64 	%rd2018, {%r12222, %r12221};
	shf.l.wrap.b32 	%r12223, %r12219, %r12220, 30;
	shf.l.wrap.b32 	%r12224, %r12220, %r12219, 30;
	mov.b64 	%rd2019, {%r12224, %r12223};
	xor.b64  	%rd2020, %rd2019, %rd2018;
	shf.l.wrap.b32 	%r12225, %r12219, %r12220, 25;
	shf.l.wrap.b32 	%r12226, %r12220, %r12219, 25;
	mov.b64 	%rd2021, {%r12226, %r12225};
	xor.b64  	%rd2022, %rd2020, %rd2021;
	and.b64  	%rd2023, %rd2003, %rd4413;
	xor.b64  	%rd2024, %rd2003, %rd4413;
	and.b64  	%rd2025, %rd2024, %rd4414;
	or.b64  	%rd2026, %rd2025, %rd2023;
	add.s64 	%rd2027, %rd2016, %rd2026;
	add.s64 	%rd2028, %rd2027, %rd2022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12227,%dummy}, %rd2017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12228}, %rd2017;
	}
	shf.r.wrap.b32 	%r12229, %r12228, %r12227, 14;
	shf.r.wrap.b32 	%r12230, %r12227, %r12228, 14;
	mov.b64 	%rd2029, {%r12230, %r12229};
	shf.r.wrap.b32 	%r12231, %r12228, %r12227, 18;
	shf.r.wrap.b32 	%r12232, %r12227, %r12228, 18;
	mov.b64 	%rd2030, {%r12232, %r12231};
	xor.b64  	%rd2031, %rd2030, %rd2029;
	shf.l.wrap.b32 	%r12233, %r12227, %r12228, 23;
	shf.l.wrap.b32 	%r12234, %r12228, %r12227, 23;
	mov.b64 	%rd2032, {%r12234, %r12233};
	xor.b64  	%rd2033, %rd2031, %rd2032;
	xor.b64  	%rd2034, %rd1992, %rd4417;
	and.b64  	%rd2035, %rd2017, %rd2034;
	xor.b64  	%rd2036, %rd2035, %rd4417;
	add.s64 	%rd2037, %rd4423, %rd4418;
	ld.const.u64 	%rd2038, [%rd4404+144];
	add.s64 	%rd2039, %rd2037, %rd2038;
	add.s64 	%rd2040, %rd2039, %rd2036;
	add.s64 	%rd2041, %rd2040, %rd2033;
	add.s64 	%rd2042, %rd2041, %rd4414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12235,%dummy}, %rd2028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12236}, %rd2028;
	}
	shf.r.wrap.b32 	%r12237, %r12236, %r12235, 28;
	shf.r.wrap.b32 	%r12238, %r12235, %r12236, 28;
	mov.b64 	%rd2043, {%r12238, %r12237};
	shf.l.wrap.b32 	%r12239, %r12235, %r12236, 30;
	shf.l.wrap.b32 	%r12240, %r12236, %r12235, 30;
	mov.b64 	%rd2044, {%r12240, %r12239};
	xor.b64  	%rd2045, %rd2044, %rd2043;
	shf.l.wrap.b32 	%r12241, %r12235, %r12236, 25;
	shf.l.wrap.b32 	%r12242, %r12236, %r12235, 25;
	mov.b64 	%rd2046, {%r12242, %r12241};
	xor.b64  	%rd2047, %rd2045, %rd2046;
	and.b64  	%rd2048, %rd2028, %rd2003;
	xor.b64  	%rd2049, %rd2028, %rd2003;
	and.b64  	%rd2050, %rd2049, %rd4413;
	or.b64  	%rd2051, %rd2050, %rd2048;
	add.s64 	%rd2052, %rd2041, %rd2051;
	add.s64 	%rd2053, %rd2052, %rd2047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12243,%dummy}, %rd2042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12244}, %rd2042;
	}
	shf.r.wrap.b32 	%r12245, %r12244, %r12243, 14;
	shf.r.wrap.b32 	%r12246, %r12243, %r12244, 14;
	mov.b64 	%rd2054, {%r12246, %r12245};
	shf.r.wrap.b32 	%r12247, %r12244, %r12243, 18;
	shf.r.wrap.b32 	%r12248, %r12243, %r12244, 18;
	mov.b64 	%rd2055, {%r12248, %r12247};
	xor.b64  	%rd2056, %rd2055, %rd2054;
	shf.l.wrap.b32 	%r12249, %r12243, %r12244, 23;
	shf.l.wrap.b32 	%r12250, %r12244, %r12243, 23;
	mov.b64 	%rd2057, {%r12250, %r12249};
	xor.b64  	%rd2058, %rd2056, %rd2057;
	xor.b64  	%rd2059, %rd2017, %rd1992;
	and.b64  	%rd2060, %rd2042, %rd2059;
	xor.b64  	%rd2061, %rd2060, %rd1992;
	add.s64 	%rd2062, %rd4424, %rd4417;
	ld.const.u64 	%rd2063, [%rd4404+152];
	add.s64 	%rd2064, %rd2062, %rd2063;
	add.s64 	%rd2065, %rd2064, %rd2061;
	add.s64 	%rd2066, %rd2065, %rd2058;
	add.s64 	%rd2067, %rd2066, %rd4413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12251,%dummy}, %rd2053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12252}, %rd2053;
	}
	shf.r.wrap.b32 	%r12253, %r12252, %r12251, 28;
	shf.r.wrap.b32 	%r12254, %r12251, %r12252, 28;
	mov.b64 	%rd2068, {%r12254, %r12253};
	shf.l.wrap.b32 	%r12255, %r12251, %r12252, 30;
	shf.l.wrap.b32 	%r12256, %r12252, %r12251, 30;
	mov.b64 	%rd2069, {%r12256, %r12255};
	xor.b64  	%rd2070, %rd2069, %rd2068;
	shf.l.wrap.b32 	%r12257, %r12251, %r12252, 25;
	shf.l.wrap.b32 	%r12258, %r12252, %r12251, 25;
	mov.b64 	%rd2071, {%r12258, %r12257};
	xor.b64  	%rd2072, %rd2070, %rd2071;
	and.b64  	%rd2073, %rd2053, %rd2028;
	xor.b64  	%rd2074, %rd2053, %rd2028;
	and.b64  	%rd2075, %rd2074, %rd2003;
	or.b64  	%rd2076, %rd2075, %rd2073;
	add.s64 	%rd2077, %rd2066, %rd2076;
	add.s64 	%rd2078, %rd2077, %rd2072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12259,%dummy}, %rd2067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12260}, %rd2067;
	}
	shf.r.wrap.b32 	%r12261, %r12260, %r12259, 14;
	shf.r.wrap.b32 	%r12262, %r12259, %r12260, 14;
	mov.b64 	%rd2079, {%r12262, %r12261};
	shf.r.wrap.b32 	%r12263, %r12260, %r12259, 18;
	shf.r.wrap.b32 	%r12264, %r12259, %r12260, 18;
	mov.b64 	%rd2080, {%r12264, %r12263};
	xor.b64  	%rd2081, %rd2080, %rd2079;
	shf.l.wrap.b32 	%r12265, %r12259, %r12260, 23;
	shf.l.wrap.b32 	%r12266, %r12260, %r12259, 23;
	mov.b64 	%rd2082, {%r12266, %r12265};
	xor.b64  	%rd2083, %rd2081, %rd2082;
	xor.b64  	%rd2084, %rd2042, %rd2017;
	and.b64  	%rd2085, %rd2067, %rd2084;
	xor.b64  	%rd2086, %rd2085, %rd2017;
	add.s64 	%rd2087, %rd1992, %rd4425;
	ld.const.u64 	%rd2088, [%rd4404+160];
	add.s64 	%rd2089, %rd2087, %rd2088;
	add.s64 	%rd2090, %rd2089, %rd2086;
	add.s64 	%rd2091, %rd2090, %rd2083;
	add.s64 	%rd2092, %rd2091, %rd2003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12267,%dummy}, %rd2078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12268}, %rd2078;
	}
	shf.r.wrap.b32 	%r12269, %r12268, %r12267, 28;
	shf.r.wrap.b32 	%r12270, %r12267, %r12268, 28;
	mov.b64 	%rd2093, {%r12270, %r12269};
	shf.l.wrap.b32 	%r12271, %r12267, %r12268, 30;
	shf.l.wrap.b32 	%r12272, %r12268, %r12267, 30;
	mov.b64 	%rd2094, {%r12272, %r12271};
	xor.b64  	%rd2095, %rd2094, %rd2093;
	shf.l.wrap.b32 	%r12273, %r12267, %r12268, 25;
	shf.l.wrap.b32 	%r12274, %r12268, %r12267, 25;
	mov.b64 	%rd2096, {%r12274, %r12273};
	xor.b64  	%rd2097, %rd2095, %rd2096;
	and.b64  	%rd2098, %rd2078, %rd2053;
	xor.b64  	%rd2099, %rd2078, %rd2053;
	and.b64  	%rd2100, %rd2099, %rd2028;
	or.b64  	%rd2101, %rd2100, %rd2098;
	add.s64 	%rd2102, %rd2091, %rd2101;
	add.s64 	%rd2103, %rd2102, %rd2097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12275,%dummy}, %rd2092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12276}, %rd2092;
	}
	shf.r.wrap.b32 	%r12277, %r12276, %r12275, 14;
	shf.r.wrap.b32 	%r12278, %r12275, %r12276, 14;
	mov.b64 	%rd2104, {%r12278, %r12277};
	shf.r.wrap.b32 	%r12279, %r12276, %r12275, 18;
	shf.r.wrap.b32 	%r12280, %r12275, %r12276, 18;
	mov.b64 	%rd2105, {%r12280, %r12279};
	xor.b64  	%rd2106, %rd2105, %rd2104;
	shf.l.wrap.b32 	%r12281, %r12275, %r12276, 23;
	shf.l.wrap.b32 	%r12282, %r12276, %r12275, 23;
	mov.b64 	%rd2107, {%r12282, %r12281};
	xor.b64  	%rd2108, %rd2106, %rd2107;
	xor.b64  	%rd2109, %rd2067, %rd2042;
	and.b64  	%rd2110, %rd2092, %rd2109;
	xor.b64  	%rd2111, %rd2110, %rd2042;
	add.s64 	%rd2112, %rd2017, %rd4426;
	ld.const.u64 	%rd2113, [%rd4404+168];
	add.s64 	%rd2114, %rd2112, %rd2113;
	add.s64 	%rd2115, %rd2114, %rd2111;
	add.s64 	%rd2116, %rd2115, %rd2108;
	add.s64 	%rd2117, %rd2116, %rd2028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12283,%dummy}, %rd2103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12284}, %rd2103;
	}
	shf.r.wrap.b32 	%r12285, %r12284, %r12283, 28;
	shf.r.wrap.b32 	%r12286, %r12283, %r12284, 28;
	mov.b64 	%rd2118, {%r12286, %r12285};
	shf.l.wrap.b32 	%r12287, %r12283, %r12284, 30;
	shf.l.wrap.b32 	%r12288, %r12284, %r12283, 30;
	mov.b64 	%rd2119, {%r12288, %r12287};
	xor.b64  	%rd2120, %rd2119, %rd2118;
	shf.l.wrap.b32 	%r12289, %r12283, %r12284, 25;
	shf.l.wrap.b32 	%r12290, %r12284, %r12283, 25;
	mov.b64 	%rd2121, {%r12290, %r12289};
	xor.b64  	%rd2122, %rd2120, %rd2121;
	and.b64  	%rd2123, %rd2103, %rd2078;
	xor.b64  	%rd2124, %rd2103, %rd2078;
	and.b64  	%rd2125, %rd2124, %rd2053;
	or.b64  	%rd2126, %rd2125, %rd2123;
	add.s64 	%rd2127, %rd2116, %rd2126;
	add.s64 	%rd2128, %rd2127, %rd2122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12291,%dummy}, %rd2117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12292}, %rd2117;
	}
	shf.r.wrap.b32 	%r12293, %r12292, %r12291, 14;
	shf.r.wrap.b32 	%r12294, %r12291, %r12292, 14;
	mov.b64 	%rd2129, {%r12294, %r12293};
	shf.r.wrap.b32 	%r12295, %r12292, %r12291, 18;
	shf.r.wrap.b32 	%r12296, %r12291, %r12292, 18;
	mov.b64 	%rd2130, {%r12296, %r12295};
	xor.b64  	%rd2131, %rd2130, %rd2129;
	shf.l.wrap.b32 	%r12297, %r12291, %r12292, 23;
	shf.l.wrap.b32 	%r12298, %r12292, %r12291, 23;
	mov.b64 	%rd2132, {%r12298, %r12297};
	xor.b64  	%rd2133, %rd2131, %rd2132;
	xor.b64  	%rd2134, %rd2092, %rd2067;
	and.b64  	%rd2135, %rd2117, %rd2134;
	xor.b64  	%rd2136, %rd2135, %rd2067;
	add.s64 	%rd2137, %rd2042, %rd4427;
	ld.const.u64 	%rd2138, [%rd4404+176];
	add.s64 	%rd2139, %rd2137, %rd2138;
	add.s64 	%rd2140, %rd2139, %rd2136;
	add.s64 	%rd2141, %rd2140, %rd2133;
	add.s64 	%rd2142, %rd2141, %rd2053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12299,%dummy}, %rd2128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12300}, %rd2128;
	}
	shf.r.wrap.b32 	%r12301, %r12300, %r12299, 28;
	shf.r.wrap.b32 	%r12302, %r12299, %r12300, 28;
	mov.b64 	%rd2143, {%r12302, %r12301};
	shf.l.wrap.b32 	%r12303, %r12299, %r12300, 30;
	shf.l.wrap.b32 	%r12304, %r12300, %r12299, 30;
	mov.b64 	%rd2144, {%r12304, %r12303};
	xor.b64  	%rd2145, %rd2144, %rd2143;
	shf.l.wrap.b32 	%r12305, %r12299, %r12300, 25;
	shf.l.wrap.b32 	%r12306, %r12300, %r12299, 25;
	mov.b64 	%rd2146, {%r12306, %r12305};
	xor.b64  	%rd2147, %rd2145, %rd2146;
	and.b64  	%rd2148, %rd2128, %rd2103;
	xor.b64  	%rd2149, %rd2128, %rd2103;
	and.b64  	%rd2150, %rd2149, %rd2078;
	or.b64  	%rd2151, %rd2150, %rd2148;
	add.s64 	%rd2152, %rd2141, %rd2151;
	add.s64 	%rd2153, %rd2152, %rd2147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12307,%dummy}, %rd2142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12308}, %rd2142;
	}
	shf.r.wrap.b32 	%r12309, %r12308, %r12307, 14;
	shf.r.wrap.b32 	%r12310, %r12307, %r12308, 14;
	mov.b64 	%rd2154, {%r12310, %r12309};
	shf.r.wrap.b32 	%r12311, %r12308, %r12307, 18;
	shf.r.wrap.b32 	%r12312, %r12307, %r12308, 18;
	mov.b64 	%rd2155, {%r12312, %r12311};
	xor.b64  	%rd2156, %rd2155, %rd2154;
	shf.l.wrap.b32 	%r12313, %r12307, %r12308, 23;
	shf.l.wrap.b32 	%r12314, %r12308, %r12307, 23;
	mov.b64 	%rd2157, {%r12314, %r12313};
	xor.b64  	%rd2158, %rd2156, %rd2157;
	xor.b64  	%rd2159, %rd2117, %rd2092;
	and.b64  	%rd2160, %rd2142, %rd2159;
	xor.b64  	%rd2161, %rd2160, %rd2092;
	add.s64 	%rd2162, %rd2067, %rd4428;
	ld.const.u64 	%rd2163, [%rd4404+184];
	add.s64 	%rd2164, %rd2162, %rd2163;
	add.s64 	%rd2165, %rd2164, %rd2161;
	add.s64 	%rd2166, %rd2165, %rd2158;
	add.s64 	%rd2167, %rd2166, %rd2078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12315,%dummy}, %rd2153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12316}, %rd2153;
	}
	shf.r.wrap.b32 	%r12317, %r12316, %r12315, 28;
	shf.r.wrap.b32 	%r12318, %r12315, %r12316, 28;
	mov.b64 	%rd2168, {%r12318, %r12317};
	shf.l.wrap.b32 	%r12319, %r12315, %r12316, 30;
	shf.l.wrap.b32 	%r12320, %r12316, %r12315, 30;
	mov.b64 	%rd2169, {%r12320, %r12319};
	xor.b64  	%rd2170, %rd2169, %rd2168;
	shf.l.wrap.b32 	%r12321, %r12315, %r12316, 25;
	shf.l.wrap.b32 	%r12322, %r12316, %r12315, 25;
	mov.b64 	%rd2171, {%r12322, %r12321};
	xor.b64  	%rd2172, %rd2170, %rd2171;
	and.b64  	%rd2173, %rd2153, %rd2128;
	xor.b64  	%rd2174, %rd2153, %rd2128;
	and.b64  	%rd2175, %rd2174, %rd2103;
	or.b64  	%rd2176, %rd2175, %rd2173;
	add.s64 	%rd2177, %rd2166, %rd2176;
	add.s64 	%rd2178, %rd2177, %rd2172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12323,%dummy}, %rd2167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12324}, %rd2167;
	}
	shf.r.wrap.b32 	%r12325, %r12324, %r12323, 14;
	shf.r.wrap.b32 	%r12326, %r12323, %r12324, 14;
	mov.b64 	%rd2179, {%r12326, %r12325};
	shf.r.wrap.b32 	%r12327, %r12324, %r12323, 18;
	shf.r.wrap.b32 	%r12328, %r12323, %r12324, 18;
	mov.b64 	%rd2180, {%r12328, %r12327};
	xor.b64  	%rd2181, %rd2180, %rd2179;
	shf.l.wrap.b32 	%r12329, %r12323, %r12324, 23;
	shf.l.wrap.b32 	%r12330, %r12324, %r12323, 23;
	mov.b64 	%rd2182, {%r12330, %r12329};
	xor.b64  	%rd2183, %rd2181, %rd2182;
	xor.b64  	%rd2184, %rd2142, %rd2117;
	and.b64  	%rd2185, %rd2167, %rd2184;
	xor.b64  	%rd2186, %rd2185, %rd2117;
	add.s64 	%rd2187, %rd2092, %rd4412;
	ld.const.u64 	%rd2188, [%rd4404+192];
	add.s64 	%rd2189, %rd2187, %rd2188;
	add.s64 	%rd2190, %rd2189, %rd2186;
	add.s64 	%rd2191, %rd2190, %rd2183;
	add.s64 	%rd2192, %rd2191, %rd2103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12331,%dummy}, %rd2178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12332}, %rd2178;
	}
	shf.r.wrap.b32 	%r12333, %r12332, %r12331, 28;
	shf.r.wrap.b32 	%r12334, %r12331, %r12332, 28;
	mov.b64 	%rd2193, {%r12334, %r12333};
	shf.l.wrap.b32 	%r12335, %r12331, %r12332, 30;
	shf.l.wrap.b32 	%r12336, %r12332, %r12331, 30;
	mov.b64 	%rd2194, {%r12336, %r12335};
	xor.b64  	%rd2195, %rd2194, %rd2193;
	shf.l.wrap.b32 	%r12337, %r12331, %r12332, 25;
	shf.l.wrap.b32 	%r12338, %r12332, %r12331, 25;
	mov.b64 	%rd2196, {%r12338, %r12337};
	xor.b64  	%rd2197, %rd2195, %rd2196;
	and.b64  	%rd2198, %rd2178, %rd2153;
	xor.b64  	%rd2199, %rd2178, %rd2153;
	and.b64  	%rd2200, %rd2199, %rd2128;
	or.b64  	%rd2201, %rd2200, %rd2198;
	add.s64 	%rd2202, %rd2191, %rd2201;
	add.s64 	%rd2203, %rd2202, %rd2197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12339,%dummy}, %rd2192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12340}, %rd2192;
	}
	shf.r.wrap.b32 	%r12341, %r12340, %r12339, 14;
	shf.r.wrap.b32 	%r12342, %r12339, %r12340, 14;
	mov.b64 	%rd2204, {%r12342, %r12341};
	shf.r.wrap.b32 	%r12343, %r12340, %r12339, 18;
	shf.r.wrap.b32 	%r12344, %r12339, %r12340, 18;
	mov.b64 	%rd2205, {%r12344, %r12343};
	xor.b64  	%rd2206, %rd2205, %rd2204;
	shf.l.wrap.b32 	%r12345, %r12339, %r12340, 23;
	shf.l.wrap.b32 	%r12346, %r12340, %r12339, 23;
	mov.b64 	%rd2207, {%r12346, %r12345};
	xor.b64  	%rd2208, %rd2206, %rd2207;
	xor.b64  	%rd2209, %rd2167, %rd2142;
	and.b64  	%rd2210, %rd2192, %rd2209;
	xor.b64  	%rd2211, %rd2210, %rd2142;
	add.s64 	%rd2212, %rd2117, %rd4411;
	ld.const.u64 	%rd2213, [%rd4404+200];
	add.s64 	%rd2214, %rd2212, %rd2213;
	add.s64 	%rd2215, %rd2214, %rd2211;
	add.s64 	%rd2216, %rd2215, %rd2208;
	add.s64 	%rd2217, %rd2216, %rd2128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12347,%dummy}, %rd2203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12348}, %rd2203;
	}
	shf.r.wrap.b32 	%r12349, %r12348, %r12347, 28;
	shf.r.wrap.b32 	%r12350, %r12347, %r12348, 28;
	mov.b64 	%rd2218, {%r12350, %r12349};
	shf.l.wrap.b32 	%r12351, %r12347, %r12348, 30;
	shf.l.wrap.b32 	%r12352, %r12348, %r12347, 30;
	mov.b64 	%rd2219, {%r12352, %r12351};
	xor.b64  	%rd2220, %rd2219, %rd2218;
	shf.l.wrap.b32 	%r12353, %r12347, %r12348, 25;
	shf.l.wrap.b32 	%r12354, %r12348, %r12347, 25;
	mov.b64 	%rd2221, {%r12354, %r12353};
	xor.b64  	%rd2222, %rd2220, %rd2221;
	and.b64  	%rd2223, %rd2203, %rd2178;
	xor.b64  	%rd2224, %rd2203, %rd2178;
	and.b64  	%rd2225, %rd2224, %rd2153;
	or.b64  	%rd2226, %rd2225, %rd2223;
	add.s64 	%rd2227, %rd2216, %rd2226;
	add.s64 	%rd2228, %rd2227, %rd2222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12355,%dummy}, %rd2217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12356}, %rd2217;
	}
	shf.r.wrap.b32 	%r12357, %r12356, %r12355, 14;
	shf.r.wrap.b32 	%r12358, %r12355, %r12356, 14;
	mov.b64 	%rd2229, {%r12358, %r12357};
	shf.r.wrap.b32 	%r12359, %r12356, %r12355, 18;
	shf.r.wrap.b32 	%r12360, %r12355, %r12356, 18;
	mov.b64 	%rd2230, {%r12360, %r12359};
	xor.b64  	%rd2231, %rd2230, %rd2229;
	shf.l.wrap.b32 	%r12361, %r12355, %r12356, 23;
	shf.l.wrap.b32 	%r12362, %r12356, %r12355, 23;
	mov.b64 	%rd2232, {%r12362, %r12361};
	xor.b64  	%rd2233, %rd2231, %rd2232;
	xor.b64  	%rd2234, %rd2192, %rd2167;
	and.b64  	%rd2235, %rd2217, %rd2234;
	xor.b64  	%rd2236, %rd2235, %rd2167;
	add.s64 	%rd2237, %rd2142, %rd4410;
	ld.const.u64 	%rd2238, [%rd4404+208];
	add.s64 	%rd2239, %rd2237, %rd2238;
	add.s64 	%rd2240, %rd2239, %rd2236;
	add.s64 	%rd2241, %rd2240, %rd2233;
	add.s64 	%rd2242, %rd2241, %rd2153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12363,%dummy}, %rd2228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12364}, %rd2228;
	}
	shf.r.wrap.b32 	%r12365, %r12364, %r12363, 28;
	shf.r.wrap.b32 	%r12366, %r12363, %r12364, 28;
	mov.b64 	%rd2243, {%r12366, %r12365};
	shf.l.wrap.b32 	%r12367, %r12363, %r12364, 30;
	shf.l.wrap.b32 	%r12368, %r12364, %r12363, 30;
	mov.b64 	%rd2244, {%r12368, %r12367};
	xor.b64  	%rd2245, %rd2244, %rd2243;
	shf.l.wrap.b32 	%r12369, %r12363, %r12364, 25;
	shf.l.wrap.b32 	%r12370, %r12364, %r12363, 25;
	mov.b64 	%rd2246, {%r12370, %r12369};
	xor.b64  	%rd2247, %rd2245, %rd2246;
	and.b64  	%rd2248, %rd2228, %rd2203;
	xor.b64  	%rd2249, %rd2228, %rd2203;
	and.b64  	%rd2250, %rd2249, %rd2178;
	or.b64  	%rd2251, %rd2250, %rd2248;
	add.s64 	%rd2252, %rd2241, %rd2251;
	add.s64 	%rd2253, %rd2252, %rd2247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12371,%dummy}, %rd2242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12372}, %rd2242;
	}
	shf.r.wrap.b32 	%r12373, %r12372, %r12371, 14;
	shf.r.wrap.b32 	%r12374, %r12371, %r12372, 14;
	mov.b64 	%rd2254, {%r12374, %r12373};
	shf.r.wrap.b32 	%r12375, %r12372, %r12371, 18;
	shf.r.wrap.b32 	%r12376, %r12371, %r12372, 18;
	mov.b64 	%rd2255, {%r12376, %r12375};
	xor.b64  	%rd2256, %rd2255, %rd2254;
	shf.l.wrap.b32 	%r12377, %r12371, %r12372, 23;
	shf.l.wrap.b32 	%r12378, %r12372, %r12371, 23;
	mov.b64 	%rd2257, {%r12378, %r12377};
	xor.b64  	%rd2258, %rd2256, %rd2257;
	xor.b64  	%rd2259, %rd2217, %rd2192;
	and.b64  	%rd2260, %rd2242, %rd2259;
	xor.b64  	%rd2261, %rd2260, %rd2192;
	add.s64 	%rd2262, %rd2167, %rd4409;
	ld.const.u64 	%rd2263, [%rd4404+216];
	add.s64 	%rd2264, %rd2262, %rd2263;
	add.s64 	%rd2265, %rd2264, %rd2261;
	add.s64 	%rd2266, %rd2265, %rd2258;
	add.s64 	%rd2267, %rd2266, %rd2178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12379,%dummy}, %rd2253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12380}, %rd2253;
	}
	shf.r.wrap.b32 	%r12381, %r12380, %r12379, 28;
	shf.r.wrap.b32 	%r12382, %r12379, %r12380, 28;
	mov.b64 	%rd2268, {%r12382, %r12381};
	shf.l.wrap.b32 	%r12383, %r12379, %r12380, 30;
	shf.l.wrap.b32 	%r12384, %r12380, %r12379, 30;
	mov.b64 	%rd2269, {%r12384, %r12383};
	xor.b64  	%rd2270, %rd2269, %rd2268;
	shf.l.wrap.b32 	%r12385, %r12379, %r12380, 25;
	shf.l.wrap.b32 	%r12386, %r12380, %r12379, 25;
	mov.b64 	%rd2271, {%r12386, %r12385};
	xor.b64  	%rd2272, %rd2270, %rd2271;
	and.b64  	%rd2273, %rd2253, %rd2228;
	xor.b64  	%rd2274, %rd2253, %rd2228;
	and.b64  	%rd2275, %rd2274, %rd2203;
	or.b64  	%rd2276, %rd2275, %rd2273;
	add.s64 	%rd2277, %rd2266, %rd2276;
	add.s64 	%rd2278, %rd2277, %rd2272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12387,%dummy}, %rd2267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12388}, %rd2267;
	}
	shf.r.wrap.b32 	%r12389, %r12388, %r12387, 14;
	shf.r.wrap.b32 	%r12390, %r12387, %r12388, 14;
	mov.b64 	%rd2279, {%r12390, %r12389};
	shf.r.wrap.b32 	%r12391, %r12388, %r12387, 18;
	shf.r.wrap.b32 	%r12392, %r12387, %r12388, 18;
	mov.b64 	%rd2280, {%r12392, %r12391};
	xor.b64  	%rd2281, %rd2280, %rd2279;
	shf.l.wrap.b32 	%r12393, %r12387, %r12388, 23;
	shf.l.wrap.b32 	%r12394, %r12388, %r12387, 23;
	mov.b64 	%rd2282, {%r12394, %r12393};
	xor.b64  	%rd2283, %rd2281, %rd2282;
	xor.b64  	%rd2284, %rd2242, %rd2217;
	and.b64  	%rd2285, %rd2267, %rd2284;
	xor.b64  	%rd2286, %rd2285, %rd2217;
	add.s64 	%rd2287, %rd2192, %rd4408;
	ld.const.u64 	%rd2288, [%rd4404+224];
	add.s64 	%rd2289, %rd2287, %rd2288;
	add.s64 	%rd2290, %rd2289, %rd2286;
	add.s64 	%rd2291, %rd2290, %rd2283;
	add.s64 	%rd4420, %rd2291, %rd2203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12395,%dummy}, %rd2278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12396}, %rd2278;
	}
	shf.r.wrap.b32 	%r12397, %r12396, %r12395, 28;
	shf.r.wrap.b32 	%r12398, %r12395, %r12396, 28;
	mov.b64 	%rd2292, {%r12398, %r12397};
	shf.l.wrap.b32 	%r12399, %r12395, %r12396, 30;
	shf.l.wrap.b32 	%r12400, %r12396, %r12395, 30;
	mov.b64 	%rd2293, {%r12400, %r12399};
	xor.b64  	%rd2294, %rd2293, %rd2292;
	shf.l.wrap.b32 	%r12401, %r12395, %r12396, 25;
	shf.l.wrap.b32 	%r12402, %r12396, %r12395, 25;
	mov.b64 	%rd2295, {%r12402, %r12401};
	xor.b64  	%rd2296, %rd2294, %rd2295;
	and.b64  	%rd2297, %rd2278, %rd2253;
	xor.b64  	%rd2298, %rd2278, %rd2253;
	and.b64  	%rd2299, %rd2298, %rd2228;
	or.b64  	%rd2300, %rd2299, %rd2297;
	add.s64 	%rd2301, %rd2291, %rd2300;
	add.s64 	%rd4416, %rd2301, %rd2296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12403,%dummy}, %rd4420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12404}, %rd4420;
	}
	shf.r.wrap.b32 	%r12405, %r12404, %r12403, 14;
	shf.r.wrap.b32 	%r12406, %r12403, %r12404, 14;
	mov.b64 	%rd2302, {%r12406, %r12405};
	shf.r.wrap.b32 	%r12407, %r12404, %r12403, 18;
	shf.r.wrap.b32 	%r12408, %r12403, %r12404, 18;
	mov.b64 	%rd2303, {%r12408, %r12407};
	xor.b64  	%rd2304, %rd2303, %rd2302;
	shf.l.wrap.b32 	%r12409, %r12403, %r12404, 23;
	shf.l.wrap.b32 	%r12410, %r12404, %r12403, 23;
	mov.b64 	%rd2305, {%r12410, %r12409};
	xor.b64  	%rd2306, %rd2304, %rd2305;
	xor.b64  	%rd2307, %rd2267, %rd2242;
	and.b64  	%rd2308, %rd4420, %rd2307;
	xor.b64  	%rd2309, %rd2308, %rd2242;
	add.s64 	%rd2310, %rd2217, %rd4407;
	ld.const.u64 	%rd2311, [%rd4404+232];
	add.s64 	%rd2312, %rd2310, %rd2311;
	add.s64 	%rd2313, %rd2312, %rd2309;
	add.s64 	%rd2314, %rd2313, %rd2306;
	add.s64 	%rd4419, %rd2314, %rd2228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12411,%dummy}, %rd4416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12412}, %rd4416;
	}
	shf.r.wrap.b32 	%r12413, %r12412, %r12411, 28;
	shf.r.wrap.b32 	%r12414, %r12411, %r12412, 28;
	mov.b64 	%rd2315, {%r12414, %r12413};
	shf.l.wrap.b32 	%r12415, %r12411, %r12412, 30;
	shf.l.wrap.b32 	%r12416, %r12412, %r12411, 30;
	mov.b64 	%rd2316, {%r12416, %r12415};
	xor.b64  	%rd2317, %rd2316, %rd2315;
	shf.l.wrap.b32 	%r12417, %r12411, %r12412, 25;
	shf.l.wrap.b32 	%r12418, %r12412, %r12411, 25;
	mov.b64 	%rd2318, {%r12418, %r12417};
	xor.b64  	%rd2319, %rd2317, %rd2318;
	and.b64  	%rd2320, %rd4416, %rd2278;
	xor.b64  	%rd2321, %rd4416, %rd2278;
	and.b64  	%rd2322, %rd2321, %rd2253;
	or.b64  	%rd2323, %rd2322, %rd2320;
	add.s64 	%rd2324, %rd2314, %rd2323;
	add.s64 	%rd4415, %rd2324, %rd2319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12419,%dummy}, %rd4419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12420}, %rd4419;
	}
	shf.r.wrap.b32 	%r12421, %r12420, %r12419, 14;
	shf.r.wrap.b32 	%r12422, %r12419, %r12420, 14;
	mov.b64 	%rd2325, {%r12422, %r12421};
	shf.r.wrap.b32 	%r12423, %r12420, %r12419, 18;
	shf.r.wrap.b32 	%r12424, %r12419, %r12420, 18;
	mov.b64 	%rd2326, {%r12424, %r12423};
	xor.b64  	%rd2327, %rd2326, %rd2325;
	shf.l.wrap.b32 	%r12425, %r12419, %r12420, 23;
	shf.l.wrap.b32 	%r12426, %r12420, %r12419, 23;
	mov.b64 	%rd2328, {%r12426, %r12425};
	xor.b64  	%rd2329, %rd2327, %rd2328;
	xor.b64  	%rd2330, %rd4420, %rd2267;
	and.b64  	%rd2331, %rd4419, %rd2330;
	xor.b64  	%rd2332, %rd2331, %rd2267;
	add.s64 	%rd2333, %rd2242, %rd4406;
	ld.const.u64 	%rd2334, [%rd4404+240];
	add.s64 	%rd2335, %rd2333, %rd2334;
	add.s64 	%rd2336, %rd2335, %rd2332;
	add.s64 	%rd2337, %rd2336, %rd2329;
	add.s64 	%rd4418, %rd2337, %rd2253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12427,%dummy}, %rd4415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12428}, %rd4415;
	}
	shf.r.wrap.b32 	%r12429, %r12428, %r12427, 28;
	shf.r.wrap.b32 	%r12430, %r12427, %r12428, 28;
	mov.b64 	%rd2338, {%r12430, %r12429};
	shf.l.wrap.b32 	%r12431, %r12427, %r12428, 30;
	shf.l.wrap.b32 	%r12432, %r12428, %r12427, 30;
	mov.b64 	%rd2339, {%r12432, %r12431};
	xor.b64  	%rd2340, %rd2339, %rd2338;
	shf.l.wrap.b32 	%r12433, %r12427, %r12428, 25;
	shf.l.wrap.b32 	%r12434, %r12428, %r12427, 25;
	mov.b64 	%rd2341, {%r12434, %r12433};
	xor.b64  	%rd2342, %rd2340, %rd2341;
	and.b64  	%rd2343, %rd4415, %rd4416;
	xor.b64  	%rd2344, %rd4415, %rd4416;
	and.b64  	%rd2345, %rd2344, %rd2278;
	or.b64  	%rd2346, %rd2345, %rd2343;
	add.s64 	%rd2347, %rd2337, %rd2346;
	add.s64 	%rd4414, %rd2347, %rd2342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12435,%dummy}, %rd4418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12436}, %rd4418;
	}
	shf.r.wrap.b32 	%r12437, %r12436, %r12435, 14;
	shf.r.wrap.b32 	%r12438, %r12435, %r12436, 14;
	mov.b64 	%rd2348, {%r12438, %r12437};
	shf.r.wrap.b32 	%r12439, %r12436, %r12435, 18;
	shf.r.wrap.b32 	%r12440, %r12435, %r12436, 18;
	mov.b64 	%rd2349, {%r12440, %r12439};
	xor.b64  	%rd2350, %rd2349, %rd2348;
	shf.l.wrap.b32 	%r12441, %r12435, %r12436, 23;
	shf.l.wrap.b32 	%r12442, %r12436, %r12435, 23;
	mov.b64 	%rd2351, {%r12442, %r12441};
	xor.b64  	%rd2352, %rd2350, %rd2351;
	xor.b64  	%rd2353, %rd4419, %rd4420;
	and.b64  	%rd2354, %rd4418, %rd2353;
	xor.b64  	%rd2355, %rd2354, %rd4420;
	add.s64 	%rd2356, %rd2267, %rd4405;
	ld.const.u64 	%rd2357, [%rd4404+248];
	add.s64 	%rd2358, %rd2356, %rd2357;
	add.s64 	%rd2359, %rd2358, %rd2355;
	add.s64 	%rd2360, %rd2359, %rd2352;
	add.s64 	%rd4417, %rd2360, %rd2278;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12443,%dummy}, %rd4414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12444}, %rd4414;
	}
	shf.r.wrap.b32 	%r12445, %r12444, %r12443, 28;
	shf.r.wrap.b32 	%r12446, %r12443, %r12444, 28;
	mov.b64 	%rd2361, {%r12446, %r12445};
	shf.l.wrap.b32 	%r12447, %r12443, %r12444, 30;
	shf.l.wrap.b32 	%r12448, %r12444, %r12443, 30;
	mov.b64 	%rd2362, {%r12448, %r12447};
	xor.b64  	%rd2363, %rd2362, %rd2361;
	shf.l.wrap.b32 	%r12449, %r12443, %r12444, 25;
	shf.l.wrap.b32 	%r12450, %r12444, %r12443, 25;
	mov.b64 	%rd2364, {%r12450, %r12449};
	xor.b64  	%rd2365, %rd2363, %rd2364;
	and.b64  	%rd2366, %rd4414, %rd4415;
	xor.b64  	%rd2367, %rd4414, %rd4415;
	and.b64  	%rd2368, %rd2367, %rd4416;
	or.b64  	%rd2369, %rd2368, %rd2366;
	add.s64 	%rd2370, %rd2360, %rd2369;
	add.s64 	%rd4413, %rd2370, %rd2365;
	add.s32 	%r19393, %r19393, 16;
	setp.lt.s32	%p100, %r19393, 80;
	mov.u64 	%rd4404, %rd179;
	@%p100 bra 	BB2_212;

	add.s64 	%rd2371, %rd4413, %rd119;
	st.local.u64 	[%rd1], %rd2371;
	add.s64 	%rd2372, %rd4414, %rd120;
	st.local.u64 	[%rd1+8], %rd2372;
	add.s64 	%rd2373, %rd4415, %rd121;
	st.local.u64 	[%rd1+16], %rd2373;
	add.s64 	%rd2374, %rd4416, %rd118;
	st.local.u64 	[%rd1+24], %rd2374;
	add.s64 	%rd2375, %rd4417, %rd114;
	st.local.u64 	[%rd1+32], %rd2375;
	add.s64 	%rd2376, %rd4418, %rd116;
	st.local.u64 	[%rd1+40], %rd2376;
	add.s64 	%rd2377, %rd4419, %rd115;
	st.local.u64 	[%rd1+48], %rd2377;
	add.s64 	%rd2378, %rd4420, %rd117;
	st.local.u64 	[%rd1+56], %rd2378;
	mov.u32 	%r12451, 0;
	st.local.u32 	[%rd1+64], %r12451;
	st.local.u32 	[%rd1+68], %r12451;
	st.local.u32 	[%rd1+72], %r12451;
	st.local.u32 	[%rd1+76], %r12451;
	st.local.u32 	[%rd1+80], %r12451;
	st.local.u32 	[%rd1+84], %r12451;
	st.local.u32 	[%rd1+88], %r12451;
	st.local.u32 	[%rd1+92], %r12451;
	st.local.u32 	[%rd1+96], %r12451;
	st.local.u32 	[%rd1+100], %r12451;
	st.local.u32 	[%rd1+104], %r12451;
	st.local.u32 	[%rd1+108], %r12451;
	st.local.u32 	[%rd1+112], %r12451;
	st.local.u32 	[%rd1+116], %r12451;
	st.local.u32 	[%rd1+120], %r12451;
	st.local.u32 	[%rd1+124], %r12451;
	st.local.u32 	[%rd1+128], %r12451;
	st.local.u32 	[%rd1+132], %r12451;
	st.local.u32 	[%rd1+136], %r12451;
	st.local.u32 	[%rd1+140], %r12451;
	st.local.u32 	[%rd1+144], %r12451;
	st.local.u32 	[%rd1+148], %r12451;
	st.local.u32 	[%rd1+152], %r12451;
	st.local.u32 	[%rd1+156], %r12451;
	st.local.u32 	[%rd1+160], %r12451;
	st.local.u32 	[%rd1+164], %r12451;
	st.local.u32 	[%rd1+168], %r12451;
	st.local.u32 	[%rd1+172], %r12451;
	st.local.u32 	[%rd1+176], %r12451;
	mov.u64 	%rd2379, 0;
	st.local.u32 	[%rd1+184], %rd2379;
	st.local.u32 	[%rd1+180], %rd2379;
	st.local.u32 	[%rd1+188], %r12451;
	bra.uni 	BB2_214;

BB2_4:
	mov.u32 	%r19328, 0;
	setp.gt.s32	%p4, %r70, 15;
	@%p4 bra 	BB2_37;

	setp.gt.s32	%p28, %r70, 7;
	@%p28 bra 	BB2_22;

	setp.gt.s32	%p40, %r70, 3;
	@%p40 bra 	BB2_14;

	setp.gt.s32	%p46, %r70, 1;
	@%p46 bra 	BB2_11;

	setp.eq.s32	%p49, %r70, 0;
	@%p49 bra 	BB2_89;
	bra.uni 	BB2_9;

BB2_89:
	mov.u32 	%r19328, 0;
	// inline asm
	prmt.b32 %r19331, %r19328, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3012, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3010, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3008, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3006, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3004, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3002, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3000, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2998, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2996, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2994, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2992, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19296, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19297, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19298, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19327, %r2984, %r19328, %r71;
	// inline asm
	mov.u32 	%r19329, %r19328;
	mov.u32 	%r19330, %r19328;
	bra.uni 	BB2_90;

BB2_126:
	setp.gt.s32	%p53, %r70, 23;
	@%p53 bra 	BB2_142;

	setp.gt.s32	%p65, %r70, 19;
	@%p65 bra 	BB2_135;

	setp.gt.s32	%p71, %r70, 17;
	@%p71 bra 	BB2_132;

	setp.eq.s32	%p74, %r70, 16;
	@%p74 bra 	BB2_183;
	bra.uni 	BB2_130;

BB2_183:
	// inline asm
	prmt.b32 %r3046, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r2990, 0;
	// inline asm
	prmt.b32 %r3016, %r2984, %r2990, %r71;
	// inline asm
	mov.u32 	%r2988, %r2990;
	mov.u32 	%r2986, %r2990;
	mov.u32 	%r2998, %r2990;
	mov.u32 	%r2996, %r2990;
	mov.u32 	%r2994, %r2990;
	mov.u32 	%r2992, %r2990;
	mov.u32 	%r3006, %r2990;
	mov.u32 	%r3004, %r2990;
	mov.u32 	%r3002, %r2990;
	mov.u32 	%r3000, %r2990;
	mov.u32 	%r3014, %r2990;
	bra.uni 	BB2_184;

BB2_37:
	setp.gt.s32	%p5, %r70, 23;
	@%p5 bra 	BB2_53;

	setp.gt.s32	%p17, %r70, 19;
	@%p17 bra 	BB2_46;

	setp.gt.s32	%p23, %r70, 17;
	@%p23 bra 	BB2_43;

	setp.eq.s32	%p26, %r70, 16;
	@%p26 bra 	BB2_76;
	bra.uni 	BB2_41;

BB2_76:
	mov.u32 	%r19296, 0;
	// inline asm
	prmt.b32 %r19347, %r19296, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19340, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19341, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19342, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19343, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19336, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19337, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19338, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19339, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19332, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19333, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19334, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19335, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19328, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19329, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19330, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r2984, %r19296, %r71;
	// inline asm
	mov.u32 	%r19297, %r19296;
	mov.u32 	%r19298, %r19296;
	mov.u32 	%r2998, %r19296;
	mov.u32 	%r2996, %r19296;
	mov.u32 	%r2994, %r19296;
	mov.u32 	%r2992, %r19296;
	mov.u32 	%r3006, %r19296;
	mov.u32 	%r3004, %r19296;
	mov.u32 	%r3002, %r19296;
	mov.u32 	%r3000, %r19296;
	mov.u32 	%r3014, %r19296;
	mov.u32 	%r3012, %r19296;
	mov.u32 	%r3010, %r19296;
	mov.u32 	%r3008, %r19296;
	mov.u32 	%r19327, %r19296;
	mov.u32 	%r19344, %r19296;
	mov.u32 	%r19345, %r19296;
	mov.u32 	%r19346, %r19296;
	bra.uni 	BB2_83;

BB2_111:
	setp.gt.s32	%p77, %r70, 11;
	@%p77 bra 	BB2_119;

	setp.gt.s32	%p83, %r70, 9;
	@%p83 bra 	BB2_116;

	setp.eq.s32	%p86, %r70, 8;
	@%p86 bra 	BB2_197;
	bra.uni 	BB2_114;

BB2_197:
	// inline asm
	prmt.b32 %r3046, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3012, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3010, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3008, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3006, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3004, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3002, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r2990, 0;
	// inline asm
	prmt.b32 %r3000, %r2984, %r2990, %r71;
	// inline asm
	mov.u32 	%r2988, %r2990;
	mov.u32 	%r2986, %r2990;
	mov.u32 	%r2998, %r2990;
	bra.uni 	BB2_198;

BB2_22:
	setp.gt.s32	%p29, %r70, 11;
	@%p29 bra 	BB2_30;

	setp.gt.s32	%p35, %r70, 9;
	@%p35 bra 	BB2_27;

	setp.eq.s32	%p38, %r70, 8;
	@%p38 bra 	BB2_80;
	bra.uni 	BB2_25;

BB2_80:
	mov.u32 	%r19296, 0;
	// inline asm
	prmt.b32 %r19339, %r19296, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19332, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19333, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19334, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19335, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19328, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19329, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19330, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3012, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3010, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3008, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3006, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3004, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3002, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3000, %r2984, %r19296, %r71;
	// inline asm
	mov.u32 	%r19297, %r19296;
	mov.u32 	%r19298, %r19296;
	mov.u32 	%r2998, %r19296;
	mov.u32 	%r2996, %r19296;
	mov.u32 	%r2994, %r19296;
	mov.u32 	%r2992, %r19296;
	mov.u32 	%r19327, %r19296;
	mov.u32 	%r19336, %r19296;
	mov.u32 	%r19337, %r19296;
	mov.u32 	%r19338, %r19296;
	bra.uni 	BB2_81;

BB2_142:
	setp.gt.s32	%p54, %r70, 27;
	@%p54 bra 	BB2_150;

	setp.gt.s32	%p60, %r70, 25;
	@%p60 bra 	BB2_147;

	setp.eq.s32	%p63, %r70, 24;
	@%p63 bra 	BB2_169;
	bra.uni 	BB2_145;

BB2_169:
	// inline asm
	prmt.b32 %r3046, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r2990, 0;
	// inline asm
	prmt.b32 %r3032, %r2984, %r2990, %r71;
	// inline asm
	mov.u32 	%r2988, %r2990;
	mov.u32 	%r2986, %r2990;
	mov.u32 	%r2998, %r2990;
	mov.u32 	%r2996, %r2990;
	mov.u32 	%r2994, %r2990;
	mov.u32 	%r2992, %r2990;
	mov.u32 	%r3006, %r2990;
	mov.u32 	%r3004, %r2990;
	mov.u32 	%r3002, %r2990;
	mov.u32 	%r3000, %r2990;
	mov.u32 	%r3014, %r2990;
	mov.u32 	%r3012, %r2990;
	mov.u32 	%r3010, %r2990;
	mov.u32 	%r3008, %r2990;
	mov.u32 	%r3022, %r2990;
	mov.u32 	%r3020, %r2990;
	mov.u32 	%r3018, %r2990;
	mov.u32 	%r3016, %r2990;
	mov.u32 	%r3030, %r2990;
	bra.uni 	BB2_170;

BB2_53:
	setp.gt.s32	%p6, %r70, 27;
	@%p6 bra 	BB2_61;

	setp.gt.s32	%p12, %r70, 25;
	@%p12 bra 	BB2_58;

	setp.eq.s32	%p15, %r70, 24;
	@%p15 bra 	BB2_72;
	bra.uni 	BB2_56;

BB2_72:
	mov.u32 	%r19296, 0;
	// inline asm
	prmt.b32 %r19355, %r19296, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19348, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19349, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19350, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19351, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19344, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19345, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19346, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19347, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19340, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19341, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19342, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19343, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19336, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19337, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19338, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19339, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19332, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19333, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19334, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19335, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19328, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19329, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19330, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r2984, %r19296, %r71;
	// inline asm
	mov.u32 	%r19297, %r19296;
	mov.u32 	%r19298, %r19296;
	mov.u32 	%r2998, %r19296;
	mov.u32 	%r2996, %r19296;
	mov.u32 	%r2994, %r19296;
	mov.u32 	%r2992, %r19296;
	mov.u32 	%r3006, %r19296;
	mov.u32 	%r3004, %r19296;
	mov.u32 	%r3002, %r19296;
	mov.u32 	%r3000, %r19296;
	mov.u32 	%r3014, %r19296;
	mov.u32 	%r3012, %r19296;
	mov.u32 	%r3010, %r19296;
	mov.u32 	%r3008, %r19296;
	mov.u32 	%r3022, %r19296;
	mov.u32 	%r3020, %r19296;
	mov.u32 	%r3018, %r19296;
	mov.u32 	%r3016, %r19296;
	mov.u32 	%r3030, %r19296;
	mov.u32 	%r3028, %r19296;
	mov.u32 	%r3026, %r19296;
	mov.u32 	%r3024, %r19296;
	mov.u32 	%r19327, %r19296;
	mov.u32 	%r19352, %r19296;
	mov.u32 	%r19353, %r19296;
	mov.u32 	%r19354, %r19296;
	bra.uni 	BB2_85;

BB2_104:
	setp.gt.s32	%p89, %r70, 5;
	@%p89 bra 	BB2_108;

	setp.eq.s32	%p92, %r70, 4;
	@%p92 bra 	BB2_204;
	bra.uni 	BB2_106;

BB2_204:
	// inline asm
	prmt.b32 %r3046, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3012, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3010, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3008, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3006, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3004, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3002, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3000, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2998, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2996, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2994, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r2990, 0;
	// inline asm
	prmt.b32 %r2992, %r2984, %r2990, %r71;
	// inline asm
	mov.u32 	%r2988, %r2990;
	mov.u32 	%r2986, %r2990;
	mov.u32 	%r19392, %r2990;
	bra.uni 	BB2_209;

BB2_14:
	setp.gt.s32	%p41, %r70, 5;
	@%p41 bra 	BB2_18;

	setp.eq.s32	%p44, %r70, 4;
	@%p44 bra 	BB2_87;
	bra.uni 	BB2_16;

BB2_87:
	mov.u32 	%r19296, 0;
	// inline asm
	prmt.b32 %r19335, %r19296, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19328, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19329, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19330, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3012, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3010, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3008, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3006, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3004, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3002, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3000, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2998, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2996, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2994, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2992, %r2984, %r19296, %r71;
	// inline asm
	mov.u32 	%r19297, %r19296;
	mov.u32 	%r19298, %r19296;
	mov.u32 	%r19327, %r19296;
	mov.u32 	%r19332, %r19296;
	mov.u32 	%r19333, %r19296;
	mov.u32 	%r19334, %r19296;
	bra.uni 	BB2_21;

BB2_135:
	setp.gt.s32	%p66, %r70, 21;
	@%p66 bra 	BB2_139;

	setp.eq.s32	%p69, %r70, 20;
	@%p69 bra 	BB2_176;
	bra.uni 	BB2_137;

BB2_176:
	// inline asm
	prmt.b32 %r3046, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r2990, 0;
	// inline asm
	prmt.b32 %r3024, %r2984, %r2990, %r71;
	// inline asm
	mov.u32 	%r2988, %r2990;
	mov.u32 	%r2986, %r2990;
	mov.u32 	%r2998, %r2990;
	mov.u32 	%r2996, %r2990;
	mov.u32 	%r2994, %r2990;
	mov.u32 	%r2992, %r2990;
	mov.u32 	%r3006, %r2990;
	mov.u32 	%r3004, %r2990;
	mov.u32 	%r3002, %r2990;
	mov.u32 	%r3000, %r2990;
	mov.u32 	%r3014, %r2990;
	mov.u32 	%r3012, %r2990;
	mov.u32 	%r3010, %r2990;
	mov.u32 	%r3008, %r2990;
	mov.u32 	%r3022, %r2990;
	bra.uni 	BB2_177;

BB2_46:
	setp.gt.s32	%p18, %r70, 21;
	@%p18 bra 	BB2_50;

	setp.eq.s32	%p21, %r70, 20;
	@%p21 bra 	BB2_74;
	bra.uni 	BB2_48;

BB2_74:
	mov.u32 	%r19296, 0;
	// inline asm
	prmt.b32 %r19351, %r19296, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19344, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19345, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19346, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19347, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19340, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19341, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19342, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19343, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19336, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19337, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19338, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19339, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19332, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19333, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19334, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19335, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19328, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19329, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19330, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r2984, %r19296, %r71;
	// inline asm
	mov.u32 	%r19297, %r19296;
	mov.u32 	%r19298, %r19296;
	mov.u32 	%r2998, %r19296;
	mov.u32 	%r2996, %r19296;
	mov.u32 	%r2994, %r19296;
	mov.u32 	%r2992, %r19296;
	mov.u32 	%r3006, %r19296;
	mov.u32 	%r3004, %r19296;
	mov.u32 	%r3002, %r19296;
	mov.u32 	%r3000, %r19296;
	mov.u32 	%r3014, %r19296;
	mov.u32 	%r3012, %r19296;
	mov.u32 	%r3010, %r19296;
	mov.u32 	%r3008, %r19296;
	mov.u32 	%r3022, %r19296;
	mov.u32 	%r3020, %r19296;
	mov.u32 	%r3018, %r19296;
	mov.u32 	%r3016, %r19296;
	mov.u32 	%r19327, %r19296;
	mov.u32 	%r19348, %r19296;
	mov.u32 	%r19349, %r19296;
	mov.u32 	%r19350, %r19296;
	bra.uni 	BB2_84;

BB2_119:
	setp.gt.s32	%p78, %r70, 13;
	@%p78 bra 	BB2_123;

	setp.eq.s32	%p81, %r70, 12;
	@%p81 bra 	BB2_190;
	bra.uni 	BB2_121;

BB2_190:
	// inline asm
	prmt.b32 %r3046, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3012, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3010, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r2990, 0;
	// inline asm
	prmt.b32 %r3008, %r2984, %r2990, %r71;
	// inline asm
	mov.u32 	%r2988, %r2990;
	mov.u32 	%r2986, %r2990;
	mov.u32 	%r2998, %r2990;
	mov.u32 	%r2996, %r2990;
	mov.u32 	%r2994, %r2990;
	mov.u32 	%r2992, %r2990;
	mov.u32 	%r3006, %r2990;
	bra.uni 	BB2_191;

BB2_30:
	setp.gt.s32	%p30, %r70, 13;
	@%p30 bra 	BB2_34;

	setp.eq.s32	%p33, %r70, 12;
	@%p33 bra 	BB2_78;
	bra.uni 	BB2_32;

BB2_78:
	mov.u32 	%r19296, 0;
	// inline asm
	prmt.b32 %r19343, %r19296, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19336, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19337, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19338, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19339, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19332, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19333, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19334, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19335, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19328, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19329, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19330, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3012, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3010, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3008, %r2984, %r19296, %r71;
	// inline asm
	mov.u32 	%r19297, %r19296;
	mov.u32 	%r19298, %r19296;
	mov.u32 	%r2998, %r19296;
	mov.u32 	%r2996, %r19296;
	mov.u32 	%r2994, %r19296;
	mov.u32 	%r2992, %r19296;
	mov.u32 	%r3006, %r19296;
	mov.u32 	%r3004, %r19296;
	mov.u32 	%r3002, %r19296;
	mov.u32 	%r3000, %r19296;
	mov.u32 	%r19327, %r19296;
	mov.u32 	%r19340, %r19296;
	mov.u32 	%r19341, %r19296;
	mov.u32 	%r19342, %r19296;
	bra.uni 	BB2_82;

BB2_150:
	setp.gt.s32	%p55, %r70, 29;
	@%p55 bra 	BB2_154;

	setp.eq.s32	%p58, %r70, 28;
	@%p58 bra 	BB2_162;
	bra.uni 	BB2_152;

BB2_162:
	// inline asm
	prmt.b32 %r3046, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r2990, 0;
	// inline asm
	prmt.b32 %r3040, %r2984, %r2990, %r71;
	// inline asm
	mov.u32 	%r2988, %r2990;
	mov.u32 	%r2986, %r2990;
	mov.u32 	%r2998, %r2990;
	mov.u32 	%r2996, %r2990;
	mov.u32 	%r2994, %r2990;
	mov.u32 	%r2992, %r2990;
	mov.u32 	%r3006, %r2990;
	mov.u32 	%r3004, %r2990;
	mov.u32 	%r3002, %r2990;
	mov.u32 	%r3000, %r2990;
	mov.u32 	%r3014, %r2990;
	mov.u32 	%r3012, %r2990;
	mov.u32 	%r3010, %r2990;
	mov.u32 	%r3008, %r2990;
	mov.u32 	%r3022, %r2990;
	mov.u32 	%r3020, %r2990;
	mov.u32 	%r3018, %r2990;
	mov.u32 	%r3016, %r2990;
	mov.u32 	%r3030, %r2990;
	mov.u32 	%r3028, %r2990;
	mov.u32 	%r3026, %r2990;
	mov.u32 	%r3024, %r2990;
	mov.u32 	%r3038, %r2990;
	bra.uni 	BB2_163;

BB2_61:
	setp.gt.s32	%p7, %r70, 29;
	@%p7 bra 	BB2_65;

	setp.eq.s32	%p10, %r70, 28;
	@%p10 bra 	BB2_70;
	bra.uni 	BB2_63;

BB2_70:
	mov.u32 	%r19296, 0;
	// inline asm
	prmt.b32 %r19359, %r19296, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19352, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19353, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19354, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19355, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19348, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19349, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19350, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19351, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19344, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19345, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19346, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19347, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19340, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19341, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19342, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19343, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19336, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19337, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19338, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19339, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19332, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19333, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19334, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19335, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19328, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19329, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19330, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r2984, %r19296, %r71;
	// inline asm
	mov.u32 	%r19297, %r19296;
	mov.u32 	%r19298, %r19296;
	mov.u32 	%r2998, %r19296;
	mov.u32 	%r2996, %r19296;
	mov.u32 	%r2994, %r19296;
	mov.u32 	%r2992, %r19296;
	mov.u32 	%r3006, %r19296;
	mov.u32 	%r3004, %r19296;
	mov.u32 	%r3002, %r19296;
	mov.u32 	%r3000, %r19296;
	mov.u32 	%r3014, %r19296;
	mov.u32 	%r3012, %r19296;
	mov.u32 	%r3010, %r19296;
	mov.u32 	%r3008, %r19296;
	mov.u32 	%r3022, %r19296;
	mov.u32 	%r3020, %r19296;
	mov.u32 	%r3018, %r19296;
	mov.u32 	%r3016, %r19296;
	mov.u32 	%r3030, %r19296;
	mov.u32 	%r3028, %r19296;
	mov.u32 	%r3026, %r19296;
	mov.u32 	%r3024, %r19296;
	mov.u32 	%r3038, %r19296;
	mov.u32 	%r3036, %r19296;
	mov.u32 	%r3034, %r19296;
	mov.u32 	%r3032, %r19296;
	mov.u32 	%r19327, %r19296;
	mov.u32 	%r19356, %r19296;
	mov.u32 	%r19357, %r19296;
	mov.u32 	%r19358, %r19296;
	bra.uni 	BB2_91;

BB2_101:
	setp.eq.s32	%p95, %r70, 2;
	@%p95 bra 	BB2_206;
	bra.uni 	BB2_102;

BB2_206:
	// inline asm
	prmt.b32 %r3046, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3012, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3010, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3008, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3006, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3004, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3002, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3000, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2998, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2996, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2994, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2992, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2990, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r2986, 0;
	// inline asm
	prmt.b32 %r2988, %r2984, %r2986, %r71;
	// inline asm
	mov.u32 	%r19392, %r2986;
	bra.uni 	BB2_209;

BB2_11:
	setp.eq.s32	%p47, %r70, 2;
	@%p47 bra 	BB2_88;
	bra.uni 	BB2_12;

BB2_88:
	mov.u32 	%r19298, 0;
	// inline asm
	prmt.b32 %r19329, %r19298, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19330, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3012, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3010, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3008, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3006, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3004, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3002, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3000, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2998, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2996, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2994, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2992, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19296, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19297, %r2984, %r19298, %r71;
	// inline asm
	mov.u32 	%r19327, %r19298;
	mov.u32 	%r19328, %r19298;
	mov.u32 	%r19332, %r19298;
	mov.u32 	%r19333, %r19298;
	mov.u32 	%r19334, %r19298;
	mov.u32 	%r19335, %r19298;
	mov.u32 	%r19336, %r19298;
	mov.u32 	%r19337, %r19298;
	mov.u32 	%r19338, %r19298;
	mov.u32 	%r19339, %r19298;
	mov.u32 	%r19340, %r19298;
	mov.u32 	%r19341, %r19298;
	mov.u32 	%r19342, %r19298;
	mov.u32 	%r19343, %r19298;
	mov.u32 	%r19344, %r19298;
	mov.u32 	%r19345, %r19298;
	mov.u32 	%r19346, %r19298;
	mov.u32 	%r19347, %r19298;
	mov.u32 	%r19348, %r19298;
	mov.u32 	%r19349, %r19298;
	mov.u32 	%r19350, %r19298;
	mov.u32 	%r19351, %r19298;
	mov.u32 	%r19352, %r19298;
	mov.u32 	%r19353, %r19298;
	mov.u32 	%r19354, %r19298;
	mov.u32 	%r19355, %r19298;
	mov.u32 	%r19356, %r19298;
	mov.u32 	%r19357, %r19298;
	mov.u32 	%r19358, %r19298;
	mov.u32 	%r19359, %r19298;
	bra.uni 	BB2_91;

BB2_132:
	setp.eq.s32	%p72, %r70, 18;
	@%p72 bra 	BB2_181;
	bra.uni 	BB2_133;

BB2_181:
	// inline asm
	prmt.b32 %r3046, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r2990, 0;
	// inline asm
	prmt.b32 %r3020, %r2984, %r2990, %r71;
	// inline asm
	mov.u32 	%r2988, %r2990;
	mov.u32 	%r2986, %r2990;
	mov.u32 	%r2998, %r2990;
	mov.u32 	%r2996, %r2990;
	mov.u32 	%r2994, %r2990;
	mov.u32 	%r2992, %r2990;
	mov.u32 	%r3006, %r2990;
	mov.u32 	%r3004, %r2990;
	mov.u32 	%r3002, %r2990;
	mov.u32 	%r3000, %r2990;
	mov.u32 	%r3014, %r2990;
	mov.u32 	%r3012, %r2990;
	mov.u32 	%r3010, %r2990;
	mov.u32 	%r3008, %r2990;
	bra.uni 	BB2_178;

BB2_43:
	setp.eq.s32	%p24, %r70, 18;
	@%p24 bra 	BB2_75;
	bra.uni 	BB2_44;

BB2_75:
	mov.u32 	%r19296, 0;
	// inline asm
	prmt.b32 %r19345, %r19296, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19346, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19347, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19340, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19341, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19342, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19343, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19336, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19337, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19338, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19339, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19332, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19333, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19334, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19335, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19328, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19329, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19330, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r2984, %r19296, %r71;
	// inline asm
	mov.u32 	%r19297, %r19296;
	mov.u32 	%r19298, %r19296;
	mov.u32 	%r2998, %r19296;
	mov.u32 	%r2996, %r19296;
	mov.u32 	%r2994, %r19296;
	mov.u32 	%r2992, %r19296;
	mov.u32 	%r3006, %r19296;
	mov.u32 	%r3004, %r19296;
	mov.u32 	%r3002, %r19296;
	mov.u32 	%r3000, %r19296;
	mov.u32 	%r3014, %r19296;
	mov.u32 	%r3012, %r19296;
	mov.u32 	%r3010, %r19296;
	mov.u32 	%r3008, %r19296;
	mov.u32 	%r3018, %r19296;
	mov.u32 	%r3016, %r19296;
	mov.u32 	%r19327, %r19296;
	mov.u32 	%r19344, %r19296;
	bra.uni 	BB2_83;

BB2_116:
	setp.eq.s32	%p84, %r70, 10;
	@%p84 bra 	BB2_195;
	bra.uni 	BB2_117;

BB2_195:
	// inline asm
	prmt.b32 %r3046, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3012, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3010, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3008, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3006, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r2990, 0;
	// inline asm
	prmt.b32 %r3004, %r2984, %r2990, %r71;
	// inline asm
	mov.u32 	%r2988, %r2990;
	mov.u32 	%r2986, %r2990;
	mov.u32 	%r2998, %r2990;
	mov.u32 	%r2996, %r2990;
	mov.u32 	%r2994, %r2990;
	mov.u32 	%r2992, %r2990;
	bra.uni 	BB2_192;

BB2_27:
	setp.eq.s32	%p36, %r70, 10;
	@%p36 bra 	BB2_79;
	bra.uni 	BB2_28;

BB2_79:
	mov.u32 	%r19296, 0;
	// inline asm
	prmt.b32 %r19337, %r19296, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19338, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19339, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19332, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19333, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19334, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19335, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19328, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19329, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19330, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3012, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3010, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3008, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3006, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3004, %r2984, %r19296, %r71;
	// inline asm
	mov.u32 	%r19297, %r19296;
	mov.u32 	%r19298, %r19296;
	mov.u32 	%r2998, %r19296;
	mov.u32 	%r2996, %r19296;
	mov.u32 	%r2994, %r19296;
	mov.u32 	%r2992, %r19296;
	mov.u32 	%r3002, %r19296;
	mov.u32 	%r3000, %r19296;
	mov.u32 	%r19327, %r19296;
	mov.u32 	%r19336, %r19296;
	bra.uni 	BB2_81;

BB2_147:
	setp.eq.s32	%p61, %r70, 26;
	@%p61 bra 	BB2_167;
	bra.uni 	BB2_148;

BB2_167:
	// inline asm
	prmt.b32 %r3046, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r2990, 0;
	// inline asm
	prmt.b32 %r3036, %r2984, %r2990, %r71;
	// inline asm
	mov.u32 	%r2988, %r2990;
	mov.u32 	%r2986, %r2990;
	mov.u32 	%r2998, %r2990;
	mov.u32 	%r2996, %r2990;
	mov.u32 	%r2994, %r2990;
	mov.u32 	%r2992, %r2990;
	mov.u32 	%r3006, %r2990;
	mov.u32 	%r3004, %r2990;
	mov.u32 	%r3002, %r2990;
	mov.u32 	%r3000, %r2990;
	mov.u32 	%r3014, %r2990;
	mov.u32 	%r3012, %r2990;
	mov.u32 	%r3010, %r2990;
	mov.u32 	%r3008, %r2990;
	mov.u32 	%r3022, %r2990;
	mov.u32 	%r3020, %r2990;
	mov.u32 	%r3018, %r2990;
	mov.u32 	%r3016, %r2990;
	mov.u32 	%r3030, %r2990;
	mov.u32 	%r3028, %r2990;
	mov.u32 	%r3026, %r2990;
	mov.u32 	%r3024, %r2990;
	bra.uni 	BB2_164;

BB2_58:
	setp.eq.s32	%p13, %r70, 26;
	@%p13 bra 	BB2_71;
	bra.uni 	BB2_59;

BB2_71:
	mov.u32 	%r19296, 0;
	// inline asm
	prmt.b32 %r19353, %r19296, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19354, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19355, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19348, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19349, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19350, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19351, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19344, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19345, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19346, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19347, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19340, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19341, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19342, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19343, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19336, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19337, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19338, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19339, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19332, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19333, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19334, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19335, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19328, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19329, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19330, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r2984, %r19296, %r71;
	// inline asm
	mov.u32 	%r19297, %r19296;
	mov.u32 	%r19298, %r19296;
	mov.u32 	%r2998, %r19296;
	mov.u32 	%r2996, %r19296;
	mov.u32 	%r2994, %r19296;
	mov.u32 	%r2992, %r19296;
	mov.u32 	%r3006, %r19296;
	mov.u32 	%r3004, %r19296;
	mov.u32 	%r3002, %r19296;
	mov.u32 	%r3000, %r19296;
	mov.u32 	%r3014, %r19296;
	mov.u32 	%r3012, %r19296;
	mov.u32 	%r3010, %r19296;
	mov.u32 	%r3008, %r19296;
	mov.u32 	%r3022, %r19296;
	mov.u32 	%r3020, %r19296;
	mov.u32 	%r3018, %r19296;
	mov.u32 	%r3016, %r19296;
	mov.u32 	%r3030, %r19296;
	mov.u32 	%r3028, %r19296;
	mov.u32 	%r3026, %r19296;
	mov.u32 	%r3024, %r19296;
	mov.u32 	%r3034, %r19296;
	mov.u32 	%r3032, %r19296;
	mov.u32 	%r19327, %r19296;
	mov.u32 	%r19352, %r19296;
	bra.uni 	BB2_85;

BB2_108:
	setp.eq.s32	%p90, %r70, 6;
	@%p90 bra 	BB2_202;
	bra.uni 	BB2_109;

BB2_202:
	// inline asm
	prmt.b32 %r3046, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3012, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3010, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3008, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3006, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3004, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3002, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3000, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2998, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r2990, 0;
	// inline asm
	prmt.b32 %r2996, %r2984, %r2990, %r71;
	// inline asm
	mov.u32 	%r2988, %r2990;
	mov.u32 	%r2986, %r2990;
	bra.uni 	BB2_199;

BB2_18:
	setp.eq.s32	%p42, %r70, 6;
	@%p42 bra 	BB2_86;
	bra.uni 	BB2_19;

BB2_86:
	mov.u32 	%r19296, 0;
	// inline asm
	prmt.b32 %r19333, %r19296, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19334, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19335, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19328, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19329, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19330, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3012, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3010, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3008, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3006, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3004, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3002, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3000, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2998, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2996, %r2984, %r19296, %r71;
	// inline asm
	mov.u32 	%r19297, %r19296;
	mov.u32 	%r19298, %r19296;
	mov.u32 	%r2994, %r19296;
	mov.u32 	%r2992, %r19296;
	mov.u32 	%r19327, %r19296;
	mov.u32 	%r19332, %r19296;
	bra.uni 	BB2_21;

BB2_139:
	setp.eq.s32	%p67, %r70, 22;
	@%p67 bra 	BB2_174;
	bra.uni 	BB2_140;

BB2_174:
	// inline asm
	prmt.b32 %r3046, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r2990, 0;
	// inline asm
	prmt.b32 %r3028, %r2984, %r2990, %r71;
	// inline asm
	mov.u32 	%r2988, %r2990;
	mov.u32 	%r2986, %r2990;
	mov.u32 	%r2998, %r2990;
	mov.u32 	%r2996, %r2990;
	mov.u32 	%r2994, %r2990;
	mov.u32 	%r2992, %r2990;
	mov.u32 	%r3006, %r2990;
	mov.u32 	%r3004, %r2990;
	mov.u32 	%r3002, %r2990;
	mov.u32 	%r3000, %r2990;
	mov.u32 	%r3014, %r2990;
	mov.u32 	%r3012, %r2990;
	mov.u32 	%r3010, %r2990;
	mov.u32 	%r3008, %r2990;
	mov.u32 	%r3022, %r2990;
	mov.u32 	%r3020, %r2990;
	mov.u32 	%r3018, %r2990;
	mov.u32 	%r3016, %r2990;
	bra.uni 	BB2_171;

BB2_50:
	setp.eq.s32	%p19, %r70, 22;
	@%p19 bra 	BB2_73;
	bra.uni 	BB2_51;

BB2_73:
	mov.u32 	%r19296, 0;
	// inline asm
	prmt.b32 %r19349, %r19296, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19350, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19351, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19344, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19345, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19346, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19347, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19340, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19341, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19342, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19343, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19336, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19337, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19338, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19339, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19332, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19333, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19334, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19335, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19328, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19329, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19330, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r2984, %r19296, %r71;
	// inline asm
	mov.u32 	%r19297, %r19296;
	mov.u32 	%r19298, %r19296;
	mov.u32 	%r2998, %r19296;
	mov.u32 	%r2996, %r19296;
	mov.u32 	%r2994, %r19296;
	mov.u32 	%r2992, %r19296;
	mov.u32 	%r3006, %r19296;
	mov.u32 	%r3004, %r19296;
	mov.u32 	%r3002, %r19296;
	mov.u32 	%r3000, %r19296;
	mov.u32 	%r3014, %r19296;
	mov.u32 	%r3012, %r19296;
	mov.u32 	%r3010, %r19296;
	mov.u32 	%r3008, %r19296;
	mov.u32 	%r3022, %r19296;
	mov.u32 	%r3020, %r19296;
	mov.u32 	%r3018, %r19296;
	mov.u32 	%r3016, %r19296;
	mov.u32 	%r3026, %r19296;
	mov.u32 	%r3024, %r19296;
	mov.u32 	%r19327, %r19296;
	mov.u32 	%r19348, %r19296;
	bra.uni 	BB2_84;

BB2_123:
	setp.eq.s32	%p79, %r70, 14;
	@%p79 bra 	BB2_188;
	bra.uni 	BB2_124;

BB2_188:
	// inline asm
	prmt.b32 %r3046, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r2990, 0;
	// inline asm
	prmt.b32 %r3012, %r2984, %r2990, %r71;
	// inline asm
	mov.u32 	%r2988, %r2990;
	mov.u32 	%r2986, %r2990;
	mov.u32 	%r2998, %r2990;
	mov.u32 	%r2996, %r2990;
	mov.u32 	%r2994, %r2990;
	mov.u32 	%r2992, %r2990;
	mov.u32 	%r3006, %r2990;
	mov.u32 	%r3004, %r2990;
	mov.u32 	%r3002, %r2990;
	mov.u32 	%r3000, %r2990;
	bra.uni 	BB2_185;

BB2_34:
	setp.eq.s32	%p31, %r70, 14;
	@%p31 bra 	BB2_77;
	bra.uni 	BB2_35;

BB2_77:
	mov.u32 	%r19296, 0;
	// inline asm
	prmt.b32 %r19341, %r19296, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19342, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19343, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19336, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19337, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19338, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19339, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19332, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19333, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19334, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19335, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19328, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19329, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19330, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3012, %r2984, %r19296, %r71;
	// inline asm
	mov.u32 	%r19297, %r19296;
	mov.u32 	%r19298, %r19296;
	mov.u32 	%r2998, %r19296;
	mov.u32 	%r2996, %r19296;
	mov.u32 	%r2994, %r19296;
	mov.u32 	%r2992, %r19296;
	mov.u32 	%r3006, %r19296;
	mov.u32 	%r3004, %r19296;
	mov.u32 	%r3002, %r19296;
	mov.u32 	%r3000, %r19296;
	mov.u32 	%r3010, %r19296;
	mov.u32 	%r3008, %r19296;
	mov.u32 	%r19327, %r19296;
	mov.u32 	%r19340, %r19296;
	bra.uni 	BB2_82;

BB2_154:
	setp.eq.s32	%p56, %r70, 30;
	@%p56 bra 	BB2_160;
	bra.uni 	BB2_155;

BB2_160:
	// inline asm
	prmt.b32 %r3046, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r2990, 0;
	// inline asm
	prmt.b32 %r3044, %r2984, %r2990, %r71;
	// inline asm
	mov.u32 	%r2988, %r2990;
	mov.u32 	%r2986, %r2990;
	mov.u32 	%r2998, %r2990;
	mov.u32 	%r2996, %r2990;
	mov.u32 	%r2994, %r2990;
	mov.u32 	%r2992, %r2990;
	mov.u32 	%r3006, %r2990;
	mov.u32 	%r3004, %r2990;
	mov.u32 	%r3002, %r2990;
	mov.u32 	%r3000, %r2990;
	mov.u32 	%r3014, %r2990;
	mov.u32 	%r3012, %r2990;
	mov.u32 	%r3010, %r2990;
	mov.u32 	%r3008, %r2990;
	mov.u32 	%r3022, %r2990;
	mov.u32 	%r3020, %r2990;
	mov.u32 	%r3018, %r2990;
	mov.u32 	%r3016, %r2990;
	mov.u32 	%r3030, %r2990;
	mov.u32 	%r3028, %r2990;
	mov.u32 	%r3026, %r2990;
	mov.u32 	%r3024, %r2990;
	mov.u32 	%r3038, %r2990;
	mov.u32 	%r3036, %r2990;
	mov.u32 	%r3034, %r2990;
	mov.u32 	%r3032, %r2990;
	bra.uni 	BB2_158;

BB2_65:
	setp.eq.s32	%p8, %r70, 30;
	@%p8 bra 	BB2_69;
	bra.uni 	BB2_66;

BB2_69:
	mov.u32 	%r19296, 0;
	// inline asm
	prmt.b32 %r19357, %r19296, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19358, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19359, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19352, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19353, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19354, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19355, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19348, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19349, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19350, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19351, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19344, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19345, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19346, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19347, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19340, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19341, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19342, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19343, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19336, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19337, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19338, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19339, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19332, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19333, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19334, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19335, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19328, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19329, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19330, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r2984, %r19296, %r71;
	// inline asm
	mov.u32 	%r19297, %r19296;
	mov.u32 	%r19298, %r19296;
	mov.u32 	%r2998, %r19296;
	mov.u32 	%r2996, %r19296;
	mov.u32 	%r2994, %r19296;
	mov.u32 	%r2992, %r19296;
	mov.u32 	%r3006, %r19296;
	mov.u32 	%r3004, %r19296;
	mov.u32 	%r3002, %r19296;
	mov.u32 	%r3000, %r19296;
	mov.u32 	%r3014, %r19296;
	mov.u32 	%r3012, %r19296;
	mov.u32 	%r3010, %r19296;
	mov.u32 	%r3008, %r19296;
	mov.u32 	%r3022, %r19296;
	mov.u32 	%r3020, %r19296;
	mov.u32 	%r3018, %r19296;
	mov.u32 	%r3016, %r19296;
	mov.u32 	%r3030, %r19296;
	mov.u32 	%r3028, %r19296;
	mov.u32 	%r3026, %r19296;
	mov.u32 	%r3024, %r19296;
	mov.u32 	%r3038, %r19296;
	mov.u32 	%r3036, %r19296;
	mov.u32 	%r3034, %r19296;
	mov.u32 	%r3032, %r19296;
	mov.u32 	%r3042, %r19296;
	mov.u32 	%r3040, %r19296;
	mov.u32 	%r19327, %r19296;
	mov.u32 	%r19356, %r19296;
	bra.uni 	BB2_91;

BB2_99:
	setp.eq.s32	%p98, %r70, 1;
	@%p98 bra 	BB2_207;
	bra.uni 	BB2_100;

BB2_207:
	// inline asm
	prmt.b32 %r3046, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3012, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3010, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3008, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3006, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3004, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3002, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3000, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2998, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2996, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2994, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2992, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2990, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2988, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r19392, 0;
	// inline asm
	prmt.b32 %r2986, %r2984, %r19392, %r71;
	// inline asm
	bra.uni 	BB2_209;

BB2_9:
	setp.eq.s32	%p50, %r70, 1;
	@%p50 bra 	BB2_10;
	bra.uni 	BB2_67;

BB2_10:
	mov.u32 	%r19327, 0;
	// inline asm
	prmt.b32 %r19330, %r19327, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3012, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3010, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3008, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3006, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3004, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3002, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3000, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2998, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2996, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2994, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2992, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19296, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19297, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19298, %r2984, %r19327, %r71;
	// inline asm
	mov.u32 	%r19328, %r19327;
	mov.u32 	%r19329, %r19327;
	mov.u32 	%r19332, %r19327;
	mov.u32 	%r19333, %r19327;
	mov.u32 	%r19334, %r19327;
	mov.u32 	%r19335, %r19327;
	mov.u32 	%r19336, %r19327;
	mov.u32 	%r19337, %r19327;
	mov.u32 	%r19338, %r19327;
	mov.u32 	%r19339, %r19327;
	mov.u32 	%r19340, %r19327;
	mov.u32 	%r19341, %r19327;
	mov.u32 	%r19342, %r19327;
	mov.u32 	%r19343, %r19327;
	mov.u32 	%r19344, %r19327;
	mov.u32 	%r19345, %r19327;
	mov.u32 	%r19346, %r19327;
	mov.u32 	%r19347, %r19327;
	mov.u32 	%r19348, %r19327;
	mov.u32 	%r19349, %r19327;
	mov.u32 	%r19350, %r19327;
	mov.u32 	%r19351, %r19327;
	mov.u32 	%r19352, %r19327;
	mov.u32 	%r19353, %r19327;
	mov.u32 	%r19354, %r19327;
	mov.u32 	%r19355, %r19327;
	mov.u32 	%r19356, %r19327;
	mov.u32 	%r19357, %r19327;
	mov.u32 	%r19358, %r19327;
	mov.u32 	%r19359, %r19327;
	bra.uni 	BB2_91;

BB2_130:
	setp.eq.s32	%p75, %r70, 17;
	@%p75 bra 	BB2_182;
	bra.uni 	BB2_131;

BB2_182:
	// inline asm
	prmt.b32 %r3046, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r2990, 0;
	// inline asm
	prmt.b32 %r3018, %r2984, %r2990, %r71;
	// inline asm
	mov.u32 	%r2988, %r2990;
	mov.u32 	%r2986, %r2990;
	mov.u32 	%r2998, %r2990;
	mov.u32 	%r2996, %r2990;
	mov.u32 	%r2994, %r2990;
	mov.u32 	%r2992, %r2990;
	mov.u32 	%r3006, %r2990;
	mov.u32 	%r3004, %r2990;
	mov.u32 	%r3002, %r2990;
	mov.u32 	%r3000, %r2990;
	mov.u32 	%r3014, %r2990;
	mov.u32 	%r3012, %r2990;
	mov.u32 	%r3010, %r2990;
	mov.u32 	%r3008, %r2990;
	bra.uni 	BB2_179;

BB2_41:
	setp.eq.s32	%p27, %r70, 17;
	@%p27 bra 	BB2_42;
	bra.uni 	BB2_67;

BB2_42:
	mov.u32 	%r19296, 0;
	// inline asm
	prmt.b32 %r19346, %r19296, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19347, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19340, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19341, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19342, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19343, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19336, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19337, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19338, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19339, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19332, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19333, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19334, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19335, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19328, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19329, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19330, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r2984, %r19296, %r71;
	// inline asm
	mov.u32 	%r19297, %r19296;
	mov.u32 	%r19298, %r19296;
	mov.u32 	%r2998, %r19296;
	mov.u32 	%r2996, %r19296;
	mov.u32 	%r2994, %r19296;
	mov.u32 	%r2992, %r19296;
	mov.u32 	%r3006, %r19296;
	mov.u32 	%r3004, %r19296;
	mov.u32 	%r3002, %r19296;
	mov.u32 	%r3000, %r19296;
	mov.u32 	%r3014, %r19296;
	mov.u32 	%r3012, %r19296;
	mov.u32 	%r3010, %r19296;
	mov.u32 	%r3008, %r19296;
	mov.u32 	%r3016, %r19296;
	mov.u32 	%r19327, %r19296;
	mov.u32 	%r19344, %r19296;
	mov.u32 	%r19345, %r19296;
	bra.uni 	BB2_83;

BB2_114:
	setp.eq.s32	%p87, %r70, 9;
	@%p87 bra 	BB2_196;
	bra.uni 	BB2_115;

BB2_196:
	// inline asm
	prmt.b32 %r3046, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3012, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3010, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3008, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3006, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3004, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r2990, 0;
	// inline asm
	prmt.b32 %r3002, %r2984, %r2990, %r71;
	// inline asm
	mov.u32 	%r2988, %r2990;
	mov.u32 	%r2986, %r2990;
	mov.u32 	%r2998, %r2990;
	mov.u32 	%r2996, %r2990;
	mov.u32 	%r2994, %r2990;
	mov.u32 	%r2992, %r2990;
	bra.uni 	BB2_193;

BB2_25:
	setp.eq.s32	%p39, %r70, 9;
	@%p39 bra 	BB2_26;
	bra.uni 	BB2_67;

BB2_26:
	mov.u32 	%r19296, 0;
	// inline asm
	prmt.b32 %r19338, %r19296, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19339, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19332, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19333, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19334, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19335, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19328, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19329, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19330, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3012, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3010, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3008, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3006, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3004, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3002, %r2984, %r19296, %r71;
	// inline asm
	mov.u32 	%r19297, %r19296;
	mov.u32 	%r19298, %r19296;
	mov.u32 	%r2998, %r19296;
	mov.u32 	%r2996, %r19296;
	mov.u32 	%r2994, %r19296;
	mov.u32 	%r2992, %r19296;
	mov.u32 	%r3000, %r19296;
	mov.u32 	%r19327, %r19296;
	mov.u32 	%r19336, %r19296;
	mov.u32 	%r19337, %r19296;
	bra.uni 	BB2_81;

BB2_145:
	setp.eq.s32	%p64, %r70, 25;
	@%p64 bra 	BB2_168;
	bra.uni 	BB2_146;

BB2_168:
	// inline asm
	prmt.b32 %r3046, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r2990, 0;
	// inline asm
	prmt.b32 %r3034, %r2984, %r2990, %r71;
	// inline asm
	mov.u32 	%r2988, %r2990;
	mov.u32 	%r2986, %r2990;
	mov.u32 	%r2998, %r2990;
	mov.u32 	%r2996, %r2990;
	mov.u32 	%r2994, %r2990;
	mov.u32 	%r2992, %r2990;
	mov.u32 	%r3006, %r2990;
	mov.u32 	%r3004, %r2990;
	mov.u32 	%r3002, %r2990;
	mov.u32 	%r3000, %r2990;
	mov.u32 	%r3014, %r2990;
	mov.u32 	%r3012, %r2990;
	mov.u32 	%r3010, %r2990;
	mov.u32 	%r3008, %r2990;
	mov.u32 	%r3022, %r2990;
	mov.u32 	%r3020, %r2990;
	mov.u32 	%r3018, %r2990;
	mov.u32 	%r3016, %r2990;
	mov.u32 	%r3030, %r2990;
	mov.u32 	%r3028, %r2990;
	mov.u32 	%r3026, %r2990;
	mov.u32 	%r3024, %r2990;
	bra.uni 	BB2_165;

BB2_56:
	setp.eq.s32	%p16, %r70, 25;
	@%p16 bra 	BB2_57;
	bra.uni 	BB2_67;

BB2_57:
	mov.u32 	%r19296, 0;
	// inline asm
	prmt.b32 %r19354, %r19296, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19355, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19348, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19349, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19350, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19351, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19344, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19345, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19346, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19347, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19340, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19341, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19342, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19343, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19336, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19337, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19338, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19339, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19332, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19333, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19334, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19335, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19328, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19329, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19330, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r2984, %r19296, %r71;
	// inline asm
	mov.u32 	%r19297, %r19296;
	mov.u32 	%r19298, %r19296;
	mov.u32 	%r2998, %r19296;
	mov.u32 	%r2996, %r19296;
	mov.u32 	%r2994, %r19296;
	mov.u32 	%r2992, %r19296;
	mov.u32 	%r3006, %r19296;
	mov.u32 	%r3004, %r19296;
	mov.u32 	%r3002, %r19296;
	mov.u32 	%r3000, %r19296;
	mov.u32 	%r3014, %r19296;
	mov.u32 	%r3012, %r19296;
	mov.u32 	%r3010, %r19296;
	mov.u32 	%r3008, %r19296;
	mov.u32 	%r3022, %r19296;
	mov.u32 	%r3020, %r19296;
	mov.u32 	%r3018, %r19296;
	mov.u32 	%r3016, %r19296;
	mov.u32 	%r3030, %r19296;
	mov.u32 	%r3028, %r19296;
	mov.u32 	%r3026, %r19296;
	mov.u32 	%r3024, %r19296;
	mov.u32 	%r3032, %r19296;
	mov.u32 	%r19327, %r19296;
	mov.u32 	%r19352, %r19296;
	mov.u32 	%r19353, %r19296;
	bra.uni 	BB2_85;

BB2_106:
	setp.eq.s32	%p93, %r70, 5;
	@%p93 bra 	BB2_203;
	bra.uni 	BB2_107;

BB2_203:
	// inline asm
	prmt.b32 %r3046, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3012, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3010, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3008, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3006, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3004, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3002, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3000, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2998, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2996, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r2990, 0;
	// inline asm
	prmt.b32 %r2994, %r2984, %r2990, %r71;
	// inline asm
	mov.u32 	%r2988, %r2990;
	mov.u32 	%r2986, %r2990;
	bra.uni 	BB2_200;

BB2_16:
	setp.eq.s32	%p45, %r70, 5;
	@%p45 bra 	BB2_17;
	bra.uni 	BB2_67;

BB2_17:
	mov.u32 	%r19296, 0;
	// inline asm
	prmt.b32 %r19334, %r19296, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19335, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19328, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19329, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19330, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3012, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3010, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3008, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3006, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3004, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3002, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3000, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2998, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2996, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2994, %r2984, %r19296, %r71;
	// inline asm
	mov.u32 	%r19297, %r19296;
	mov.u32 	%r19298, %r19296;
	mov.u32 	%r2992, %r19296;
	mov.u32 	%r19327, %r19296;
	mov.u32 	%r19332, %r19296;
	mov.u32 	%r19333, %r19296;
	bra.uni 	BB2_21;

BB2_137:
	setp.eq.s32	%p70, %r70, 21;
	@%p70 bra 	BB2_175;
	bra.uni 	BB2_138;

BB2_175:
	// inline asm
	prmt.b32 %r3046, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r2990, 0;
	// inline asm
	prmt.b32 %r3026, %r2984, %r2990, %r71;
	// inline asm
	mov.u32 	%r2988, %r2990;
	mov.u32 	%r2986, %r2990;
	mov.u32 	%r2998, %r2990;
	mov.u32 	%r2996, %r2990;
	mov.u32 	%r2994, %r2990;
	mov.u32 	%r2992, %r2990;
	mov.u32 	%r3006, %r2990;
	mov.u32 	%r3004, %r2990;
	mov.u32 	%r3002, %r2990;
	mov.u32 	%r3000, %r2990;
	mov.u32 	%r3014, %r2990;
	mov.u32 	%r3012, %r2990;
	mov.u32 	%r3010, %r2990;
	mov.u32 	%r3008, %r2990;
	mov.u32 	%r3022, %r2990;
	mov.u32 	%r3020, %r2990;
	mov.u32 	%r3018, %r2990;
	mov.u32 	%r3016, %r2990;
	bra.uni 	BB2_172;

BB2_48:
	setp.eq.s32	%p22, %r70, 21;
	@%p22 bra 	BB2_49;
	bra.uni 	BB2_67;

BB2_49:
	mov.u32 	%r19296, 0;
	// inline asm
	prmt.b32 %r19350, %r19296, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19351, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19344, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19345, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19346, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19347, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19340, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19341, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19342, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19343, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19336, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19337, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19338, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19339, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19332, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19333, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19334, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19335, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19328, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19329, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19330, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r2984, %r19296, %r71;
	// inline asm
	mov.u32 	%r19297, %r19296;
	mov.u32 	%r19298, %r19296;
	mov.u32 	%r2998, %r19296;
	mov.u32 	%r2996, %r19296;
	mov.u32 	%r2994, %r19296;
	mov.u32 	%r2992, %r19296;
	mov.u32 	%r3006, %r19296;
	mov.u32 	%r3004, %r19296;
	mov.u32 	%r3002, %r19296;
	mov.u32 	%r3000, %r19296;
	mov.u32 	%r3014, %r19296;
	mov.u32 	%r3012, %r19296;
	mov.u32 	%r3010, %r19296;
	mov.u32 	%r3008, %r19296;
	mov.u32 	%r3022, %r19296;
	mov.u32 	%r3020, %r19296;
	mov.u32 	%r3018, %r19296;
	mov.u32 	%r3016, %r19296;
	mov.u32 	%r3024, %r19296;
	mov.u32 	%r19327, %r19296;
	mov.u32 	%r19348, %r19296;
	mov.u32 	%r19349, %r19296;
	bra.uni 	BB2_84;

BB2_121:
	setp.eq.s32	%p82, %r70, 13;
	@%p82 bra 	BB2_189;
	bra.uni 	BB2_122;

BB2_189:
	// inline asm
	prmt.b32 %r3046, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3012, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r2990, 0;
	// inline asm
	prmt.b32 %r3010, %r2984, %r2990, %r71;
	// inline asm
	mov.u32 	%r2988, %r2990;
	mov.u32 	%r2986, %r2990;
	mov.u32 	%r2998, %r2990;
	mov.u32 	%r2996, %r2990;
	mov.u32 	%r2994, %r2990;
	mov.u32 	%r2992, %r2990;
	mov.u32 	%r3006, %r2990;
	mov.u32 	%r3004, %r2990;
	mov.u32 	%r3002, %r2990;
	mov.u32 	%r3000, %r2990;
	bra.uni 	BB2_186;

BB2_32:
	setp.eq.s32	%p34, %r70, 13;
	@%p34 bra 	BB2_33;
	bra.uni 	BB2_67;

BB2_33:
	mov.u32 	%r19296, 0;
	// inline asm
	prmt.b32 %r19342, %r19296, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19343, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19336, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19337, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19338, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19339, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19332, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19333, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19334, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19335, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19328, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19329, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19330, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3012, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3010, %r2984, %r19296, %r71;
	// inline asm
	mov.u32 	%r19297, %r19296;
	mov.u32 	%r19298, %r19296;
	mov.u32 	%r2998, %r19296;
	mov.u32 	%r2996, %r19296;
	mov.u32 	%r2994, %r19296;
	mov.u32 	%r2992, %r19296;
	mov.u32 	%r3006, %r19296;
	mov.u32 	%r3004, %r19296;
	mov.u32 	%r3002, %r19296;
	mov.u32 	%r3000, %r19296;
	mov.u32 	%r3008, %r19296;
	mov.u32 	%r19327, %r19296;
	mov.u32 	%r19340, %r19296;
	mov.u32 	%r19341, %r19296;
	bra.uni 	BB2_82;

BB2_152:
	setp.eq.s32	%p59, %r70, 29;
	@%p59 bra 	BB2_161;
	bra.uni 	BB2_153;

BB2_161:
	// inline asm
	prmt.b32 %r3046, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r2990, 0;
	// inline asm
	prmt.b32 %r3042, %r2984, %r2990, %r71;
	// inline asm
	mov.u32 	%r2988, %r2990;
	mov.u32 	%r2986, %r2990;
	mov.u32 	%r2998, %r2990;
	mov.u32 	%r2996, %r2990;
	mov.u32 	%r2994, %r2990;
	mov.u32 	%r2992, %r2990;
	mov.u32 	%r3006, %r2990;
	mov.u32 	%r3004, %r2990;
	mov.u32 	%r3002, %r2990;
	mov.u32 	%r3000, %r2990;
	mov.u32 	%r3014, %r2990;
	mov.u32 	%r3012, %r2990;
	mov.u32 	%r3010, %r2990;
	mov.u32 	%r3008, %r2990;
	mov.u32 	%r3022, %r2990;
	mov.u32 	%r3020, %r2990;
	mov.u32 	%r3018, %r2990;
	mov.u32 	%r3016, %r2990;
	mov.u32 	%r3030, %r2990;
	mov.u32 	%r3028, %r2990;
	mov.u32 	%r3026, %r2990;
	mov.u32 	%r3024, %r2990;
	mov.u32 	%r3038, %r2990;
	mov.u32 	%r3036, %r2990;
	mov.u32 	%r3034, %r2990;
	mov.u32 	%r3032, %r2990;
	bra.uni 	BB2_159;

BB2_63:
	setp.eq.s32	%p11, %r70, 29;
	@%p11 bra 	BB2_64;
	bra.uni 	BB2_67;

BB2_64:
	mov.u32 	%r19296, 0;
	// inline asm
	prmt.b32 %r19358, %r19296, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19359, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19352, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19353, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19354, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19355, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19348, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19349, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19350, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19351, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19344, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19345, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19346, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19347, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19340, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19341, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19342, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19343, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19336, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19337, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19338, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19339, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19332, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19333, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19334, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19335, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19328, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19329, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19330, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r2984, %r19296, %r71;
	// inline asm
	mov.u32 	%r19297, %r19296;
	mov.u32 	%r19298, %r19296;
	mov.u32 	%r2998, %r19296;
	mov.u32 	%r2996, %r19296;
	mov.u32 	%r2994, %r19296;
	mov.u32 	%r2992, %r19296;
	mov.u32 	%r3006, %r19296;
	mov.u32 	%r3004, %r19296;
	mov.u32 	%r3002, %r19296;
	mov.u32 	%r3000, %r19296;
	mov.u32 	%r3014, %r19296;
	mov.u32 	%r3012, %r19296;
	mov.u32 	%r3010, %r19296;
	mov.u32 	%r3008, %r19296;
	mov.u32 	%r3022, %r19296;
	mov.u32 	%r3020, %r19296;
	mov.u32 	%r3018, %r19296;
	mov.u32 	%r3016, %r19296;
	mov.u32 	%r3030, %r19296;
	mov.u32 	%r3028, %r19296;
	mov.u32 	%r3026, %r19296;
	mov.u32 	%r3024, %r19296;
	mov.u32 	%r3038, %r19296;
	mov.u32 	%r3036, %r19296;
	mov.u32 	%r3034, %r19296;
	mov.u32 	%r3032, %r19296;
	mov.u32 	%r3040, %r19296;
	mov.u32 	%r19327, %r19296;
	mov.u32 	%r19356, %r19296;
	mov.u32 	%r19357, %r19296;
	bra.uni 	BB2_91;

BB2_102:
	setp.eq.s32	%p96, %r70, 3;
	@%p96 bra 	BB2_205;
	bra.uni 	BB2_103;

BB2_205:
	// inline asm
	prmt.b32 %r3046, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3012, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3010, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3008, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3006, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3004, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3002, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3000, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2998, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2996, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2994, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2992, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r2988, 0;
	// inline asm
	prmt.b32 %r2990, %r2984, %r2988, %r71;
	// inline asm
	mov.u32 	%r2986, %r2988;
	mov.u32 	%r19392, %r2988;
	bra.uni 	BB2_209;

BB2_12:
	setp.eq.s32	%p48, %r70, 3;
	@%p48 bra 	BB2_13;
	bra.uni 	BB2_67;

BB2_13:
	mov.u32 	%r19297, 0;
	// inline asm
	prmt.b32 %r19328, %r19297, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19329, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19330, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3012, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3010, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3008, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3006, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3004, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3002, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3000, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2998, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2996, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2994, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2992, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19296, %r2984, %r19297, %r71;
	// inline asm
	mov.u32 	%r19298, %r19297;
	mov.u32 	%r19327, %r19297;
	mov.u32 	%r19332, %r19297;
	mov.u32 	%r19333, %r19297;
	mov.u32 	%r19334, %r19297;
	mov.u32 	%r19335, %r19297;
	mov.u32 	%r19336, %r19297;
	mov.u32 	%r19337, %r19297;
	mov.u32 	%r19338, %r19297;
	mov.u32 	%r19339, %r19297;
	mov.u32 	%r19340, %r19297;
	mov.u32 	%r19341, %r19297;
	mov.u32 	%r19342, %r19297;
	mov.u32 	%r19343, %r19297;
	mov.u32 	%r19344, %r19297;
	mov.u32 	%r19345, %r19297;
	mov.u32 	%r19346, %r19297;
	mov.u32 	%r19347, %r19297;
	mov.u32 	%r19348, %r19297;
	mov.u32 	%r19349, %r19297;
	mov.u32 	%r19350, %r19297;
	mov.u32 	%r19351, %r19297;
	mov.u32 	%r19352, %r19297;
	mov.u32 	%r19353, %r19297;
	mov.u32 	%r19354, %r19297;
	mov.u32 	%r19355, %r19297;
	mov.u32 	%r19356, %r19297;
	mov.u32 	%r19357, %r19297;
	mov.u32 	%r19358, %r19297;
	mov.u32 	%r19359, %r19297;
	bra.uni 	BB2_91;

BB2_133:
	setp.eq.s32	%p73, %r70, 19;
	@%p73 bra 	BB2_180;
	bra.uni 	BB2_134;

BB2_180:
	// inline asm
	prmt.b32 %r3046, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r2990, 0;
	// inline asm
	prmt.b32 %r3022, %r2984, %r2990, %r71;
	// inline asm
	mov.u32 	%r2988, %r2990;
	mov.u32 	%r2986, %r2990;
	mov.u32 	%r2998, %r2990;
	mov.u32 	%r2996, %r2990;
	mov.u32 	%r2994, %r2990;
	mov.u32 	%r2992, %r2990;
	mov.u32 	%r3006, %r2990;
	mov.u32 	%r3004, %r2990;
	mov.u32 	%r3002, %r2990;
	mov.u32 	%r3000, %r2990;
	mov.u32 	%r3014, %r2990;
	mov.u32 	%r3012, %r2990;
	mov.u32 	%r3010, %r2990;
	mov.u32 	%r3008, %r2990;

BB2_177:
	mov.u32 	%r3020, %r2990;

BB2_178:
	mov.u32 	%r3018, %r2990;

BB2_179:
	mov.u32 	%r3016, %r2990;
	mov.u32 	%r19392, %r2990;
	bra.uni 	BB2_209;

BB2_44:
	setp.eq.s32	%p25, %r70, 19;
	@%p25 bra 	BB2_45;
	bra.uni 	BB2_67;

BB2_45:
	mov.u32 	%r19296, 0;
	// inline asm
	prmt.b32 %r19344, %r19296, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19345, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19346, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19347, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19340, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19341, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19342, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19343, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19336, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19337, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19338, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19339, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19332, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19333, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19334, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19335, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19328, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19329, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19330, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r2984, %r19296, %r71;
	// inline asm
	mov.u32 	%r19297, %r19296;
	mov.u32 	%r19298, %r19296;
	mov.u32 	%r2998, %r19296;
	mov.u32 	%r2996, %r19296;
	mov.u32 	%r2994, %r19296;
	mov.u32 	%r2992, %r19296;
	mov.u32 	%r3006, %r19296;
	mov.u32 	%r3004, %r19296;
	mov.u32 	%r3002, %r19296;
	mov.u32 	%r3000, %r19296;
	mov.u32 	%r3014, %r19296;
	mov.u32 	%r3012, %r19296;
	mov.u32 	%r3010, %r19296;
	mov.u32 	%r3008, %r19296;
	mov.u32 	%r3020, %r19296;
	mov.u32 	%r3018, %r19296;
	mov.u32 	%r3016, %r19296;
	mov.u32 	%r19327, %r19296;
	bra.uni 	BB2_83;

BB2_117:
	setp.eq.s32	%p85, %r70, 11;
	@%p85 bra 	BB2_194;
	bra.uni 	BB2_118;

BB2_194:
	// inline asm
	prmt.b32 %r3046, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3012, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3010, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3008, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r2990, 0;
	// inline asm
	prmt.b32 %r3006, %r2984, %r2990, %r71;
	// inline asm
	mov.u32 	%r2988, %r2990;
	mov.u32 	%r2986, %r2990;
	mov.u32 	%r2998, %r2990;
	mov.u32 	%r2996, %r2990;
	mov.u32 	%r2994, %r2990;
	mov.u32 	%r2992, %r2990;

BB2_191:
	mov.u32 	%r3004, %r2990;

BB2_192:
	mov.u32 	%r3002, %r2990;

BB2_193:
	mov.u32 	%r3000, %r2990;
	mov.u32 	%r19392, %r2990;
	bra.uni 	BB2_209;

BB2_28:
	setp.eq.s32	%p37, %r70, 11;
	@%p37 bra 	BB2_29;
	bra.uni 	BB2_67;

BB2_29:
	mov.u32 	%r19296, 0;
	// inline asm
	prmt.b32 %r19336, %r19296, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19337, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19338, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19339, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19332, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19333, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19334, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19335, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19328, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19329, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19330, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3012, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3010, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3008, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3006, %r2984, %r19296, %r71;
	// inline asm
	mov.u32 	%r19297, %r19296;
	mov.u32 	%r19298, %r19296;
	mov.u32 	%r2998, %r19296;
	mov.u32 	%r2996, %r19296;
	mov.u32 	%r2994, %r19296;
	mov.u32 	%r2992, %r19296;
	mov.u32 	%r3004, %r19296;
	mov.u32 	%r3002, %r19296;
	mov.u32 	%r3000, %r19296;
	mov.u32 	%r19327, %r19296;
	bra.uni 	BB2_81;

BB2_148:
	setp.eq.s32	%p62, %r70, 27;
	@%p62 bra 	BB2_166;
	bra.uni 	BB2_149;

BB2_166:
	// inline asm
	prmt.b32 %r3046, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r2990, 0;
	// inline asm
	prmt.b32 %r3038, %r2984, %r2990, %r71;
	// inline asm
	mov.u32 	%r2988, %r2990;
	mov.u32 	%r2986, %r2990;
	mov.u32 	%r2998, %r2990;
	mov.u32 	%r2996, %r2990;
	mov.u32 	%r2994, %r2990;
	mov.u32 	%r2992, %r2990;
	mov.u32 	%r3006, %r2990;
	mov.u32 	%r3004, %r2990;
	mov.u32 	%r3002, %r2990;
	mov.u32 	%r3000, %r2990;
	mov.u32 	%r3014, %r2990;
	mov.u32 	%r3012, %r2990;
	mov.u32 	%r3010, %r2990;
	mov.u32 	%r3008, %r2990;
	mov.u32 	%r3022, %r2990;
	mov.u32 	%r3020, %r2990;
	mov.u32 	%r3018, %r2990;
	mov.u32 	%r3016, %r2990;
	mov.u32 	%r3030, %r2990;
	mov.u32 	%r3028, %r2990;
	mov.u32 	%r3026, %r2990;
	mov.u32 	%r3024, %r2990;

BB2_163:
	mov.u32 	%r3036, %r2990;

BB2_164:
	mov.u32 	%r3034, %r2990;

BB2_165:
	mov.u32 	%r3032, %r2990;
	mov.u32 	%r19392, %r2990;
	bra.uni 	BB2_209;

BB2_59:
	setp.eq.s32	%p14, %r70, 27;
	@%p14 bra 	BB2_60;
	bra.uni 	BB2_67;

BB2_60:
	mov.u32 	%r19296, 0;
	// inline asm
	prmt.b32 %r19352, %r19296, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19353, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19354, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19355, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19348, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19349, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19350, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19351, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19344, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19345, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19346, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19347, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19340, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19341, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19342, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19343, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19336, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19337, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19338, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19339, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19332, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19333, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19334, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19335, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19328, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19329, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19330, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r2984, %r19296, %r71;
	// inline asm
	mov.u32 	%r19297, %r19296;
	mov.u32 	%r19298, %r19296;
	mov.u32 	%r2998, %r19296;
	mov.u32 	%r2996, %r19296;
	mov.u32 	%r2994, %r19296;
	mov.u32 	%r2992, %r19296;
	mov.u32 	%r3006, %r19296;
	mov.u32 	%r3004, %r19296;
	mov.u32 	%r3002, %r19296;
	mov.u32 	%r3000, %r19296;
	mov.u32 	%r3014, %r19296;
	mov.u32 	%r3012, %r19296;
	mov.u32 	%r3010, %r19296;
	mov.u32 	%r3008, %r19296;
	mov.u32 	%r3022, %r19296;
	mov.u32 	%r3020, %r19296;
	mov.u32 	%r3018, %r19296;
	mov.u32 	%r3016, %r19296;
	mov.u32 	%r3030, %r19296;
	mov.u32 	%r3028, %r19296;
	mov.u32 	%r3026, %r19296;
	mov.u32 	%r3024, %r19296;
	mov.u32 	%r3036, %r19296;
	mov.u32 	%r3034, %r19296;
	mov.u32 	%r3032, %r19296;
	mov.u32 	%r19327, %r19296;
	bra.uni 	BB2_85;

BB2_109:
	setp.eq.s32	%p91, %r70, 7;
	@%p91 bra 	BB2_201;
	bra.uni 	BB2_110;

BB2_201:
	// inline asm
	prmt.b32 %r3046, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3012, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3010, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3008, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3006, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3004, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3002, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3000, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r2990, 0;
	// inline asm
	prmt.b32 %r2998, %r2984, %r2990, %r71;
	// inline asm
	mov.u32 	%r2988, %r2990;
	mov.u32 	%r2986, %r2990;

BB2_198:
	mov.u32 	%r2996, %r2990;

BB2_199:
	mov.u32 	%r2994, %r2990;

BB2_200:
	mov.u32 	%r2992, %r2990;
	mov.u32 	%r19392, %r2990;
	bra.uni 	BB2_209;

BB2_19:
	setp.eq.s32	%p43, %r70, 7;
	@%p43 bra 	BB2_20;
	bra.uni 	BB2_67;

BB2_20:
	mov.u32 	%r19296, 0;
	// inline asm
	prmt.b32 %r19332, %r19296, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19333, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19334, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19335, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19328, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19329, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19330, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3012, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3010, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3008, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3006, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3004, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3002, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3000, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r2998, %r2984, %r19296, %r71;
	// inline asm
	mov.u32 	%r19297, %r19296;
	mov.u32 	%r19298, %r19296;
	mov.u32 	%r2996, %r19296;
	mov.u32 	%r2994, %r19296;
	mov.u32 	%r2992, %r19296;
	mov.u32 	%r19327, %r19296;

BB2_21:
	mov.u32 	%r19336, %r19296;
	mov.u32 	%r19337, %r19296;
	mov.u32 	%r19338, %r19296;
	mov.u32 	%r19339, %r19296;

BB2_81:
	mov.u32 	%r19340, %r19296;
	mov.u32 	%r19341, %r19296;
	mov.u32 	%r19342, %r19296;
	mov.u32 	%r19343, %r19296;

BB2_82:
	mov.u32 	%r19344, %r19296;
	mov.u32 	%r19345, %r19296;
	mov.u32 	%r19346, %r19296;
	mov.u32 	%r19347, %r19296;

BB2_83:
	mov.u32 	%r19348, %r19296;
	mov.u32 	%r19349, %r19296;
	mov.u32 	%r19350, %r19296;
	mov.u32 	%r19351, %r19296;

BB2_84:
	mov.u32 	%r19352, %r19296;
	mov.u32 	%r19353, %r19296;
	mov.u32 	%r19354, %r19296;
	mov.u32 	%r19355, %r19296;

BB2_85:
	mov.u32 	%r19356, %r19296;
	mov.u32 	%r19357, %r19296;
	mov.u32 	%r19358, %r19296;
	mov.u32 	%r19359, %r19296;
	bra.uni 	BB2_91;

BB2_140:
	setp.eq.s32	%p68, %r70, 23;
	@%p68 bra 	BB2_173;
	bra.uni 	BB2_141;

BB2_173:
	// inline asm
	prmt.b32 %r3046, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r2990, 0;
	// inline asm
	prmt.b32 %r3030, %r2984, %r2990, %r71;
	// inline asm
	mov.u32 	%r2988, %r2990;
	mov.u32 	%r2986, %r2990;
	mov.u32 	%r2998, %r2990;
	mov.u32 	%r2996, %r2990;
	mov.u32 	%r2994, %r2990;
	mov.u32 	%r2992, %r2990;
	mov.u32 	%r3006, %r2990;
	mov.u32 	%r3004, %r2990;
	mov.u32 	%r3002, %r2990;
	mov.u32 	%r3000, %r2990;
	mov.u32 	%r3014, %r2990;
	mov.u32 	%r3012, %r2990;
	mov.u32 	%r3010, %r2990;
	mov.u32 	%r3008, %r2990;
	mov.u32 	%r3022, %r2990;
	mov.u32 	%r3020, %r2990;
	mov.u32 	%r3018, %r2990;
	mov.u32 	%r3016, %r2990;

BB2_170:
	mov.u32 	%r3028, %r2990;

BB2_171:
	mov.u32 	%r3026, %r2990;

BB2_172:
	mov.u32 	%r3024, %r2990;
	mov.u32 	%r19392, %r2990;
	bra.uni 	BB2_209;

BB2_51:
	setp.eq.s32	%p20, %r70, 23;
	@%p20 bra 	BB2_52;
	bra.uni 	BB2_67;

BB2_52:
	mov.u32 	%r19296, 0;
	// inline asm
	prmt.b32 %r19348, %r19296, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19349, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19350, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19351, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19344, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19345, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19346, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19347, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19340, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19341, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19342, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19343, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19336, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19337, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19338, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19339, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19332, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19333, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19334, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19335, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19328, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19329, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19330, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r2984, %r19296, %r71;
	// inline asm
	mov.u32 	%r19297, %r19296;
	mov.u32 	%r19298, %r19296;
	mov.u32 	%r2998, %r19296;
	mov.u32 	%r2996, %r19296;
	mov.u32 	%r2994, %r19296;
	mov.u32 	%r2992, %r19296;
	mov.u32 	%r3006, %r19296;
	mov.u32 	%r3004, %r19296;
	mov.u32 	%r3002, %r19296;
	mov.u32 	%r3000, %r19296;
	mov.u32 	%r3014, %r19296;
	mov.u32 	%r3012, %r19296;
	mov.u32 	%r3010, %r19296;
	mov.u32 	%r3008, %r19296;
	mov.u32 	%r3022, %r19296;
	mov.u32 	%r3020, %r19296;
	mov.u32 	%r3018, %r19296;
	mov.u32 	%r3016, %r19296;
	mov.u32 	%r3028, %r19296;
	mov.u32 	%r3026, %r19296;
	mov.u32 	%r3024, %r19296;
	mov.u32 	%r19327, %r19296;
	bra.uni 	BB2_84;

BB2_124:
	setp.eq.s32	%p80, %r70, 15;
	@%p80 bra 	BB2_187;
	bra.uni 	BB2_125;

BB2_187:
	// inline asm
	prmt.b32 %r3046, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r2986, %r2984, %r71;
	// inline asm
	mov.u32 	%r2990, 0;
	// inline asm
	prmt.b32 %r3014, %r2984, %r2990, %r71;
	// inline asm
	mov.u32 	%r2988, %r2990;
	mov.u32 	%r2986, %r2990;
	mov.u32 	%r2998, %r2990;
	mov.u32 	%r2996, %r2990;
	mov.u32 	%r2994, %r2990;
	mov.u32 	%r2992, %r2990;
	mov.u32 	%r3006, %r2990;
	mov.u32 	%r3004, %r2990;
	mov.u32 	%r3002, %r2990;
	mov.u32 	%r3000, %r2990;

BB2_184:
	mov.u32 	%r3012, %r2990;

BB2_185:
	mov.u32 	%r3010, %r2990;

BB2_186:
	mov.u32 	%r3008, %r2990;
	mov.u32 	%r19392, %r2990;
	bra.uni 	BB2_209;

BB2_35:
	setp.eq.s32	%p32, %r70, 15;
	@%p32 bra 	BB2_36;
	bra.uni 	BB2_67;

BB2_36:
	mov.u32 	%r19296, 0;
	// inline asm
	prmt.b32 %r19340, %r19296, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19341, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19342, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19343, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19336, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19337, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19338, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19339, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19332, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19333, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19334, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19335, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19328, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19329, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19330, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3044, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3042, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3040, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3038, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3036, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3034, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3032, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3030, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3028, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3026, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3024, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3022, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3020, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3018, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3016, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3014, %r2984, %r19296, %r71;
	// inline asm
	mov.u32 	%r19297, %r19296;
	mov.u32 	%r19298, %r19296;
	mov.u32 	%r2998, %r19296;
	mov.u32 	%r2996, %r19296;
	mov.u32 	%r2994, %r19296;
	mov.u32 	%r2992, %r19296;
	mov.u32 	%r3006, %r19296;
	mov.u32 	%r3004, %r19296;
	mov.u32 	%r3002, %r19296;
	mov.u32 	%r3000, %r19296;
	mov.u32 	%r3012, %r19296;
	mov.u32 	%r3010, %r19296;
	mov.u32 	%r3008, %r19296;
	mov.u32 	%r19327, %r19296;
	bra.uni 	BB2_82;

BB2_155:
	setp.ne.s32	%p57, %r70, 31;
	@%p57 bra 	BB2_156;

	mov.u32 	%r2990, 0;
	// inline asm
	prmt.b32 %r3046, %r2984, %r2990, %r71;
	// inline asm
	mov.u32 	%r2988, %r2990;
	mov.u32 	%r2986, %r2990;
	mov.u32 	%r2998, %r2990;
	mov.u32 	%r2996, %r2990;
	mov.u32 	%r2994, %r2990;
	mov.u32 	%r2992, %r2990;
	mov.u32 	%r3006, %r2990;
	mov.u32 	%r3004, %r2990;
	mov.u32 	%r3002, %r2990;
	mov.u32 	%r3000, %r2990;
	mov.u32 	%r3014, %r2990;
	mov.u32 	%r3012, %r2990;
	mov.u32 	%r3010, %r2990;
	mov.u32 	%r3008, %r2990;
	mov.u32 	%r3022, %r2990;
	mov.u32 	%r3020, %r2990;
	mov.u32 	%r3018, %r2990;
	mov.u32 	%r3016, %r2990;
	mov.u32 	%r3030, %r2990;
	mov.u32 	%r3028, %r2990;
	mov.u32 	%r3026, %r2990;
	mov.u32 	%r3024, %r2990;
	mov.u32 	%r3038, %r2990;
	mov.u32 	%r3036, %r2990;
	mov.u32 	%r3034, %r2990;
	mov.u32 	%r3032, %r2990;
	mov.u32 	%r3044, %r2990;

BB2_158:
	mov.u32 	%r3042, %r2990;

BB2_159:
	mov.u32 	%r3040, %r2990;
	mov.u32 	%r19392, %r2990;
	bra.uni 	BB2_209;

BB2_66:
	setp.ne.s32	%p9, %r70, 31;
	@%p9 bra 	BB2_67;

	mov.u32 	%r19296, 0;
	// inline asm
	prmt.b32 %r19356, %r19296, %r3046, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19357, %r3046, %r3044, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19358, %r3044, %r3042, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19359, %r3042, %r3040, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19352, %r3040, %r3038, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19353, %r3038, %r3036, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19354, %r3036, %r3034, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19355, %r3034, %r3032, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19348, %r3032, %r3030, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19349, %r3030, %r3028, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19350, %r3028, %r3026, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19351, %r3026, %r3024, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19344, %r3024, %r3022, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19345, %r3022, %r3020, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19346, %r3020, %r3018, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19347, %r3018, %r3016, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19340, %r3016, %r3014, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19341, %r3014, %r3012, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19342, %r3012, %r3010, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19343, %r3010, %r3008, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19336, %r3008, %r3006, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19337, %r3006, %r3004, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19338, %r3004, %r3002, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19339, %r3002, %r3000, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19332, %r3000, %r2998, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19333, %r2998, %r2996, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19334, %r2996, %r2994, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19335, %r2994, %r2992, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19328, %r2992, %r2990, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19329, %r2990, %r2988, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19330, %r2988, %r2986, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r19331, %r2986, %r2984, %r71;
	// inline asm
	// inline asm
	prmt.b32 %r3046, %r2984, %r19296, %r71;
	// inline asm
	mov.u32 	%r19297, %r19296;
	mov.u32 	%r19298, %r19296;
	mov.u32 	%r2998, %r19296;
	mov.u32 	%r2996, %r19296;
	mov.u32 	%r2994, %r19296;
	mov.u32 	%r2992, %r19296;
	mov.u32 	%r3006, %r19296;
	mov.u32 	%r3004, %r19296;
	mov.u32 	%r3002, %r19296;
	mov.u32 	%r3000, %r19296;
	mov.u32 	%r3014, %r19296;
	mov.u32 	%r3012, %r19296;
	mov.u32 	%r3010, %r19296;
	mov.u32 	%r3008, %r19296;
	mov.u32 	%r3022, %r19296;
	mov.u32 	%r3020, %r19296;
	mov.u32 	%r3018, %r19296;
	mov.u32 	%r3016, %r19296;
	mov.u32 	%r3030, %r19296;
	mov.u32 	%r3028, %r19296;
	mov.u32 	%r3026, %r19296;
	mov.u32 	%r3024, %r19296;
	mov.u32 	%r3038, %r19296;
	mov.u32 	%r3036, %r19296;
	mov.u32 	%r3034, %r19296;
	mov.u32 	%r3032, %r19296;
	mov.u32 	%r3044, %r19296;
	mov.u32 	%r3042, %r19296;
	mov.u32 	%r3040, %r19296;
	mov.u32 	%r19327, %r19296;
	bra.uni 	BB2_91;

BB2_67:
	mov.u32 	%r19296, %r2990;
	mov.u32 	%r19297, %r2988;
	mov.u32 	%r19298, %r2986;
	mov.u32 	%r19327, %r2984;
	mov.u32 	%r19329, %r19328;
	mov.u32 	%r19330, %r19328;
	mov.u32 	%r19331, %r19328;

BB2_90:
	mov.u32 	%r19332, %r19328;
	mov.u32 	%r19333, %r19328;
	mov.u32 	%r19334, %r19328;
	mov.u32 	%r19335, %r19328;
	mov.u32 	%r19336, %r19328;
	mov.u32 	%r19337, %r19328;
	mov.u32 	%r19338, %r19328;
	mov.u32 	%r19339, %r19328;
	mov.u32 	%r19340, %r19328;
	mov.u32 	%r19341, %r19328;
	mov.u32 	%r19342, %r19328;
	mov.u32 	%r19343, %r19328;
	mov.u32 	%r19344, %r19328;
	mov.u32 	%r19345, %r19328;
	mov.u32 	%r19346, %r19328;
	mov.u32 	%r19347, %r19328;
	mov.u32 	%r19348, %r19328;
	mov.u32 	%r19349, %r19328;
	mov.u32 	%r19350, %r19328;
	mov.u32 	%r19351, %r19328;
	mov.u32 	%r19352, %r19328;
	mov.u32 	%r19353, %r19328;
	mov.u32 	%r19354, %r19328;
	mov.u32 	%r19355, %r19328;
	mov.u32 	%r19356, %r19328;
	mov.u32 	%r19357, %r19328;
	mov.u32 	%r19358, %r19328;
	mov.u32 	%r19359, %r19328;

BB2_91:
	ld.local.u32 	%r8303, [%rd1+64];
	or.b32  	%r8304, %r8303, %r19327;
	st.local.u32 	[%rd1+64], %r8304;
	ld.local.u32 	%r8305, [%rd1+68];
	or.b32  	%r8306, %r8305, %r19298;
	st.local.u32 	[%rd1+68], %r8306;
	ld.local.u32 	%r8307, [%rd1+72];
	or.b32  	%r8308, %r8307, %r19297;
	st.local.u32 	[%rd1+72], %r8308;
	ld.local.u32 	%r8309, [%rd1+76];
	or.b32  	%r8310, %r8309, %r19296;
	st.local.u32 	[%rd1+76], %r8310;
	ld.local.u32 	%r8311, [%rd1+80];
	or.b32  	%r8312, %r8311, %r2992;
	st.local.u32 	[%rd1+80], %r8312;
	ld.local.u32 	%r8313, [%rd1+84];
	or.b32  	%r8314, %r8313, %r2994;
	st.local.u32 	[%rd1+84], %r8314;
	ld.local.u32 	%r8315, [%rd1+88];
	or.b32  	%r8316, %r8315, %r2996;
	st.local.u32 	[%rd1+88], %r8316;
	ld.local.u32 	%r8317, [%rd1+92];
	or.b32  	%r8318, %r8317, %r2998;
	st.local.u32 	[%rd1+92], %r8318;
	ld.local.u32 	%r8319, [%rd1+96];
	or.b32  	%r8320, %r8319, %r3000;
	st.local.u32 	[%rd1+96], %r8320;
	ld.local.u32 	%r8321, [%rd1+100];
	or.b32  	%r8322, %r8321, %r3002;
	st.local.u32 	[%rd1+100], %r8322;
	ld.local.u32 	%r8323, [%rd1+104];
	or.b32  	%r8324, %r8323, %r3004;
	st.local.u32 	[%rd1+104], %r8324;
	ld.local.u32 	%r8325, [%rd1+108];
	or.b32  	%r8326, %r8325, %r3006;
	st.local.u32 	[%rd1+108], %r8326;
	ld.local.u32 	%r8327, [%rd1+112];
	or.b32  	%r8328, %r8327, %r3008;
	st.local.u32 	[%rd1+112], %r8328;
	ld.local.u32 	%r8329, [%rd1+116];
	or.b32  	%r8330, %r8329, %r3010;
	st.local.u32 	[%rd1+116], %r8330;
	ld.local.u32 	%r8331, [%rd1+120];
	or.b32  	%r8332, %r8331, %r3012;
	st.local.u32 	[%rd1+120], %r8332;
	ld.local.u32 	%r8333, [%rd1+124];
	or.b32  	%r8334, %r8333, %r3014;
	st.local.u32 	[%rd1+124], %r8334;
	ld.local.u32 	%r8335, [%rd1+128];
	or.b32  	%r8336, %r8335, %r3016;
	st.local.u32 	[%rd1+128], %r8336;
	ld.local.u32 	%r8337, [%rd1+132];
	or.b32  	%r8338, %r8337, %r3018;
	st.local.u32 	[%rd1+132], %r8338;
	ld.local.u32 	%r8339, [%rd1+136];
	or.b32  	%r8340, %r8339, %r3020;
	st.local.u32 	[%rd1+136], %r8340;
	ld.local.u32 	%r8341, [%rd1+140];
	or.b32  	%r8342, %r8341, %r3022;
	st.local.u32 	[%rd1+140], %r8342;
	ld.local.u32 	%r8343, [%rd1+144];
	or.b32  	%r8344, %r8343, %r3024;
	st.local.u32 	[%rd1+144], %r8344;
	ld.local.u32 	%r8345, [%rd1+148];
	or.b32  	%r8346, %r8345, %r3026;
	st.local.u32 	[%rd1+148], %r8346;
	ld.local.u32 	%r8347, [%rd1+152];
	or.b32  	%r8348, %r8347, %r3028;
	st.local.u32 	[%rd1+152], %r8348;
	ld.local.u32 	%r8349, [%rd1+156];
	or.b32  	%r8350, %r8349, %r3030;
	st.local.u32 	[%rd1+156], %r8350;
	ld.local.u32 	%r8351, [%rd1+160];
	or.b32  	%r8352, %r8351, %r3032;
	st.local.u32 	[%rd1+160], %r8352;
	ld.local.u32 	%r8353, [%rd1+164];
	or.b32  	%r8354, %r8353, %r3034;
	st.local.u32 	[%rd1+164], %r8354;
	ld.local.u32 	%r8355, [%rd1+168];
	or.b32  	%r8356, %r8355, %r3036;
	st.local.u32 	[%rd1+168], %r8356;
	ld.local.u32 	%r8357, [%rd1+172];
	or.b32  	%r8358, %r8357, %r3038;
	st.local.u32 	[%rd1+172], %r8358;
	ld.local.u32 	%r8359, [%rd1+176];
	or.b32  	%r8360, %r8359, %r3040;
	st.local.u32 	[%rd1+176], %r8360;
	ld.local.u32 	%r8361, [%rd1+180];
	or.b32  	%r8362, %r8361, %r3042;
	st.local.u32 	[%rd1+180], %r8362;
	ld.local.u32 	%r8363, [%rd1+184];
	or.b32  	%r8364, %r8363, %r3044;
	st.local.u32 	[%rd1+184], %r8364;
	ld.local.u32 	%r8365, [%rd1+188];
	or.b32  	%r8366, %r8365, %r3046;
	st.local.u32 	[%rd1+188], %r8366;
	mov.b64	%rd4396, {%r8306, %r8304};
	mov.b64	%rd4397, {%r8310, %r8308};
	mov.b64	%rd4398, {%r8314, %r8312};
	mov.b64	%rd4399, {%r8318, %r8316};
	mov.b64	%rd4400, {%r8322, %r8320};
	mov.b64	%rd4401, {%r8326, %r8324};
	mov.b64	%rd4402, {%r8330, %r8328};
	mov.b64	%rd4403, {%r8334, %r8332};
	mov.b64	%rd4387, {%r8338, %r8336};
	mov.b64	%rd4386, {%r8342, %r8340};
	mov.b64	%rd4385, {%r8346, %r8344};
	mov.b64	%rd4384, {%r8350, %r8348};
	mov.b64	%rd4383, {%r8354, %r8352};
	mov.b64	%rd4382, {%r8358, %r8356};
	mov.b64	%rd4381, {%r8362, %r8360};
	mov.b64	%rd4380, {%r8366, %r8364};
	ld.local.u64 	%rd34, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8367,%dummy}, %rd34;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8368}, %rd34;
	}
	shf.r.wrap.b32 	%r8369, %r8368, %r8367, 14;
	shf.r.wrap.b32 	%r8370, %r8367, %r8368, 14;
	mov.b64 	%rd409, {%r8370, %r8369};
	shf.r.wrap.b32 	%r8371, %r8368, %r8367, 18;
	shf.r.wrap.b32 	%r8372, %r8367, %r8368, 18;
	mov.b64 	%rd410, {%r8372, %r8371};
	xor.b64  	%rd411, %rd410, %rd409;
	shf.l.wrap.b32 	%r8373, %r8367, %r8368, 23;
	shf.l.wrap.b32 	%r8374, %r8368, %r8367, 23;
	mov.b64 	%rd412, {%r8374, %r8373};
	xor.b64  	%rd413, %rd411, %rd412;
	ld.local.u64 	%rd35, [%rd1+48];
	ld.local.u64 	%rd36, [%rd1+40];
	xor.b64  	%rd414, %rd35, %rd36;
	and.b64  	%rd415, %rd414, %rd34;
	xor.b64  	%rd416, %rd415, %rd35;
	ld.local.u64 	%rd37, [%rd1+56];
	add.s64 	%rd417, %rd37, %rd4396;
	add.s64 	%rd418, %rd417, %rd2;
	add.s64 	%rd419, %rd418, %rd416;
	add.s64 	%rd420, %rd419, %rd413;
	ld.local.u64 	%rd38, [%rd1+24];
	add.s64 	%rd421, %rd420, %rd38;
	ld.local.u64 	%rd39, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8375,%dummy}, %rd39;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8376}, %rd39;
	}
	shf.r.wrap.b32 	%r8377, %r8376, %r8375, 28;
	shf.r.wrap.b32 	%r8378, %r8375, %r8376, 28;
	mov.b64 	%rd422, {%r8378, %r8377};
	shf.l.wrap.b32 	%r8379, %r8375, %r8376, 30;
	shf.l.wrap.b32 	%r8380, %r8376, %r8375, 30;
	mov.b64 	%rd423, {%r8380, %r8379};
	xor.b64  	%rd424, %rd423, %rd422;
	shf.l.wrap.b32 	%r8381, %r8375, %r8376, 25;
	shf.l.wrap.b32 	%r8382, %r8376, %r8375, 25;
	mov.b64 	%rd425, {%r8382, %r8381};
	xor.b64  	%rd426, %rd424, %rd425;
	ld.local.u64 	%rd40, [%rd1+8];
	and.b64  	%rd427, %rd40, %rd39;
	xor.b64  	%rd428, %rd40, %rd39;
	ld.local.u64 	%rd41, [%rd1+16];
	and.b64  	%rd429, %rd41, %rd428;
	or.b64  	%rd430, %rd429, %rd427;
	add.s64 	%rd431, %rd420, %rd430;
	add.s64 	%rd432, %rd431, %rd426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8383,%dummy}, %rd421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8384}, %rd421;
	}
	shf.r.wrap.b32 	%r8385, %r8384, %r8383, 14;
	shf.r.wrap.b32 	%r8386, %r8383, %r8384, 14;
	mov.b64 	%rd433, {%r8386, %r8385};
	shf.r.wrap.b32 	%r8387, %r8384, %r8383, 18;
	shf.r.wrap.b32 	%r8388, %r8383, %r8384, 18;
	mov.b64 	%rd434, {%r8388, %r8387};
	xor.b64  	%rd435, %rd434, %rd433;
	shf.l.wrap.b32 	%r8389, %r8383, %r8384, 23;
	shf.l.wrap.b32 	%r8390, %r8384, %r8383, 23;
	mov.b64 	%rd436, {%r8390, %r8389};
	xor.b64  	%rd437, %rd435, %rd436;
	xor.b64  	%rd438, %rd36, %rd34;
	and.b64  	%rd439, %rd421, %rd438;
	xor.b64  	%rd440, %rd439, %rd36;
	add.s64 	%rd441, %rd35, %rd4397;
	add.s64 	%rd442, %rd441, %rd3;
	add.s64 	%rd443, %rd442, %rd440;
	add.s64 	%rd444, %rd443, %rd437;
	add.s64 	%rd445, %rd444, %rd41;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8391,%dummy}, %rd432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8392}, %rd432;
	}
	shf.r.wrap.b32 	%r8393, %r8392, %r8391, 28;
	shf.r.wrap.b32 	%r8394, %r8391, %r8392, 28;
	mov.b64 	%rd446, {%r8394, %r8393};
	shf.l.wrap.b32 	%r8395, %r8391, %r8392, 30;
	shf.l.wrap.b32 	%r8396, %r8392, %r8391, 30;
	mov.b64 	%rd447, {%r8396, %r8395};
	xor.b64  	%rd448, %rd447, %rd446;
	shf.l.wrap.b32 	%r8397, %r8391, %r8392, 25;
	shf.l.wrap.b32 	%r8398, %r8392, %r8391, 25;
	mov.b64 	%rd449, {%r8398, %r8397};
	xor.b64  	%rd450, %rd448, %rd449;
	and.b64  	%rd451, %rd432, %rd39;
	xor.b64  	%rd452, %rd432, %rd39;
	and.b64  	%rd453, %rd452, %rd40;
	or.b64  	%rd454, %rd453, %rd451;
	add.s64 	%rd455, %rd444, %rd454;
	add.s64 	%rd456, %rd455, %rd450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8399,%dummy}, %rd445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8400}, %rd445;
	}
	shf.r.wrap.b32 	%r8401, %r8400, %r8399, 14;
	shf.r.wrap.b32 	%r8402, %r8399, %r8400, 14;
	mov.b64 	%rd457, {%r8402, %r8401};
	shf.r.wrap.b32 	%r8403, %r8400, %r8399, 18;
	shf.r.wrap.b32 	%r8404, %r8399, %r8400, 18;
	mov.b64 	%rd458, {%r8404, %r8403};
	xor.b64  	%rd459, %rd458, %rd457;
	shf.l.wrap.b32 	%r8405, %r8399, %r8400, 23;
	shf.l.wrap.b32 	%r8406, %r8400, %r8399, 23;
	mov.b64 	%rd460, {%r8406, %r8405};
	xor.b64  	%rd461, %rd459, %rd460;
	xor.b64  	%rd462, %rd421, %rd34;
	and.b64  	%rd463, %rd445, %rd462;
	xor.b64  	%rd464, %rd463, %rd34;
	add.s64 	%rd465, %rd36, %rd4398;
	add.s64 	%rd466, %rd465, %rd4;
	add.s64 	%rd467, %rd466, %rd464;
	add.s64 	%rd468, %rd467, %rd461;
	add.s64 	%rd469, %rd468, %rd40;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8407,%dummy}, %rd456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8408}, %rd456;
	}
	shf.r.wrap.b32 	%r8409, %r8408, %r8407, 28;
	shf.r.wrap.b32 	%r8410, %r8407, %r8408, 28;
	mov.b64 	%rd470, {%r8410, %r8409};
	shf.l.wrap.b32 	%r8411, %r8407, %r8408, 30;
	shf.l.wrap.b32 	%r8412, %r8408, %r8407, 30;
	mov.b64 	%rd471, {%r8412, %r8411};
	xor.b64  	%rd472, %rd471, %rd470;
	shf.l.wrap.b32 	%r8413, %r8407, %r8408, 25;
	shf.l.wrap.b32 	%r8414, %r8408, %r8407, 25;
	mov.b64 	%rd473, {%r8414, %r8413};
	xor.b64  	%rd474, %rd472, %rd473;
	and.b64  	%rd475, %rd456, %rd432;
	xor.b64  	%rd476, %rd456, %rd432;
	and.b64  	%rd477, %rd476, %rd39;
	or.b64  	%rd478, %rd477, %rd475;
	add.s64 	%rd479, %rd468, %rd478;
	add.s64 	%rd480, %rd479, %rd474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8415,%dummy}, %rd469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8416}, %rd469;
	}
	shf.r.wrap.b32 	%r8417, %r8416, %r8415, 14;
	shf.r.wrap.b32 	%r8418, %r8415, %r8416, 14;
	mov.b64 	%rd481, {%r8418, %r8417};
	shf.r.wrap.b32 	%r8419, %r8416, %r8415, 18;
	shf.r.wrap.b32 	%r8420, %r8415, %r8416, 18;
	mov.b64 	%rd482, {%r8420, %r8419};
	xor.b64  	%rd483, %rd482, %rd481;
	shf.l.wrap.b32 	%r8421, %r8415, %r8416, 23;
	shf.l.wrap.b32 	%r8422, %r8416, %r8415, 23;
	mov.b64 	%rd484, {%r8422, %r8421};
	xor.b64  	%rd485, %rd483, %rd484;
	xor.b64  	%rd486, %rd445, %rd421;
	and.b64  	%rd487, %rd469, %rd486;
	xor.b64  	%rd488, %rd487, %rd421;
	add.s64 	%rd489, %rd34, %rd4399;
	add.s64 	%rd490, %rd489, %rd5;
	add.s64 	%rd491, %rd490, %rd488;
	add.s64 	%rd492, %rd491, %rd485;
	add.s64 	%rd493, %rd492, %rd39;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8423,%dummy}, %rd480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8424}, %rd480;
	}
	shf.r.wrap.b32 	%r8425, %r8424, %r8423, 28;
	shf.r.wrap.b32 	%r8426, %r8423, %r8424, 28;
	mov.b64 	%rd494, {%r8426, %r8425};
	shf.l.wrap.b32 	%r8427, %r8423, %r8424, 30;
	shf.l.wrap.b32 	%r8428, %r8424, %r8423, 30;
	mov.b64 	%rd495, {%r8428, %r8427};
	xor.b64  	%rd496, %rd495, %rd494;
	shf.l.wrap.b32 	%r8429, %r8423, %r8424, 25;
	shf.l.wrap.b32 	%r8430, %r8424, %r8423, 25;
	mov.b64 	%rd497, {%r8430, %r8429};
	xor.b64  	%rd498, %rd496, %rd497;
	and.b64  	%rd499, %rd480, %rd456;
	xor.b64  	%rd500, %rd480, %rd456;
	and.b64  	%rd501, %rd500, %rd432;
	or.b64  	%rd502, %rd501, %rd499;
	add.s64 	%rd503, %rd492, %rd502;
	add.s64 	%rd504, %rd503, %rd498;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8431,%dummy}, %rd493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8432}, %rd493;
	}
	shf.r.wrap.b32 	%r8433, %r8432, %r8431, 14;
	shf.r.wrap.b32 	%r8434, %r8431, %r8432, 14;
	mov.b64 	%rd505, {%r8434, %r8433};
	shf.r.wrap.b32 	%r8435, %r8432, %r8431, 18;
	shf.r.wrap.b32 	%r8436, %r8431, %r8432, 18;
	mov.b64 	%rd506, {%r8436, %r8435};
	xor.b64  	%rd507, %rd506, %rd505;
	shf.l.wrap.b32 	%r8437, %r8431, %r8432, 23;
	shf.l.wrap.b32 	%r8438, %r8432, %r8431, 23;
	mov.b64 	%rd508, {%r8438, %r8437};
	xor.b64  	%rd509, %rd507, %rd508;
	xor.b64  	%rd510, %rd469, %rd445;
	and.b64  	%rd511, %rd493, %rd510;
	xor.b64  	%rd512, %rd511, %rd445;
	add.s64 	%rd513, %rd421, %rd4400;
	add.s64 	%rd514, %rd513, %rd6;
	add.s64 	%rd515, %rd514, %rd512;
	add.s64 	%rd516, %rd515, %rd509;
	add.s64 	%rd517, %rd516, %rd432;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8439,%dummy}, %rd504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8440}, %rd504;
	}
	shf.r.wrap.b32 	%r8441, %r8440, %r8439, 28;
	shf.r.wrap.b32 	%r8442, %r8439, %r8440, 28;
	mov.b64 	%rd518, {%r8442, %r8441};
	shf.l.wrap.b32 	%r8443, %r8439, %r8440, 30;
	shf.l.wrap.b32 	%r8444, %r8440, %r8439, 30;
	mov.b64 	%rd519, {%r8444, %r8443};
	xor.b64  	%rd520, %rd519, %rd518;
	shf.l.wrap.b32 	%r8445, %r8439, %r8440, 25;
	shf.l.wrap.b32 	%r8446, %r8440, %r8439, 25;
	mov.b64 	%rd521, {%r8446, %r8445};
	xor.b64  	%rd522, %rd520, %rd521;
	and.b64  	%rd523, %rd504, %rd480;
	xor.b64  	%rd524, %rd504, %rd480;
	and.b64  	%rd525, %rd524, %rd456;
	or.b64  	%rd526, %rd525, %rd523;
	add.s64 	%rd527, %rd516, %rd526;
	add.s64 	%rd528, %rd527, %rd522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8447,%dummy}, %rd517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8448}, %rd517;
	}
	shf.r.wrap.b32 	%r8449, %r8448, %r8447, 14;
	shf.r.wrap.b32 	%r8450, %r8447, %r8448, 14;
	mov.b64 	%rd529, {%r8450, %r8449};
	shf.r.wrap.b32 	%r8451, %r8448, %r8447, 18;
	shf.r.wrap.b32 	%r8452, %r8447, %r8448, 18;
	mov.b64 	%rd530, {%r8452, %r8451};
	xor.b64  	%rd531, %rd530, %rd529;
	shf.l.wrap.b32 	%r8453, %r8447, %r8448, 23;
	shf.l.wrap.b32 	%r8454, %r8448, %r8447, 23;
	mov.b64 	%rd532, {%r8454, %r8453};
	xor.b64  	%rd533, %rd531, %rd532;
	xor.b64  	%rd534, %rd493, %rd469;
	and.b64  	%rd535, %rd517, %rd534;
	xor.b64  	%rd536, %rd535, %rd469;
	add.s64 	%rd537, %rd445, %rd4401;
	add.s64 	%rd538, %rd537, %rd7;
	add.s64 	%rd539, %rd538, %rd536;
	add.s64 	%rd540, %rd539, %rd533;
	add.s64 	%rd541, %rd540, %rd456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8455,%dummy}, %rd528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8456}, %rd528;
	}
	shf.r.wrap.b32 	%r8457, %r8456, %r8455, 28;
	shf.r.wrap.b32 	%r8458, %r8455, %r8456, 28;
	mov.b64 	%rd542, {%r8458, %r8457};
	shf.l.wrap.b32 	%r8459, %r8455, %r8456, 30;
	shf.l.wrap.b32 	%r8460, %r8456, %r8455, 30;
	mov.b64 	%rd543, {%r8460, %r8459};
	xor.b64  	%rd544, %rd543, %rd542;
	shf.l.wrap.b32 	%r8461, %r8455, %r8456, 25;
	shf.l.wrap.b32 	%r8462, %r8456, %r8455, 25;
	mov.b64 	%rd545, {%r8462, %r8461};
	xor.b64  	%rd546, %rd544, %rd545;
	and.b64  	%rd547, %rd528, %rd504;
	xor.b64  	%rd548, %rd528, %rd504;
	and.b64  	%rd549, %rd548, %rd480;
	or.b64  	%rd550, %rd549, %rd547;
	add.s64 	%rd551, %rd540, %rd550;
	add.s64 	%rd552, %rd551, %rd546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8463,%dummy}, %rd541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8464}, %rd541;
	}
	shf.r.wrap.b32 	%r8465, %r8464, %r8463, 14;
	shf.r.wrap.b32 	%r8466, %r8463, %r8464, 14;
	mov.b64 	%rd553, {%r8466, %r8465};
	shf.r.wrap.b32 	%r8467, %r8464, %r8463, 18;
	shf.r.wrap.b32 	%r8468, %r8463, %r8464, 18;
	mov.b64 	%rd554, {%r8468, %r8467};
	xor.b64  	%rd555, %rd554, %rd553;
	shf.l.wrap.b32 	%r8469, %r8463, %r8464, 23;
	shf.l.wrap.b32 	%r8470, %r8464, %r8463, 23;
	mov.b64 	%rd556, {%r8470, %r8469};
	xor.b64  	%rd557, %rd555, %rd556;
	xor.b64  	%rd558, %rd517, %rd493;
	and.b64  	%rd559, %rd541, %rd558;
	xor.b64  	%rd560, %rd559, %rd493;
	add.s64 	%rd561, %rd469, %rd4402;
	add.s64 	%rd562, %rd561, %rd8;
	add.s64 	%rd563, %rd562, %rd560;
	add.s64 	%rd564, %rd563, %rd557;
	add.s64 	%rd565, %rd564, %rd480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8471,%dummy}, %rd552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8472}, %rd552;
	}
	shf.r.wrap.b32 	%r8473, %r8472, %r8471, 28;
	shf.r.wrap.b32 	%r8474, %r8471, %r8472, 28;
	mov.b64 	%rd566, {%r8474, %r8473};
	shf.l.wrap.b32 	%r8475, %r8471, %r8472, 30;
	shf.l.wrap.b32 	%r8476, %r8472, %r8471, 30;
	mov.b64 	%rd567, {%r8476, %r8475};
	xor.b64  	%rd568, %rd567, %rd566;
	shf.l.wrap.b32 	%r8477, %r8471, %r8472, 25;
	shf.l.wrap.b32 	%r8478, %r8472, %r8471, 25;
	mov.b64 	%rd569, {%r8478, %r8477};
	xor.b64  	%rd570, %rd568, %rd569;
	and.b64  	%rd571, %rd552, %rd528;
	xor.b64  	%rd572, %rd552, %rd528;
	and.b64  	%rd573, %rd572, %rd504;
	or.b64  	%rd574, %rd573, %rd571;
	add.s64 	%rd575, %rd564, %rd574;
	add.s64 	%rd576, %rd575, %rd570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8479,%dummy}, %rd565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8480}, %rd565;
	}
	shf.r.wrap.b32 	%r8481, %r8480, %r8479, 14;
	shf.r.wrap.b32 	%r8482, %r8479, %r8480, 14;
	mov.b64 	%rd577, {%r8482, %r8481};
	shf.r.wrap.b32 	%r8483, %r8480, %r8479, 18;
	shf.r.wrap.b32 	%r8484, %r8479, %r8480, 18;
	mov.b64 	%rd578, {%r8484, %r8483};
	xor.b64  	%rd579, %rd578, %rd577;
	shf.l.wrap.b32 	%r8485, %r8479, %r8480, 23;
	shf.l.wrap.b32 	%r8486, %r8480, %r8479, 23;
	mov.b64 	%rd580, {%r8486, %r8485};
	xor.b64  	%rd581, %rd579, %rd580;
	xor.b64  	%rd582, %rd541, %rd517;
	and.b64  	%rd583, %rd565, %rd582;
	xor.b64  	%rd584, %rd583, %rd517;
	add.s64 	%rd585, %rd493, %rd4403;
	add.s64 	%rd586, %rd585, %rd9;
	add.s64 	%rd587, %rd586, %rd584;
	add.s64 	%rd588, %rd587, %rd581;
	add.s64 	%rd589, %rd588, %rd504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8487,%dummy}, %rd576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8488}, %rd576;
	}
	shf.r.wrap.b32 	%r8489, %r8488, %r8487, 28;
	shf.r.wrap.b32 	%r8490, %r8487, %r8488, 28;
	mov.b64 	%rd590, {%r8490, %r8489};
	shf.l.wrap.b32 	%r8491, %r8487, %r8488, 30;
	shf.l.wrap.b32 	%r8492, %r8488, %r8487, 30;
	mov.b64 	%rd591, {%r8492, %r8491};
	xor.b64  	%rd592, %rd591, %rd590;
	shf.l.wrap.b32 	%r8493, %r8487, %r8488, 25;
	shf.l.wrap.b32 	%r8494, %r8488, %r8487, 25;
	mov.b64 	%rd593, {%r8494, %r8493};
	xor.b64  	%rd594, %rd592, %rd593;
	and.b64  	%rd595, %rd576, %rd552;
	xor.b64  	%rd596, %rd576, %rd552;
	and.b64  	%rd597, %rd596, %rd528;
	or.b64  	%rd598, %rd597, %rd595;
	add.s64 	%rd599, %rd588, %rd598;
	add.s64 	%rd600, %rd599, %rd594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8495,%dummy}, %rd589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8496}, %rd589;
	}
	shf.r.wrap.b32 	%r8497, %r8496, %r8495, 14;
	shf.r.wrap.b32 	%r8498, %r8495, %r8496, 14;
	mov.b64 	%rd601, {%r8498, %r8497};
	shf.r.wrap.b32 	%r8499, %r8496, %r8495, 18;
	shf.r.wrap.b32 	%r8500, %r8495, %r8496, 18;
	mov.b64 	%rd602, {%r8500, %r8499};
	xor.b64  	%rd603, %rd602, %rd601;
	shf.l.wrap.b32 	%r8501, %r8495, %r8496, 23;
	shf.l.wrap.b32 	%r8502, %r8496, %r8495, 23;
	mov.b64 	%rd604, {%r8502, %r8501};
	xor.b64  	%rd605, %rd603, %rd604;
	xor.b64  	%rd606, %rd565, %rd541;
	and.b64  	%rd607, %rd589, %rd606;
	xor.b64  	%rd608, %rd607, %rd541;
	add.s64 	%rd609, %rd517, %rd4387;
	add.s64 	%rd610, %rd609, %rd10;
	add.s64 	%rd611, %rd610, %rd608;
	add.s64 	%rd612, %rd611, %rd605;
	add.s64 	%rd613, %rd612, %rd528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8503,%dummy}, %rd600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8504}, %rd600;
	}
	shf.r.wrap.b32 	%r8505, %r8504, %r8503, 28;
	shf.r.wrap.b32 	%r8506, %r8503, %r8504, 28;
	mov.b64 	%rd614, {%r8506, %r8505};
	shf.l.wrap.b32 	%r8507, %r8503, %r8504, 30;
	shf.l.wrap.b32 	%r8508, %r8504, %r8503, 30;
	mov.b64 	%rd615, {%r8508, %r8507};
	xor.b64  	%rd616, %rd615, %rd614;
	shf.l.wrap.b32 	%r8509, %r8503, %r8504, 25;
	shf.l.wrap.b32 	%r8510, %r8504, %r8503, 25;
	mov.b64 	%rd617, {%r8510, %r8509};
	xor.b64  	%rd618, %rd616, %rd617;
	and.b64  	%rd619, %rd600, %rd576;
	xor.b64  	%rd620, %rd600, %rd576;
	and.b64  	%rd621, %rd620, %rd552;
	or.b64  	%rd622, %rd621, %rd619;
	add.s64 	%rd623, %rd612, %rd622;
	add.s64 	%rd624, %rd623, %rd618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8511,%dummy}, %rd613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8512}, %rd613;
	}
	shf.r.wrap.b32 	%r8513, %r8512, %r8511, 14;
	shf.r.wrap.b32 	%r8514, %r8511, %r8512, 14;
	mov.b64 	%rd625, {%r8514, %r8513};
	shf.r.wrap.b32 	%r8515, %r8512, %r8511, 18;
	shf.r.wrap.b32 	%r8516, %r8511, %r8512, 18;
	mov.b64 	%rd626, {%r8516, %r8515};
	xor.b64  	%rd627, %rd626, %rd625;
	shf.l.wrap.b32 	%r8517, %r8511, %r8512, 23;
	shf.l.wrap.b32 	%r8518, %r8512, %r8511, 23;
	mov.b64 	%rd628, {%r8518, %r8517};
	xor.b64  	%rd629, %rd627, %rd628;
	xor.b64  	%rd630, %rd589, %rd565;
	and.b64  	%rd631, %rd613, %rd630;
	xor.b64  	%rd632, %rd631, %rd565;
	add.s64 	%rd633, %rd541, %rd4386;
	add.s64 	%rd634, %rd633, %rd11;
	add.s64 	%rd635, %rd634, %rd632;
	add.s64 	%rd636, %rd635, %rd629;
	add.s64 	%rd637, %rd636, %rd552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8519,%dummy}, %rd624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8520}, %rd624;
	}
	shf.r.wrap.b32 	%r8521, %r8520, %r8519, 28;
	shf.r.wrap.b32 	%r8522, %r8519, %r8520, 28;
	mov.b64 	%rd638, {%r8522, %r8521};
	shf.l.wrap.b32 	%r8523, %r8519, %r8520, 30;
	shf.l.wrap.b32 	%r8524, %r8520, %r8519, 30;
	mov.b64 	%rd639, {%r8524, %r8523};
	xor.b64  	%rd640, %rd639, %rd638;
	shf.l.wrap.b32 	%r8525, %r8519, %r8520, 25;
	shf.l.wrap.b32 	%r8526, %r8520, %r8519, 25;
	mov.b64 	%rd641, {%r8526, %r8525};
	xor.b64  	%rd642, %rd640, %rd641;
	and.b64  	%rd643, %rd624, %rd600;
	xor.b64  	%rd644, %rd624, %rd600;
	and.b64  	%rd645, %rd644, %rd576;
	or.b64  	%rd646, %rd645, %rd643;
	add.s64 	%rd647, %rd636, %rd646;
	add.s64 	%rd648, %rd647, %rd642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8527,%dummy}, %rd637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8528}, %rd637;
	}
	shf.r.wrap.b32 	%r8529, %r8528, %r8527, 14;
	shf.r.wrap.b32 	%r8530, %r8527, %r8528, 14;
	mov.b64 	%rd649, {%r8530, %r8529};
	shf.r.wrap.b32 	%r8531, %r8528, %r8527, 18;
	shf.r.wrap.b32 	%r8532, %r8527, %r8528, 18;
	mov.b64 	%rd650, {%r8532, %r8531};
	xor.b64  	%rd651, %rd650, %rd649;
	shf.l.wrap.b32 	%r8533, %r8527, %r8528, 23;
	shf.l.wrap.b32 	%r8534, %r8528, %r8527, 23;
	mov.b64 	%rd652, {%r8534, %r8533};
	xor.b64  	%rd653, %rd651, %rd652;
	xor.b64  	%rd654, %rd613, %rd589;
	and.b64  	%rd655, %rd637, %rd654;
	xor.b64  	%rd656, %rd655, %rd589;
	add.s64 	%rd657, %rd565, %rd4385;
	add.s64 	%rd658, %rd657, %rd12;
	add.s64 	%rd659, %rd658, %rd656;
	add.s64 	%rd660, %rd659, %rd653;
	add.s64 	%rd661, %rd660, %rd576;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8535,%dummy}, %rd648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8536}, %rd648;
	}
	shf.r.wrap.b32 	%r8537, %r8536, %r8535, 28;
	shf.r.wrap.b32 	%r8538, %r8535, %r8536, 28;
	mov.b64 	%rd662, {%r8538, %r8537};
	shf.l.wrap.b32 	%r8539, %r8535, %r8536, 30;
	shf.l.wrap.b32 	%r8540, %r8536, %r8535, 30;
	mov.b64 	%rd663, {%r8540, %r8539};
	xor.b64  	%rd664, %rd663, %rd662;
	shf.l.wrap.b32 	%r8541, %r8535, %r8536, 25;
	shf.l.wrap.b32 	%r8542, %r8536, %r8535, 25;
	mov.b64 	%rd665, {%r8542, %r8541};
	xor.b64  	%rd666, %rd664, %rd665;
	and.b64  	%rd667, %rd648, %rd624;
	xor.b64  	%rd668, %rd648, %rd624;
	and.b64  	%rd669, %rd668, %rd600;
	or.b64  	%rd670, %rd669, %rd667;
	add.s64 	%rd671, %rd660, %rd670;
	add.s64 	%rd672, %rd671, %rd666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8543,%dummy}, %rd661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8544}, %rd661;
	}
	shf.r.wrap.b32 	%r8545, %r8544, %r8543, 14;
	shf.r.wrap.b32 	%r8546, %r8543, %r8544, 14;
	mov.b64 	%rd673, {%r8546, %r8545};
	shf.r.wrap.b32 	%r8547, %r8544, %r8543, 18;
	shf.r.wrap.b32 	%r8548, %r8543, %r8544, 18;
	mov.b64 	%rd674, {%r8548, %r8547};
	xor.b64  	%rd675, %rd674, %rd673;
	shf.l.wrap.b32 	%r8549, %r8543, %r8544, 23;
	shf.l.wrap.b32 	%r8550, %r8544, %r8543, 23;
	mov.b64 	%rd676, {%r8550, %r8549};
	xor.b64  	%rd677, %rd675, %rd676;
	xor.b64  	%rd678, %rd637, %rd613;
	and.b64  	%rd679, %rd661, %rd678;
	xor.b64  	%rd680, %rd679, %rd613;
	add.s64 	%rd681, %rd589, %rd4384;
	add.s64 	%rd682, %rd681, %rd13;
	add.s64 	%rd683, %rd682, %rd680;
	add.s64 	%rd684, %rd683, %rd677;
	add.s64 	%rd685, %rd684, %rd600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8551,%dummy}, %rd672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8552}, %rd672;
	}
	shf.r.wrap.b32 	%r8553, %r8552, %r8551, 28;
	shf.r.wrap.b32 	%r8554, %r8551, %r8552, 28;
	mov.b64 	%rd686, {%r8554, %r8553};
	shf.l.wrap.b32 	%r8555, %r8551, %r8552, 30;
	shf.l.wrap.b32 	%r8556, %r8552, %r8551, 30;
	mov.b64 	%rd687, {%r8556, %r8555};
	xor.b64  	%rd688, %rd687, %rd686;
	shf.l.wrap.b32 	%r8557, %r8551, %r8552, 25;
	shf.l.wrap.b32 	%r8558, %r8552, %r8551, 25;
	mov.b64 	%rd689, {%r8558, %r8557};
	xor.b64  	%rd690, %rd688, %rd689;
	and.b64  	%rd691, %rd672, %rd648;
	xor.b64  	%rd692, %rd672, %rd648;
	and.b64  	%rd693, %rd692, %rd624;
	or.b64  	%rd694, %rd693, %rd691;
	add.s64 	%rd695, %rd684, %rd694;
	add.s64 	%rd696, %rd695, %rd690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8559,%dummy}, %rd685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8560}, %rd685;
	}
	shf.r.wrap.b32 	%r8561, %r8560, %r8559, 14;
	shf.r.wrap.b32 	%r8562, %r8559, %r8560, 14;
	mov.b64 	%rd697, {%r8562, %r8561};
	shf.r.wrap.b32 	%r8563, %r8560, %r8559, 18;
	shf.r.wrap.b32 	%r8564, %r8559, %r8560, 18;
	mov.b64 	%rd698, {%r8564, %r8563};
	xor.b64  	%rd699, %rd698, %rd697;
	shf.l.wrap.b32 	%r8565, %r8559, %r8560, 23;
	shf.l.wrap.b32 	%r8566, %r8560, %r8559, 23;
	mov.b64 	%rd700, {%r8566, %r8565};
	xor.b64  	%rd701, %rd699, %rd700;
	xor.b64  	%rd702, %rd661, %rd637;
	and.b64  	%rd703, %rd685, %rd702;
	xor.b64  	%rd704, %rd703, %rd637;
	add.s64 	%rd705, %rd613, %rd4383;
	add.s64 	%rd706, %rd705, %rd14;
	add.s64 	%rd707, %rd706, %rd704;
	add.s64 	%rd708, %rd707, %rd701;
	add.s64 	%rd4395, %rd708, %rd624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8567,%dummy}, %rd696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8568}, %rd696;
	}
	shf.r.wrap.b32 	%r8569, %r8568, %r8567, 28;
	shf.r.wrap.b32 	%r8570, %r8567, %r8568, 28;
	mov.b64 	%rd709, {%r8570, %r8569};
	shf.l.wrap.b32 	%r8571, %r8567, %r8568, 30;
	shf.l.wrap.b32 	%r8572, %r8568, %r8567, 30;
	mov.b64 	%rd710, {%r8572, %r8571};
	xor.b64  	%rd711, %rd710, %rd709;
	shf.l.wrap.b32 	%r8573, %r8567, %r8568, 25;
	shf.l.wrap.b32 	%r8574, %r8568, %r8567, 25;
	mov.b64 	%rd712, {%r8574, %r8573};
	xor.b64  	%rd713, %rd711, %rd712;
	and.b64  	%rd714, %rd696, %rd672;
	xor.b64  	%rd715, %rd696, %rd672;
	and.b64  	%rd716, %rd715, %rd648;
	or.b64  	%rd717, %rd716, %rd714;
	add.s64 	%rd718, %rd708, %rd717;
	add.s64 	%rd4391, %rd718, %rd713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8575,%dummy}, %rd4395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8576}, %rd4395;
	}
	shf.r.wrap.b32 	%r8577, %r8576, %r8575, 14;
	shf.r.wrap.b32 	%r8578, %r8575, %r8576, 14;
	mov.b64 	%rd719, {%r8578, %r8577};
	shf.r.wrap.b32 	%r8579, %r8576, %r8575, 18;
	shf.r.wrap.b32 	%r8580, %r8575, %r8576, 18;
	mov.b64 	%rd720, {%r8580, %r8579};
	xor.b64  	%rd721, %rd720, %rd719;
	shf.l.wrap.b32 	%r8581, %r8575, %r8576, 23;
	shf.l.wrap.b32 	%r8582, %r8576, %r8575, 23;
	mov.b64 	%rd722, {%r8582, %r8581};
	xor.b64  	%rd723, %rd721, %rd722;
	xor.b64  	%rd724, %rd685, %rd661;
	and.b64  	%rd725, %rd4395, %rd724;
	xor.b64  	%rd726, %rd725, %rd661;
	add.s64 	%rd727, %rd637, %rd4382;
	add.s64 	%rd728, %rd727, %rd15;
	add.s64 	%rd729, %rd728, %rd726;
	add.s64 	%rd730, %rd729, %rd723;
	add.s64 	%rd4394, %rd730, %rd648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8583,%dummy}, %rd4391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8584}, %rd4391;
	}
	shf.r.wrap.b32 	%r8585, %r8584, %r8583, 28;
	shf.r.wrap.b32 	%r8586, %r8583, %r8584, 28;
	mov.b64 	%rd731, {%r8586, %r8585};
	shf.l.wrap.b32 	%r8587, %r8583, %r8584, 30;
	shf.l.wrap.b32 	%r8588, %r8584, %r8583, 30;
	mov.b64 	%rd732, {%r8588, %r8587};
	xor.b64  	%rd733, %rd732, %rd731;
	shf.l.wrap.b32 	%r8589, %r8583, %r8584, 25;
	shf.l.wrap.b32 	%r8590, %r8584, %r8583, 25;
	mov.b64 	%rd734, {%r8590, %r8589};
	xor.b64  	%rd735, %rd733, %rd734;
	and.b64  	%rd736, %rd4391, %rd696;
	xor.b64  	%rd737, %rd4391, %rd696;
	and.b64  	%rd738, %rd737, %rd672;
	or.b64  	%rd739, %rd738, %rd736;
	add.s64 	%rd740, %rd730, %rd739;
	add.s64 	%rd4390, %rd740, %rd735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8591,%dummy}, %rd4394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8592}, %rd4394;
	}
	shf.r.wrap.b32 	%r8593, %r8592, %r8591, 14;
	shf.r.wrap.b32 	%r8594, %r8591, %r8592, 14;
	mov.b64 	%rd741, {%r8594, %r8593};
	shf.r.wrap.b32 	%r8595, %r8592, %r8591, 18;
	shf.r.wrap.b32 	%r8596, %r8591, %r8592, 18;
	mov.b64 	%rd742, {%r8596, %r8595};
	xor.b64  	%rd743, %rd742, %rd741;
	shf.l.wrap.b32 	%r8597, %r8591, %r8592, 23;
	shf.l.wrap.b32 	%r8598, %r8592, %r8591, 23;
	mov.b64 	%rd744, {%r8598, %r8597};
	xor.b64  	%rd745, %rd743, %rd744;
	xor.b64  	%rd746, %rd4395, %rd685;
	and.b64  	%rd747, %rd4394, %rd746;
	xor.b64  	%rd748, %rd747, %rd685;
	add.s64 	%rd749, %rd661, %rd4381;
	add.s64 	%rd750, %rd749, %rd16;
	add.s64 	%rd751, %rd750, %rd748;
	add.s64 	%rd752, %rd751, %rd745;
	add.s64 	%rd4393, %rd752, %rd672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8599,%dummy}, %rd4390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8600}, %rd4390;
	}
	shf.r.wrap.b32 	%r8601, %r8600, %r8599, 28;
	shf.r.wrap.b32 	%r8602, %r8599, %r8600, 28;
	mov.b64 	%rd753, {%r8602, %r8601};
	shf.l.wrap.b32 	%r8603, %r8599, %r8600, 30;
	shf.l.wrap.b32 	%r8604, %r8600, %r8599, 30;
	mov.b64 	%rd754, {%r8604, %r8603};
	xor.b64  	%rd755, %rd754, %rd753;
	shf.l.wrap.b32 	%r8605, %r8599, %r8600, 25;
	shf.l.wrap.b32 	%r8606, %r8600, %r8599, 25;
	mov.b64 	%rd756, {%r8606, %r8605};
	xor.b64  	%rd757, %rd755, %rd756;
	and.b64  	%rd758, %rd4390, %rd4391;
	xor.b64  	%rd759, %rd4390, %rd4391;
	and.b64  	%rd760, %rd759, %rd696;
	or.b64  	%rd761, %rd760, %rd758;
	add.s64 	%rd762, %rd752, %rd761;
	add.s64 	%rd4389, %rd762, %rd757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8607,%dummy}, %rd4393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8608}, %rd4393;
	}
	shf.r.wrap.b32 	%r8609, %r8608, %r8607, 14;
	shf.r.wrap.b32 	%r8610, %r8607, %r8608, 14;
	mov.b64 	%rd763, {%r8610, %r8609};
	shf.r.wrap.b32 	%r8611, %r8608, %r8607, 18;
	shf.r.wrap.b32 	%r8612, %r8607, %r8608, 18;
	mov.b64 	%rd764, {%r8612, %r8611};
	xor.b64  	%rd765, %rd764, %rd763;
	shf.l.wrap.b32 	%r8613, %r8607, %r8608, 23;
	shf.l.wrap.b32 	%r8614, %r8608, %r8607, 23;
	mov.b64 	%rd766, {%r8614, %r8613};
	xor.b64  	%rd767, %rd765, %rd766;
	xor.b64  	%rd768, %rd4394, %rd4395;
	and.b64  	%rd769, %rd4393, %rd768;
	xor.b64  	%rd770, %rd769, %rd4395;
	add.s64 	%rd771, %rd685, %rd4380;
	add.s64 	%rd772, %rd771, %rd17;
	add.s64 	%rd773, %rd772, %rd770;
	add.s64 	%rd774, %rd773, %rd767;
	add.s64 	%rd4392, %rd774, %rd696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8615,%dummy}, %rd4389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8616}, %rd4389;
	}
	shf.r.wrap.b32 	%r8617, %r8616, %r8615, 28;
	shf.r.wrap.b32 	%r8618, %r8615, %r8616, 28;
	mov.b64 	%rd775, {%r8618, %r8617};
	shf.l.wrap.b32 	%r8619, %r8615, %r8616, 30;
	shf.l.wrap.b32 	%r8620, %r8616, %r8615, 30;
	mov.b64 	%rd776, {%r8620, %r8619};
	xor.b64  	%rd777, %rd776, %rd775;
	shf.l.wrap.b32 	%r8621, %r8615, %r8616, 25;
	shf.l.wrap.b32 	%r8622, %r8616, %r8615, 25;
	mov.b64 	%rd778, {%r8622, %r8621};
	xor.b64  	%rd779, %rd777, %rd778;
	and.b64  	%rd780, %rd4389, %rd4390;
	xor.b64  	%rd781, %rd4389, %rd4390;
	and.b64  	%rd782, %rd781, %rd4391;
	or.b64  	%rd783, %rd782, %rd780;
	add.s64 	%rd784, %rd774, %rd783;
	add.s64 	%rd4388, %rd784, %rd779;
	mov.u32 	%r19360, 16;

BB2_92:
	shr.u64 	%rd785, %rd4381, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8623,%dummy}, %rd4381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8624}, %rd4381;
	}
	shf.r.wrap.b32 	%r8625, %r8624, %r8623, 19;
	shf.r.wrap.b32 	%r8626, %r8623, %r8624, 19;
	mov.b64 	%rd786, {%r8626, %r8625};
	xor.b64  	%rd787, %rd786, %rd785;
	shf.l.wrap.b32 	%r8627, %r8623, %r8624, 3;
	shf.l.wrap.b32 	%r8628, %r8624, %r8623, 3;
	mov.b64 	%rd788, {%r8628, %r8627};
	xor.b64  	%rd789, %rd787, %rd788;
	shr.u64 	%rd790, %rd4397, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8629,%dummy}, %rd4397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8630}, %rd4397;
	}
	shf.r.wrap.b32 	%r8631, %r8630, %r8629, 1;
	shf.r.wrap.b32 	%r8632, %r8629, %r8630, 1;
	mov.b64 	%rd791, {%r8632, %r8631};
	xor.b64  	%rd792, %rd791, %rd790;
	shf.r.wrap.b32 	%r8633, %r8630, %r8629, 8;
	shf.r.wrap.b32 	%r8634, %r8629, %r8630, 8;
	mov.b64 	%rd793, {%r8634, %r8633};
	xor.b64  	%rd794, %rd792, %rd793;
	add.s64 	%rd795, %rd4396, %rd4386;
	add.s64 	%rd796, %rd795, %rd789;
	add.s64 	%rd4396, %rd796, %rd794;
	shr.u64 	%rd797, %rd4380, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8635,%dummy}, %rd4380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8636}, %rd4380;
	}
	shf.r.wrap.b32 	%r8637, %r8636, %r8635, 19;
	shf.r.wrap.b32 	%r8638, %r8635, %r8636, 19;
	mov.b64 	%rd798, {%r8638, %r8637};
	xor.b64  	%rd799, %rd798, %rd797;
	shf.l.wrap.b32 	%r8639, %r8635, %r8636, 3;
	shf.l.wrap.b32 	%r8640, %r8636, %r8635, 3;
	mov.b64 	%rd800, {%r8640, %r8639};
	xor.b64  	%rd801, %rd799, %rd800;
	shr.u64 	%rd802, %rd4398, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8641,%dummy}, %rd4398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8642}, %rd4398;
	}
	shf.r.wrap.b32 	%r8643, %r8642, %r8641, 1;
	shf.r.wrap.b32 	%r8644, %r8641, %r8642, 1;
	mov.b64 	%rd803, {%r8644, %r8643};
	xor.b64  	%rd804, %rd803, %rd802;
	shf.r.wrap.b32 	%r8645, %r8642, %r8641, 8;
	shf.r.wrap.b32 	%r8646, %r8641, %r8642, 8;
	mov.b64 	%rd805, {%r8646, %r8645};
	xor.b64  	%rd806, %rd804, %rd805;
	add.s64 	%rd807, %rd4397, %rd4385;
	add.s64 	%rd808, %rd807, %rd801;
	add.s64 	%rd4397, %rd808, %rd806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8647,%dummy}, %rd4396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8648}, %rd4396;
	}
	shf.r.wrap.b32 	%r8649, %r8648, %r8647, 19;
	shf.r.wrap.b32 	%r8650, %r8647, %r8648, 19;
	mov.b64 	%rd809, {%r8650, %r8649};
	shf.l.wrap.b32 	%r8651, %r8647, %r8648, 3;
	shf.l.wrap.b32 	%r8652, %r8648, %r8647, 3;
	mov.b64 	%rd810, {%r8652, %r8651};
	shr.u64 	%rd811, %rd4396, 6;
	xor.b64  	%rd812, %rd809, %rd811;
	xor.b64  	%rd813, %rd812, %rd810;
	shr.u64 	%rd814, %rd4399, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8653,%dummy}, %rd4399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8654}, %rd4399;
	}
	shf.r.wrap.b32 	%r8655, %r8654, %r8653, 1;
	shf.r.wrap.b32 	%r8656, %r8653, %r8654, 1;
	mov.b64 	%rd815, {%r8656, %r8655};
	xor.b64  	%rd816, %rd815, %rd814;
	shf.r.wrap.b32 	%r8657, %r8654, %r8653, 8;
	shf.r.wrap.b32 	%r8658, %r8653, %r8654, 8;
	mov.b64 	%rd817, {%r8658, %r8657};
	xor.b64  	%rd818, %rd816, %rd817;
	add.s64 	%rd819, %rd4398, %rd4384;
	add.s64 	%rd820, %rd819, %rd813;
	add.s64 	%rd4398, %rd820, %rd818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8659,%dummy}, %rd4397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8660}, %rd4397;
	}
	shf.r.wrap.b32 	%r8661, %r8660, %r8659, 19;
	shf.r.wrap.b32 	%r8662, %r8659, %r8660, 19;
	mov.b64 	%rd821, {%r8662, %r8661};
	shf.l.wrap.b32 	%r8663, %r8659, %r8660, 3;
	shf.l.wrap.b32 	%r8664, %r8660, %r8659, 3;
	mov.b64 	%rd822, {%r8664, %r8663};
	shr.u64 	%rd823, %rd4397, 6;
	xor.b64  	%rd824, %rd821, %rd823;
	xor.b64  	%rd825, %rd824, %rd822;
	shr.u64 	%rd826, %rd4400, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8665,%dummy}, %rd4400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8666}, %rd4400;
	}
	shf.r.wrap.b32 	%r8667, %r8666, %r8665, 1;
	shf.r.wrap.b32 	%r8668, %r8665, %r8666, 1;
	mov.b64 	%rd827, {%r8668, %r8667};
	xor.b64  	%rd828, %rd827, %rd826;
	shf.r.wrap.b32 	%r8669, %r8666, %r8665, 8;
	shf.r.wrap.b32 	%r8670, %r8665, %r8666, 8;
	mov.b64 	%rd829, {%r8670, %r8669};
	xor.b64  	%rd830, %rd828, %rd829;
	add.s64 	%rd831, %rd4399, %rd4383;
	add.s64 	%rd832, %rd831, %rd825;
	add.s64 	%rd4399, %rd832, %rd830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8671,%dummy}, %rd4398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8672}, %rd4398;
	}
	shf.r.wrap.b32 	%r8673, %r8672, %r8671, 19;
	shf.r.wrap.b32 	%r8674, %r8671, %r8672, 19;
	mov.b64 	%rd833, {%r8674, %r8673};
	shf.l.wrap.b32 	%r8675, %r8671, %r8672, 3;
	shf.l.wrap.b32 	%r8676, %r8672, %r8671, 3;
	mov.b64 	%rd834, {%r8676, %r8675};
	shr.u64 	%rd835, %rd4398, 6;
	xor.b64  	%rd836, %rd833, %rd835;
	xor.b64  	%rd837, %rd836, %rd834;
	shr.u64 	%rd838, %rd4401, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8677,%dummy}, %rd4401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8678}, %rd4401;
	}
	shf.r.wrap.b32 	%r8679, %r8678, %r8677, 1;
	shf.r.wrap.b32 	%r8680, %r8677, %r8678, 1;
	mov.b64 	%rd839, {%r8680, %r8679};
	xor.b64  	%rd840, %rd839, %rd838;
	shf.r.wrap.b32 	%r8681, %r8678, %r8677, 8;
	shf.r.wrap.b32 	%r8682, %r8677, %r8678, 8;
	mov.b64 	%rd841, {%r8682, %r8681};
	xor.b64  	%rd842, %rd840, %rd841;
	add.s64 	%rd843, %rd4400, %rd4382;
	add.s64 	%rd844, %rd843, %rd837;
	add.s64 	%rd4400, %rd844, %rd842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8683,%dummy}, %rd4399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8684}, %rd4399;
	}
	shf.r.wrap.b32 	%r8685, %r8684, %r8683, 19;
	shf.r.wrap.b32 	%r8686, %r8683, %r8684, 19;
	mov.b64 	%rd845, {%r8686, %r8685};
	shf.l.wrap.b32 	%r8687, %r8683, %r8684, 3;
	shf.l.wrap.b32 	%r8688, %r8684, %r8683, 3;
	mov.b64 	%rd846, {%r8688, %r8687};
	shr.u64 	%rd847, %rd4399, 6;
	xor.b64  	%rd848, %rd845, %rd847;
	xor.b64  	%rd849, %rd848, %rd846;
	shr.u64 	%rd850, %rd4402, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8689,%dummy}, %rd4402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8690}, %rd4402;
	}
	shf.r.wrap.b32 	%r8691, %r8690, %r8689, 1;
	shf.r.wrap.b32 	%r8692, %r8689, %r8690, 1;
	mov.b64 	%rd851, {%r8692, %r8691};
	xor.b64  	%rd852, %rd851, %rd850;
	shf.r.wrap.b32 	%r8693, %r8690, %r8689, 8;
	shf.r.wrap.b32 	%r8694, %r8689, %r8690, 8;
	mov.b64 	%rd853, {%r8694, %r8693};
	xor.b64  	%rd854, %rd852, %rd853;
	add.s64 	%rd855, %rd4401, %rd4381;
	add.s64 	%rd856, %rd855, %rd849;
	add.s64 	%rd4401, %rd856, %rd854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8695,%dummy}, %rd4400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8696}, %rd4400;
	}
	shf.r.wrap.b32 	%r8697, %r8696, %r8695, 19;
	shf.r.wrap.b32 	%r8698, %r8695, %r8696, 19;
	mov.b64 	%rd857, {%r8698, %r8697};
	shf.l.wrap.b32 	%r8699, %r8695, %r8696, 3;
	shf.l.wrap.b32 	%r8700, %r8696, %r8695, 3;
	mov.b64 	%rd858, {%r8700, %r8699};
	shr.u64 	%rd859, %rd4400, 6;
	xor.b64  	%rd860, %rd857, %rd859;
	xor.b64  	%rd861, %rd860, %rd858;
	shr.u64 	%rd862, %rd4403, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8701,%dummy}, %rd4403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8702}, %rd4403;
	}
	shf.r.wrap.b32 	%r8703, %r8702, %r8701, 1;
	shf.r.wrap.b32 	%r8704, %r8701, %r8702, 1;
	mov.b64 	%rd863, {%r8704, %r8703};
	xor.b64  	%rd864, %rd863, %rd862;
	shf.r.wrap.b32 	%r8705, %r8702, %r8701, 8;
	shf.r.wrap.b32 	%r8706, %r8701, %r8702, 8;
	mov.b64 	%rd865, {%r8706, %r8705};
	xor.b64  	%rd866, %rd864, %rd865;
	add.s64 	%rd867, %rd4402, %rd4380;
	add.s64 	%rd868, %rd867, %rd861;
	add.s64 	%rd4402, %rd868, %rd866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8707,%dummy}, %rd4401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8708}, %rd4401;
	}
	shf.r.wrap.b32 	%r8709, %r8708, %r8707, 19;
	shf.r.wrap.b32 	%r8710, %r8707, %r8708, 19;
	mov.b64 	%rd869, {%r8710, %r8709};
	shf.l.wrap.b32 	%r8711, %r8707, %r8708, 3;
	shf.l.wrap.b32 	%r8712, %r8708, %r8707, 3;
	mov.b64 	%rd870, {%r8712, %r8711};
	shr.u64 	%rd871, %rd4401, 6;
	xor.b64  	%rd872, %rd869, %rd871;
	xor.b64  	%rd873, %rd872, %rd870;
	shr.u64 	%rd874, %rd4387, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8713,%dummy}, %rd4387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8714}, %rd4387;
	}
	shf.r.wrap.b32 	%r8715, %r8714, %r8713, 1;
	shf.r.wrap.b32 	%r8716, %r8713, %r8714, 1;
	mov.b64 	%rd875, {%r8716, %r8715};
	xor.b64  	%rd876, %rd875, %rd874;
	shf.r.wrap.b32 	%r8717, %r8714, %r8713, 8;
	shf.r.wrap.b32 	%r8718, %r8713, %r8714, 8;
	mov.b64 	%rd877, {%r8718, %r8717};
	xor.b64  	%rd878, %rd876, %rd877;
	add.s64 	%rd879, %rd4396, %rd4403;
	add.s64 	%rd880, %rd879, %rd873;
	add.s64 	%rd4403, %rd880, %rd878;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8719,%dummy}, %rd4402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8720}, %rd4402;
	}
	shf.r.wrap.b32 	%r8721, %r8720, %r8719, 19;
	shf.r.wrap.b32 	%r8722, %r8719, %r8720, 19;
	mov.b64 	%rd881, {%r8722, %r8721};
	shf.l.wrap.b32 	%r8723, %r8719, %r8720, 3;
	shf.l.wrap.b32 	%r8724, %r8720, %r8719, 3;
	mov.b64 	%rd882, {%r8724, %r8723};
	shr.u64 	%rd883, %rd4402, 6;
	xor.b64  	%rd884, %rd881, %rd883;
	xor.b64  	%rd885, %rd884, %rd882;
	shr.u64 	%rd886, %rd4386, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8725,%dummy}, %rd4386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8726}, %rd4386;
	}
	shf.r.wrap.b32 	%r8727, %r8726, %r8725, 1;
	shf.r.wrap.b32 	%r8728, %r8725, %r8726, 1;
	mov.b64 	%rd887, {%r8728, %r8727};
	xor.b64  	%rd888, %rd887, %rd886;
	shf.r.wrap.b32 	%r8729, %r8726, %r8725, 8;
	shf.r.wrap.b32 	%r8730, %r8725, %r8726, 8;
	mov.b64 	%rd889, {%r8730, %r8729};
	xor.b64  	%rd890, %rd888, %rd889;
	add.s64 	%rd891, %rd4397, %rd4387;
	add.s64 	%rd892, %rd891, %rd885;
	add.s64 	%rd4387, %rd892, %rd890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8731,%dummy}, %rd4403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8732}, %rd4403;
	}
	shf.r.wrap.b32 	%r8733, %r8732, %r8731, 19;
	shf.r.wrap.b32 	%r8734, %r8731, %r8732, 19;
	mov.b64 	%rd893, {%r8734, %r8733};
	shf.l.wrap.b32 	%r8735, %r8731, %r8732, 3;
	shf.l.wrap.b32 	%r8736, %r8732, %r8731, 3;
	mov.b64 	%rd894, {%r8736, %r8735};
	shr.u64 	%rd895, %rd4403, 6;
	xor.b64  	%rd896, %rd893, %rd895;
	xor.b64  	%rd897, %rd896, %rd894;
	shr.u64 	%rd898, %rd4385, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8737,%dummy}, %rd4385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8738}, %rd4385;
	}
	shf.r.wrap.b32 	%r8739, %r8738, %r8737, 1;
	shf.r.wrap.b32 	%r8740, %r8737, %r8738, 1;
	mov.b64 	%rd899, {%r8740, %r8739};
	xor.b64  	%rd900, %rd899, %rd898;
	shf.r.wrap.b32 	%r8741, %r8738, %r8737, 8;
	shf.r.wrap.b32 	%r8742, %r8737, %r8738, 8;
	mov.b64 	%rd901, {%r8742, %r8741};
	xor.b64  	%rd902, %rd900, %rd901;
	add.s64 	%rd903, %rd4398, %rd4386;
	add.s64 	%rd904, %rd903, %rd897;
	add.s64 	%rd4386, %rd904, %rd902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8743,%dummy}, %rd4387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8744}, %rd4387;
	}
	shf.r.wrap.b32 	%r8745, %r8744, %r8743, 19;
	shf.r.wrap.b32 	%r8746, %r8743, %r8744, 19;
	mov.b64 	%rd905, {%r8746, %r8745};
	shf.l.wrap.b32 	%r8747, %r8743, %r8744, 3;
	shf.l.wrap.b32 	%r8748, %r8744, %r8743, 3;
	mov.b64 	%rd906, {%r8748, %r8747};
	shr.u64 	%rd907, %rd4387, 6;
	xor.b64  	%rd908, %rd905, %rd907;
	xor.b64  	%rd909, %rd908, %rd906;
	shr.u64 	%rd910, %rd4384, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8749,%dummy}, %rd4384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8750}, %rd4384;
	}
	shf.r.wrap.b32 	%r8751, %r8750, %r8749, 1;
	shf.r.wrap.b32 	%r8752, %r8749, %r8750, 1;
	mov.b64 	%rd911, {%r8752, %r8751};
	xor.b64  	%rd912, %rd911, %rd910;
	shf.r.wrap.b32 	%r8753, %r8750, %r8749, 8;
	shf.r.wrap.b32 	%r8754, %r8749, %r8750, 8;
	mov.b64 	%rd913, {%r8754, %r8753};
	xor.b64  	%rd914, %rd912, %rd913;
	add.s64 	%rd915, %rd4399, %rd4385;
	add.s64 	%rd916, %rd915, %rd909;
	add.s64 	%rd4385, %rd916, %rd914;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8755,%dummy}, %rd4386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8756}, %rd4386;
	}
	shf.r.wrap.b32 	%r8757, %r8756, %r8755, 19;
	shf.r.wrap.b32 	%r8758, %r8755, %r8756, 19;
	mov.b64 	%rd917, {%r8758, %r8757};
	shf.l.wrap.b32 	%r8759, %r8755, %r8756, 3;
	shf.l.wrap.b32 	%r8760, %r8756, %r8755, 3;
	mov.b64 	%rd918, {%r8760, %r8759};
	shr.u64 	%rd919, %rd4386, 6;
	xor.b64  	%rd920, %rd917, %rd919;
	xor.b64  	%rd921, %rd920, %rd918;
	shr.u64 	%rd922, %rd4383, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8761,%dummy}, %rd4383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8762}, %rd4383;
	}
	shf.r.wrap.b32 	%r8763, %r8762, %r8761, 1;
	shf.r.wrap.b32 	%r8764, %r8761, %r8762, 1;
	mov.b64 	%rd923, {%r8764, %r8763};
	xor.b64  	%rd924, %rd923, %rd922;
	shf.r.wrap.b32 	%r8765, %r8762, %r8761, 8;
	shf.r.wrap.b32 	%r8766, %r8761, %r8762, 8;
	mov.b64 	%rd925, {%r8766, %r8765};
	xor.b64  	%rd926, %rd924, %rd925;
	add.s64 	%rd927, %rd4400, %rd4384;
	add.s64 	%rd928, %rd927, %rd921;
	add.s64 	%rd4384, %rd928, %rd926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8767,%dummy}, %rd4385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8768}, %rd4385;
	}
	shf.r.wrap.b32 	%r8769, %r8768, %r8767, 19;
	shf.r.wrap.b32 	%r8770, %r8767, %r8768, 19;
	mov.b64 	%rd929, {%r8770, %r8769};
	shf.l.wrap.b32 	%r8771, %r8767, %r8768, 3;
	shf.l.wrap.b32 	%r8772, %r8768, %r8767, 3;
	mov.b64 	%rd930, {%r8772, %r8771};
	shr.u64 	%rd931, %rd4385, 6;
	xor.b64  	%rd932, %rd929, %rd931;
	xor.b64  	%rd933, %rd932, %rd930;
	shr.u64 	%rd934, %rd4382, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8773,%dummy}, %rd4382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8774}, %rd4382;
	}
	shf.r.wrap.b32 	%r8775, %r8774, %r8773, 1;
	shf.r.wrap.b32 	%r8776, %r8773, %r8774, 1;
	mov.b64 	%rd935, {%r8776, %r8775};
	xor.b64  	%rd936, %rd935, %rd934;
	shf.r.wrap.b32 	%r8777, %r8774, %r8773, 8;
	shf.r.wrap.b32 	%r8778, %r8773, %r8774, 8;
	mov.b64 	%rd937, {%r8778, %r8777};
	xor.b64  	%rd938, %rd936, %rd937;
	add.s64 	%rd939, %rd4401, %rd4383;
	add.s64 	%rd940, %rd939, %rd933;
	add.s64 	%rd4383, %rd940, %rd938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8779,%dummy}, %rd4384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8780}, %rd4384;
	}
	shf.r.wrap.b32 	%r8781, %r8780, %r8779, 19;
	shf.r.wrap.b32 	%r8782, %r8779, %r8780, 19;
	mov.b64 	%rd941, {%r8782, %r8781};
	shf.l.wrap.b32 	%r8783, %r8779, %r8780, 3;
	shf.l.wrap.b32 	%r8784, %r8780, %r8779, 3;
	mov.b64 	%rd942, {%r8784, %r8783};
	shr.u64 	%rd943, %rd4384, 6;
	xor.b64  	%rd944, %rd941, %rd943;
	xor.b64  	%rd945, %rd944, %rd942;
	shr.u64 	%rd946, %rd4381, 7;
	shf.r.wrap.b32 	%r8785, %r8624, %r8623, 1;
	shf.r.wrap.b32 	%r8786, %r8623, %r8624, 1;
	mov.b64 	%rd947, {%r8786, %r8785};
	xor.b64  	%rd948, %rd947, %rd946;
	shf.r.wrap.b32 	%r8787, %r8624, %r8623, 8;
	shf.r.wrap.b32 	%r8788, %r8623, %r8624, 8;
	mov.b64 	%rd949, {%r8788, %r8787};
	xor.b64  	%rd950, %rd948, %rd949;
	add.s64 	%rd951, %rd4402, %rd4382;
	add.s64 	%rd952, %rd951, %rd945;
	add.s64 	%rd4382, %rd952, %rd950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8789,%dummy}, %rd4383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8790}, %rd4383;
	}
	shf.r.wrap.b32 	%r8791, %r8790, %r8789, 19;
	shf.r.wrap.b32 	%r8792, %r8789, %r8790, 19;
	mov.b64 	%rd953, {%r8792, %r8791};
	shf.l.wrap.b32 	%r8793, %r8789, %r8790, 3;
	shf.l.wrap.b32 	%r8794, %r8790, %r8789, 3;
	mov.b64 	%rd954, {%r8794, %r8793};
	shr.u64 	%rd955, %rd4383, 6;
	xor.b64  	%rd956, %rd953, %rd955;
	xor.b64  	%rd957, %rd956, %rd954;
	shr.u64 	%rd958, %rd4380, 7;
	shf.r.wrap.b32 	%r8795, %r8636, %r8635, 1;
	shf.r.wrap.b32 	%r8796, %r8635, %r8636, 1;
	mov.b64 	%rd959, {%r8796, %r8795};
	xor.b64  	%rd960, %rd959, %rd958;
	shf.r.wrap.b32 	%r8797, %r8636, %r8635, 8;
	shf.r.wrap.b32 	%r8798, %r8635, %r8636, 8;
	mov.b64 	%rd961, {%r8798, %r8797};
	xor.b64  	%rd962, %rd960, %rd961;
	add.s64 	%rd963, %rd4403, %rd4381;
	add.s64 	%rd964, %rd963, %rd957;
	add.s64 	%rd4381, %rd964, %rd962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8799,%dummy}, %rd4382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8800}, %rd4382;
	}
	shf.r.wrap.b32 	%r8801, %r8800, %r8799, 19;
	shf.r.wrap.b32 	%r8802, %r8799, %r8800, 19;
	mov.b64 	%rd965, {%r8802, %r8801};
	shf.l.wrap.b32 	%r8803, %r8799, %r8800, 3;
	shf.l.wrap.b32 	%r8804, %r8800, %r8799, 3;
	mov.b64 	%rd966, {%r8804, %r8803};
	shr.u64 	%rd967, %rd4382, 6;
	xor.b64  	%rd968, %rd965, %rd967;
	xor.b64  	%rd969, %rd968, %rd966;
	shf.r.wrap.b32 	%r8805, %r8648, %r8647, 1;
	shf.r.wrap.b32 	%r8806, %r8647, %r8648, 1;
	mov.b64 	%rd970, {%r8806, %r8805};
	shf.r.wrap.b32 	%r8807, %r8648, %r8647, 8;
	shf.r.wrap.b32 	%r8808, %r8647, %r8648, 8;
	mov.b64 	%rd971, {%r8808, %r8807};
	shr.u64 	%rd972, %rd4396, 7;
	xor.b64  	%rd973, %rd970, %rd972;
	xor.b64  	%rd974, %rd973, %rd971;
	add.s64 	%rd975, %rd4387, %rd4380;
	add.s64 	%rd976, %rd975, %rd969;
	add.s64 	%rd4380, %rd976, %rd974;
	mul.wide.s32 	%rd977, %r19360, 8;
	mov.u64 	%rd978, k_sha512;
	add.s64 	%rd979, %rd978, %rd977;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8809,%dummy}, %rd4392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8810}, %rd4392;
	}
	shf.r.wrap.b32 	%r8811, %r8810, %r8809, 18;
	shf.r.wrap.b32 	%r8812, %r8809, %r8810, 18;
	mov.b64 	%rd980, {%r8812, %r8811};
	shf.r.wrap.b32 	%r8813, %r8810, %r8809, 14;
	shf.r.wrap.b32 	%r8814, %r8809, %r8810, 14;
	mov.b64 	%rd981, {%r8814, %r8813};
	xor.b64  	%rd982, %rd980, %rd981;
	shf.l.wrap.b32 	%r8815, %r8809, %r8810, 23;
	shf.l.wrap.b32 	%r8816, %r8810, %r8809, 23;
	mov.b64 	%rd983, {%r8816, %r8815};
	xor.b64  	%rd984, %rd982, %rd983;
	xor.b64  	%rd985, %rd4394, %rd4393;
	and.b64  	%rd986, %rd985, %rd4392;
	xor.b64  	%rd987, %rd986, %rd4394;
	add.s64 	%rd988, %rd987, %rd4395;
	add.s64 	%rd989, %rd988, %rd4396;
	ld.const.u64 	%rd990, [%rd979];
	add.s64 	%rd991, %rd989, %rd990;
	add.s64 	%rd992, %rd991, %rd984;
	add.s64 	%rd993, %rd992, %rd4391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8817}, %rd4388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8818,%dummy}, %rd4388;
	}
	shf.l.wrap.b32 	%r8819, %r8818, %r8817, 30;
	shf.l.wrap.b32 	%r8820, %r8817, %r8818, 30;
	mov.b64 	%rd994, {%r8820, %r8819};
	shf.r.wrap.b32 	%r8821, %r8817, %r8818, 28;
	shf.r.wrap.b32 	%r8822, %r8818, %r8817, 28;
	mov.b64 	%rd995, {%r8822, %r8821};
	xor.b64  	%rd996, %rd994, %rd995;
	shf.l.wrap.b32 	%r8823, %r8818, %r8817, 25;
	shf.l.wrap.b32 	%r8824, %r8817, %r8818, 25;
	mov.b64 	%rd997, {%r8824, %r8823};
	xor.b64  	%rd998, %rd996, %rd997;
	xor.b64  	%rd999, %rd4389, %rd4388;
	and.b64  	%rd1000, %rd999, %rd4390;
	and.b64  	%rd1001, %rd4389, %rd4388;
	or.b64  	%rd1002, %rd1000, %rd1001;
	add.s64 	%rd1003, %rd992, %rd1002;
	add.s64 	%rd1004, %rd1003, %rd998;
	add.s32 	%r8825, %r19360, 1;
	mul.wide.s32 	%rd1005, %r8825, 8;
	add.s64 	%rd1006, %rd978, %rd1005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8826,%dummy}, %rd993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8827}, %rd993;
	}
	shf.r.wrap.b32 	%r8828, %r8827, %r8826, 14;
	shf.r.wrap.b32 	%r8829, %r8826, %r8827, 14;
	mov.b64 	%rd1007, {%r8829, %r8828};
	shf.r.wrap.b32 	%r8830, %r8827, %r8826, 18;
	shf.r.wrap.b32 	%r8831, %r8826, %r8827, 18;
	mov.b64 	%rd1008, {%r8831, %r8830};
	xor.b64  	%rd1009, %rd1008, %rd1007;
	shf.l.wrap.b32 	%r8832, %r8826, %r8827, 23;
	shf.l.wrap.b32 	%r8833, %r8827, %r8826, 23;
	mov.b64 	%rd1010, {%r8833, %r8832};
	xor.b64  	%rd1011, %rd1009, %rd1010;
	xor.b64  	%rd1012, %rd4393, %rd4392;
	and.b64  	%rd1013, %rd993, %rd1012;
	xor.b64  	%rd1014, %rd1013, %rd4393;
	add.s64 	%rd1015, %rd4397, %rd4394;
	ld.const.u64 	%rd1016, [%rd1006];
	add.s64 	%rd1017, %rd1015, %rd1016;
	add.s64 	%rd1018, %rd1017, %rd1014;
	add.s64 	%rd1019, %rd1018, %rd1011;
	add.s64 	%rd1020, %rd1019, %rd4390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8834,%dummy}, %rd1004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8835}, %rd1004;
	}
	shf.r.wrap.b32 	%r8836, %r8835, %r8834, 28;
	shf.r.wrap.b32 	%r8837, %r8834, %r8835, 28;
	mov.b64 	%rd1021, {%r8837, %r8836};
	shf.l.wrap.b32 	%r8838, %r8834, %r8835, 30;
	shf.l.wrap.b32 	%r8839, %r8835, %r8834, 30;
	mov.b64 	%rd1022, {%r8839, %r8838};
	xor.b64  	%rd1023, %rd1022, %rd1021;
	shf.l.wrap.b32 	%r8840, %r8834, %r8835, 25;
	shf.l.wrap.b32 	%r8841, %r8835, %r8834, 25;
	mov.b64 	%rd1024, {%r8841, %r8840};
	xor.b64  	%rd1025, %rd1023, %rd1024;
	and.b64  	%rd1026, %rd1004, %rd4388;
	xor.b64  	%rd1027, %rd1004, %rd4388;
	and.b64  	%rd1028, %rd1027, %rd4389;
	or.b64  	%rd1029, %rd1028, %rd1026;
	add.s64 	%rd1030, %rd1019, %rd1029;
	add.s64 	%rd1031, %rd1030, %rd1025;
	add.s32 	%r8842, %r19360, 2;
	mul.wide.s32 	%rd1032, %r8842, 8;
	add.s64 	%rd1033, %rd978, %rd1032;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8843,%dummy}, %rd1020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8844}, %rd1020;
	}
	shf.r.wrap.b32 	%r8845, %r8844, %r8843, 14;
	shf.r.wrap.b32 	%r8846, %r8843, %r8844, 14;
	mov.b64 	%rd1034, {%r8846, %r8845};
	shf.r.wrap.b32 	%r8847, %r8844, %r8843, 18;
	shf.r.wrap.b32 	%r8848, %r8843, %r8844, 18;
	mov.b64 	%rd1035, {%r8848, %r8847};
	xor.b64  	%rd1036, %rd1035, %rd1034;
	shf.l.wrap.b32 	%r8849, %r8843, %r8844, 23;
	shf.l.wrap.b32 	%r8850, %r8844, %r8843, 23;
	mov.b64 	%rd1037, {%r8850, %r8849};
	xor.b64  	%rd1038, %rd1036, %rd1037;
	xor.b64  	%rd1039, %rd993, %rd4392;
	and.b64  	%rd1040, %rd1020, %rd1039;
	xor.b64  	%rd1041, %rd1040, %rd4392;
	add.s64 	%rd1042, %rd4398, %rd4393;
	ld.const.u64 	%rd1043, [%rd1033];
	add.s64 	%rd1044, %rd1042, %rd1043;
	add.s64 	%rd1045, %rd1044, %rd1041;
	add.s64 	%rd1046, %rd1045, %rd1038;
	add.s64 	%rd1047, %rd1046, %rd4389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8851,%dummy}, %rd1031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8852}, %rd1031;
	}
	shf.r.wrap.b32 	%r8853, %r8852, %r8851, 28;
	shf.r.wrap.b32 	%r8854, %r8851, %r8852, 28;
	mov.b64 	%rd1048, {%r8854, %r8853};
	shf.l.wrap.b32 	%r8855, %r8851, %r8852, 30;
	shf.l.wrap.b32 	%r8856, %r8852, %r8851, 30;
	mov.b64 	%rd1049, {%r8856, %r8855};
	xor.b64  	%rd1050, %rd1049, %rd1048;
	shf.l.wrap.b32 	%r8857, %r8851, %r8852, 25;
	shf.l.wrap.b32 	%r8858, %r8852, %r8851, 25;
	mov.b64 	%rd1051, {%r8858, %r8857};
	xor.b64  	%rd1052, %rd1050, %rd1051;
	and.b64  	%rd1053, %rd1031, %rd1004;
	xor.b64  	%rd1054, %rd1031, %rd1004;
	and.b64  	%rd1055, %rd1054, %rd4388;
	or.b64  	%rd1056, %rd1055, %rd1053;
	add.s64 	%rd1057, %rd1046, %rd1056;
	add.s64 	%rd1058, %rd1057, %rd1052;
	add.s32 	%r8859, %r19360, 3;
	mul.wide.s32 	%rd1059, %r8859, 8;
	add.s64 	%rd1060, %rd978, %rd1059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8860,%dummy}, %rd1047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8861}, %rd1047;
	}
	shf.r.wrap.b32 	%r8862, %r8861, %r8860, 14;
	shf.r.wrap.b32 	%r8863, %r8860, %r8861, 14;
	mov.b64 	%rd1061, {%r8863, %r8862};
	shf.r.wrap.b32 	%r8864, %r8861, %r8860, 18;
	shf.r.wrap.b32 	%r8865, %r8860, %r8861, 18;
	mov.b64 	%rd1062, {%r8865, %r8864};
	xor.b64  	%rd1063, %rd1062, %rd1061;
	shf.l.wrap.b32 	%r8866, %r8860, %r8861, 23;
	shf.l.wrap.b32 	%r8867, %r8861, %r8860, 23;
	mov.b64 	%rd1064, {%r8867, %r8866};
	xor.b64  	%rd1065, %rd1063, %rd1064;
	xor.b64  	%rd1066, %rd1020, %rd993;
	and.b64  	%rd1067, %rd1047, %rd1066;
	xor.b64  	%rd1068, %rd1067, %rd993;
	add.s64 	%rd1069, %rd4399, %rd4392;
	ld.const.u64 	%rd1070, [%rd1060];
	add.s64 	%rd1071, %rd1069, %rd1070;
	add.s64 	%rd1072, %rd1071, %rd1068;
	add.s64 	%rd1073, %rd1072, %rd1065;
	add.s64 	%rd1074, %rd1073, %rd4388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8868,%dummy}, %rd1058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8869}, %rd1058;
	}
	shf.r.wrap.b32 	%r8870, %r8869, %r8868, 28;
	shf.r.wrap.b32 	%r8871, %r8868, %r8869, 28;
	mov.b64 	%rd1075, {%r8871, %r8870};
	shf.l.wrap.b32 	%r8872, %r8868, %r8869, 30;
	shf.l.wrap.b32 	%r8873, %r8869, %r8868, 30;
	mov.b64 	%rd1076, {%r8873, %r8872};
	xor.b64  	%rd1077, %rd1076, %rd1075;
	shf.l.wrap.b32 	%r8874, %r8868, %r8869, 25;
	shf.l.wrap.b32 	%r8875, %r8869, %r8868, 25;
	mov.b64 	%rd1078, {%r8875, %r8874};
	xor.b64  	%rd1079, %rd1077, %rd1078;
	and.b64  	%rd1080, %rd1058, %rd1031;
	xor.b64  	%rd1081, %rd1058, %rd1031;
	and.b64  	%rd1082, %rd1081, %rd1004;
	or.b64  	%rd1083, %rd1082, %rd1080;
	add.s64 	%rd1084, %rd1073, %rd1083;
	add.s64 	%rd1085, %rd1084, %rd1079;
	add.s32 	%r8876, %r19360, 4;
	mul.wide.s32 	%rd1086, %r8876, 8;
	add.s64 	%rd1087, %rd978, %rd1086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8877,%dummy}, %rd1074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8878}, %rd1074;
	}
	shf.r.wrap.b32 	%r8879, %r8878, %r8877, 14;
	shf.r.wrap.b32 	%r8880, %r8877, %r8878, 14;
	mov.b64 	%rd1088, {%r8880, %r8879};
	shf.r.wrap.b32 	%r8881, %r8878, %r8877, 18;
	shf.r.wrap.b32 	%r8882, %r8877, %r8878, 18;
	mov.b64 	%rd1089, {%r8882, %r8881};
	xor.b64  	%rd1090, %rd1089, %rd1088;
	shf.l.wrap.b32 	%r8883, %r8877, %r8878, 23;
	shf.l.wrap.b32 	%r8884, %r8878, %r8877, 23;
	mov.b64 	%rd1091, {%r8884, %r8883};
	xor.b64  	%rd1092, %rd1090, %rd1091;
	xor.b64  	%rd1093, %rd1047, %rd1020;
	and.b64  	%rd1094, %rd1074, %rd1093;
	xor.b64  	%rd1095, %rd1094, %rd1020;
	add.s64 	%rd1096, %rd993, %rd4400;
	ld.const.u64 	%rd1097, [%rd1087];
	add.s64 	%rd1098, %rd1096, %rd1097;
	add.s64 	%rd1099, %rd1098, %rd1095;
	add.s64 	%rd1100, %rd1099, %rd1092;
	add.s64 	%rd1101, %rd1100, %rd1004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8885,%dummy}, %rd1085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8886}, %rd1085;
	}
	shf.r.wrap.b32 	%r8887, %r8886, %r8885, 28;
	shf.r.wrap.b32 	%r8888, %r8885, %r8886, 28;
	mov.b64 	%rd1102, {%r8888, %r8887};
	shf.l.wrap.b32 	%r8889, %r8885, %r8886, 30;
	shf.l.wrap.b32 	%r8890, %r8886, %r8885, 30;
	mov.b64 	%rd1103, {%r8890, %r8889};
	xor.b64  	%rd1104, %rd1103, %rd1102;
	shf.l.wrap.b32 	%r8891, %r8885, %r8886, 25;
	shf.l.wrap.b32 	%r8892, %r8886, %r8885, 25;
	mov.b64 	%rd1105, {%r8892, %r8891};
	xor.b64  	%rd1106, %rd1104, %rd1105;
	and.b64  	%rd1107, %rd1085, %rd1058;
	xor.b64  	%rd1108, %rd1085, %rd1058;
	and.b64  	%rd1109, %rd1108, %rd1031;
	or.b64  	%rd1110, %rd1109, %rd1107;
	add.s64 	%rd1111, %rd1100, %rd1110;
	add.s64 	%rd1112, %rd1111, %rd1106;
	add.s32 	%r8893, %r19360, 5;
	mul.wide.s32 	%rd1113, %r8893, 8;
	add.s64 	%rd1114, %rd978, %rd1113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8894,%dummy}, %rd1101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8895}, %rd1101;
	}
	shf.r.wrap.b32 	%r8896, %r8895, %r8894, 14;
	shf.r.wrap.b32 	%r8897, %r8894, %r8895, 14;
	mov.b64 	%rd1115, {%r8897, %r8896};
	shf.r.wrap.b32 	%r8898, %r8895, %r8894, 18;
	shf.r.wrap.b32 	%r8899, %r8894, %r8895, 18;
	mov.b64 	%rd1116, {%r8899, %r8898};
	xor.b64  	%rd1117, %rd1116, %rd1115;
	shf.l.wrap.b32 	%r8900, %r8894, %r8895, 23;
	shf.l.wrap.b32 	%r8901, %r8895, %r8894, 23;
	mov.b64 	%rd1118, {%r8901, %r8900};
	xor.b64  	%rd1119, %rd1117, %rd1118;
	xor.b64  	%rd1120, %rd1074, %rd1047;
	and.b64  	%rd1121, %rd1101, %rd1120;
	xor.b64  	%rd1122, %rd1121, %rd1047;
	add.s64 	%rd1123, %rd1020, %rd4401;
	ld.const.u64 	%rd1124, [%rd1114];
	add.s64 	%rd1125, %rd1123, %rd1124;
	add.s64 	%rd1126, %rd1125, %rd1122;
	add.s64 	%rd1127, %rd1126, %rd1119;
	add.s64 	%rd1128, %rd1127, %rd1031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8902,%dummy}, %rd1112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8903}, %rd1112;
	}
	shf.r.wrap.b32 	%r8904, %r8903, %r8902, 28;
	shf.r.wrap.b32 	%r8905, %r8902, %r8903, 28;
	mov.b64 	%rd1129, {%r8905, %r8904};
	shf.l.wrap.b32 	%r8906, %r8902, %r8903, 30;
	shf.l.wrap.b32 	%r8907, %r8903, %r8902, 30;
	mov.b64 	%rd1130, {%r8907, %r8906};
	xor.b64  	%rd1131, %rd1130, %rd1129;
	shf.l.wrap.b32 	%r8908, %r8902, %r8903, 25;
	shf.l.wrap.b32 	%r8909, %r8903, %r8902, 25;
	mov.b64 	%rd1132, {%r8909, %r8908};
	xor.b64  	%rd1133, %rd1131, %rd1132;
	and.b64  	%rd1134, %rd1112, %rd1085;
	xor.b64  	%rd1135, %rd1112, %rd1085;
	and.b64  	%rd1136, %rd1135, %rd1058;
	or.b64  	%rd1137, %rd1136, %rd1134;
	add.s64 	%rd1138, %rd1127, %rd1137;
	add.s64 	%rd1139, %rd1138, %rd1133;
	add.s32 	%r8910, %r19360, 6;
	mul.wide.s32 	%rd1140, %r8910, 8;
	add.s64 	%rd1141, %rd978, %rd1140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8911,%dummy}, %rd1128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8912}, %rd1128;
	}
	shf.r.wrap.b32 	%r8913, %r8912, %r8911, 14;
	shf.r.wrap.b32 	%r8914, %r8911, %r8912, 14;
	mov.b64 	%rd1142, {%r8914, %r8913};
	shf.r.wrap.b32 	%r8915, %r8912, %r8911, 18;
	shf.r.wrap.b32 	%r8916, %r8911, %r8912, 18;
	mov.b64 	%rd1143, {%r8916, %r8915};
	xor.b64  	%rd1144, %rd1143, %rd1142;
	shf.l.wrap.b32 	%r8917, %r8911, %r8912, 23;
	shf.l.wrap.b32 	%r8918, %r8912, %r8911, 23;
	mov.b64 	%rd1145, {%r8918, %r8917};
	xor.b64  	%rd1146, %rd1144, %rd1145;
	xor.b64  	%rd1147, %rd1101, %rd1074;
	and.b64  	%rd1148, %rd1128, %rd1147;
	xor.b64  	%rd1149, %rd1148, %rd1074;
	add.s64 	%rd1150, %rd1047, %rd4402;
	ld.const.u64 	%rd1151, [%rd1141];
	add.s64 	%rd1152, %rd1150, %rd1151;
	add.s64 	%rd1153, %rd1152, %rd1149;
	add.s64 	%rd1154, %rd1153, %rd1146;
	add.s64 	%rd1155, %rd1154, %rd1058;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8919,%dummy}, %rd1139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8920}, %rd1139;
	}
	shf.r.wrap.b32 	%r8921, %r8920, %r8919, 28;
	shf.r.wrap.b32 	%r8922, %r8919, %r8920, 28;
	mov.b64 	%rd1156, {%r8922, %r8921};
	shf.l.wrap.b32 	%r8923, %r8919, %r8920, 30;
	shf.l.wrap.b32 	%r8924, %r8920, %r8919, 30;
	mov.b64 	%rd1157, {%r8924, %r8923};
	xor.b64  	%rd1158, %rd1157, %rd1156;
	shf.l.wrap.b32 	%r8925, %r8919, %r8920, 25;
	shf.l.wrap.b32 	%r8926, %r8920, %r8919, 25;
	mov.b64 	%rd1159, {%r8926, %r8925};
	xor.b64  	%rd1160, %rd1158, %rd1159;
	and.b64  	%rd1161, %rd1139, %rd1112;
	xor.b64  	%rd1162, %rd1139, %rd1112;
	and.b64  	%rd1163, %rd1162, %rd1085;
	or.b64  	%rd1164, %rd1163, %rd1161;
	add.s64 	%rd1165, %rd1154, %rd1164;
	add.s64 	%rd1166, %rd1165, %rd1160;
	add.s32 	%r8927, %r19360, 7;
	mul.wide.s32 	%rd1167, %r8927, 8;
	add.s64 	%rd1168, %rd978, %rd1167;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8928,%dummy}, %rd1155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8929}, %rd1155;
	}
	shf.r.wrap.b32 	%r8930, %r8929, %r8928, 14;
	shf.r.wrap.b32 	%r8931, %r8928, %r8929, 14;
	mov.b64 	%rd1169, {%r8931, %r8930};
	shf.r.wrap.b32 	%r8932, %r8929, %r8928, 18;
	shf.r.wrap.b32 	%r8933, %r8928, %r8929, 18;
	mov.b64 	%rd1170, {%r8933, %r8932};
	xor.b64  	%rd1171, %rd1170, %rd1169;
	shf.l.wrap.b32 	%r8934, %r8928, %r8929, 23;
	shf.l.wrap.b32 	%r8935, %r8929, %r8928, 23;
	mov.b64 	%rd1172, {%r8935, %r8934};
	xor.b64  	%rd1173, %rd1171, %rd1172;
	xor.b64  	%rd1174, %rd1128, %rd1101;
	and.b64  	%rd1175, %rd1155, %rd1174;
	xor.b64  	%rd1176, %rd1175, %rd1101;
	add.s64 	%rd1177, %rd1074, %rd4403;
	ld.const.u64 	%rd1178, [%rd1168];
	add.s64 	%rd1179, %rd1177, %rd1178;
	add.s64 	%rd1180, %rd1179, %rd1176;
	add.s64 	%rd1181, %rd1180, %rd1173;
	add.s64 	%rd1182, %rd1181, %rd1085;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8936,%dummy}, %rd1166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8937}, %rd1166;
	}
	shf.r.wrap.b32 	%r8938, %r8937, %r8936, 28;
	shf.r.wrap.b32 	%r8939, %r8936, %r8937, 28;
	mov.b64 	%rd1183, {%r8939, %r8938};
	shf.l.wrap.b32 	%r8940, %r8936, %r8937, 30;
	shf.l.wrap.b32 	%r8941, %r8937, %r8936, 30;
	mov.b64 	%rd1184, {%r8941, %r8940};
	xor.b64  	%rd1185, %rd1184, %rd1183;
	shf.l.wrap.b32 	%r8942, %r8936, %r8937, 25;
	shf.l.wrap.b32 	%r8943, %r8937, %r8936, 25;
	mov.b64 	%rd1186, {%r8943, %r8942};
	xor.b64  	%rd1187, %rd1185, %rd1186;
	and.b64  	%rd1188, %rd1166, %rd1139;
	xor.b64  	%rd1189, %rd1166, %rd1139;
	and.b64  	%rd1190, %rd1189, %rd1112;
	or.b64  	%rd1191, %rd1190, %rd1188;
	add.s64 	%rd1192, %rd1181, %rd1191;
	add.s64 	%rd1193, %rd1192, %rd1187;
	add.s32 	%r8944, %r19360, 8;
	mul.wide.s32 	%rd1194, %r8944, 8;
	add.s64 	%rd1195, %rd978, %rd1194;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8945,%dummy}, %rd1182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8946}, %rd1182;
	}
	shf.r.wrap.b32 	%r8947, %r8946, %r8945, 14;
	shf.r.wrap.b32 	%r8948, %r8945, %r8946, 14;
	mov.b64 	%rd1196, {%r8948, %r8947};
	shf.r.wrap.b32 	%r8949, %r8946, %r8945, 18;
	shf.r.wrap.b32 	%r8950, %r8945, %r8946, 18;
	mov.b64 	%rd1197, {%r8950, %r8949};
	xor.b64  	%rd1198, %rd1197, %rd1196;
	shf.l.wrap.b32 	%r8951, %r8945, %r8946, 23;
	shf.l.wrap.b32 	%r8952, %r8946, %r8945, 23;
	mov.b64 	%rd1199, {%r8952, %r8951};
	xor.b64  	%rd1200, %rd1198, %rd1199;
	xor.b64  	%rd1201, %rd1155, %rd1128;
	and.b64  	%rd1202, %rd1182, %rd1201;
	xor.b64  	%rd1203, %rd1202, %rd1128;
	add.s64 	%rd1204, %rd1101, %rd4387;
	ld.const.u64 	%rd1205, [%rd1195];
	add.s64 	%rd1206, %rd1204, %rd1205;
	add.s64 	%rd1207, %rd1206, %rd1203;
	add.s64 	%rd1208, %rd1207, %rd1200;
	add.s64 	%rd1209, %rd1208, %rd1112;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8953,%dummy}, %rd1193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8954}, %rd1193;
	}
	shf.r.wrap.b32 	%r8955, %r8954, %r8953, 28;
	shf.r.wrap.b32 	%r8956, %r8953, %r8954, 28;
	mov.b64 	%rd1210, {%r8956, %r8955};
	shf.l.wrap.b32 	%r8957, %r8953, %r8954, 30;
	shf.l.wrap.b32 	%r8958, %r8954, %r8953, 30;
	mov.b64 	%rd1211, {%r8958, %r8957};
	xor.b64  	%rd1212, %rd1211, %rd1210;
	shf.l.wrap.b32 	%r8959, %r8953, %r8954, 25;
	shf.l.wrap.b32 	%r8960, %r8954, %r8953, 25;
	mov.b64 	%rd1213, {%r8960, %r8959};
	xor.b64  	%rd1214, %rd1212, %rd1213;
	and.b64  	%rd1215, %rd1193, %rd1166;
	xor.b64  	%rd1216, %rd1193, %rd1166;
	and.b64  	%rd1217, %rd1216, %rd1139;
	or.b64  	%rd1218, %rd1217, %rd1215;
	add.s64 	%rd1219, %rd1208, %rd1218;
	add.s64 	%rd1220, %rd1219, %rd1214;
	add.s32 	%r8961, %r19360, 9;
	mul.wide.s32 	%rd1221, %r8961, 8;
	add.s64 	%rd1222, %rd978, %rd1221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8962,%dummy}, %rd1209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8963}, %rd1209;
	}
	shf.r.wrap.b32 	%r8964, %r8963, %r8962, 14;
	shf.r.wrap.b32 	%r8965, %r8962, %r8963, 14;
	mov.b64 	%rd1223, {%r8965, %r8964};
	shf.r.wrap.b32 	%r8966, %r8963, %r8962, 18;
	shf.r.wrap.b32 	%r8967, %r8962, %r8963, 18;
	mov.b64 	%rd1224, {%r8967, %r8966};
	xor.b64  	%rd1225, %rd1224, %rd1223;
	shf.l.wrap.b32 	%r8968, %r8962, %r8963, 23;
	shf.l.wrap.b32 	%r8969, %r8963, %r8962, 23;
	mov.b64 	%rd1226, {%r8969, %r8968};
	xor.b64  	%rd1227, %rd1225, %rd1226;
	xor.b64  	%rd1228, %rd1182, %rd1155;
	and.b64  	%rd1229, %rd1209, %rd1228;
	xor.b64  	%rd1230, %rd1229, %rd1155;
	add.s64 	%rd1231, %rd1128, %rd4386;
	ld.const.u64 	%rd1232, [%rd1222];
	add.s64 	%rd1233, %rd1231, %rd1232;
	add.s64 	%rd1234, %rd1233, %rd1230;
	add.s64 	%rd1235, %rd1234, %rd1227;
	add.s64 	%rd1236, %rd1235, %rd1139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8970,%dummy}, %rd1220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8971}, %rd1220;
	}
	shf.r.wrap.b32 	%r8972, %r8971, %r8970, 28;
	shf.r.wrap.b32 	%r8973, %r8970, %r8971, 28;
	mov.b64 	%rd1237, {%r8973, %r8972};
	shf.l.wrap.b32 	%r8974, %r8970, %r8971, 30;
	shf.l.wrap.b32 	%r8975, %r8971, %r8970, 30;
	mov.b64 	%rd1238, {%r8975, %r8974};
	xor.b64  	%rd1239, %rd1238, %rd1237;
	shf.l.wrap.b32 	%r8976, %r8970, %r8971, 25;
	shf.l.wrap.b32 	%r8977, %r8971, %r8970, 25;
	mov.b64 	%rd1240, {%r8977, %r8976};
	xor.b64  	%rd1241, %rd1239, %rd1240;
	and.b64  	%rd1242, %rd1220, %rd1193;
	xor.b64  	%rd1243, %rd1220, %rd1193;
	and.b64  	%rd1244, %rd1243, %rd1166;
	or.b64  	%rd1245, %rd1244, %rd1242;
	add.s64 	%rd1246, %rd1235, %rd1245;
	add.s64 	%rd1247, %rd1246, %rd1241;
	add.s32 	%r8978, %r19360, 10;
	mul.wide.s32 	%rd1248, %r8978, 8;
	add.s64 	%rd1249, %rd978, %rd1248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8979,%dummy}, %rd1236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8980}, %rd1236;
	}
	shf.r.wrap.b32 	%r8981, %r8980, %r8979, 14;
	shf.r.wrap.b32 	%r8982, %r8979, %r8980, 14;
	mov.b64 	%rd1250, {%r8982, %r8981};
	shf.r.wrap.b32 	%r8983, %r8980, %r8979, 18;
	shf.r.wrap.b32 	%r8984, %r8979, %r8980, 18;
	mov.b64 	%rd1251, {%r8984, %r8983};
	xor.b64  	%rd1252, %rd1251, %rd1250;
	shf.l.wrap.b32 	%r8985, %r8979, %r8980, 23;
	shf.l.wrap.b32 	%r8986, %r8980, %r8979, 23;
	mov.b64 	%rd1253, {%r8986, %r8985};
	xor.b64  	%rd1254, %rd1252, %rd1253;
	xor.b64  	%rd1255, %rd1209, %rd1182;
	and.b64  	%rd1256, %rd1236, %rd1255;
	xor.b64  	%rd1257, %rd1256, %rd1182;
	add.s64 	%rd1258, %rd1155, %rd4385;
	ld.const.u64 	%rd1259, [%rd1249];
	add.s64 	%rd1260, %rd1258, %rd1259;
	add.s64 	%rd1261, %rd1260, %rd1257;
	add.s64 	%rd1262, %rd1261, %rd1254;
	add.s64 	%rd1263, %rd1262, %rd1166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8987,%dummy}, %rd1247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8988}, %rd1247;
	}
	shf.r.wrap.b32 	%r8989, %r8988, %r8987, 28;
	shf.r.wrap.b32 	%r8990, %r8987, %r8988, 28;
	mov.b64 	%rd1264, {%r8990, %r8989};
	shf.l.wrap.b32 	%r8991, %r8987, %r8988, 30;
	shf.l.wrap.b32 	%r8992, %r8988, %r8987, 30;
	mov.b64 	%rd1265, {%r8992, %r8991};
	xor.b64  	%rd1266, %rd1265, %rd1264;
	shf.l.wrap.b32 	%r8993, %r8987, %r8988, 25;
	shf.l.wrap.b32 	%r8994, %r8988, %r8987, 25;
	mov.b64 	%rd1267, {%r8994, %r8993};
	xor.b64  	%rd1268, %rd1266, %rd1267;
	and.b64  	%rd1269, %rd1247, %rd1220;
	xor.b64  	%rd1270, %rd1247, %rd1220;
	and.b64  	%rd1271, %rd1270, %rd1193;
	or.b64  	%rd1272, %rd1271, %rd1269;
	add.s64 	%rd1273, %rd1262, %rd1272;
	add.s64 	%rd1274, %rd1273, %rd1268;
	add.s32 	%r8995, %r19360, 11;
	mul.wide.s32 	%rd1275, %r8995, 8;
	add.s64 	%rd1276, %rd978, %rd1275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8996,%dummy}, %rd1263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8997}, %rd1263;
	}
	shf.r.wrap.b32 	%r8998, %r8997, %r8996, 14;
	shf.r.wrap.b32 	%r8999, %r8996, %r8997, 14;
	mov.b64 	%rd1277, {%r8999, %r8998};
	shf.r.wrap.b32 	%r9000, %r8997, %r8996, 18;
	shf.r.wrap.b32 	%r9001, %r8996, %r8997, 18;
	mov.b64 	%rd1278, {%r9001, %r9000};
	xor.b64  	%rd1279, %rd1278, %rd1277;
	shf.l.wrap.b32 	%r9002, %r8996, %r8997, 23;
	shf.l.wrap.b32 	%r9003, %r8997, %r8996, 23;
	mov.b64 	%rd1280, {%r9003, %r9002};
	xor.b64  	%rd1281, %rd1279, %rd1280;
	xor.b64  	%rd1282, %rd1236, %rd1209;
	and.b64  	%rd1283, %rd1263, %rd1282;
	xor.b64  	%rd1284, %rd1283, %rd1209;
	add.s64 	%rd1285, %rd1182, %rd4384;
	ld.const.u64 	%rd1286, [%rd1276];
	add.s64 	%rd1287, %rd1285, %rd1286;
	add.s64 	%rd1288, %rd1287, %rd1284;
	add.s64 	%rd1289, %rd1288, %rd1281;
	add.s64 	%rd1290, %rd1289, %rd1193;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9004,%dummy}, %rd1274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9005}, %rd1274;
	}
	shf.r.wrap.b32 	%r9006, %r9005, %r9004, 28;
	shf.r.wrap.b32 	%r9007, %r9004, %r9005, 28;
	mov.b64 	%rd1291, {%r9007, %r9006};
	shf.l.wrap.b32 	%r9008, %r9004, %r9005, 30;
	shf.l.wrap.b32 	%r9009, %r9005, %r9004, 30;
	mov.b64 	%rd1292, {%r9009, %r9008};
	xor.b64  	%rd1293, %rd1292, %rd1291;
	shf.l.wrap.b32 	%r9010, %r9004, %r9005, 25;
	shf.l.wrap.b32 	%r9011, %r9005, %r9004, 25;
	mov.b64 	%rd1294, {%r9011, %r9010};
	xor.b64  	%rd1295, %rd1293, %rd1294;
	and.b64  	%rd1296, %rd1274, %rd1247;
	xor.b64  	%rd1297, %rd1274, %rd1247;
	and.b64  	%rd1298, %rd1297, %rd1220;
	or.b64  	%rd1299, %rd1298, %rd1296;
	add.s64 	%rd1300, %rd1289, %rd1299;
	add.s64 	%rd1301, %rd1300, %rd1295;
	add.s32 	%r9012, %r19360, 12;
	mul.wide.s32 	%rd1302, %r9012, 8;
	add.s64 	%rd1303, %rd978, %rd1302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9013,%dummy}, %rd1290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9014}, %rd1290;
	}
	shf.r.wrap.b32 	%r9015, %r9014, %r9013, 14;
	shf.r.wrap.b32 	%r9016, %r9013, %r9014, 14;
	mov.b64 	%rd1304, {%r9016, %r9015};
	shf.r.wrap.b32 	%r9017, %r9014, %r9013, 18;
	shf.r.wrap.b32 	%r9018, %r9013, %r9014, 18;
	mov.b64 	%rd1305, {%r9018, %r9017};
	xor.b64  	%rd1306, %rd1305, %rd1304;
	shf.l.wrap.b32 	%r9019, %r9013, %r9014, 23;
	shf.l.wrap.b32 	%r9020, %r9014, %r9013, 23;
	mov.b64 	%rd1307, {%r9020, %r9019};
	xor.b64  	%rd1308, %rd1306, %rd1307;
	xor.b64  	%rd1309, %rd1263, %rd1236;
	and.b64  	%rd1310, %rd1290, %rd1309;
	xor.b64  	%rd1311, %rd1310, %rd1236;
	add.s64 	%rd1312, %rd1209, %rd4383;
	ld.const.u64 	%rd1313, [%rd1303];
	add.s64 	%rd1314, %rd1312, %rd1313;
	add.s64 	%rd1315, %rd1314, %rd1311;
	add.s64 	%rd1316, %rd1315, %rd1308;
	add.s64 	%rd4395, %rd1316, %rd1220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9021,%dummy}, %rd1301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9022}, %rd1301;
	}
	shf.r.wrap.b32 	%r9023, %r9022, %r9021, 28;
	shf.r.wrap.b32 	%r9024, %r9021, %r9022, 28;
	mov.b64 	%rd1317, {%r9024, %r9023};
	shf.l.wrap.b32 	%r9025, %r9021, %r9022, 30;
	shf.l.wrap.b32 	%r9026, %r9022, %r9021, 30;
	mov.b64 	%rd1318, {%r9026, %r9025};
	xor.b64  	%rd1319, %rd1318, %rd1317;
	shf.l.wrap.b32 	%r9027, %r9021, %r9022, 25;
	shf.l.wrap.b32 	%r9028, %r9022, %r9021, 25;
	mov.b64 	%rd1320, {%r9028, %r9027};
	xor.b64  	%rd1321, %rd1319, %rd1320;
	and.b64  	%rd1322, %rd1301, %rd1274;
	xor.b64  	%rd1323, %rd1301, %rd1274;
	and.b64  	%rd1324, %rd1323, %rd1247;
	or.b64  	%rd1325, %rd1324, %rd1322;
	add.s64 	%rd1326, %rd1316, %rd1325;
	add.s64 	%rd4391, %rd1326, %rd1321;
	add.s32 	%r9029, %r19360, 13;
	mul.wide.s32 	%rd1327, %r9029, 8;
	add.s64 	%rd1328, %rd978, %rd1327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9030,%dummy}, %rd4395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9031}, %rd4395;
	}
	shf.r.wrap.b32 	%r9032, %r9031, %r9030, 14;
	shf.r.wrap.b32 	%r9033, %r9030, %r9031, 14;
	mov.b64 	%rd1329, {%r9033, %r9032};
	shf.r.wrap.b32 	%r9034, %r9031, %r9030, 18;
	shf.r.wrap.b32 	%r9035, %r9030, %r9031, 18;
	mov.b64 	%rd1330, {%r9035, %r9034};
	xor.b64  	%rd1331, %rd1330, %rd1329;
	shf.l.wrap.b32 	%r9036, %r9030, %r9031, 23;
	shf.l.wrap.b32 	%r9037, %r9031, %r9030, 23;
	mov.b64 	%rd1332, {%r9037, %r9036};
	xor.b64  	%rd1333, %rd1331, %rd1332;
	xor.b64  	%rd1334, %rd1290, %rd1263;
	and.b64  	%rd1335, %rd4395, %rd1334;
	xor.b64  	%rd1336, %rd1335, %rd1263;
	add.s64 	%rd1337, %rd1236, %rd4382;
	ld.const.u64 	%rd1338, [%rd1328];
	add.s64 	%rd1339, %rd1337, %rd1338;
	add.s64 	%rd1340, %rd1339, %rd1336;
	add.s64 	%rd1341, %rd1340, %rd1333;
	add.s64 	%rd4394, %rd1341, %rd1247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9038,%dummy}, %rd4391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9039}, %rd4391;
	}
	shf.r.wrap.b32 	%r9040, %r9039, %r9038, 28;
	shf.r.wrap.b32 	%r9041, %r9038, %r9039, 28;
	mov.b64 	%rd1342, {%r9041, %r9040};
	shf.l.wrap.b32 	%r9042, %r9038, %r9039, 30;
	shf.l.wrap.b32 	%r9043, %r9039, %r9038, 30;
	mov.b64 	%rd1343, {%r9043, %r9042};
	xor.b64  	%rd1344, %rd1343, %rd1342;
	shf.l.wrap.b32 	%r9044, %r9038, %r9039, 25;
	shf.l.wrap.b32 	%r9045, %r9039, %r9038, 25;
	mov.b64 	%rd1345, {%r9045, %r9044};
	xor.b64  	%rd1346, %rd1344, %rd1345;
	and.b64  	%rd1347, %rd4391, %rd1301;
	xor.b64  	%rd1348, %rd4391, %rd1301;
	and.b64  	%rd1349, %rd1348, %rd1274;
	or.b64  	%rd1350, %rd1349, %rd1347;
	add.s64 	%rd1351, %rd1341, %rd1350;
	add.s64 	%rd4390, %rd1351, %rd1346;
	add.s32 	%r9046, %r19360, 14;
	mul.wide.s32 	%rd1352, %r9046, 8;
	add.s64 	%rd1353, %rd978, %rd1352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9047,%dummy}, %rd4394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9048}, %rd4394;
	}
	shf.r.wrap.b32 	%r9049, %r9048, %r9047, 14;
	shf.r.wrap.b32 	%r9050, %r9047, %r9048, 14;
	mov.b64 	%rd1354, {%r9050, %r9049};
	shf.r.wrap.b32 	%r9051, %r9048, %r9047, 18;
	shf.r.wrap.b32 	%r9052, %r9047, %r9048, 18;
	mov.b64 	%rd1355, {%r9052, %r9051};
	xor.b64  	%rd1356, %rd1355, %rd1354;
	shf.l.wrap.b32 	%r9053, %r9047, %r9048, 23;
	shf.l.wrap.b32 	%r9054, %r9048, %r9047, 23;
	mov.b64 	%rd1357, {%r9054, %r9053};
	xor.b64  	%rd1358, %rd1356, %rd1357;
	xor.b64  	%rd1359, %rd4395, %rd1290;
	and.b64  	%rd1360, %rd4394, %rd1359;
	xor.b64  	%rd1361, %rd1360, %rd1290;
	add.s64 	%rd1362, %rd1263, %rd4381;
	ld.const.u64 	%rd1363, [%rd1353];
	add.s64 	%rd1364, %rd1362, %rd1363;
	add.s64 	%rd1365, %rd1364, %rd1361;
	add.s64 	%rd1366, %rd1365, %rd1358;
	add.s64 	%rd4393, %rd1366, %rd1274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9055,%dummy}, %rd4390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9056}, %rd4390;
	}
	shf.r.wrap.b32 	%r9057, %r9056, %r9055, 28;
	shf.r.wrap.b32 	%r9058, %r9055, %r9056, 28;
	mov.b64 	%rd1367, {%r9058, %r9057};
	shf.l.wrap.b32 	%r9059, %r9055, %r9056, 30;
	shf.l.wrap.b32 	%r9060, %r9056, %r9055, 30;
	mov.b64 	%rd1368, {%r9060, %r9059};
	xor.b64  	%rd1369, %rd1368, %rd1367;
	shf.l.wrap.b32 	%r9061, %r9055, %r9056, 25;
	shf.l.wrap.b32 	%r9062, %r9056, %r9055, 25;
	mov.b64 	%rd1370, {%r9062, %r9061};
	xor.b64  	%rd1371, %rd1369, %rd1370;
	and.b64  	%rd1372, %rd4390, %rd4391;
	xor.b64  	%rd1373, %rd4390, %rd4391;
	and.b64  	%rd1374, %rd1373, %rd1301;
	or.b64  	%rd1375, %rd1374, %rd1372;
	add.s64 	%rd1376, %rd1366, %rd1375;
	add.s64 	%rd4389, %rd1376, %rd1371;
	add.s32 	%r9063, %r19360, 15;
	mul.wide.s32 	%rd1377, %r9063, 8;
	add.s64 	%rd1378, %rd978, %rd1377;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9064,%dummy}, %rd4393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9065}, %rd4393;
	}
	shf.r.wrap.b32 	%r9066, %r9065, %r9064, 14;
	shf.r.wrap.b32 	%r9067, %r9064, %r9065, 14;
	mov.b64 	%rd1379, {%r9067, %r9066};
	shf.r.wrap.b32 	%r9068, %r9065, %r9064, 18;
	shf.r.wrap.b32 	%r9069, %r9064, %r9065, 18;
	mov.b64 	%rd1380, {%r9069, %r9068};
	xor.b64  	%rd1381, %rd1380, %rd1379;
	shf.l.wrap.b32 	%r9070, %r9064, %r9065, 23;
	shf.l.wrap.b32 	%r9071, %r9065, %r9064, 23;
	mov.b64 	%rd1382, {%r9071, %r9070};
	xor.b64  	%rd1383, %rd1381, %rd1382;
	xor.b64  	%rd1384, %rd4394, %rd4395;
	and.b64  	%rd1385, %rd4393, %rd1384;
	xor.b64  	%rd1386, %rd1385, %rd4395;
	add.s64 	%rd1387, %rd1290, %rd4380;
	ld.const.u64 	%rd1388, [%rd1378];
	add.s64 	%rd1389, %rd1387, %rd1388;
	add.s64 	%rd1390, %rd1389, %rd1386;
	add.s64 	%rd1391, %rd1390, %rd1383;
	add.s64 	%rd4392, %rd1391, %rd1301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9072,%dummy}, %rd4389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9073}, %rd4389;
	}
	shf.r.wrap.b32 	%r9074, %r9073, %r9072, 28;
	shf.r.wrap.b32 	%r9075, %r9072, %r9073, 28;
	mov.b64 	%rd1392, {%r9075, %r9074};
	shf.l.wrap.b32 	%r9076, %r9072, %r9073, 30;
	shf.l.wrap.b32 	%r9077, %r9073, %r9072, 30;
	mov.b64 	%rd1393, {%r9077, %r9076};
	xor.b64  	%rd1394, %rd1393, %rd1392;
	shf.l.wrap.b32 	%r9078, %r9072, %r9073, 25;
	shf.l.wrap.b32 	%r9079, %r9073, %r9072, 25;
	mov.b64 	%rd1395, {%r9079, %r9078};
	xor.b64  	%rd1396, %rd1394, %rd1395;
	and.b64  	%rd1397, %rd4389, %rd4390;
	xor.b64  	%rd1398, %rd4389, %rd4390;
	and.b64  	%rd1399, %rd1398, %rd4391;
	or.b64  	%rd1400, %rd1399, %rd1397;
	add.s64 	%rd1401, %rd1391, %rd1400;
	add.s64 	%rd4388, %rd1401, %rd1396;
	add.s32 	%r19360, %r19360, 16;
	setp.lt.s32	%p51, %r19360, 80;
	@%p51 bra 	BB2_92;

	add.s64 	%rd1402, %rd4388, %rd39;
	st.local.u64 	[%rd1], %rd1402;
	add.s64 	%rd1403, %rd4389, %rd40;
	st.local.u64 	[%rd1+8], %rd1403;
	add.s64 	%rd1404, %rd4390, %rd41;
	st.local.u64 	[%rd1+16], %rd1404;
	add.s64 	%rd1405, %rd4391, %rd38;
	st.local.u64 	[%rd1+24], %rd1405;
	add.s64 	%rd1406, %rd4392, %rd34;
	st.local.u64 	[%rd1+32], %rd1406;
	add.s64 	%rd1407, %rd4393, %rd36;
	st.local.u64 	[%rd1+40], %rd1407;
	add.s64 	%rd1408, %rd4394, %rd35;
	st.local.u64 	[%rd1+48], %rd1408;
	add.s64 	%rd1409, %rd4395, %rd37;
	st.local.u64 	[%rd1+56], %rd1409;
	st.local.u32 	[%rd1+64], %r19331;
	st.local.u32 	[%rd1+68], %r19330;
	st.local.u32 	[%rd1+72], %r19329;
	st.local.u32 	[%rd1+76], %r19328;
	st.local.u32 	[%rd1+80], %r19335;
	st.local.u32 	[%rd1+84], %r19334;
	st.local.u32 	[%rd1+88], %r19333;
	st.local.u32 	[%rd1+92], %r19332;
	st.local.u32 	[%rd1+96], %r19339;
	st.local.u32 	[%rd1+100], %r19338;
	st.local.u32 	[%rd1+104], %r19337;
	st.local.u32 	[%rd1+108], %r19336;
	st.local.u32 	[%rd1+112], %r19343;
	st.local.u32 	[%rd1+116], %r19342;
	st.local.u32 	[%rd1+120], %r19341;
	st.local.u32 	[%rd1+124], %r19340;
	st.local.u32 	[%rd1+128], %r19347;
	st.local.u32 	[%rd1+132], %r19346;
	st.local.u32 	[%rd1+136], %r19345;
	st.local.u32 	[%rd1+140], %r19344;
	st.local.u32 	[%rd1+144], %r19351;
	st.local.u32 	[%rd1+148], %r19350;
	st.local.u32 	[%rd1+152], %r19349;
	st.local.u32 	[%rd1+156], %r19348;
	st.local.u32 	[%rd1+160], %r19355;
	st.local.u32 	[%rd1+164], %r19354;
	st.local.u32 	[%rd1+168], %r19353;
	st.local.u32 	[%rd1+172], %r19352;
	st.local.u32 	[%rd1+176], %r19359;
	st.local.u32 	[%rd1+180], %r19358;
	st.local.u32 	[%rd1+184], %r19357;
	st.local.u32 	[%rd1+188], %r19356;
	bra.uni 	BB2_214;

BB2_100:
	mov.u32 	%r19392, %r2984;
	bra.uni 	BB2_209;

BB2_131:
	mov.u32 	%r19392, %r2984;
	bra.uni 	BB2_209;

BB2_115:
	mov.u32 	%r19392, %r2984;
	bra.uni 	BB2_209;

BB2_146:
	mov.u32 	%r19392, %r2984;
	bra.uni 	BB2_209;

BB2_107:
	mov.u32 	%r19392, %r2984;
	bra.uni 	BB2_209;

BB2_138:
	mov.u32 	%r19392, %r2984;
	bra.uni 	BB2_209;

BB2_122:
	mov.u32 	%r19392, %r2984;
	bra.uni 	BB2_209;

BB2_153:
	mov.u32 	%r19392, %r2984;
	bra.uni 	BB2_209;

BB2_103:
	mov.u32 	%r19392, %r2984;
	bra.uni 	BB2_209;

BB2_134:
	mov.u32 	%r19392, %r2984;
	bra.uni 	BB2_209;

BB2_118:
	mov.u32 	%r19392, %r2984;
	bra.uni 	BB2_209;

BB2_149:
	mov.u32 	%r19392, %r2984;
	bra.uni 	BB2_209;

BB2_110:
	mov.u32 	%r19392, %r2984;
	bra.uni 	BB2_209;

BB2_141:
	mov.u32 	%r19392, %r2984;
	bra.uni 	BB2_209;

BB2_125:
	mov.u32 	%r19392, %r2984;
	bra.uni 	BB2_209;

BB2_156:
	mov.u32 	%r19392, %r2984;

BB2_209:
	ld.local.u32 	%r11688, [%rd1+64];
	or.b32  	%r11689, %r11688, %r19392;
	st.local.u32 	[%rd1+64], %r11689;
	ld.local.u32 	%r11690, [%rd1+68];
	or.b32  	%r11691, %r11690, %r2986;
	st.local.u32 	[%rd1+68], %r11691;
	ld.local.u32 	%r11692, [%rd1+72];
	or.b32  	%r11693, %r11692, %r2988;
	st.local.u32 	[%rd1+72], %r11693;
	ld.local.u32 	%r11694, [%rd1+76];
	or.b32  	%r11695, %r11694, %r2990;
	st.local.u32 	[%rd1+76], %r11695;
	ld.local.u32 	%r11696, [%rd1+80];
	or.b32  	%r11697, %r11696, %r2992;
	st.local.u32 	[%rd1+80], %r11697;
	ld.local.u32 	%r11698, [%rd1+84];
	or.b32  	%r11699, %r11698, %r2994;
	st.local.u32 	[%rd1+84], %r11699;
	ld.local.u32 	%r11700, [%rd1+88];
	or.b32  	%r11701, %r11700, %r2996;
	st.local.u32 	[%rd1+88], %r11701;
	ld.local.u32 	%r11702, [%rd1+92];
	or.b32  	%r11703, %r11702, %r2998;
	st.local.u32 	[%rd1+92], %r11703;
	ld.local.u32 	%r11704, [%rd1+96];
	or.b32  	%r11705, %r11704, %r3000;
	st.local.u32 	[%rd1+96], %r11705;
	ld.local.u32 	%r11706, [%rd1+100];
	or.b32  	%r11707, %r11706, %r3002;
	st.local.u32 	[%rd1+100], %r11707;
	ld.local.u32 	%r11708, [%rd1+104];
	or.b32  	%r11709, %r11708, %r3004;
	st.local.u32 	[%rd1+104], %r11709;
	ld.local.u32 	%r11710, [%rd1+108];
	or.b32  	%r11711, %r11710, %r3006;
	st.local.u32 	[%rd1+108], %r11711;
	ld.local.u32 	%r11712, [%rd1+112];
	or.b32  	%r11713, %r11712, %r3008;
	st.local.u32 	[%rd1+112], %r11713;
	ld.local.u32 	%r11714, [%rd1+116];
	or.b32  	%r11715, %r11714, %r3010;
	st.local.u32 	[%rd1+116], %r11715;
	ld.local.u32 	%r11716, [%rd1+120];
	or.b32  	%r11717, %r11716, %r3012;
	st.local.u32 	[%rd1+120], %r11717;
	ld.local.u32 	%r11718, [%rd1+124];
	or.b32  	%r11719, %r11718, %r3014;
	st.local.u32 	[%rd1+124], %r11719;
	ld.local.u32 	%r11720, [%rd1+128];
	or.b32  	%r11721, %r11720, %r3016;
	st.local.u32 	[%rd1+128], %r11721;
	ld.local.u32 	%r11722, [%rd1+132];
	or.b32  	%r11723, %r11722, %r3018;
	st.local.u32 	[%rd1+132], %r11723;
	ld.local.u32 	%r11724, [%rd1+136];
	or.b32  	%r11725, %r11724, %r3020;
	st.local.u32 	[%rd1+136], %r11725;
	ld.local.u32 	%r11726, [%rd1+140];
	or.b32  	%r11727, %r11726, %r3022;
	st.local.u32 	[%rd1+140], %r11727;
	ld.local.u32 	%r11728, [%rd1+144];
	or.b32  	%r11729, %r11728, %r3024;
	st.local.u32 	[%rd1+144], %r11729;
	ld.local.u32 	%r11730, [%rd1+148];
	or.b32  	%r11731, %r11730, %r3026;
	st.local.u32 	[%rd1+148], %r11731;
	ld.local.u32 	%r11732, [%rd1+152];
	or.b32  	%r11733, %r11732, %r3028;
	st.local.u32 	[%rd1+152], %r11733;
	ld.local.u32 	%r11734, [%rd1+156];
	or.b32  	%r11735, %r11734, %r3030;
	st.local.u32 	[%rd1+156], %r11735;
	ld.local.u32 	%r11736, [%rd1+160];
	or.b32  	%r11737, %r11736, %r3032;
	st.local.u32 	[%rd1+160], %r11737;
	ld.local.u32 	%r11738, [%rd1+164];
	or.b32  	%r11739, %r11738, %r3034;
	st.local.u32 	[%rd1+164], %r11739;
	ld.local.u32 	%r11740, [%rd1+168];
	or.b32  	%r11741, %r11740, %r3036;
	st.local.u32 	[%rd1+168], %r11741;
	ld.local.u32 	%r11742, [%rd1+172];
	or.b32  	%r11743, %r11742, %r3038;
	st.local.u32 	[%rd1+172], %r11743;
	ld.local.u32 	%r11744, [%rd1+176];
	or.b32  	%r11745, %r11744, %r3040;
	st.local.u32 	[%rd1+176], %r11745;
	ld.local.u32 	%r11746, [%rd1+180];
	or.b32  	%r11747, %r11746, %r3042;
	st.local.u32 	[%rd1+180], %r11747;
	ld.local.u32 	%r11748, [%rd1+184];
	or.b32  	%r11749, %r11748, %r3044;
	st.local.u32 	[%rd1+184], %r11749;
	ld.local.u32 	%r11750, [%rd1+188];
	or.b32  	%r11751, %r11750, %r3046;
	st.local.u32 	[%rd1+188], %r11751;

BB2_214:
	ret;
}

	// .globl	m07100_init
.entry m07100_init(
	.param .u64 .ptr .global .align 4 m07100_init_param_0,
	.param .u64 .ptr .global .align 4 m07100_init_param_1,
	.param .u64 .ptr .global .align 4 m07100_init_param_2,
	.param .u64 .ptr .const .align 4 m07100_init_param_3,
	.param .u64 .ptr .global .align 8 m07100_init_param_4,
	.param .u64 .ptr .global .align 1 m07100_init_param_5,
	.param .u64 .ptr .global .align 4 m07100_init_param_6,
	.param .u64 .ptr .global .align 4 m07100_init_param_7,
	.param .u64 .ptr .global .align 4 m07100_init_param_8,
	.param .u64 .ptr .global .align 4 m07100_init_param_9,
	.param .u64 .ptr .global .align 4 m07100_init_param_10,
	.param .u64 .ptr .global .align 4 m07100_init_param_11,
	.param .u64 .ptr .global .align 4 m07100_init_param_12,
	.param .u64 .ptr .global .align 4 m07100_init_param_13,
	.param .u64 .ptr .global .align 8 m07100_init_param_14,
	.param .u64 .ptr .global .align 4 m07100_init_param_15,
	.param .u64 .ptr .global .align 4 m07100_init_param_16,
	.param .u64 .ptr .global .align 4 m07100_init_param_17,
	.param .u64 .ptr .global .align 4 m07100_init_param_18,
	.param .u64 .ptr .global .align 4 m07100_init_param_19,
	.param .u64 .ptr .global .align 1 m07100_init_param_20,
	.param .u64 .ptr .global .align 1 m07100_init_param_21,
	.param .u64 .ptr .global .align 1 m07100_init_param_22,
	.param .u64 .ptr .global .align 1 m07100_init_param_23,
	.param .u32 m07100_init_param_24,
	.param .u32 m07100_init_param_25,
	.param .u32 m07100_init_param_26,
	.param .u32 m07100_init_param_27,
	.param .u32 m07100_init_param_28,
	.param .u32 m07100_init_param_29,
	.param .u32 m07100_init_param_30,
	.param .u32 m07100_init_param_31,
	.param .u32 m07100_init_param_32,
	.param .u32 m07100_init_param_33,
	.param .u64 m07100_init_param_34
)
{
	.local .align 16 .b8 	__local_depot3[1056];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<66>;
	.reg .b32 	%r<7712>;
	.reg .b64 	%rd<10308>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd885, [m07100_init_param_0];
	ld.param.u64 	%rd889, [m07100_init_param_34];
	mov.u32 	%r426, %ctaid.x;
	mov.u32 	%r427, %ntid.x;
	mov.b32	%r428, %envreg3;
	mad.lo.s32 	%r429, %r426, %r427, %r428;
	mov.u32 	%r430, %tid.x;
	add.s32 	%r1, %r429, %r430;
	cvt.s64.s32	%rd891, %r1;
	setp.ge.u64	%p1, %rd891, %rd889;
	@%p1 bra 	BB3_33;

	mul.wide.s32 	%rd892, %r1, 260;
	add.s64 	%rd893, %rd885, %rd892;
	ld.global.u32 	%r2, [%rd893+256];
	setp.gt.s32	%p2, %r2, 128;
	@%p2 bra 	BB3_3;
	bra.uni 	BB3_2;

BB3_3:
	ld.const.u64 	%rd10144, [k_sha512];
	ld.const.u64 	%rd10143, [k_sha512+8];
	ld.const.u64 	%rd10142, [k_sha512+16];
	ld.const.u64 	%rd10141, [k_sha512+24];
	ld.const.u64 	%rd10140, [k_sha512+32];
	ld.const.u64 	%rd10139, [k_sha512+40];
	ld.const.u64 	%rd10138, [k_sha512+48];
	ld.const.u64 	%rd25, [k_sha512+56];
	ld.const.u64 	%rd26, [k_sha512+64];
	ld.const.u64 	%rd27, [k_sha512+72];
	ld.const.u64 	%rd28, [k_sha512+80];
	ld.const.u64 	%rd29, [k_sha512+88];
	ld.const.u64 	%rd30, [k_sha512+96];
	ld.const.u64 	%rd10131, [k_sha512+104];
	ld.const.u64 	%rd10130, [k_sha512+112];
	mov.u32 	%r7545, 0;
	mov.u64 	%rd41, 7640891576956012808;
	mov.u64 	%rd40, -4942790177534073029;
	mov.u64 	%rd39, 4354685564936845355;
	mov.u64 	%rd38, -6534734903238641935;
	mov.u64 	%rd37, 5840696475078001361;
	mov.u64 	%rd36, -7276294671716946913;
	mov.u64 	%rd35, 2270897969802886507;
	mov.u64 	%rd34, 6620516959819538809;
	ld.const.u64 	%rd10129, [k_sha512+120];
	mov.u32 	%r7546, %r7545;
	mov.u32 	%r7547, %r7545;
	bra.uni 	BB3_4;

BB3_36:
	add.s32 	%r7545, %r7545, 128;
	add.s64 	%rd34, %rd10299, %rd34;
	add.s64 	%rd41, %rd10292, %rd41;
	add.s64 	%rd40, %rd10293, %rd40;
	add.s64 	%rd39, %rd10294, %rd39;
	add.s64 	%rd38, %rd10295, %rd38;
	add.s64 	%rd37, %rd10296, %rd37;
	add.s64 	%rd36, %rd10297, %rd36;
	add.s64 	%rd35, %rd10298, %rd35;
	add.s32 	%r7546, %r7546, 128;
	add.s32 	%r7547, %r7547, 32;

BB3_4:
	add.s32 	%r498, %r2, -128;
	setp.lt.s32	%p3, %r7546, %r498;
	mul.wide.s32 	%rd906, %r7547, 4;
	add.s64 	%rd907, %rd893, %rd906;
	ld.global.u32 	%r38, [%rd907];
	add.s32 	%r499, %r7547, 1;
	mul.wide.s32 	%rd908, %r499, 4;
	add.s64 	%rd909, %rd893, %rd908;
	ld.global.u32 	%r39, [%rd909];
	add.s32 	%r500, %r7547, 2;
	mul.wide.s32 	%rd910, %r500, 4;
	add.s64 	%rd911, %rd893, %rd910;
	ld.global.u32 	%r40, [%rd911];
	add.s32 	%r501, %r7547, 3;
	mul.wide.s32 	%rd912, %r501, 4;
	add.s64 	%rd913, %rd893, %rd912;
	ld.global.u32 	%r41, [%rd913];
	add.s32 	%r502, %r7547, 4;
	mul.wide.s32 	%rd914, %r502, 4;
	add.s64 	%rd915, %rd893, %rd914;
	ld.global.u32 	%r42, [%rd915];
	add.s32 	%r503, %r7547, 5;
	mul.wide.s32 	%rd916, %r503, 4;
	add.s64 	%rd917, %rd893, %rd916;
	ld.global.u32 	%r43, [%rd917];
	add.s32 	%r504, %r7547, 6;
	mul.wide.s32 	%rd918, %r504, 4;
	add.s64 	%rd919, %rd893, %rd918;
	ld.global.u32 	%r44, [%rd919];
	add.s32 	%r505, %r7547, 7;
	mul.wide.s32 	%rd920, %r505, 4;
	add.s64 	%rd921, %rd893, %rd920;
	ld.global.u32 	%r45, [%rd921];
	add.s32 	%r506, %r7547, 8;
	mul.wide.s32 	%rd922, %r506, 4;
	add.s64 	%rd923, %rd893, %rd922;
	ld.global.u32 	%r46, [%rd923];
	add.s32 	%r507, %r7547, 9;
	mul.wide.s32 	%rd924, %r507, 4;
	add.s64 	%rd925, %rd893, %rd924;
	ld.global.u32 	%r47, [%rd925];
	add.s32 	%r508, %r7547, 10;
	mul.wide.s32 	%rd926, %r508, 4;
	add.s64 	%rd927, %rd893, %rd926;
	ld.global.u32 	%r48, [%rd927];
	add.s32 	%r509, %r7547, 11;
	mul.wide.s32 	%rd928, %r509, 4;
	add.s64 	%rd929, %rd893, %rd928;
	ld.global.u32 	%r49, [%rd929];
	add.s32 	%r510, %r7547, 12;
	mul.wide.s32 	%rd930, %r510, 4;
	add.s64 	%rd931, %rd893, %rd930;
	ld.global.u32 	%r50, [%rd931];
	add.s32 	%r511, %r7547, 13;
	mul.wide.s32 	%rd932, %r511, 4;
	add.s64 	%rd933, %rd893, %rd932;
	ld.global.u32 	%r51, [%rd933];
	add.s32 	%r512, %r7547, 14;
	mul.wide.s32 	%rd934, %r512, 4;
	add.s64 	%rd935, %rd893, %rd934;
	ld.global.u32 	%r52, [%rd935];
	add.s32 	%r513, %r7547, 15;
	mul.wide.s32 	%rd936, %r513, 4;
	add.s64 	%rd937, %rd893, %rd936;
	ld.global.u32 	%r53, [%rd937];
	add.s32 	%r514, %r7547, 16;
	mul.wide.s32 	%rd938, %r514, 4;
	add.s64 	%rd939, %rd893, %rd938;
	ld.global.u32 	%r54, [%rd939];
	add.s32 	%r515, %r7547, 17;
	mul.wide.s32 	%rd940, %r515, 4;
	add.s64 	%rd941, %rd893, %rd940;
	ld.global.u32 	%r55, [%rd941];
	add.s32 	%r516, %r7547, 18;
	mul.wide.s32 	%rd942, %r516, 4;
	add.s64 	%rd943, %rd893, %rd942;
	ld.global.u32 	%r56, [%rd943];
	add.s32 	%r517, %r7547, 19;
	mul.wide.s32 	%rd944, %r517, 4;
	add.s64 	%rd945, %rd893, %rd944;
	ld.global.u32 	%r57, [%rd945];
	add.s32 	%r518, %r7547, 20;
	mul.wide.s32 	%rd946, %r518, 4;
	add.s64 	%rd947, %rd893, %rd946;
	ld.global.u32 	%r58, [%rd947];
	add.s32 	%r519, %r7547, 21;
	mul.wide.s32 	%rd948, %r519, 4;
	add.s64 	%rd949, %rd893, %rd948;
	ld.global.u32 	%r59, [%rd949];
	add.s32 	%r520, %r7547, 22;
	mul.wide.s32 	%rd950, %r520, 4;
	add.s64 	%rd951, %rd893, %rd950;
	ld.global.u32 	%r60, [%rd951];
	add.s32 	%r521, %r7547, 23;
	mul.wide.s32 	%rd952, %r521, 4;
	add.s64 	%rd953, %rd893, %rd952;
	ld.global.u32 	%r61, [%rd953];
	add.s32 	%r522, %r7547, 24;
	mul.wide.s32 	%rd954, %r522, 4;
	add.s64 	%rd955, %rd893, %rd954;
	ld.global.u32 	%r62, [%rd955];
	add.s32 	%r523, %r7547, 25;
	mul.wide.s32 	%rd956, %r523, 4;
	add.s64 	%rd957, %rd893, %rd956;
	ld.global.u32 	%r63, [%rd957];
	add.s32 	%r524, %r7547, 26;
	mul.wide.s32 	%rd958, %r524, 4;
	add.s64 	%rd959, %rd893, %rd958;
	ld.global.u32 	%r64, [%rd959];
	add.s32 	%r525, %r7547, 27;
	mul.wide.s32 	%rd960, %r525, 4;
	add.s64 	%rd961, %rd893, %rd960;
	ld.global.u32 	%r65, [%rd961];
	add.s32 	%r526, %r7547, 28;
	mul.wide.s32 	%rd962, %r526, 4;
	add.s64 	%rd963, %rd893, %rd962;
	ld.global.u32 	%r66, [%rd963];
	add.s32 	%r527, %r7547, 29;
	mul.wide.s32 	%rd964, %r527, 4;
	add.s64 	%rd965, %rd893, %rd964;
	ld.global.u32 	%r67, [%rd965];
	add.s32 	%r528, %r7547, 30;
	mul.wide.s32 	%rd966, %r528, 4;
	add.s64 	%rd967, %rd893, %rd966;
	ld.global.u32 	%r68, [%rd967];
	add.s32 	%r529, %r7547, 31;
	mul.wide.s32 	%rd968, %r529, 4;
	add.s64 	%rd969, %rd893, %rd968;
	ld.global.u32 	%r69, [%rd969];
	@%p3 bra 	BB3_34;
	bra.uni 	BB3_5;

BB3_34:
	// inline asm
	prmt.b32 %r6754, %r38, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6756, %r39, 0, 0x0123;
	// inline asm
	mov.b64	%rd10300, {%r6756, %r6754};
	// inline asm
	prmt.b32 %r6758, %r40, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6760, %r41, 0, 0x0123;
	// inline asm
	mov.b64	%rd10301, {%r6760, %r6758};
	// inline asm
	prmt.b32 %r6762, %r42, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6764, %r43, 0, 0x0123;
	// inline asm
	mov.b64	%rd10302, {%r6764, %r6762};
	// inline asm
	prmt.b32 %r6766, %r44, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6768, %r45, 0, 0x0123;
	// inline asm
	mov.b64	%rd10303, {%r6768, %r6766};
	// inline asm
	prmt.b32 %r6770, %r46, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6772, %r47, 0, 0x0123;
	// inline asm
	mov.b64	%rd10304, {%r6772, %r6770};
	// inline asm
	prmt.b32 %r6774, %r48, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6776, %r49, 0, 0x0123;
	// inline asm
	mov.b64	%rd10305, {%r6776, %r6774};
	// inline asm
	prmt.b32 %r6778, %r50, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6780, %r51, 0, 0x0123;
	// inline asm
	mov.b64	%rd10306, {%r6780, %r6778};
	// inline asm
	prmt.b32 %r6782, %r52, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6784, %r53, 0, 0x0123;
	// inline asm
	mov.b64	%rd10307, {%r6784, %r6782};
	// inline asm
	prmt.b32 %r6786, %r54, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6788, %r55, 0, 0x0123;
	// inline asm
	mov.b64	%rd10291, {%r6788, %r6786};
	// inline asm
	prmt.b32 %r6790, %r56, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6792, %r57, 0, 0x0123;
	// inline asm
	mov.b64	%rd10290, {%r6792, %r6790};
	// inline asm
	prmt.b32 %r6794, %r58, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6796, %r59, 0, 0x0123;
	// inline asm
	mov.b64	%rd10289, {%r6796, %r6794};
	// inline asm
	prmt.b32 %r6798, %r60, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6800, %r61, 0, 0x0123;
	// inline asm
	mov.b64	%rd10288, {%r6800, %r6798};
	// inline asm
	prmt.b32 %r6802, %r62, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6804, %r63, 0, 0x0123;
	// inline asm
	mov.b64	%rd10287, {%r6804, %r6802};
	// inline asm
	prmt.b32 %r6806, %r64, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6808, %r65, 0, 0x0123;
	// inline asm
	mov.b64	%rd10286, {%r6808, %r6806};
	// inline asm
	prmt.b32 %r6810, %r66, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6812, %r67, 0, 0x0123;
	// inline asm
	mov.b64	%rd10285, {%r6812, %r6810};
	// inline asm
	prmt.b32 %r6814, %r68, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6816, %r69, 0, 0x0123;
	// inline asm
	mov.b64	%rd10284, {%r6816, %r6814};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6819,%dummy}, %rd37;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6820}, %rd37;
	}
	shf.r.wrap.b32 	%r6821, %r6820, %r6819, 18;
	shf.r.wrap.b32 	%r6822, %r6819, %r6820, 18;
	mov.b64 	%rd8901, {%r6822, %r6821};
	shf.r.wrap.b32 	%r6823, %r6820, %r6819, 14;
	shf.r.wrap.b32 	%r6824, %r6819, %r6820, 14;
	mov.b64 	%rd8902, {%r6824, %r6823};
	xor.b64  	%rd8903, %rd8901, %rd8902;
	shf.l.wrap.b32 	%r6825, %r6819, %r6820, 23;
	shf.l.wrap.b32 	%r6826, %r6820, %r6819, 23;
	mov.b64 	%rd8904, {%r6826, %r6825};
	xor.b64  	%rd8905, %rd8903, %rd8904;
	xor.b64  	%rd8906, %rd36, %rd35;
	and.b64  	%rd8907, %rd8906, %rd37;
	xor.b64  	%rd8908, %rd8907, %rd35;
	add.s64 	%rd8909, %rd34, %rd10144;
	add.s64 	%rd8910, %rd8909, %rd8908;
	add.s64 	%rd8911, %rd8910, %rd10300;
	add.s64 	%rd8912, %rd8911, %rd8905;
	add.s64 	%rd8913, %rd8912, %rd38;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6827}, %rd41;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6828,%dummy}, %rd41;
	}
	shf.l.wrap.b32 	%r6829, %r6828, %r6827, 30;
	shf.l.wrap.b32 	%r6830, %r6827, %r6828, 30;
	mov.b64 	%rd8914, {%r6830, %r6829};
	shf.r.wrap.b32 	%r6831, %r6827, %r6828, 28;
	shf.r.wrap.b32 	%r6832, %r6828, %r6827, 28;
	mov.b64 	%rd8915, {%r6832, %r6831};
	xor.b64  	%rd8916, %rd8914, %rd8915;
	shf.l.wrap.b32 	%r6833, %r6828, %r6827, 25;
	shf.l.wrap.b32 	%r6834, %r6827, %r6828, 25;
	mov.b64 	%rd8917, {%r6834, %r6833};
	xor.b64  	%rd8918, %rd8916, %rd8917;
	xor.b64  	%rd8919, %rd41, %rd40;
	and.b64  	%rd8920, %rd8919, %rd39;
	and.b64  	%rd8921, %rd41, %rd40;
	or.b64  	%rd8922, %rd8920, %rd8921;
	add.s64 	%rd8923, %rd8912, %rd8922;
	add.s64 	%rd8924, %rd8923, %rd8918;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6835,%dummy}, %rd8913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6836}, %rd8913;
	}
	shf.r.wrap.b32 	%r6837, %r6836, %r6835, 14;
	shf.r.wrap.b32 	%r6838, %r6835, %r6836, 14;
	mov.b64 	%rd8925, {%r6838, %r6837};
	shf.r.wrap.b32 	%r6839, %r6836, %r6835, 18;
	shf.r.wrap.b32 	%r6840, %r6835, %r6836, 18;
	mov.b64 	%rd8926, {%r6840, %r6839};
	xor.b64  	%rd8927, %rd8926, %rd8925;
	shf.l.wrap.b32 	%r6841, %r6835, %r6836, 23;
	shf.l.wrap.b32 	%r6842, %r6836, %r6835, 23;
	mov.b64 	%rd8928, {%r6842, %r6841};
	xor.b64  	%rd8929, %rd8927, %rd8928;
	xor.b64  	%rd8930, %rd37, %rd36;
	and.b64  	%rd8931, %rd8913, %rd8930;
	xor.b64  	%rd8932, %rd8931, %rd36;
	add.s64 	%rd8933, %rd35, %rd10143;
	add.s64 	%rd8934, %rd8933, %rd10301;
	add.s64 	%rd8935, %rd8934, %rd8932;
	add.s64 	%rd8936, %rd8935, %rd8929;
	add.s64 	%rd8937, %rd8936, %rd39;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6843,%dummy}, %rd8924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6844}, %rd8924;
	}
	shf.r.wrap.b32 	%r6845, %r6844, %r6843, 28;
	shf.r.wrap.b32 	%r6846, %r6843, %r6844, 28;
	mov.b64 	%rd8938, {%r6846, %r6845};
	shf.l.wrap.b32 	%r6847, %r6843, %r6844, 30;
	shf.l.wrap.b32 	%r6848, %r6844, %r6843, 30;
	mov.b64 	%rd8939, {%r6848, %r6847};
	xor.b64  	%rd8940, %rd8939, %rd8938;
	shf.l.wrap.b32 	%r6849, %r6843, %r6844, 25;
	shf.l.wrap.b32 	%r6850, %r6844, %r6843, 25;
	mov.b64 	%rd8941, {%r6850, %r6849};
	xor.b64  	%rd8942, %rd8940, %rd8941;
	and.b64  	%rd8943, %rd8924, %rd41;
	xor.b64  	%rd8944, %rd8924, %rd41;
	and.b64  	%rd8945, %rd8944, %rd40;
	or.b64  	%rd8946, %rd8945, %rd8943;
	add.s64 	%rd8947, %rd8936, %rd8946;
	add.s64 	%rd8948, %rd8947, %rd8942;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6851,%dummy}, %rd8937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6852}, %rd8937;
	}
	shf.r.wrap.b32 	%r6853, %r6852, %r6851, 14;
	shf.r.wrap.b32 	%r6854, %r6851, %r6852, 14;
	mov.b64 	%rd8949, {%r6854, %r6853};
	shf.r.wrap.b32 	%r6855, %r6852, %r6851, 18;
	shf.r.wrap.b32 	%r6856, %r6851, %r6852, 18;
	mov.b64 	%rd8950, {%r6856, %r6855};
	xor.b64  	%rd8951, %rd8950, %rd8949;
	shf.l.wrap.b32 	%r6857, %r6851, %r6852, 23;
	shf.l.wrap.b32 	%r6858, %r6852, %r6851, 23;
	mov.b64 	%rd8952, {%r6858, %r6857};
	xor.b64  	%rd8953, %rd8951, %rd8952;
	xor.b64  	%rd8954, %rd8913, %rd37;
	and.b64  	%rd8955, %rd8937, %rd8954;
	xor.b64  	%rd8956, %rd8955, %rd37;
	add.s64 	%rd8957, %rd36, %rd10142;
	add.s64 	%rd8958, %rd8957, %rd10302;
	add.s64 	%rd8959, %rd8958, %rd8956;
	add.s64 	%rd8960, %rd8959, %rd8953;
	add.s64 	%rd8961, %rd8960, %rd40;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6859,%dummy}, %rd8948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6860}, %rd8948;
	}
	shf.r.wrap.b32 	%r6861, %r6860, %r6859, 28;
	shf.r.wrap.b32 	%r6862, %r6859, %r6860, 28;
	mov.b64 	%rd8962, {%r6862, %r6861};
	shf.l.wrap.b32 	%r6863, %r6859, %r6860, 30;
	shf.l.wrap.b32 	%r6864, %r6860, %r6859, 30;
	mov.b64 	%rd8963, {%r6864, %r6863};
	xor.b64  	%rd8964, %rd8963, %rd8962;
	shf.l.wrap.b32 	%r6865, %r6859, %r6860, 25;
	shf.l.wrap.b32 	%r6866, %r6860, %r6859, 25;
	mov.b64 	%rd8965, {%r6866, %r6865};
	xor.b64  	%rd8966, %rd8964, %rd8965;
	and.b64  	%rd8967, %rd8948, %rd8924;
	xor.b64  	%rd8968, %rd8948, %rd8924;
	and.b64  	%rd8969, %rd8968, %rd41;
	or.b64  	%rd8970, %rd8969, %rd8967;
	add.s64 	%rd8971, %rd8960, %rd8970;
	add.s64 	%rd8972, %rd8971, %rd8966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6867,%dummy}, %rd8961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6868}, %rd8961;
	}
	shf.r.wrap.b32 	%r6869, %r6868, %r6867, 14;
	shf.r.wrap.b32 	%r6870, %r6867, %r6868, 14;
	mov.b64 	%rd8973, {%r6870, %r6869};
	shf.r.wrap.b32 	%r6871, %r6868, %r6867, 18;
	shf.r.wrap.b32 	%r6872, %r6867, %r6868, 18;
	mov.b64 	%rd8974, {%r6872, %r6871};
	xor.b64  	%rd8975, %rd8974, %rd8973;
	shf.l.wrap.b32 	%r6873, %r6867, %r6868, 23;
	shf.l.wrap.b32 	%r6874, %r6868, %r6867, 23;
	mov.b64 	%rd8976, {%r6874, %r6873};
	xor.b64  	%rd8977, %rd8975, %rd8976;
	xor.b64  	%rd8978, %rd8937, %rd8913;
	and.b64  	%rd8979, %rd8961, %rd8978;
	xor.b64  	%rd8980, %rd8979, %rd8913;
	add.s64 	%rd8981, %rd37, %rd10141;
	add.s64 	%rd8982, %rd8981, %rd10303;
	add.s64 	%rd8983, %rd8982, %rd8980;
	add.s64 	%rd8984, %rd8983, %rd8977;
	add.s64 	%rd8985, %rd8984, %rd41;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6875,%dummy}, %rd8972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6876}, %rd8972;
	}
	shf.r.wrap.b32 	%r6877, %r6876, %r6875, 28;
	shf.r.wrap.b32 	%r6878, %r6875, %r6876, 28;
	mov.b64 	%rd8986, {%r6878, %r6877};
	shf.l.wrap.b32 	%r6879, %r6875, %r6876, 30;
	shf.l.wrap.b32 	%r6880, %r6876, %r6875, 30;
	mov.b64 	%rd8987, {%r6880, %r6879};
	xor.b64  	%rd8988, %rd8987, %rd8986;
	shf.l.wrap.b32 	%r6881, %r6875, %r6876, 25;
	shf.l.wrap.b32 	%r6882, %r6876, %r6875, 25;
	mov.b64 	%rd8989, {%r6882, %r6881};
	xor.b64  	%rd8990, %rd8988, %rd8989;
	and.b64  	%rd8991, %rd8972, %rd8948;
	xor.b64  	%rd8992, %rd8972, %rd8948;
	and.b64  	%rd8993, %rd8992, %rd8924;
	or.b64  	%rd8994, %rd8993, %rd8991;
	add.s64 	%rd8995, %rd8984, %rd8994;
	add.s64 	%rd8996, %rd8995, %rd8990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6883,%dummy}, %rd8985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6884}, %rd8985;
	}
	shf.r.wrap.b32 	%r6885, %r6884, %r6883, 14;
	shf.r.wrap.b32 	%r6886, %r6883, %r6884, 14;
	mov.b64 	%rd8997, {%r6886, %r6885};
	shf.r.wrap.b32 	%r6887, %r6884, %r6883, 18;
	shf.r.wrap.b32 	%r6888, %r6883, %r6884, 18;
	mov.b64 	%rd8998, {%r6888, %r6887};
	xor.b64  	%rd8999, %rd8998, %rd8997;
	shf.l.wrap.b32 	%r6889, %r6883, %r6884, 23;
	shf.l.wrap.b32 	%r6890, %r6884, %r6883, 23;
	mov.b64 	%rd9000, {%r6890, %r6889};
	xor.b64  	%rd9001, %rd8999, %rd9000;
	xor.b64  	%rd9002, %rd8961, %rd8937;
	and.b64  	%rd9003, %rd8985, %rd9002;
	xor.b64  	%rd9004, %rd9003, %rd8937;
	add.s64 	%rd9005, %rd10304, %rd10140;
	add.s64 	%rd9006, %rd9005, %rd8913;
	add.s64 	%rd9007, %rd9006, %rd9004;
	add.s64 	%rd9008, %rd9007, %rd9001;
	add.s64 	%rd9009, %rd9008, %rd8924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6891,%dummy}, %rd8996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6892}, %rd8996;
	}
	shf.r.wrap.b32 	%r6893, %r6892, %r6891, 28;
	shf.r.wrap.b32 	%r6894, %r6891, %r6892, 28;
	mov.b64 	%rd9010, {%r6894, %r6893};
	shf.l.wrap.b32 	%r6895, %r6891, %r6892, 30;
	shf.l.wrap.b32 	%r6896, %r6892, %r6891, 30;
	mov.b64 	%rd9011, {%r6896, %r6895};
	xor.b64  	%rd9012, %rd9011, %rd9010;
	shf.l.wrap.b32 	%r6897, %r6891, %r6892, 25;
	shf.l.wrap.b32 	%r6898, %r6892, %r6891, 25;
	mov.b64 	%rd9013, {%r6898, %r6897};
	xor.b64  	%rd9014, %rd9012, %rd9013;
	and.b64  	%rd9015, %rd8996, %rd8972;
	xor.b64  	%rd9016, %rd8996, %rd8972;
	and.b64  	%rd9017, %rd9016, %rd8948;
	or.b64  	%rd9018, %rd9017, %rd9015;
	add.s64 	%rd9019, %rd9008, %rd9018;
	add.s64 	%rd9020, %rd9019, %rd9014;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6899,%dummy}, %rd9009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6900}, %rd9009;
	}
	shf.r.wrap.b32 	%r6901, %r6900, %r6899, 14;
	shf.r.wrap.b32 	%r6902, %r6899, %r6900, 14;
	mov.b64 	%rd9021, {%r6902, %r6901};
	shf.r.wrap.b32 	%r6903, %r6900, %r6899, 18;
	shf.r.wrap.b32 	%r6904, %r6899, %r6900, 18;
	mov.b64 	%rd9022, {%r6904, %r6903};
	xor.b64  	%rd9023, %rd9022, %rd9021;
	shf.l.wrap.b32 	%r6905, %r6899, %r6900, 23;
	shf.l.wrap.b32 	%r6906, %r6900, %r6899, 23;
	mov.b64 	%rd9024, {%r6906, %r6905};
	xor.b64  	%rd9025, %rd9023, %rd9024;
	xor.b64  	%rd9026, %rd8985, %rd8961;
	and.b64  	%rd9027, %rd9009, %rd9026;
	xor.b64  	%rd9028, %rd9027, %rd8961;
	add.s64 	%rd9029, %rd10305, %rd10139;
	add.s64 	%rd9030, %rd9029, %rd8937;
	add.s64 	%rd9031, %rd9030, %rd9028;
	add.s64 	%rd9032, %rd9031, %rd9025;
	add.s64 	%rd9033, %rd9032, %rd8948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6907,%dummy}, %rd9020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6908}, %rd9020;
	}
	shf.r.wrap.b32 	%r6909, %r6908, %r6907, 28;
	shf.r.wrap.b32 	%r6910, %r6907, %r6908, 28;
	mov.b64 	%rd9034, {%r6910, %r6909};
	shf.l.wrap.b32 	%r6911, %r6907, %r6908, 30;
	shf.l.wrap.b32 	%r6912, %r6908, %r6907, 30;
	mov.b64 	%rd9035, {%r6912, %r6911};
	xor.b64  	%rd9036, %rd9035, %rd9034;
	shf.l.wrap.b32 	%r6913, %r6907, %r6908, 25;
	shf.l.wrap.b32 	%r6914, %r6908, %r6907, 25;
	mov.b64 	%rd9037, {%r6914, %r6913};
	xor.b64  	%rd9038, %rd9036, %rd9037;
	and.b64  	%rd9039, %rd9020, %rd8996;
	xor.b64  	%rd9040, %rd9020, %rd8996;
	and.b64  	%rd9041, %rd9040, %rd8972;
	or.b64  	%rd9042, %rd9041, %rd9039;
	add.s64 	%rd9043, %rd9032, %rd9042;
	add.s64 	%rd9044, %rd9043, %rd9038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6915,%dummy}, %rd9033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6916}, %rd9033;
	}
	shf.r.wrap.b32 	%r6917, %r6916, %r6915, 14;
	shf.r.wrap.b32 	%r6918, %r6915, %r6916, 14;
	mov.b64 	%rd9045, {%r6918, %r6917};
	shf.r.wrap.b32 	%r6919, %r6916, %r6915, 18;
	shf.r.wrap.b32 	%r6920, %r6915, %r6916, 18;
	mov.b64 	%rd9046, {%r6920, %r6919};
	xor.b64  	%rd9047, %rd9046, %rd9045;
	shf.l.wrap.b32 	%r6921, %r6915, %r6916, 23;
	shf.l.wrap.b32 	%r6922, %r6916, %r6915, 23;
	mov.b64 	%rd9048, {%r6922, %r6921};
	xor.b64  	%rd9049, %rd9047, %rd9048;
	xor.b64  	%rd9050, %rd9009, %rd8985;
	and.b64  	%rd9051, %rd9033, %rd9050;
	xor.b64  	%rd9052, %rd9051, %rd8985;
	add.s64 	%rd9053, %rd10306, %rd10138;
	add.s64 	%rd9054, %rd9053, %rd8961;
	add.s64 	%rd9055, %rd9054, %rd9052;
	add.s64 	%rd9056, %rd9055, %rd9049;
	add.s64 	%rd9057, %rd9056, %rd8972;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6923,%dummy}, %rd9044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6924}, %rd9044;
	}
	shf.r.wrap.b32 	%r6925, %r6924, %r6923, 28;
	shf.r.wrap.b32 	%r6926, %r6923, %r6924, 28;
	mov.b64 	%rd9058, {%r6926, %r6925};
	shf.l.wrap.b32 	%r6927, %r6923, %r6924, 30;
	shf.l.wrap.b32 	%r6928, %r6924, %r6923, 30;
	mov.b64 	%rd9059, {%r6928, %r6927};
	xor.b64  	%rd9060, %rd9059, %rd9058;
	shf.l.wrap.b32 	%r6929, %r6923, %r6924, 25;
	shf.l.wrap.b32 	%r6930, %r6924, %r6923, 25;
	mov.b64 	%rd9061, {%r6930, %r6929};
	xor.b64  	%rd9062, %rd9060, %rd9061;
	and.b64  	%rd9063, %rd9044, %rd9020;
	xor.b64  	%rd9064, %rd9044, %rd9020;
	and.b64  	%rd9065, %rd9064, %rd8996;
	or.b64  	%rd9066, %rd9065, %rd9063;
	add.s64 	%rd9067, %rd9056, %rd9066;
	add.s64 	%rd9068, %rd9067, %rd9062;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6931,%dummy}, %rd9057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6932}, %rd9057;
	}
	shf.r.wrap.b32 	%r6933, %r6932, %r6931, 14;
	shf.r.wrap.b32 	%r6934, %r6931, %r6932, 14;
	mov.b64 	%rd9069, {%r6934, %r6933};
	shf.r.wrap.b32 	%r6935, %r6932, %r6931, 18;
	shf.r.wrap.b32 	%r6936, %r6931, %r6932, 18;
	mov.b64 	%rd9070, {%r6936, %r6935};
	xor.b64  	%rd9071, %rd9070, %rd9069;
	shf.l.wrap.b32 	%r6937, %r6931, %r6932, 23;
	shf.l.wrap.b32 	%r6938, %r6932, %r6931, 23;
	mov.b64 	%rd9072, {%r6938, %r6937};
	xor.b64  	%rd9073, %rd9071, %rd9072;
	xor.b64  	%rd9074, %rd9033, %rd9009;
	and.b64  	%rd9075, %rd9057, %rd9074;
	xor.b64  	%rd9076, %rd9075, %rd9009;
	add.s64 	%rd9077, %rd10307, %rd25;
	add.s64 	%rd9078, %rd9077, %rd8985;
	add.s64 	%rd9079, %rd9078, %rd9076;
	add.s64 	%rd9080, %rd9079, %rd9073;
	add.s64 	%rd9081, %rd9080, %rd8996;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6939,%dummy}, %rd9068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6940}, %rd9068;
	}
	shf.r.wrap.b32 	%r6941, %r6940, %r6939, 28;
	shf.r.wrap.b32 	%r6942, %r6939, %r6940, 28;
	mov.b64 	%rd9082, {%r6942, %r6941};
	shf.l.wrap.b32 	%r6943, %r6939, %r6940, 30;
	shf.l.wrap.b32 	%r6944, %r6940, %r6939, 30;
	mov.b64 	%rd9083, {%r6944, %r6943};
	xor.b64  	%rd9084, %rd9083, %rd9082;
	shf.l.wrap.b32 	%r6945, %r6939, %r6940, 25;
	shf.l.wrap.b32 	%r6946, %r6940, %r6939, 25;
	mov.b64 	%rd9085, {%r6946, %r6945};
	xor.b64  	%rd9086, %rd9084, %rd9085;
	and.b64  	%rd9087, %rd9068, %rd9044;
	xor.b64  	%rd9088, %rd9068, %rd9044;
	and.b64  	%rd9089, %rd9088, %rd9020;
	or.b64  	%rd9090, %rd9089, %rd9087;
	add.s64 	%rd9091, %rd9080, %rd9090;
	add.s64 	%rd9092, %rd9091, %rd9086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6947,%dummy}, %rd9081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6948}, %rd9081;
	}
	shf.r.wrap.b32 	%r6949, %r6948, %r6947, 14;
	shf.r.wrap.b32 	%r6950, %r6947, %r6948, 14;
	mov.b64 	%rd9093, {%r6950, %r6949};
	shf.r.wrap.b32 	%r6951, %r6948, %r6947, 18;
	shf.r.wrap.b32 	%r6952, %r6947, %r6948, 18;
	mov.b64 	%rd9094, {%r6952, %r6951};
	xor.b64  	%rd9095, %rd9094, %rd9093;
	shf.l.wrap.b32 	%r6953, %r6947, %r6948, 23;
	shf.l.wrap.b32 	%r6954, %r6948, %r6947, 23;
	mov.b64 	%rd9096, {%r6954, %r6953};
	xor.b64  	%rd9097, %rd9095, %rd9096;
	xor.b64  	%rd9098, %rd9057, %rd9033;
	and.b64  	%rd9099, %rd9081, %rd9098;
	xor.b64  	%rd9100, %rd9099, %rd9033;
	add.s64 	%rd9101, %rd10291, %rd26;
	add.s64 	%rd9102, %rd9101, %rd9009;
	add.s64 	%rd9103, %rd9102, %rd9100;
	add.s64 	%rd9104, %rd9103, %rd9097;
	add.s64 	%rd9105, %rd9104, %rd9020;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6955,%dummy}, %rd9092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6956}, %rd9092;
	}
	shf.r.wrap.b32 	%r6957, %r6956, %r6955, 28;
	shf.r.wrap.b32 	%r6958, %r6955, %r6956, 28;
	mov.b64 	%rd9106, {%r6958, %r6957};
	shf.l.wrap.b32 	%r6959, %r6955, %r6956, 30;
	shf.l.wrap.b32 	%r6960, %r6956, %r6955, 30;
	mov.b64 	%rd9107, {%r6960, %r6959};
	xor.b64  	%rd9108, %rd9107, %rd9106;
	shf.l.wrap.b32 	%r6961, %r6955, %r6956, 25;
	shf.l.wrap.b32 	%r6962, %r6956, %r6955, 25;
	mov.b64 	%rd9109, {%r6962, %r6961};
	xor.b64  	%rd9110, %rd9108, %rd9109;
	and.b64  	%rd9111, %rd9092, %rd9068;
	xor.b64  	%rd9112, %rd9092, %rd9068;
	and.b64  	%rd9113, %rd9112, %rd9044;
	or.b64  	%rd9114, %rd9113, %rd9111;
	add.s64 	%rd9115, %rd9104, %rd9114;
	add.s64 	%rd9116, %rd9115, %rd9110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6963,%dummy}, %rd9105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6964}, %rd9105;
	}
	shf.r.wrap.b32 	%r6965, %r6964, %r6963, 14;
	shf.r.wrap.b32 	%r6966, %r6963, %r6964, 14;
	mov.b64 	%rd9117, {%r6966, %r6965};
	shf.r.wrap.b32 	%r6967, %r6964, %r6963, 18;
	shf.r.wrap.b32 	%r6968, %r6963, %r6964, 18;
	mov.b64 	%rd9118, {%r6968, %r6967};
	xor.b64  	%rd9119, %rd9118, %rd9117;
	shf.l.wrap.b32 	%r6969, %r6963, %r6964, 23;
	shf.l.wrap.b32 	%r6970, %r6964, %r6963, 23;
	mov.b64 	%rd9120, {%r6970, %r6969};
	xor.b64  	%rd9121, %rd9119, %rd9120;
	xor.b64  	%rd9122, %rd9081, %rd9057;
	and.b64  	%rd9123, %rd9105, %rd9122;
	xor.b64  	%rd9124, %rd9123, %rd9057;
	add.s64 	%rd9125, %rd10290, %rd27;
	add.s64 	%rd9126, %rd9125, %rd9033;
	add.s64 	%rd9127, %rd9126, %rd9124;
	add.s64 	%rd9128, %rd9127, %rd9121;
	add.s64 	%rd9129, %rd9128, %rd9044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6971,%dummy}, %rd9116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6972}, %rd9116;
	}
	shf.r.wrap.b32 	%r6973, %r6972, %r6971, 28;
	shf.r.wrap.b32 	%r6974, %r6971, %r6972, 28;
	mov.b64 	%rd9130, {%r6974, %r6973};
	shf.l.wrap.b32 	%r6975, %r6971, %r6972, 30;
	shf.l.wrap.b32 	%r6976, %r6972, %r6971, 30;
	mov.b64 	%rd9131, {%r6976, %r6975};
	xor.b64  	%rd9132, %rd9131, %rd9130;
	shf.l.wrap.b32 	%r6977, %r6971, %r6972, 25;
	shf.l.wrap.b32 	%r6978, %r6972, %r6971, 25;
	mov.b64 	%rd9133, {%r6978, %r6977};
	xor.b64  	%rd9134, %rd9132, %rd9133;
	and.b64  	%rd9135, %rd9116, %rd9092;
	xor.b64  	%rd9136, %rd9116, %rd9092;
	and.b64  	%rd9137, %rd9136, %rd9068;
	or.b64  	%rd9138, %rd9137, %rd9135;
	add.s64 	%rd9139, %rd9128, %rd9138;
	add.s64 	%rd9140, %rd9139, %rd9134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6979,%dummy}, %rd9129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6980}, %rd9129;
	}
	shf.r.wrap.b32 	%r6981, %r6980, %r6979, 14;
	shf.r.wrap.b32 	%r6982, %r6979, %r6980, 14;
	mov.b64 	%rd9141, {%r6982, %r6981};
	shf.r.wrap.b32 	%r6983, %r6980, %r6979, 18;
	shf.r.wrap.b32 	%r6984, %r6979, %r6980, 18;
	mov.b64 	%rd9142, {%r6984, %r6983};
	xor.b64  	%rd9143, %rd9142, %rd9141;
	shf.l.wrap.b32 	%r6985, %r6979, %r6980, 23;
	shf.l.wrap.b32 	%r6986, %r6980, %r6979, 23;
	mov.b64 	%rd9144, {%r6986, %r6985};
	xor.b64  	%rd9145, %rd9143, %rd9144;
	xor.b64  	%rd9146, %rd9105, %rd9081;
	and.b64  	%rd9147, %rd9129, %rd9146;
	xor.b64  	%rd9148, %rd9147, %rd9081;
	add.s64 	%rd9149, %rd10289, %rd28;
	add.s64 	%rd9150, %rd9149, %rd9057;
	add.s64 	%rd9151, %rd9150, %rd9148;
	add.s64 	%rd9152, %rd9151, %rd9145;
	add.s64 	%rd9153, %rd9152, %rd9068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6987,%dummy}, %rd9140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6988}, %rd9140;
	}
	shf.r.wrap.b32 	%r6989, %r6988, %r6987, 28;
	shf.r.wrap.b32 	%r6990, %r6987, %r6988, 28;
	mov.b64 	%rd9154, {%r6990, %r6989};
	shf.l.wrap.b32 	%r6991, %r6987, %r6988, 30;
	shf.l.wrap.b32 	%r6992, %r6988, %r6987, 30;
	mov.b64 	%rd9155, {%r6992, %r6991};
	xor.b64  	%rd9156, %rd9155, %rd9154;
	shf.l.wrap.b32 	%r6993, %r6987, %r6988, 25;
	shf.l.wrap.b32 	%r6994, %r6988, %r6987, 25;
	mov.b64 	%rd9157, {%r6994, %r6993};
	xor.b64  	%rd9158, %rd9156, %rd9157;
	and.b64  	%rd9159, %rd9140, %rd9116;
	xor.b64  	%rd9160, %rd9140, %rd9116;
	and.b64  	%rd9161, %rd9160, %rd9092;
	or.b64  	%rd9162, %rd9161, %rd9159;
	add.s64 	%rd9163, %rd9152, %rd9162;
	add.s64 	%rd9164, %rd9163, %rd9158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6995,%dummy}, %rd9153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6996}, %rd9153;
	}
	shf.r.wrap.b32 	%r6997, %r6996, %r6995, 14;
	shf.r.wrap.b32 	%r6998, %r6995, %r6996, 14;
	mov.b64 	%rd9165, {%r6998, %r6997};
	shf.r.wrap.b32 	%r6999, %r6996, %r6995, 18;
	shf.r.wrap.b32 	%r7000, %r6995, %r6996, 18;
	mov.b64 	%rd9166, {%r7000, %r6999};
	xor.b64  	%rd9167, %rd9166, %rd9165;
	shf.l.wrap.b32 	%r7001, %r6995, %r6996, 23;
	shf.l.wrap.b32 	%r7002, %r6996, %r6995, 23;
	mov.b64 	%rd9168, {%r7002, %r7001};
	xor.b64  	%rd9169, %rd9167, %rd9168;
	xor.b64  	%rd9170, %rd9129, %rd9105;
	and.b64  	%rd9171, %rd9153, %rd9170;
	xor.b64  	%rd9172, %rd9171, %rd9105;
	add.s64 	%rd9173, %rd10288, %rd29;
	add.s64 	%rd9174, %rd9173, %rd9081;
	add.s64 	%rd9175, %rd9174, %rd9172;
	add.s64 	%rd9176, %rd9175, %rd9169;
	add.s64 	%rd9177, %rd9176, %rd9092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7003,%dummy}, %rd9164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7004}, %rd9164;
	}
	shf.r.wrap.b32 	%r7005, %r7004, %r7003, 28;
	shf.r.wrap.b32 	%r7006, %r7003, %r7004, 28;
	mov.b64 	%rd9178, {%r7006, %r7005};
	shf.l.wrap.b32 	%r7007, %r7003, %r7004, 30;
	shf.l.wrap.b32 	%r7008, %r7004, %r7003, 30;
	mov.b64 	%rd9179, {%r7008, %r7007};
	xor.b64  	%rd9180, %rd9179, %rd9178;
	shf.l.wrap.b32 	%r7009, %r7003, %r7004, 25;
	shf.l.wrap.b32 	%r7010, %r7004, %r7003, 25;
	mov.b64 	%rd9181, {%r7010, %r7009};
	xor.b64  	%rd9182, %rd9180, %rd9181;
	and.b64  	%rd9183, %rd9164, %rd9140;
	xor.b64  	%rd9184, %rd9164, %rd9140;
	and.b64  	%rd9185, %rd9184, %rd9116;
	or.b64  	%rd9186, %rd9185, %rd9183;
	add.s64 	%rd9187, %rd9176, %rd9186;
	add.s64 	%rd9188, %rd9187, %rd9182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7011,%dummy}, %rd9177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7012}, %rd9177;
	}
	shf.r.wrap.b32 	%r7013, %r7012, %r7011, 14;
	shf.r.wrap.b32 	%r7014, %r7011, %r7012, 14;
	mov.b64 	%rd9189, {%r7014, %r7013};
	shf.r.wrap.b32 	%r7015, %r7012, %r7011, 18;
	shf.r.wrap.b32 	%r7016, %r7011, %r7012, 18;
	mov.b64 	%rd9190, {%r7016, %r7015};
	xor.b64  	%rd9191, %rd9190, %rd9189;
	shf.l.wrap.b32 	%r7017, %r7011, %r7012, 23;
	shf.l.wrap.b32 	%r7018, %r7012, %r7011, 23;
	mov.b64 	%rd9192, {%r7018, %r7017};
	xor.b64  	%rd9193, %rd9191, %rd9192;
	xor.b64  	%rd9194, %rd9153, %rd9129;
	and.b64  	%rd9195, %rd9177, %rd9194;
	xor.b64  	%rd9196, %rd9195, %rd9129;
	add.s64 	%rd9197, %rd10287, %rd30;
	add.s64 	%rd9198, %rd9197, %rd9105;
	add.s64 	%rd9199, %rd9198, %rd9196;
	add.s64 	%rd9200, %rd9199, %rd9193;
	add.s64 	%rd10299, %rd9200, %rd9116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7019,%dummy}, %rd9188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7020}, %rd9188;
	}
	shf.r.wrap.b32 	%r7021, %r7020, %r7019, 28;
	shf.r.wrap.b32 	%r7022, %r7019, %r7020, 28;
	mov.b64 	%rd9201, {%r7022, %r7021};
	shf.l.wrap.b32 	%r7023, %r7019, %r7020, 30;
	shf.l.wrap.b32 	%r7024, %r7020, %r7019, 30;
	mov.b64 	%rd9202, {%r7024, %r7023};
	xor.b64  	%rd9203, %rd9202, %rd9201;
	shf.l.wrap.b32 	%r7025, %r7019, %r7020, 25;
	shf.l.wrap.b32 	%r7026, %r7020, %r7019, 25;
	mov.b64 	%rd9204, {%r7026, %r7025};
	xor.b64  	%rd9205, %rd9203, %rd9204;
	and.b64  	%rd9206, %rd9188, %rd9164;
	xor.b64  	%rd9207, %rd9188, %rd9164;
	and.b64  	%rd9208, %rd9207, %rd9140;
	or.b64  	%rd9209, %rd9208, %rd9206;
	add.s64 	%rd9210, %rd9200, %rd9209;
	add.s64 	%rd10295, %rd9210, %rd9205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7027,%dummy}, %rd10299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7028}, %rd10299;
	}
	shf.r.wrap.b32 	%r7029, %r7028, %r7027, 14;
	shf.r.wrap.b32 	%r7030, %r7027, %r7028, 14;
	mov.b64 	%rd9211, {%r7030, %r7029};
	shf.r.wrap.b32 	%r7031, %r7028, %r7027, 18;
	shf.r.wrap.b32 	%r7032, %r7027, %r7028, 18;
	mov.b64 	%rd9212, {%r7032, %r7031};
	xor.b64  	%rd9213, %rd9212, %rd9211;
	shf.l.wrap.b32 	%r7033, %r7027, %r7028, 23;
	shf.l.wrap.b32 	%r7034, %r7028, %r7027, 23;
	mov.b64 	%rd9214, {%r7034, %r7033};
	xor.b64  	%rd9215, %rd9213, %rd9214;
	xor.b64  	%rd9216, %rd9177, %rd9153;
	and.b64  	%rd9217, %rd10299, %rd9216;
	xor.b64  	%rd9218, %rd9217, %rd9153;
	add.s64 	%rd9219, %rd10286, %rd10131;
	add.s64 	%rd9220, %rd9219, %rd9129;
	add.s64 	%rd9221, %rd9220, %rd9218;
	add.s64 	%rd9222, %rd9221, %rd9215;
	add.s64 	%rd10298, %rd9222, %rd9140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7035,%dummy}, %rd10295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7036}, %rd10295;
	}
	shf.r.wrap.b32 	%r7037, %r7036, %r7035, 28;
	shf.r.wrap.b32 	%r7038, %r7035, %r7036, 28;
	mov.b64 	%rd9223, {%r7038, %r7037};
	shf.l.wrap.b32 	%r7039, %r7035, %r7036, 30;
	shf.l.wrap.b32 	%r7040, %r7036, %r7035, 30;
	mov.b64 	%rd9224, {%r7040, %r7039};
	xor.b64  	%rd9225, %rd9224, %rd9223;
	shf.l.wrap.b32 	%r7041, %r7035, %r7036, 25;
	shf.l.wrap.b32 	%r7042, %r7036, %r7035, 25;
	mov.b64 	%rd9226, {%r7042, %r7041};
	xor.b64  	%rd9227, %rd9225, %rd9226;
	and.b64  	%rd9228, %rd10295, %rd9188;
	xor.b64  	%rd9229, %rd10295, %rd9188;
	and.b64  	%rd9230, %rd9229, %rd9164;
	or.b64  	%rd9231, %rd9230, %rd9228;
	add.s64 	%rd9232, %rd9222, %rd9231;
	add.s64 	%rd10294, %rd9232, %rd9227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7043,%dummy}, %rd10298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7044}, %rd10298;
	}
	shf.r.wrap.b32 	%r7045, %r7044, %r7043, 14;
	shf.r.wrap.b32 	%r7046, %r7043, %r7044, 14;
	mov.b64 	%rd9233, {%r7046, %r7045};
	shf.r.wrap.b32 	%r7047, %r7044, %r7043, 18;
	shf.r.wrap.b32 	%r7048, %r7043, %r7044, 18;
	mov.b64 	%rd9234, {%r7048, %r7047};
	xor.b64  	%rd9235, %rd9234, %rd9233;
	shf.l.wrap.b32 	%r7049, %r7043, %r7044, 23;
	shf.l.wrap.b32 	%r7050, %r7044, %r7043, 23;
	mov.b64 	%rd9236, {%r7050, %r7049};
	xor.b64  	%rd9237, %rd9235, %rd9236;
	xor.b64  	%rd9238, %rd10299, %rd9177;
	and.b64  	%rd9239, %rd10298, %rd9238;
	xor.b64  	%rd9240, %rd9239, %rd9177;
	add.s64 	%rd9241, %rd10285, %rd10130;
	add.s64 	%rd9242, %rd9241, %rd9153;
	add.s64 	%rd9243, %rd9242, %rd9240;
	add.s64 	%rd9244, %rd9243, %rd9237;
	add.s64 	%rd10297, %rd9244, %rd9164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7051,%dummy}, %rd10294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7052}, %rd10294;
	}
	shf.r.wrap.b32 	%r7053, %r7052, %r7051, 28;
	shf.r.wrap.b32 	%r7054, %r7051, %r7052, 28;
	mov.b64 	%rd9245, {%r7054, %r7053};
	shf.l.wrap.b32 	%r7055, %r7051, %r7052, 30;
	shf.l.wrap.b32 	%r7056, %r7052, %r7051, 30;
	mov.b64 	%rd9246, {%r7056, %r7055};
	xor.b64  	%rd9247, %rd9246, %rd9245;
	shf.l.wrap.b32 	%r7057, %r7051, %r7052, 25;
	shf.l.wrap.b32 	%r7058, %r7052, %r7051, 25;
	mov.b64 	%rd9248, {%r7058, %r7057};
	xor.b64  	%rd9249, %rd9247, %rd9248;
	and.b64  	%rd9250, %rd10294, %rd10295;
	xor.b64  	%rd9251, %rd10294, %rd10295;
	and.b64  	%rd9252, %rd9251, %rd9188;
	or.b64  	%rd9253, %rd9252, %rd9250;
	add.s64 	%rd9254, %rd9244, %rd9253;
	add.s64 	%rd10293, %rd9254, %rd9249;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7059,%dummy}, %rd10297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7060}, %rd10297;
	}
	shf.r.wrap.b32 	%r7061, %r7060, %r7059, 14;
	shf.r.wrap.b32 	%r7062, %r7059, %r7060, 14;
	mov.b64 	%rd9255, {%r7062, %r7061};
	shf.r.wrap.b32 	%r7063, %r7060, %r7059, 18;
	shf.r.wrap.b32 	%r7064, %r7059, %r7060, 18;
	mov.b64 	%rd9256, {%r7064, %r7063};
	xor.b64  	%rd9257, %rd9256, %rd9255;
	shf.l.wrap.b32 	%r7065, %r7059, %r7060, 23;
	shf.l.wrap.b32 	%r7066, %r7060, %r7059, 23;
	mov.b64 	%rd9258, {%r7066, %r7065};
	xor.b64  	%rd9259, %rd9257, %rd9258;
	xor.b64  	%rd9260, %rd10298, %rd10299;
	and.b64  	%rd9261, %rd10297, %rd9260;
	xor.b64  	%rd9262, %rd9261, %rd10299;
	add.s64 	%rd9263, %rd10284, %rd10129;
	add.s64 	%rd9264, %rd9263, %rd9177;
	add.s64 	%rd9265, %rd9264, %rd9262;
	add.s64 	%rd9266, %rd9265, %rd9259;
	add.s64 	%rd10296, %rd9266, %rd9188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7067,%dummy}, %rd10293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7068}, %rd10293;
	}
	shf.r.wrap.b32 	%r7069, %r7068, %r7067, 28;
	shf.r.wrap.b32 	%r7070, %r7067, %r7068, 28;
	mov.b64 	%rd9267, {%r7070, %r7069};
	shf.l.wrap.b32 	%r7071, %r7067, %r7068, 30;
	shf.l.wrap.b32 	%r7072, %r7068, %r7067, 30;
	mov.b64 	%rd9268, {%r7072, %r7071};
	xor.b64  	%rd9269, %rd9268, %rd9267;
	shf.l.wrap.b32 	%r7073, %r7067, %r7068, 25;
	shf.l.wrap.b32 	%r7074, %r7068, %r7067, 25;
	mov.b64 	%rd9270, {%r7074, %r7073};
	xor.b64  	%rd9271, %rd9269, %rd9270;
	and.b64  	%rd9272, %rd10293, %rd10294;
	xor.b64  	%rd9273, %rd10293, %rd10294;
	and.b64  	%rd9274, %rd9273, %rd10295;
	or.b64  	%rd9275, %rd9274, %rd9272;
	add.s64 	%rd9276, %rd9266, %rd9275;
	add.s64 	%rd10292, %rd9276, %rd9271;
	mov.u32 	%r7711, 16;

BB3_35:
	shr.u64 	%rd9277, %rd10285, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7075,%dummy}, %rd10285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7076}, %rd10285;
	}
	shf.r.wrap.b32 	%r7077, %r7076, %r7075, 19;
	shf.r.wrap.b32 	%r7078, %r7075, %r7076, 19;
	mov.b64 	%rd9278, {%r7078, %r7077};
	xor.b64  	%rd9279, %rd9278, %rd9277;
	shf.l.wrap.b32 	%r7079, %r7075, %r7076, 3;
	shf.l.wrap.b32 	%r7080, %r7076, %r7075, 3;
	mov.b64 	%rd9280, {%r7080, %r7079};
	xor.b64  	%rd9281, %rd9279, %rd9280;
	shr.u64 	%rd9282, %rd10301, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7081,%dummy}, %rd10301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7082}, %rd10301;
	}
	shf.r.wrap.b32 	%r7083, %r7082, %r7081, 1;
	shf.r.wrap.b32 	%r7084, %r7081, %r7082, 1;
	mov.b64 	%rd9283, {%r7084, %r7083};
	xor.b64  	%rd9284, %rd9283, %rd9282;
	shf.r.wrap.b32 	%r7085, %r7082, %r7081, 8;
	shf.r.wrap.b32 	%r7086, %r7081, %r7082, 8;
	mov.b64 	%rd9285, {%r7086, %r7085};
	xor.b64  	%rd9286, %rd9284, %rd9285;
	add.s64 	%rd9287, %rd10300, %rd10290;
	add.s64 	%rd9288, %rd9287, %rd9281;
	add.s64 	%rd10300, %rd9288, %rd9286;
	shr.u64 	%rd9289, %rd10284, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7087,%dummy}, %rd10284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7088}, %rd10284;
	}
	shf.r.wrap.b32 	%r7089, %r7088, %r7087, 19;
	shf.r.wrap.b32 	%r7090, %r7087, %r7088, 19;
	mov.b64 	%rd9290, {%r7090, %r7089};
	xor.b64  	%rd9291, %rd9290, %rd9289;
	shf.l.wrap.b32 	%r7091, %r7087, %r7088, 3;
	shf.l.wrap.b32 	%r7092, %r7088, %r7087, 3;
	mov.b64 	%rd9292, {%r7092, %r7091};
	xor.b64  	%rd9293, %rd9291, %rd9292;
	shr.u64 	%rd9294, %rd10302, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7093,%dummy}, %rd10302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7094}, %rd10302;
	}
	shf.r.wrap.b32 	%r7095, %r7094, %r7093, 1;
	shf.r.wrap.b32 	%r7096, %r7093, %r7094, 1;
	mov.b64 	%rd9295, {%r7096, %r7095};
	xor.b64  	%rd9296, %rd9295, %rd9294;
	shf.r.wrap.b32 	%r7097, %r7094, %r7093, 8;
	shf.r.wrap.b32 	%r7098, %r7093, %r7094, 8;
	mov.b64 	%rd9297, {%r7098, %r7097};
	xor.b64  	%rd9298, %rd9296, %rd9297;
	add.s64 	%rd9299, %rd10301, %rd10289;
	add.s64 	%rd9300, %rd9299, %rd9293;
	add.s64 	%rd10301, %rd9300, %rd9298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7099,%dummy}, %rd10300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7100}, %rd10300;
	}
	shf.r.wrap.b32 	%r7101, %r7100, %r7099, 19;
	shf.r.wrap.b32 	%r7102, %r7099, %r7100, 19;
	mov.b64 	%rd9301, {%r7102, %r7101};
	shf.l.wrap.b32 	%r7103, %r7099, %r7100, 3;
	shf.l.wrap.b32 	%r7104, %r7100, %r7099, 3;
	mov.b64 	%rd9302, {%r7104, %r7103};
	shr.u64 	%rd9303, %rd10300, 6;
	xor.b64  	%rd9304, %rd9301, %rd9303;
	xor.b64  	%rd9305, %rd9304, %rd9302;
	shr.u64 	%rd9306, %rd10303, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7105,%dummy}, %rd10303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7106}, %rd10303;
	}
	shf.r.wrap.b32 	%r7107, %r7106, %r7105, 1;
	shf.r.wrap.b32 	%r7108, %r7105, %r7106, 1;
	mov.b64 	%rd9307, {%r7108, %r7107};
	xor.b64  	%rd9308, %rd9307, %rd9306;
	shf.r.wrap.b32 	%r7109, %r7106, %r7105, 8;
	shf.r.wrap.b32 	%r7110, %r7105, %r7106, 8;
	mov.b64 	%rd9309, {%r7110, %r7109};
	xor.b64  	%rd9310, %rd9308, %rd9309;
	add.s64 	%rd9311, %rd10302, %rd10288;
	add.s64 	%rd9312, %rd9311, %rd9305;
	add.s64 	%rd10302, %rd9312, %rd9310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7111,%dummy}, %rd10301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7112}, %rd10301;
	}
	shf.r.wrap.b32 	%r7113, %r7112, %r7111, 19;
	shf.r.wrap.b32 	%r7114, %r7111, %r7112, 19;
	mov.b64 	%rd9313, {%r7114, %r7113};
	shf.l.wrap.b32 	%r7115, %r7111, %r7112, 3;
	shf.l.wrap.b32 	%r7116, %r7112, %r7111, 3;
	mov.b64 	%rd9314, {%r7116, %r7115};
	shr.u64 	%rd9315, %rd10301, 6;
	xor.b64  	%rd9316, %rd9313, %rd9315;
	xor.b64  	%rd9317, %rd9316, %rd9314;
	shr.u64 	%rd9318, %rd10304, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7117,%dummy}, %rd10304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7118}, %rd10304;
	}
	shf.r.wrap.b32 	%r7119, %r7118, %r7117, 1;
	shf.r.wrap.b32 	%r7120, %r7117, %r7118, 1;
	mov.b64 	%rd9319, {%r7120, %r7119};
	xor.b64  	%rd9320, %rd9319, %rd9318;
	shf.r.wrap.b32 	%r7121, %r7118, %r7117, 8;
	shf.r.wrap.b32 	%r7122, %r7117, %r7118, 8;
	mov.b64 	%rd9321, {%r7122, %r7121};
	xor.b64  	%rd9322, %rd9320, %rd9321;
	add.s64 	%rd9323, %rd10303, %rd10287;
	add.s64 	%rd9324, %rd9323, %rd9317;
	add.s64 	%rd10303, %rd9324, %rd9322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7123,%dummy}, %rd10302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7124}, %rd10302;
	}
	shf.r.wrap.b32 	%r7125, %r7124, %r7123, 19;
	shf.r.wrap.b32 	%r7126, %r7123, %r7124, 19;
	mov.b64 	%rd9325, {%r7126, %r7125};
	shf.l.wrap.b32 	%r7127, %r7123, %r7124, 3;
	shf.l.wrap.b32 	%r7128, %r7124, %r7123, 3;
	mov.b64 	%rd9326, {%r7128, %r7127};
	shr.u64 	%rd9327, %rd10302, 6;
	xor.b64  	%rd9328, %rd9325, %rd9327;
	xor.b64  	%rd9329, %rd9328, %rd9326;
	shr.u64 	%rd9330, %rd10305, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7129,%dummy}, %rd10305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7130}, %rd10305;
	}
	shf.r.wrap.b32 	%r7131, %r7130, %r7129, 1;
	shf.r.wrap.b32 	%r7132, %r7129, %r7130, 1;
	mov.b64 	%rd9331, {%r7132, %r7131};
	xor.b64  	%rd9332, %rd9331, %rd9330;
	shf.r.wrap.b32 	%r7133, %r7130, %r7129, 8;
	shf.r.wrap.b32 	%r7134, %r7129, %r7130, 8;
	mov.b64 	%rd9333, {%r7134, %r7133};
	xor.b64  	%rd9334, %rd9332, %rd9333;
	add.s64 	%rd9335, %rd10304, %rd10286;
	add.s64 	%rd9336, %rd9335, %rd9329;
	add.s64 	%rd10304, %rd9336, %rd9334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7135,%dummy}, %rd10303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7136}, %rd10303;
	}
	shf.r.wrap.b32 	%r7137, %r7136, %r7135, 19;
	shf.r.wrap.b32 	%r7138, %r7135, %r7136, 19;
	mov.b64 	%rd9337, {%r7138, %r7137};
	shf.l.wrap.b32 	%r7139, %r7135, %r7136, 3;
	shf.l.wrap.b32 	%r7140, %r7136, %r7135, 3;
	mov.b64 	%rd9338, {%r7140, %r7139};
	shr.u64 	%rd9339, %rd10303, 6;
	xor.b64  	%rd9340, %rd9337, %rd9339;
	xor.b64  	%rd9341, %rd9340, %rd9338;
	shr.u64 	%rd9342, %rd10306, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7141,%dummy}, %rd10306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7142}, %rd10306;
	}
	shf.r.wrap.b32 	%r7143, %r7142, %r7141, 1;
	shf.r.wrap.b32 	%r7144, %r7141, %r7142, 1;
	mov.b64 	%rd9343, {%r7144, %r7143};
	xor.b64  	%rd9344, %rd9343, %rd9342;
	shf.r.wrap.b32 	%r7145, %r7142, %r7141, 8;
	shf.r.wrap.b32 	%r7146, %r7141, %r7142, 8;
	mov.b64 	%rd9345, {%r7146, %r7145};
	xor.b64  	%rd9346, %rd9344, %rd9345;
	add.s64 	%rd9347, %rd10305, %rd10285;
	add.s64 	%rd9348, %rd9347, %rd9341;
	add.s64 	%rd10305, %rd9348, %rd9346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7147,%dummy}, %rd10304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7148}, %rd10304;
	}
	shf.r.wrap.b32 	%r7149, %r7148, %r7147, 19;
	shf.r.wrap.b32 	%r7150, %r7147, %r7148, 19;
	mov.b64 	%rd9349, {%r7150, %r7149};
	shf.l.wrap.b32 	%r7151, %r7147, %r7148, 3;
	shf.l.wrap.b32 	%r7152, %r7148, %r7147, 3;
	mov.b64 	%rd9350, {%r7152, %r7151};
	shr.u64 	%rd9351, %rd10304, 6;
	xor.b64  	%rd9352, %rd9349, %rd9351;
	xor.b64  	%rd9353, %rd9352, %rd9350;
	shr.u64 	%rd9354, %rd10307, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7153,%dummy}, %rd10307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7154}, %rd10307;
	}
	shf.r.wrap.b32 	%r7155, %r7154, %r7153, 1;
	shf.r.wrap.b32 	%r7156, %r7153, %r7154, 1;
	mov.b64 	%rd9355, {%r7156, %r7155};
	xor.b64  	%rd9356, %rd9355, %rd9354;
	shf.r.wrap.b32 	%r7157, %r7154, %r7153, 8;
	shf.r.wrap.b32 	%r7158, %r7153, %r7154, 8;
	mov.b64 	%rd9357, {%r7158, %r7157};
	xor.b64  	%rd9358, %rd9356, %rd9357;
	add.s64 	%rd9359, %rd10306, %rd10284;
	add.s64 	%rd9360, %rd9359, %rd9353;
	add.s64 	%rd10306, %rd9360, %rd9358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7159,%dummy}, %rd10305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7160}, %rd10305;
	}
	shf.r.wrap.b32 	%r7161, %r7160, %r7159, 19;
	shf.r.wrap.b32 	%r7162, %r7159, %r7160, 19;
	mov.b64 	%rd9361, {%r7162, %r7161};
	shf.l.wrap.b32 	%r7163, %r7159, %r7160, 3;
	shf.l.wrap.b32 	%r7164, %r7160, %r7159, 3;
	mov.b64 	%rd9362, {%r7164, %r7163};
	shr.u64 	%rd9363, %rd10305, 6;
	xor.b64  	%rd9364, %rd9361, %rd9363;
	xor.b64  	%rd9365, %rd9364, %rd9362;
	shr.u64 	%rd9366, %rd10291, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7165,%dummy}, %rd10291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7166}, %rd10291;
	}
	shf.r.wrap.b32 	%r7167, %r7166, %r7165, 1;
	shf.r.wrap.b32 	%r7168, %r7165, %r7166, 1;
	mov.b64 	%rd9367, {%r7168, %r7167};
	xor.b64  	%rd9368, %rd9367, %rd9366;
	shf.r.wrap.b32 	%r7169, %r7166, %r7165, 8;
	shf.r.wrap.b32 	%r7170, %r7165, %r7166, 8;
	mov.b64 	%rd9369, {%r7170, %r7169};
	xor.b64  	%rd9370, %rd9368, %rd9369;
	add.s64 	%rd9371, %rd10300, %rd10307;
	add.s64 	%rd9372, %rd9371, %rd9365;
	add.s64 	%rd10307, %rd9372, %rd9370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7171,%dummy}, %rd10306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7172}, %rd10306;
	}
	shf.r.wrap.b32 	%r7173, %r7172, %r7171, 19;
	shf.r.wrap.b32 	%r7174, %r7171, %r7172, 19;
	mov.b64 	%rd9373, {%r7174, %r7173};
	shf.l.wrap.b32 	%r7175, %r7171, %r7172, 3;
	shf.l.wrap.b32 	%r7176, %r7172, %r7171, 3;
	mov.b64 	%rd9374, {%r7176, %r7175};
	shr.u64 	%rd9375, %rd10306, 6;
	xor.b64  	%rd9376, %rd9373, %rd9375;
	xor.b64  	%rd9377, %rd9376, %rd9374;
	shr.u64 	%rd9378, %rd10290, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7177,%dummy}, %rd10290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7178}, %rd10290;
	}
	shf.r.wrap.b32 	%r7179, %r7178, %r7177, 1;
	shf.r.wrap.b32 	%r7180, %r7177, %r7178, 1;
	mov.b64 	%rd9379, {%r7180, %r7179};
	xor.b64  	%rd9380, %rd9379, %rd9378;
	shf.r.wrap.b32 	%r7181, %r7178, %r7177, 8;
	shf.r.wrap.b32 	%r7182, %r7177, %r7178, 8;
	mov.b64 	%rd9381, {%r7182, %r7181};
	xor.b64  	%rd9382, %rd9380, %rd9381;
	add.s64 	%rd9383, %rd10301, %rd10291;
	add.s64 	%rd9384, %rd9383, %rd9377;
	add.s64 	%rd10291, %rd9384, %rd9382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7183,%dummy}, %rd10307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7184}, %rd10307;
	}
	shf.r.wrap.b32 	%r7185, %r7184, %r7183, 19;
	shf.r.wrap.b32 	%r7186, %r7183, %r7184, 19;
	mov.b64 	%rd9385, {%r7186, %r7185};
	shf.l.wrap.b32 	%r7187, %r7183, %r7184, 3;
	shf.l.wrap.b32 	%r7188, %r7184, %r7183, 3;
	mov.b64 	%rd9386, {%r7188, %r7187};
	shr.u64 	%rd9387, %rd10307, 6;
	xor.b64  	%rd9388, %rd9385, %rd9387;
	xor.b64  	%rd9389, %rd9388, %rd9386;
	shr.u64 	%rd9390, %rd10289, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7189,%dummy}, %rd10289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7190}, %rd10289;
	}
	shf.r.wrap.b32 	%r7191, %r7190, %r7189, 1;
	shf.r.wrap.b32 	%r7192, %r7189, %r7190, 1;
	mov.b64 	%rd9391, {%r7192, %r7191};
	xor.b64  	%rd9392, %rd9391, %rd9390;
	shf.r.wrap.b32 	%r7193, %r7190, %r7189, 8;
	shf.r.wrap.b32 	%r7194, %r7189, %r7190, 8;
	mov.b64 	%rd9393, {%r7194, %r7193};
	xor.b64  	%rd9394, %rd9392, %rd9393;
	add.s64 	%rd9395, %rd10302, %rd10290;
	add.s64 	%rd9396, %rd9395, %rd9389;
	add.s64 	%rd10290, %rd9396, %rd9394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7195,%dummy}, %rd10291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7196}, %rd10291;
	}
	shf.r.wrap.b32 	%r7197, %r7196, %r7195, 19;
	shf.r.wrap.b32 	%r7198, %r7195, %r7196, 19;
	mov.b64 	%rd9397, {%r7198, %r7197};
	shf.l.wrap.b32 	%r7199, %r7195, %r7196, 3;
	shf.l.wrap.b32 	%r7200, %r7196, %r7195, 3;
	mov.b64 	%rd9398, {%r7200, %r7199};
	shr.u64 	%rd9399, %rd10291, 6;
	xor.b64  	%rd9400, %rd9397, %rd9399;
	xor.b64  	%rd9401, %rd9400, %rd9398;
	shr.u64 	%rd9402, %rd10288, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7201,%dummy}, %rd10288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7202}, %rd10288;
	}
	shf.r.wrap.b32 	%r7203, %r7202, %r7201, 1;
	shf.r.wrap.b32 	%r7204, %r7201, %r7202, 1;
	mov.b64 	%rd9403, {%r7204, %r7203};
	xor.b64  	%rd9404, %rd9403, %rd9402;
	shf.r.wrap.b32 	%r7205, %r7202, %r7201, 8;
	shf.r.wrap.b32 	%r7206, %r7201, %r7202, 8;
	mov.b64 	%rd9405, {%r7206, %r7205};
	xor.b64  	%rd9406, %rd9404, %rd9405;
	add.s64 	%rd9407, %rd10303, %rd10289;
	add.s64 	%rd9408, %rd9407, %rd9401;
	add.s64 	%rd10289, %rd9408, %rd9406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7207,%dummy}, %rd10290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7208}, %rd10290;
	}
	shf.r.wrap.b32 	%r7209, %r7208, %r7207, 19;
	shf.r.wrap.b32 	%r7210, %r7207, %r7208, 19;
	mov.b64 	%rd9409, {%r7210, %r7209};
	shf.l.wrap.b32 	%r7211, %r7207, %r7208, 3;
	shf.l.wrap.b32 	%r7212, %r7208, %r7207, 3;
	mov.b64 	%rd9410, {%r7212, %r7211};
	shr.u64 	%rd9411, %rd10290, 6;
	xor.b64  	%rd9412, %rd9409, %rd9411;
	xor.b64  	%rd9413, %rd9412, %rd9410;
	shr.u64 	%rd9414, %rd10287, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7213,%dummy}, %rd10287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7214}, %rd10287;
	}
	shf.r.wrap.b32 	%r7215, %r7214, %r7213, 1;
	shf.r.wrap.b32 	%r7216, %r7213, %r7214, 1;
	mov.b64 	%rd9415, {%r7216, %r7215};
	xor.b64  	%rd9416, %rd9415, %rd9414;
	shf.r.wrap.b32 	%r7217, %r7214, %r7213, 8;
	shf.r.wrap.b32 	%r7218, %r7213, %r7214, 8;
	mov.b64 	%rd9417, {%r7218, %r7217};
	xor.b64  	%rd9418, %rd9416, %rd9417;
	add.s64 	%rd9419, %rd10304, %rd10288;
	add.s64 	%rd9420, %rd9419, %rd9413;
	add.s64 	%rd10288, %rd9420, %rd9418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7219,%dummy}, %rd10289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7220}, %rd10289;
	}
	shf.r.wrap.b32 	%r7221, %r7220, %r7219, 19;
	shf.r.wrap.b32 	%r7222, %r7219, %r7220, 19;
	mov.b64 	%rd9421, {%r7222, %r7221};
	shf.l.wrap.b32 	%r7223, %r7219, %r7220, 3;
	shf.l.wrap.b32 	%r7224, %r7220, %r7219, 3;
	mov.b64 	%rd9422, {%r7224, %r7223};
	shr.u64 	%rd9423, %rd10289, 6;
	xor.b64  	%rd9424, %rd9421, %rd9423;
	xor.b64  	%rd9425, %rd9424, %rd9422;
	shr.u64 	%rd9426, %rd10286, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7225,%dummy}, %rd10286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7226}, %rd10286;
	}
	shf.r.wrap.b32 	%r7227, %r7226, %r7225, 1;
	shf.r.wrap.b32 	%r7228, %r7225, %r7226, 1;
	mov.b64 	%rd9427, {%r7228, %r7227};
	xor.b64  	%rd9428, %rd9427, %rd9426;
	shf.r.wrap.b32 	%r7229, %r7226, %r7225, 8;
	shf.r.wrap.b32 	%r7230, %r7225, %r7226, 8;
	mov.b64 	%rd9429, {%r7230, %r7229};
	xor.b64  	%rd9430, %rd9428, %rd9429;
	add.s64 	%rd9431, %rd10305, %rd10287;
	add.s64 	%rd9432, %rd9431, %rd9425;
	add.s64 	%rd10287, %rd9432, %rd9430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7231,%dummy}, %rd10288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7232}, %rd10288;
	}
	shf.r.wrap.b32 	%r7233, %r7232, %r7231, 19;
	shf.r.wrap.b32 	%r7234, %r7231, %r7232, 19;
	mov.b64 	%rd9433, {%r7234, %r7233};
	shf.l.wrap.b32 	%r7235, %r7231, %r7232, 3;
	shf.l.wrap.b32 	%r7236, %r7232, %r7231, 3;
	mov.b64 	%rd9434, {%r7236, %r7235};
	shr.u64 	%rd9435, %rd10288, 6;
	xor.b64  	%rd9436, %rd9433, %rd9435;
	xor.b64  	%rd9437, %rd9436, %rd9434;
	shr.u64 	%rd9438, %rd10285, 7;
	shf.r.wrap.b32 	%r7237, %r7076, %r7075, 1;
	shf.r.wrap.b32 	%r7238, %r7075, %r7076, 1;
	mov.b64 	%rd9439, {%r7238, %r7237};
	xor.b64  	%rd9440, %rd9439, %rd9438;
	shf.r.wrap.b32 	%r7239, %r7076, %r7075, 8;
	shf.r.wrap.b32 	%r7240, %r7075, %r7076, 8;
	mov.b64 	%rd9441, {%r7240, %r7239};
	xor.b64  	%rd9442, %rd9440, %rd9441;
	add.s64 	%rd9443, %rd10306, %rd10286;
	add.s64 	%rd9444, %rd9443, %rd9437;
	add.s64 	%rd10286, %rd9444, %rd9442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7241,%dummy}, %rd10287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7242}, %rd10287;
	}
	shf.r.wrap.b32 	%r7243, %r7242, %r7241, 19;
	shf.r.wrap.b32 	%r7244, %r7241, %r7242, 19;
	mov.b64 	%rd9445, {%r7244, %r7243};
	shf.l.wrap.b32 	%r7245, %r7241, %r7242, 3;
	shf.l.wrap.b32 	%r7246, %r7242, %r7241, 3;
	mov.b64 	%rd9446, {%r7246, %r7245};
	shr.u64 	%rd9447, %rd10287, 6;
	xor.b64  	%rd9448, %rd9445, %rd9447;
	xor.b64  	%rd9449, %rd9448, %rd9446;
	shr.u64 	%rd9450, %rd10284, 7;
	shf.r.wrap.b32 	%r7247, %r7088, %r7087, 1;
	shf.r.wrap.b32 	%r7248, %r7087, %r7088, 1;
	mov.b64 	%rd9451, {%r7248, %r7247};
	xor.b64  	%rd9452, %rd9451, %rd9450;
	shf.r.wrap.b32 	%r7249, %r7088, %r7087, 8;
	shf.r.wrap.b32 	%r7250, %r7087, %r7088, 8;
	mov.b64 	%rd9453, {%r7250, %r7249};
	xor.b64  	%rd9454, %rd9452, %rd9453;
	add.s64 	%rd9455, %rd10307, %rd10285;
	add.s64 	%rd9456, %rd9455, %rd9449;
	add.s64 	%rd10285, %rd9456, %rd9454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7251,%dummy}, %rd10286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7252}, %rd10286;
	}
	shf.r.wrap.b32 	%r7253, %r7252, %r7251, 19;
	shf.r.wrap.b32 	%r7254, %r7251, %r7252, 19;
	mov.b64 	%rd9457, {%r7254, %r7253};
	shf.l.wrap.b32 	%r7255, %r7251, %r7252, 3;
	shf.l.wrap.b32 	%r7256, %r7252, %r7251, 3;
	mov.b64 	%rd9458, {%r7256, %r7255};
	shr.u64 	%rd9459, %rd10286, 6;
	xor.b64  	%rd9460, %rd9457, %rd9459;
	xor.b64  	%rd9461, %rd9460, %rd9458;
	shf.r.wrap.b32 	%r7257, %r7100, %r7099, 1;
	shf.r.wrap.b32 	%r7258, %r7099, %r7100, 1;
	mov.b64 	%rd9462, {%r7258, %r7257};
	shf.r.wrap.b32 	%r7259, %r7100, %r7099, 8;
	shf.r.wrap.b32 	%r7260, %r7099, %r7100, 8;
	mov.b64 	%rd9463, {%r7260, %r7259};
	shr.u64 	%rd9464, %rd10300, 7;
	xor.b64  	%rd9465, %rd9462, %rd9464;
	xor.b64  	%rd9466, %rd9465, %rd9463;
	add.s64 	%rd9467, %rd10291, %rd10284;
	add.s64 	%rd9468, %rd9467, %rd9461;
	add.s64 	%rd10284, %rd9468, %rd9466;
	mul.wide.s32 	%rd9469, %r7711, 8;
	mov.u64 	%rd9470, k_sha512;
	add.s64 	%rd9471, %rd9470, %rd9469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7261,%dummy}, %rd10296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7262}, %rd10296;
	}
	shf.r.wrap.b32 	%r7263, %r7262, %r7261, 18;
	shf.r.wrap.b32 	%r7264, %r7261, %r7262, 18;
	mov.b64 	%rd9472, {%r7264, %r7263};
	shf.r.wrap.b32 	%r7265, %r7262, %r7261, 14;
	shf.r.wrap.b32 	%r7266, %r7261, %r7262, 14;
	mov.b64 	%rd9473, {%r7266, %r7265};
	xor.b64  	%rd9474, %rd9472, %rd9473;
	shf.l.wrap.b32 	%r7267, %r7261, %r7262, 23;
	shf.l.wrap.b32 	%r7268, %r7262, %r7261, 23;
	mov.b64 	%rd9475, {%r7268, %r7267};
	xor.b64  	%rd9476, %rd9474, %rd9475;
	xor.b64  	%rd9477, %rd10298, %rd10297;
	and.b64  	%rd9478, %rd9477, %rd10296;
	xor.b64  	%rd9479, %rd9478, %rd10298;
	add.s64 	%rd9480, %rd9479, %rd10299;
	add.s64 	%rd9481, %rd9480, %rd10300;
	ld.const.u64 	%rd9482, [%rd9471];
	add.s64 	%rd9483, %rd9481, %rd9482;
	add.s64 	%rd9484, %rd9483, %rd9476;
	add.s64 	%rd9485, %rd9484, %rd10295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7269}, %rd10292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7270,%dummy}, %rd10292;
	}
	shf.l.wrap.b32 	%r7271, %r7270, %r7269, 30;
	shf.l.wrap.b32 	%r7272, %r7269, %r7270, 30;
	mov.b64 	%rd9486, {%r7272, %r7271};
	shf.r.wrap.b32 	%r7273, %r7269, %r7270, 28;
	shf.r.wrap.b32 	%r7274, %r7270, %r7269, 28;
	mov.b64 	%rd9487, {%r7274, %r7273};
	xor.b64  	%rd9488, %rd9486, %rd9487;
	shf.l.wrap.b32 	%r7275, %r7270, %r7269, 25;
	shf.l.wrap.b32 	%r7276, %r7269, %r7270, 25;
	mov.b64 	%rd9489, {%r7276, %r7275};
	xor.b64  	%rd9490, %rd9488, %rd9489;
	xor.b64  	%rd9491, %rd10293, %rd10292;
	and.b64  	%rd9492, %rd9491, %rd10294;
	and.b64  	%rd9493, %rd10293, %rd10292;
	or.b64  	%rd9494, %rd9492, %rd9493;
	add.s64 	%rd9495, %rd9484, %rd9494;
	add.s64 	%rd9496, %rd9495, %rd9490;
	add.s32 	%r7277, %r7711, 1;
	mul.wide.s32 	%rd9497, %r7277, 8;
	add.s64 	%rd9498, %rd9470, %rd9497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7278,%dummy}, %rd9485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7279}, %rd9485;
	}
	shf.r.wrap.b32 	%r7280, %r7279, %r7278, 14;
	shf.r.wrap.b32 	%r7281, %r7278, %r7279, 14;
	mov.b64 	%rd9499, {%r7281, %r7280};
	shf.r.wrap.b32 	%r7282, %r7279, %r7278, 18;
	shf.r.wrap.b32 	%r7283, %r7278, %r7279, 18;
	mov.b64 	%rd9500, {%r7283, %r7282};
	xor.b64  	%rd9501, %rd9500, %rd9499;
	shf.l.wrap.b32 	%r7284, %r7278, %r7279, 23;
	shf.l.wrap.b32 	%r7285, %r7279, %r7278, 23;
	mov.b64 	%rd9502, {%r7285, %r7284};
	xor.b64  	%rd9503, %rd9501, %rd9502;
	xor.b64  	%rd9504, %rd10297, %rd10296;
	and.b64  	%rd9505, %rd9485, %rd9504;
	xor.b64  	%rd9506, %rd9505, %rd10297;
	add.s64 	%rd9507, %rd10301, %rd10298;
	ld.const.u64 	%rd9508, [%rd9498];
	add.s64 	%rd9509, %rd9507, %rd9508;
	add.s64 	%rd9510, %rd9509, %rd9506;
	add.s64 	%rd9511, %rd9510, %rd9503;
	add.s64 	%rd9512, %rd9511, %rd10294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7286,%dummy}, %rd9496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7287}, %rd9496;
	}
	shf.r.wrap.b32 	%r7288, %r7287, %r7286, 28;
	shf.r.wrap.b32 	%r7289, %r7286, %r7287, 28;
	mov.b64 	%rd9513, {%r7289, %r7288};
	shf.l.wrap.b32 	%r7290, %r7286, %r7287, 30;
	shf.l.wrap.b32 	%r7291, %r7287, %r7286, 30;
	mov.b64 	%rd9514, {%r7291, %r7290};
	xor.b64  	%rd9515, %rd9514, %rd9513;
	shf.l.wrap.b32 	%r7292, %r7286, %r7287, 25;
	shf.l.wrap.b32 	%r7293, %r7287, %r7286, 25;
	mov.b64 	%rd9516, {%r7293, %r7292};
	xor.b64  	%rd9517, %rd9515, %rd9516;
	and.b64  	%rd9518, %rd9496, %rd10292;
	xor.b64  	%rd9519, %rd9496, %rd10292;
	and.b64  	%rd9520, %rd9519, %rd10293;
	or.b64  	%rd9521, %rd9520, %rd9518;
	add.s64 	%rd9522, %rd9511, %rd9521;
	add.s64 	%rd9523, %rd9522, %rd9517;
	add.s32 	%r7294, %r7711, 2;
	mul.wide.s32 	%rd9524, %r7294, 8;
	add.s64 	%rd9525, %rd9470, %rd9524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7295,%dummy}, %rd9512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7296}, %rd9512;
	}
	shf.r.wrap.b32 	%r7297, %r7296, %r7295, 14;
	shf.r.wrap.b32 	%r7298, %r7295, %r7296, 14;
	mov.b64 	%rd9526, {%r7298, %r7297};
	shf.r.wrap.b32 	%r7299, %r7296, %r7295, 18;
	shf.r.wrap.b32 	%r7300, %r7295, %r7296, 18;
	mov.b64 	%rd9527, {%r7300, %r7299};
	xor.b64  	%rd9528, %rd9527, %rd9526;
	shf.l.wrap.b32 	%r7301, %r7295, %r7296, 23;
	shf.l.wrap.b32 	%r7302, %r7296, %r7295, 23;
	mov.b64 	%rd9529, {%r7302, %r7301};
	xor.b64  	%rd9530, %rd9528, %rd9529;
	xor.b64  	%rd9531, %rd9485, %rd10296;
	and.b64  	%rd9532, %rd9512, %rd9531;
	xor.b64  	%rd9533, %rd9532, %rd10296;
	add.s64 	%rd9534, %rd10302, %rd10297;
	ld.const.u64 	%rd9535, [%rd9525];
	add.s64 	%rd9536, %rd9534, %rd9535;
	add.s64 	%rd9537, %rd9536, %rd9533;
	add.s64 	%rd9538, %rd9537, %rd9530;
	add.s64 	%rd9539, %rd9538, %rd10293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7303,%dummy}, %rd9523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7304}, %rd9523;
	}
	shf.r.wrap.b32 	%r7305, %r7304, %r7303, 28;
	shf.r.wrap.b32 	%r7306, %r7303, %r7304, 28;
	mov.b64 	%rd9540, {%r7306, %r7305};
	shf.l.wrap.b32 	%r7307, %r7303, %r7304, 30;
	shf.l.wrap.b32 	%r7308, %r7304, %r7303, 30;
	mov.b64 	%rd9541, {%r7308, %r7307};
	xor.b64  	%rd9542, %rd9541, %rd9540;
	shf.l.wrap.b32 	%r7309, %r7303, %r7304, 25;
	shf.l.wrap.b32 	%r7310, %r7304, %r7303, 25;
	mov.b64 	%rd9543, {%r7310, %r7309};
	xor.b64  	%rd9544, %rd9542, %rd9543;
	and.b64  	%rd9545, %rd9523, %rd9496;
	xor.b64  	%rd9546, %rd9523, %rd9496;
	and.b64  	%rd9547, %rd9546, %rd10292;
	or.b64  	%rd9548, %rd9547, %rd9545;
	add.s64 	%rd9549, %rd9538, %rd9548;
	add.s64 	%rd9550, %rd9549, %rd9544;
	add.s32 	%r7311, %r7711, 3;
	mul.wide.s32 	%rd9551, %r7311, 8;
	add.s64 	%rd9552, %rd9470, %rd9551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7312,%dummy}, %rd9539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7313}, %rd9539;
	}
	shf.r.wrap.b32 	%r7314, %r7313, %r7312, 14;
	shf.r.wrap.b32 	%r7315, %r7312, %r7313, 14;
	mov.b64 	%rd9553, {%r7315, %r7314};
	shf.r.wrap.b32 	%r7316, %r7313, %r7312, 18;
	shf.r.wrap.b32 	%r7317, %r7312, %r7313, 18;
	mov.b64 	%rd9554, {%r7317, %r7316};
	xor.b64  	%rd9555, %rd9554, %rd9553;
	shf.l.wrap.b32 	%r7318, %r7312, %r7313, 23;
	shf.l.wrap.b32 	%r7319, %r7313, %r7312, 23;
	mov.b64 	%rd9556, {%r7319, %r7318};
	xor.b64  	%rd9557, %rd9555, %rd9556;
	xor.b64  	%rd9558, %rd9512, %rd9485;
	and.b64  	%rd9559, %rd9539, %rd9558;
	xor.b64  	%rd9560, %rd9559, %rd9485;
	add.s64 	%rd9561, %rd10303, %rd10296;
	ld.const.u64 	%rd9562, [%rd9552];
	add.s64 	%rd9563, %rd9561, %rd9562;
	add.s64 	%rd9564, %rd9563, %rd9560;
	add.s64 	%rd9565, %rd9564, %rd9557;
	add.s64 	%rd9566, %rd9565, %rd10292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7320,%dummy}, %rd9550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7321}, %rd9550;
	}
	shf.r.wrap.b32 	%r7322, %r7321, %r7320, 28;
	shf.r.wrap.b32 	%r7323, %r7320, %r7321, 28;
	mov.b64 	%rd9567, {%r7323, %r7322};
	shf.l.wrap.b32 	%r7324, %r7320, %r7321, 30;
	shf.l.wrap.b32 	%r7325, %r7321, %r7320, 30;
	mov.b64 	%rd9568, {%r7325, %r7324};
	xor.b64  	%rd9569, %rd9568, %rd9567;
	shf.l.wrap.b32 	%r7326, %r7320, %r7321, 25;
	shf.l.wrap.b32 	%r7327, %r7321, %r7320, 25;
	mov.b64 	%rd9570, {%r7327, %r7326};
	xor.b64  	%rd9571, %rd9569, %rd9570;
	and.b64  	%rd9572, %rd9550, %rd9523;
	xor.b64  	%rd9573, %rd9550, %rd9523;
	and.b64  	%rd9574, %rd9573, %rd9496;
	or.b64  	%rd9575, %rd9574, %rd9572;
	add.s64 	%rd9576, %rd9565, %rd9575;
	add.s64 	%rd9577, %rd9576, %rd9571;
	add.s32 	%r7328, %r7711, 4;
	mul.wide.s32 	%rd9578, %r7328, 8;
	add.s64 	%rd9579, %rd9470, %rd9578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7329,%dummy}, %rd9566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7330}, %rd9566;
	}
	shf.r.wrap.b32 	%r7331, %r7330, %r7329, 14;
	shf.r.wrap.b32 	%r7332, %r7329, %r7330, 14;
	mov.b64 	%rd9580, {%r7332, %r7331};
	shf.r.wrap.b32 	%r7333, %r7330, %r7329, 18;
	shf.r.wrap.b32 	%r7334, %r7329, %r7330, 18;
	mov.b64 	%rd9581, {%r7334, %r7333};
	xor.b64  	%rd9582, %rd9581, %rd9580;
	shf.l.wrap.b32 	%r7335, %r7329, %r7330, 23;
	shf.l.wrap.b32 	%r7336, %r7330, %r7329, 23;
	mov.b64 	%rd9583, {%r7336, %r7335};
	xor.b64  	%rd9584, %rd9582, %rd9583;
	xor.b64  	%rd9585, %rd9539, %rd9512;
	and.b64  	%rd9586, %rd9566, %rd9585;
	xor.b64  	%rd9587, %rd9586, %rd9512;
	add.s64 	%rd9588, %rd9485, %rd10304;
	ld.const.u64 	%rd9589, [%rd9579];
	add.s64 	%rd9590, %rd9588, %rd9589;
	add.s64 	%rd9591, %rd9590, %rd9587;
	add.s64 	%rd9592, %rd9591, %rd9584;
	add.s64 	%rd9593, %rd9592, %rd9496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7337,%dummy}, %rd9577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7338}, %rd9577;
	}
	shf.r.wrap.b32 	%r7339, %r7338, %r7337, 28;
	shf.r.wrap.b32 	%r7340, %r7337, %r7338, 28;
	mov.b64 	%rd9594, {%r7340, %r7339};
	shf.l.wrap.b32 	%r7341, %r7337, %r7338, 30;
	shf.l.wrap.b32 	%r7342, %r7338, %r7337, 30;
	mov.b64 	%rd9595, {%r7342, %r7341};
	xor.b64  	%rd9596, %rd9595, %rd9594;
	shf.l.wrap.b32 	%r7343, %r7337, %r7338, 25;
	shf.l.wrap.b32 	%r7344, %r7338, %r7337, 25;
	mov.b64 	%rd9597, {%r7344, %r7343};
	xor.b64  	%rd9598, %rd9596, %rd9597;
	and.b64  	%rd9599, %rd9577, %rd9550;
	xor.b64  	%rd9600, %rd9577, %rd9550;
	and.b64  	%rd9601, %rd9600, %rd9523;
	or.b64  	%rd9602, %rd9601, %rd9599;
	add.s64 	%rd9603, %rd9592, %rd9602;
	add.s64 	%rd9604, %rd9603, %rd9598;
	add.s32 	%r7345, %r7711, 5;
	mul.wide.s32 	%rd9605, %r7345, 8;
	add.s64 	%rd9606, %rd9470, %rd9605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7346,%dummy}, %rd9593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7347}, %rd9593;
	}
	shf.r.wrap.b32 	%r7348, %r7347, %r7346, 14;
	shf.r.wrap.b32 	%r7349, %r7346, %r7347, 14;
	mov.b64 	%rd9607, {%r7349, %r7348};
	shf.r.wrap.b32 	%r7350, %r7347, %r7346, 18;
	shf.r.wrap.b32 	%r7351, %r7346, %r7347, 18;
	mov.b64 	%rd9608, {%r7351, %r7350};
	xor.b64  	%rd9609, %rd9608, %rd9607;
	shf.l.wrap.b32 	%r7352, %r7346, %r7347, 23;
	shf.l.wrap.b32 	%r7353, %r7347, %r7346, 23;
	mov.b64 	%rd9610, {%r7353, %r7352};
	xor.b64  	%rd9611, %rd9609, %rd9610;
	xor.b64  	%rd9612, %rd9566, %rd9539;
	and.b64  	%rd9613, %rd9593, %rd9612;
	xor.b64  	%rd9614, %rd9613, %rd9539;
	add.s64 	%rd9615, %rd9512, %rd10305;
	ld.const.u64 	%rd9616, [%rd9606];
	add.s64 	%rd9617, %rd9615, %rd9616;
	add.s64 	%rd9618, %rd9617, %rd9614;
	add.s64 	%rd9619, %rd9618, %rd9611;
	add.s64 	%rd9620, %rd9619, %rd9523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7354,%dummy}, %rd9604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7355}, %rd9604;
	}
	shf.r.wrap.b32 	%r7356, %r7355, %r7354, 28;
	shf.r.wrap.b32 	%r7357, %r7354, %r7355, 28;
	mov.b64 	%rd9621, {%r7357, %r7356};
	shf.l.wrap.b32 	%r7358, %r7354, %r7355, 30;
	shf.l.wrap.b32 	%r7359, %r7355, %r7354, 30;
	mov.b64 	%rd9622, {%r7359, %r7358};
	xor.b64  	%rd9623, %rd9622, %rd9621;
	shf.l.wrap.b32 	%r7360, %r7354, %r7355, 25;
	shf.l.wrap.b32 	%r7361, %r7355, %r7354, 25;
	mov.b64 	%rd9624, {%r7361, %r7360};
	xor.b64  	%rd9625, %rd9623, %rd9624;
	and.b64  	%rd9626, %rd9604, %rd9577;
	xor.b64  	%rd9627, %rd9604, %rd9577;
	and.b64  	%rd9628, %rd9627, %rd9550;
	or.b64  	%rd9629, %rd9628, %rd9626;
	add.s64 	%rd9630, %rd9619, %rd9629;
	add.s64 	%rd9631, %rd9630, %rd9625;
	add.s32 	%r7362, %r7711, 6;
	mul.wide.s32 	%rd9632, %r7362, 8;
	add.s64 	%rd9633, %rd9470, %rd9632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7363,%dummy}, %rd9620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7364}, %rd9620;
	}
	shf.r.wrap.b32 	%r7365, %r7364, %r7363, 14;
	shf.r.wrap.b32 	%r7366, %r7363, %r7364, 14;
	mov.b64 	%rd9634, {%r7366, %r7365};
	shf.r.wrap.b32 	%r7367, %r7364, %r7363, 18;
	shf.r.wrap.b32 	%r7368, %r7363, %r7364, 18;
	mov.b64 	%rd9635, {%r7368, %r7367};
	xor.b64  	%rd9636, %rd9635, %rd9634;
	shf.l.wrap.b32 	%r7369, %r7363, %r7364, 23;
	shf.l.wrap.b32 	%r7370, %r7364, %r7363, 23;
	mov.b64 	%rd9637, {%r7370, %r7369};
	xor.b64  	%rd9638, %rd9636, %rd9637;
	xor.b64  	%rd9639, %rd9593, %rd9566;
	and.b64  	%rd9640, %rd9620, %rd9639;
	xor.b64  	%rd9641, %rd9640, %rd9566;
	add.s64 	%rd9642, %rd9539, %rd10306;
	ld.const.u64 	%rd9643, [%rd9633];
	add.s64 	%rd9644, %rd9642, %rd9643;
	add.s64 	%rd9645, %rd9644, %rd9641;
	add.s64 	%rd9646, %rd9645, %rd9638;
	add.s64 	%rd9647, %rd9646, %rd9550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7371,%dummy}, %rd9631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7372}, %rd9631;
	}
	shf.r.wrap.b32 	%r7373, %r7372, %r7371, 28;
	shf.r.wrap.b32 	%r7374, %r7371, %r7372, 28;
	mov.b64 	%rd9648, {%r7374, %r7373};
	shf.l.wrap.b32 	%r7375, %r7371, %r7372, 30;
	shf.l.wrap.b32 	%r7376, %r7372, %r7371, 30;
	mov.b64 	%rd9649, {%r7376, %r7375};
	xor.b64  	%rd9650, %rd9649, %rd9648;
	shf.l.wrap.b32 	%r7377, %r7371, %r7372, 25;
	shf.l.wrap.b32 	%r7378, %r7372, %r7371, 25;
	mov.b64 	%rd9651, {%r7378, %r7377};
	xor.b64  	%rd9652, %rd9650, %rd9651;
	and.b64  	%rd9653, %rd9631, %rd9604;
	xor.b64  	%rd9654, %rd9631, %rd9604;
	and.b64  	%rd9655, %rd9654, %rd9577;
	or.b64  	%rd9656, %rd9655, %rd9653;
	add.s64 	%rd9657, %rd9646, %rd9656;
	add.s64 	%rd9658, %rd9657, %rd9652;
	add.s32 	%r7379, %r7711, 7;
	mul.wide.s32 	%rd9659, %r7379, 8;
	add.s64 	%rd9660, %rd9470, %rd9659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7380,%dummy}, %rd9647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7381}, %rd9647;
	}
	shf.r.wrap.b32 	%r7382, %r7381, %r7380, 14;
	shf.r.wrap.b32 	%r7383, %r7380, %r7381, 14;
	mov.b64 	%rd9661, {%r7383, %r7382};
	shf.r.wrap.b32 	%r7384, %r7381, %r7380, 18;
	shf.r.wrap.b32 	%r7385, %r7380, %r7381, 18;
	mov.b64 	%rd9662, {%r7385, %r7384};
	xor.b64  	%rd9663, %rd9662, %rd9661;
	shf.l.wrap.b32 	%r7386, %r7380, %r7381, 23;
	shf.l.wrap.b32 	%r7387, %r7381, %r7380, 23;
	mov.b64 	%rd9664, {%r7387, %r7386};
	xor.b64  	%rd9665, %rd9663, %rd9664;
	xor.b64  	%rd9666, %rd9620, %rd9593;
	and.b64  	%rd9667, %rd9647, %rd9666;
	xor.b64  	%rd9668, %rd9667, %rd9593;
	add.s64 	%rd9669, %rd9566, %rd10307;
	ld.const.u64 	%rd9670, [%rd9660];
	add.s64 	%rd9671, %rd9669, %rd9670;
	add.s64 	%rd9672, %rd9671, %rd9668;
	add.s64 	%rd9673, %rd9672, %rd9665;
	add.s64 	%rd9674, %rd9673, %rd9577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7388,%dummy}, %rd9658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7389}, %rd9658;
	}
	shf.r.wrap.b32 	%r7390, %r7389, %r7388, 28;
	shf.r.wrap.b32 	%r7391, %r7388, %r7389, 28;
	mov.b64 	%rd9675, {%r7391, %r7390};
	shf.l.wrap.b32 	%r7392, %r7388, %r7389, 30;
	shf.l.wrap.b32 	%r7393, %r7389, %r7388, 30;
	mov.b64 	%rd9676, {%r7393, %r7392};
	xor.b64  	%rd9677, %rd9676, %rd9675;
	shf.l.wrap.b32 	%r7394, %r7388, %r7389, 25;
	shf.l.wrap.b32 	%r7395, %r7389, %r7388, 25;
	mov.b64 	%rd9678, {%r7395, %r7394};
	xor.b64  	%rd9679, %rd9677, %rd9678;
	and.b64  	%rd9680, %rd9658, %rd9631;
	xor.b64  	%rd9681, %rd9658, %rd9631;
	and.b64  	%rd9682, %rd9681, %rd9604;
	or.b64  	%rd9683, %rd9682, %rd9680;
	add.s64 	%rd9684, %rd9673, %rd9683;
	add.s64 	%rd9685, %rd9684, %rd9679;
	add.s32 	%r7396, %r7711, 8;
	mul.wide.s32 	%rd9686, %r7396, 8;
	add.s64 	%rd9687, %rd9470, %rd9686;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7397,%dummy}, %rd9674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7398}, %rd9674;
	}
	shf.r.wrap.b32 	%r7399, %r7398, %r7397, 14;
	shf.r.wrap.b32 	%r7400, %r7397, %r7398, 14;
	mov.b64 	%rd9688, {%r7400, %r7399};
	shf.r.wrap.b32 	%r7401, %r7398, %r7397, 18;
	shf.r.wrap.b32 	%r7402, %r7397, %r7398, 18;
	mov.b64 	%rd9689, {%r7402, %r7401};
	xor.b64  	%rd9690, %rd9689, %rd9688;
	shf.l.wrap.b32 	%r7403, %r7397, %r7398, 23;
	shf.l.wrap.b32 	%r7404, %r7398, %r7397, 23;
	mov.b64 	%rd9691, {%r7404, %r7403};
	xor.b64  	%rd9692, %rd9690, %rd9691;
	xor.b64  	%rd9693, %rd9647, %rd9620;
	and.b64  	%rd9694, %rd9674, %rd9693;
	xor.b64  	%rd9695, %rd9694, %rd9620;
	add.s64 	%rd9696, %rd9593, %rd10291;
	ld.const.u64 	%rd9697, [%rd9687];
	add.s64 	%rd9698, %rd9696, %rd9697;
	add.s64 	%rd9699, %rd9698, %rd9695;
	add.s64 	%rd9700, %rd9699, %rd9692;
	add.s64 	%rd9701, %rd9700, %rd9604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7405,%dummy}, %rd9685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7406}, %rd9685;
	}
	shf.r.wrap.b32 	%r7407, %r7406, %r7405, 28;
	shf.r.wrap.b32 	%r7408, %r7405, %r7406, 28;
	mov.b64 	%rd9702, {%r7408, %r7407};
	shf.l.wrap.b32 	%r7409, %r7405, %r7406, 30;
	shf.l.wrap.b32 	%r7410, %r7406, %r7405, 30;
	mov.b64 	%rd9703, {%r7410, %r7409};
	xor.b64  	%rd9704, %rd9703, %rd9702;
	shf.l.wrap.b32 	%r7411, %r7405, %r7406, 25;
	shf.l.wrap.b32 	%r7412, %r7406, %r7405, 25;
	mov.b64 	%rd9705, {%r7412, %r7411};
	xor.b64  	%rd9706, %rd9704, %rd9705;
	and.b64  	%rd9707, %rd9685, %rd9658;
	xor.b64  	%rd9708, %rd9685, %rd9658;
	and.b64  	%rd9709, %rd9708, %rd9631;
	or.b64  	%rd9710, %rd9709, %rd9707;
	add.s64 	%rd9711, %rd9700, %rd9710;
	add.s64 	%rd9712, %rd9711, %rd9706;
	add.s32 	%r7413, %r7711, 9;
	mul.wide.s32 	%rd9713, %r7413, 8;
	add.s64 	%rd9714, %rd9470, %rd9713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7414,%dummy}, %rd9701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7415}, %rd9701;
	}
	shf.r.wrap.b32 	%r7416, %r7415, %r7414, 14;
	shf.r.wrap.b32 	%r7417, %r7414, %r7415, 14;
	mov.b64 	%rd9715, {%r7417, %r7416};
	shf.r.wrap.b32 	%r7418, %r7415, %r7414, 18;
	shf.r.wrap.b32 	%r7419, %r7414, %r7415, 18;
	mov.b64 	%rd9716, {%r7419, %r7418};
	xor.b64  	%rd9717, %rd9716, %rd9715;
	shf.l.wrap.b32 	%r7420, %r7414, %r7415, 23;
	shf.l.wrap.b32 	%r7421, %r7415, %r7414, 23;
	mov.b64 	%rd9718, {%r7421, %r7420};
	xor.b64  	%rd9719, %rd9717, %rd9718;
	xor.b64  	%rd9720, %rd9674, %rd9647;
	and.b64  	%rd9721, %rd9701, %rd9720;
	xor.b64  	%rd9722, %rd9721, %rd9647;
	add.s64 	%rd9723, %rd9620, %rd10290;
	ld.const.u64 	%rd9724, [%rd9714];
	add.s64 	%rd9725, %rd9723, %rd9724;
	add.s64 	%rd9726, %rd9725, %rd9722;
	add.s64 	%rd9727, %rd9726, %rd9719;
	add.s64 	%rd9728, %rd9727, %rd9631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7422,%dummy}, %rd9712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7423}, %rd9712;
	}
	shf.r.wrap.b32 	%r7424, %r7423, %r7422, 28;
	shf.r.wrap.b32 	%r7425, %r7422, %r7423, 28;
	mov.b64 	%rd9729, {%r7425, %r7424};
	shf.l.wrap.b32 	%r7426, %r7422, %r7423, 30;
	shf.l.wrap.b32 	%r7427, %r7423, %r7422, 30;
	mov.b64 	%rd9730, {%r7427, %r7426};
	xor.b64  	%rd9731, %rd9730, %rd9729;
	shf.l.wrap.b32 	%r7428, %r7422, %r7423, 25;
	shf.l.wrap.b32 	%r7429, %r7423, %r7422, 25;
	mov.b64 	%rd9732, {%r7429, %r7428};
	xor.b64  	%rd9733, %rd9731, %rd9732;
	and.b64  	%rd9734, %rd9712, %rd9685;
	xor.b64  	%rd9735, %rd9712, %rd9685;
	and.b64  	%rd9736, %rd9735, %rd9658;
	or.b64  	%rd9737, %rd9736, %rd9734;
	add.s64 	%rd9738, %rd9727, %rd9737;
	add.s64 	%rd9739, %rd9738, %rd9733;
	add.s32 	%r7430, %r7711, 10;
	mul.wide.s32 	%rd9740, %r7430, 8;
	add.s64 	%rd9741, %rd9470, %rd9740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7431,%dummy}, %rd9728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7432}, %rd9728;
	}
	shf.r.wrap.b32 	%r7433, %r7432, %r7431, 14;
	shf.r.wrap.b32 	%r7434, %r7431, %r7432, 14;
	mov.b64 	%rd9742, {%r7434, %r7433};
	shf.r.wrap.b32 	%r7435, %r7432, %r7431, 18;
	shf.r.wrap.b32 	%r7436, %r7431, %r7432, 18;
	mov.b64 	%rd9743, {%r7436, %r7435};
	xor.b64  	%rd9744, %rd9743, %rd9742;
	shf.l.wrap.b32 	%r7437, %r7431, %r7432, 23;
	shf.l.wrap.b32 	%r7438, %r7432, %r7431, 23;
	mov.b64 	%rd9745, {%r7438, %r7437};
	xor.b64  	%rd9746, %rd9744, %rd9745;
	xor.b64  	%rd9747, %rd9701, %rd9674;
	and.b64  	%rd9748, %rd9728, %rd9747;
	xor.b64  	%rd9749, %rd9748, %rd9674;
	add.s64 	%rd9750, %rd9647, %rd10289;
	ld.const.u64 	%rd9751, [%rd9741];
	add.s64 	%rd9752, %rd9750, %rd9751;
	add.s64 	%rd9753, %rd9752, %rd9749;
	add.s64 	%rd9754, %rd9753, %rd9746;
	add.s64 	%rd9755, %rd9754, %rd9658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7439,%dummy}, %rd9739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7440}, %rd9739;
	}
	shf.r.wrap.b32 	%r7441, %r7440, %r7439, 28;
	shf.r.wrap.b32 	%r7442, %r7439, %r7440, 28;
	mov.b64 	%rd9756, {%r7442, %r7441};
	shf.l.wrap.b32 	%r7443, %r7439, %r7440, 30;
	shf.l.wrap.b32 	%r7444, %r7440, %r7439, 30;
	mov.b64 	%rd9757, {%r7444, %r7443};
	xor.b64  	%rd9758, %rd9757, %rd9756;
	shf.l.wrap.b32 	%r7445, %r7439, %r7440, 25;
	shf.l.wrap.b32 	%r7446, %r7440, %r7439, 25;
	mov.b64 	%rd9759, {%r7446, %r7445};
	xor.b64  	%rd9760, %rd9758, %rd9759;
	and.b64  	%rd9761, %rd9739, %rd9712;
	xor.b64  	%rd9762, %rd9739, %rd9712;
	and.b64  	%rd9763, %rd9762, %rd9685;
	or.b64  	%rd9764, %rd9763, %rd9761;
	add.s64 	%rd9765, %rd9754, %rd9764;
	add.s64 	%rd9766, %rd9765, %rd9760;
	add.s32 	%r7447, %r7711, 11;
	mul.wide.s32 	%rd9767, %r7447, 8;
	add.s64 	%rd9768, %rd9470, %rd9767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7448,%dummy}, %rd9755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7449}, %rd9755;
	}
	shf.r.wrap.b32 	%r7450, %r7449, %r7448, 14;
	shf.r.wrap.b32 	%r7451, %r7448, %r7449, 14;
	mov.b64 	%rd9769, {%r7451, %r7450};
	shf.r.wrap.b32 	%r7452, %r7449, %r7448, 18;
	shf.r.wrap.b32 	%r7453, %r7448, %r7449, 18;
	mov.b64 	%rd9770, {%r7453, %r7452};
	xor.b64  	%rd9771, %rd9770, %rd9769;
	shf.l.wrap.b32 	%r7454, %r7448, %r7449, 23;
	shf.l.wrap.b32 	%r7455, %r7449, %r7448, 23;
	mov.b64 	%rd9772, {%r7455, %r7454};
	xor.b64  	%rd9773, %rd9771, %rd9772;
	xor.b64  	%rd9774, %rd9728, %rd9701;
	and.b64  	%rd9775, %rd9755, %rd9774;
	xor.b64  	%rd9776, %rd9775, %rd9701;
	add.s64 	%rd9777, %rd9674, %rd10288;
	ld.const.u64 	%rd9778, [%rd9768];
	add.s64 	%rd9779, %rd9777, %rd9778;
	add.s64 	%rd9780, %rd9779, %rd9776;
	add.s64 	%rd9781, %rd9780, %rd9773;
	add.s64 	%rd9782, %rd9781, %rd9685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7456,%dummy}, %rd9766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7457}, %rd9766;
	}
	shf.r.wrap.b32 	%r7458, %r7457, %r7456, 28;
	shf.r.wrap.b32 	%r7459, %r7456, %r7457, 28;
	mov.b64 	%rd9783, {%r7459, %r7458};
	shf.l.wrap.b32 	%r7460, %r7456, %r7457, 30;
	shf.l.wrap.b32 	%r7461, %r7457, %r7456, 30;
	mov.b64 	%rd9784, {%r7461, %r7460};
	xor.b64  	%rd9785, %rd9784, %rd9783;
	shf.l.wrap.b32 	%r7462, %r7456, %r7457, 25;
	shf.l.wrap.b32 	%r7463, %r7457, %r7456, 25;
	mov.b64 	%rd9786, {%r7463, %r7462};
	xor.b64  	%rd9787, %rd9785, %rd9786;
	and.b64  	%rd9788, %rd9766, %rd9739;
	xor.b64  	%rd9789, %rd9766, %rd9739;
	and.b64  	%rd9790, %rd9789, %rd9712;
	or.b64  	%rd9791, %rd9790, %rd9788;
	add.s64 	%rd9792, %rd9781, %rd9791;
	add.s64 	%rd9793, %rd9792, %rd9787;
	add.s32 	%r7464, %r7711, 12;
	mul.wide.s32 	%rd9794, %r7464, 8;
	add.s64 	%rd9795, %rd9470, %rd9794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7465,%dummy}, %rd9782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7466}, %rd9782;
	}
	shf.r.wrap.b32 	%r7467, %r7466, %r7465, 14;
	shf.r.wrap.b32 	%r7468, %r7465, %r7466, 14;
	mov.b64 	%rd9796, {%r7468, %r7467};
	shf.r.wrap.b32 	%r7469, %r7466, %r7465, 18;
	shf.r.wrap.b32 	%r7470, %r7465, %r7466, 18;
	mov.b64 	%rd9797, {%r7470, %r7469};
	xor.b64  	%rd9798, %rd9797, %rd9796;
	shf.l.wrap.b32 	%r7471, %r7465, %r7466, 23;
	shf.l.wrap.b32 	%r7472, %r7466, %r7465, 23;
	mov.b64 	%rd9799, {%r7472, %r7471};
	xor.b64  	%rd9800, %rd9798, %rd9799;
	xor.b64  	%rd9801, %rd9755, %rd9728;
	and.b64  	%rd9802, %rd9782, %rd9801;
	xor.b64  	%rd9803, %rd9802, %rd9728;
	add.s64 	%rd9804, %rd9701, %rd10287;
	ld.const.u64 	%rd9805, [%rd9795];
	add.s64 	%rd9806, %rd9804, %rd9805;
	add.s64 	%rd9807, %rd9806, %rd9803;
	add.s64 	%rd9808, %rd9807, %rd9800;
	add.s64 	%rd10299, %rd9808, %rd9712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7473,%dummy}, %rd9793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7474}, %rd9793;
	}
	shf.r.wrap.b32 	%r7475, %r7474, %r7473, 28;
	shf.r.wrap.b32 	%r7476, %r7473, %r7474, 28;
	mov.b64 	%rd9809, {%r7476, %r7475};
	shf.l.wrap.b32 	%r7477, %r7473, %r7474, 30;
	shf.l.wrap.b32 	%r7478, %r7474, %r7473, 30;
	mov.b64 	%rd9810, {%r7478, %r7477};
	xor.b64  	%rd9811, %rd9810, %rd9809;
	shf.l.wrap.b32 	%r7479, %r7473, %r7474, 25;
	shf.l.wrap.b32 	%r7480, %r7474, %r7473, 25;
	mov.b64 	%rd9812, {%r7480, %r7479};
	xor.b64  	%rd9813, %rd9811, %rd9812;
	and.b64  	%rd9814, %rd9793, %rd9766;
	xor.b64  	%rd9815, %rd9793, %rd9766;
	and.b64  	%rd9816, %rd9815, %rd9739;
	or.b64  	%rd9817, %rd9816, %rd9814;
	add.s64 	%rd9818, %rd9808, %rd9817;
	add.s64 	%rd10295, %rd9818, %rd9813;
	add.s32 	%r7481, %r7711, 13;
	mul.wide.s32 	%rd9819, %r7481, 8;
	add.s64 	%rd9820, %rd9470, %rd9819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7482,%dummy}, %rd10299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7483}, %rd10299;
	}
	shf.r.wrap.b32 	%r7484, %r7483, %r7482, 14;
	shf.r.wrap.b32 	%r7485, %r7482, %r7483, 14;
	mov.b64 	%rd9821, {%r7485, %r7484};
	shf.r.wrap.b32 	%r7486, %r7483, %r7482, 18;
	shf.r.wrap.b32 	%r7487, %r7482, %r7483, 18;
	mov.b64 	%rd9822, {%r7487, %r7486};
	xor.b64  	%rd9823, %rd9822, %rd9821;
	shf.l.wrap.b32 	%r7488, %r7482, %r7483, 23;
	shf.l.wrap.b32 	%r7489, %r7483, %r7482, 23;
	mov.b64 	%rd9824, {%r7489, %r7488};
	xor.b64  	%rd9825, %rd9823, %rd9824;
	xor.b64  	%rd9826, %rd9782, %rd9755;
	and.b64  	%rd9827, %rd10299, %rd9826;
	xor.b64  	%rd9828, %rd9827, %rd9755;
	add.s64 	%rd9829, %rd9728, %rd10286;
	ld.const.u64 	%rd9830, [%rd9820];
	add.s64 	%rd9831, %rd9829, %rd9830;
	add.s64 	%rd9832, %rd9831, %rd9828;
	add.s64 	%rd9833, %rd9832, %rd9825;
	add.s64 	%rd10298, %rd9833, %rd9739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7490,%dummy}, %rd10295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7491}, %rd10295;
	}
	shf.r.wrap.b32 	%r7492, %r7491, %r7490, 28;
	shf.r.wrap.b32 	%r7493, %r7490, %r7491, 28;
	mov.b64 	%rd9834, {%r7493, %r7492};
	shf.l.wrap.b32 	%r7494, %r7490, %r7491, 30;
	shf.l.wrap.b32 	%r7495, %r7491, %r7490, 30;
	mov.b64 	%rd9835, {%r7495, %r7494};
	xor.b64  	%rd9836, %rd9835, %rd9834;
	shf.l.wrap.b32 	%r7496, %r7490, %r7491, 25;
	shf.l.wrap.b32 	%r7497, %r7491, %r7490, 25;
	mov.b64 	%rd9837, {%r7497, %r7496};
	xor.b64  	%rd9838, %rd9836, %rd9837;
	and.b64  	%rd9839, %rd10295, %rd9793;
	xor.b64  	%rd9840, %rd10295, %rd9793;
	and.b64  	%rd9841, %rd9840, %rd9766;
	or.b64  	%rd9842, %rd9841, %rd9839;
	add.s64 	%rd9843, %rd9833, %rd9842;
	add.s64 	%rd10294, %rd9843, %rd9838;
	add.s32 	%r7498, %r7711, 14;
	mul.wide.s32 	%rd9844, %r7498, 8;
	add.s64 	%rd9845, %rd9470, %rd9844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7499,%dummy}, %rd10298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7500}, %rd10298;
	}
	shf.r.wrap.b32 	%r7501, %r7500, %r7499, 14;
	shf.r.wrap.b32 	%r7502, %r7499, %r7500, 14;
	mov.b64 	%rd9846, {%r7502, %r7501};
	shf.r.wrap.b32 	%r7503, %r7500, %r7499, 18;
	shf.r.wrap.b32 	%r7504, %r7499, %r7500, 18;
	mov.b64 	%rd9847, {%r7504, %r7503};
	xor.b64  	%rd9848, %rd9847, %rd9846;
	shf.l.wrap.b32 	%r7505, %r7499, %r7500, 23;
	shf.l.wrap.b32 	%r7506, %r7500, %r7499, 23;
	mov.b64 	%rd9849, {%r7506, %r7505};
	xor.b64  	%rd9850, %rd9848, %rd9849;
	xor.b64  	%rd9851, %rd10299, %rd9782;
	and.b64  	%rd9852, %rd10298, %rd9851;
	xor.b64  	%rd9853, %rd9852, %rd9782;
	add.s64 	%rd9854, %rd9755, %rd10285;
	ld.const.u64 	%rd9855, [%rd9845];
	add.s64 	%rd9856, %rd9854, %rd9855;
	add.s64 	%rd9857, %rd9856, %rd9853;
	add.s64 	%rd9858, %rd9857, %rd9850;
	add.s64 	%rd10297, %rd9858, %rd9766;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7507,%dummy}, %rd10294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7508}, %rd10294;
	}
	shf.r.wrap.b32 	%r7509, %r7508, %r7507, 28;
	shf.r.wrap.b32 	%r7510, %r7507, %r7508, 28;
	mov.b64 	%rd9859, {%r7510, %r7509};
	shf.l.wrap.b32 	%r7511, %r7507, %r7508, 30;
	shf.l.wrap.b32 	%r7512, %r7508, %r7507, 30;
	mov.b64 	%rd9860, {%r7512, %r7511};
	xor.b64  	%rd9861, %rd9860, %rd9859;
	shf.l.wrap.b32 	%r7513, %r7507, %r7508, 25;
	shf.l.wrap.b32 	%r7514, %r7508, %r7507, 25;
	mov.b64 	%rd9862, {%r7514, %r7513};
	xor.b64  	%rd9863, %rd9861, %rd9862;
	and.b64  	%rd9864, %rd10294, %rd10295;
	xor.b64  	%rd9865, %rd10294, %rd10295;
	and.b64  	%rd9866, %rd9865, %rd9793;
	or.b64  	%rd9867, %rd9866, %rd9864;
	add.s64 	%rd9868, %rd9858, %rd9867;
	add.s64 	%rd10293, %rd9868, %rd9863;
	add.s32 	%r7515, %r7711, 15;
	mul.wide.s32 	%rd9869, %r7515, 8;
	add.s64 	%rd9870, %rd9470, %rd9869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7516,%dummy}, %rd10297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7517}, %rd10297;
	}
	shf.r.wrap.b32 	%r7518, %r7517, %r7516, 14;
	shf.r.wrap.b32 	%r7519, %r7516, %r7517, 14;
	mov.b64 	%rd9871, {%r7519, %r7518};
	shf.r.wrap.b32 	%r7520, %r7517, %r7516, 18;
	shf.r.wrap.b32 	%r7521, %r7516, %r7517, 18;
	mov.b64 	%rd9872, {%r7521, %r7520};
	xor.b64  	%rd9873, %rd9872, %rd9871;
	shf.l.wrap.b32 	%r7522, %r7516, %r7517, 23;
	shf.l.wrap.b32 	%r7523, %r7517, %r7516, 23;
	mov.b64 	%rd9874, {%r7523, %r7522};
	xor.b64  	%rd9875, %rd9873, %rd9874;
	xor.b64  	%rd9876, %rd10298, %rd10299;
	and.b64  	%rd9877, %rd10297, %rd9876;
	xor.b64  	%rd9878, %rd9877, %rd10299;
	add.s64 	%rd9879, %rd9782, %rd10284;
	ld.const.u64 	%rd9880, [%rd9870];
	add.s64 	%rd9881, %rd9879, %rd9880;
	add.s64 	%rd9882, %rd9881, %rd9878;
	add.s64 	%rd9883, %rd9882, %rd9875;
	add.s64 	%rd10296, %rd9883, %rd9793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7524,%dummy}, %rd10293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7525}, %rd10293;
	}
	shf.r.wrap.b32 	%r7526, %r7525, %r7524, 28;
	shf.r.wrap.b32 	%r7527, %r7524, %r7525, 28;
	mov.b64 	%rd9884, {%r7527, %r7526};
	shf.l.wrap.b32 	%r7528, %r7524, %r7525, 30;
	shf.l.wrap.b32 	%r7529, %r7525, %r7524, 30;
	mov.b64 	%rd9885, {%r7529, %r7528};
	xor.b64  	%rd9886, %rd9885, %rd9884;
	shf.l.wrap.b32 	%r7530, %r7524, %r7525, 25;
	shf.l.wrap.b32 	%r7531, %r7525, %r7524, 25;
	mov.b64 	%rd9887, {%r7531, %r7530};
	xor.b64  	%rd9888, %rd9886, %rd9887;
	and.b64  	%rd9889, %rd10293, %rd10294;
	xor.b64  	%rd9890, %rd10293, %rd10294;
	and.b64  	%rd9891, %rd9890, %rd10295;
	or.b64  	%rd9892, %rd9891, %rd9889;
	add.s64 	%rd9893, %rd9883, %rd9892;
	add.s64 	%rd10292, %rd9893, %rd9888;
	add.s32 	%r7711, %r7711, 16;
	setp.lt.s32	%p65, %r7711, 80;
	@%p65 bra 	BB3_35;
	bra.uni 	BB3_36;

BB3_2:
	ld.global.u32 	%r432, [%rd893];
	// inline asm
	prmt.b32 %r7616, %r432, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r434, [%rd893+4];
	// inline asm
	prmt.b32 %r7615, %r434, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r436, [%rd893+8];
	// inline asm
	prmt.b32 %r7614, %r436, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r438, [%rd893+12];
	// inline asm
	prmt.b32 %r7613, %r438, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r440, [%rd893+16];
	// inline asm
	prmt.b32 %r7620, %r440, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r442, [%rd893+20];
	// inline asm
	prmt.b32 %r7619, %r442, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r444, [%rd893+24];
	// inline asm
	prmt.b32 %r7618, %r444, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r446, [%rd893+28];
	// inline asm
	prmt.b32 %r7617, %r446, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r448, [%rd893+32];
	// inline asm
	prmt.b32 %r7624, %r448, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r450, [%rd893+36];
	// inline asm
	prmt.b32 %r7623, %r450, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r452, [%rd893+40];
	// inline asm
	prmt.b32 %r7622, %r452, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r454, [%rd893+44];
	// inline asm
	prmt.b32 %r7621, %r454, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r456, [%rd893+48];
	// inline asm
	prmt.b32 %r7628, %r456, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r458, [%rd893+52];
	// inline asm
	prmt.b32 %r7627, %r458, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r460, [%rd893+56];
	// inline asm
	prmt.b32 %r7626, %r460, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r462, [%rd893+60];
	// inline asm
	prmt.b32 %r7625, %r462, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r464, [%rd893+64];
	// inline asm
	prmt.b32 %r7632, %r464, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r466, [%rd893+68];
	// inline asm
	prmt.b32 %r7631, %r466, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r468, [%rd893+72];
	// inline asm
	prmt.b32 %r7630, %r468, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r470, [%rd893+76];
	// inline asm
	prmt.b32 %r7629, %r470, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r472, [%rd893+80];
	// inline asm
	prmt.b32 %r7636, %r472, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r474, [%rd893+84];
	// inline asm
	prmt.b32 %r7635, %r474, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r476, [%rd893+88];
	// inline asm
	prmt.b32 %r7634, %r476, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r478, [%rd893+92];
	// inline asm
	prmt.b32 %r7633, %r478, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r480, [%rd893+96];
	// inline asm
	prmt.b32 %r7640, %r480, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r482, [%rd893+100];
	// inline asm
	prmt.b32 %r7639, %r482, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r484, [%rd893+104];
	// inline asm
	prmt.b32 %r7638, %r484, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r486, [%rd893+108];
	// inline asm
	prmt.b32 %r7637, %r486, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r488, [%rd893+112];
	// inline asm
	prmt.b32 %r7644, %r488, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r490, [%rd893+116];
	// inline asm
	prmt.b32 %r7643, %r490, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r492, [%rd893+120];
	// inline asm
	prmt.b32 %r7642, %r492, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r494, [%rd893+124];
	// inline asm
	prmt.b32 %r7641, %r494, 0, 0x0123;
	// inline asm
	ld.const.u64 	%rd10144, [k_sha512];
	ld.const.u64 	%rd10143, [k_sha512+8];
	ld.const.u64 	%rd10142, [k_sha512+16];
	ld.const.u64 	%rd10141, [k_sha512+24];
	ld.const.u64 	%rd10140, [k_sha512+32];
	ld.const.u64 	%rd10139, [k_sha512+40];
	ld.const.u64 	%rd10138, [k_sha512+48];
	ld.const.u64 	%rd10137, [k_sha512+56];
	ld.const.u64 	%rd10136, [k_sha512+64];
	ld.const.u64 	%rd10135, [k_sha512+72];
	ld.const.u64 	%rd10134, [k_sha512+80];
	ld.const.u64 	%rd10133, [k_sha512+88];
	ld.const.u64 	%rd10132, [k_sha512+96];
	ld.const.u64 	%rd10131, [k_sha512+104];
	ld.const.u64 	%rd10130, [k_sha512+112];
	ld.const.u64 	%rd10129, [k_sha512+120];
	bra.uni 	BB3_16;

BB3_5:
	// inline asm
	prmt.b32 %r7580, %r38, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7579, %r39, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7578, %r40, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7577, %r41, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7576, %r42, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7575, %r43, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7574, %r44, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7573, %r45, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7572, %r46, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7571, %r47, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7570, %r48, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7569, %r49, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7568, %r50, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7567, %r51, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7566, %r52, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7565, %r53, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7564, %r54, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7563, %r55, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7562, %r56, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7561, %r57, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7560, %r58, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7559, %r59, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7558, %r60, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7557, %r61, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7556, %r62, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7555, %r63, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7554, %r64, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7553, %r65, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7552, %r66, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7551, %r67, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7550, %r68, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r7549, %r69, 0, 0x0123;
	// inline asm
	sub.s32 	%r594, %r2, %r7546;
	add.s32 	%r102, %r594, %r7545;
	setp.ne.s32	%p4, %r594, 128;
	@%p4 bra 	BB3_9;

	mov.b64	%rd10055, {%r7579, %r7580};
	mov.b64	%rd10056, {%r7577, %r7578};
	mov.b64	%rd10057, {%r7575, %r7576};
	mov.b64	%rd10058, {%r7573, %r7574};
	mov.b64	%rd10059, {%r7571, %r7572};
	mov.b64	%rd10060, {%r7569, %r7570};
	mov.b64	%rd10061, {%r7567, %r7568};
	mov.b64	%rd10062, {%r7565, %r7566};
	mov.b64	%rd10046, {%r7563, %r7564};
	mov.b64	%rd10045, {%r7561, %r7562};
	mov.b64	%rd10044, {%r7559, %r7560};
	mov.b64	%rd10043, {%r7557, %r7558};
	mov.b64	%rd10042, {%r7555, %r7556};
	mov.b64	%rd10041, {%r7553, %r7554};
	mov.b64	%rd10040, {%r7551, %r7552};
	mov.b64	%rd10039, {%r7549, %r7550};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r596,%dummy}, %rd37;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r597}, %rd37;
	}
	shf.r.wrap.b32 	%r598, %r597, %r596, 18;
	shf.r.wrap.b32 	%r599, %r596, %r597, 18;
	mov.b64 	%rd970, {%r599, %r598};
	shf.r.wrap.b32 	%r600, %r597, %r596, 14;
	shf.r.wrap.b32 	%r601, %r596, %r597, 14;
	mov.b64 	%rd971, {%r601, %r600};
	xor.b64  	%rd972, %rd970, %rd971;
	shf.l.wrap.b32 	%r602, %r596, %r597, 23;
	shf.l.wrap.b32 	%r603, %r597, %r596, 23;
	mov.b64 	%rd973, {%r603, %r602};
	xor.b64  	%rd974, %rd972, %rd973;
	xor.b64  	%rd975, %rd36, %rd35;
	and.b64  	%rd976, %rd975, %rd37;
	xor.b64  	%rd977, %rd976, %rd35;
	add.s64 	%rd978, %rd34, %rd10144;
	add.s64 	%rd979, %rd978, %rd977;
	add.s64 	%rd980, %rd979, %rd10055;
	add.s64 	%rd981, %rd980, %rd974;
	add.s64 	%rd982, %rd981, %rd38;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r604}, %rd41;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r605,%dummy}, %rd41;
	}
	shf.l.wrap.b32 	%r606, %r605, %r604, 30;
	shf.l.wrap.b32 	%r607, %r604, %r605, 30;
	mov.b64 	%rd983, {%r607, %r606};
	shf.r.wrap.b32 	%r608, %r604, %r605, 28;
	shf.r.wrap.b32 	%r609, %r605, %r604, 28;
	mov.b64 	%rd984, {%r609, %r608};
	xor.b64  	%rd985, %rd983, %rd984;
	shf.l.wrap.b32 	%r610, %r605, %r604, 25;
	shf.l.wrap.b32 	%r611, %r604, %r605, 25;
	mov.b64 	%rd986, {%r611, %r610};
	xor.b64  	%rd987, %rd985, %rd986;
	xor.b64  	%rd988, %rd41, %rd40;
	and.b64  	%rd989, %rd988, %rd39;
	and.b64  	%rd990, %rd41, %rd40;
	or.b64  	%rd991, %rd989, %rd990;
	add.s64 	%rd992, %rd981, %rd991;
	add.s64 	%rd993, %rd992, %rd987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r612,%dummy}, %rd982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r613}, %rd982;
	}
	shf.r.wrap.b32 	%r614, %r613, %r612, 14;
	shf.r.wrap.b32 	%r615, %r612, %r613, 14;
	mov.b64 	%rd994, {%r615, %r614};
	shf.r.wrap.b32 	%r616, %r613, %r612, 18;
	shf.r.wrap.b32 	%r617, %r612, %r613, 18;
	mov.b64 	%rd995, {%r617, %r616};
	xor.b64  	%rd996, %rd995, %rd994;
	shf.l.wrap.b32 	%r618, %r612, %r613, 23;
	shf.l.wrap.b32 	%r619, %r613, %r612, 23;
	mov.b64 	%rd997, {%r619, %r618};
	xor.b64  	%rd998, %rd996, %rd997;
	xor.b64  	%rd999, %rd37, %rd36;
	and.b64  	%rd1000, %rd982, %rd999;
	xor.b64  	%rd1001, %rd1000, %rd36;
	add.s64 	%rd1002, %rd35, %rd10143;
	add.s64 	%rd1003, %rd1002, %rd10056;
	add.s64 	%rd1004, %rd1003, %rd1001;
	add.s64 	%rd1005, %rd1004, %rd998;
	add.s64 	%rd1006, %rd1005, %rd39;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r620,%dummy}, %rd993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r621}, %rd993;
	}
	shf.r.wrap.b32 	%r622, %r621, %r620, 28;
	shf.r.wrap.b32 	%r623, %r620, %r621, 28;
	mov.b64 	%rd1007, {%r623, %r622};
	shf.l.wrap.b32 	%r624, %r620, %r621, 30;
	shf.l.wrap.b32 	%r625, %r621, %r620, 30;
	mov.b64 	%rd1008, {%r625, %r624};
	xor.b64  	%rd1009, %rd1008, %rd1007;
	shf.l.wrap.b32 	%r626, %r620, %r621, 25;
	shf.l.wrap.b32 	%r627, %r621, %r620, 25;
	mov.b64 	%rd1010, {%r627, %r626};
	xor.b64  	%rd1011, %rd1009, %rd1010;
	and.b64  	%rd1012, %rd993, %rd41;
	xor.b64  	%rd1013, %rd993, %rd41;
	and.b64  	%rd1014, %rd1013, %rd40;
	or.b64  	%rd1015, %rd1014, %rd1012;
	add.s64 	%rd1016, %rd1005, %rd1015;
	add.s64 	%rd1017, %rd1016, %rd1011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r628,%dummy}, %rd1006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r629}, %rd1006;
	}
	shf.r.wrap.b32 	%r630, %r629, %r628, 14;
	shf.r.wrap.b32 	%r631, %r628, %r629, 14;
	mov.b64 	%rd1018, {%r631, %r630};
	shf.r.wrap.b32 	%r632, %r629, %r628, 18;
	shf.r.wrap.b32 	%r633, %r628, %r629, 18;
	mov.b64 	%rd1019, {%r633, %r632};
	xor.b64  	%rd1020, %rd1019, %rd1018;
	shf.l.wrap.b32 	%r634, %r628, %r629, 23;
	shf.l.wrap.b32 	%r635, %r629, %r628, 23;
	mov.b64 	%rd1021, {%r635, %r634};
	xor.b64  	%rd1022, %rd1020, %rd1021;
	xor.b64  	%rd1023, %rd982, %rd37;
	and.b64  	%rd1024, %rd1006, %rd1023;
	xor.b64  	%rd1025, %rd1024, %rd37;
	add.s64 	%rd1026, %rd36, %rd10142;
	add.s64 	%rd1027, %rd1026, %rd10057;
	add.s64 	%rd1028, %rd1027, %rd1025;
	add.s64 	%rd1029, %rd1028, %rd1022;
	add.s64 	%rd1030, %rd1029, %rd40;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r636,%dummy}, %rd1017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r637}, %rd1017;
	}
	shf.r.wrap.b32 	%r638, %r637, %r636, 28;
	shf.r.wrap.b32 	%r639, %r636, %r637, 28;
	mov.b64 	%rd1031, {%r639, %r638};
	shf.l.wrap.b32 	%r640, %r636, %r637, 30;
	shf.l.wrap.b32 	%r641, %r637, %r636, 30;
	mov.b64 	%rd1032, {%r641, %r640};
	xor.b64  	%rd1033, %rd1032, %rd1031;
	shf.l.wrap.b32 	%r642, %r636, %r637, 25;
	shf.l.wrap.b32 	%r643, %r637, %r636, 25;
	mov.b64 	%rd1034, {%r643, %r642};
	xor.b64  	%rd1035, %rd1033, %rd1034;
	and.b64  	%rd1036, %rd1017, %rd993;
	xor.b64  	%rd1037, %rd1017, %rd993;
	and.b64  	%rd1038, %rd1037, %rd41;
	or.b64  	%rd1039, %rd1038, %rd1036;
	add.s64 	%rd1040, %rd1029, %rd1039;
	add.s64 	%rd1041, %rd1040, %rd1035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r644,%dummy}, %rd1030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r645}, %rd1030;
	}
	shf.r.wrap.b32 	%r646, %r645, %r644, 14;
	shf.r.wrap.b32 	%r647, %r644, %r645, 14;
	mov.b64 	%rd1042, {%r647, %r646};
	shf.r.wrap.b32 	%r648, %r645, %r644, 18;
	shf.r.wrap.b32 	%r649, %r644, %r645, 18;
	mov.b64 	%rd1043, {%r649, %r648};
	xor.b64  	%rd1044, %rd1043, %rd1042;
	shf.l.wrap.b32 	%r650, %r644, %r645, 23;
	shf.l.wrap.b32 	%r651, %r645, %r644, 23;
	mov.b64 	%rd1045, {%r651, %r650};
	xor.b64  	%rd1046, %rd1044, %rd1045;
	xor.b64  	%rd1047, %rd1006, %rd982;
	and.b64  	%rd1048, %rd1030, %rd1047;
	xor.b64  	%rd1049, %rd1048, %rd982;
	add.s64 	%rd1050, %rd37, %rd10141;
	add.s64 	%rd1051, %rd1050, %rd10058;
	add.s64 	%rd1052, %rd1051, %rd1049;
	add.s64 	%rd1053, %rd1052, %rd1046;
	add.s64 	%rd1054, %rd1053, %rd41;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r652,%dummy}, %rd1041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r653}, %rd1041;
	}
	shf.r.wrap.b32 	%r654, %r653, %r652, 28;
	shf.r.wrap.b32 	%r655, %r652, %r653, 28;
	mov.b64 	%rd1055, {%r655, %r654};
	shf.l.wrap.b32 	%r656, %r652, %r653, 30;
	shf.l.wrap.b32 	%r657, %r653, %r652, 30;
	mov.b64 	%rd1056, {%r657, %r656};
	xor.b64  	%rd1057, %rd1056, %rd1055;
	shf.l.wrap.b32 	%r658, %r652, %r653, 25;
	shf.l.wrap.b32 	%r659, %r653, %r652, 25;
	mov.b64 	%rd1058, {%r659, %r658};
	xor.b64  	%rd1059, %rd1057, %rd1058;
	and.b64  	%rd1060, %rd1041, %rd1017;
	xor.b64  	%rd1061, %rd1041, %rd1017;
	and.b64  	%rd1062, %rd1061, %rd993;
	or.b64  	%rd1063, %rd1062, %rd1060;
	add.s64 	%rd1064, %rd1053, %rd1063;
	add.s64 	%rd1065, %rd1064, %rd1059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r660,%dummy}, %rd1054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r661}, %rd1054;
	}
	shf.r.wrap.b32 	%r662, %r661, %r660, 14;
	shf.r.wrap.b32 	%r663, %r660, %r661, 14;
	mov.b64 	%rd1066, {%r663, %r662};
	shf.r.wrap.b32 	%r664, %r661, %r660, 18;
	shf.r.wrap.b32 	%r665, %r660, %r661, 18;
	mov.b64 	%rd1067, {%r665, %r664};
	xor.b64  	%rd1068, %rd1067, %rd1066;
	shf.l.wrap.b32 	%r666, %r660, %r661, 23;
	shf.l.wrap.b32 	%r667, %r661, %r660, 23;
	mov.b64 	%rd1069, {%r667, %r666};
	xor.b64  	%rd1070, %rd1068, %rd1069;
	xor.b64  	%rd1071, %rd1030, %rd1006;
	and.b64  	%rd1072, %rd1054, %rd1071;
	xor.b64  	%rd1073, %rd1072, %rd1006;
	add.s64 	%rd1074, %rd10059, %rd10140;
	add.s64 	%rd1075, %rd1074, %rd982;
	add.s64 	%rd1076, %rd1075, %rd1073;
	add.s64 	%rd1077, %rd1076, %rd1070;
	add.s64 	%rd1078, %rd1077, %rd993;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r668,%dummy}, %rd1065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r669}, %rd1065;
	}
	shf.r.wrap.b32 	%r670, %r669, %r668, 28;
	shf.r.wrap.b32 	%r671, %r668, %r669, 28;
	mov.b64 	%rd1079, {%r671, %r670};
	shf.l.wrap.b32 	%r672, %r668, %r669, 30;
	shf.l.wrap.b32 	%r673, %r669, %r668, 30;
	mov.b64 	%rd1080, {%r673, %r672};
	xor.b64  	%rd1081, %rd1080, %rd1079;
	shf.l.wrap.b32 	%r674, %r668, %r669, 25;
	shf.l.wrap.b32 	%r675, %r669, %r668, 25;
	mov.b64 	%rd1082, {%r675, %r674};
	xor.b64  	%rd1083, %rd1081, %rd1082;
	and.b64  	%rd1084, %rd1065, %rd1041;
	xor.b64  	%rd1085, %rd1065, %rd1041;
	and.b64  	%rd1086, %rd1085, %rd1017;
	or.b64  	%rd1087, %rd1086, %rd1084;
	add.s64 	%rd1088, %rd1077, %rd1087;
	add.s64 	%rd1089, %rd1088, %rd1083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r676,%dummy}, %rd1078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r677}, %rd1078;
	}
	shf.r.wrap.b32 	%r678, %r677, %r676, 14;
	shf.r.wrap.b32 	%r679, %r676, %r677, 14;
	mov.b64 	%rd1090, {%r679, %r678};
	shf.r.wrap.b32 	%r680, %r677, %r676, 18;
	shf.r.wrap.b32 	%r681, %r676, %r677, 18;
	mov.b64 	%rd1091, {%r681, %r680};
	xor.b64  	%rd1092, %rd1091, %rd1090;
	shf.l.wrap.b32 	%r682, %r676, %r677, 23;
	shf.l.wrap.b32 	%r683, %r677, %r676, 23;
	mov.b64 	%rd1093, {%r683, %r682};
	xor.b64  	%rd1094, %rd1092, %rd1093;
	xor.b64  	%rd1095, %rd1054, %rd1030;
	and.b64  	%rd1096, %rd1078, %rd1095;
	xor.b64  	%rd1097, %rd1096, %rd1030;
	add.s64 	%rd1098, %rd10060, %rd10139;
	add.s64 	%rd1099, %rd1098, %rd1006;
	add.s64 	%rd1100, %rd1099, %rd1097;
	add.s64 	%rd1101, %rd1100, %rd1094;
	add.s64 	%rd1102, %rd1101, %rd1017;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r684,%dummy}, %rd1089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r685}, %rd1089;
	}
	shf.r.wrap.b32 	%r686, %r685, %r684, 28;
	shf.r.wrap.b32 	%r687, %r684, %r685, 28;
	mov.b64 	%rd1103, {%r687, %r686};
	shf.l.wrap.b32 	%r688, %r684, %r685, 30;
	shf.l.wrap.b32 	%r689, %r685, %r684, 30;
	mov.b64 	%rd1104, {%r689, %r688};
	xor.b64  	%rd1105, %rd1104, %rd1103;
	shf.l.wrap.b32 	%r690, %r684, %r685, 25;
	shf.l.wrap.b32 	%r691, %r685, %r684, 25;
	mov.b64 	%rd1106, {%r691, %r690};
	xor.b64  	%rd1107, %rd1105, %rd1106;
	and.b64  	%rd1108, %rd1089, %rd1065;
	xor.b64  	%rd1109, %rd1089, %rd1065;
	and.b64  	%rd1110, %rd1109, %rd1041;
	or.b64  	%rd1111, %rd1110, %rd1108;
	add.s64 	%rd1112, %rd1101, %rd1111;
	add.s64 	%rd1113, %rd1112, %rd1107;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r692,%dummy}, %rd1102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r693}, %rd1102;
	}
	shf.r.wrap.b32 	%r694, %r693, %r692, 14;
	shf.r.wrap.b32 	%r695, %r692, %r693, 14;
	mov.b64 	%rd1114, {%r695, %r694};
	shf.r.wrap.b32 	%r696, %r693, %r692, 18;
	shf.r.wrap.b32 	%r697, %r692, %r693, 18;
	mov.b64 	%rd1115, {%r697, %r696};
	xor.b64  	%rd1116, %rd1115, %rd1114;
	shf.l.wrap.b32 	%r698, %r692, %r693, 23;
	shf.l.wrap.b32 	%r699, %r693, %r692, 23;
	mov.b64 	%rd1117, {%r699, %r698};
	xor.b64  	%rd1118, %rd1116, %rd1117;
	xor.b64  	%rd1119, %rd1078, %rd1054;
	and.b64  	%rd1120, %rd1102, %rd1119;
	xor.b64  	%rd1121, %rd1120, %rd1054;
	add.s64 	%rd1122, %rd10061, %rd10138;
	add.s64 	%rd1123, %rd1122, %rd1030;
	add.s64 	%rd1124, %rd1123, %rd1121;
	add.s64 	%rd1125, %rd1124, %rd1118;
	add.s64 	%rd1126, %rd1125, %rd1041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r700,%dummy}, %rd1113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r701}, %rd1113;
	}
	shf.r.wrap.b32 	%r702, %r701, %r700, 28;
	shf.r.wrap.b32 	%r703, %r700, %r701, 28;
	mov.b64 	%rd1127, {%r703, %r702};
	shf.l.wrap.b32 	%r704, %r700, %r701, 30;
	shf.l.wrap.b32 	%r705, %r701, %r700, 30;
	mov.b64 	%rd1128, {%r705, %r704};
	xor.b64  	%rd1129, %rd1128, %rd1127;
	shf.l.wrap.b32 	%r706, %r700, %r701, 25;
	shf.l.wrap.b32 	%r707, %r701, %r700, 25;
	mov.b64 	%rd1130, {%r707, %r706};
	xor.b64  	%rd1131, %rd1129, %rd1130;
	and.b64  	%rd1132, %rd1113, %rd1089;
	xor.b64  	%rd1133, %rd1113, %rd1089;
	and.b64  	%rd1134, %rd1133, %rd1065;
	or.b64  	%rd1135, %rd1134, %rd1132;
	add.s64 	%rd1136, %rd1125, %rd1135;
	add.s64 	%rd1137, %rd1136, %rd1131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r708,%dummy}, %rd1126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r709}, %rd1126;
	}
	shf.r.wrap.b32 	%r710, %r709, %r708, 14;
	shf.r.wrap.b32 	%r711, %r708, %r709, 14;
	mov.b64 	%rd1138, {%r711, %r710};
	shf.r.wrap.b32 	%r712, %r709, %r708, 18;
	shf.r.wrap.b32 	%r713, %r708, %r709, 18;
	mov.b64 	%rd1139, {%r713, %r712};
	xor.b64  	%rd1140, %rd1139, %rd1138;
	shf.l.wrap.b32 	%r714, %r708, %r709, 23;
	shf.l.wrap.b32 	%r715, %r709, %r708, 23;
	mov.b64 	%rd1141, {%r715, %r714};
	xor.b64  	%rd1142, %rd1140, %rd1141;
	xor.b64  	%rd1143, %rd1102, %rd1078;
	and.b64  	%rd1144, %rd1126, %rd1143;
	xor.b64  	%rd1145, %rd1144, %rd1078;
	add.s64 	%rd1146, %rd10062, %rd25;
	add.s64 	%rd1147, %rd1146, %rd1054;
	add.s64 	%rd1148, %rd1147, %rd1145;
	add.s64 	%rd1149, %rd1148, %rd1142;
	add.s64 	%rd1150, %rd1149, %rd1065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r716,%dummy}, %rd1137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r717}, %rd1137;
	}
	shf.r.wrap.b32 	%r718, %r717, %r716, 28;
	shf.r.wrap.b32 	%r719, %r716, %r717, 28;
	mov.b64 	%rd1151, {%r719, %r718};
	shf.l.wrap.b32 	%r720, %r716, %r717, 30;
	shf.l.wrap.b32 	%r721, %r717, %r716, 30;
	mov.b64 	%rd1152, {%r721, %r720};
	xor.b64  	%rd1153, %rd1152, %rd1151;
	shf.l.wrap.b32 	%r722, %r716, %r717, 25;
	shf.l.wrap.b32 	%r723, %r717, %r716, 25;
	mov.b64 	%rd1154, {%r723, %r722};
	xor.b64  	%rd1155, %rd1153, %rd1154;
	and.b64  	%rd1156, %rd1137, %rd1113;
	xor.b64  	%rd1157, %rd1137, %rd1113;
	and.b64  	%rd1158, %rd1157, %rd1089;
	or.b64  	%rd1159, %rd1158, %rd1156;
	add.s64 	%rd1160, %rd1149, %rd1159;
	add.s64 	%rd1161, %rd1160, %rd1155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r724,%dummy}, %rd1150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r725}, %rd1150;
	}
	shf.r.wrap.b32 	%r726, %r725, %r724, 14;
	shf.r.wrap.b32 	%r727, %r724, %r725, 14;
	mov.b64 	%rd1162, {%r727, %r726};
	shf.r.wrap.b32 	%r728, %r725, %r724, 18;
	shf.r.wrap.b32 	%r729, %r724, %r725, 18;
	mov.b64 	%rd1163, {%r729, %r728};
	xor.b64  	%rd1164, %rd1163, %rd1162;
	shf.l.wrap.b32 	%r730, %r724, %r725, 23;
	shf.l.wrap.b32 	%r731, %r725, %r724, 23;
	mov.b64 	%rd1165, {%r731, %r730};
	xor.b64  	%rd1166, %rd1164, %rd1165;
	xor.b64  	%rd1167, %rd1126, %rd1102;
	and.b64  	%rd1168, %rd1150, %rd1167;
	xor.b64  	%rd1169, %rd1168, %rd1102;
	add.s64 	%rd1170, %rd10046, %rd26;
	add.s64 	%rd1171, %rd1170, %rd1078;
	add.s64 	%rd1172, %rd1171, %rd1169;
	add.s64 	%rd1173, %rd1172, %rd1166;
	add.s64 	%rd1174, %rd1173, %rd1089;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r732,%dummy}, %rd1161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r733}, %rd1161;
	}
	shf.r.wrap.b32 	%r734, %r733, %r732, 28;
	shf.r.wrap.b32 	%r735, %r732, %r733, 28;
	mov.b64 	%rd1175, {%r735, %r734};
	shf.l.wrap.b32 	%r736, %r732, %r733, 30;
	shf.l.wrap.b32 	%r737, %r733, %r732, 30;
	mov.b64 	%rd1176, {%r737, %r736};
	xor.b64  	%rd1177, %rd1176, %rd1175;
	shf.l.wrap.b32 	%r738, %r732, %r733, 25;
	shf.l.wrap.b32 	%r739, %r733, %r732, 25;
	mov.b64 	%rd1178, {%r739, %r738};
	xor.b64  	%rd1179, %rd1177, %rd1178;
	and.b64  	%rd1180, %rd1161, %rd1137;
	xor.b64  	%rd1181, %rd1161, %rd1137;
	and.b64  	%rd1182, %rd1181, %rd1113;
	or.b64  	%rd1183, %rd1182, %rd1180;
	add.s64 	%rd1184, %rd1173, %rd1183;
	add.s64 	%rd1185, %rd1184, %rd1179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r740,%dummy}, %rd1174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r741}, %rd1174;
	}
	shf.r.wrap.b32 	%r742, %r741, %r740, 14;
	shf.r.wrap.b32 	%r743, %r740, %r741, 14;
	mov.b64 	%rd1186, {%r743, %r742};
	shf.r.wrap.b32 	%r744, %r741, %r740, 18;
	shf.r.wrap.b32 	%r745, %r740, %r741, 18;
	mov.b64 	%rd1187, {%r745, %r744};
	xor.b64  	%rd1188, %rd1187, %rd1186;
	shf.l.wrap.b32 	%r746, %r740, %r741, 23;
	shf.l.wrap.b32 	%r747, %r741, %r740, 23;
	mov.b64 	%rd1189, {%r747, %r746};
	xor.b64  	%rd1190, %rd1188, %rd1189;
	xor.b64  	%rd1191, %rd1150, %rd1126;
	and.b64  	%rd1192, %rd1174, %rd1191;
	xor.b64  	%rd1193, %rd1192, %rd1126;
	add.s64 	%rd1194, %rd10045, %rd27;
	add.s64 	%rd1195, %rd1194, %rd1102;
	add.s64 	%rd1196, %rd1195, %rd1193;
	add.s64 	%rd1197, %rd1196, %rd1190;
	add.s64 	%rd1198, %rd1197, %rd1113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r748,%dummy}, %rd1185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r749}, %rd1185;
	}
	shf.r.wrap.b32 	%r750, %r749, %r748, 28;
	shf.r.wrap.b32 	%r751, %r748, %r749, 28;
	mov.b64 	%rd1199, {%r751, %r750};
	shf.l.wrap.b32 	%r752, %r748, %r749, 30;
	shf.l.wrap.b32 	%r753, %r749, %r748, 30;
	mov.b64 	%rd1200, {%r753, %r752};
	xor.b64  	%rd1201, %rd1200, %rd1199;
	shf.l.wrap.b32 	%r754, %r748, %r749, 25;
	shf.l.wrap.b32 	%r755, %r749, %r748, 25;
	mov.b64 	%rd1202, {%r755, %r754};
	xor.b64  	%rd1203, %rd1201, %rd1202;
	and.b64  	%rd1204, %rd1185, %rd1161;
	xor.b64  	%rd1205, %rd1185, %rd1161;
	and.b64  	%rd1206, %rd1205, %rd1137;
	or.b64  	%rd1207, %rd1206, %rd1204;
	add.s64 	%rd1208, %rd1197, %rd1207;
	add.s64 	%rd1209, %rd1208, %rd1203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r756,%dummy}, %rd1198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r757}, %rd1198;
	}
	shf.r.wrap.b32 	%r758, %r757, %r756, 14;
	shf.r.wrap.b32 	%r759, %r756, %r757, 14;
	mov.b64 	%rd1210, {%r759, %r758};
	shf.r.wrap.b32 	%r760, %r757, %r756, 18;
	shf.r.wrap.b32 	%r761, %r756, %r757, 18;
	mov.b64 	%rd1211, {%r761, %r760};
	xor.b64  	%rd1212, %rd1211, %rd1210;
	shf.l.wrap.b32 	%r762, %r756, %r757, 23;
	shf.l.wrap.b32 	%r763, %r757, %r756, 23;
	mov.b64 	%rd1213, {%r763, %r762};
	xor.b64  	%rd1214, %rd1212, %rd1213;
	xor.b64  	%rd1215, %rd1174, %rd1150;
	and.b64  	%rd1216, %rd1198, %rd1215;
	xor.b64  	%rd1217, %rd1216, %rd1150;
	add.s64 	%rd1218, %rd10044, %rd28;
	add.s64 	%rd1219, %rd1218, %rd1126;
	add.s64 	%rd1220, %rd1219, %rd1217;
	add.s64 	%rd1221, %rd1220, %rd1214;
	add.s64 	%rd1222, %rd1221, %rd1137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r764,%dummy}, %rd1209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r765}, %rd1209;
	}
	shf.r.wrap.b32 	%r766, %r765, %r764, 28;
	shf.r.wrap.b32 	%r767, %r764, %r765, 28;
	mov.b64 	%rd1223, {%r767, %r766};
	shf.l.wrap.b32 	%r768, %r764, %r765, 30;
	shf.l.wrap.b32 	%r769, %r765, %r764, 30;
	mov.b64 	%rd1224, {%r769, %r768};
	xor.b64  	%rd1225, %rd1224, %rd1223;
	shf.l.wrap.b32 	%r770, %r764, %r765, 25;
	shf.l.wrap.b32 	%r771, %r765, %r764, 25;
	mov.b64 	%rd1226, {%r771, %r770};
	xor.b64  	%rd1227, %rd1225, %rd1226;
	and.b64  	%rd1228, %rd1209, %rd1185;
	xor.b64  	%rd1229, %rd1209, %rd1185;
	and.b64  	%rd1230, %rd1229, %rd1161;
	or.b64  	%rd1231, %rd1230, %rd1228;
	add.s64 	%rd1232, %rd1221, %rd1231;
	add.s64 	%rd1233, %rd1232, %rd1227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r772,%dummy}, %rd1222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r773}, %rd1222;
	}
	shf.r.wrap.b32 	%r774, %r773, %r772, 14;
	shf.r.wrap.b32 	%r775, %r772, %r773, 14;
	mov.b64 	%rd1234, {%r775, %r774};
	shf.r.wrap.b32 	%r776, %r773, %r772, 18;
	shf.r.wrap.b32 	%r777, %r772, %r773, 18;
	mov.b64 	%rd1235, {%r777, %r776};
	xor.b64  	%rd1236, %rd1235, %rd1234;
	shf.l.wrap.b32 	%r778, %r772, %r773, 23;
	shf.l.wrap.b32 	%r779, %r773, %r772, 23;
	mov.b64 	%rd1237, {%r779, %r778};
	xor.b64  	%rd1238, %rd1236, %rd1237;
	xor.b64  	%rd1239, %rd1198, %rd1174;
	and.b64  	%rd1240, %rd1222, %rd1239;
	xor.b64  	%rd1241, %rd1240, %rd1174;
	add.s64 	%rd1242, %rd10043, %rd29;
	add.s64 	%rd1243, %rd1242, %rd1150;
	add.s64 	%rd1244, %rd1243, %rd1241;
	add.s64 	%rd1245, %rd1244, %rd1238;
	add.s64 	%rd1246, %rd1245, %rd1161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r780,%dummy}, %rd1233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r781}, %rd1233;
	}
	shf.r.wrap.b32 	%r782, %r781, %r780, 28;
	shf.r.wrap.b32 	%r783, %r780, %r781, 28;
	mov.b64 	%rd1247, {%r783, %r782};
	shf.l.wrap.b32 	%r784, %r780, %r781, 30;
	shf.l.wrap.b32 	%r785, %r781, %r780, 30;
	mov.b64 	%rd1248, {%r785, %r784};
	xor.b64  	%rd1249, %rd1248, %rd1247;
	shf.l.wrap.b32 	%r786, %r780, %r781, 25;
	shf.l.wrap.b32 	%r787, %r781, %r780, 25;
	mov.b64 	%rd1250, {%r787, %r786};
	xor.b64  	%rd1251, %rd1249, %rd1250;
	and.b64  	%rd1252, %rd1233, %rd1209;
	xor.b64  	%rd1253, %rd1233, %rd1209;
	and.b64  	%rd1254, %rd1253, %rd1185;
	or.b64  	%rd1255, %rd1254, %rd1252;
	add.s64 	%rd1256, %rd1245, %rd1255;
	add.s64 	%rd1257, %rd1256, %rd1251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r788,%dummy}, %rd1246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r789}, %rd1246;
	}
	shf.r.wrap.b32 	%r790, %r789, %r788, 14;
	shf.r.wrap.b32 	%r791, %r788, %r789, 14;
	mov.b64 	%rd1258, {%r791, %r790};
	shf.r.wrap.b32 	%r792, %r789, %r788, 18;
	shf.r.wrap.b32 	%r793, %r788, %r789, 18;
	mov.b64 	%rd1259, {%r793, %r792};
	xor.b64  	%rd1260, %rd1259, %rd1258;
	shf.l.wrap.b32 	%r794, %r788, %r789, 23;
	shf.l.wrap.b32 	%r795, %r789, %r788, 23;
	mov.b64 	%rd1261, {%r795, %r794};
	xor.b64  	%rd1262, %rd1260, %rd1261;
	xor.b64  	%rd1263, %rd1222, %rd1198;
	and.b64  	%rd1264, %rd1246, %rd1263;
	xor.b64  	%rd1265, %rd1264, %rd1198;
	add.s64 	%rd1266, %rd10042, %rd30;
	add.s64 	%rd1267, %rd1266, %rd1174;
	add.s64 	%rd1268, %rd1267, %rd1265;
	add.s64 	%rd1269, %rd1268, %rd1262;
	add.s64 	%rd10054, %rd1269, %rd1185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r796,%dummy}, %rd1257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r797}, %rd1257;
	}
	shf.r.wrap.b32 	%r798, %r797, %r796, 28;
	shf.r.wrap.b32 	%r799, %r796, %r797, 28;
	mov.b64 	%rd1270, {%r799, %r798};
	shf.l.wrap.b32 	%r800, %r796, %r797, 30;
	shf.l.wrap.b32 	%r801, %r797, %r796, 30;
	mov.b64 	%rd1271, {%r801, %r800};
	xor.b64  	%rd1272, %rd1271, %rd1270;
	shf.l.wrap.b32 	%r802, %r796, %r797, 25;
	shf.l.wrap.b32 	%r803, %r797, %r796, 25;
	mov.b64 	%rd1273, {%r803, %r802};
	xor.b64  	%rd1274, %rd1272, %rd1273;
	and.b64  	%rd1275, %rd1257, %rd1233;
	xor.b64  	%rd1276, %rd1257, %rd1233;
	and.b64  	%rd1277, %rd1276, %rd1209;
	or.b64  	%rd1278, %rd1277, %rd1275;
	add.s64 	%rd1279, %rd1269, %rd1278;
	add.s64 	%rd10050, %rd1279, %rd1274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r804,%dummy}, %rd10054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r805}, %rd10054;
	}
	shf.r.wrap.b32 	%r806, %r805, %r804, 14;
	shf.r.wrap.b32 	%r807, %r804, %r805, 14;
	mov.b64 	%rd1280, {%r807, %r806};
	shf.r.wrap.b32 	%r808, %r805, %r804, 18;
	shf.r.wrap.b32 	%r809, %r804, %r805, 18;
	mov.b64 	%rd1281, {%r809, %r808};
	xor.b64  	%rd1282, %rd1281, %rd1280;
	shf.l.wrap.b32 	%r810, %r804, %r805, 23;
	shf.l.wrap.b32 	%r811, %r805, %r804, 23;
	mov.b64 	%rd1283, {%r811, %r810};
	xor.b64  	%rd1284, %rd1282, %rd1283;
	xor.b64  	%rd1285, %rd1246, %rd1222;
	and.b64  	%rd1286, %rd10054, %rd1285;
	xor.b64  	%rd1287, %rd1286, %rd1222;
	add.s64 	%rd1288, %rd10041, %rd10131;
	add.s64 	%rd1289, %rd1288, %rd1198;
	add.s64 	%rd1290, %rd1289, %rd1287;
	add.s64 	%rd1291, %rd1290, %rd1284;
	add.s64 	%rd10053, %rd1291, %rd1209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r812,%dummy}, %rd10050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r813}, %rd10050;
	}
	shf.r.wrap.b32 	%r814, %r813, %r812, 28;
	shf.r.wrap.b32 	%r815, %r812, %r813, 28;
	mov.b64 	%rd1292, {%r815, %r814};
	shf.l.wrap.b32 	%r816, %r812, %r813, 30;
	shf.l.wrap.b32 	%r817, %r813, %r812, 30;
	mov.b64 	%rd1293, {%r817, %r816};
	xor.b64  	%rd1294, %rd1293, %rd1292;
	shf.l.wrap.b32 	%r818, %r812, %r813, 25;
	shf.l.wrap.b32 	%r819, %r813, %r812, 25;
	mov.b64 	%rd1295, {%r819, %r818};
	xor.b64  	%rd1296, %rd1294, %rd1295;
	and.b64  	%rd1297, %rd10050, %rd1257;
	xor.b64  	%rd1298, %rd10050, %rd1257;
	and.b64  	%rd1299, %rd1298, %rd1233;
	or.b64  	%rd1300, %rd1299, %rd1297;
	add.s64 	%rd1301, %rd1291, %rd1300;
	add.s64 	%rd10049, %rd1301, %rd1296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r820,%dummy}, %rd10053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r821}, %rd10053;
	}
	shf.r.wrap.b32 	%r822, %r821, %r820, 14;
	shf.r.wrap.b32 	%r823, %r820, %r821, 14;
	mov.b64 	%rd1302, {%r823, %r822};
	shf.r.wrap.b32 	%r824, %r821, %r820, 18;
	shf.r.wrap.b32 	%r825, %r820, %r821, 18;
	mov.b64 	%rd1303, {%r825, %r824};
	xor.b64  	%rd1304, %rd1303, %rd1302;
	shf.l.wrap.b32 	%r826, %r820, %r821, 23;
	shf.l.wrap.b32 	%r827, %r821, %r820, 23;
	mov.b64 	%rd1305, {%r827, %r826};
	xor.b64  	%rd1306, %rd1304, %rd1305;
	xor.b64  	%rd1307, %rd10054, %rd1246;
	and.b64  	%rd1308, %rd10053, %rd1307;
	xor.b64  	%rd1309, %rd1308, %rd1246;
	add.s64 	%rd1310, %rd10040, %rd10130;
	add.s64 	%rd1311, %rd1310, %rd1222;
	add.s64 	%rd1312, %rd1311, %rd1309;
	add.s64 	%rd1313, %rd1312, %rd1306;
	add.s64 	%rd10052, %rd1313, %rd1233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r828,%dummy}, %rd10049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r829}, %rd10049;
	}
	shf.r.wrap.b32 	%r830, %r829, %r828, 28;
	shf.r.wrap.b32 	%r831, %r828, %r829, 28;
	mov.b64 	%rd1314, {%r831, %r830};
	shf.l.wrap.b32 	%r832, %r828, %r829, 30;
	shf.l.wrap.b32 	%r833, %r829, %r828, 30;
	mov.b64 	%rd1315, {%r833, %r832};
	xor.b64  	%rd1316, %rd1315, %rd1314;
	shf.l.wrap.b32 	%r834, %r828, %r829, 25;
	shf.l.wrap.b32 	%r835, %r829, %r828, 25;
	mov.b64 	%rd1317, {%r835, %r834};
	xor.b64  	%rd1318, %rd1316, %rd1317;
	and.b64  	%rd1319, %rd10049, %rd10050;
	xor.b64  	%rd1320, %rd10049, %rd10050;
	and.b64  	%rd1321, %rd1320, %rd1257;
	or.b64  	%rd1322, %rd1321, %rd1319;
	add.s64 	%rd1323, %rd1313, %rd1322;
	add.s64 	%rd10048, %rd1323, %rd1318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r836,%dummy}, %rd10052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r837}, %rd10052;
	}
	shf.r.wrap.b32 	%r838, %r837, %r836, 14;
	shf.r.wrap.b32 	%r839, %r836, %r837, 14;
	mov.b64 	%rd1324, {%r839, %r838};
	shf.r.wrap.b32 	%r840, %r837, %r836, 18;
	shf.r.wrap.b32 	%r841, %r836, %r837, 18;
	mov.b64 	%rd1325, {%r841, %r840};
	xor.b64  	%rd1326, %rd1325, %rd1324;
	shf.l.wrap.b32 	%r842, %r836, %r837, 23;
	shf.l.wrap.b32 	%r843, %r837, %r836, 23;
	mov.b64 	%rd1327, {%r843, %r842};
	xor.b64  	%rd1328, %rd1326, %rd1327;
	xor.b64  	%rd1329, %rd10053, %rd10054;
	and.b64  	%rd1330, %rd10052, %rd1329;
	xor.b64  	%rd1331, %rd1330, %rd10054;
	add.s64 	%rd1332, %rd10039, %rd10129;
	add.s64 	%rd1333, %rd1332, %rd1246;
	add.s64 	%rd1334, %rd1333, %rd1331;
	add.s64 	%rd1335, %rd1334, %rd1328;
	add.s64 	%rd10051, %rd1335, %rd1257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r844,%dummy}, %rd10048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r845}, %rd10048;
	}
	shf.r.wrap.b32 	%r846, %r845, %r844, 28;
	shf.r.wrap.b32 	%r847, %r844, %r845, 28;
	mov.b64 	%rd1336, {%r847, %r846};
	shf.l.wrap.b32 	%r848, %r844, %r845, 30;
	shf.l.wrap.b32 	%r849, %r845, %r844, 30;
	mov.b64 	%rd1337, {%r849, %r848};
	xor.b64  	%rd1338, %rd1337, %rd1336;
	shf.l.wrap.b32 	%r850, %r844, %r845, 25;
	shf.l.wrap.b32 	%r851, %r845, %r844, 25;
	mov.b64 	%rd1339, {%r851, %r850};
	xor.b64  	%rd1340, %rd1338, %rd1339;
	and.b64  	%rd1341, %rd10048, %rd10049;
	xor.b64  	%rd1342, %rd10048, %rd10049;
	and.b64  	%rd1343, %rd1342, %rd10050;
	or.b64  	%rd1344, %rd1343, %rd1341;
	add.s64 	%rd1345, %rd1335, %rd1344;
	add.s64 	%rd10047, %rd1345, %rd1340;
	mov.u32 	%r7548, 16;

BB3_7:
	shr.u64 	%rd1346, %rd10040, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r852,%dummy}, %rd10040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r853}, %rd10040;
	}
	shf.r.wrap.b32 	%r854, %r853, %r852, 19;
	shf.r.wrap.b32 	%r855, %r852, %r853, 19;
	mov.b64 	%rd1347, {%r855, %r854};
	xor.b64  	%rd1348, %rd1347, %rd1346;
	shf.l.wrap.b32 	%r856, %r852, %r853, 3;
	shf.l.wrap.b32 	%r857, %r853, %r852, 3;
	mov.b64 	%rd1349, {%r857, %r856};
	xor.b64  	%rd1350, %rd1348, %rd1349;
	shr.u64 	%rd1351, %rd10056, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r858,%dummy}, %rd10056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r859}, %rd10056;
	}
	shf.r.wrap.b32 	%r860, %r859, %r858, 1;
	shf.r.wrap.b32 	%r861, %r858, %r859, 1;
	mov.b64 	%rd1352, {%r861, %r860};
	xor.b64  	%rd1353, %rd1352, %rd1351;
	shf.r.wrap.b32 	%r862, %r859, %r858, 8;
	shf.r.wrap.b32 	%r863, %r858, %r859, 8;
	mov.b64 	%rd1354, {%r863, %r862};
	xor.b64  	%rd1355, %rd1353, %rd1354;
	add.s64 	%rd1356, %rd10055, %rd10045;
	add.s64 	%rd1357, %rd1356, %rd1350;
	add.s64 	%rd10055, %rd1357, %rd1355;
	shr.u64 	%rd1358, %rd10039, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r864,%dummy}, %rd10039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r865}, %rd10039;
	}
	shf.r.wrap.b32 	%r866, %r865, %r864, 19;
	shf.r.wrap.b32 	%r867, %r864, %r865, 19;
	mov.b64 	%rd1359, {%r867, %r866};
	xor.b64  	%rd1360, %rd1359, %rd1358;
	shf.l.wrap.b32 	%r868, %r864, %r865, 3;
	shf.l.wrap.b32 	%r869, %r865, %r864, 3;
	mov.b64 	%rd1361, {%r869, %r868};
	xor.b64  	%rd1362, %rd1360, %rd1361;
	shr.u64 	%rd1363, %rd10057, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r870,%dummy}, %rd10057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r871}, %rd10057;
	}
	shf.r.wrap.b32 	%r872, %r871, %r870, 1;
	shf.r.wrap.b32 	%r873, %r870, %r871, 1;
	mov.b64 	%rd1364, {%r873, %r872};
	xor.b64  	%rd1365, %rd1364, %rd1363;
	shf.r.wrap.b32 	%r874, %r871, %r870, 8;
	shf.r.wrap.b32 	%r875, %r870, %r871, 8;
	mov.b64 	%rd1366, {%r875, %r874};
	xor.b64  	%rd1367, %rd1365, %rd1366;
	add.s64 	%rd1368, %rd10056, %rd10044;
	add.s64 	%rd1369, %rd1368, %rd1362;
	add.s64 	%rd10056, %rd1369, %rd1367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r876,%dummy}, %rd10055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r877}, %rd10055;
	}
	shf.r.wrap.b32 	%r878, %r877, %r876, 19;
	shf.r.wrap.b32 	%r879, %r876, %r877, 19;
	mov.b64 	%rd1370, {%r879, %r878};
	shf.l.wrap.b32 	%r880, %r876, %r877, 3;
	shf.l.wrap.b32 	%r881, %r877, %r876, 3;
	mov.b64 	%rd1371, {%r881, %r880};
	shr.u64 	%rd1372, %rd10055, 6;
	xor.b64  	%rd1373, %rd1370, %rd1372;
	xor.b64  	%rd1374, %rd1373, %rd1371;
	shr.u64 	%rd1375, %rd10058, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r882,%dummy}, %rd10058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r883}, %rd10058;
	}
	shf.r.wrap.b32 	%r884, %r883, %r882, 1;
	shf.r.wrap.b32 	%r885, %r882, %r883, 1;
	mov.b64 	%rd1376, {%r885, %r884};
	xor.b64  	%rd1377, %rd1376, %rd1375;
	shf.r.wrap.b32 	%r886, %r883, %r882, 8;
	shf.r.wrap.b32 	%r887, %r882, %r883, 8;
	mov.b64 	%rd1378, {%r887, %r886};
	xor.b64  	%rd1379, %rd1377, %rd1378;
	add.s64 	%rd1380, %rd10057, %rd10043;
	add.s64 	%rd1381, %rd1380, %rd1374;
	add.s64 	%rd10057, %rd1381, %rd1379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r888,%dummy}, %rd10056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r889}, %rd10056;
	}
	shf.r.wrap.b32 	%r890, %r889, %r888, 19;
	shf.r.wrap.b32 	%r891, %r888, %r889, 19;
	mov.b64 	%rd1382, {%r891, %r890};
	shf.l.wrap.b32 	%r892, %r888, %r889, 3;
	shf.l.wrap.b32 	%r893, %r889, %r888, 3;
	mov.b64 	%rd1383, {%r893, %r892};
	shr.u64 	%rd1384, %rd10056, 6;
	xor.b64  	%rd1385, %rd1382, %rd1384;
	xor.b64  	%rd1386, %rd1385, %rd1383;
	shr.u64 	%rd1387, %rd10059, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r894,%dummy}, %rd10059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r895}, %rd10059;
	}
	shf.r.wrap.b32 	%r896, %r895, %r894, 1;
	shf.r.wrap.b32 	%r897, %r894, %r895, 1;
	mov.b64 	%rd1388, {%r897, %r896};
	xor.b64  	%rd1389, %rd1388, %rd1387;
	shf.r.wrap.b32 	%r898, %r895, %r894, 8;
	shf.r.wrap.b32 	%r899, %r894, %r895, 8;
	mov.b64 	%rd1390, {%r899, %r898};
	xor.b64  	%rd1391, %rd1389, %rd1390;
	add.s64 	%rd1392, %rd10058, %rd10042;
	add.s64 	%rd1393, %rd1392, %rd1386;
	add.s64 	%rd10058, %rd1393, %rd1391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r900,%dummy}, %rd10057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r901}, %rd10057;
	}
	shf.r.wrap.b32 	%r902, %r901, %r900, 19;
	shf.r.wrap.b32 	%r903, %r900, %r901, 19;
	mov.b64 	%rd1394, {%r903, %r902};
	shf.l.wrap.b32 	%r904, %r900, %r901, 3;
	shf.l.wrap.b32 	%r905, %r901, %r900, 3;
	mov.b64 	%rd1395, {%r905, %r904};
	shr.u64 	%rd1396, %rd10057, 6;
	xor.b64  	%rd1397, %rd1394, %rd1396;
	xor.b64  	%rd1398, %rd1397, %rd1395;
	shr.u64 	%rd1399, %rd10060, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r906,%dummy}, %rd10060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r907}, %rd10060;
	}
	shf.r.wrap.b32 	%r908, %r907, %r906, 1;
	shf.r.wrap.b32 	%r909, %r906, %r907, 1;
	mov.b64 	%rd1400, {%r909, %r908};
	xor.b64  	%rd1401, %rd1400, %rd1399;
	shf.r.wrap.b32 	%r910, %r907, %r906, 8;
	shf.r.wrap.b32 	%r911, %r906, %r907, 8;
	mov.b64 	%rd1402, {%r911, %r910};
	xor.b64  	%rd1403, %rd1401, %rd1402;
	add.s64 	%rd1404, %rd10059, %rd10041;
	add.s64 	%rd1405, %rd1404, %rd1398;
	add.s64 	%rd10059, %rd1405, %rd1403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r912,%dummy}, %rd10058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r913}, %rd10058;
	}
	shf.r.wrap.b32 	%r914, %r913, %r912, 19;
	shf.r.wrap.b32 	%r915, %r912, %r913, 19;
	mov.b64 	%rd1406, {%r915, %r914};
	shf.l.wrap.b32 	%r916, %r912, %r913, 3;
	shf.l.wrap.b32 	%r917, %r913, %r912, 3;
	mov.b64 	%rd1407, {%r917, %r916};
	shr.u64 	%rd1408, %rd10058, 6;
	xor.b64  	%rd1409, %rd1406, %rd1408;
	xor.b64  	%rd1410, %rd1409, %rd1407;
	shr.u64 	%rd1411, %rd10061, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r918,%dummy}, %rd10061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r919}, %rd10061;
	}
	shf.r.wrap.b32 	%r920, %r919, %r918, 1;
	shf.r.wrap.b32 	%r921, %r918, %r919, 1;
	mov.b64 	%rd1412, {%r921, %r920};
	xor.b64  	%rd1413, %rd1412, %rd1411;
	shf.r.wrap.b32 	%r922, %r919, %r918, 8;
	shf.r.wrap.b32 	%r923, %r918, %r919, 8;
	mov.b64 	%rd1414, {%r923, %r922};
	xor.b64  	%rd1415, %rd1413, %rd1414;
	add.s64 	%rd1416, %rd10060, %rd10040;
	add.s64 	%rd1417, %rd1416, %rd1410;
	add.s64 	%rd10060, %rd1417, %rd1415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r924,%dummy}, %rd10059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r925}, %rd10059;
	}
	shf.r.wrap.b32 	%r926, %r925, %r924, 19;
	shf.r.wrap.b32 	%r927, %r924, %r925, 19;
	mov.b64 	%rd1418, {%r927, %r926};
	shf.l.wrap.b32 	%r928, %r924, %r925, 3;
	shf.l.wrap.b32 	%r929, %r925, %r924, 3;
	mov.b64 	%rd1419, {%r929, %r928};
	shr.u64 	%rd1420, %rd10059, 6;
	xor.b64  	%rd1421, %rd1418, %rd1420;
	xor.b64  	%rd1422, %rd1421, %rd1419;
	shr.u64 	%rd1423, %rd10062, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r930,%dummy}, %rd10062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r931}, %rd10062;
	}
	shf.r.wrap.b32 	%r932, %r931, %r930, 1;
	shf.r.wrap.b32 	%r933, %r930, %r931, 1;
	mov.b64 	%rd1424, {%r933, %r932};
	xor.b64  	%rd1425, %rd1424, %rd1423;
	shf.r.wrap.b32 	%r934, %r931, %r930, 8;
	shf.r.wrap.b32 	%r935, %r930, %r931, 8;
	mov.b64 	%rd1426, {%r935, %r934};
	xor.b64  	%rd1427, %rd1425, %rd1426;
	add.s64 	%rd1428, %rd10061, %rd10039;
	add.s64 	%rd1429, %rd1428, %rd1422;
	add.s64 	%rd10061, %rd1429, %rd1427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r936,%dummy}, %rd10060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r937}, %rd10060;
	}
	shf.r.wrap.b32 	%r938, %r937, %r936, 19;
	shf.r.wrap.b32 	%r939, %r936, %r937, 19;
	mov.b64 	%rd1430, {%r939, %r938};
	shf.l.wrap.b32 	%r940, %r936, %r937, 3;
	shf.l.wrap.b32 	%r941, %r937, %r936, 3;
	mov.b64 	%rd1431, {%r941, %r940};
	shr.u64 	%rd1432, %rd10060, 6;
	xor.b64  	%rd1433, %rd1430, %rd1432;
	xor.b64  	%rd1434, %rd1433, %rd1431;
	shr.u64 	%rd1435, %rd10046, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r942,%dummy}, %rd10046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r943}, %rd10046;
	}
	shf.r.wrap.b32 	%r944, %r943, %r942, 1;
	shf.r.wrap.b32 	%r945, %r942, %r943, 1;
	mov.b64 	%rd1436, {%r945, %r944};
	xor.b64  	%rd1437, %rd1436, %rd1435;
	shf.r.wrap.b32 	%r946, %r943, %r942, 8;
	shf.r.wrap.b32 	%r947, %r942, %r943, 8;
	mov.b64 	%rd1438, {%r947, %r946};
	xor.b64  	%rd1439, %rd1437, %rd1438;
	add.s64 	%rd1440, %rd10055, %rd10062;
	add.s64 	%rd1441, %rd1440, %rd1434;
	add.s64 	%rd10062, %rd1441, %rd1439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r948,%dummy}, %rd10061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r949}, %rd10061;
	}
	shf.r.wrap.b32 	%r950, %r949, %r948, 19;
	shf.r.wrap.b32 	%r951, %r948, %r949, 19;
	mov.b64 	%rd1442, {%r951, %r950};
	shf.l.wrap.b32 	%r952, %r948, %r949, 3;
	shf.l.wrap.b32 	%r953, %r949, %r948, 3;
	mov.b64 	%rd1443, {%r953, %r952};
	shr.u64 	%rd1444, %rd10061, 6;
	xor.b64  	%rd1445, %rd1442, %rd1444;
	xor.b64  	%rd1446, %rd1445, %rd1443;
	shr.u64 	%rd1447, %rd10045, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r954,%dummy}, %rd10045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r955}, %rd10045;
	}
	shf.r.wrap.b32 	%r956, %r955, %r954, 1;
	shf.r.wrap.b32 	%r957, %r954, %r955, 1;
	mov.b64 	%rd1448, {%r957, %r956};
	xor.b64  	%rd1449, %rd1448, %rd1447;
	shf.r.wrap.b32 	%r958, %r955, %r954, 8;
	shf.r.wrap.b32 	%r959, %r954, %r955, 8;
	mov.b64 	%rd1450, {%r959, %r958};
	xor.b64  	%rd1451, %rd1449, %rd1450;
	add.s64 	%rd1452, %rd10056, %rd10046;
	add.s64 	%rd1453, %rd1452, %rd1446;
	add.s64 	%rd10046, %rd1453, %rd1451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r960,%dummy}, %rd10062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r961}, %rd10062;
	}
	shf.r.wrap.b32 	%r962, %r961, %r960, 19;
	shf.r.wrap.b32 	%r963, %r960, %r961, 19;
	mov.b64 	%rd1454, {%r963, %r962};
	shf.l.wrap.b32 	%r964, %r960, %r961, 3;
	shf.l.wrap.b32 	%r965, %r961, %r960, 3;
	mov.b64 	%rd1455, {%r965, %r964};
	shr.u64 	%rd1456, %rd10062, 6;
	xor.b64  	%rd1457, %rd1454, %rd1456;
	xor.b64  	%rd1458, %rd1457, %rd1455;
	shr.u64 	%rd1459, %rd10044, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r966,%dummy}, %rd10044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r967}, %rd10044;
	}
	shf.r.wrap.b32 	%r968, %r967, %r966, 1;
	shf.r.wrap.b32 	%r969, %r966, %r967, 1;
	mov.b64 	%rd1460, {%r969, %r968};
	xor.b64  	%rd1461, %rd1460, %rd1459;
	shf.r.wrap.b32 	%r970, %r967, %r966, 8;
	shf.r.wrap.b32 	%r971, %r966, %r967, 8;
	mov.b64 	%rd1462, {%r971, %r970};
	xor.b64  	%rd1463, %rd1461, %rd1462;
	add.s64 	%rd1464, %rd10057, %rd10045;
	add.s64 	%rd1465, %rd1464, %rd1458;
	add.s64 	%rd10045, %rd1465, %rd1463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r972,%dummy}, %rd10046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r973}, %rd10046;
	}
	shf.r.wrap.b32 	%r974, %r973, %r972, 19;
	shf.r.wrap.b32 	%r975, %r972, %r973, 19;
	mov.b64 	%rd1466, {%r975, %r974};
	shf.l.wrap.b32 	%r976, %r972, %r973, 3;
	shf.l.wrap.b32 	%r977, %r973, %r972, 3;
	mov.b64 	%rd1467, {%r977, %r976};
	shr.u64 	%rd1468, %rd10046, 6;
	xor.b64  	%rd1469, %rd1466, %rd1468;
	xor.b64  	%rd1470, %rd1469, %rd1467;
	shr.u64 	%rd1471, %rd10043, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r978,%dummy}, %rd10043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r979}, %rd10043;
	}
	shf.r.wrap.b32 	%r980, %r979, %r978, 1;
	shf.r.wrap.b32 	%r981, %r978, %r979, 1;
	mov.b64 	%rd1472, {%r981, %r980};
	xor.b64  	%rd1473, %rd1472, %rd1471;
	shf.r.wrap.b32 	%r982, %r979, %r978, 8;
	shf.r.wrap.b32 	%r983, %r978, %r979, 8;
	mov.b64 	%rd1474, {%r983, %r982};
	xor.b64  	%rd1475, %rd1473, %rd1474;
	add.s64 	%rd1476, %rd10058, %rd10044;
	add.s64 	%rd1477, %rd1476, %rd1470;
	add.s64 	%rd10044, %rd1477, %rd1475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r984,%dummy}, %rd10045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r985}, %rd10045;
	}
	shf.r.wrap.b32 	%r986, %r985, %r984, 19;
	shf.r.wrap.b32 	%r987, %r984, %r985, 19;
	mov.b64 	%rd1478, {%r987, %r986};
	shf.l.wrap.b32 	%r988, %r984, %r985, 3;
	shf.l.wrap.b32 	%r989, %r985, %r984, 3;
	mov.b64 	%rd1479, {%r989, %r988};
	shr.u64 	%rd1480, %rd10045, 6;
	xor.b64  	%rd1481, %rd1478, %rd1480;
	xor.b64  	%rd1482, %rd1481, %rd1479;
	shr.u64 	%rd1483, %rd10042, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r990,%dummy}, %rd10042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r991}, %rd10042;
	}
	shf.r.wrap.b32 	%r992, %r991, %r990, 1;
	shf.r.wrap.b32 	%r993, %r990, %r991, 1;
	mov.b64 	%rd1484, {%r993, %r992};
	xor.b64  	%rd1485, %rd1484, %rd1483;
	shf.r.wrap.b32 	%r994, %r991, %r990, 8;
	shf.r.wrap.b32 	%r995, %r990, %r991, 8;
	mov.b64 	%rd1486, {%r995, %r994};
	xor.b64  	%rd1487, %rd1485, %rd1486;
	add.s64 	%rd1488, %rd10059, %rd10043;
	add.s64 	%rd1489, %rd1488, %rd1482;
	add.s64 	%rd10043, %rd1489, %rd1487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r996,%dummy}, %rd10044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r997}, %rd10044;
	}
	shf.r.wrap.b32 	%r998, %r997, %r996, 19;
	shf.r.wrap.b32 	%r999, %r996, %r997, 19;
	mov.b64 	%rd1490, {%r999, %r998};
	shf.l.wrap.b32 	%r1000, %r996, %r997, 3;
	shf.l.wrap.b32 	%r1001, %r997, %r996, 3;
	mov.b64 	%rd1491, {%r1001, %r1000};
	shr.u64 	%rd1492, %rd10044, 6;
	xor.b64  	%rd1493, %rd1490, %rd1492;
	xor.b64  	%rd1494, %rd1493, %rd1491;
	shr.u64 	%rd1495, %rd10041, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1002,%dummy}, %rd10041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1003}, %rd10041;
	}
	shf.r.wrap.b32 	%r1004, %r1003, %r1002, 1;
	shf.r.wrap.b32 	%r1005, %r1002, %r1003, 1;
	mov.b64 	%rd1496, {%r1005, %r1004};
	xor.b64  	%rd1497, %rd1496, %rd1495;
	shf.r.wrap.b32 	%r1006, %r1003, %r1002, 8;
	shf.r.wrap.b32 	%r1007, %r1002, %r1003, 8;
	mov.b64 	%rd1498, {%r1007, %r1006};
	xor.b64  	%rd1499, %rd1497, %rd1498;
	add.s64 	%rd1500, %rd10060, %rd10042;
	add.s64 	%rd1501, %rd1500, %rd1494;
	add.s64 	%rd10042, %rd1501, %rd1499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1008,%dummy}, %rd10043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1009}, %rd10043;
	}
	shf.r.wrap.b32 	%r1010, %r1009, %r1008, 19;
	shf.r.wrap.b32 	%r1011, %r1008, %r1009, 19;
	mov.b64 	%rd1502, {%r1011, %r1010};
	shf.l.wrap.b32 	%r1012, %r1008, %r1009, 3;
	shf.l.wrap.b32 	%r1013, %r1009, %r1008, 3;
	mov.b64 	%rd1503, {%r1013, %r1012};
	shr.u64 	%rd1504, %rd10043, 6;
	xor.b64  	%rd1505, %rd1502, %rd1504;
	xor.b64  	%rd1506, %rd1505, %rd1503;
	shr.u64 	%rd1507, %rd10040, 7;
	shf.r.wrap.b32 	%r1014, %r853, %r852, 1;
	shf.r.wrap.b32 	%r1015, %r852, %r853, 1;
	mov.b64 	%rd1508, {%r1015, %r1014};
	xor.b64  	%rd1509, %rd1508, %rd1507;
	shf.r.wrap.b32 	%r1016, %r853, %r852, 8;
	shf.r.wrap.b32 	%r1017, %r852, %r853, 8;
	mov.b64 	%rd1510, {%r1017, %r1016};
	xor.b64  	%rd1511, %rd1509, %rd1510;
	add.s64 	%rd1512, %rd10061, %rd10041;
	add.s64 	%rd1513, %rd1512, %rd1506;
	add.s64 	%rd10041, %rd1513, %rd1511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1018,%dummy}, %rd10042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1019}, %rd10042;
	}
	shf.r.wrap.b32 	%r1020, %r1019, %r1018, 19;
	shf.r.wrap.b32 	%r1021, %r1018, %r1019, 19;
	mov.b64 	%rd1514, {%r1021, %r1020};
	shf.l.wrap.b32 	%r1022, %r1018, %r1019, 3;
	shf.l.wrap.b32 	%r1023, %r1019, %r1018, 3;
	mov.b64 	%rd1515, {%r1023, %r1022};
	shr.u64 	%rd1516, %rd10042, 6;
	xor.b64  	%rd1517, %rd1514, %rd1516;
	xor.b64  	%rd1518, %rd1517, %rd1515;
	shr.u64 	%rd1519, %rd10039, 7;
	shf.r.wrap.b32 	%r1024, %r865, %r864, 1;
	shf.r.wrap.b32 	%r1025, %r864, %r865, 1;
	mov.b64 	%rd1520, {%r1025, %r1024};
	xor.b64  	%rd1521, %rd1520, %rd1519;
	shf.r.wrap.b32 	%r1026, %r865, %r864, 8;
	shf.r.wrap.b32 	%r1027, %r864, %r865, 8;
	mov.b64 	%rd1522, {%r1027, %r1026};
	xor.b64  	%rd1523, %rd1521, %rd1522;
	add.s64 	%rd1524, %rd10062, %rd10040;
	add.s64 	%rd1525, %rd1524, %rd1518;
	add.s64 	%rd10040, %rd1525, %rd1523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1028,%dummy}, %rd10041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1029}, %rd10041;
	}
	shf.r.wrap.b32 	%r1030, %r1029, %r1028, 19;
	shf.r.wrap.b32 	%r1031, %r1028, %r1029, 19;
	mov.b64 	%rd1526, {%r1031, %r1030};
	shf.l.wrap.b32 	%r1032, %r1028, %r1029, 3;
	shf.l.wrap.b32 	%r1033, %r1029, %r1028, 3;
	mov.b64 	%rd1527, {%r1033, %r1032};
	shr.u64 	%rd1528, %rd10041, 6;
	xor.b64  	%rd1529, %rd1526, %rd1528;
	xor.b64  	%rd1530, %rd1529, %rd1527;
	shf.r.wrap.b32 	%r1034, %r877, %r876, 1;
	shf.r.wrap.b32 	%r1035, %r876, %r877, 1;
	mov.b64 	%rd1531, {%r1035, %r1034};
	shf.r.wrap.b32 	%r1036, %r877, %r876, 8;
	shf.r.wrap.b32 	%r1037, %r876, %r877, 8;
	mov.b64 	%rd1532, {%r1037, %r1036};
	shr.u64 	%rd1533, %rd10055, 7;
	xor.b64  	%rd1534, %rd1531, %rd1533;
	xor.b64  	%rd1535, %rd1534, %rd1532;
	add.s64 	%rd1536, %rd10046, %rd10039;
	add.s64 	%rd1537, %rd1536, %rd1530;
	add.s64 	%rd10039, %rd1537, %rd1535;
	mul.wide.s32 	%rd1538, %r7548, 8;
	mov.u64 	%rd1539, k_sha512;
	add.s64 	%rd1540, %rd1539, %rd1538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1038,%dummy}, %rd10051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1039}, %rd10051;
	}
	shf.r.wrap.b32 	%r1040, %r1039, %r1038, 18;
	shf.r.wrap.b32 	%r1041, %r1038, %r1039, 18;
	mov.b64 	%rd1541, {%r1041, %r1040};
	shf.r.wrap.b32 	%r1042, %r1039, %r1038, 14;
	shf.r.wrap.b32 	%r1043, %r1038, %r1039, 14;
	mov.b64 	%rd1542, {%r1043, %r1042};
	xor.b64  	%rd1543, %rd1541, %rd1542;
	shf.l.wrap.b32 	%r1044, %r1038, %r1039, 23;
	shf.l.wrap.b32 	%r1045, %r1039, %r1038, 23;
	mov.b64 	%rd1544, {%r1045, %r1044};
	xor.b64  	%rd1545, %rd1543, %rd1544;
	xor.b64  	%rd1546, %rd10053, %rd10052;
	and.b64  	%rd1547, %rd1546, %rd10051;
	xor.b64  	%rd1548, %rd1547, %rd10053;
	add.s64 	%rd1549, %rd1548, %rd10054;
	add.s64 	%rd1550, %rd1549, %rd10055;
	ld.const.u64 	%rd1551, [%rd1540];
	add.s64 	%rd1552, %rd1550, %rd1551;
	add.s64 	%rd1553, %rd1552, %rd1545;
	add.s64 	%rd1554, %rd1553, %rd10050;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1046}, %rd10047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1047,%dummy}, %rd10047;
	}
	shf.l.wrap.b32 	%r1048, %r1047, %r1046, 30;
	shf.l.wrap.b32 	%r1049, %r1046, %r1047, 30;
	mov.b64 	%rd1555, {%r1049, %r1048};
	shf.r.wrap.b32 	%r1050, %r1046, %r1047, 28;
	shf.r.wrap.b32 	%r1051, %r1047, %r1046, 28;
	mov.b64 	%rd1556, {%r1051, %r1050};
	xor.b64  	%rd1557, %rd1555, %rd1556;
	shf.l.wrap.b32 	%r1052, %r1047, %r1046, 25;
	shf.l.wrap.b32 	%r1053, %r1046, %r1047, 25;
	mov.b64 	%rd1558, {%r1053, %r1052};
	xor.b64  	%rd1559, %rd1557, %rd1558;
	xor.b64  	%rd1560, %rd10048, %rd10047;
	and.b64  	%rd1561, %rd1560, %rd10049;
	and.b64  	%rd1562, %rd10048, %rd10047;
	or.b64  	%rd1563, %rd1561, %rd1562;
	add.s64 	%rd1564, %rd1553, %rd1563;
	add.s64 	%rd1565, %rd1564, %rd1559;
	add.s32 	%r1054, %r7548, 1;
	mul.wide.s32 	%rd1566, %r1054, 8;
	add.s64 	%rd1567, %rd1539, %rd1566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1055,%dummy}, %rd1554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1056}, %rd1554;
	}
	shf.r.wrap.b32 	%r1057, %r1056, %r1055, 14;
	shf.r.wrap.b32 	%r1058, %r1055, %r1056, 14;
	mov.b64 	%rd1568, {%r1058, %r1057};
	shf.r.wrap.b32 	%r1059, %r1056, %r1055, 18;
	shf.r.wrap.b32 	%r1060, %r1055, %r1056, 18;
	mov.b64 	%rd1569, {%r1060, %r1059};
	xor.b64  	%rd1570, %rd1569, %rd1568;
	shf.l.wrap.b32 	%r1061, %r1055, %r1056, 23;
	shf.l.wrap.b32 	%r1062, %r1056, %r1055, 23;
	mov.b64 	%rd1571, {%r1062, %r1061};
	xor.b64  	%rd1572, %rd1570, %rd1571;
	xor.b64  	%rd1573, %rd10052, %rd10051;
	and.b64  	%rd1574, %rd1554, %rd1573;
	xor.b64  	%rd1575, %rd1574, %rd10052;
	add.s64 	%rd1576, %rd10056, %rd10053;
	ld.const.u64 	%rd1577, [%rd1567];
	add.s64 	%rd1578, %rd1576, %rd1577;
	add.s64 	%rd1579, %rd1578, %rd1575;
	add.s64 	%rd1580, %rd1579, %rd1572;
	add.s64 	%rd1581, %rd1580, %rd10049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1063,%dummy}, %rd1565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1064}, %rd1565;
	}
	shf.r.wrap.b32 	%r1065, %r1064, %r1063, 28;
	shf.r.wrap.b32 	%r1066, %r1063, %r1064, 28;
	mov.b64 	%rd1582, {%r1066, %r1065};
	shf.l.wrap.b32 	%r1067, %r1063, %r1064, 30;
	shf.l.wrap.b32 	%r1068, %r1064, %r1063, 30;
	mov.b64 	%rd1583, {%r1068, %r1067};
	xor.b64  	%rd1584, %rd1583, %rd1582;
	shf.l.wrap.b32 	%r1069, %r1063, %r1064, 25;
	shf.l.wrap.b32 	%r1070, %r1064, %r1063, 25;
	mov.b64 	%rd1585, {%r1070, %r1069};
	xor.b64  	%rd1586, %rd1584, %rd1585;
	and.b64  	%rd1587, %rd1565, %rd10047;
	xor.b64  	%rd1588, %rd1565, %rd10047;
	and.b64  	%rd1589, %rd1588, %rd10048;
	or.b64  	%rd1590, %rd1589, %rd1587;
	add.s64 	%rd1591, %rd1580, %rd1590;
	add.s64 	%rd1592, %rd1591, %rd1586;
	add.s32 	%r1071, %r7548, 2;
	mul.wide.s32 	%rd1593, %r1071, 8;
	add.s64 	%rd1594, %rd1539, %rd1593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1072,%dummy}, %rd1581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1073}, %rd1581;
	}
	shf.r.wrap.b32 	%r1074, %r1073, %r1072, 14;
	shf.r.wrap.b32 	%r1075, %r1072, %r1073, 14;
	mov.b64 	%rd1595, {%r1075, %r1074};
	shf.r.wrap.b32 	%r1076, %r1073, %r1072, 18;
	shf.r.wrap.b32 	%r1077, %r1072, %r1073, 18;
	mov.b64 	%rd1596, {%r1077, %r1076};
	xor.b64  	%rd1597, %rd1596, %rd1595;
	shf.l.wrap.b32 	%r1078, %r1072, %r1073, 23;
	shf.l.wrap.b32 	%r1079, %r1073, %r1072, 23;
	mov.b64 	%rd1598, {%r1079, %r1078};
	xor.b64  	%rd1599, %rd1597, %rd1598;
	xor.b64  	%rd1600, %rd1554, %rd10051;
	and.b64  	%rd1601, %rd1581, %rd1600;
	xor.b64  	%rd1602, %rd1601, %rd10051;
	add.s64 	%rd1603, %rd10057, %rd10052;
	ld.const.u64 	%rd1604, [%rd1594];
	add.s64 	%rd1605, %rd1603, %rd1604;
	add.s64 	%rd1606, %rd1605, %rd1602;
	add.s64 	%rd1607, %rd1606, %rd1599;
	add.s64 	%rd1608, %rd1607, %rd10048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1080,%dummy}, %rd1592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1081}, %rd1592;
	}
	shf.r.wrap.b32 	%r1082, %r1081, %r1080, 28;
	shf.r.wrap.b32 	%r1083, %r1080, %r1081, 28;
	mov.b64 	%rd1609, {%r1083, %r1082};
	shf.l.wrap.b32 	%r1084, %r1080, %r1081, 30;
	shf.l.wrap.b32 	%r1085, %r1081, %r1080, 30;
	mov.b64 	%rd1610, {%r1085, %r1084};
	xor.b64  	%rd1611, %rd1610, %rd1609;
	shf.l.wrap.b32 	%r1086, %r1080, %r1081, 25;
	shf.l.wrap.b32 	%r1087, %r1081, %r1080, 25;
	mov.b64 	%rd1612, {%r1087, %r1086};
	xor.b64  	%rd1613, %rd1611, %rd1612;
	and.b64  	%rd1614, %rd1592, %rd1565;
	xor.b64  	%rd1615, %rd1592, %rd1565;
	and.b64  	%rd1616, %rd1615, %rd10047;
	or.b64  	%rd1617, %rd1616, %rd1614;
	add.s64 	%rd1618, %rd1607, %rd1617;
	add.s64 	%rd1619, %rd1618, %rd1613;
	add.s32 	%r1088, %r7548, 3;
	mul.wide.s32 	%rd1620, %r1088, 8;
	add.s64 	%rd1621, %rd1539, %rd1620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1089,%dummy}, %rd1608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1090}, %rd1608;
	}
	shf.r.wrap.b32 	%r1091, %r1090, %r1089, 14;
	shf.r.wrap.b32 	%r1092, %r1089, %r1090, 14;
	mov.b64 	%rd1622, {%r1092, %r1091};
	shf.r.wrap.b32 	%r1093, %r1090, %r1089, 18;
	shf.r.wrap.b32 	%r1094, %r1089, %r1090, 18;
	mov.b64 	%rd1623, {%r1094, %r1093};
	xor.b64  	%rd1624, %rd1623, %rd1622;
	shf.l.wrap.b32 	%r1095, %r1089, %r1090, 23;
	shf.l.wrap.b32 	%r1096, %r1090, %r1089, 23;
	mov.b64 	%rd1625, {%r1096, %r1095};
	xor.b64  	%rd1626, %rd1624, %rd1625;
	xor.b64  	%rd1627, %rd1581, %rd1554;
	and.b64  	%rd1628, %rd1608, %rd1627;
	xor.b64  	%rd1629, %rd1628, %rd1554;
	add.s64 	%rd1630, %rd10058, %rd10051;
	ld.const.u64 	%rd1631, [%rd1621];
	add.s64 	%rd1632, %rd1630, %rd1631;
	add.s64 	%rd1633, %rd1632, %rd1629;
	add.s64 	%rd1634, %rd1633, %rd1626;
	add.s64 	%rd1635, %rd1634, %rd10047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1097,%dummy}, %rd1619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1098}, %rd1619;
	}
	shf.r.wrap.b32 	%r1099, %r1098, %r1097, 28;
	shf.r.wrap.b32 	%r1100, %r1097, %r1098, 28;
	mov.b64 	%rd1636, {%r1100, %r1099};
	shf.l.wrap.b32 	%r1101, %r1097, %r1098, 30;
	shf.l.wrap.b32 	%r1102, %r1098, %r1097, 30;
	mov.b64 	%rd1637, {%r1102, %r1101};
	xor.b64  	%rd1638, %rd1637, %rd1636;
	shf.l.wrap.b32 	%r1103, %r1097, %r1098, 25;
	shf.l.wrap.b32 	%r1104, %r1098, %r1097, 25;
	mov.b64 	%rd1639, {%r1104, %r1103};
	xor.b64  	%rd1640, %rd1638, %rd1639;
	and.b64  	%rd1641, %rd1619, %rd1592;
	xor.b64  	%rd1642, %rd1619, %rd1592;
	and.b64  	%rd1643, %rd1642, %rd1565;
	or.b64  	%rd1644, %rd1643, %rd1641;
	add.s64 	%rd1645, %rd1634, %rd1644;
	add.s64 	%rd1646, %rd1645, %rd1640;
	add.s32 	%r1105, %r7548, 4;
	mul.wide.s32 	%rd1647, %r1105, 8;
	add.s64 	%rd1648, %rd1539, %rd1647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1106,%dummy}, %rd1635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1107}, %rd1635;
	}
	shf.r.wrap.b32 	%r1108, %r1107, %r1106, 14;
	shf.r.wrap.b32 	%r1109, %r1106, %r1107, 14;
	mov.b64 	%rd1649, {%r1109, %r1108};
	shf.r.wrap.b32 	%r1110, %r1107, %r1106, 18;
	shf.r.wrap.b32 	%r1111, %r1106, %r1107, 18;
	mov.b64 	%rd1650, {%r1111, %r1110};
	xor.b64  	%rd1651, %rd1650, %rd1649;
	shf.l.wrap.b32 	%r1112, %r1106, %r1107, 23;
	shf.l.wrap.b32 	%r1113, %r1107, %r1106, 23;
	mov.b64 	%rd1652, {%r1113, %r1112};
	xor.b64  	%rd1653, %rd1651, %rd1652;
	xor.b64  	%rd1654, %rd1608, %rd1581;
	and.b64  	%rd1655, %rd1635, %rd1654;
	xor.b64  	%rd1656, %rd1655, %rd1581;
	add.s64 	%rd1657, %rd1554, %rd10059;
	ld.const.u64 	%rd1658, [%rd1648];
	add.s64 	%rd1659, %rd1657, %rd1658;
	add.s64 	%rd1660, %rd1659, %rd1656;
	add.s64 	%rd1661, %rd1660, %rd1653;
	add.s64 	%rd1662, %rd1661, %rd1565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1114,%dummy}, %rd1646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1115}, %rd1646;
	}
	shf.r.wrap.b32 	%r1116, %r1115, %r1114, 28;
	shf.r.wrap.b32 	%r1117, %r1114, %r1115, 28;
	mov.b64 	%rd1663, {%r1117, %r1116};
	shf.l.wrap.b32 	%r1118, %r1114, %r1115, 30;
	shf.l.wrap.b32 	%r1119, %r1115, %r1114, 30;
	mov.b64 	%rd1664, {%r1119, %r1118};
	xor.b64  	%rd1665, %rd1664, %rd1663;
	shf.l.wrap.b32 	%r1120, %r1114, %r1115, 25;
	shf.l.wrap.b32 	%r1121, %r1115, %r1114, 25;
	mov.b64 	%rd1666, {%r1121, %r1120};
	xor.b64  	%rd1667, %rd1665, %rd1666;
	and.b64  	%rd1668, %rd1646, %rd1619;
	xor.b64  	%rd1669, %rd1646, %rd1619;
	and.b64  	%rd1670, %rd1669, %rd1592;
	or.b64  	%rd1671, %rd1670, %rd1668;
	add.s64 	%rd1672, %rd1661, %rd1671;
	add.s64 	%rd1673, %rd1672, %rd1667;
	add.s32 	%r1122, %r7548, 5;
	mul.wide.s32 	%rd1674, %r1122, 8;
	add.s64 	%rd1675, %rd1539, %rd1674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1123,%dummy}, %rd1662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1124}, %rd1662;
	}
	shf.r.wrap.b32 	%r1125, %r1124, %r1123, 14;
	shf.r.wrap.b32 	%r1126, %r1123, %r1124, 14;
	mov.b64 	%rd1676, {%r1126, %r1125};
	shf.r.wrap.b32 	%r1127, %r1124, %r1123, 18;
	shf.r.wrap.b32 	%r1128, %r1123, %r1124, 18;
	mov.b64 	%rd1677, {%r1128, %r1127};
	xor.b64  	%rd1678, %rd1677, %rd1676;
	shf.l.wrap.b32 	%r1129, %r1123, %r1124, 23;
	shf.l.wrap.b32 	%r1130, %r1124, %r1123, 23;
	mov.b64 	%rd1679, {%r1130, %r1129};
	xor.b64  	%rd1680, %rd1678, %rd1679;
	xor.b64  	%rd1681, %rd1635, %rd1608;
	and.b64  	%rd1682, %rd1662, %rd1681;
	xor.b64  	%rd1683, %rd1682, %rd1608;
	add.s64 	%rd1684, %rd1581, %rd10060;
	ld.const.u64 	%rd1685, [%rd1675];
	add.s64 	%rd1686, %rd1684, %rd1685;
	add.s64 	%rd1687, %rd1686, %rd1683;
	add.s64 	%rd1688, %rd1687, %rd1680;
	add.s64 	%rd1689, %rd1688, %rd1592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1131,%dummy}, %rd1673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1132}, %rd1673;
	}
	shf.r.wrap.b32 	%r1133, %r1132, %r1131, 28;
	shf.r.wrap.b32 	%r1134, %r1131, %r1132, 28;
	mov.b64 	%rd1690, {%r1134, %r1133};
	shf.l.wrap.b32 	%r1135, %r1131, %r1132, 30;
	shf.l.wrap.b32 	%r1136, %r1132, %r1131, 30;
	mov.b64 	%rd1691, {%r1136, %r1135};
	xor.b64  	%rd1692, %rd1691, %rd1690;
	shf.l.wrap.b32 	%r1137, %r1131, %r1132, 25;
	shf.l.wrap.b32 	%r1138, %r1132, %r1131, 25;
	mov.b64 	%rd1693, {%r1138, %r1137};
	xor.b64  	%rd1694, %rd1692, %rd1693;
	and.b64  	%rd1695, %rd1673, %rd1646;
	xor.b64  	%rd1696, %rd1673, %rd1646;
	and.b64  	%rd1697, %rd1696, %rd1619;
	or.b64  	%rd1698, %rd1697, %rd1695;
	add.s64 	%rd1699, %rd1688, %rd1698;
	add.s64 	%rd1700, %rd1699, %rd1694;
	add.s32 	%r1139, %r7548, 6;
	mul.wide.s32 	%rd1701, %r1139, 8;
	add.s64 	%rd1702, %rd1539, %rd1701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1140,%dummy}, %rd1689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1141}, %rd1689;
	}
	shf.r.wrap.b32 	%r1142, %r1141, %r1140, 14;
	shf.r.wrap.b32 	%r1143, %r1140, %r1141, 14;
	mov.b64 	%rd1703, {%r1143, %r1142};
	shf.r.wrap.b32 	%r1144, %r1141, %r1140, 18;
	shf.r.wrap.b32 	%r1145, %r1140, %r1141, 18;
	mov.b64 	%rd1704, {%r1145, %r1144};
	xor.b64  	%rd1705, %rd1704, %rd1703;
	shf.l.wrap.b32 	%r1146, %r1140, %r1141, 23;
	shf.l.wrap.b32 	%r1147, %r1141, %r1140, 23;
	mov.b64 	%rd1706, {%r1147, %r1146};
	xor.b64  	%rd1707, %rd1705, %rd1706;
	xor.b64  	%rd1708, %rd1662, %rd1635;
	and.b64  	%rd1709, %rd1689, %rd1708;
	xor.b64  	%rd1710, %rd1709, %rd1635;
	add.s64 	%rd1711, %rd1608, %rd10061;
	ld.const.u64 	%rd1712, [%rd1702];
	add.s64 	%rd1713, %rd1711, %rd1712;
	add.s64 	%rd1714, %rd1713, %rd1710;
	add.s64 	%rd1715, %rd1714, %rd1707;
	add.s64 	%rd1716, %rd1715, %rd1619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1148,%dummy}, %rd1700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1149}, %rd1700;
	}
	shf.r.wrap.b32 	%r1150, %r1149, %r1148, 28;
	shf.r.wrap.b32 	%r1151, %r1148, %r1149, 28;
	mov.b64 	%rd1717, {%r1151, %r1150};
	shf.l.wrap.b32 	%r1152, %r1148, %r1149, 30;
	shf.l.wrap.b32 	%r1153, %r1149, %r1148, 30;
	mov.b64 	%rd1718, {%r1153, %r1152};
	xor.b64  	%rd1719, %rd1718, %rd1717;
	shf.l.wrap.b32 	%r1154, %r1148, %r1149, 25;
	shf.l.wrap.b32 	%r1155, %r1149, %r1148, 25;
	mov.b64 	%rd1720, {%r1155, %r1154};
	xor.b64  	%rd1721, %rd1719, %rd1720;
	and.b64  	%rd1722, %rd1700, %rd1673;
	xor.b64  	%rd1723, %rd1700, %rd1673;
	and.b64  	%rd1724, %rd1723, %rd1646;
	or.b64  	%rd1725, %rd1724, %rd1722;
	add.s64 	%rd1726, %rd1715, %rd1725;
	add.s64 	%rd1727, %rd1726, %rd1721;
	add.s32 	%r1156, %r7548, 7;
	mul.wide.s32 	%rd1728, %r1156, 8;
	add.s64 	%rd1729, %rd1539, %rd1728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1157,%dummy}, %rd1716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1158}, %rd1716;
	}
	shf.r.wrap.b32 	%r1159, %r1158, %r1157, 14;
	shf.r.wrap.b32 	%r1160, %r1157, %r1158, 14;
	mov.b64 	%rd1730, {%r1160, %r1159};
	shf.r.wrap.b32 	%r1161, %r1158, %r1157, 18;
	shf.r.wrap.b32 	%r1162, %r1157, %r1158, 18;
	mov.b64 	%rd1731, {%r1162, %r1161};
	xor.b64  	%rd1732, %rd1731, %rd1730;
	shf.l.wrap.b32 	%r1163, %r1157, %r1158, 23;
	shf.l.wrap.b32 	%r1164, %r1158, %r1157, 23;
	mov.b64 	%rd1733, {%r1164, %r1163};
	xor.b64  	%rd1734, %rd1732, %rd1733;
	xor.b64  	%rd1735, %rd1689, %rd1662;
	and.b64  	%rd1736, %rd1716, %rd1735;
	xor.b64  	%rd1737, %rd1736, %rd1662;
	add.s64 	%rd1738, %rd1635, %rd10062;
	ld.const.u64 	%rd1739, [%rd1729];
	add.s64 	%rd1740, %rd1738, %rd1739;
	add.s64 	%rd1741, %rd1740, %rd1737;
	add.s64 	%rd1742, %rd1741, %rd1734;
	add.s64 	%rd1743, %rd1742, %rd1646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1165,%dummy}, %rd1727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1166}, %rd1727;
	}
	shf.r.wrap.b32 	%r1167, %r1166, %r1165, 28;
	shf.r.wrap.b32 	%r1168, %r1165, %r1166, 28;
	mov.b64 	%rd1744, {%r1168, %r1167};
	shf.l.wrap.b32 	%r1169, %r1165, %r1166, 30;
	shf.l.wrap.b32 	%r1170, %r1166, %r1165, 30;
	mov.b64 	%rd1745, {%r1170, %r1169};
	xor.b64  	%rd1746, %rd1745, %rd1744;
	shf.l.wrap.b32 	%r1171, %r1165, %r1166, 25;
	shf.l.wrap.b32 	%r1172, %r1166, %r1165, 25;
	mov.b64 	%rd1747, {%r1172, %r1171};
	xor.b64  	%rd1748, %rd1746, %rd1747;
	and.b64  	%rd1749, %rd1727, %rd1700;
	xor.b64  	%rd1750, %rd1727, %rd1700;
	and.b64  	%rd1751, %rd1750, %rd1673;
	or.b64  	%rd1752, %rd1751, %rd1749;
	add.s64 	%rd1753, %rd1742, %rd1752;
	add.s64 	%rd1754, %rd1753, %rd1748;
	add.s32 	%r1173, %r7548, 8;
	mul.wide.s32 	%rd1755, %r1173, 8;
	add.s64 	%rd1756, %rd1539, %rd1755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1174,%dummy}, %rd1743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1175}, %rd1743;
	}
	shf.r.wrap.b32 	%r1176, %r1175, %r1174, 14;
	shf.r.wrap.b32 	%r1177, %r1174, %r1175, 14;
	mov.b64 	%rd1757, {%r1177, %r1176};
	shf.r.wrap.b32 	%r1178, %r1175, %r1174, 18;
	shf.r.wrap.b32 	%r1179, %r1174, %r1175, 18;
	mov.b64 	%rd1758, {%r1179, %r1178};
	xor.b64  	%rd1759, %rd1758, %rd1757;
	shf.l.wrap.b32 	%r1180, %r1174, %r1175, 23;
	shf.l.wrap.b32 	%r1181, %r1175, %r1174, 23;
	mov.b64 	%rd1760, {%r1181, %r1180};
	xor.b64  	%rd1761, %rd1759, %rd1760;
	xor.b64  	%rd1762, %rd1716, %rd1689;
	and.b64  	%rd1763, %rd1743, %rd1762;
	xor.b64  	%rd1764, %rd1763, %rd1689;
	add.s64 	%rd1765, %rd1662, %rd10046;
	ld.const.u64 	%rd1766, [%rd1756];
	add.s64 	%rd1767, %rd1765, %rd1766;
	add.s64 	%rd1768, %rd1767, %rd1764;
	add.s64 	%rd1769, %rd1768, %rd1761;
	add.s64 	%rd1770, %rd1769, %rd1673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1182,%dummy}, %rd1754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1183}, %rd1754;
	}
	shf.r.wrap.b32 	%r1184, %r1183, %r1182, 28;
	shf.r.wrap.b32 	%r1185, %r1182, %r1183, 28;
	mov.b64 	%rd1771, {%r1185, %r1184};
	shf.l.wrap.b32 	%r1186, %r1182, %r1183, 30;
	shf.l.wrap.b32 	%r1187, %r1183, %r1182, 30;
	mov.b64 	%rd1772, {%r1187, %r1186};
	xor.b64  	%rd1773, %rd1772, %rd1771;
	shf.l.wrap.b32 	%r1188, %r1182, %r1183, 25;
	shf.l.wrap.b32 	%r1189, %r1183, %r1182, 25;
	mov.b64 	%rd1774, {%r1189, %r1188};
	xor.b64  	%rd1775, %rd1773, %rd1774;
	and.b64  	%rd1776, %rd1754, %rd1727;
	xor.b64  	%rd1777, %rd1754, %rd1727;
	and.b64  	%rd1778, %rd1777, %rd1700;
	or.b64  	%rd1779, %rd1778, %rd1776;
	add.s64 	%rd1780, %rd1769, %rd1779;
	add.s64 	%rd1781, %rd1780, %rd1775;
	add.s32 	%r1190, %r7548, 9;
	mul.wide.s32 	%rd1782, %r1190, 8;
	add.s64 	%rd1783, %rd1539, %rd1782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1191,%dummy}, %rd1770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1192}, %rd1770;
	}
	shf.r.wrap.b32 	%r1193, %r1192, %r1191, 14;
	shf.r.wrap.b32 	%r1194, %r1191, %r1192, 14;
	mov.b64 	%rd1784, {%r1194, %r1193};
	shf.r.wrap.b32 	%r1195, %r1192, %r1191, 18;
	shf.r.wrap.b32 	%r1196, %r1191, %r1192, 18;
	mov.b64 	%rd1785, {%r1196, %r1195};
	xor.b64  	%rd1786, %rd1785, %rd1784;
	shf.l.wrap.b32 	%r1197, %r1191, %r1192, 23;
	shf.l.wrap.b32 	%r1198, %r1192, %r1191, 23;
	mov.b64 	%rd1787, {%r1198, %r1197};
	xor.b64  	%rd1788, %rd1786, %rd1787;
	xor.b64  	%rd1789, %rd1743, %rd1716;
	and.b64  	%rd1790, %rd1770, %rd1789;
	xor.b64  	%rd1791, %rd1790, %rd1716;
	add.s64 	%rd1792, %rd1689, %rd10045;
	ld.const.u64 	%rd1793, [%rd1783];
	add.s64 	%rd1794, %rd1792, %rd1793;
	add.s64 	%rd1795, %rd1794, %rd1791;
	add.s64 	%rd1796, %rd1795, %rd1788;
	add.s64 	%rd1797, %rd1796, %rd1700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1199,%dummy}, %rd1781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1200}, %rd1781;
	}
	shf.r.wrap.b32 	%r1201, %r1200, %r1199, 28;
	shf.r.wrap.b32 	%r1202, %r1199, %r1200, 28;
	mov.b64 	%rd1798, {%r1202, %r1201};
	shf.l.wrap.b32 	%r1203, %r1199, %r1200, 30;
	shf.l.wrap.b32 	%r1204, %r1200, %r1199, 30;
	mov.b64 	%rd1799, {%r1204, %r1203};
	xor.b64  	%rd1800, %rd1799, %rd1798;
	shf.l.wrap.b32 	%r1205, %r1199, %r1200, 25;
	shf.l.wrap.b32 	%r1206, %r1200, %r1199, 25;
	mov.b64 	%rd1801, {%r1206, %r1205};
	xor.b64  	%rd1802, %rd1800, %rd1801;
	and.b64  	%rd1803, %rd1781, %rd1754;
	xor.b64  	%rd1804, %rd1781, %rd1754;
	and.b64  	%rd1805, %rd1804, %rd1727;
	or.b64  	%rd1806, %rd1805, %rd1803;
	add.s64 	%rd1807, %rd1796, %rd1806;
	add.s64 	%rd1808, %rd1807, %rd1802;
	add.s32 	%r1207, %r7548, 10;
	mul.wide.s32 	%rd1809, %r1207, 8;
	add.s64 	%rd1810, %rd1539, %rd1809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1208,%dummy}, %rd1797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1209}, %rd1797;
	}
	shf.r.wrap.b32 	%r1210, %r1209, %r1208, 14;
	shf.r.wrap.b32 	%r1211, %r1208, %r1209, 14;
	mov.b64 	%rd1811, {%r1211, %r1210};
	shf.r.wrap.b32 	%r1212, %r1209, %r1208, 18;
	shf.r.wrap.b32 	%r1213, %r1208, %r1209, 18;
	mov.b64 	%rd1812, {%r1213, %r1212};
	xor.b64  	%rd1813, %rd1812, %rd1811;
	shf.l.wrap.b32 	%r1214, %r1208, %r1209, 23;
	shf.l.wrap.b32 	%r1215, %r1209, %r1208, 23;
	mov.b64 	%rd1814, {%r1215, %r1214};
	xor.b64  	%rd1815, %rd1813, %rd1814;
	xor.b64  	%rd1816, %rd1770, %rd1743;
	and.b64  	%rd1817, %rd1797, %rd1816;
	xor.b64  	%rd1818, %rd1817, %rd1743;
	add.s64 	%rd1819, %rd1716, %rd10044;
	ld.const.u64 	%rd1820, [%rd1810];
	add.s64 	%rd1821, %rd1819, %rd1820;
	add.s64 	%rd1822, %rd1821, %rd1818;
	add.s64 	%rd1823, %rd1822, %rd1815;
	add.s64 	%rd1824, %rd1823, %rd1727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1216,%dummy}, %rd1808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1217}, %rd1808;
	}
	shf.r.wrap.b32 	%r1218, %r1217, %r1216, 28;
	shf.r.wrap.b32 	%r1219, %r1216, %r1217, 28;
	mov.b64 	%rd1825, {%r1219, %r1218};
	shf.l.wrap.b32 	%r1220, %r1216, %r1217, 30;
	shf.l.wrap.b32 	%r1221, %r1217, %r1216, 30;
	mov.b64 	%rd1826, {%r1221, %r1220};
	xor.b64  	%rd1827, %rd1826, %rd1825;
	shf.l.wrap.b32 	%r1222, %r1216, %r1217, 25;
	shf.l.wrap.b32 	%r1223, %r1217, %r1216, 25;
	mov.b64 	%rd1828, {%r1223, %r1222};
	xor.b64  	%rd1829, %rd1827, %rd1828;
	and.b64  	%rd1830, %rd1808, %rd1781;
	xor.b64  	%rd1831, %rd1808, %rd1781;
	and.b64  	%rd1832, %rd1831, %rd1754;
	or.b64  	%rd1833, %rd1832, %rd1830;
	add.s64 	%rd1834, %rd1823, %rd1833;
	add.s64 	%rd1835, %rd1834, %rd1829;
	add.s32 	%r1224, %r7548, 11;
	mul.wide.s32 	%rd1836, %r1224, 8;
	add.s64 	%rd1837, %rd1539, %rd1836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1225,%dummy}, %rd1824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1226}, %rd1824;
	}
	shf.r.wrap.b32 	%r1227, %r1226, %r1225, 14;
	shf.r.wrap.b32 	%r1228, %r1225, %r1226, 14;
	mov.b64 	%rd1838, {%r1228, %r1227};
	shf.r.wrap.b32 	%r1229, %r1226, %r1225, 18;
	shf.r.wrap.b32 	%r1230, %r1225, %r1226, 18;
	mov.b64 	%rd1839, {%r1230, %r1229};
	xor.b64  	%rd1840, %rd1839, %rd1838;
	shf.l.wrap.b32 	%r1231, %r1225, %r1226, 23;
	shf.l.wrap.b32 	%r1232, %r1226, %r1225, 23;
	mov.b64 	%rd1841, {%r1232, %r1231};
	xor.b64  	%rd1842, %rd1840, %rd1841;
	xor.b64  	%rd1843, %rd1797, %rd1770;
	and.b64  	%rd1844, %rd1824, %rd1843;
	xor.b64  	%rd1845, %rd1844, %rd1770;
	add.s64 	%rd1846, %rd1743, %rd10043;
	ld.const.u64 	%rd1847, [%rd1837];
	add.s64 	%rd1848, %rd1846, %rd1847;
	add.s64 	%rd1849, %rd1848, %rd1845;
	add.s64 	%rd1850, %rd1849, %rd1842;
	add.s64 	%rd1851, %rd1850, %rd1754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1233,%dummy}, %rd1835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1234}, %rd1835;
	}
	shf.r.wrap.b32 	%r1235, %r1234, %r1233, 28;
	shf.r.wrap.b32 	%r1236, %r1233, %r1234, 28;
	mov.b64 	%rd1852, {%r1236, %r1235};
	shf.l.wrap.b32 	%r1237, %r1233, %r1234, 30;
	shf.l.wrap.b32 	%r1238, %r1234, %r1233, 30;
	mov.b64 	%rd1853, {%r1238, %r1237};
	xor.b64  	%rd1854, %rd1853, %rd1852;
	shf.l.wrap.b32 	%r1239, %r1233, %r1234, 25;
	shf.l.wrap.b32 	%r1240, %r1234, %r1233, 25;
	mov.b64 	%rd1855, {%r1240, %r1239};
	xor.b64  	%rd1856, %rd1854, %rd1855;
	and.b64  	%rd1857, %rd1835, %rd1808;
	xor.b64  	%rd1858, %rd1835, %rd1808;
	and.b64  	%rd1859, %rd1858, %rd1781;
	or.b64  	%rd1860, %rd1859, %rd1857;
	add.s64 	%rd1861, %rd1850, %rd1860;
	add.s64 	%rd1862, %rd1861, %rd1856;
	add.s32 	%r1241, %r7548, 12;
	mul.wide.s32 	%rd1863, %r1241, 8;
	add.s64 	%rd1864, %rd1539, %rd1863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1242,%dummy}, %rd1851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1243}, %rd1851;
	}
	shf.r.wrap.b32 	%r1244, %r1243, %r1242, 14;
	shf.r.wrap.b32 	%r1245, %r1242, %r1243, 14;
	mov.b64 	%rd1865, {%r1245, %r1244};
	shf.r.wrap.b32 	%r1246, %r1243, %r1242, 18;
	shf.r.wrap.b32 	%r1247, %r1242, %r1243, 18;
	mov.b64 	%rd1866, {%r1247, %r1246};
	xor.b64  	%rd1867, %rd1866, %rd1865;
	shf.l.wrap.b32 	%r1248, %r1242, %r1243, 23;
	shf.l.wrap.b32 	%r1249, %r1243, %r1242, 23;
	mov.b64 	%rd1868, {%r1249, %r1248};
	xor.b64  	%rd1869, %rd1867, %rd1868;
	xor.b64  	%rd1870, %rd1824, %rd1797;
	and.b64  	%rd1871, %rd1851, %rd1870;
	xor.b64  	%rd1872, %rd1871, %rd1797;
	add.s64 	%rd1873, %rd1770, %rd10042;
	ld.const.u64 	%rd1874, [%rd1864];
	add.s64 	%rd1875, %rd1873, %rd1874;
	add.s64 	%rd1876, %rd1875, %rd1872;
	add.s64 	%rd1877, %rd1876, %rd1869;
	add.s64 	%rd10054, %rd1877, %rd1781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1250,%dummy}, %rd1862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1251}, %rd1862;
	}
	shf.r.wrap.b32 	%r1252, %r1251, %r1250, 28;
	shf.r.wrap.b32 	%r1253, %r1250, %r1251, 28;
	mov.b64 	%rd1878, {%r1253, %r1252};
	shf.l.wrap.b32 	%r1254, %r1250, %r1251, 30;
	shf.l.wrap.b32 	%r1255, %r1251, %r1250, 30;
	mov.b64 	%rd1879, {%r1255, %r1254};
	xor.b64  	%rd1880, %rd1879, %rd1878;
	shf.l.wrap.b32 	%r1256, %r1250, %r1251, 25;
	shf.l.wrap.b32 	%r1257, %r1251, %r1250, 25;
	mov.b64 	%rd1881, {%r1257, %r1256};
	xor.b64  	%rd1882, %rd1880, %rd1881;
	and.b64  	%rd1883, %rd1862, %rd1835;
	xor.b64  	%rd1884, %rd1862, %rd1835;
	and.b64  	%rd1885, %rd1884, %rd1808;
	or.b64  	%rd1886, %rd1885, %rd1883;
	add.s64 	%rd1887, %rd1877, %rd1886;
	add.s64 	%rd10050, %rd1887, %rd1882;
	add.s32 	%r1258, %r7548, 13;
	mul.wide.s32 	%rd1888, %r1258, 8;
	add.s64 	%rd1889, %rd1539, %rd1888;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1259,%dummy}, %rd10054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1260}, %rd10054;
	}
	shf.r.wrap.b32 	%r1261, %r1260, %r1259, 14;
	shf.r.wrap.b32 	%r1262, %r1259, %r1260, 14;
	mov.b64 	%rd1890, {%r1262, %r1261};
	shf.r.wrap.b32 	%r1263, %r1260, %r1259, 18;
	shf.r.wrap.b32 	%r1264, %r1259, %r1260, 18;
	mov.b64 	%rd1891, {%r1264, %r1263};
	xor.b64  	%rd1892, %rd1891, %rd1890;
	shf.l.wrap.b32 	%r1265, %r1259, %r1260, 23;
	shf.l.wrap.b32 	%r1266, %r1260, %r1259, 23;
	mov.b64 	%rd1893, {%r1266, %r1265};
	xor.b64  	%rd1894, %rd1892, %rd1893;
	xor.b64  	%rd1895, %rd1851, %rd1824;
	and.b64  	%rd1896, %rd10054, %rd1895;
	xor.b64  	%rd1897, %rd1896, %rd1824;
	add.s64 	%rd1898, %rd1797, %rd10041;
	ld.const.u64 	%rd1899, [%rd1889];
	add.s64 	%rd1900, %rd1898, %rd1899;
	add.s64 	%rd1901, %rd1900, %rd1897;
	add.s64 	%rd1902, %rd1901, %rd1894;
	add.s64 	%rd10053, %rd1902, %rd1808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1267,%dummy}, %rd10050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1268}, %rd10050;
	}
	shf.r.wrap.b32 	%r1269, %r1268, %r1267, 28;
	shf.r.wrap.b32 	%r1270, %r1267, %r1268, 28;
	mov.b64 	%rd1903, {%r1270, %r1269};
	shf.l.wrap.b32 	%r1271, %r1267, %r1268, 30;
	shf.l.wrap.b32 	%r1272, %r1268, %r1267, 30;
	mov.b64 	%rd1904, {%r1272, %r1271};
	xor.b64  	%rd1905, %rd1904, %rd1903;
	shf.l.wrap.b32 	%r1273, %r1267, %r1268, 25;
	shf.l.wrap.b32 	%r1274, %r1268, %r1267, 25;
	mov.b64 	%rd1906, {%r1274, %r1273};
	xor.b64  	%rd1907, %rd1905, %rd1906;
	and.b64  	%rd1908, %rd10050, %rd1862;
	xor.b64  	%rd1909, %rd10050, %rd1862;
	and.b64  	%rd1910, %rd1909, %rd1835;
	or.b64  	%rd1911, %rd1910, %rd1908;
	add.s64 	%rd1912, %rd1902, %rd1911;
	add.s64 	%rd10049, %rd1912, %rd1907;
	add.s32 	%r1275, %r7548, 14;
	mul.wide.s32 	%rd1913, %r1275, 8;
	add.s64 	%rd1914, %rd1539, %rd1913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1276,%dummy}, %rd10053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1277}, %rd10053;
	}
	shf.r.wrap.b32 	%r1278, %r1277, %r1276, 14;
	shf.r.wrap.b32 	%r1279, %r1276, %r1277, 14;
	mov.b64 	%rd1915, {%r1279, %r1278};
	shf.r.wrap.b32 	%r1280, %r1277, %r1276, 18;
	shf.r.wrap.b32 	%r1281, %r1276, %r1277, 18;
	mov.b64 	%rd1916, {%r1281, %r1280};
	xor.b64  	%rd1917, %rd1916, %rd1915;
	shf.l.wrap.b32 	%r1282, %r1276, %r1277, 23;
	shf.l.wrap.b32 	%r1283, %r1277, %r1276, 23;
	mov.b64 	%rd1918, {%r1283, %r1282};
	xor.b64  	%rd1919, %rd1917, %rd1918;
	xor.b64  	%rd1920, %rd10054, %rd1851;
	and.b64  	%rd1921, %rd10053, %rd1920;
	xor.b64  	%rd1922, %rd1921, %rd1851;
	add.s64 	%rd1923, %rd1824, %rd10040;
	ld.const.u64 	%rd1924, [%rd1914];
	add.s64 	%rd1925, %rd1923, %rd1924;
	add.s64 	%rd1926, %rd1925, %rd1922;
	add.s64 	%rd1927, %rd1926, %rd1919;
	add.s64 	%rd10052, %rd1927, %rd1835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1284,%dummy}, %rd10049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1285}, %rd10049;
	}
	shf.r.wrap.b32 	%r1286, %r1285, %r1284, 28;
	shf.r.wrap.b32 	%r1287, %r1284, %r1285, 28;
	mov.b64 	%rd1928, {%r1287, %r1286};
	shf.l.wrap.b32 	%r1288, %r1284, %r1285, 30;
	shf.l.wrap.b32 	%r1289, %r1285, %r1284, 30;
	mov.b64 	%rd1929, {%r1289, %r1288};
	xor.b64  	%rd1930, %rd1929, %rd1928;
	shf.l.wrap.b32 	%r1290, %r1284, %r1285, 25;
	shf.l.wrap.b32 	%r1291, %r1285, %r1284, 25;
	mov.b64 	%rd1931, {%r1291, %r1290};
	xor.b64  	%rd1932, %rd1930, %rd1931;
	and.b64  	%rd1933, %rd10049, %rd10050;
	xor.b64  	%rd1934, %rd10049, %rd10050;
	and.b64  	%rd1935, %rd1934, %rd1862;
	or.b64  	%rd1936, %rd1935, %rd1933;
	add.s64 	%rd1937, %rd1927, %rd1936;
	add.s64 	%rd10048, %rd1937, %rd1932;
	add.s32 	%r1292, %r7548, 15;
	mul.wide.s32 	%rd1938, %r1292, 8;
	add.s64 	%rd1939, %rd1539, %rd1938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1293,%dummy}, %rd10052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1294}, %rd10052;
	}
	shf.r.wrap.b32 	%r1295, %r1294, %r1293, 14;
	shf.r.wrap.b32 	%r1296, %r1293, %r1294, 14;
	mov.b64 	%rd1940, {%r1296, %r1295};
	shf.r.wrap.b32 	%r1297, %r1294, %r1293, 18;
	shf.r.wrap.b32 	%r1298, %r1293, %r1294, 18;
	mov.b64 	%rd1941, {%r1298, %r1297};
	xor.b64  	%rd1942, %rd1941, %rd1940;
	shf.l.wrap.b32 	%r1299, %r1293, %r1294, 23;
	shf.l.wrap.b32 	%r1300, %r1294, %r1293, 23;
	mov.b64 	%rd1943, {%r1300, %r1299};
	xor.b64  	%rd1944, %rd1942, %rd1943;
	xor.b64  	%rd1945, %rd10053, %rd10054;
	and.b64  	%rd1946, %rd10052, %rd1945;
	xor.b64  	%rd1947, %rd1946, %rd10054;
	add.s64 	%rd1948, %rd1851, %rd10039;
	ld.const.u64 	%rd1949, [%rd1939];
	add.s64 	%rd1950, %rd1948, %rd1949;
	add.s64 	%rd1951, %rd1950, %rd1947;
	add.s64 	%rd1952, %rd1951, %rd1944;
	add.s64 	%rd10051, %rd1952, %rd1862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1301,%dummy}, %rd10048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1302}, %rd10048;
	}
	shf.r.wrap.b32 	%r1303, %r1302, %r1301, 28;
	shf.r.wrap.b32 	%r1304, %r1301, %r1302, 28;
	mov.b64 	%rd1953, {%r1304, %r1303};
	shf.l.wrap.b32 	%r1305, %r1301, %r1302, 30;
	shf.l.wrap.b32 	%r1306, %r1302, %r1301, 30;
	mov.b64 	%rd1954, {%r1306, %r1305};
	xor.b64  	%rd1955, %rd1954, %rd1953;
	shf.l.wrap.b32 	%r1307, %r1301, %r1302, 25;
	shf.l.wrap.b32 	%r1308, %r1302, %r1301, 25;
	mov.b64 	%rd1956, {%r1308, %r1307};
	xor.b64  	%rd1957, %rd1955, %rd1956;
	and.b64  	%rd1958, %rd10048, %rd10049;
	xor.b64  	%rd1959, %rd10048, %rd10049;
	and.b64  	%rd1960, %rd1959, %rd10050;
	or.b64  	%rd1961, %rd1960, %rd1958;
	add.s64 	%rd1962, %rd1952, %rd1961;
	add.s64 	%rd10047, %rd1962, %rd1957;
	add.s32 	%r7548, %r7548, 16;
	setp.lt.s32	%p5, %r7548, 80;
	@%p5 bra 	BB3_7;

	add.s64 	%rd41, %rd10047, %rd41;
	add.s64 	%rd40, %rd10048, %rd40;
	add.s64 	%rd39, %rd10049, %rd39;
	add.s64 	%rd38, %rd10050, %rd38;
	add.s64 	%rd37, %rd10051, %rd37;
	add.s64 	%rd36, %rd10052, %rd36;
	add.s64 	%rd35, %rd10053, %rd35;
	add.s64 	%rd34, %rd10054, %rd34;
	mov.u32 	%r7549, 0;
	mov.u32 	%r7550, %r7549;
	mov.u32 	%r7551, %r7549;
	mov.u32 	%r7552, %r7549;
	mov.u32 	%r7553, %r7549;
	mov.u32 	%r7554, %r7549;
	mov.u32 	%r7555, %r7549;
	mov.u32 	%r7556, %r7549;
	mov.u32 	%r7557, %r7549;
	mov.u32 	%r7558, %r7549;
	mov.u32 	%r7559, %r7549;
	mov.u32 	%r7560, %r7549;
	mov.u32 	%r7561, %r7549;
	mov.u32 	%r7562, %r7549;
	mov.u32 	%r7563, %r7549;
	mov.u32 	%r7564, %r7549;
	mov.u32 	%r7565, %r7549;
	mov.u32 	%r7566, %r7549;
	mov.u32 	%r7567, %r7549;
	mov.u32 	%r7568, %r7549;
	mov.u32 	%r7569, %r7549;
	mov.u32 	%r7570, %r7549;
	mov.u32 	%r7571, %r7549;
	mov.u32 	%r7572, %r7549;
	mov.u32 	%r7573, %r7549;
	mov.u32 	%r7574, %r7549;
	mov.u32 	%r7575, %r7549;
	mov.u32 	%r7576, %r7549;
	mov.u32 	%r7577, %r7549;
	mov.u32 	%r7578, %r7549;
	mov.u32 	%r7579, %r7549;
	mov.u32 	%r7580, %r7549;

BB3_9:
	not.b32 	%r1341, %r102;
	bfe.u32 	%r1342, %r102, 2, 2;
	and.b32  	%r1343, %r1341, 3;
	shl.b32 	%r1344, %r1343, 3;
	mov.u32 	%r1345, 255;
	shl.b32 	%r1346, %r1345, %r1344;
	setp.eq.s32	%p6, %r1342, 0;
	selp.b32	%r1347, %r1346, 0, %p6;
	setp.eq.s32	%p7, %r1342, 1;
	selp.b32	%r1348, %r1346, 0, %p7;
	setp.eq.s32	%p8, %r1342, 2;
	selp.b32	%r1349, %r1346, 0, %p8;
	setp.eq.s32	%p9, %r1342, 3;
	selp.b32	%r1350, %r1346, 0, %p9;
	and.b32  	%r1351, %r102, 127;
	bfe.u32 	%r1352, %r102, 4, 3;
	setp.eq.s32	%p10, %r1352, 0;
	selp.b32	%r1353, -2139062144, 0, %p10;
	and.b32  	%r1354, %r1347, %r1353;
	or.b32  	%r7611, %r7580, %r1354;
	and.b32  	%r1355, %r1348, %r1353;
	or.b32  	%r7610, %r7579, %r1355;
	and.b32  	%r1356, %r1349, %r1353;
	or.b32  	%r7609, %r7578, %r1356;
	and.b32  	%r1357, %r1350, %r1353;
	or.b32  	%r7608, %r7577, %r1357;
	setp.eq.s32	%p11, %r1352, 1;
	selp.b32	%r1358, -2139062144, 0, %p11;
	and.b32  	%r1359, %r1347, %r1358;
	or.b32  	%r7607, %r7576, %r1359;
	and.b32  	%r1360, %r1348, %r1358;
	or.b32  	%r7606, %r7575, %r1360;
	and.b32  	%r1361, %r1349, %r1358;
	or.b32  	%r7605, %r7574, %r1361;
	and.b32  	%r1362, %r1350, %r1358;
	or.b32  	%r7604, %r7573, %r1362;
	setp.eq.s32	%p12, %r1352, 2;
	selp.b32	%r1363, -2139062144, 0, %p12;
	and.b32  	%r1364, %r1347, %r1363;
	or.b32  	%r7603, %r7572, %r1364;
	and.b32  	%r1365, %r1348, %r1363;
	or.b32  	%r7602, %r7571, %r1365;
	and.b32  	%r1366, %r1349, %r1363;
	or.b32  	%r7601, %r7570, %r1366;
	and.b32  	%r1367, %r1350, %r1363;
	or.b32  	%r7600, %r7569, %r1367;
	setp.eq.s32	%p13, %r1352, 3;
	selp.b32	%r1368, -2139062144, 0, %p13;
	and.b32  	%r1369, %r1347, %r1368;
	or.b32  	%r7599, %r7568, %r1369;
	and.b32  	%r1370, %r1348, %r1368;
	or.b32  	%r7598, %r7567, %r1370;
	and.b32  	%r1371, %r1349, %r1368;
	or.b32  	%r7597, %r7566, %r1371;
	and.b32  	%r1372, %r1350, %r1368;
	or.b32  	%r7596, %r7565, %r1372;
	setp.eq.s32	%p14, %r1352, 4;
	selp.b32	%r1373, -2139062144, 0, %p14;
	and.b32  	%r1374, %r1347, %r1373;
	or.b32  	%r7595, %r7564, %r1374;
	and.b32  	%r1375, %r1348, %r1373;
	or.b32  	%r7594, %r7563, %r1375;
	and.b32  	%r1376, %r1349, %r1373;
	or.b32  	%r7593, %r7562, %r1376;
	and.b32  	%r1377, %r1350, %r1373;
	or.b32  	%r7592, %r7561, %r1377;
	setp.eq.s32	%p15, %r1352, 5;
	selp.b32	%r1378, -2139062144, 0, %p15;
	and.b32  	%r1379, %r1347, %r1378;
	or.b32  	%r7591, %r7560, %r1379;
	and.b32  	%r1380, %r1348, %r1378;
	or.b32  	%r7590, %r7559, %r1380;
	and.b32  	%r1381, %r1349, %r1378;
	or.b32  	%r7589, %r7558, %r1381;
	and.b32  	%r1382, %r1350, %r1378;
	or.b32  	%r7588, %r7557, %r1382;
	setp.eq.s32	%p16, %r1352, 6;
	selp.b32	%r1383, -2139062144, 0, %p16;
	and.b32  	%r1384, %r1347, %r1383;
	or.b32  	%r7587, %r7556, %r1384;
	and.b32  	%r1385, %r1348, %r1383;
	or.b32  	%r7586, %r7555, %r1385;
	and.b32  	%r1386, %r1349, %r1383;
	or.b32  	%r7585, %r7554, %r1386;
	and.b32  	%r1387, %r1350, %r1383;
	or.b32  	%r7584, %r7553, %r1387;
	setp.eq.s32	%p17, %r1352, 7;
	selp.b32	%r1388, -2139062144, 0, %p17;
	and.b32  	%r1389, %r1347, %r1388;
	or.b32  	%r7583, %r7552, %r1389;
	and.b32  	%r1390, %r1348, %r1388;
	or.b32  	%r7582, %r7551, %r1390;
	and.b32  	%r1391, %r1349, %r1388;
	or.b32  	%r167, %r7550, %r1391;
	and.b32  	%r1392, %r1350, %r1388;
	or.b32  	%r168, %r7549, %r1392;
	setp.lt.u32	%p18, %r1351, 112;
	@%p18 bra 	BB3_13;

	ld.const.u64 	%rd10003, [k_sha512+96];
	ld.const.u64 	%rd10002, [k_sha512+88];
	ld.const.u64 	%rd10001, [k_sha512+80];
	ld.const.u64 	%rd10000, [k_sha512+72];
	ld.const.u64 	%rd9999, [k_sha512+64];
	ld.const.u64 	%rd9998, [k_sha512+56];
	mov.b64	%rd10088, {%r7610, %r7611};
	mov.b64	%rd10089, {%r7608, %r7609};
	mov.b64	%rd10090, {%r7606, %r7607};
	mov.b64	%rd10091, {%r7604, %r7605};
	mov.b64	%rd10092, {%r7602, %r7603};
	mov.b64	%rd10093, {%r7600, %r7601};
	mov.b64	%rd10094, {%r7598, %r7599};
	mov.b64	%rd10095, {%r7596, %r7597};
	mov.b64	%rd10079, {%r7594, %r7595};
	mov.b64	%rd10078, {%r7592, %r7593};
	mov.b64	%rd10077, {%r7590, %r7591};
	mov.b64	%rd10076, {%r7588, %r7589};
	mov.b64	%rd10075, {%r7586, %r7587};
	mov.b64	%rd10074, {%r7584, %r7585};
	mov.b64	%rd10073, {%r7582, %r7583};
	mov.b64	%rd10072, {%r168, %r167};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1394,%dummy}, %rd37;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1395}, %rd37;
	}
	shf.r.wrap.b32 	%r1396, %r1395, %r1394, 18;
	shf.r.wrap.b32 	%r1397, %r1394, %r1395, 18;
	mov.b64 	%rd1964, {%r1397, %r1396};
	shf.r.wrap.b32 	%r1398, %r1395, %r1394, 14;
	shf.r.wrap.b32 	%r1399, %r1394, %r1395, 14;
	mov.b64 	%rd1965, {%r1399, %r1398};
	xor.b64  	%rd1966, %rd1964, %rd1965;
	shf.l.wrap.b32 	%r1400, %r1394, %r1395, 23;
	shf.l.wrap.b32 	%r1401, %r1395, %r1394, 23;
	mov.b64 	%rd1967, {%r1401, %r1400};
	xor.b64  	%rd1968, %rd1966, %rd1967;
	xor.b64  	%rd1969, %rd36, %rd35;
	and.b64  	%rd1970, %rd37, %rd1969;
	xor.b64  	%rd1971, %rd1970, %rd35;
	add.s64 	%rd1972, %rd10088, %rd34;
	add.s64 	%rd1973, %rd1972, %rd1971;
	add.s64 	%rd1974, %rd1973, %rd10144;
	add.s64 	%rd1975, %rd1974, %rd1968;
	add.s64 	%rd1976, %rd1975, %rd38;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1402}, %rd41;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1403,%dummy}, %rd41;
	}
	shf.l.wrap.b32 	%r1404, %r1403, %r1402, 30;
	shf.l.wrap.b32 	%r1405, %r1402, %r1403, 30;
	mov.b64 	%rd1977, {%r1405, %r1404};
	shf.r.wrap.b32 	%r1406, %r1402, %r1403, 28;
	shf.r.wrap.b32 	%r1407, %r1403, %r1402, 28;
	mov.b64 	%rd1978, {%r1407, %r1406};
	xor.b64  	%rd1979, %rd1977, %rd1978;
	shf.l.wrap.b32 	%r1408, %r1403, %r1402, 25;
	shf.l.wrap.b32 	%r1409, %r1402, %r1403, 25;
	mov.b64 	%rd1980, {%r1409, %r1408};
	xor.b64  	%rd1981, %rd1979, %rd1980;
	xor.b64  	%rd1982, %rd41, %rd40;
	and.b64  	%rd1983, %rd1982, %rd39;
	and.b64  	%rd1984, %rd41, %rd40;
	or.b64  	%rd1985, %rd1983, %rd1984;
	add.s64 	%rd1986, %rd1975, %rd1985;
	add.s64 	%rd1987, %rd1986, %rd1981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1410,%dummy}, %rd1976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1411}, %rd1976;
	}
	shf.r.wrap.b32 	%r1412, %r1411, %r1410, 14;
	shf.r.wrap.b32 	%r1413, %r1410, %r1411, 14;
	mov.b64 	%rd1988, {%r1413, %r1412};
	shf.r.wrap.b32 	%r1414, %r1411, %r1410, 18;
	shf.r.wrap.b32 	%r1415, %r1410, %r1411, 18;
	mov.b64 	%rd1989, {%r1415, %r1414};
	xor.b64  	%rd1990, %rd1989, %rd1988;
	shf.l.wrap.b32 	%r1416, %r1410, %r1411, 23;
	shf.l.wrap.b32 	%r1417, %r1411, %r1410, 23;
	mov.b64 	%rd1991, {%r1417, %r1416};
	xor.b64  	%rd1992, %rd1990, %rd1991;
	xor.b64  	%rd1993, %rd37, %rd36;
	and.b64  	%rd1994, %rd1976, %rd1993;
	xor.b64  	%rd1995, %rd1994, %rd36;
	add.s64 	%rd1996, %rd10089, %rd35;
	add.s64 	%rd1997, %rd1996, %rd10143;
	add.s64 	%rd1998, %rd1997, %rd1995;
	add.s64 	%rd1999, %rd1998, %rd1992;
	add.s64 	%rd2000, %rd1999, %rd39;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1418,%dummy}, %rd1987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1419}, %rd1987;
	}
	shf.r.wrap.b32 	%r1420, %r1419, %r1418, 28;
	shf.r.wrap.b32 	%r1421, %r1418, %r1419, 28;
	mov.b64 	%rd2001, {%r1421, %r1420};
	shf.l.wrap.b32 	%r1422, %r1418, %r1419, 30;
	shf.l.wrap.b32 	%r1423, %r1419, %r1418, 30;
	mov.b64 	%rd2002, {%r1423, %r1422};
	xor.b64  	%rd2003, %rd2002, %rd2001;
	shf.l.wrap.b32 	%r1424, %r1418, %r1419, 25;
	shf.l.wrap.b32 	%r1425, %r1419, %r1418, 25;
	mov.b64 	%rd2004, {%r1425, %r1424};
	xor.b64  	%rd2005, %rd2003, %rd2004;
	and.b64  	%rd2006, %rd1987, %rd41;
	xor.b64  	%rd2007, %rd1987, %rd41;
	and.b64  	%rd2008, %rd2007, %rd40;
	or.b64  	%rd2009, %rd2008, %rd2006;
	add.s64 	%rd2010, %rd1999, %rd2009;
	add.s64 	%rd2011, %rd2010, %rd2005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1426,%dummy}, %rd2000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1427}, %rd2000;
	}
	shf.r.wrap.b32 	%r1428, %r1427, %r1426, 14;
	shf.r.wrap.b32 	%r1429, %r1426, %r1427, 14;
	mov.b64 	%rd2012, {%r1429, %r1428};
	shf.r.wrap.b32 	%r1430, %r1427, %r1426, 18;
	shf.r.wrap.b32 	%r1431, %r1426, %r1427, 18;
	mov.b64 	%rd2013, {%r1431, %r1430};
	xor.b64  	%rd2014, %rd2013, %rd2012;
	shf.l.wrap.b32 	%r1432, %r1426, %r1427, 23;
	shf.l.wrap.b32 	%r1433, %r1427, %r1426, 23;
	mov.b64 	%rd2015, {%r1433, %r1432};
	xor.b64  	%rd2016, %rd2014, %rd2015;
	xor.b64  	%rd2017, %rd1976, %rd37;
	and.b64  	%rd2018, %rd2000, %rd2017;
	xor.b64  	%rd2019, %rd2018, %rd37;
	add.s64 	%rd2020, %rd36, %rd10090;
	add.s64 	%rd2021, %rd2020, %rd10142;
	add.s64 	%rd2022, %rd2021, %rd2019;
	add.s64 	%rd2023, %rd2022, %rd2016;
	add.s64 	%rd2024, %rd2023, %rd40;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1434,%dummy}, %rd2011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1435}, %rd2011;
	}
	shf.r.wrap.b32 	%r1436, %r1435, %r1434, 28;
	shf.r.wrap.b32 	%r1437, %r1434, %r1435, 28;
	mov.b64 	%rd2025, {%r1437, %r1436};
	shf.l.wrap.b32 	%r1438, %r1434, %r1435, 30;
	shf.l.wrap.b32 	%r1439, %r1435, %r1434, 30;
	mov.b64 	%rd2026, {%r1439, %r1438};
	xor.b64  	%rd2027, %rd2026, %rd2025;
	shf.l.wrap.b32 	%r1440, %r1434, %r1435, 25;
	shf.l.wrap.b32 	%r1441, %r1435, %r1434, 25;
	mov.b64 	%rd2028, {%r1441, %r1440};
	xor.b64  	%rd2029, %rd2027, %rd2028;
	and.b64  	%rd2030, %rd2011, %rd1987;
	xor.b64  	%rd2031, %rd2011, %rd1987;
	and.b64  	%rd2032, %rd2031, %rd41;
	or.b64  	%rd2033, %rd2032, %rd2030;
	add.s64 	%rd2034, %rd2023, %rd2033;
	add.s64 	%rd2035, %rd2034, %rd2029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1442,%dummy}, %rd2024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1443}, %rd2024;
	}
	shf.r.wrap.b32 	%r1444, %r1443, %r1442, 14;
	shf.r.wrap.b32 	%r1445, %r1442, %r1443, 14;
	mov.b64 	%rd2036, {%r1445, %r1444};
	shf.r.wrap.b32 	%r1446, %r1443, %r1442, 18;
	shf.r.wrap.b32 	%r1447, %r1442, %r1443, 18;
	mov.b64 	%rd2037, {%r1447, %r1446};
	xor.b64  	%rd2038, %rd2037, %rd2036;
	shf.l.wrap.b32 	%r1448, %r1442, %r1443, 23;
	shf.l.wrap.b32 	%r1449, %r1443, %r1442, 23;
	mov.b64 	%rd2039, {%r1449, %r1448};
	xor.b64  	%rd2040, %rd2038, %rd2039;
	xor.b64  	%rd2041, %rd2000, %rd1976;
	and.b64  	%rd2042, %rd2024, %rd2041;
	xor.b64  	%rd2043, %rd2042, %rd1976;
	add.s64 	%rd2044, %rd37, %rd10091;
	add.s64 	%rd2045, %rd2044, %rd10141;
	add.s64 	%rd2046, %rd2045, %rd2043;
	add.s64 	%rd2047, %rd2046, %rd2040;
	add.s64 	%rd2048, %rd2047, %rd41;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1450,%dummy}, %rd2035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1451}, %rd2035;
	}
	shf.r.wrap.b32 	%r1452, %r1451, %r1450, 28;
	shf.r.wrap.b32 	%r1453, %r1450, %r1451, 28;
	mov.b64 	%rd2049, {%r1453, %r1452};
	shf.l.wrap.b32 	%r1454, %r1450, %r1451, 30;
	shf.l.wrap.b32 	%r1455, %r1451, %r1450, 30;
	mov.b64 	%rd2050, {%r1455, %r1454};
	xor.b64  	%rd2051, %rd2050, %rd2049;
	shf.l.wrap.b32 	%r1456, %r1450, %r1451, 25;
	shf.l.wrap.b32 	%r1457, %r1451, %r1450, 25;
	mov.b64 	%rd2052, {%r1457, %r1456};
	xor.b64  	%rd2053, %rd2051, %rd2052;
	and.b64  	%rd2054, %rd2035, %rd2011;
	xor.b64  	%rd2055, %rd2035, %rd2011;
	and.b64  	%rd2056, %rd2055, %rd1987;
	or.b64  	%rd2057, %rd2056, %rd2054;
	add.s64 	%rd2058, %rd2047, %rd2057;
	add.s64 	%rd2059, %rd2058, %rd2053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1458,%dummy}, %rd2048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1459}, %rd2048;
	}
	shf.r.wrap.b32 	%r1460, %r1459, %r1458, 14;
	shf.r.wrap.b32 	%r1461, %r1458, %r1459, 14;
	mov.b64 	%rd2060, {%r1461, %r1460};
	shf.r.wrap.b32 	%r1462, %r1459, %r1458, 18;
	shf.r.wrap.b32 	%r1463, %r1458, %r1459, 18;
	mov.b64 	%rd2061, {%r1463, %r1462};
	xor.b64  	%rd2062, %rd2061, %rd2060;
	shf.l.wrap.b32 	%r1464, %r1458, %r1459, 23;
	shf.l.wrap.b32 	%r1465, %r1459, %r1458, 23;
	mov.b64 	%rd2063, {%r1465, %r1464};
	xor.b64  	%rd2064, %rd2062, %rd2063;
	xor.b64  	%rd2065, %rd2024, %rd2000;
	and.b64  	%rd2066, %rd2048, %rd2065;
	xor.b64  	%rd2067, %rd2066, %rd2000;
	add.s64 	%rd2068, %rd1976, %rd10092;
	add.s64 	%rd2069, %rd2068, %rd10140;
	add.s64 	%rd2070, %rd2069, %rd2067;
	add.s64 	%rd2071, %rd2070, %rd2064;
	add.s64 	%rd2072, %rd2071, %rd1987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1466,%dummy}, %rd2059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1467}, %rd2059;
	}
	shf.r.wrap.b32 	%r1468, %r1467, %r1466, 28;
	shf.r.wrap.b32 	%r1469, %r1466, %r1467, 28;
	mov.b64 	%rd2073, {%r1469, %r1468};
	shf.l.wrap.b32 	%r1470, %r1466, %r1467, 30;
	shf.l.wrap.b32 	%r1471, %r1467, %r1466, 30;
	mov.b64 	%rd2074, {%r1471, %r1470};
	xor.b64  	%rd2075, %rd2074, %rd2073;
	shf.l.wrap.b32 	%r1472, %r1466, %r1467, 25;
	shf.l.wrap.b32 	%r1473, %r1467, %r1466, 25;
	mov.b64 	%rd2076, {%r1473, %r1472};
	xor.b64  	%rd2077, %rd2075, %rd2076;
	and.b64  	%rd2078, %rd2059, %rd2035;
	xor.b64  	%rd2079, %rd2059, %rd2035;
	and.b64  	%rd2080, %rd2079, %rd2011;
	or.b64  	%rd2081, %rd2080, %rd2078;
	add.s64 	%rd2082, %rd2071, %rd2081;
	add.s64 	%rd2083, %rd2082, %rd2077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1474,%dummy}, %rd2072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1475}, %rd2072;
	}
	shf.r.wrap.b32 	%r1476, %r1475, %r1474, 14;
	shf.r.wrap.b32 	%r1477, %r1474, %r1475, 14;
	mov.b64 	%rd2084, {%r1477, %r1476};
	shf.r.wrap.b32 	%r1478, %r1475, %r1474, 18;
	shf.r.wrap.b32 	%r1479, %r1474, %r1475, 18;
	mov.b64 	%rd2085, {%r1479, %r1478};
	xor.b64  	%rd2086, %rd2085, %rd2084;
	shf.l.wrap.b32 	%r1480, %r1474, %r1475, 23;
	shf.l.wrap.b32 	%r1481, %r1475, %r1474, 23;
	mov.b64 	%rd2087, {%r1481, %r1480};
	xor.b64  	%rd2088, %rd2086, %rd2087;
	xor.b64  	%rd2089, %rd2048, %rd2024;
	and.b64  	%rd2090, %rd2072, %rd2089;
	xor.b64  	%rd2091, %rd2090, %rd2024;
	add.s64 	%rd2092, %rd2000, %rd10093;
	add.s64 	%rd2093, %rd2092, %rd10139;
	add.s64 	%rd2094, %rd2093, %rd2091;
	add.s64 	%rd2095, %rd2094, %rd2088;
	add.s64 	%rd2096, %rd2095, %rd2011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1482,%dummy}, %rd2083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1483}, %rd2083;
	}
	shf.r.wrap.b32 	%r1484, %r1483, %r1482, 28;
	shf.r.wrap.b32 	%r1485, %r1482, %r1483, 28;
	mov.b64 	%rd2097, {%r1485, %r1484};
	shf.l.wrap.b32 	%r1486, %r1482, %r1483, 30;
	shf.l.wrap.b32 	%r1487, %r1483, %r1482, 30;
	mov.b64 	%rd2098, {%r1487, %r1486};
	xor.b64  	%rd2099, %rd2098, %rd2097;
	shf.l.wrap.b32 	%r1488, %r1482, %r1483, 25;
	shf.l.wrap.b32 	%r1489, %r1483, %r1482, 25;
	mov.b64 	%rd2100, {%r1489, %r1488};
	xor.b64  	%rd2101, %rd2099, %rd2100;
	and.b64  	%rd2102, %rd2083, %rd2059;
	xor.b64  	%rd2103, %rd2083, %rd2059;
	and.b64  	%rd2104, %rd2103, %rd2035;
	or.b64  	%rd2105, %rd2104, %rd2102;
	add.s64 	%rd2106, %rd2095, %rd2105;
	add.s64 	%rd2107, %rd2106, %rd2101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1490,%dummy}, %rd2096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1491}, %rd2096;
	}
	shf.r.wrap.b32 	%r1492, %r1491, %r1490, 14;
	shf.r.wrap.b32 	%r1493, %r1490, %r1491, 14;
	mov.b64 	%rd2108, {%r1493, %r1492};
	shf.r.wrap.b32 	%r1494, %r1491, %r1490, 18;
	shf.r.wrap.b32 	%r1495, %r1490, %r1491, 18;
	mov.b64 	%rd2109, {%r1495, %r1494};
	xor.b64  	%rd2110, %rd2109, %rd2108;
	shf.l.wrap.b32 	%r1496, %r1490, %r1491, 23;
	shf.l.wrap.b32 	%r1497, %r1491, %r1490, 23;
	mov.b64 	%rd2111, {%r1497, %r1496};
	xor.b64  	%rd2112, %rd2110, %rd2111;
	xor.b64  	%rd2113, %rd2072, %rd2048;
	and.b64  	%rd2114, %rd2096, %rd2113;
	xor.b64  	%rd2115, %rd2114, %rd2048;
	add.s64 	%rd2116, %rd2024, %rd10094;
	add.s64 	%rd2117, %rd2116, %rd10138;
	add.s64 	%rd2118, %rd2117, %rd2115;
	add.s64 	%rd2119, %rd2118, %rd2112;
	add.s64 	%rd2120, %rd2119, %rd2035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1498,%dummy}, %rd2107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1499}, %rd2107;
	}
	shf.r.wrap.b32 	%r1500, %r1499, %r1498, 28;
	shf.r.wrap.b32 	%r1501, %r1498, %r1499, 28;
	mov.b64 	%rd2121, {%r1501, %r1500};
	shf.l.wrap.b32 	%r1502, %r1498, %r1499, 30;
	shf.l.wrap.b32 	%r1503, %r1499, %r1498, 30;
	mov.b64 	%rd2122, {%r1503, %r1502};
	xor.b64  	%rd2123, %rd2122, %rd2121;
	shf.l.wrap.b32 	%r1504, %r1498, %r1499, 25;
	shf.l.wrap.b32 	%r1505, %r1499, %r1498, 25;
	mov.b64 	%rd2124, {%r1505, %r1504};
	xor.b64  	%rd2125, %rd2123, %rd2124;
	and.b64  	%rd2126, %rd2107, %rd2083;
	xor.b64  	%rd2127, %rd2107, %rd2083;
	and.b64  	%rd2128, %rd2127, %rd2059;
	or.b64  	%rd2129, %rd2128, %rd2126;
	add.s64 	%rd2130, %rd2119, %rd2129;
	add.s64 	%rd2131, %rd2130, %rd2125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1506,%dummy}, %rd2120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1507}, %rd2120;
	}
	shf.r.wrap.b32 	%r1508, %r1507, %r1506, 14;
	shf.r.wrap.b32 	%r1509, %r1506, %r1507, 14;
	mov.b64 	%rd2132, {%r1509, %r1508};
	shf.r.wrap.b32 	%r1510, %r1507, %r1506, 18;
	shf.r.wrap.b32 	%r1511, %r1506, %r1507, 18;
	mov.b64 	%rd2133, {%r1511, %r1510};
	xor.b64  	%rd2134, %rd2133, %rd2132;
	shf.l.wrap.b32 	%r1512, %r1506, %r1507, 23;
	shf.l.wrap.b32 	%r1513, %r1507, %r1506, 23;
	mov.b64 	%rd2135, {%r1513, %r1512};
	xor.b64  	%rd2136, %rd2134, %rd2135;
	xor.b64  	%rd2137, %rd2096, %rd2072;
	and.b64  	%rd2138, %rd2120, %rd2137;
	xor.b64  	%rd2139, %rd2138, %rd2072;
	add.s64 	%rd2140, %rd2048, %rd10095;
	add.s64 	%rd2141, %rd2140, %rd9998;
	add.s64 	%rd2142, %rd2141, %rd2139;
	add.s64 	%rd2143, %rd2142, %rd2136;
	add.s64 	%rd2144, %rd2143, %rd2059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1514,%dummy}, %rd2131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1515}, %rd2131;
	}
	shf.r.wrap.b32 	%r1516, %r1515, %r1514, 28;
	shf.r.wrap.b32 	%r1517, %r1514, %r1515, 28;
	mov.b64 	%rd2145, {%r1517, %r1516};
	shf.l.wrap.b32 	%r1518, %r1514, %r1515, 30;
	shf.l.wrap.b32 	%r1519, %r1515, %r1514, 30;
	mov.b64 	%rd2146, {%r1519, %r1518};
	xor.b64  	%rd2147, %rd2146, %rd2145;
	shf.l.wrap.b32 	%r1520, %r1514, %r1515, 25;
	shf.l.wrap.b32 	%r1521, %r1515, %r1514, 25;
	mov.b64 	%rd2148, {%r1521, %r1520};
	xor.b64  	%rd2149, %rd2147, %rd2148;
	and.b64  	%rd2150, %rd2131, %rd2107;
	xor.b64  	%rd2151, %rd2131, %rd2107;
	and.b64  	%rd2152, %rd2151, %rd2083;
	or.b64  	%rd2153, %rd2152, %rd2150;
	add.s64 	%rd2154, %rd2143, %rd2153;
	add.s64 	%rd2155, %rd2154, %rd2149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1522,%dummy}, %rd2144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1523}, %rd2144;
	}
	shf.r.wrap.b32 	%r1524, %r1523, %r1522, 14;
	shf.r.wrap.b32 	%r1525, %r1522, %r1523, 14;
	mov.b64 	%rd2156, {%r1525, %r1524};
	shf.r.wrap.b32 	%r1526, %r1523, %r1522, 18;
	shf.r.wrap.b32 	%r1527, %r1522, %r1523, 18;
	mov.b64 	%rd2157, {%r1527, %r1526};
	xor.b64  	%rd2158, %rd2157, %rd2156;
	shf.l.wrap.b32 	%r1528, %r1522, %r1523, 23;
	shf.l.wrap.b32 	%r1529, %r1523, %r1522, 23;
	mov.b64 	%rd2159, {%r1529, %r1528};
	xor.b64  	%rd2160, %rd2158, %rd2159;
	xor.b64  	%rd2161, %rd2120, %rd2096;
	and.b64  	%rd2162, %rd2144, %rd2161;
	xor.b64  	%rd2163, %rd2162, %rd2096;
	add.s64 	%rd2164, %rd2072, %rd10079;
	add.s64 	%rd2165, %rd2164, %rd9999;
	add.s64 	%rd2166, %rd2165, %rd2163;
	add.s64 	%rd2167, %rd2166, %rd2160;
	add.s64 	%rd2168, %rd2167, %rd2083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1530,%dummy}, %rd2155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1531}, %rd2155;
	}
	shf.r.wrap.b32 	%r1532, %r1531, %r1530, 28;
	shf.r.wrap.b32 	%r1533, %r1530, %r1531, 28;
	mov.b64 	%rd2169, {%r1533, %r1532};
	shf.l.wrap.b32 	%r1534, %r1530, %r1531, 30;
	shf.l.wrap.b32 	%r1535, %r1531, %r1530, 30;
	mov.b64 	%rd2170, {%r1535, %r1534};
	xor.b64  	%rd2171, %rd2170, %rd2169;
	shf.l.wrap.b32 	%r1536, %r1530, %r1531, 25;
	shf.l.wrap.b32 	%r1537, %r1531, %r1530, 25;
	mov.b64 	%rd2172, {%r1537, %r1536};
	xor.b64  	%rd2173, %rd2171, %rd2172;
	and.b64  	%rd2174, %rd2155, %rd2131;
	xor.b64  	%rd2175, %rd2155, %rd2131;
	and.b64  	%rd2176, %rd2175, %rd2107;
	or.b64  	%rd2177, %rd2176, %rd2174;
	add.s64 	%rd2178, %rd2167, %rd2177;
	add.s64 	%rd2179, %rd2178, %rd2173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1538,%dummy}, %rd2168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1539}, %rd2168;
	}
	shf.r.wrap.b32 	%r1540, %r1539, %r1538, 14;
	shf.r.wrap.b32 	%r1541, %r1538, %r1539, 14;
	mov.b64 	%rd2180, {%r1541, %r1540};
	shf.r.wrap.b32 	%r1542, %r1539, %r1538, 18;
	shf.r.wrap.b32 	%r1543, %r1538, %r1539, 18;
	mov.b64 	%rd2181, {%r1543, %r1542};
	xor.b64  	%rd2182, %rd2181, %rd2180;
	shf.l.wrap.b32 	%r1544, %r1538, %r1539, 23;
	shf.l.wrap.b32 	%r1545, %r1539, %r1538, 23;
	mov.b64 	%rd2183, {%r1545, %r1544};
	xor.b64  	%rd2184, %rd2182, %rd2183;
	xor.b64  	%rd2185, %rd2144, %rd2120;
	and.b64  	%rd2186, %rd2168, %rd2185;
	xor.b64  	%rd2187, %rd2186, %rd2120;
	add.s64 	%rd2188, %rd2096, %rd10078;
	add.s64 	%rd2189, %rd2188, %rd10000;
	add.s64 	%rd2190, %rd2189, %rd2187;
	add.s64 	%rd2191, %rd2190, %rd2184;
	add.s64 	%rd2192, %rd2191, %rd2107;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1546,%dummy}, %rd2179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1547}, %rd2179;
	}
	shf.r.wrap.b32 	%r1548, %r1547, %r1546, 28;
	shf.r.wrap.b32 	%r1549, %r1546, %r1547, 28;
	mov.b64 	%rd2193, {%r1549, %r1548};
	shf.l.wrap.b32 	%r1550, %r1546, %r1547, 30;
	shf.l.wrap.b32 	%r1551, %r1547, %r1546, 30;
	mov.b64 	%rd2194, {%r1551, %r1550};
	xor.b64  	%rd2195, %rd2194, %rd2193;
	shf.l.wrap.b32 	%r1552, %r1546, %r1547, 25;
	shf.l.wrap.b32 	%r1553, %r1547, %r1546, 25;
	mov.b64 	%rd2196, {%r1553, %r1552};
	xor.b64  	%rd2197, %rd2195, %rd2196;
	and.b64  	%rd2198, %rd2179, %rd2155;
	xor.b64  	%rd2199, %rd2179, %rd2155;
	and.b64  	%rd2200, %rd2199, %rd2131;
	or.b64  	%rd2201, %rd2200, %rd2198;
	add.s64 	%rd2202, %rd2191, %rd2201;
	add.s64 	%rd2203, %rd2202, %rd2197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1554,%dummy}, %rd2192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1555}, %rd2192;
	}
	shf.r.wrap.b32 	%r1556, %r1555, %r1554, 14;
	shf.r.wrap.b32 	%r1557, %r1554, %r1555, 14;
	mov.b64 	%rd2204, {%r1557, %r1556};
	shf.r.wrap.b32 	%r1558, %r1555, %r1554, 18;
	shf.r.wrap.b32 	%r1559, %r1554, %r1555, 18;
	mov.b64 	%rd2205, {%r1559, %r1558};
	xor.b64  	%rd2206, %rd2205, %rd2204;
	shf.l.wrap.b32 	%r1560, %r1554, %r1555, 23;
	shf.l.wrap.b32 	%r1561, %r1555, %r1554, 23;
	mov.b64 	%rd2207, {%r1561, %r1560};
	xor.b64  	%rd2208, %rd2206, %rd2207;
	xor.b64  	%rd2209, %rd2168, %rd2144;
	and.b64  	%rd2210, %rd2192, %rd2209;
	xor.b64  	%rd2211, %rd2210, %rd2144;
	add.s64 	%rd2212, %rd2120, %rd10077;
	add.s64 	%rd2213, %rd2212, %rd10001;
	add.s64 	%rd2214, %rd2213, %rd2211;
	add.s64 	%rd2215, %rd2214, %rd2208;
	add.s64 	%rd2216, %rd2215, %rd2131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1562,%dummy}, %rd2203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1563}, %rd2203;
	}
	shf.r.wrap.b32 	%r1564, %r1563, %r1562, 28;
	shf.r.wrap.b32 	%r1565, %r1562, %r1563, 28;
	mov.b64 	%rd2217, {%r1565, %r1564};
	shf.l.wrap.b32 	%r1566, %r1562, %r1563, 30;
	shf.l.wrap.b32 	%r1567, %r1563, %r1562, 30;
	mov.b64 	%rd2218, {%r1567, %r1566};
	xor.b64  	%rd2219, %rd2218, %rd2217;
	shf.l.wrap.b32 	%r1568, %r1562, %r1563, 25;
	shf.l.wrap.b32 	%r1569, %r1563, %r1562, 25;
	mov.b64 	%rd2220, {%r1569, %r1568};
	xor.b64  	%rd2221, %rd2219, %rd2220;
	and.b64  	%rd2222, %rd2203, %rd2179;
	xor.b64  	%rd2223, %rd2203, %rd2179;
	and.b64  	%rd2224, %rd2223, %rd2155;
	or.b64  	%rd2225, %rd2224, %rd2222;
	add.s64 	%rd2226, %rd2215, %rd2225;
	add.s64 	%rd2227, %rd2226, %rd2221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1570,%dummy}, %rd2216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1571}, %rd2216;
	}
	shf.r.wrap.b32 	%r1572, %r1571, %r1570, 14;
	shf.r.wrap.b32 	%r1573, %r1570, %r1571, 14;
	mov.b64 	%rd2228, {%r1573, %r1572};
	shf.r.wrap.b32 	%r1574, %r1571, %r1570, 18;
	shf.r.wrap.b32 	%r1575, %r1570, %r1571, 18;
	mov.b64 	%rd2229, {%r1575, %r1574};
	xor.b64  	%rd2230, %rd2229, %rd2228;
	shf.l.wrap.b32 	%r1576, %r1570, %r1571, 23;
	shf.l.wrap.b32 	%r1577, %r1571, %r1570, 23;
	mov.b64 	%rd2231, {%r1577, %r1576};
	xor.b64  	%rd2232, %rd2230, %rd2231;
	xor.b64  	%rd2233, %rd2192, %rd2168;
	and.b64  	%rd2234, %rd2216, %rd2233;
	xor.b64  	%rd2235, %rd2234, %rd2168;
	add.s64 	%rd2236, %rd2144, %rd10076;
	add.s64 	%rd2237, %rd2236, %rd10002;
	add.s64 	%rd2238, %rd2237, %rd2235;
	add.s64 	%rd2239, %rd2238, %rd2232;
	add.s64 	%rd2240, %rd2239, %rd2155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1578,%dummy}, %rd2227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1579}, %rd2227;
	}
	shf.r.wrap.b32 	%r1580, %r1579, %r1578, 28;
	shf.r.wrap.b32 	%r1581, %r1578, %r1579, 28;
	mov.b64 	%rd2241, {%r1581, %r1580};
	shf.l.wrap.b32 	%r1582, %r1578, %r1579, 30;
	shf.l.wrap.b32 	%r1583, %r1579, %r1578, 30;
	mov.b64 	%rd2242, {%r1583, %r1582};
	xor.b64  	%rd2243, %rd2242, %rd2241;
	shf.l.wrap.b32 	%r1584, %r1578, %r1579, 25;
	shf.l.wrap.b32 	%r1585, %r1579, %r1578, 25;
	mov.b64 	%rd2244, {%r1585, %r1584};
	xor.b64  	%rd2245, %rd2243, %rd2244;
	and.b64  	%rd2246, %rd2227, %rd2203;
	xor.b64  	%rd2247, %rd2227, %rd2203;
	and.b64  	%rd2248, %rd2247, %rd2179;
	or.b64  	%rd2249, %rd2248, %rd2246;
	add.s64 	%rd2250, %rd2239, %rd2249;
	add.s64 	%rd2251, %rd2250, %rd2245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1586,%dummy}, %rd2240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1587}, %rd2240;
	}
	shf.r.wrap.b32 	%r1588, %r1587, %r1586, 14;
	shf.r.wrap.b32 	%r1589, %r1586, %r1587, 14;
	mov.b64 	%rd2252, {%r1589, %r1588};
	shf.r.wrap.b32 	%r1590, %r1587, %r1586, 18;
	shf.r.wrap.b32 	%r1591, %r1586, %r1587, 18;
	mov.b64 	%rd2253, {%r1591, %r1590};
	xor.b64  	%rd2254, %rd2253, %rd2252;
	shf.l.wrap.b32 	%r1592, %r1586, %r1587, 23;
	shf.l.wrap.b32 	%r1593, %r1587, %r1586, 23;
	mov.b64 	%rd2255, {%r1593, %r1592};
	xor.b64  	%rd2256, %rd2254, %rd2255;
	xor.b64  	%rd2257, %rd2216, %rd2192;
	and.b64  	%rd2258, %rd2240, %rd2257;
	xor.b64  	%rd2259, %rd2258, %rd2192;
	add.s64 	%rd2260, %rd2168, %rd10075;
	add.s64 	%rd2261, %rd2260, %rd10003;
	add.s64 	%rd2262, %rd2261, %rd2259;
	add.s64 	%rd2263, %rd2262, %rd2256;
	add.s64 	%rd10087, %rd2263, %rd2179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1594,%dummy}, %rd2251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1595}, %rd2251;
	}
	shf.r.wrap.b32 	%r1596, %r1595, %r1594, 28;
	shf.r.wrap.b32 	%r1597, %r1594, %r1595, 28;
	mov.b64 	%rd2264, {%r1597, %r1596};
	shf.l.wrap.b32 	%r1598, %r1594, %r1595, 30;
	shf.l.wrap.b32 	%r1599, %r1595, %r1594, 30;
	mov.b64 	%rd2265, {%r1599, %r1598};
	xor.b64  	%rd2266, %rd2265, %rd2264;
	shf.l.wrap.b32 	%r1600, %r1594, %r1595, 25;
	shf.l.wrap.b32 	%r1601, %r1595, %r1594, 25;
	mov.b64 	%rd2267, {%r1601, %r1600};
	xor.b64  	%rd2268, %rd2266, %rd2267;
	and.b64  	%rd2269, %rd2251, %rd2227;
	xor.b64  	%rd2270, %rd2251, %rd2227;
	and.b64  	%rd2271, %rd2270, %rd2203;
	or.b64  	%rd2272, %rd2271, %rd2269;
	add.s64 	%rd2273, %rd2263, %rd2272;
	add.s64 	%rd10083, %rd2273, %rd2268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1602,%dummy}, %rd10087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1603}, %rd10087;
	}
	shf.r.wrap.b32 	%r1604, %r1603, %r1602, 14;
	shf.r.wrap.b32 	%r1605, %r1602, %r1603, 14;
	mov.b64 	%rd2274, {%r1605, %r1604};
	shf.r.wrap.b32 	%r1606, %r1603, %r1602, 18;
	shf.r.wrap.b32 	%r1607, %r1602, %r1603, 18;
	mov.b64 	%rd2275, {%r1607, %r1606};
	xor.b64  	%rd2276, %rd2275, %rd2274;
	shf.l.wrap.b32 	%r1608, %r1602, %r1603, 23;
	shf.l.wrap.b32 	%r1609, %r1603, %r1602, 23;
	mov.b64 	%rd2277, {%r1609, %r1608};
	xor.b64  	%rd2278, %rd2276, %rd2277;
	xor.b64  	%rd2279, %rd2240, %rd2216;
	and.b64  	%rd2280, %rd10087, %rd2279;
	xor.b64  	%rd2281, %rd2280, %rd2216;
	add.s64 	%rd2282, %rd2192, %rd10074;
	add.s64 	%rd2283, %rd2282, %rd10131;
	add.s64 	%rd2284, %rd2283, %rd2281;
	add.s64 	%rd2285, %rd2284, %rd2278;
	add.s64 	%rd10086, %rd2285, %rd2203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1610,%dummy}, %rd10083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1611}, %rd10083;
	}
	shf.r.wrap.b32 	%r1612, %r1611, %r1610, 28;
	shf.r.wrap.b32 	%r1613, %r1610, %r1611, 28;
	mov.b64 	%rd2286, {%r1613, %r1612};
	shf.l.wrap.b32 	%r1614, %r1610, %r1611, 30;
	shf.l.wrap.b32 	%r1615, %r1611, %r1610, 30;
	mov.b64 	%rd2287, {%r1615, %r1614};
	xor.b64  	%rd2288, %rd2287, %rd2286;
	shf.l.wrap.b32 	%r1616, %r1610, %r1611, 25;
	shf.l.wrap.b32 	%r1617, %r1611, %r1610, 25;
	mov.b64 	%rd2289, {%r1617, %r1616};
	xor.b64  	%rd2290, %rd2288, %rd2289;
	and.b64  	%rd2291, %rd10083, %rd2251;
	xor.b64  	%rd2292, %rd10083, %rd2251;
	and.b64  	%rd2293, %rd2292, %rd2227;
	or.b64  	%rd2294, %rd2293, %rd2291;
	add.s64 	%rd2295, %rd2285, %rd2294;
	add.s64 	%rd10082, %rd2295, %rd2290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1618,%dummy}, %rd10086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1619}, %rd10086;
	}
	shf.r.wrap.b32 	%r1620, %r1619, %r1618, 14;
	shf.r.wrap.b32 	%r1621, %r1618, %r1619, 14;
	mov.b64 	%rd2296, {%r1621, %r1620};
	shf.r.wrap.b32 	%r1622, %r1619, %r1618, 18;
	shf.r.wrap.b32 	%r1623, %r1618, %r1619, 18;
	mov.b64 	%rd2297, {%r1623, %r1622};
	xor.b64  	%rd2298, %rd2297, %rd2296;
	shf.l.wrap.b32 	%r1624, %r1618, %r1619, 23;
	shf.l.wrap.b32 	%r1625, %r1619, %r1618, 23;
	mov.b64 	%rd2299, {%r1625, %r1624};
	xor.b64  	%rd2300, %rd2298, %rd2299;
	xor.b64  	%rd2301, %rd10087, %rd2240;
	and.b64  	%rd2302, %rd10086, %rd2301;
	xor.b64  	%rd2303, %rd2302, %rd2240;
	add.s64 	%rd2304, %rd2216, %rd10073;
	add.s64 	%rd2305, %rd2304, %rd10130;
	add.s64 	%rd2306, %rd2305, %rd2303;
	add.s64 	%rd2307, %rd2306, %rd2300;
	add.s64 	%rd10085, %rd2307, %rd2227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1626,%dummy}, %rd10082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1627}, %rd10082;
	}
	shf.r.wrap.b32 	%r1628, %r1627, %r1626, 28;
	shf.r.wrap.b32 	%r1629, %r1626, %r1627, 28;
	mov.b64 	%rd2308, {%r1629, %r1628};
	shf.l.wrap.b32 	%r1630, %r1626, %r1627, 30;
	shf.l.wrap.b32 	%r1631, %r1627, %r1626, 30;
	mov.b64 	%rd2309, {%r1631, %r1630};
	xor.b64  	%rd2310, %rd2309, %rd2308;
	shf.l.wrap.b32 	%r1632, %r1626, %r1627, 25;
	shf.l.wrap.b32 	%r1633, %r1627, %r1626, 25;
	mov.b64 	%rd2311, {%r1633, %r1632};
	xor.b64  	%rd2312, %rd2310, %rd2311;
	and.b64  	%rd2313, %rd10082, %rd10083;
	xor.b64  	%rd2314, %rd10082, %rd10083;
	and.b64  	%rd2315, %rd2314, %rd2251;
	or.b64  	%rd2316, %rd2315, %rd2313;
	add.s64 	%rd2317, %rd2307, %rd2316;
	add.s64 	%rd10081, %rd2317, %rd2312;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1634,%dummy}, %rd10085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1635}, %rd10085;
	}
	shf.r.wrap.b32 	%r1636, %r1635, %r1634, 14;
	shf.r.wrap.b32 	%r1637, %r1634, %r1635, 14;
	mov.b64 	%rd2318, {%r1637, %r1636};
	shf.r.wrap.b32 	%r1638, %r1635, %r1634, 18;
	shf.r.wrap.b32 	%r1639, %r1634, %r1635, 18;
	mov.b64 	%rd2319, {%r1639, %r1638};
	xor.b64  	%rd2320, %rd2319, %rd2318;
	shf.l.wrap.b32 	%r1640, %r1634, %r1635, 23;
	shf.l.wrap.b32 	%r1641, %r1635, %r1634, 23;
	mov.b64 	%rd2321, {%r1641, %r1640};
	xor.b64  	%rd2322, %rd2320, %rd2321;
	xor.b64  	%rd2323, %rd10086, %rd10087;
	and.b64  	%rd2324, %rd10085, %rd2323;
	xor.b64  	%rd2325, %rd2324, %rd10087;
	add.s64 	%rd2326, %rd2240, %rd10072;
	add.s64 	%rd2327, %rd2326, %rd10129;
	add.s64 	%rd2328, %rd2327, %rd2325;
	add.s64 	%rd2329, %rd2328, %rd2322;
	add.s64 	%rd10084, %rd2329, %rd2251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1642,%dummy}, %rd10081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1643}, %rd10081;
	}
	shf.r.wrap.b32 	%r1644, %r1643, %r1642, 28;
	shf.r.wrap.b32 	%r1645, %r1642, %r1643, 28;
	mov.b64 	%rd2330, {%r1645, %r1644};
	shf.l.wrap.b32 	%r1646, %r1642, %r1643, 30;
	shf.l.wrap.b32 	%r1647, %r1643, %r1642, 30;
	mov.b64 	%rd2331, {%r1647, %r1646};
	xor.b64  	%rd2332, %rd2331, %rd2330;
	shf.l.wrap.b32 	%r1648, %r1642, %r1643, 25;
	shf.l.wrap.b32 	%r1649, %r1643, %r1642, 25;
	mov.b64 	%rd2333, {%r1649, %r1648};
	xor.b64  	%rd2334, %rd2332, %rd2333;
	and.b64  	%rd2335, %rd10081, %rd10082;
	xor.b64  	%rd2336, %rd10081, %rd10082;
	and.b64  	%rd2337, %rd2336, %rd10083;
	or.b64  	%rd2338, %rd2337, %rd2335;
	add.s64 	%rd2339, %rd2329, %rd2338;
	add.s64 	%rd10080, %rd2339, %rd2334;
	mov.u32 	%r7581, 16;
	mov.u64 	%rd10071, k_sha512;

BB3_11:
	shr.u64 	%rd2340, %rd10073, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1650,%dummy}, %rd10073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1651}, %rd10073;
	}
	shf.r.wrap.b32 	%r1652, %r1651, %r1650, 19;
	shf.r.wrap.b32 	%r1653, %r1650, %r1651, 19;
	mov.b64 	%rd2341, {%r1653, %r1652};
	xor.b64  	%rd2342, %rd2341, %rd2340;
	shf.l.wrap.b32 	%r1654, %r1650, %r1651, 3;
	shf.l.wrap.b32 	%r1655, %r1651, %r1650, 3;
	mov.b64 	%rd2343, {%r1655, %r1654};
	xor.b64  	%rd2344, %rd2342, %rd2343;
	shr.u64 	%rd2345, %rd10089, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1656,%dummy}, %rd10089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1657}, %rd10089;
	}
	shf.r.wrap.b32 	%r1658, %r1657, %r1656, 1;
	shf.r.wrap.b32 	%r1659, %r1656, %r1657, 1;
	mov.b64 	%rd2346, {%r1659, %r1658};
	xor.b64  	%rd2347, %rd2346, %rd2345;
	shf.r.wrap.b32 	%r1660, %r1657, %r1656, 8;
	shf.r.wrap.b32 	%r1661, %r1656, %r1657, 8;
	mov.b64 	%rd2348, {%r1661, %r1660};
	xor.b64  	%rd2349, %rd2347, %rd2348;
	add.s64 	%rd2350, %rd10078, %rd10088;
	add.s64 	%rd2351, %rd2350, %rd2344;
	add.s64 	%rd10088, %rd2351, %rd2349;
	shr.u64 	%rd2352, %rd10072, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1662,%dummy}, %rd10072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1663}, %rd10072;
	}
	shf.r.wrap.b32 	%r1664, %r1663, %r1662, 19;
	shf.r.wrap.b32 	%r1665, %r1662, %r1663, 19;
	mov.b64 	%rd2353, {%r1665, %r1664};
	xor.b64  	%rd2354, %rd2353, %rd2352;
	shf.l.wrap.b32 	%r1666, %r1662, %r1663, 3;
	shf.l.wrap.b32 	%r1667, %r1663, %r1662, 3;
	mov.b64 	%rd2355, {%r1667, %r1666};
	xor.b64  	%rd2356, %rd2354, %rd2355;
	shr.u64 	%rd2357, %rd10090, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1668,%dummy}, %rd10090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1669}, %rd10090;
	}
	shf.r.wrap.b32 	%r1670, %r1669, %r1668, 1;
	shf.r.wrap.b32 	%r1671, %r1668, %r1669, 1;
	mov.b64 	%rd2358, {%r1671, %r1670};
	xor.b64  	%rd2359, %rd2358, %rd2357;
	shf.r.wrap.b32 	%r1672, %r1669, %r1668, 8;
	shf.r.wrap.b32 	%r1673, %r1668, %r1669, 8;
	mov.b64 	%rd2360, {%r1673, %r1672};
	xor.b64  	%rd2361, %rd2359, %rd2360;
	add.s64 	%rd2362, %rd10077, %rd10089;
	add.s64 	%rd2363, %rd2362, %rd2356;
	add.s64 	%rd10089, %rd2363, %rd2361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1674,%dummy}, %rd10088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1675}, %rd10088;
	}
	shf.r.wrap.b32 	%r1676, %r1675, %r1674, 19;
	shf.r.wrap.b32 	%r1677, %r1674, %r1675, 19;
	mov.b64 	%rd2364, {%r1677, %r1676};
	shf.l.wrap.b32 	%r1678, %r1674, %r1675, 3;
	shf.l.wrap.b32 	%r1679, %r1675, %r1674, 3;
	mov.b64 	%rd2365, {%r1679, %r1678};
	shr.u64 	%rd2366, %rd10088, 6;
	xor.b64  	%rd2367, %rd2364, %rd2366;
	xor.b64  	%rd2368, %rd2367, %rd2365;
	shr.u64 	%rd2369, %rd10091, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1680,%dummy}, %rd10091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1681}, %rd10091;
	}
	shf.r.wrap.b32 	%r1682, %r1681, %r1680, 1;
	shf.r.wrap.b32 	%r1683, %r1680, %r1681, 1;
	mov.b64 	%rd2370, {%r1683, %r1682};
	xor.b64  	%rd2371, %rd2370, %rd2369;
	shf.r.wrap.b32 	%r1684, %r1681, %r1680, 8;
	shf.r.wrap.b32 	%r1685, %r1680, %r1681, 8;
	mov.b64 	%rd2372, {%r1685, %r1684};
	xor.b64  	%rd2373, %rd2371, %rd2372;
	add.s64 	%rd2374, %rd10076, %rd10090;
	add.s64 	%rd2375, %rd2374, %rd2368;
	add.s64 	%rd10090, %rd2375, %rd2373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1686,%dummy}, %rd10089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1687}, %rd10089;
	}
	shf.r.wrap.b32 	%r1688, %r1687, %r1686, 19;
	shf.r.wrap.b32 	%r1689, %r1686, %r1687, 19;
	mov.b64 	%rd2376, {%r1689, %r1688};
	shf.l.wrap.b32 	%r1690, %r1686, %r1687, 3;
	shf.l.wrap.b32 	%r1691, %r1687, %r1686, 3;
	mov.b64 	%rd2377, {%r1691, %r1690};
	shr.u64 	%rd2378, %rd10089, 6;
	xor.b64  	%rd2379, %rd2376, %rd2378;
	xor.b64  	%rd2380, %rd2379, %rd2377;
	shr.u64 	%rd2381, %rd10092, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1692,%dummy}, %rd10092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1693}, %rd10092;
	}
	shf.r.wrap.b32 	%r1694, %r1693, %r1692, 1;
	shf.r.wrap.b32 	%r1695, %r1692, %r1693, 1;
	mov.b64 	%rd2382, {%r1695, %r1694};
	xor.b64  	%rd2383, %rd2382, %rd2381;
	shf.r.wrap.b32 	%r1696, %r1693, %r1692, 8;
	shf.r.wrap.b32 	%r1697, %r1692, %r1693, 8;
	mov.b64 	%rd2384, {%r1697, %r1696};
	xor.b64  	%rd2385, %rd2383, %rd2384;
	add.s64 	%rd2386, %rd10075, %rd10091;
	add.s64 	%rd2387, %rd2386, %rd2380;
	add.s64 	%rd10091, %rd2387, %rd2385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1698,%dummy}, %rd10090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1699}, %rd10090;
	}
	shf.r.wrap.b32 	%r1700, %r1699, %r1698, 19;
	shf.r.wrap.b32 	%r1701, %r1698, %r1699, 19;
	mov.b64 	%rd2388, {%r1701, %r1700};
	shf.l.wrap.b32 	%r1702, %r1698, %r1699, 3;
	shf.l.wrap.b32 	%r1703, %r1699, %r1698, 3;
	mov.b64 	%rd2389, {%r1703, %r1702};
	shr.u64 	%rd2390, %rd10090, 6;
	xor.b64  	%rd2391, %rd2388, %rd2390;
	xor.b64  	%rd2392, %rd2391, %rd2389;
	shr.u64 	%rd2393, %rd10093, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1704,%dummy}, %rd10093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1705}, %rd10093;
	}
	shf.r.wrap.b32 	%r1706, %r1705, %r1704, 1;
	shf.r.wrap.b32 	%r1707, %r1704, %r1705, 1;
	mov.b64 	%rd2394, {%r1707, %r1706};
	xor.b64  	%rd2395, %rd2394, %rd2393;
	shf.r.wrap.b32 	%r1708, %r1705, %r1704, 8;
	shf.r.wrap.b32 	%r1709, %r1704, %r1705, 8;
	mov.b64 	%rd2396, {%r1709, %r1708};
	xor.b64  	%rd2397, %rd2395, %rd2396;
	add.s64 	%rd2398, %rd10074, %rd10092;
	add.s64 	%rd2399, %rd2398, %rd2392;
	add.s64 	%rd10092, %rd2399, %rd2397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1710,%dummy}, %rd10091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1711}, %rd10091;
	}
	shf.r.wrap.b32 	%r1712, %r1711, %r1710, 19;
	shf.r.wrap.b32 	%r1713, %r1710, %r1711, 19;
	mov.b64 	%rd2400, {%r1713, %r1712};
	shf.l.wrap.b32 	%r1714, %r1710, %r1711, 3;
	shf.l.wrap.b32 	%r1715, %r1711, %r1710, 3;
	mov.b64 	%rd2401, {%r1715, %r1714};
	shr.u64 	%rd2402, %rd10091, 6;
	xor.b64  	%rd2403, %rd2400, %rd2402;
	xor.b64  	%rd2404, %rd2403, %rd2401;
	shr.u64 	%rd2405, %rd10094, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1716,%dummy}, %rd10094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1717}, %rd10094;
	}
	shf.r.wrap.b32 	%r1718, %r1717, %r1716, 1;
	shf.r.wrap.b32 	%r1719, %r1716, %r1717, 1;
	mov.b64 	%rd2406, {%r1719, %r1718};
	xor.b64  	%rd2407, %rd2406, %rd2405;
	shf.r.wrap.b32 	%r1720, %r1717, %r1716, 8;
	shf.r.wrap.b32 	%r1721, %r1716, %r1717, 8;
	mov.b64 	%rd2408, {%r1721, %r1720};
	xor.b64  	%rd2409, %rd2407, %rd2408;
	add.s64 	%rd2410, %rd10073, %rd10093;
	add.s64 	%rd2411, %rd2410, %rd2404;
	add.s64 	%rd10093, %rd2411, %rd2409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1722,%dummy}, %rd10092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1723}, %rd10092;
	}
	shf.r.wrap.b32 	%r1724, %r1723, %r1722, 19;
	shf.r.wrap.b32 	%r1725, %r1722, %r1723, 19;
	mov.b64 	%rd2412, {%r1725, %r1724};
	shf.l.wrap.b32 	%r1726, %r1722, %r1723, 3;
	shf.l.wrap.b32 	%r1727, %r1723, %r1722, 3;
	mov.b64 	%rd2413, {%r1727, %r1726};
	shr.u64 	%rd2414, %rd10092, 6;
	xor.b64  	%rd2415, %rd2412, %rd2414;
	xor.b64  	%rd2416, %rd2415, %rd2413;
	shr.u64 	%rd2417, %rd10095, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1728,%dummy}, %rd10095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1729}, %rd10095;
	}
	shf.r.wrap.b32 	%r1730, %r1729, %r1728, 1;
	shf.r.wrap.b32 	%r1731, %r1728, %r1729, 1;
	mov.b64 	%rd2418, {%r1731, %r1730};
	xor.b64  	%rd2419, %rd2418, %rd2417;
	shf.r.wrap.b32 	%r1732, %r1729, %r1728, 8;
	shf.r.wrap.b32 	%r1733, %r1728, %r1729, 8;
	mov.b64 	%rd2420, {%r1733, %r1732};
	xor.b64  	%rd2421, %rd2419, %rd2420;
	add.s64 	%rd2422, %rd10072, %rd10094;
	add.s64 	%rd2423, %rd2422, %rd2416;
	add.s64 	%rd10094, %rd2423, %rd2421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1734,%dummy}, %rd10093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1735}, %rd10093;
	}
	shf.r.wrap.b32 	%r1736, %r1735, %r1734, 19;
	shf.r.wrap.b32 	%r1737, %r1734, %r1735, 19;
	mov.b64 	%rd2424, {%r1737, %r1736};
	shf.l.wrap.b32 	%r1738, %r1734, %r1735, 3;
	shf.l.wrap.b32 	%r1739, %r1735, %r1734, 3;
	mov.b64 	%rd2425, {%r1739, %r1738};
	shr.u64 	%rd2426, %rd10093, 6;
	xor.b64  	%rd2427, %rd2424, %rd2426;
	xor.b64  	%rd2428, %rd2427, %rd2425;
	shr.u64 	%rd2429, %rd10079, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1740,%dummy}, %rd10079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1741}, %rd10079;
	}
	shf.r.wrap.b32 	%r1742, %r1741, %r1740, 1;
	shf.r.wrap.b32 	%r1743, %r1740, %r1741, 1;
	mov.b64 	%rd2430, {%r1743, %r1742};
	xor.b64  	%rd2431, %rd2430, %rd2429;
	shf.r.wrap.b32 	%r1744, %r1741, %r1740, 8;
	shf.r.wrap.b32 	%r1745, %r1740, %r1741, 8;
	mov.b64 	%rd2432, {%r1745, %r1744};
	xor.b64  	%rd2433, %rd2431, %rd2432;
	add.s64 	%rd2434, %rd10088, %rd10095;
	add.s64 	%rd2435, %rd2434, %rd2428;
	add.s64 	%rd10095, %rd2435, %rd2433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1746,%dummy}, %rd10094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1747}, %rd10094;
	}
	shf.r.wrap.b32 	%r1748, %r1747, %r1746, 19;
	shf.r.wrap.b32 	%r1749, %r1746, %r1747, 19;
	mov.b64 	%rd2436, {%r1749, %r1748};
	shf.l.wrap.b32 	%r1750, %r1746, %r1747, 3;
	shf.l.wrap.b32 	%r1751, %r1747, %r1746, 3;
	mov.b64 	%rd2437, {%r1751, %r1750};
	shr.u64 	%rd2438, %rd10094, 6;
	xor.b64  	%rd2439, %rd2436, %rd2438;
	xor.b64  	%rd2440, %rd2439, %rd2437;
	shr.u64 	%rd2441, %rd10078, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1752,%dummy}, %rd10078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1753}, %rd10078;
	}
	shf.r.wrap.b32 	%r1754, %r1753, %r1752, 1;
	shf.r.wrap.b32 	%r1755, %r1752, %r1753, 1;
	mov.b64 	%rd2442, {%r1755, %r1754};
	xor.b64  	%rd2443, %rd2442, %rd2441;
	shf.r.wrap.b32 	%r1756, %r1753, %r1752, 8;
	shf.r.wrap.b32 	%r1757, %r1752, %r1753, 8;
	mov.b64 	%rd2444, {%r1757, %r1756};
	xor.b64  	%rd2445, %rd2443, %rd2444;
	add.s64 	%rd2446, %rd10089, %rd10079;
	add.s64 	%rd2447, %rd2446, %rd2440;
	add.s64 	%rd10079, %rd2447, %rd2445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1758,%dummy}, %rd10095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1759}, %rd10095;
	}
	shf.r.wrap.b32 	%r1760, %r1759, %r1758, 19;
	shf.r.wrap.b32 	%r1761, %r1758, %r1759, 19;
	mov.b64 	%rd2448, {%r1761, %r1760};
	shf.l.wrap.b32 	%r1762, %r1758, %r1759, 3;
	shf.l.wrap.b32 	%r1763, %r1759, %r1758, 3;
	mov.b64 	%rd2449, {%r1763, %r1762};
	shr.u64 	%rd2450, %rd10095, 6;
	xor.b64  	%rd2451, %rd2448, %rd2450;
	xor.b64  	%rd2452, %rd2451, %rd2449;
	shr.u64 	%rd2453, %rd10077, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1764,%dummy}, %rd10077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1765}, %rd10077;
	}
	shf.r.wrap.b32 	%r1766, %r1765, %r1764, 1;
	shf.r.wrap.b32 	%r1767, %r1764, %r1765, 1;
	mov.b64 	%rd2454, {%r1767, %r1766};
	xor.b64  	%rd2455, %rd2454, %rd2453;
	shf.r.wrap.b32 	%r1768, %r1765, %r1764, 8;
	shf.r.wrap.b32 	%r1769, %r1764, %r1765, 8;
	mov.b64 	%rd2456, {%r1769, %r1768};
	xor.b64  	%rd2457, %rd2455, %rd2456;
	add.s64 	%rd2458, %rd10090, %rd10078;
	add.s64 	%rd2459, %rd2458, %rd2452;
	add.s64 	%rd10078, %rd2459, %rd2457;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1770,%dummy}, %rd10079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1771}, %rd10079;
	}
	shf.r.wrap.b32 	%r1772, %r1771, %r1770, 19;
	shf.r.wrap.b32 	%r1773, %r1770, %r1771, 19;
	mov.b64 	%rd2460, {%r1773, %r1772};
	shf.l.wrap.b32 	%r1774, %r1770, %r1771, 3;
	shf.l.wrap.b32 	%r1775, %r1771, %r1770, 3;
	mov.b64 	%rd2461, {%r1775, %r1774};
	shr.u64 	%rd2462, %rd10079, 6;
	xor.b64  	%rd2463, %rd2460, %rd2462;
	xor.b64  	%rd2464, %rd2463, %rd2461;
	shr.u64 	%rd2465, %rd10076, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1776,%dummy}, %rd10076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1777}, %rd10076;
	}
	shf.r.wrap.b32 	%r1778, %r1777, %r1776, 1;
	shf.r.wrap.b32 	%r1779, %r1776, %r1777, 1;
	mov.b64 	%rd2466, {%r1779, %r1778};
	xor.b64  	%rd2467, %rd2466, %rd2465;
	shf.r.wrap.b32 	%r1780, %r1777, %r1776, 8;
	shf.r.wrap.b32 	%r1781, %r1776, %r1777, 8;
	mov.b64 	%rd2468, {%r1781, %r1780};
	xor.b64  	%rd2469, %rd2467, %rd2468;
	add.s64 	%rd2470, %rd10091, %rd10077;
	add.s64 	%rd2471, %rd2470, %rd2464;
	add.s64 	%rd10077, %rd2471, %rd2469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1782,%dummy}, %rd10078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1783}, %rd10078;
	}
	shf.r.wrap.b32 	%r1784, %r1783, %r1782, 19;
	shf.r.wrap.b32 	%r1785, %r1782, %r1783, 19;
	mov.b64 	%rd2472, {%r1785, %r1784};
	shf.l.wrap.b32 	%r1786, %r1782, %r1783, 3;
	shf.l.wrap.b32 	%r1787, %r1783, %r1782, 3;
	mov.b64 	%rd2473, {%r1787, %r1786};
	shr.u64 	%rd2474, %rd10078, 6;
	xor.b64  	%rd2475, %rd2472, %rd2474;
	xor.b64  	%rd2476, %rd2475, %rd2473;
	shr.u64 	%rd2477, %rd10075, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1788,%dummy}, %rd10075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1789}, %rd10075;
	}
	shf.r.wrap.b32 	%r1790, %r1789, %r1788, 1;
	shf.r.wrap.b32 	%r1791, %r1788, %r1789, 1;
	mov.b64 	%rd2478, {%r1791, %r1790};
	xor.b64  	%rd2479, %rd2478, %rd2477;
	shf.r.wrap.b32 	%r1792, %r1789, %r1788, 8;
	shf.r.wrap.b32 	%r1793, %r1788, %r1789, 8;
	mov.b64 	%rd2480, {%r1793, %r1792};
	xor.b64  	%rd2481, %rd2479, %rd2480;
	add.s64 	%rd2482, %rd10092, %rd10076;
	add.s64 	%rd2483, %rd2482, %rd2476;
	add.s64 	%rd10076, %rd2483, %rd2481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1794,%dummy}, %rd10077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1795}, %rd10077;
	}
	shf.r.wrap.b32 	%r1796, %r1795, %r1794, 19;
	shf.r.wrap.b32 	%r1797, %r1794, %r1795, 19;
	mov.b64 	%rd2484, {%r1797, %r1796};
	shf.l.wrap.b32 	%r1798, %r1794, %r1795, 3;
	shf.l.wrap.b32 	%r1799, %r1795, %r1794, 3;
	mov.b64 	%rd2485, {%r1799, %r1798};
	shr.u64 	%rd2486, %rd10077, 6;
	xor.b64  	%rd2487, %rd2484, %rd2486;
	xor.b64  	%rd2488, %rd2487, %rd2485;
	shr.u64 	%rd2489, %rd10074, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1800,%dummy}, %rd10074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1801}, %rd10074;
	}
	shf.r.wrap.b32 	%r1802, %r1801, %r1800, 1;
	shf.r.wrap.b32 	%r1803, %r1800, %r1801, 1;
	mov.b64 	%rd2490, {%r1803, %r1802};
	xor.b64  	%rd2491, %rd2490, %rd2489;
	shf.r.wrap.b32 	%r1804, %r1801, %r1800, 8;
	shf.r.wrap.b32 	%r1805, %r1800, %r1801, 8;
	mov.b64 	%rd2492, {%r1805, %r1804};
	xor.b64  	%rd2493, %rd2491, %rd2492;
	add.s64 	%rd2494, %rd10093, %rd10075;
	add.s64 	%rd2495, %rd2494, %rd2488;
	add.s64 	%rd10075, %rd2495, %rd2493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1806,%dummy}, %rd10076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1807}, %rd10076;
	}
	shf.r.wrap.b32 	%r1808, %r1807, %r1806, 19;
	shf.r.wrap.b32 	%r1809, %r1806, %r1807, 19;
	mov.b64 	%rd2496, {%r1809, %r1808};
	shf.l.wrap.b32 	%r1810, %r1806, %r1807, 3;
	shf.l.wrap.b32 	%r1811, %r1807, %r1806, 3;
	mov.b64 	%rd2497, {%r1811, %r1810};
	shr.u64 	%rd2498, %rd10076, 6;
	xor.b64  	%rd2499, %rd2496, %rd2498;
	xor.b64  	%rd2500, %rd2499, %rd2497;
	shr.u64 	%rd2501, %rd10073, 7;
	shf.r.wrap.b32 	%r1812, %r1651, %r1650, 1;
	shf.r.wrap.b32 	%r1813, %r1650, %r1651, 1;
	mov.b64 	%rd2502, {%r1813, %r1812};
	xor.b64  	%rd2503, %rd2502, %rd2501;
	shf.r.wrap.b32 	%r1814, %r1651, %r1650, 8;
	shf.r.wrap.b32 	%r1815, %r1650, %r1651, 8;
	mov.b64 	%rd2504, {%r1815, %r1814};
	xor.b64  	%rd2505, %rd2503, %rd2504;
	add.s64 	%rd2506, %rd10094, %rd10074;
	add.s64 	%rd2507, %rd2506, %rd2500;
	add.s64 	%rd10074, %rd2507, %rd2505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1816,%dummy}, %rd10075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1817}, %rd10075;
	}
	shf.r.wrap.b32 	%r1818, %r1817, %r1816, 19;
	shf.r.wrap.b32 	%r1819, %r1816, %r1817, 19;
	mov.b64 	%rd2508, {%r1819, %r1818};
	shf.l.wrap.b32 	%r1820, %r1816, %r1817, 3;
	shf.l.wrap.b32 	%r1821, %r1817, %r1816, 3;
	mov.b64 	%rd2509, {%r1821, %r1820};
	shr.u64 	%rd2510, %rd10075, 6;
	xor.b64  	%rd2511, %rd2508, %rd2510;
	xor.b64  	%rd2512, %rd2511, %rd2509;
	shr.u64 	%rd2513, %rd10072, 7;
	shf.r.wrap.b32 	%r1822, %r1663, %r1662, 1;
	shf.r.wrap.b32 	%r1823, %r1662, %r1663, 1;
	mov.b64 	%rd2514, {%r1823, %r1822};
	xor.b64  	%rd2515, %rd2514, %rd2513;
	shf.r.wrap.b32 	%r1824, %r1663, %r1662, 8;
	shf.r.wrap.b32 	%r1825, %r1662, %r1663, 8;
	mov.b64 	%rd2516, {%r1825, %r1824};
	xor.b64  	%rd2517, %rd2515, %rd2516;
	add.s64 	%rd2518, %rd10095, %rd10073;
	add.s64 	%rd2519, %rd2518, %rd2512;
	add.s64 	%rd10073, %rd2519, %rd2517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1826,%dummy}, %rd10074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1827}, %rd10074;
	}
	shf.r.wrap.b32 	%r1828, %r1827, %r1826, 19;
	shf.r.wrap.b32 	%r1829, %r1826, %r1827, 19;
	mov.b64 	%rd2520, {%r1829, %r1828};
	shf.l.wrap.b32 	%r1830, %r1826, %r1827, 3;
	shf.l.wrap.b32 	%r1831, %r1827, %r1826, 3;
	mov.b64 	%rd2521, {%r1831, %r1830};
	shr.u64 	%rd2522, %rd10074, 6;
	xor.b64  	%rd2523, %rd2520, %rd2522;
	xor.b64  	%rd2524, %rd2523, %rd2521;
	shf.r.wrap.b32 	%r1832, %r1675, %r1674, 1;
	shf.r.wrap.b32 	%r1833, %r1674, %r1675, 1;
	mov.b64 	%rd2525, {%r1833, %r1832};
	shf.r.wrap.b32 	%r1834, %r1675, %r1674, 8;
	shf.r.wrap.b32 	%r1835, %r1674, %r1675, 8;
	mov.b64 	%rd2526, {%r1835, %r1834};
	shr.u64 	%rd2527, %rd10088, 7;
	xor.b64  	%rd2528, %rd2525, %rd2527;
	xor.b64  	%rd2529, %rd2528, %rd2526;
	add.s64 	%rd2530, %rd10079, %rd10072;
	add.s64 	%rd2531, %rd2530, %rd2524;
	add.s64 	%rd10072, %rd2531, %rd2529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1836,%dummy}, %rd10084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1837}, %rd10084;
	}
	shf.r.wrap.b32 	%r1838, %r1837, %r1836, 18;
	shf.r.wrap.b32 	%r1839, %r1836, %r1837, 18;
	mov.b64 	%rd2532, {%r1839, %r1838};
	shf.r.wrap.b32 	%r1840, %r1837, %r1836, 14;
	shf.r.wrap.b32 	%r1841, %r1836, %r1837, 14;
	mov.b64 	%rd2533, {%r1841, %r1840};
	xor.b64  	%rd2534, %rd2532, %rd2533;
	shf.l.wrap.b32 	%r1842, %r1836, %r1837, 23;
	shf.l.wrap.b32 	%r1843, %r1837, %r1836, 23;
	mov.b64 	%rd2535, {%r1843, %r1842};
	xor.b64  	%rd2536, %rd2534, %rd2535;
	xor.b64  	%rd2537, %rd10085, %rd10086;
	and.b64  	%rd2538, %rd10084, %rd2537;
	xor.b64  	%rd2539, %rd2538, %rd10086;
	add.s64 	%rd2540, %rd2539, %rd10087;
	add.s64 	%rd2541, %rd2540, %rd10088;
	add.s64 	%rd203, %rd10071, 128;
	ld.const.u64 	%rd2542, [%rd10071+128];
	add.s64 	%rd2543, %rd2541, %rd2542;
	add.s64 	%rd2544, %rd2543, %rd2536;
	add.s64 	%rd2545, %rd2544, %rd10083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1844}, %rd10080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1845,%dummy}, %rd10080;
	}
	shf.l.wrap.b32 	%r1846, %r1845, %r1844, 30;
	shf.l.wrap.b32 	%r1847, %r1844, %r1845, 30;
	mov.b64 	%rd2546, {%r1847, %r1846};
	shf.r.wrap.b32 	%r1848, %r1844, %r1845, 28;
	shf.r.wrap.b32 	%r1849, %r1845, %r1844, 28;
	mov.b64 	%rd2547, {%r1849, %r1848};
	xor.b64  	%rd2548, %rd2546, %rd2547;
	shf.l.wrap.b32 	%r1850, %r1845, %r1844, 25;
	shf.l.wrap.b32 	%r1851, %r1844, %r1845, 25;
	mov.b64 	%rd2549, {%r1851, %r1850};
	xor.b64  	%rd2550, %rd2548, %rd2549;
	xor.b64  	%rd2551, %rd10080, %rd10081;
	and.b64  	%rd2552, %rd2551, %rd10082;
	and.b64  	%rd2553, %rd10080, %rd10081;
	or.b64  	%rd2554, %rd2552, %rd2553;
	add.s64 	%rd2555, %rd2544, %rd2554;
	add.s64 	%rd2556, %rd2555, %rd2550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1852,%dummy}, %rd2545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1853}, %rd2545;
	}
	shf.r.wrap.b32 	%r1854, %r1853, %r1852, 14;
	shf.r.wrap.b32 	%r1855, %r1852, %r1853, 14;
	mov.b64 	%rd2557, {%r1855, %r1854};
	shf.r.wrap.b32 	%r1856, %r1853, %r1852, 18;
	shf.r.wrap.b32 	%r1857, %r1852, %r1853, 18;
	mov.b64 	%rd2558, {%r1857, %r1856};
	xor.b64  	%rd2559, %rd2558, %rd2557;
	shf.l.wrap.b32 	%r1858, %r1852, %r1853, 23;
	shf.l.wrap.b32 	%r1859, %r1853, %r1852, 23;
	mov.b64 	%rd2560, {%r1859, %r1858};
	xor.b64  	%rd2561, %rd2559, %rd2560;
	xor.b64  	%rd2562, %rd10084, %rd10085;
	and.b64  	%rd2563, %rd2545, %rd2562;
	xor.b64  	%rd2564, %rd2563, %rd10085;
	add.s64 	%rd2565, %rd10089, %rd10086;
	ld.const.u64 	%rd2566, [%rd10071+136];
	add.s64 	%rd2567, %rd2565, %rd2566;
	add.s64 	%rd2568, %rd2567, %rd2564;
	add.s64 	%rd2569, %rd2568, %rd2561;
	add.s64 	%rd2570, %rd2569, %rd10082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1860,%dummy}, %rd2556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1861}, %rd2556;
	}
	shf.r.wrap.b32 	%r1862, %r1861, %r1860, 28;
	shf.r.wrap.b32 	%r1863, %r1860, %r1861, 28;
	mov.b64 	%rd2571, {%r1863, %r1862};
	shf.l.wrap.b32 	%r1864, %r1860, %r1861, 30;
	shf.l.wrap.b32 	%r1865, %r1861, %r1860, 30;
	mov.b64 	%rd2572, {%r1865, %r1864};
	xor.b64  	%rd2573, %rd2572, %rd2571;
	shf.l.wrap.b32 	%r1866, %r1860, %r1861, 25;
	shf.l.wrap.b32 	%r1867, %r1861, %r1860, 25;
	mov.b64 	%rd2574, {%r1867, %r1866};
	xor.b64  	%rd2575, %rd2573, %rd2574;
	and.b64  	%rd2576, %rd2556, %rd10080;
	xor.b64  	%rd2577, %rd2556, %rd10080;
	and.b64  	%rd2578, %rd2577, %rd10081;
	or.b64  	%rd2579, %rd2578, %rd2576;
	add.s64 	%rd2580, %rd2569, %rd2579;
	add.s64 	%rd2581, %rd2580, %rd2575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1868,%dummy}, %rd2570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1869}, %rd2570;
	}
	shf.r.wrap.b32 	%r1870, %r1869, %r1868, 14;
	shf.r.wrap.b32 	%r1871, %r1868, %r1869, 14;
	mov.b64 	%rd2582, {%r1871, %r1870};
	shf.r.wrap.b32 	%r1872, %r1869, %r1868, 18;
	shf.r.wrap.b32 	%r1873, %r1868, %r1869, 18;
	mov.b64 	%rd2583, {%r1873, %r1872};
	xor.b64  	%rd2584, %rd2583, %rd2582;
	shf.l.wrap.b32 	%r1874, %r1868, %r1869, 23;
	shf.l.wrap.b32 	%r1875, %r1869, %r1868, 23;
	mov.b64 	%rd2585, {%r1875, %r1874};
	xor.b64  	%rd2586, %rd2584, %rd2585;
	xor.b64  	%rd2587, %rd2545, %rd10084;
	and.b64  	%rd2588, %rd2570, %rd2587;
	xor.b64  	%rd2589, %rd2588, %rd10084;
	add.s64 	%rd2590, %rd10090, %rd10085;
	ld.const.u64 	%rd2591, [%rd10071+144];
	add.s64 	%rd2592, %rd2590, %rd2591;
	add.s64 	%rd2593, %rd2592, %rd2589;
	add.s64 	%rd2594, %rd2593, %rd2586;
	add.s64 	%rd2595, %rd2594, %rd10081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1876,%dummy}, %rd2581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1877}, %rd2581;
	}
	shf.r.wrap.b32 	%r1878, %r1877, %r1876, 28;
	shf.r.wrap.b32 	%r1879, %r1876, %r1877, 28;
	mov.b64 	%rd2596, {%r1879, %r1878};
	shf.l.wrap.b32 	%r1880, %r1876, %r1877, 30;
	shf.l.wrap.b32 	%r1881, %r1877, %r1876, 30;
	mov.b64 	%rd2597, {%r1881, %r1880};
	xor.b64  	%rd2598, %rd2597, %rd2596;
	shf.l.wrap.b32 	%r1882, %r1876, %r1877, 25;
	shf.l.wrap.b32 	%r1883, %r1877, %r1876, 25;
	mov.b64 	%rd2599, {%r1883, %r1882};
	xor.b64  	%rd2600, %rd2598, %rd2599;
	and.b64  	%rd2601, %rd2581, %rd2556;
	xor.b64  	%rd2602, %rd2581, %rd2556;
	and.b64  	%rd2603, %rd2602, %rd10080;
	or.b64  	%rd2604, %rd2603, %rd2601;
	add.s64 	%rd2605, %rd2594, %rd2604;
	add.s64 	%rd2606, %rd2605, %rd2600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1884,%dummy}, %rd2595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1885}, %rd2595;
	}
	shf.r.wrap.b32 	%r1886, %r1885, %r1884, 14;
	shf.r.wrap.b32 	%r1887, %r1884, %r1885, 14;
	mov.b64 	%rd2607, {%r1887, %r1886};
	shf.r.wrap.b32 	%r1888, %r1885, %r1884, 18;
	shf.r.wrap.b32 	%r1889, %r1884, %r1885, 18;
	mov.b64 	%rd2608, {%r1889, %r1888};
	xor.b64  	%rd2609, %rd2608, %rd2607;
	shf.l.wrap.b32 	%r1890, %r1884, %r1885, 23;
	shf.l.wrap.b32 	%r1891, %r1885, %r1884, 23;
	mov.b64 	%rd2610, {%r1891, %r1890};
	xor.b64  	%rd2611, %rd2609, %rd2610;
	xor.b64  	%rd2612, %rd2570, %rd2545;
	and.b64  	%rd2613, %rd2595, %rd2612;
	xor.b64  	%rd2614, %rd2613, %rd2545;
	add.s64 	%rd2615, %rd10091, %rd10084;
	ld.const.u64 	%rd2616, [%rd10071+152];
	add.s64 	%rd2617, %rd2615, %rd2616;
	add.s64 	%rd2618, %rd2617, %rd2614;
	add.s64 	%rd2619, %rd2618, %rd2611;
	add.s64 	%rd2620, %rd2619, %rd10080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1892,%dummy}, %rd2606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1893}, %rd2606;
	}
	shf.r.wrap.b32 	%r1894, %r1893, %r1892, 28;
	shf.r.wrap.b32 	%r1895, %r1892, %r1893, 28;
	mov.b64 	%rd2621, {%r1895, %r1894};
	shf.l.wrap.b32 	%r1896, %r1892, %r1893, 30;
	shf.l.wrap.b32 	%r1897, %r1893, %r1892, 30;
	mov.b64 	%rd2622, {%r1897, %r1896};
	xor.b64  	%rd2623, %rd2622, %rd2621;
	shf.l.wrap.b32 	%r1898, %r1892, %r1893, 25;
	shf.l.wrap.b32 	%r1899, %r1893, %r1892, 25;
	mov.b64 	%rd2624, {%r1899, %r1898};
	xor.b64  	%rd2625, %rd2623, %rd2624;
	and.b64  	%rd2626, %rd2606, %rd2581;
	xor.b64  	%rd2627, %rd2606, %rd2581;
	and.b64  	%rd2628, %rd2627, %rd2556;
	or.b64  	%rd2629, %rd2628, %rd2626;
	add.s64 	%rd2630, %rd2619, %rd2629;
	add.s64 	%rd2631, %rd2630, %rd2625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1900,%dummy}, %rd2620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1901}, %rd2620;
	}
	shf.r.wrap.b32 	%r1902, %r1901, %r1900, 14;
	shf.r.wrap.b32 	%r1903, %r1900, %r1901, 14;
	mov.b64 	%rd2632, {%r1903, %r1902};
	shf.r.wrap.b32 	%r1904, %r1901, %r1900, 18;
	shf.r.wrap.b32 	%r1905, %r1900, %r1901, 18;
	mov.b64 	%rd2633, {%r1905, %r1904};
	xor.b64  	%rd2634, %rd2633, %rd2632;
	shf.l.wrap.b32 	%r1906, %r1900, %r1901, 23;
	shf.l.wrap.b32 	%r1907, %r1901, %r1900, 23;
	mov.b64 	%rd2635, {%r1907, %r1906};
	xor.b64  	%rd2636, %rd2634, %rd2635;
	xor.b64  	%rd2637, %rd2595, %rd2570;
	and.b64  	%rd2638, %rd2620, %rd2637;
	xor.b64  	%rd2639, %rd2638, %rd2570;
	add.s64 	%rd2640, %rd2545, %rd10092;
	ld.const.u64 	%rd2641, [%rd10071+160];
	add.s64 	%rd2642, %rd2640, %rd2641;
	add.s64 	%rd2643, %rd2642, %rd2639;
	add.s64 	%rd2644, %rd2643, %rd2636;
	add.s64 	%rd2645, %rd2644, %rd2556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1908,%dummy}, %rd2631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1909}, %rd2631;
	}
	shf.r.wrap.b32 	%r1910, %r1909, %r1908, 28;
	shf.r.wrap.b32 	%r1911, %r1908, %r1909, 28;
	mov.b64 	%rd2646, {%r1911, %r1910};
	shf.l.wrap.b32 	%r1912, %r1908, %r1909, 30;
	shf.l.wrap.b32 	%r1913, %r1909, %r1908, 30;
	mov.b64 	%rd2647, {%r1913, %r1912};
	xor.b64  	%rd2648, %rd2647, %rd2646;
	shf.l.wrap.b32 	%r1914, %r1908, %r1909, 25;
	shf.l.wrap.b32 	%r1915, %r1909, %r1908, 25;
	mov.b64 	%rd2649, {%r1915, %r1914};
	xor.b64  	%rd2650, %rd2648, %rd2649;
	and.b64  	%rd2651, %rd2631, %rd2606;
	xor.b64  	%rd2652, %rd2631, %rd2606;
	and.b64  	%rd2653, %rd2652, %rd2581;
	or.b64  	%rd2654, %rd2653, %rd2651;
	add.s64 	%rd2655, %rd2644, %rd2654;
	add.s64 	%rd2656, %rd2655, %rd2650;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1916,%dummy}, %rd2645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1917}, %rd2645;
	}
	shf.r.wrap.b32 	%r1918, %r1917, %r1916, 14;
	shf.r.wrap.b32 	%r1919, %r1916, %r1917, 14;
	mov.b64 	%rd2657, {%r1919, %r1918};
	shf.r.wrap.b32 	%r1920, %r1917, %r1916, 18;
	shf.r.wrap.b32 	%r1921, %r1916, %r1917, 18;
	mov.b64 	%rd2658, {%r1921, %r1920};
	xor.b64  	%rd2659, %rd2658, %rd2657;
	shf.l.wrap.b32 	%r1922, %r1916, %r1917, 23;
	shf.l.wrap.b32 	%r1923, %r1917, %r1916, 23;
	mov.b64 	%rd2660, {%r1923, %r1922};
	xor.b64  	%rd2661, %rd2659, %rd2660;
	xor.b64  	%rd2662, %rd2620, %rd2595;
	and.b64  	%rd2663, %rd2645, %rd2662;
	xor.b64  	%rd2664, %rd2663, %rd2595;
	add.s64 	%rd2665, %rd2570, %rd10093;
	ld.const.u64 	%rd2666, [%rd10071+168];
	add.s64 	%rd2667, %rd2665, %rd2666;
	add.s64 	%rd2668, %rd2667, %rd2664;
	add.s64 	%rd2669, %rd2668, %rd2661;
	add.s64 	%rd2670, %rd2669, %rd2581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1924,%dummy}, %rd2656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1925}, %rd2656;
	}
	shf.r.wrap.b32 	%r1926, %r1925, %r1924, 28;
	shf.r.wrap.b32 	%r1927, %r1924, %r1925, 28;
	mov.b64 	%rd2671, {%r1927, %r1926};
	shf.l.wrap.b32 	%r1928, %r1924, %r1925, 30;
	shf.l.wrap.b32 	%r1929, %r1925, %r1924, 30;
	mov.b64 	%rd2672, {%r1929, %r1928};
	xor.b64  	%rd2673, %rd2672, %rd2671;
	shf.l.wrap.b32 	%r1930, %r1924, %r1925, 25;
	shf.l.wrap.b32 	%r1931, %r1925, %r1924, 25;
	mov.b64 	%rd2674, {%r1931, %r1930};
	xor.b64  	%rd2675, %rd2673, %rd2674;
	and.b64  	%rd2676, %rd2656, %rd2631;
	xor.b64  	%rd2677, %rd2656, %rd2631;
	and.b64  	%rd2678, %rd2677, %rd2606;
	or.b64  	%rd2679, %rd2678, %rd2676;
	add.s64 	%rd2680, %rd2669, %rd2679;
	add.s64 	%rd2681, %rd2680, %rd2675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1932,%dummy}, %rd2670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1933}, %rd2670;
	}
	shf.r.wrap.b32 	%r1934, %r1933, %r1932, 14;
	shf.r.wrap.b32 	%r1935, %r1932, %r1933, 14;
	mov.b64 	%rd2682, {%r1935, %r1934};
	shf.r.wrap.b32 	%r1936, %r1933, %r1932, 18;
	shf.r.wrap.b32 	%r1937, %r1932, %r1933, 18;
	mov.b64 	%rd2683, {%r1937, %r1936};
	xor.b64  	%rd2684, %rd2683, %rd2682;
	shf.l.wrap.b32 	%r1938, %r1932, %r1933, 23;
	shf.l.wrap.b32 	%r1939, %r1933, %r1932, 23;
	mov.b64 	%rd2685, {%r1939, %r1938};
	xor.b64  	%rd2686, %rd2684, %rd2685;
	xor.b64  	%rd2687, %rd2645, %rd2620;
	and.b64  	%rd2688, %rd2670, %rd2687;
	xor.b64  	%rd2689, %rd2688, %rd2620;
	add.s64 	%rd2690, %rd2595, %rd10094;
	ld.const.u64 	%rd2691, [%rd10071+176];
	add.s64 	%rd2692, %rd2690, %rd2691;
	add.s64 	%rd2693, %rd2692, %rd2689;
	add.s64 	%rd2694, %rd2693, %rd2686;
	add.s64 	%rd2695, %rd2694, %rd2606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1940,%dummy}, %rd2681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1941}, %rd2681;
	}
	shf.r.wrap.b32 	%r1942, %r1941, %r1940, 28;
	shf.r.wrap.b32 	%r1943, %r1940, %r1941, 28;
	mov.b64 	%rd2696, {%r1943, %r1942};
	shf.l.wrap.b32 	%r1944, %r1940, %r1941, 30;
	shf.l.wrap.b32 	%r1945, %r1941, %r1940, 30;
	mov.b64 	%rd2697, {%r1945, %r1944};
	xor.b64  	%rd2698, %rd2697, %rd2696;
	shf.l.wrap.b32 	%r1946, %r1940, %r1941, 25;
	shf.l.wrap.b32 	%r1947, %r1941, %r1940, 25;
	mov.b64 	%rd2699, {%r1947, %r1946};
	xor.b64  	%rd2700, %rd2698, %rd2699;
	and.b64  	%rd2701, %rd2681, %rd2656;
	xor.b64  	%rd2702, %rd2681, %rd2656;
	and.b64  	%rd2703, %rd2702, %rd2631;
	or.b64  	%rd2704, %rd2703, %rd2701;
	add.s64 	%rd2705, %rd2694, %rd2704;
	add.s64 	%rd2706, %rd2705, %rd2700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1948,%dummy}, %rd2695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1949}, %rd2695;
	}
	shf.r.wrap.b32 	%r1950, %r1949, %r1948, 14;
	shf.r.wrap.b32 	%r1951, %r1948, %r1949, 14;
	mov.b64 	%rd2707, {%r1951, %r1950};
	shf.r.wrap.b32 	%r1952, %r1949, %r1948, 18;
	shf.r.wrap.b32 	%r1953, %r1948, %r1949, 18;
	mov.b64 	%rd2708, {%r1953, %r1952};
	xor.b64  	%rd2709, %rd2708, %rd2707;
	shf.l.wrap.b32 	%r1954, %r1948, %r1949, 23;
	shf.l.wrap.b32 	%r1955, %r1949, %r1948, 23;
	mov.b64 	%rd2710, {%r1955, %r1954};
	xor.b64  	%rd2711, %rd2709, %rd2710;
	xor.b64  	%rd2712, %rd2670, %rd2645;
	and.b64  	%rd2713, %rd2695, %rd2712;
	xor.b64  	%rd2714, %rd2713, %rd2645;
	add.s64 	%rd2715, %rd2620, %rd10095;
	ld.const.u64 	%rd2716, [%rd10071+184];
	add.s64 	%rd2717, %rd2715, %rd2716;
	add.s64 	%rd2718, %rd2717, %rd2714;
	add.s64 	%rd2719, %rd2718, %rd2711;
	add.s64 	%rd2720, %rd2719, %rd2631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1956,%dummy}, %rd2706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1957}, %rd2706;
	}
	shf.r.wrap.b32 	%r1958, %r1957, %r1956, 28;
	shf.r.wrap.b32 	%r1959, %r1956, %r1957, 28;
	mov.b64 	%rd2721, {%r1959, %r1958};
	shf.l.wrap.b32 	%r1960, %r1956, %r1957, 30;
	shf.l.wrap.b32 	%r1961, %r1957, %r1956, 30;
	mov.b64 	%rd2722, {%r1961, %r1960};
	xor.b64  	%rd2723, %rd2722, %rd2721;
	shf.l.wrap.b32 	%r1962, %r1956, %r1957, 25;
	shf.l.wrap.b32 	%r1963, %r1957, %r1956, 25;
	mov.b64 	%rd2724, {%r1963, %r1962};
	xor.b64  	%rd2725, %rd2723, %rd2724;
	and.b64  	%rd2726, %rd2706, %rd2681;
	xor.b64  	%rd2727, %rd2706, %rd2681;
	and.b64  	%rd2728, %rd2727, %rd2656;
	or.b64  	%rd2729, %rd2728, %rd2726;
	add.s64 	%rd2730, %rd2719, %rd2729;
	add.s64 	%rd2731, %rd2730, %rd2725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1964,%dummy}, %rd2720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1965}, %rd2720;
	}
	shf.r.wrap.b32 	%r1966, %r1965, %r1964, 14;
	shf.r.wrap.b32 	%r1967, %r1964, %r1965, 14;
	mov.b64 	%rd2732, {%r1967, %r1966};
	shf.r.wrap.b32 	%r1968, %r1965, %r1964, 18;
	shf.r.wrap.b32 	%r1969, %r1964, %r1965, 18;
	mov.b64 	%rd2733, {%r1969, %r1968};
	xor.b64  	%rd2734, %rd2733, %rd2732;
	shf.l.wrap.b32 	%r1970, %r1964, %r1965, 23;
	shf.l.wrap.b32 	%r1971, %r1965, %r1964, 23;
	mov.b64 	%rd2735, {%r1971, %r1970};
	xor.b64  	%rd2736, %rd2734, %rd2735;
	xor.b64  	%rd2737, %rd2695, %rd2670;
	and.b64  	%rd2738, %rd2720, %rd2737;
	xor.b64  	%rd2739, %rd2738, %rd2670;
	add.s64 	%rd2740, %rd2645, %rd10079;
	ld.const.u64 	%rd2741, [%rd10071+192];
	add.s64 	%rd2742, %rd2740, %rd2741;
	add.s64 	%rd2743, %rd2742, %rd2739;
	add.s64 	%rd2744, %rd2743, %rd2736;
	add.s64 	%rd2745, %rd2744, %rd2656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1972,%dummy}, %rd2731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1973}, %rd2731;
	}
	shf.r.wrap.b32 	%r1974, %r1973, %r1972, 28;
	shf.r.wrap.b32 	%r1975, %r1972, %r1973, 28;
	mov.b64 	%rd2746, {%r1975, %r1974};
	shf.l.wrap.b32 	%r1976, %r1972, %r1973, 30;
	shf.l.wrap.b32 	%r1977, %r1973, %r1972, 30;
	mov.b64 	%rd2747, {%r1977, %r1976};
	xor.b64  	%rd2748, %rd2747, %rd2746;
	shf.l.wrap.b32 	%r1978, %r1972, %r1973, 25;
	shf.l.wrap.b32 	%r1979, %r1973, %r1972, 25;
	mov.b64 	%rd2749, {%r1979, %r1978};
	xor.b64  	%rd2750, %rd2748, %rd2749;
	and.b64  	%rd2751, %rd2731, %rd2706;
	xor.b64  	%rd2752, %rd2731, %rd2706;
	and.b64  	%rd2753, %rd2752, %rd2681;
	or.b64  	%rd2754, %rd2753, %rd2751;
	add.s64 	%rd2755, %rd2744, %rd2754;
	add.s64 	%rd2756, %rd2755, %rd2750;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1980,%dummy}, %rd2745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1981}, %rd2745;
	}
	shf.r.wrap.b32 	%r1982, %r1981, %r1980, 14;
	shf.r.wrap.b32 	%r1983, %r1980, %r1981, 14;
	mov.b64 	%rd2757, {%r1983, %r1982};
	shf.r.wrap.b32 	%r1984, %r1981, %r1980, 18;
	shf.r.wrap.b32 	%r1985, %r1980, %r1981, 18;
	mov.b64 	%rd2758, {%r1985, %r1984};
	xor.b64  	%rd2759, %rd2758, %rd2757;
	shf.l.wrap.b32 	%r1986, %r1980, %r1981, 23;
	shf.l.wrap.b32 	%r1987, %r1981, %r1980, 23;
	mov.b64 	%rd2760, {%r1987, %r1986};
	xor.b64  	%rd2761, %rd2759, %rd2760;
	xor.b64  	%rd2762, %rd2720, %rd2695;
	and.b64  	%rd2763, %rd2745, %rd2762;
	xor.b64  	%rd2764, %rd2763, %rd2695;
	add.s64 	%rd2765, %rd2670, %rd10078;
	ld.const.u64 	%rd2766, [%rd10071+200];
	add.s64 	%rd2767, %rd2765, %rd2766;
	add.s64 	%rd2768, %rd2767, %rd2764;
	add.s64 	%rd2769, %rd2768, %rd2761;
	add.s64 	%rd2770, %rd2769, %rd2681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1988,%dummy}, %rd2756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1989}, %rd2756;
	}
	shf.r.wrap.b32 	%r1990, %r1989, %r1988, 28;
	shf.r.wrap.b32 	%r1991, %r1988, %r1989, 28;
	mov.b64 	%rd2771, {%r1991, %r1990};
	shf.l.wrap.b32 	%r1992, %r1988, %r1989, 30;
	shf.l.wrap.b32 	%r1993, %r1989, %r1988, 30;
	mov.b64 	%rd2772, {%r1993, %r1992};
	xor.b64  	%rd2773, %rd2772, %rd2771;
	shf.l.wrap.b32 	%r1994, %r1988, %r1989, 25;
	shf.l.wrap.b32 	%r1995, %r1989, %r1988, 25;
	mov.b64 	%rd2774, {%r1995, %r1994};
	xor.b64  	%rd2775, %rd2773, %rd2774;
	and.b64  	%rd2776, %rd2756, %rd2731;
	xor.b64  	%rd2777, %rd2756, %rd2731;
	and.b64  	%rd2778, %rd2777, %rd2706;
	or.b64  	%rd2779, %rd2778, %rd2776;
	add.s64 	%rd2780, %rd2769, %rd2779;
	add.s64 	%rd2781, %rd2780, %rd2775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1996,%dummy}, %rd2770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1997}, %rd2770;
	}
	shf.r.wrap.b32 	%r1998, %r1997, %r1996, 14;
	shf.r.wrap.b32 	%r1999, %r1996, %r1997, 14;
	mov.b64 	%rd2782, {%r1999, %r1998};
	shf.r.wrap.b32 	%r2000, %r1997, %r1996, 18;
	shf.r.wrap.b32 	%r2001, %r1996, %r1997, 18;
	mov.b64 	%rd2783, {%r2001, %r2000};
	xor.b64  	%rd2784, %rd2783, %rd2782;
	shf.l.wrap.b32 	%r2002, %r1996, %r1997, 23;
	shf.l.wrap.b32 	%r2003, %r1997, %r1996, 23;
	mov.b64 	%rd2785, {%r2003, %r2002};
	xor.b64  	%rd2786, %rd2784, %rd2785;
	xor.b64  	%rd2787, %rd2745, %rd2720;
	and.b64  	%rd2788, %rd2770, %rd2787;
	xor.b64  	%rd2789, %rd2788, %rd2720;
	add.s64 	%rd2790, %rd2695, %rd10077;
	ld.const.u64 	%rd2791, [%rd10071+208];
	add.s64 	%rd2792, %rd2790, %rd2791;
	add.s64 	%rd2793, %rd2792, %rd2789;
	add.s64 	%rd2794, %rd2793, %rd2786;
	add.s64 	%rd2795, %rd2794, %rd2706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2004,%dummy}, %rd2781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2005}, %rd2781;
	}
	shf.r.wrap.b32 	%r2006, %r2005, %r2004, 28;
	shf.r.wrap.b32 	%r2007, %r2004, %r2005, 28;
	mov.b64 	%rd2796, {%r2007, %r2006};
	shf.l.wrap.b32 	%r2008, %r2004, %r2005, 30;
	shf.l.wrap.b32 	%r2009, %r2005, %r2004, 30;
	mov.b64 	%rd2797, {%r2009, %r2008};
	xor.b64  	%rd2798, %rd2797, %rd2796;
	shf.l.wrap.b32 	%r2010, %r2004, %r2005, 25;
	shf.l.wrap.b32 	%r2011, %r2005, %r2004, 25;
	mov.b64 	%rd2799, {%r2011, %r2010};
	xor.b64  	%rd2800, %rd2798, %rd2799;
	and.b64  	%rd2801, %rd2781, %rd2756;
	xor.b64  	%rd2802, %rd2781, %rd2756;
	and.b64  	%rd2803, %rd2802, %rd2731;
	or.b64  	%rd2804, %rd2803, %rd2801;
	add.s64 	%rd2805, %rd2794, %rd2804;
	add.s64 	%rd2806, %rd2805, %rd2800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2012,%dummy}, %rd2795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2013}, %rd2795;
	}
	shf.r.wrap.b32 	%r2014, %r2013, %r2012, 14;
	shf.r.wrap.b32 	%r2015, %r2012, %r2013, 14;
	mov.b64 	%rd2807, {%r2015, %r2014};
	shf.r.wrap.b32 	%r2016, %r2013, %r2012, 18;
	shf.r.wrap.b32 	%r2017, %r2012, %r2013, 18;
	mov.b64 	%rd2808, {%r2017, %r2016};
	xor.b64  	%rd2809, %rd2808, %rd2807;
	shf.l.wrap.b32 	%r2018, %r2012, %r2013, 23;
	shf.l.wrap.b32 	%r2019, %r2013, %r2012, 23;
	mov.b64 	%rd2810, {%r2019, %r2018};
	xor.b64  	%rd2811, %rd2809, %rd2810;
	xor.b64  	%rd2812, %rd2770, %rd2745;
	and.b64  	%rd2813, %rd2795, %rd2812;
	xor.b64  	%rd2814, %rd2813, %rd2745;
	add.s64 	%rd2815, %rd2720, %rd10076;
	ld.const.u64 	%rd2816, [%rd10071+216];
	add.s64 	%rd2817, %rd2815, %rd2816;
	add.s64 	%rd2818, %rd2817, %rd2814;
	add.s64 	%rd2819, %rd2818, %rd2811;
	add.s64 	%rd2820, %rd2819, %rd2731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2020,%dummy}, %rd2806;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2021}, %rd2806;
	}
	shf.r.wrap.b32 	%r2022, %r2021, %r2020, 28;
	shf.r.wrap.b32 	%r2023, %r2020, %r2021, 28;
	mov.b64 	%rd2821, {%r2023, %r2022};
	shf.l.wrap.b32 	%r2024, %r2020, %r2021, 30;
	shf.l.wrap.b32 	%r2025, %r2021, %r2020, 30;
	mov.b64 	%rd2822, {%r2025, %r2024};
	xor.b64  	%rd2823, %rd2822, %rd2821;
	shf.l.wrap.b32 	%r2026, %r2020, %r2021, 25;
	shf.l.wrap.b32 	%r2027, %r2021, %r2020, 25;
	mov.b64 	%rd2824, {%r2027, %r2026};
	xor.b64  	%rd2825, %rd2823, %rd2824;
	and.b64  	%rd2826, %rd2806, %rd2781;
	xor.b64  	%rd2827, %rd2806, %rd2781;
	and.b64  	%rd2828, %rd2827, %rd2756;
	or.b64  	%rd2829, %rd2828, %rd2826;
	add.s64 	%rd2830, %rd2819, %rd2829;
	add.s64 	%rd2831, %rd2830, %rd2825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2028,%dummy}, %rd2820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2029}, %rd2820;
	}
	shf.r.wrap.b32 	%r2030, %r2029, %r2028, 14;
	shf.r.wrap.b32 	%r2031, %r2028, %r2029, 14;
	mov.b64 	%rd2832, {%r2031, %r2030};
	shf.r.wrap.b32 	%r2032, %r2029, %r2028, 18;
	shf.r.wrap.b32 	%r2033, %r2028, %r2029, 18;
	mov.b64 	%rd2833, {%r2033, %r2032};
	xor.b64  	%rd2834, %rd2833, %rd2832;
	shf.l.wrap.b32 	%r2034, %r2028, %r2029, 23;
	shf.l.wrap.b32 	%r2035, %r2029, %r2028, 23;
	mov.b64 	%rd2835, {%r2035, %r2034};
	xor.b64  	%rd2836, %rd2834, %rd2835;
	xor.b64  	%rd2837, %rd2795, %rd2770;
	and.b64  	%rd2838, %rd2820, %rd2837;
	xor.b64  	%rd2839, %rd2838, %rd2770;
	add.s64 	%rd2840, %rd2745, %rd10075;
	ld.const.u64 	%rd2841, [%rd10071+224];
	add.s64 	%rd2842, %rd2840, %rd2841;
	add.s64 	%rd2843, %rd2842, %rd2839;
	add.s64 	%rd2844, %rd2843, %rd2836;
	add.s64 	%rd10087, %rd2844, %rd2756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2036,%dummy}, %rd2831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2037}, %rd2831;
	}
	shf.r.wrap.b32 	%r2038, %r2037, %r2036, 28;
	shf.r.wrap.b32 	%r2039, %r2036, %r2037, 28;
	mov.b64 	%rd2845, {%r2039, %r2038};
	shf.l.wrap.b32 	%r2040, %r2036, %r2037, 30;
	shf.l.wrap.b32 	%r2041, %r2037, %r2036, 30;
	mov.b64 	%rd2846, {%r2041, %r2040};
	xor.b64  	%rd2847, %rd2846, %rd2845;
	shf.l.wrap.b32 	%r2042, %r2036, %r2037, 25;
	shf.l.wrap.b32 	%r2043, %r2037, %r2036, 25;
	mov.b64 	%rd2848, {%r2043, %r2042};
	xor.b64  	%rd2849, %rd2847, %rd2848;
	and.b64  	%rd2850, %rd2831, %rd2806;
	xor.b64  	%rd2851, %rd2831, %rd2806;
	and.b64  	%rd2852, %rd2851, %rd2781;
	or.b64  	%rd2853, %rd2852, %rd2850;
	add.s64 	%rd2854, %rd2844, %rd2853;
	add.s64 	%rd10083, %rd2854, %rd2849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2044,%dummy}, %rd10087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2045}, %rd10087;
	}
	shf.r.wrap.b32 	%r2046, %r2045, %r2044, 14;
	shf.r.wrap.b32 	%r2047, %r2044, %r2045, 14;
	mov.b64 	%rd2855, {%r2047, %r2046};
	shf.r.wrap.b32 	%r2048, %r2045, %r2044, 18;
	shf.r.wrap.b32 	%r2049, %r2044, %r2045, 18;
	mov.b64 	%rd2856, {%r2049, %r2048};
	xor.b64  	%rd2857, %rd2856, %rd2855;
	shf.l.wrap.b32 	%r2050, %r2044, %r2045, 23;
	shf.l.wrap.b32 	%r2051, %r2045, %r2044, 23;
	mov.b64 	%rd2858, {%r2051, %r2050};
	xor.b64  	%rd2859, %rd2857, %rd2858;
	xor.b64  	%rd2860, %rd2820, %rd2795;
	and.b64  	%rd2861, %rd10087, %rd2860;
	xor.b64  	%rd2862, %rd2861, %rd2795;
	add.s64 	%rd2863, %rd2770, %rd10074;
	ld.const.u64 	%rd2864, [%rd10071+232];
	add.s64 	%rd2865, %rd2863, %rd2864;
	add.s64 	%rd2866, %rd2865, %rd2862;
	add.s64 	%rd2867, %rd2866, %rd2859;
	add.s64 	%rd10086, %rd2867, %rd2781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2052,%dummy}, %rd10083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2053}, %rd10083;
	}
	shf.r.wrap.b32 	%r2054, %r2053, %r2052, 28;
	shf.r.wrap.b32 	%r2055, %r2052, %r2053, 28;
	mov.b64 	%rd2868, {%r2055, %r2054};
	shf.l.wrap.b32 	%r2056, %r2052, %r2053, 30;
	shf.l.wrap.b32 	%r2057, %r2053, %r2052, 30;
	mov.b64 	%rd2869, {%r2057, %r2056};
	xor.b64  	%rd2870, %rd2869, %rd2868;
	shf.l.wrap.b32 	%r2058, %r2052, %r2053, 25;
	shf.l.wrap.b32 	%r2059, %r2053, %r2052, 25;
	mov.b64 	%rd2871, {%r2059, %r2058};
	xor.b64  	%rd2872, %rd2870, %rd2871;
	and.b64  	%rd2873, %rd10083, %rd2831;
	xor.b64  	%rd2874, %rd10083, %rd2831;
	and.b64  	%rd2875, %rd2874, %rd2806;
	or.b64  	%rd2876, %rd2875, %rd2873;
	add.s64 	%rd2877, %rd2867, %rd2876;
	add.s64 	%rd10082, %rd2877, %rd2872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2060,%dummy}, %rd10086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2061}, %rd10086;
	}
	shf.r.wrap.b32 	%r2062, %r2061, %r2060, 14;
	shf.r.wrap.b32 	%r2063, %r2060, %r2061, 14;
	mov.b64 	%rd2878, {%r2063, %r2062};
	shf.r.wrap.b32 	%r2064, %r2061, %r2060, 18;
	shf.r.wrap.b32 	%r2065, %r2060, %r2061, 18;
	mov.b64 	%rd2879, {%r2065, %r2064};
	xor.b64  	%rd2880, %rd2879, %rd2878;
	shf.l.wrap.b32 	%r2066, %r2060, %r2061, 23;
	shf.l.wrap.b32 	%r2067, %r2061, %r2060, 23;
	mov.b64 	%rd2881, {%r2067, %r2066};
	xor.b64  	%rd2882, %rd2880, %rd2881;
	xor.b64  	%rd2883, %rd10087, %rd2820;
	and.b64  	%rd2884, %rd10086, %rd2883;
	xor.b64  	%rd2885, %rd2884, %rd2820;
	add.s64 	%rd2886, %rd2795, %rd10073;
	ld.const.u64 	%rd2887, [%rd10071+240];
	add.s64 	%rd2888, %rd2886, %rd2887;
	add.s64 	%rd2889, %rd2888, %rd2885;
	add.s64 	%rd2890, %rd2889, %rd2882;
	add.s64 	%rd10085, %rd2890, %rd2806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2068,%dummy}, %rd10082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2069}, %rd10082;
	}
	shf.r.wrap.b32 	%r2070, %r2069, %r2068, 28;
	shf.r.wrap.b32 	%r2071, %r2068, %r2069, 28;
	mov.b64 	%rd2891, {%r2071, %r2070};
	shf.l.wrap.b32 	%r2072, %r2068, %r2069, 30;
	shf.l.wrap.b32 	%r2073, %r2069, %r2068, 30;
	mov.b64 	%rd2892, {%r2073, %r2072};
	xor.b64  	%rd2893, %rd2892, %rd2891;
	shf.l.wrap.b32 	%r2074, %r2068, %r2069, 25;
	shf.l.wrap.b32 	%r2075, %r2069, %r2068, 25;
	mov.b64 	%rd2894, {%r2075, %r2074};
	xor.b64  	%rd2895, %rd2893, %rd2894;
	and.b64  	%rd2896, %rd10082, %rd10083;
	xor.b64  	%rd2897, %rd10082, %rd10083;
	and.b64  	%rd2898, %rd2897, %rd2831;
	or.b64  	%rd2899, %rd2898, %rd2896;
	add.s64 	%rd2900, %rd2890, %rd2899;
	add.s64 	%rd10081, %rd2900, %rd2895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2076,%dummy}, %rd10085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2077}, %rd10085;
	}
	shf.r.wrap.b32 	%r2078, %r2077, %r2076, 14;
	shf.r.wrap.b32 	%r2079, %r2076, %r2077, 14;
	mov.b64 	%rd2901, {%r2079, %r2078};
	shf.r.wrap.b32 	%r2080, %r2077, %r2076, 18;
	shf.r.wrap.b32 	%r2081, %r2076, %r2077, 18;
	mov.b64 	%rd2902, {%r2081, %r2080};
	xor.b64  	%rd2903, %rd2902, %rd2901;
	shf.l.wrap.b32 	%r2082, %r2076, %r2077, 23;
	shf.l.wrap.b32 	%r2083, %r2077, %r2076, 23;
	mov.b64 	%rd2904, {%r2083, %r2082};
	xor.b64  	%rd2905, %rd2903, %rd2904;
	xor.b64  	%rd2906, %rd10086, %rd10087;
	and.b64  	%rd2907, %rd10085, %rd2906;
	xor.b64  	%rd2908, %rd2907, %rd10087;
	add.s64 	%rd2909, %rd2820, %rd10072;
	ld.const.u64 	%rd2910, [%rd10071+248];
	add.s64 	%rd2911, %rd2909, %rd2910;
	add.s64 	%rd2912, %rd2911, %rd2908;
	add.s64 	%rd2913, %rd2912, %rd2905;
	add.s64 	%rd10084, %rd2913, %rd2831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2084,%dummy}, %rd10081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2085}, %rd10081;
	}
	shf.r.wrap.b32 	%r2086, %r2085, %r2084, 28;
	shf.r.wrap.b32 	%r2087, %r2084, %r2085, 28;
	mov.b64 	%rd2914, {%r2087, %r2086};
	shf.l.wrap.b32 	%r2088, %r2084, %r2085, 30;
	shf.l.wrap.b32 	%r2089, %r2085, %r2084, 30;
	mov.b64 	%rd2915, {%r2089, %r2088};
	xor.b64  	%rd2916, %rd2915, %rd2914;
	shf.l.wrap.b32 	%r2090, %r2084, %r2085, 25;
	shf.l.wrap.b32 	%r2091, %r2085, %r2084, 25;
	mov.b64 	%rd2917, {%r2091, %r2090};
	xor.b64  	%rd2918, %rd2916, %rd2917;
	and.b64  	%rd2919, %rd10081, %rd10082;
	xor.b64  	%rd2920, %rd10081, %rd10082;
	and.b64  	%rd2921, %rd2920, %rd10083;
	or.b64  	%rd2922, %rd2921, %rd2919;
	add.s64 	%rd2923, %rd2913, %rd2922;
	add.s64 	%rd10080, %rd2923, %rd2918;
	add.s32 	%r7581, %r7581, 16;
	setp.lt.s32	%p19, %r7581, 80;
	mov.u64 	%rd10071, %rd203;
	@%p19 bra 	BB3_11;

	add.s64 	%rd41, %rd10080, %rd41;
	add.s64 	%rd40, %rd10081, %rd40;
	add.s64 	%rd39, %rd10082, %rd39;
	add.s64 	%rd38, %rd10083, %rd38;
	add.s64 	%rd37, %rd10084, %rd37;
	add.s64 	%rd36, %rd10085, %rd36;
	add.s64 	%rd35, %rd10086, %rd35;
	add.s64 	%rd34, %rd10087, %rd34;
	mov.u32 	%r7582, 0;
	mov.u32 	%r7583, %r7582;
	mov.u32 	%r7584, %r7582;
	mov.u32 	%r7585, %r7582;
	mov.u32 	%r7586, %r7582;
	mov.u32 	%r7587, %r7582;
	mov.u32 	%r7588, %r7582;
	mov.u32 	%r7589, %r7582;
	mov.u32 	%r7590, %r7582;
	mov.u32 	%r7591, %r7582;
	mov.u32 	%r7592, %r7582;
	mov.u32 	%r7593, %r7582;
	mov.u32 	%r7594, %r7582;
	mov.u32 	%r7595, %r7582;
	mov.u32 	%r7596, %r7582;
	mov.u32 	%r7597, %r7582;
	mov.u32 	%r7598, %r7582;
	mov.u32 	%r7599, %r7582;
	mov.u32 	%r7600, %r7582;
	mov.u32 	%r7601, %r7582;
	mov.u32 	%r7602, %r7582;
	mov.u32 	%r7603, %r7582;
	mov.u32 	%r7604, %r7582;
	mov.u32 	%r7605, %r7582;
	mov.u32 	%r7606, %r7582;
	mov.u32 	%r7607, %r7582;
	mov.u32 	%r7608, %r7582;
	mov.u32 	%r7609, %r7582;
	mov.u32 	%r7610, %r7582;
	mov.u32 	%r7611, %r7582;

BB3_13:
	ld.const.u64 	%rd9987, [k_sha512+96];
	ld.const.u64 	%rd9986, [k_sha512+88];
	ld.const.u64 	%rd9985, [k_sha512+80];
	ld.const.u64 	%rd9984, [k_sha512+72];
	ld.const.u64 	%rd9983, [k_sha512+64];
	ld.const.u64 	%rd9982, [k_sha512+56];
	mov.b64	%rd10121, {%r7610, %r7611};
	mov.b64	%rd10122, {%r7608, %r7609};
	mov.b64	%rd10123, {%r7606, %r7607};
	mov.b64	%rd10124, {%r7604, %r7605};
	mov.b64	%rd10125, {%r7602, %r7603};
	mov.b64	%rd10126, {%r7600, %r7601};
	mov.b64	%rd10127, {%r7598, %r7599};
	mov.b64	%rd10128, {%r7596, %r7597};
	mov.b64	%rd10112, {%r7594, %r7595};
	mov.b64	%rd10111, {%r7592, %r7593};
	mov.b64	%rd10110, {%r7590, %r7591};
	mov.b64	%rd10109, {%r7588, %r7589};
	mov.b64	%rd10108, {%r7586, %r7587};
	mov.b64	%rd10107, {%r7584, %r7585};
	mov.b64	%rd10106, {%r7582, %r7583};
	shl.b32 	%r2123, %r102, 3;
	mov.u32 	%r7629, 0;
	mov.b64	%rd10105, {%r2123, %r7629};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2125,%dummy}, %rd37;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2126}, %rd37;
	}
	shf.r.wrap.b32 	%r2127, %r2126, %r2125, 18;
	shf.r.wrap.b32 	%r2128, %r2125, %r2126, 18;
	mov.b64 	%rd2925, {%r2128, %r2127};
	shf.r.wrap.b32 	%r2129, %r2126, %r2125, 14;
	shf.r.wrap.b32 	%r2130, %r2125, %r2126, 14;
	mov.b64 	%rd2926, {%r2130, %r2129};
	xor.b64  	%rd2927, %rd2925, %rd2926;
	shf.l.wrap.b32 	%r2131, %r2125, %r2126, 23;
	shf.l.wrap.b32 	%r2132, %r2126, %r2125, 23;
	mov.b64 	%rd2928, {%r2132, %r2131};
	xor.b64  	%rd2929, %rd2927, %rd2928;
	xor.b64  	%rd2930, %rd36, %rd35;
	and.b64  	%rd2931, %rd37, %rd2930;
	xor.b64  	%rd2932, %rd2931, %rd35;
	add.s64 	%rd2933, %rd10121, %rd34;
	add.s64 	%rd2934, %rd2933, %rd2932;
	add.s64 	%rd2935, %rd2934, %rd10144;
	add.s64 	%rd2936, %rd2935, %rd2929;
	add.s64 	%rd2937, %rd2936, %rd38;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2133}, %rd41;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2134,%dummy}, %rd41;
	}
	shf.l.wrap.b32 	%r2135, %r2134, %r2133, 30;
	shf.l.wrap.b32 	%r2136, %r2133, %r2134, 30;
	mov.b64 	%rd2938, {%r2136, %r2135};
	shf.r.wrap.b32 	%r2137, %r2133, %r2134, 28;
	shf.r.wrap.b32 	%r2138, %r2134, %r2133, 28;
	mov.b64 	%rd2939, {%r2138, %r2137};
	xor.b64  	%rd2940, %rd2938, %rd2939;
	shf.l.wrap.b32 	%r2139, %r2134, %r2133, 25;
	shf.l.wrap.b32 	%r2140, %r2133, %r2134, 25;
	mov.b64 	%rd2941, {%r2140, %r2139};
	xor.b64  	%rd2942, %rd2940, %rd2941;
	xor.b64  	%rd2943, %rd41, %rd40;
	and.b64  	%rd2944, %rd2943, %rd39;
	and.b64  	%rd2945, %rd41, %rd40;
	or.b64  	%rd2946, %rd2944, %rd2945;
	add.s64 	%rd2947, %rd2936, %rd2946;
	add.s64 	%rd2948, %rd2947, %rd2942;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2141,%dummy}, %rd2937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2142}, %rd2937;
	}
	shf.r.wrap.b32 	%r2143, %r2142, %r2141, 14;
	shf.r.wrap.b32 	%r2144, %r2141, %r2142, 14;
	mov.b64 	%rd2949, {%r2144, %r2143};
	shf.r.wrap.b32 	%r2145, %r2142, %r2141, 18;
	shf.r.wrap.b32 	%r2146, %r2141, %r2142, 18;
	mov.b64 	%rd2950, {%r2146, %r2145};
	xor.b64  	%rd2951, %rd2950, %rd2949;
	shf.l.wrap.b32 	%r2147, %r2141, %r2142, 23;
	shf.l.wrap.b32 	%r2148, %r2142, %r2141, 23;
	mov.b64 	%rd2952, {%r2148, %r2147};
	xor.b64  	%rd2953, %rd2951, %rd2952;
	xor.b64  	%rd2954, %rd37, %rd36;
	and.b64  	%rd2955, %rd2937, %rd2954;
	xor.b64  	%rd2956, %rd2955, %rd36;
	add.s64 	%rd2957, %rd35, %rd10122;
	add.s64 	%rd2958, %rd2957, %rd10143;
	add.s64 	%rd2959, %rd2958, %rd2956;
	add.s64 	%rd2960, %rd2959, %rd2953;
	add.s64 	%rd2961, %rd2960, %rd39;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2149,%dummy}, %rd2948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2150}, %rd2948;
	}
	shf.r.wrap.b32 	%r2151, %r2150, %r2149, 28;
	shf.r.wrap.b32 	%r2152, %r2149, %r2150, 28;
	mov.b64 	%rd2962, {%r2152, %r2151};
	shf.l.wrap.b32 	%r2153, %r2149, %r2150, 30;
	shf.l.wrap.b32 	%r2154, %r2150, %r2149, 30;
	mov.b64 	%rd2963, {%r2154, %r2153};
	xor.b64  	%rd2964, %rd2963, %rd2962;
	shf.l.wrap.b32 	%r2155, %r2149, %r2150, 25;
	shf.l.wrap.b32 	%r2156, %r2150, %r2149, 25;
	mov.b64 	%rd2965, {%r2156, %r2155};
	xor.b64  	%rd2966, %rd2964, %rd2965;
	and.b64  	%rd2967, %rd2948, %rd41;
	xor.b64  	%rd2968, %rd2948, %rd41;
	and.b64  	%rd2969, %rd2968, %rd40;
	or.b64  	%rd2970, %rd2969, %rd2967;
	add.s64 	%rd2971, %rd2960, %rd2970;
	add.s64 	%rd2972, %rd2971, %rd2966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2157,%dummy}, %rd2961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2158}, %rd2961;
	}
	shf.r.wrap.b32 	%r2159, %r2158, %r2157, 14;
	shf.r.wrap.b32 	%r2160, %r2157, %r2158, 14;
	mov.b64 	%rd2973, {%r2160, %r2159};
	shf.r.wrap.b32 	%r2161, %r2158, %r2157, 18;
	shf.r.wrap.b32 	%r2162, %r2157, %r2158, 18;
	mov.b64 	%rd2974, {%r2162, %r2161};
	xor.b64  	%rd2975, %rd2974, %rd2973;
	shf.l.wrap.b32 	%r2163, %r2157, %r2158, 23;
	shf.l.wrap.b32 	%r2164, %r2158, %r2157, 23;
	mov.b64 	%rd2976, {%r2164, %r2163};
	xor.b64  	%rd2977, %rd2975, %rd2976;
	xor.b64  	%rd2978, %rd2937, %rd37;
	and.b64  	%rd2979, %rd2961, %rd2978;
	xor.b64  	%rd2980, %rd2979, %rd37;
	add.s64 	%rd2981, %rd36, %rd10123;
	add.s64 	%rd2982, %rd2981, %rd10142;
	add.s64 	%rd2983, %rd2982, %rd2980;
	add.s64 	%rd2984, %rd2983, %rd2977;
	add.s64 	%rd2985, %rd2984, %rd40;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2165,%dummy}, %rd2972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2166}, %rd2972;
	}
	shf.r.wrap.b32 	%r2167, %r2166, %r2165, 28;
	shf.r.wrap.b32 	%r2168, %r2165, %r2166, 28;
	mov.b64 	%rd2986, {%r2168, %r2167};
	shf.l.wrap.b32 	%r2169, %r2165, %r2166, 30;
	shf.l.wrap.b32 	%r2170, %r2166, %r2165, 30;
	mov.b64 	%rd2987, {%r2170, %r2169};
	xor.b64  	%rd2988, %rd2987, %rd2986;
	shf.l.wrap.b32 	%r2171, %r2165, %r2166, 25;
	shf.l.wrap.b32 	%r2172, %r2166, %r2165, 25;
	mov.b64 	%rd2989, {%r2172, %r2171};
	xor.b64  	%rd2990, %rd2988, %rd2989;
	and.b64  	%rd2991, %rd2972, %rd2948;
	xor.b64  	%rd2992, %rd2972, %rd2948;
	and.b64  	%rd2993, %rd2992, %rd41;
	or.b64  	%rd2994, %rd2993, %rd2991;
	add.s64 	%rd2995, %rd2984, %rd2994;
	add.s64 	%rd2996, %rd2995, %rd2990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2173,%dummy}, %rd2985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2174}, %rd2985;
	}
	shf.r.wrap.b32 	%r2175, %r2174, %r2173, 14;
	shf.r.wrap.b32 	%r2176, %r2173, %r2174, 14;
	mov.b64 	%rd2997, {%r2176, %r2175};
	shf.r.wrap.b32 	%r2177, %r2174, %r2173, 18;
	shf.r.wrap.b32 	%r2178, %r2173, %r2174, 18;
	mov.b64 	%rd2998, {%r2178, %r2177};
	xor.b64  	%rd2999, %rd2998, %rd2997;
	shf.l.wrap.b32 	%r2179, %r2173, %r2174, 23;
	shf.l.wrap.b32 	%r2180, %r2174, %r2173, 23;
	mov.b64 	%rd3000, {%r2180, %r2179};
	xor.b64  	%rd3001, %rd2999, %rd3000;
	xor.b64  	%rd3002, %rd2961, %rd2937;
	and.b64  	%rd3003, %rd2985, %rd3002;
	xor.b64  	%rd3004, %rd3003, %rd2937;
	add.s64 	%rd3005, %rd37, %rd10124;
	add.s64 	%rd3006, %rd3005, %rd10141;
	add.s64 	%rd3007, %rd3006, %rd3004;
	add.s64 	%rd3008, %rd3007, %rd3001;
	add.s64 	%rd3009, %rd3008, %rd41;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2181,%dummy}, %rd2996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2182}, %rd2996;
	}
	shf.r.wrap.b32 	%r2183, %r2182, %r2181, 28;
	shf.r.wrap.b32 	%r2184, %r2181, %r2182, 28;
	mov.b64 	%rd3010, {%r2184, %r2183};
	shf.l.wrap.b32 	%r2185, %r2181, %r2182, 30;
	shf.l.wrap.b32 	%r2186, %r2182, %r2181, 30;
	mov.b64 	%rd3011, {%r2186, %r2185};
	xor.b64  	%rd3012, %rd3011, %rd3010;
	shf.l.wrap.b32 	%r2187, %r2181, %r2182, 25;
	shf.l.wrap.b32 	%r2188, %r2182, %r2181, 25;
	mov.b64 	%rd3013, {%r2188, %r2187};
	xor.b64  	%rd3014, %rd3012, %rd3013;
	and.b64  	%rd3015, %rd2996, %rd2972;
	xor.b64  	%rd3016, %rd2996, %rd2972;
	and.b64  	%rd3017, %rd3016, %rd2948;
	or.b64  	%rd3018, %rd3017, %rd3015;
	add.s64 	%rd3019, %rd3008, %rd3018;
	add.s64 	%rd3020, %rd3019, %rd3014;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2189,%dummy}, %rd3009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2190}, %rd3009;
	}
	shf.r.wrap.b32 	%r2191, %r2190, %r2189, 14;
	shf.r.wrap.b32 	%r2192, %r2189, %r2190, 14;
	mov.b64 	%rd3021, {%r2192, %r2191};
	shf.r.wrap.b32 	%r2193, %r2190, %r2189, 18;
	shf.r.wrap.b32 	%r2194, %r2189, %r2190, 18;
	mov.b64 	%rd3022, {%r2194, %r2193};
	xor.b64  	%rd3023, %rd3022, %rd3021;
	shf.l.wrap.b32 	%r2195, %r2189, %r2190, 23;
	shf.l.wrap.b32 	%r2196, %r2190, %r2189, 23;
	mov.b64 	%rd3024, {%r2196, %r2195};
	xor.b64  	%rd3025, %rd3023, %rd3024;
	xor.b64  	%rd3026, %rd2985, %rd2961;
	and.b64  	%rd3027, %rd3009, %rd3026;
	xor.b64  	%rd3028, %rd3027, %rd2961;
	add.s64 	%rd3029, %rd2937, %rd10125;
	add.s64 	%rd3030, %rd3029, %rd10140;
	add.s64 	%rd3031, %rd3030, %rd3028;
	add.s64 	%rd3032, %rd3031, %rd3025;
	add.s64 	%rd3033, %rd3032, %rd2948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2197,%dummy}, %rd3020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2198}, %rd3020;
	}
	shf.r.wrap.b32 	%r2199, %r2198, %r2197, 28;
	shf.r.wrap.b32 	%r2200, %r2197, %r2198, 28;
	mov.b64 	%rd3034, {%r2200, %r2199};
	shf.l.wrap.b32 	%r2201, %r2197, %r2198, 30;
	shf.l.wrap.b32 	%r2202, %r2198, %r2197, 30;
	mov.b64 	%rd3035, {%r2202, %r2201};
	xor.b64  	%rd3036, %rd3035, %rd3034;
	shf.l.wrap.b32 	%r2203, %r2197, %r2198, 25;
	shf.l.wrap.b32 	%r2204, %r2198, %r2197, 25;
	mov.b64 	%rd3037, {%r2204, %r2203};
	xor.b64  	%rd3038, %rd3036, %rd3037;
	and.b64  	%rd3039, %rd3020, %rd2996;
	xor.b64  	%rd3040, %rd3020, %rd2996;
	and.b64  	%rd3041, %rd3040, %rd2972;
	or.b64  	%rd3042, %rd3041, %rd3039;
	add.s64 	%rd3043, %rd3032, %rd3042;
	add.s64 	%rd3044, %rd3043, %rd3038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2205,%dummy}, %rd3033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2206}, %rd3033;
	}
	shf.r.wrap.b32 	%r2207, %r2206, %r2205, 14;
	shf.r.wrap.b32 	%r2208, %r2205, %r2206, 14;
	mov.b64 	%rd3045, {%r2208, %r2207};
	shf.r.wrap.b32 	%r2209, %r2206, %r2205, 18;
	shf.r.wrap.b32 	%r2210, %r2205, %r2206, 18;
	mov.b64 	%rd3046, {%r2210, %r2209};
	xor.b64  	%rd3047, %rd3046, %rd3045;
	shf.l.wrap.b32 	%r2211, %r2205, %r2206, 23;
	shf.l.wrap.b32 	%r2212, %r2206, %r2205, 23;
	mov.b64 	%rd3048, {%r2212, %r2211};
	xor.b64  	%rd3049, %rd3047, %rd3048;
	xor.b64  	%rd3050, %rd3009, %rd2985;
	and.b64  	%rd3051, %rd3033, %rd3050;
	xor.b64  	%rd3052, %rd3051, %rd2985;
	add.s64 	%rd3053, %rd2961, %rd10126;
	add.s64 	%rd3054, %rd3053, %rd10139;
	add.s64 	%rd3055, %rd3054, %rd3052;
	add.s64 	%rd3056, %rd3055, %rd3049;
	add.s64 	%rd3057, %rd3056, %rd2972;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2213,%dummy}, %rd3044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2214}, %rd3044;
	}
	shf.r.wrap.b32 	%r2215, %r2214, %r2213, 28;
	shf.r.wrap.b32 	%r2216, %r2213, %r2214, 28;
	mov.b64 	%rd3058, {%r2216, %r2215};
	shf.l.wrap.b32 	%r2217, %r2213, %r2214, 30;
	shf.l.wrap.b32 	%r2218, %r2214, %r2213, 30;
	mov.b64 	%rd3059, {%r2218, %r2217};
	xor.b64  	%rd3060, %rd3059, %rd3058;
	shf.l.wrap.b32 	%r2219, %r2213, %r2214, 25;
	shf.l.wrap.b32 	%r2220, %r2214, %r2213, 25;
	mov.b64 	%rd3061, {%r2220, %r2219};
	xor.b64  	%rd3062, %rd3060, %rd3061;
	and.b64  	%rd3063, %rd3044, %rd3020;
	xor.b64  	%rd3064, %rd3044, %rd3020;
	and.b64  	%rd3065, %rd3064, %rd2996;
	or.b64  	%rd3066, %rd3065, %rd3063;
	add.s64 	%rd3067, %rd3056, %rd3066;
	add.s64 	%rd3068, %rd3067, %rd3062;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2221,%dummy}, %rd3057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2222}, %rd3057;
	}
	shf.r.wrap.b32 	%r2223, %r2222, %r2221, 14;
	shf.r.wrap.b32 	%r2224, %r2221, %r2222, 14;
	mov.b64 	%rd3069, {%r2224, %r2223};
	shf.r.wrap.b32 	%r2225, %r2222, %r2221, 18;
	shf.r.wrap.b32 	%r2226, %r2221, %r2222, 18;
	mov.b64 	%rd3070, {%r2226, %r2225};
	xor.b64  	%rd3071, %rd3070, %rd3069;
	shf.l.wrap.b32 	%r2227, %r2221, %r2222, 23;
	shf.l.wrap.b32 	%r2228, %r2222, %r2221, 23;
	mov.b64 	%rd3072, {%r2228, %r2227};
	xor.b64  	%rd3073, %rd3071, %rd3072;
	xor.b64  	%rd3074, %rd3033, %rd3009;
	and.b64  	%rd3075, %rd3057, %rd3074;
	xor.b64  	%rd3076, %rd3075, %rd3009;
	add.s64 	%rd3077, %rd2985, %rd10127;
	add.s64 	%rd3078, %rd3077, %rd10138;
	add.s64 	%rd3079, %rd3078, %rd3076;
	add.s64 	%rd3080, %rd3079, %rd3073;
	add.s64 	%rd3081, %rd3080, %rd2996;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2229,%dummy}, %rd3068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2230}, %rd3068;
	}
	shf.r.wrap.b32 	%r2231, %r2230, %r2229, 28;
	shf.r.wrap.b32 	%r2232, %r2229, %r2230, 28;
	mov.b64 	%rd3082, {%r2232, %r2231};
	shf.l.wrap.b32 	%r2233, %r2229, %r2230, 30;
	shf.l.wrap.b32 	%r2234, %r2230, %r2229, 30;
	mov.b64 	%rd3083, {%r2234, %r2233};
	xor.b64  	%rd3084, %rd3083, %rd3082;
	shf.l.wrap.b32 	%r2235, %r2229, %r2230, 25;
	shf.l.wrap.b32 	%r2236, %r2230, %r2229, 25;
	mov.b64 	%rd3085, {%r2236, %r2235};
	xor.b64  	%rd3086, %rd3084, %rd3085;
	and.b64  	%rd3087, %rd3068, %rd3044;
	xor.b64  	%rd3088, %rd3068, %rd3044;
	and.b64  	%rd3089, %rd3088, %rd3020;
	or.b64  	%rd3090, %rd3089, %rd3087;
	add.s64 	%rd3091, %rd3080, %rd3090;
	add.s64 	%rd3092, %rd3091, %rd3086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2237,%dummy}, %rd3081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2238}, %rd3081;
	}
	shf.r.wrap.b32 	%r2239, %r2238, %r2237, 14;
	shf.r.wrap.b32 	%r2240, %r2237, %r2238, 14;
	mov.b64 	%rd3093, {%r2240, %r2239};
	shf.r.wrap.b32 	%r2241, %r2238, %r2237, 18;
	shf.r.wrap.b32 	%r2242, %r2237, %r2238, 18;
	mov.b64 	%rd3094, {%r2242, %r2241};
	xor.b64  	%rd3095, %rd3094, %rd3093;
	shf.l.wrap.b32 	%r2243, %r2237, %r2238, 23;
	shf.l.wrap.b32 	%r2244, %r2238, %r2237, 23;
	mov.b64 	%rd3096, {%r2244, %r2243};
	xor.b64  	%rd3097, %rd3095, %rd3096;
	xor.b64  	%rd3098, %rd3057, %rd3033;
	and.b64  	%rd3099, %rd3081, %rd3098;
	xor.b64  	%rd3100, %rd3099, %rd3033;
	add.s64 	%rd3101, %rd3009, %rd10128;
	add.s64 	%rd3102, %rd3101, %rd9982;
	add.s64 	%rd3103, %rd3102, %rd3100;
	add.s64 	%rd3104, %rd3103, %rd3097;
	add.s64 	%rd3105, %rd3104, %rd3020;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2245,%dummy}, %rd3092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2246}, %rd3092;
	}
	shf.r.wrap.b32 	%r2247, %r2246, %r2245, 28;
	shf.r.wrap.b32 	%r2248, %r2245, %r2246, 28;
	mov.b64 	%rd3106, {%r2248, %r2247};
	shf.l.wrap.b32 	%r2249, %r2245, %r2246, 30;
	shf.l.wrap.b32 	%r2250, %r2246, %r2245, 30;
	mov.b64 	%rd3107, {%r2250, %r2249};
	xor.b64  	%rd3108, %rd3107, %rd3106;
	shf.l.wrap.b32 	%r2251, %r2245, %r2246, 25;
	shf.l.wrap.b32 	%r2252, %r2246, %r2245, 25;
	mov.b64 	%rd3109, {%r2252, %r2251};
	xor.b64  	%rd3110, %rd3108, %rd3109;
	and.b64  	%rd3111, %rd3092, %rd3068;
	xor.b64  	%rd3112, %rd3092, %rd3068;
	and.b64  	%rd3113, %rd3112, %rd3044;
	or.b64  	%rd3114, %rd3113, %rd3111;
	add.s64 	%rd3115, %rd3104, %rd3114;
	add.s64 	%rd3116, %rd3115, %rd3110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2253,%dummy}, %rd3105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2254}, %rd3105;
	}
	shf.r.wrap.b32 	%r2255, %r2254, %r2253, 14;
	shf.r.wrap.b32 	%r2256, %r2253, %r2254, 14;
	mov.b64 	%rd3117, {%r2256, %r2255};
	shf.r.wrap.b32 	%r2257, %r2254, %r2253, 18;
	shf.r.wrap.b32 	%r2258, %r2253, %r2254, 18;
	mov.b64 	%rd3118, {%r2258, %r2257};
	xor.b64  	%rd3119, %rd3118, %rd3117;
	shf.l.wrap.b32 	%r2259, %r2253, %r2254, 23;
	shf.l.wrap.b32 	%r2260, %r2254, %r2253, 23;
	mov.b64 	%rd3120, {%r2260, %r2259};
	xor.b64  	%rd3121, %rd3119, %rd3120;
	xor.b64  	%rd3122, %rd3081, %rd3057;
	and.b64  	%rd3123, %rd3105, %rd3122;
	xor.b64  	%rd3124, %rd3123, %rd3057;
	add.s64 	%rd3125, %rd3033, %rd10112;
	add.s64 	%rd3126, %rd3125, %rd9983;
	add.s64 	%rd3127, %rd3126, %rd3124;
	add.s64 	%rd3128, %rd3127, %rd3121;
	add.s64 	%rd3129, %rd3128, %rd3044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2261,%dummy}, %rd3116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2262}, %rd3116;
	}
	shf.r.wrap.b32 	%r2263, %r2262, %r2261, 28;
	shf.r.wrap.b32 	%r2264, %r2261, %r2262, 28;
	mov.b64 	%rd3130, {%r2264, %r2263};
	shf.l.wrap.b32 	%r2265, %r2261, %r2262, 30;
	shf.l.wrap.b32 	%r2266, %r2262, %r2261, 30;
	mov.b64 	%rd3131, {%r2266, %r2265};
	xor.b64  	%rd3132, %rd3131, %rd3130;
	shf.l.wrap.b32 	%r2267, %r2261, %r2262, 25;
	shf.l.wrap.b32 	%r2268, %r2262, %r2261, 25;
	mov.b64 	%rd3133, {%r2268, %r2267};
	xor.b64  	%rd3134, %rd3132, %rd3133;
	and.b64  	%rd3135, %rd3116, %rd3092;
	xor.b64  	%rd3136, %rd3116, %rd3092;
	and.b64  	%rd3137, %rd3136, %rd3068;
	or.b64  	%rd3138, %rd3137, %rd3135;
	add.s64 	%rd3139, %rd3128, %rd3138;
	add.s64 	%rd3140, %rd3139, %rd3134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2269,%dummy}, %rd3129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2270}, %rd3129;
	}
	shf.r.wrap.b32 	%r2271, %r2270, %r2269, 14;
	shf.r.wrap.b32 	%r2272, %r2269, %r2270, 14;
	mov.b64 	%rd3141, {%r2272, %r2271};
	shf.r.wrap.b32 	%r2273, %r2270, %r2269, 18;
	shf.r.wrap.b32 	%r2274, %r2269, %r2270, 18;
	mov.b64 	%rd3142, {%r2274, %r2273};
	xor.b64  	%rd3143, %rd3142, %rd3141;
	shf.l.wrap.b32 	%r2275, %r2269, %r2270, 23;
	shf.l.wrap.b32 	%r2276, %r2270, %r2269, 23;
	mov.b64 	%rd3144, {%r2276, %r2275};
	xor.b64  	%rd3145, %rd3143, %rd3144;
	xor.b64  	%rd3146, %rd3105, %rd3081;
	and.b64  	%rd3147, %rd3129, %rd3146;
	xor.b64  	%rd3148, %rd3147, %rd3081;
	add.s64 	%rd3149, %rd3057, %rd10111;
	add.s64 	%rd3150, %rd3149, %rd9984;
	add.s64 	%rd3151, %rd3150, %rd3148;
	add.s64 	%rd3152, %rd3151, %rd3145;
	add.s64 	%rd3153, %rd3152, %rd3068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2277,%dummy}, %rd3140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2278}, %rd3140;
	}
	shf.r.wrap.b32 	%r2279, %r2278, %r2277, 28;
	shf.r.wrap.b32 	%r2280, %r2277, %r2278, 28;
	mov.b64 	%rd3154, {%r2280, %r2279};
	shf.l.wrap.b32 	%r2281, %r2277, %r2278, 30;
	shf.l.wrap.b32 	%r2282, %r2278, %r2277, 30;
	mov.b64 	%rd3155, {%r2282, %r2281};
	xor.b64  	%rd3156, %rd3155, %rd3154;
	shf.l.wrap.b32 	%r2283, %r2277, %r2278, 25;
	shf.l.wrap.b32 	%r2284, %r2278, %r2277, 25;
	mov.b64 	%rd3157, {%r2284, %r2283};
	xor.b64  	%rd3158, %rd3156, %rd3157;
	and.b64  	%rd3159, %rd3140, %rd3116;
	xor.b64  	%rd3160, %rd3140, %rd3116;
	and.b64  	%rd3161, %rd3160, %rd3092;
	or.b64  	%rd3162, %rd3161, %rd3159;
	add.s64 	%rd3163, %rd3152, %rd3162;
	add.s64 	%rd3164, %rd3163, %rd3158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2285,%dummy}, %rd3153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2286}, %rd3153;
	}
	shf.r.wrap.b32 	%r2287, %r2286, %r2285, 14;
	shf.r.wrap.b32 	%r2288, %r2285, %r2286, 14;
	mov.b64 	%rd3165, {%r2288, %r2287};
	shf.r.wrap.b32 	%r2289, %r2286, %r2285, 18;
	shf.r.wrap.b32 	%r2290, %r2285, %r2286, 18;
	mov.b64 	%rd3166, {%r2290, %r2289};
	xor.b64  	%rd3167, %rd3166, %rd3165;
	shf.l.wrap.b32 	%r2291, %r2285, %r2286, 23;
	shf.l.wrap.b32 	%r2292, %r2286, %r2285, 23;
	mov.b64 	%rd3168, {%r2292, %r2291};
	xor.b64  	%rd3169, %rd3167, %rd3168;
	xor.b64  	%rd3170, %rd3129, %rd3105;
	and.b64  	%rd3171, %rd3153, %rd3170;
	xor.b64  	%rd3172, %rd3171, %rd3105;
	add.s64 	%rd3173, %rd3081, %rd10110;
	add.s64 	%rd3174, %rd3173, %rd9985;
	add.s64 	%rd3175, %rd3174, %rd3172;
	add.s64 	%rd3176, %rd3175, %rd3169;
	add.s64 	%rd3177, %rd3176, %rd3092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2293,%dummy}, %rd3164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2294}, %rd3164;
	}
	shf.r.wrap.b32 	%r2295, %r2294, %r2293, 28;
	shf.r.wrap.b32 	%r2296, %r2293, %r2294, 28;
	mov.b64 	%rd3178, {%r2296, %r2295};
	shf.l.wrap.b32 	%r2297, %r2293, %r2294, 30;
	shf.l.wrap.b32 	%r2298, %r2294, %r2293, 30;
	mov.b64 	%rd3179, {%r2298, %r2297};
	xor.b64  	%rd3180, %rd3179, %rd3178;
	shf.l.wrap.b32 	%r2299, %r2293, %r2294, 25;
	shf.l.wrap.b32 	%r2300, %r2294, %r2293, 25;
	mov.b64 	%rd3181, {%r2300, %r2299};
	xor.b64  	%rd3182, %rd3180, %rd3181;
	and.b64  	%rd3183, %rd3164, %rd3140;
	xor.b64  	%rd3184, %rd3164, %rd3140;
	and.b64  	%rd3185, %rd3184, %rd3116;
	or.b64  	%rd3186, %rd3185, %rd3183;
	add.s64 	%rd3187, %rd3176, %rd3186;
	add.s64 	%rd3188, %rd3187, %rd3182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2301,%dummy}, %rd3177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2302}, %rd3177;
	}
	shf.r.wrap.b32 	%r2303, %r2302, %r2301, 14;
	shf.r.wrap.b32 	%r2304, %r2301, %r2302, 14;
	mov.b64 	%rd3189, {%r2304, %r2303};
	shf.r.wrap.b32 	%r2305, %r2302, %r2301, 18;
	shf.r.wrap.b32 	%r2306, %r2301, %r2302, 18;
	mov.b64 	%rd3190, {%r2306, %r2305};
	xor.b64  	%rd3191, %rd3190, %rd3189;
	shf.l.wrap.b32 	%r2307, %r2301, %r2302, 23;
	shf.l.wrap.b32 	%r2308, %r2302, %r2301, 23;
	mov.b64 	%rd3192, {%r2308, %r2307};
	xor.b64  	%rd3193, %rd3191, %rd3192;
	xor.b64  	%rd3194, %rd3153, %rd3129;
	and.b64  	%rd3195, %rd3177, %rd3194;
	xor.b64  	%rd3196, %rd3195, %rd3129;
	add.s64 	%rd3197, %rd3105, %rd10109;
	add.s64 	%rd3198, %rd3197, %rd9986;
	add.s64 	%rd3199, %rd3198, %rd3196;
	add.s64 	%rd3200, %rd3199, %rd3193;
	add.s64 	%rd3201, %rd3200, %rd3116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2309,%dummy}, %rd3188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2310}, %rd3188;
	}
	shf.r.wrap.b32 	%r2311, %r2310, %r2309, 28;
	shf.r.wrap.b32 	%r2312, %r2309, %r2310, 28;
	mov.b64 	%rd3202, {%r2312, %r2311};
	shf.l.wrap.b32 	%r2313, %r2309, %r2310, 30;
	shf.l.wrap.b32 	%r2314, %r2310, %r2309, 30;
	mov.b64 	%rd3203, {%r2314, %r2313};
	xor.b64  	%rd3204, %rd3203, %rd3202;
	shf.l.wrap.b32 	%r2315, %r2309, %r2310, 25;
	shf.l.wrap.b32 	%r2316, %r2310, %r2309, 25;
	mov.b64 	%rd3205, {%r2316, %r2315};
	xor.b64  	%rd3206, %rd3204, %rd3205;
	and.b64  	%rd3207, %rd3188, %rd3164;
	xor.b64  	%rd3208, %rd3188, %rd3164;
	and.b64  	%rd3209, %rd3208, %rd3140;
	or.b64  	%rd3210, %rd3209, %rd3207;
	add.s64 	%rd3211, %rd3200, %rd3210;
	add.s64 	%rd3212, %rd3211, %rd3206;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2317,%dummy}, %rd3201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2318}, %rd3201;
	}
	shf.r.wrap.b32 	%r2319, %r2318, %r2317, 14;
	shf.r.wrap.b32 	%r2320, %r2317, %r2318, 14;
	mov.b64 	%rd3213, {%r2320, %r2319};
	shf.r.wrap.b32 	%r2321, %r2318, %r2317, 18;
	shf.r.wrap.b32 	%r2322, %r2317, %r2318, 18;
	mov.b64 	%rd3214, {%r2322, %r2321};
	xor.b64  	%rd3215, %rd3214, %rd3213;
	shf.l.wrap.b32 	%r2323, %r2317, %r2318, 23;
	shf.l.wrap.b32 	%r2324, %r2318, %r2317, 23;
	mov.b64 	%rd3216, {%r2324, %r2323};
	xor.b64  	%rd3217, %rd3215, %rd3216;
	xor.b64  	%rd3218, %rd3177, %rd3153;
	and.b64  	%rd3219, %rd3201, %rd3218;
	xor.b64  	%rd3220, %rd3219, %rd3153;
	add.s64 	%rd3221, %rd3129, %rd10108;
	add.s64 	%rd3222, %rd3221, %rd9987;
	add.s64 	%rd3223, %rd3222, %rd3220;
	add.s64 	%rd3224, %rd3223, %rd3217;
	add.s64 	%rd10120, %rd3224, %rd3140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2325,%dummy}, %rd3212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2326}, %rd3212;
	}
	shf.r.wrap.b32 	%r2327, %r2326, %r2325, 28;
	shf.r.wrap.b32 	%r2328, %r2325, %r2326, 28;
	mov.b64 	%rd3225, {%r2328, %r2327};
	shf.l.wrap.b32 	%r2329, %r2325, %r2326, 30;
	shf.l.wrap.b32 	%r2330, %r2326, %r2325, 30;
	mov.b64 	%rd3226, {%r2330, %r2329};
	xor.b64  	%rd3227, %rd3226, %rd3225;
	shf.l.wrap.b32 	%r2331, %r2325, %r2326, 25;
	shf.l.wrap.b32 	%r2332, %r2326, %r2325, 25;
	mov.b64 	%rd3228, {%r2332, %r2331};
	xor.b64  	%rd3229, %rd3227, %rd3228;
	and.b64  	%rd3230, %rd3212, %rd3188;
	xor.b64  	%rd3231, %rd3212, %rd3188;
	and.b64  	%rd3232, %rd3231, %rd3164;
	or.b64  	%rd3233, %rd3232, %rd3230;
	add.s64 	%rd3234, %rd3224, %rd3233;
	add.s64 	%rd10116, %rd3234, %rd3229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2333,%dummy}, %rd10120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2334}, %rd10120;
	}
	shf.r.wrap.b32 	%r2335, %r2334, %r2333, 14;
	shf.r.wrap.b32 	%r2336, %r2333, %r2334, 14;
	mov.b64 	%rd3235, {%r2336, %r2335};
	shf.r.wrap.b32 	%r2337, %r2334, %r2333, 18;
	shf.r.wrap.b32 	%r2338, %r2333, %r2334, 18;
	mov.b64 	%rd3236, {%r2338, %r2337};
	xor.b64  	%rd3237, %rd3236, %rd3235;
	shf.l.wrap.b32 	%r2339, %r2333, %r2334, 23;
	shf.l.wrap.b32 	%r2340, %r2334, %r2333, 23;
	mov.b64 	%rd3238, {%r2340, %r2339};
	xor.b64  	%rd3239, %rd3237, %rd3238;
	xor.b64  	%rd3240, %rd3201, %rd3177;
	and.b64  	%rd3241, %rd10120, %rd3240;
	xor.b64  	%rd3242, %rd3241, %rd3177;
	add.s64 	%rd3243, %rd3153, %rd10107;
	add.s64 	%rd3244, %rd3243, %rd10131;
	add.s64 	%rd3245, %rd3244, %rd3242;
	add.s64 	%rd3246, %rd3245, %rd3239;
	add.s64 	%rd10119, %rd3246, %rd3164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2341,%dummy}, %rd10116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2342}, %rd10116;
	}
	shf.r.wrap.b32 	%r2343, %r2342, %r2341, 28;
	shf.r.wrap.b32 	%r2344, %r2341, %r2342, 28;
	mov.b64 	%rd3247, {%r2344, %r2343};
	shf.l.wrap.b32 	%r2345, %r2341, %r2342, 30;
	shf.l.wrap.b32 	%r2346, %r2342, %r2341, 30;
	mov.b64 	%rd3248, {%r2346, %r2345};
	xor.b64  	%rd3249, %rd3248, %rd3247;
	shf.l.wrap.b32 	%r2347, %r2341, %r2342, 25;
	shf.l.wrap.b32 	%r2348, %r2342, %r2341, 25;
	mov.b64 	%rd3250, {%r2348, %r2347};
	xor.b64  	%rd3251, %rd3249, %rd3250;
	and.b64  	%rd3252, %rd10116, %rd3212;
	xor.b64  	%rd3253, %rd10116, %rd3212;
	and.b64  	%rd3254, %rd3253, %rd3188;
	or.b64  	%rd3255, %rd3254, %rd3252;
	add.s64 	%rd3256, %rd3246, %rd3255;
	add.s64 	%rd10115, %rd3256, %rd3251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2349,%dummy}, %rd10119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2350}, %rd10119;
	}
	shf.r.wrap.b32 	%r2351, %r2350, %r2349, 14;
	shf.r.wrap.b32 	%r2352, %r2349, %r2350, 14;
	mov.b64 	%rd3257, {%r2352, %r2351};
	shf.r.wrap.b32 	%r2353, %r2350, %r2349, 18;
	shf.r.wrap.b32 	%r2354, %r2349, %r2350, 18;
	mov.b64 	%rd3258, {%r2354, %r2353};
	xor.b64  	%rd3259, %rd3258, %rd3257;
	shf.l.wrap.b32 	%r2355, %r2349, %r2350, 23;
	shf.l.wrap.b32 	%r2356, %r2350, %r2349, 23;
	mov.b64 	%rd3260, {%r2356, %r2355};
	xor.b64  	%rd3261, %rd3259, %rd3260;
	xor.b64  	%rd3262, %rd10120, %rd3201;
	and.b64  	%rd3263, %rd10119, %rd3262;
	xor.b64  	%rd3264, %rd3263, %rd3201;
	add.s64 	%rd3265, %rd3177, %rd10106;
	add.s64 	%rd3266, %rd3265, %rd10130;
	add.s64 	%rd3267, %rd3266, %rd3264;
	add.s64 	%rd3268, %rd3267, %rd3261;
	add.s64 	%rd10118, %rd3268, %rd3188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2357,%dummy}, %rd10115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2358}, %rd10115;
	}
	shf.r.wrap.b32 	%r2359, %r2358, %r2357, 28;
	shf.r.wrap.b32 	%r2360, %r2357, %r2358, 28;
	mov.b64 	%rd3269, {%r2360, %r2359};
	shf.l.wrap.b32 	%r2361, %r2357, %r2358, 30;
	shf.l.wrap.b32 	%r2362, %r2358, %r2357, 30;
	mov.b64 	%rd3270, {%r2362, %r2361};
	xor.b64  	%rd3271, %rd3270, %rd3269;
	shf.l.wrap.b32 	%r2363, %r2357, %r2358, 25;
	shf.l.wrap.b32 	%r2364, %r2358, %r2357, 25;
	mov.b64 	%rd3272, {%r2364, %r2363};
	xor.b64  	%rd3273, %rd3271, %rd3272;
	and.b64  	%rd3274, %rd10115, %rd10116;
	xor.b64  	%rd3275, %rd10115, %rd10116;
	and.b64  	%rd3276, %rd3275, %rd3212;
	or.b64  	%rd3277, %rd3276, %rd3274;
	add.s64 	%rd3278, %rd3268, %rd3277;
	add.s64 	%rd10114, %rd3278, %rd3273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2365,%dummy}, %rd10118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2366}, %rd10118;
	}
	shf.r.wrap.b32 	%r2367, %r2366, %r2365, 14;
	shf.r.wrap.b32 	%r2368, %r2365, %r2366, 14;
	mov.b64 	%rd3279, {%r2368, %r2367};
	shf.r.wrap.b32 	%r2369, %r2366, %r2365, 18;
	shf.r.wrap.b32 	%r2370, %r2365, %r2366, 18;
	mov.b64 	%rd3280, {%r2370, %r2369};
	xor.b64  	%rd3281, %rd3280, %rd3279;
	shf.l.wrap.b32 	%r2371, %r2365, %r2366, 23;
	shf.l.wrap.b32 	%r2372, %r2366, %r2365, 23;
	mov.b64 	%rd3282, {%r2372, %r2371};
	xor.b64  	%rd3283, %rd3281, %rd3282;
	xor.b64  	%rd3284, %rd10119, %rd10120;
	and.b64  	%rd3285, %rd10118, %rd3284;
	xor.b64  	%rd3286, %rd3285, %rd10120;
	add.s64 	%rd3287, %rd3201, %rd10105;
	add.s64 	%rd3288, %rd3287, %rd10129;
	add.s64 	%rd3289, %rd3288, %rd3286;
	add.s64 	%rd3290, %rd3289, %rd3283;
	add.s64 	%rd10117, %rd3290, %rd3212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2373,%dummy}, %rd10114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2374}, %rd10114;
	}
	shf.r.wrap.b32 	%r2375, %r2374, %r2373, 28;
	shf.r.wrap.b32 	%r2376, %r2373, %r2374, 28;
	mov.b64 	%rd3291, {%r2376, %r2375};
	shf.l.wrap.b32 	%r2377, %r2373, %r2374, 30;
	shf.l.wrap.b32 	%r2378, %r2374, %r2373, 30;
	mov.b64 	%rd3292, {%r2378, %r2377};
	xor.b64  	%rd3293, %rd3292, %rd3291;
	shf.l.wrap.b32 	%r2379, %r2373, %r2374, 25;
	shf.l.wrap.b32 	%r2380, %r2374, %r2373, 25;
	mov.b64 	%rd3294, {%r2380, %r2379};
	xor.b64  	%rd3295, %rd3293, %rd3294;
	and.b64  	%rd3296, %rd10114, %rd10115;
	xor.b64  	%rd3297, %rd10114, %rd10115;
	and.b64  	%rd3298, %rd3297, %rd10116;
	or.b64  	%rd3299, %rd3298, %rd3296;
	add.s64 	%rd3300, %rd3290, %rd3299;
	add.s64 	%rd10113, %rd3300, %rd3295;
	mov.u32 	%r7612, 16;
	mov.u64 	%rd10104, k_sha512;

BB3_14:
	shr.u64 	%rd3301, %rd10106, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2381,%dummy}, %rd10106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2382}, %rd10106;
	}
	shf.r.wrap.b32 	%r2383, %r2382, %r2381, 19;
	shf.r.wrap.b32 	%r2384, %r2381, %r2382, 19;
	mov.b64 	%rd3302, {%r2384, %r2383};
	xor.b64  	%rd3303, %rd3302, %rd3301;
	shf.l.wrap.b32 	%r2385, %r2381, %r2382, 3;
	shf.l.wrap.b32 	%r2386, %r2382, %r2381, 3;
	mov.b64 	%rd3304, {%r2386, %r2385};
	xor.b64  	%rd3305, %rd3303, %rd3304;
	shr.u64 	%rd3306, %rd10122, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2387,%dummy}, %rd10122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2388}, %rd10122;
	}
	shf.r.wrap.b32 	%r2389, %r2388, %r2387, 1;
	shf.r.wrap.b32 	%r2390, %r2387, %r2388, 1;
	mov.b64 	%rd3307, {%r2390, %r2389};
	xor.b64  	%rd3308, %rd3307, %rd3306;
	shf.r.wrap.b32 	%r2391, %r2388, %r2387, 8;
	shf.r.wrap.b32 	%r2392, %r2387, %r2388, 8;
	mov.b64 	%rd3309, {%r2392, %r2391};
	xor.b64  	%rd3310, %rd3308, %rd3309;
	add.s64 	%rd3311, %rd10111, %rd10121;
	add.s64 	%rd3312, %rd3311, %rd3305;
	add.s64 	%rd10121, %rd3312, %rd3310;
	shr.u64 	%rd3313, %rd10105, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2393,%dummy}, %rd10105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2394}, %rd10105;
	}
	shf.r.wrap.b32 	%r2395, %r2394, %r2393, 19;
	shf.r.wrap.b32 	%r2396, %r2393, %r2394, 19;
	mov.b64 	%rd3314, {%r2396, %r2395};
	xor.b64  	%rd3315, %rd3314, %rd3313;
	shf.l.wrap.b32 	%r2397, %r2393, %r2394, 3;
	shf.l.wrap.b32 	%r2398, %r2394, %r2393, 3;
	mov.b64 	%rd3316, {%r2398, %r2397};
	xor.b64  	%rd3317, %rd3315, %rd3316;
	shr.u64 	%rd3318, %rd10123, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2399,%dummy}, %rd10123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2400}, %rd10123;
	}
	shf.r.wrap.b32 	%r2401, %r2400, %r2399, 1;
	shf.r.wrap.b32 	%r2402, %r2399, %r2400, 1;
	mov.b64 	%rd3319, {%r2402, %r2401};
	xor.b64  	%rd3320, %rd3319, %rd3318;
	shf.r.wrap.b32 	%r2403, %r2400, %r2399, 8;
	shf.r.wrap.b32 	%r2404, %r2399, %r2400, 8;
	mov.b64 	%rd3321, {%r2404, %r2403};
	xor.b64  	%rd3322, %rd3320, %rd3321;
	add.s64 	%rd3323, %rd10110, %rd10122;
	add.s64 	%rd3324, %rd3323, %rd3317;
	add.s64 	%rd10122, %rd3324, %rd3322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2405,%dummy}, %rd10121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2406}, %rd10121;
	}
	shf.r.wrap.b32 	%r2407, %r2406, %r2405, 19;
	shf.r.wrap.b32 	%r2408, %r2405, %r2406, 19;
	mov.b64 	%rd3325, {%r2408, %r2407};
	shf.l.wrap.b32 	%r2409, %r2405, %r2406, 3;
	shf.l.wrap.b32 	%r2410, %r2406, %r2405, 3;
	mov.b64 	%rd3326, {%r2410, %r2409};
	shr.u64 	%rd3327, %rd10121, 6;
	xor.b64  	%rd3328, %rd3325, %rd3327;
	xor.b64  	%rd3329, %rd3328, %rd3326;
	shr.u64 	%rd3330, %rd10124, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2411,%dummy}, %rd10124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2412}, %rd10124;
	}
	shf.r.wrap.b32 	%r2413, %r2412, %r2411, 1;
	shf.r.wrap.b32 	%r2414, %r2411, %r2412, 1;
	mov.b64 	%rd3331, {%r2414, %r2413};
	xor.b64  	%rd3332, %rd3331, %rd3330;
	shf.r.wrap.b32 	%r2415, %r2412, %r2411, 8;
	shf.r.wrap.b32 	%r2416, %r2411, %r2412, 8;
	mov.b64 	%rd3333, {%r2416, %r2415};
	xor.b64  	%rd3334, %rd3332, %rd3333;
	add.s64 	%rd3335, %rd10109, %rd10123;
	add.s64 	%rd3336, %rd3335, %rd3329;
	add.s64 	%rd10123, %rd3336, %rd3334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2417,%dummy}, %rd10122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2418}, %rd10122;
	}
	shf.r.wrap.b32 	%r2419, %r2418, %r2417, 19;
	shf.r.wrap.b32 	%r2420, %r2417, %r2418, 19;
	mov.b64 	%rd3337, {%r2420, %r2419};
	shf.l.wrap.b32 	%r2421, %r2417, %r2418, 3;
	shf.l.wrap.b32 	%r2422, %r2418, %r2417, 3;
	mov.b64 	%rd3338, {%r2422, %r2421};
	shr.u64 	%rd3339, %rd10122, 6;
	xor.b64  	%rd3340, %rd3337, %rd3339;
	xor.b64  	%rd3341, %rd3340, %rd3338;
	shr.u64 	%rd3342, %rd10125, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2423,%dummy}, %rd10125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2424}, %rd10125;
	}
	shf.r.wrap.b32 	%r2425, %r2424, %r2423, 1;
	shf.r.wrap.b32 	%r2426, %r2423, %r2424, 1;
	mov.b64 	%rd3343, {%r2426, %r2425};
	xor.b64  	%rd3344, %rd3343, %rd3342;
	shf.r.wrap.b32 	%r2427, %r2424, %r2423, 8;
	shf.r.wrap.b32 	%r2428, %r2423, %r2424, 8;
	mov.b64 	%rd3345, {%r2428, %r2427};
	xor.b64  	%rd3346, %rd3344, %rd3345;
	add.s64 	%rd3347, %rd10108, %rd10124;
	add.s64 	%rd3348, %rd3347, %rd3341;
	add.s64 	%rd10124, %rd3348, %rd3346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2429,%dummy}, %rd10123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2430}, %rd10123;
	}
	shf.r.wrap.b32 	%r2431, %r2430, %r2429, 19;
	shf.r.wrap.b32 	%r2432, %r2429, %r2430, 19;
	mov.b64 	%rd3349, {%r2432, %r2431};
	shf.l.wrap.b32 	%r2433, %r2429, %r2430, 3;
	shf.l.wrap.b32 	%r2434, %r2430, %r2429, 3;
	mov.b64 	%rd3350, {%r2434, %r2433};
	shr.u64 	%rd3351, %rd10123, 6;
	xor.b64  	%rd3352, %rd3349, %rd3351;
	xor.b64  	%rd3353, %rd3352, %rd3350;
	shr.u64 	%rd3354, %rd10126, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2435,%dummy}, %rd10126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2436}, %rd10126;
	}
	shf.r.wrap.b32 	%r2437, %r2436, %r2435, 1;
	shf.r.wrap.b32 	%r2438, %r2435, %r2436, 1;
	mov.b64 	%rd3355, {%r2438, %r2437};
	xor.b64  	%rd3356, %rd3355, %rd3354;
	shf.r.wrap.b32 	%r2439, %r2436, %r2435, 8;
	shf.r.wrap.b32 	%r2440, %r2435, %r2436, 8;
	mov.b64 	%rd3357, {%r2440, %r2439};
	xor.b64  	%rd3358, %rd3356, %rd3357;
	add.s64 	%rd3359, %rd10107, %rd10125;
	add.s64 	%rd3360, %rd3359, %rd3353;
	add.s64 	%rd10125, %rd3360, %rd3358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2441,%dummy}, %rd10124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2442}, %rd10124;
	}
	shf.r.wrap.b32 	%r2443, %r2442, %r2441, 19;
	shf.r.wrap.b32 	%r2444, %r2441, %r2442, 19;
	mov.b64 	%rd3361, {%r2444, %r2443};
	shf.l.wrap.b32 	%r2445, %r2441, %r2442, 3;
	shf.l.wrap.b32 	%r2446, %r2442, %r2441, 3;
	mov.b64 	%rd3362, {%r2446, %r2445};
	shr.u64 	%rd3363, %rd10124, 6;
	xor.b64  	%rd3364, %rd3361, %rd3363;
	xor.b64  	%rd3365, %rd3364, %rd3362;
	shr.u64 	%rd3366, %rd10127, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2447,%dummy}, %rd10127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2448}, %rd10127;
	}
	shf.r.wrap.b32 	%r2449, %r2448, %r2447, 1;
	shf.r.wrap.b32 	%r2450, %r2447, %r2448, 1;
	mov.b64 	%rd3367, {%r2450, %r2449};
	xor.b64  	%rd3368, %rd3367, %rd3366;
	shf.r.wrap.b32 	%r2451, %r2448, %r2447, 8;
	shf.r.wrap.b32 	%r2452, %r2447, %r2448, 8;
	mov.b64 	%rd3369, {%r2452, %r2451};
	xor.b64  	%rd3370, %rd3368, %rd3369;
	add.s64 	%rd3371, %rd10106, %rd10126;
	add.s64 	%rd3372, %rd3371, %rd3365;
	add.s64 	%rd10126, %rd3372, %rd3370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2453,%dummy}, %rd10125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2454}, %rd10125;
	}
	shf.r.wrap.b32 	%r2455, %r2454, %r2453, 19;
	shf.r.wrap.b32 	%r2456, %r2453, %r2454, 19;
	mov.b64 	%rd3373, {%r2456, %r2455};
	shf.l.wrap.b32 	%r2457, %r2453, %r2454, 3;
	shf.l.wrap.b32 	%r2458, %r2454, %r2453, 3;
	mov.b64 	%rd3374, {%r2458, %r2457};
	shr.u64 	%rd3375, %rd10125, 6;
	xor.b64  	%rd3376, %rd3373, %rd3375;
	xor.b64  	%rd3377, %rd3376, %rd3374;
	shr.u64 	%rd3378, %rd10128, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2459,%dummy}, %rd10128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2460}, %rd10128;
	}
	shf.r.wrap.b32 	%r2461, %r2460, %r2459, 1;
	shf.r.wrap.b32 	%r2462, %r2459, %r2460, 1;
	mov.b64 	%rd3379, {%r2462, %r2461};
	xor.b64  	%rd3380, %rd3379, %rd3378;
	shf.r.wrap.b32 	%r2463, %r2460, %r2459, 8;
	shf.r.wrap.b32 	%r2464, %r2459, %r2460, 8;
	mov.b64 	%rd3381, {%r2464, %r2463};
	xor.b64  	%rd3382, %rd3380, %rd3381;
	add.s64 	%rd3383, %rd10105, %rd10127;
	add.s64 	%rd3384, %rd3383, %rd3377;
	add.s64 	%rd10127, %rd3384, %rd3382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2465,%dummy}, %rd10126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2466}, %rd10126;
	}
	shf.r.wrap.b32 	%r2467, %r2466, %r2465, 19;
	shf.r.wrap.b32 	%r2468, %r2465, %r2466, 19;
	mov.b64 	%rd3385, {%r2468, %r2467};
	shf.l.wrap.b32 	%r2469, %r2465, %r2466, 3;
	shf.l.wrap.b32 	%r2470, %r2466, %r2465, 3;
	mov.b64 	%rd3386, {%r2470, %r2469};
	shr.u64 	%rd3387, %rd10126, 6;
	xor.b64  	%rd3388, %rd3385, %rd3387;
	xor.b64  	%rd3389, %rd3388, %rd3386;
	shr.u64 	%rd3390, %rd10112, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2471,%dummy}, %rd10112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2472}, %rd10112;
	}
	shf.r.wrap.b32 	%r2473, %r2472, %r2471, 1;
	shf.r.wrap.b32 	%r2474, %r2471, %r2472, 1;
	mov.b64 	%rd3391, {%r2474, %r2473};
	xor.b64  	%rd3392, %rd3391, %rd3390;
	shf.r.wrap.b32 	%r2475, %r2472, %r2471, 8;
	shf.r.wrap.b32 	%r2476, %r2471, %r2472, 8;
	mov.b64 	%rd3393, {%r2476, %r2475};
	xor.b64  	%rd3394, %rd3392, %rd3393;
	add.s64 	%rd3395, %rd10121, %rd10128;
	add.s64 	%rd3396, %rd3395, %rd3389;
	add.s64 	%rd10128, %rd3396, %rd3394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2477,%dummy}, %rd10127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2478}, %rd10127;
	}
	shf.r.wrap.b32 	%r2479, %r2478, %r2477, 19;
	shf.r.wrap.b32 	%r2480, %r2477, %r2478, 19;
	mov.b64 	%rd3397, {%r2480, %r2479};
	shf.l.wrap.b32 	%r2481, %r2477, %r2478, 3;
	shf.l.wrap.b32 	%r2482, %r2478, %r2477, 3;
	mov.b64 	%rd3398, {%r2482, %r2481};
	shr.u64 	%rd3399, %rd10127, 6;
	xor.b64  	%rd3400, %rd3397, %rd3399;
	xor.b64  	%rd3401, %rd3400, %rd3398;
	shr.u64 	%rd3402, %rd10111, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2483,%dummy}, %rd10111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2484}, %rd10111;
	}
	shf.r.wrap.b32 	%r2485, %r2484, %r2483, 1;
	shf.r.wrap.b32 	%r2486, %r2483, %r2484, 1;
	mov.b64 	%rd3403, {%r2486, %r2485};
	xor.b64  	%rd3404, %rd3403, %rd3402;
	shf.r.wrap.b32 	%r2487, %r2484, %r2483, 8;
	shf.r.wrap.b32 	%r2488, %r2483, %r2484, 8;
	mov.b64 	%rd3405, {%r2488, %r2487};
	xor.b64  	%rd3406, %rd3404, %rd3405;
	add.s64 	%rd3407, %rd10122, %rd10112;
	add.s64 	%rd3408, %rd3407, %rd3401;
	add.s64 	%rd10112, %rd3408, %rd3406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2489,%dummy}, %rd10128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2490}, %rd10128;
	}
	shf.r.wrap.b32 	%r2491, %r2490, %r2489, 19;
	shf.r.wrap.b32 	%r2492, %r2489, %r2490, 19;
	mov.b64 	%rd3409, {%r2492, %r2491};
	shf.l.wrap.b32 	%r2493, %r2489, %r2490, 3;
	shf.l.wrap.b32 	%r2494, %r2490, %r2489, 3;
	mov.b64 	%rd3410, {%r2494, %r2493};
	shr.u64 	%rd3411, %rd10128, 6;
	xor.b64  	%rd3412, %rd3409, %rd3411;
	xor.b64  	%rd3413, %rd3412, %rd3410;
	shr.u64 	%rd3414, %rd10110, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2495,%dummy}, %rd10110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2496}, %rd10110;
	}
	shf.r.wrap.b32 	%r2497, %r2496, %r2495, 1;
	shf.r.wrap.b32 	%r2498, %r2495, %r2496, 1;
	mov.b64 	%rd3415, {%r2498, %r2497};
	xor.b64  	%rd3416, %rd3415, %rd3414;
	shf.r.wrap.b32 	%r2499, %r2496, %r2495, 8;
	shf.r.wrap.b32 	%r2500, %r2495, %r2496, 8;
	mov.b64 	%rd3417, {%r2500, %r2499};
	xor.b64  	%rd3418, %rd3416, %rd3417;
	add.s64 	%rd3419, %rd10123, %rd10111;
	add.s64 	%rd3420, %rd3419, %rd3413;
	add.s64 	%rd10111, %rd3420, %rd3418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2501,%dummy}, %rd10112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2502}, %rd10112;
	}
	shf.r.wrap.b32 	%r2503, %r2502, %r2501, 19;
	shf.r.wrap.b32 	%r2504, %r2501, %r2502, 19;
	mov.b64 	%rd3421, {%r2504, %r2503};
	shf.l.wrap.b32 	%r2505, %r2501, %r2502, 3;
	shf.l.wrap.b32 	%r2506, %r2502, %r2501, 3;
	mov.b64 	%rd3422, {%r2506, %r2505};
	shr.u64 	%rd3423, %rd10112, 6;
	xor.b64  	%rd3424, %rd3421, %rd3423;
	xor.b64  	%rd3425, %rd3424, %rd3422;
	shr.u64 	%rd3426, %rd10109, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2507,%dummy}, %rd10109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2508}, %rd10109;
	}
	shf.r.wrap.b32 	%r2509, %r2508, %r2507, 1;
	shf.r.wrap.b32 	%r2510, %r2507, %r2508, 1;
	mov.b64 	%rd3427, {%r2510, %r2509};
	xor.b64  	%rd3428, %rd3427, %rd3426;
	shf.r.wrap.b32 	%r2511, %r2508, %r2507, 8;
	shf.r.wrap.b32 	%r2512, %r2507, %r2508, 8;
	mov.b64 	%rd3429, {%r2512, %r2511};
	xor.b64  	%rd3430, %rd3428, %rd3429;
	add.s64 	%rd3431, %rd10124, %rd10110;
	add.s64 	%rd3432, %rd3431, %rd3425;
	add.s64 	%rd10110, %rd3432, %rd3430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2513,%dummy}, %rd10111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2514}, %rd10111;
	}
	shf.r.wrap.b32 	%r2515, %r2514, %r2513, 19;
	shf.r.wrap.b32 	%r2516, %r2513, %r2514, 19;
	mov.b64 	%rd3433, {%r2516, %r2515};
	shf.l.wrap.b32 	%r2517, %r2513, %r2514, 3;
	shf.l.wrap.b32 	%r2518, %r2514, %r2513, 3;
	mov.b64 	%rd3434, {%r2518, %r2517};
	shr.u64 	%rd3435, %rd10111, 6;
	xor.b64  	%rd3436, %rd3433, %rd3435;
	xor.b64  	%rd3437, %rd3436, %rd3434;
	shr.u64 	%rd3438, %rd10108, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2519,%dummy}, %rd10108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2520}, %rd10108;
	}
	shf.r.wrap.b32 	%r2521, %r2520, %r2519, 1;
	shf.r.wrap.b32 	%r2522, %r2519, %r2520, 1;
	mov.b64 	%rd3439, {%r2522, %r2521};
	xor.b64  	%rd3440, %rd3439, %rd3438;
	shf.r.wrap.b32 	%r2523, %r2520, %r2519, 8;
	shf.r.wrap.b32 	%r2524, %r2519, %r2520, 8;
	mov.b64 	%rd3441, {%r2524, %r2523};
	xor.b64  	%rd3442, %rd3440, %rd3441;
	add.s64 	%rd3443, %rd10125, %rd10109;
	add.s64 	%rd3444, %rd3443, %rd3437;
	add.s64 	%rd10109, %rd3444, %rd3442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2525,%dummy}, %rd10110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2526}, %rd10110;
	}
	shf.r.wrap.b32 	%r2527, %r2526, %r2525, 19;
	shf.r.wrap.b32 	%r2528, %r2525, %r2526, 19;
	mov.b64 	%rd3445, {%r2528, %r2527};
	shf.l.wrap.b32 	%r2529, %r2525, %r2526, 3;
	shf.l.wrap.b32 	%r2530, %r2526, %r2525, 3;
	mov.b64 	%rd3446, {%r2530, %r2529};
	shr.u64 	%rd3447, %rd10110, 6;
	xor.b64  	%rd3448, %rd3445, %rd3447;
	xor.b64  	%rd3449, %rd3448, %rd3446;
	shr.u64 	%rd3450, %rd10107, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2531,%dummy}, %rd10107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2532}, %rd10107;
	}
	shf.r.wrap.b32 	%r2533, %r2532, %r2531, 1;
	shf.r.wrap.b32 	%r2534, %r2531, %r2532, 1;
	mov.b64 	%rd3451, {%r2534, %r2533};
	xor.b64  	%rd3452, %rd3451, %rd3450;
	shf.r.wrap.b32 	%r2535, %r2532, %r2531, 8;
	shf.r.wrap.b32 	%r2536, %r2531, %r2532, 8;
	mov.b64 	%rd3453, {%r2536, %r2535};
	xor.b64  	%rd3454, %rd3452, %rd3453;
	add.s64 	%rd3455, %rd10126, %rd10108;
	add.s64 	%rd3456, %rd3455, %rd3449;
	add.s64 	%rd10108, %rd3456, %rd3454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2537,%dummy}, %rd10109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2538}, %rd10109;
	}
	shf.r.wrap.b32 	%r2539, %r2538, %r2537, 19;
	shf.r.wrap.b32 	%r2540, %r2537, %r2538, 19;
	mov.b64 	%rd3457, {%r2540, %r2539};
	shf.l.wrap.b32 	%r2541, %r2537, %r2538, 3;
	shf.l.wrap.b32 	%r2542, %r2538, %r2537, 3;
	mov.b64 	%rd3458, {%r2542, %r2541};
	shr.u64 	%rd3459, %rd10109, 6;
	xor.b64  	%rd3460, %rd3457, %rd3459;
	xor.b64  	%rd3461, %rd3460, %rd3458;
	shr.u64 	%rd3462, %rd10106, 7;
	shf.r.wrap.b32 	%r2543, %r2382, %r2381, 1;
	shf.r.wrap.b32 	%r2544, %r2381, %r2382, 1;
	mov.b64 	%rd3463, {%r2544, %r2543};
	xor.b64  	%rd3464, %rd3463, %rd3462;
	shf.r.wrap.b32 	%r2545, %r2382, %r2381, 8;
	shf.r.wrap.b32 	%r2546, %r2381, %r2382, 8;
	mov.b64 	%rd3465, {%r2546, %r2545};
	xor.b64  	%rd3466, %rd3464, %rd3465;
	add.s64 	%rd3467, %rd10127, %rd10107;
	add.s64 	%rd3468, %rd3467, %rd3461;
	add.s64 	%rd10107, %rd3468, %rd3466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2547,%dummy}, %rd10108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2548}, %rd10108;
	}
	shf.r.wrap.b32 	%r2549, %r2548, %r2547, 19;
	shf.r.wrap.b32 	%r2550, %r2547, %r2548, 19;
	mov.b64 	%rd3469, {%r2550, %r2549};
	shf.l.wrap.b32 	%r2551, %r2547, %r2548, 3;
	shf.l.wrap.b32 	%r2552, %r2548, %r2547, 3;
	mov.b64 	%rd3470, {%r2552, %r2551};
	shr.u64 	%rd3471, %rd10108, 6;
	xor.b64  	%rd3472, %rd3469, %rd3471;
	xor.b64  	%rd3473, %rd3472, %rd3470;
	shr.u64 	%rd3474, %rd10105, 7;
	shf.r.wrap.b32 	%r2553, %r2394, %r2393, 1;
	shf.r.wrap.b32 	%r2554, %r2393, %r2394, 1;
	mov.b64 	%rd3475, {%r2554, %r2553};
	xor.b64  	%rd3476, %rd3475, %rd3474;
	shf.r.wrap.b32 	%r2555, %r2394, %r2393, 8;
	shf.r.wrap.b32 	%r2556, %r2393, %r2394, 8;
	mov.b64 	%rd3477, {%r2556, %r2555};
	xor.b64  	%rd3478, %rd3476, %rd3477;
	add.s64 	%rd3479, %rd10128, %rd10106;
	add.s64 	%rd3480, %rd3479, %rd3473;
	add.s64 	%rd10106, %rd3480, %rd3478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2557,%dummy}, %rd10107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2558}, %rd10107;
	}
	shf.r.wrap.b32 	%r2559, %r2558, %r2557, 19;
	shf.r.wrap.b32 	%r2560, %r2557, %r2558, 19;
	mov.b64 	%rd3481, {%r2560, %r2559};
	shf.l.wrap.b32 	%r2561, %r2557, %r2558, 3;
	shf.l.wrap.b32 	%r2562, %r2558, %r2557, 3;
	mov.b64 	%rd3482, {%r2562, %r2561};
	shr.u64 	%rd3483, %rd10107, 6;
	xor.b64  	%rd3484, %rd3481, %rd3483;
	xor.b64  	%rd3485, %rd3484, %rd3482;
	shf.r.wrap.b32 	%r2563, %r2406, %r2405, 1;
	shf.r.wrap.b32 	%r2564, %r2405, %r2406, 1;
	mov.b64 	%rd3486, {%r2564, %r2563};
	shf.r.wrap.b32 	%r2565, %r2406, %r2405, 8;
	shf.r.wrap.b32 	%r2566, %r2405, %r2406, 8;
	mov.b64 	%rd3487, {%r2566, %r2565};
	shr.u64 	%rd3488, %rd10121, 7;
	xor.b64  	%rd3489, %rd3486, %rd3488;
	xor.b64  	%rd3490, %rd3489, %rd3487;
	add.s64 	%rd3491, %rd10112, %rd10105;
	add.s64 	%rd3492, %rd3491, %rd3485;
	add.s64 	%rd10105, %rd3492, %rd3490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2567,%dummy}, %rd10117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2568}, %rd10117;
	}
	shf.r.wrap.b32 	%r2569, %r2568, %r2567, 18;
	shf.r.wrap.b32 	%r2570, %r2567, %r2568, 18;
	mov.b64 	%rd3493, {%r2570, %r2569};
	shf.r.wrap.b32 	%r2571, %r2568, %r2567, 14;
	shf.r.wrap.b32 	%r2572, %r2567, %r2568, 14;
	mov.b64 	%rd3494, {%r2572, %r2571};
	xor.b64  	%rd3495, %rd3493, %rd3494;
	shf.l.wrap.b32 	%r2573, %r2567, %r2568, 23;
	shf.l.wrap.b32 	%r2574, %r2568, %r2567, 23;
	mov.b64 	%rd3496, {%r2574, %r2573};
	xor.b64  	%rd3497, %rd3495, %rd3496;
	xor.b64  	%rd3498, %rd10118, %rd10119;
	and.b64  	%rd3499, %rd10117, %rd3498;
	xor.b64  	%rd3500, %rd3499, %rd10119;
	add.s64 	%rd3501, %rd3500, %rd10120;
	add.s64 	%rd3502, %rd3501, %rd10121;
	add.s64 	%rd293, %rd10104, 128;
	ld.const.u64 	%rd3503, [%rd10104+128];
	add.s64 	%rd3504, %rd3502, %rd3503;
	add.s64 	%rd3505, %rd3504, %rd3497;
	add.s64 	%rd3506, %rd3505, %rd10116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2575}, %rd10113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2576,%dummy}, %rd10113;
	}
	shf.l.wrap.b32 	%r2577, %r2576, %r2575, 30;
	shf.l.wrap.b32 	%r2578, %r2575, %r2576, 30;
	mov.b64 	%rd3507, {%r2578, %r2577};
	shf.r.wrap.b32 	%r2579, %r2575, %r2576, 28;
	shf.r.wrap.b32 	%r2580, %r2576, %r2575, 28;
	mov.b64 	%rd3508, {%r2580, %r2579};
	xor.b64  	%rd3509, %rd3507, %rd3508;
	shf.l.wrap.b32 	%r2581, %r2576, %r2575, 25;
	shf.l.wrap.b32 	%r2582, %r2575, %r2576, 25;
	mov.b64 	%rd3510, {%r2582, %r2581};
	xor.b64  	%rd3511, %rd3509, %rd3510;
	xor.b64  	%rd3512, %rd10113, %rd10114;
	and.b64  	%rd3513, %rd3512, %rd10115;
	and.b64  	%rd3514, %rd10113, %rd10114;
	or.b64  	%rd3515, %rd3513, %rd3514;
	add.s64 	%rd3516, %rd3505, %rd3515;
	add.s64 	%rd3517, %rd3516, %rd3511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2583,%dummy}, %rd3506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2584}, %rd3506;
	}
	shf.r.wrap.b32 	%r2585, %r2584, %r2583, 14;
	shf.r.wrap.b32 	%r2586, %r2583, %r2584, 14;
	mov.b64 	%rd3518, {%r2586, %r2585};
	shf.r.wrap.b32 	%r2587, %r2584, %r2583, 18;
	shf.r.wrap.b32 	%r2588, %r2583, %r2584, 18;
	mov.b64 	%rd3519, {%r2588, %r2587};
	xor.b64  	%rd3520, %rd3519, %rd3518;
	shf.l.wrap.b32 	%r2589, %r2583, %r2584, 23;
	shf.l.wrap.b32 	%r2590, %r2584, %r2583, 23;
	mov.b64 	%rd3521, {%r2590, %r2589};
	xor.b64  	%rd3522, %rd3520, %rd3521;
	xor.b64  	%rd3523, %rd10117, %rd10118;
	and.b64  	%rd3524, %rd3506, %rd3523;
	xor.b64  	%rd3525, %rd3524, %rd10118;
	add.s64 	%rd3526, %rd10122, %rd10119;
	ld.const.u64 	%rd3527, [%rd10104+136];
	add.s64 	%rd3528, %rd3526, %rd3527;
	add.s64 	%rd3529, %rd3528, %rd3525;
	add.s64 	%rd3530, %rd3529, %rd3522;
	add.s64 	%rd3531, %rd3530, %rd10115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2591,%dummy}, %rd3517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2592}, %rd3517;
	}
	shf.r.wrap.b32 	%r2593, %r2592, %r2591, 28;
	shf.r.wrap.b32 	%r2594, %r2591, %r2592, 28;
	mov.b64 	%rd3532, {%r2594, %r2593};
	shf.l.wrap.b32 	%r2595, %r2591, %r2592, 30;
	shf.l.wrap.b32 	%r2596, %r2592, %r2591, 30;
	mov.b64 	%rd3533, {%r2596, %r2595};
	xor.b64  	%rd3534, %rd3533, %rd3532;
	shf.l.wrap.b32 	%r2597, %r2591, %r2592, 25;
	shf.l.wrap.b32 	%r2598, %r2592, %r2591, 25;
	mov.b64 	%rd3535, {%r2598, %r2597};
	xor.b64  	%rd3536, %rd3534, %rd3535;
	and.b64  	%rd3537, %rd3517, %rd10113;
	xor.b64  	%rd3538, %rd3517, %rd10113;
	and.b64  	%rd3539, %rd3538, %rd10114;
	or.b64  	%rd3540, %rd3539, %rd3537;
	add.s64 	%rd3541, %rd3530, %rd3540;
	add.s64 	%rd3542, %rd3541, %rd3536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2599,%dummy}, %rd3531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2600}, %rd3531;
	}
	shf.r.wrap.b32 	%r2601, %r2600, %r2599, 14;
	shf.r.wrap.b32 	%r2602, %r2599, %r2600, 14;
	mov.b64 	%rd3543, {%r2602, %r2601};
	shf.r.wrap.b32 	%r2603, %r2600, %r2599, 18;
	shf.r.wrap.b32 	%r2604, %r2599, %r2600, 18;
	mov.b64 	%rd3544, {%r2604, %r2603};
	xor.b64  	%rd3545, %rd3544, %rd3543;
	shf.l.wrap.b32 	%r2605, %r2599, %r2600, 23;
	shf.l.wrap.b32 	%r2606, %r2600, %r2599, 23;
	mov.b64 	%rd3546, {%r2606, %r2605};
	xor.b64  	%rd3547, %rd3545, %rd3546;
	xor.b64  	%rd3548, %rd3506, %rd10117;
	and.b64  	%rd3549, %rd3531, %rd3548;
	xor.b64  	%rd3550, %rd3549, %rd10117;
	add.s64 	%rd3551, %rd10123, %rd10118;
	ld.const.u64 	%rd3552, [%rd10104+144];
	add.s64 	%rd3553, %rd3551, %rd3552;
	add.s64 	%rd3554, %rd3553, %rd3550;
	add.s64 	%rd3555, %rd3554, %rd3547;
	add.s64 	%rd3556, %rd3555, %rd10114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2607,%dummy}, %rd3542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2608}, %rd3542;
	}
	shf.r.wrap.b32 	%r2609, %r2608, %r2607, 28;
	shf.r.wrap.b32 	%r2610, %r2607, %r2608, 28;
	mov.b64 	%rd3557, {%r2610, %r2609};
	shf.l.wrap.b32 	%r2611, %r2607, %r2608, 30;
	shf.l.wrap.b32 	%r2612, %r2608, %r2607, 30;
	mov.b64 	%rd3558, {%r2612, %r2611};
	xor.b64  	%rd3559, %rd3558, %rd3557;
	shf.l.wrap.b32 	%r2613, %r2607, %r2608, 25;
	shf.l.wrap.b32 	%r2614, %r2608, %r2607, 25;
	mov.b64 	%rd3560, {%r2614, %r2613};
	xor.b64  	%rd3561, %rd3559, %rd3560;
	and.b64  	%rd3562, %rd3542, %rd3517;
	xor.b64  	%rd3563, %rd3542, %rd3517;
	and.b64  	%rd3564, %rd3563, %rd10113;
	or.b64  	%rd3565, %rd3564, %rd3562;
	add.s64 	%rd3566, %rd3555, %rd3565;
	add.s64 	%rd3567, %rd3566, %rd3561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2615,%dummy}, %rd3556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2616}, %rd3556;
	}
	shf.r.wrap.b32 	%r2617, %r2616, %r2615, 14;
	shf.r.wrap.b32 	%r2618, %r2615, %r2616, 14;
	mov.b64 	%rd3568, {%r2618, %r2617};
	shf.r.wrap.b32 	%r2619, %r2616, %r2615, 18;
	shf.r.wrap.b32 	%r2620, %r2615, %r2616, 18;
	mov.b64 	%rd3569, {%r2620, %r2619};
	xor.b64  	%rd3570, %rd3569, %rd3568;
	shf.l.wrap.b32 	%r2621, %r2615, %r2616, 23;
	shf.l.wrap.b32 	%r2622, %r2616, %r2615, 23;
	mov.b64 	%rd3571, {%r2622, %r2621};
	xor.b64  	%rd3572, %rd3570, %rd3571;
	xor.b64  	%rd3573, %rd3531, %rd3506;
	and.b64  	%rd3574, %rd3556, %rd3573;
	xor.b64  	%rd3575, %rd3574, %rd3506;
	add.s64 	%rd3576, %rd10124, %rd10117;
	ld.const.u64 	%rd3577, [%rd10104+152];
	add.s64 	%rd3578, %rd3576, %rd3577;
	add.s64 	%rd3579, %rd3578, %rd3575;
	add.s64 	%rd3580, %rd3579, %rd3572;
	add.s64 	%rd3581, %rd3580, %rd10113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2623,%dummy}, %rd3567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2624}, %rd3567;
	}
	shf.r.wrap.b32 	%r2625, %r2624, %r2623, 28;
	shf.r.wrap.b32 	%r2626, %r2623, %r2624, 28;
	mov.b64 	%rd3582, {%r2626, %r2625};
	shf.l.wrap.b32 	%r2627, %r2623, %r2624, 30;
	shf.l.wrap.b32 	%r2628, %r2624, %r2623, 30;
	mov.b64 	%rd3583, {%r2628, %r2627};
	xor.b64  	%rd3584, %rd3583, %rd3582;
	shf.l.wrap.b32 	%r2629, %r2623, %r2624, 25;
	shf.l.wrap.b32 	%r2630, %r2624, %r2623, 25;
	mov.b64 	%rd3585, {%r2630, %r2629};
	xor.b64  	%rd3586, %rd3584, %rd3585;
	and.b64  	%rd3587, %rd3567, %rd3542;
	xor.b64  	%rd3588, %rd3567, %rd3542;
	and.b64  	%rd3589, %rd3588, %rd3517;
	or.b64  	%rd3590, %rd3589, %rd3587;
	add.s64 	%rd3591, %rd3580, %rd3590;
	add.s64 	%rd3592, %rd3591, %rd3586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2631,%dummy}, %rd3581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2632}, %rd3581;
	}
	shf.r.wrap.b32 	%r2633, %r2632, %r2631, 14;
	shf.r.wrap.b32 	%r2634, %r2631, %r2632, 14;
	mov.b64 	%rd3593, {%r2634, %r2633};
	shf.r.wrap.b32 	%r2635, %r2632, %r2631, 18;
	shf.r.wrap.b32 	%r2636, %r2631, %r2632, 18;
	mov.b64 	%rd3594, {%r2636, %r2635};
	xor.b64  	%rd3595, %rd3594, %rd3593;
	shf.l.wrap.b32 	%r2637, %r2631, %r2632, 23;
	shf.l.wrap.b32 	%r2638, %r2632, %r2631, 23;
	mov.b64 	%rd3596, {%r2638, %r2637};
	xor.b64  	%rd3597, %rd3595, %rd3596;
	xor.b64  	%rd3598, %rd3556, %rd3531;
	and.b64  	%rd3599, %rd3581, %rd3598;
	xor.b64  	%rd3600, %rd3599, %rd3531;
	add.s64 	%rd3601, %rd3506, %rd10125;
	ld.const.u64 	%rd3602, [%rd10104+160];
	add.s64 	%rd3603, %rd3601, %rd3602;
	add.s64 	%rd3604, %rd3603, %rd3600;
	add.s64 	%rd3605, %rd3604, %rd3597;
	add.s64 	%rd3606, %rd3605, %rd3517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2639,%dummy}, %rd3592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2640}, %rd3592;
	}
	shf.r.wrap.b32 	%r2641, %r2640, %r2639, 28;
	shf.r.wrap.b32 	%r2642, %r2639, %r2640, 28;
	mov.b64 	%rd3607, {%r2642, %r2641};
	shf.l.wrap.b32 	%r2643, %r2639, %r2640, 30;
	shf.l.wrap.b32 	%r2644, %r2640, %r2639, 30;
	mov.b64 	%rd3608, {%r2644, %r2643};
	xor.b64  	%rd3609, %rd3608, %rd3607;
	shf.l.wrap.b32 	%r2645, %r2639, %r2640, 25;
	shf.l.wrap.b32 	%r2646, %r2640, %r2639, 25;
	mov.b64 	%rd3610, {%r2646, %r2645};
	xor.b64  	%rd3611, %rd3609, %rd3610;
	and.b64  	%rd3612, %rd3592, %rd3567;
	xor.b64  	%rd3613, %rd3592, %rd3567;
	and.b64  	%rd3614, %rd3613, %rd3542;
	or.b64  	%rd3615, %rd3614, %rd3612;
	add.s64 	%rd3616, %rd3605, %rd3615;
	add.s64 	%rd3617, %rd3616, %rd3611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2647,%dummy}, %rd3606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2648}, %rd3606;
	}
	shf.r.wrap.b32 	%r2649, %r2648, %r2647, 14;
	shf.r.wrap.b32 	%r2650, %r2647, %r2648, 14;
	mov.b64 	%rd3618, {%r2650, %r2649};
	shf.r.wrap.b32 	%r2651, %r2648, %r2647, 18;
	shf.r.wrap.b32 	%r2652, %r2647, %r2648, 18;
	mov.b64 	%rd3619, {%r2652, %r2651};
	xor.b64  	%rd3620, %rd3619, %rd3618;
	shf.l.wrap.b32 	%r2653, %r2647, %r2648, 23;
	shf.l.wrap.b32 	%r2654, %r2648, %r2647, 23;
	mov.b64 	%rd3621, {%r2654, %r2653};
	xor.b64  	%rd3622, %rd3620, %rd3621;
	xor.b64  	%rd3623, %rd3581, %rd3556;
	and.b64  	%rd3624, %rd3606, %rd3623;
	xor.b64  	%rd3625, %rd3624, %rd3556;
	add.s64 	%rd3626, %rd3531, %rd10126;
	ld.const.u64 	%rd3627, [%rd10104+168];
	add.s64 	%rd3628, %rd3626, %rd3627;
	add.s64 	%rd3629, %rd3628, %rd3625;
	add.s64 	%rd3630, %rd3629, %rd3622;
	add.s64 	%rd3631, %rd3630, %rd3542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2655,%dummy}, %rd3617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2656}, %rd3617;
	}
	shf.r.wrap.b32 	%r2657, %r2656, %r2655, 28;
	shf.r.wrap.b32 	%r2658, %r2655, %r2656, 28;
	mov.b64 	%rd3632, {%r2658, %r2657};
	shf.l.wrap.b32 	%r2659, %r2655, %r2656, 30;
	shf.l.wrap.b32 	%r2660, %r2656, %r2655, 30;
	mov.b64 	%rd3633, {%r2660, %r2659};
	xor.b64  	%rd3634, %rd3633, %rd3632;
	shf.l.wrap.b32 	%r2661, %r2655, %r2656, 25;
	shf.l.wrap.b32 	%r2662, %r2656, %r2655, 25;
	mov.b64 	%rd3635, {%r2662, %r2661};
	xor.b64  	%rd3636, %rd3634, %rd3635;
	and.b64  	%rd3637, %rd3617, %rd3592;
	xor.b64  	%rd3638, %rd3617, %rd3592;
	and.b64  	%rd3639, %rd3638, %rd3567;
	or.b64  	%rd3640, %rd3639, %rd3637;
	add.s64 	%rd3641, %rd3630, %rd3640;
	add.s64 	%rd3642, %rd3641, %rd3636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2663,%dummy}, %rd3631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2664}, %rd3631;
	}
	shf.r.wrap.b32 	%r2665, %r2664, %r2663, 14;
	shf.r.wrap.b32 	%r2666, %r2663, %r2664, 14;
	mov.b64 	%rd3643, {%r2666, %r2665};
	shf.r.wrap.b32 	%r2667, %r2664, %r2663, 18;
	shf.r.wrap.b32 	%r2668, %r2663, %r2664, 18;
	mov.b64 	%rd3644, {%r2668, %r2667};
	xor.b64  	%rd3645, %rd3644, %rd3643;
	shf.l.wrap.b32 	%r2669, %r2663, %r2664, 23;
	shf.l.wrap.b32 	%r2670, %r2664, %r2663, 23;
	mov.b64 	%rd3646, {%r2670, %r2669};
	xor.b64  	%rd3647, %rd3645, %rd3646;
	xor.b64  	%rd3648, %rd3606, %rd3581;
	and.b64  	%rd3649, %rd3631, %rd3648;
	xor.b64  	%rd3650, %rd3649, %rd3581;
	add.s64 	%rd3651, %rd3556, %rd10127;
	ld.const.u64 	%rd3652, [%rd10104+176];
	add.s64 	%rd3653, %rd3651, %rd3652;
	add.s64 	%rd3654, %rd3653, %rd3650;
	add.s64 	%rd3655, %rd3654, %rd3647;
	add.s64 	%rd3656, %rd3655, %rd3567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2671,%dummy}, %rd3642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2672}, %rd3642;
	}
	shf.r.wrap.b32 	%r2673, %r2672, %r2671, 28;
	shf.r.wrap.b32 	%r2674, %r2671, %r2672, 28;
	mov.b64 	%rd3657, {%r2674, %r2673};
	shf.l.wrap.b32 	%r2675, %r2671, %r2672, 30;
	shf.l.wrap.b32 	%r2676, %r2672, %r2671, 30;
	mov.b64 	%rd3658, {%r2676, %r2675};
	xor.b64  	%rd3659, %rd3658, %rd3657;
	shf.l.wrap.b32 	%r2677, %r2671, %r2672, 25;
	shf.l.wrap.b32 	%r2678, %r2672, %r2671, 25;
	mov.b64 	%rd3660, {%r2678, %r2677};
	xor.b64  	%rd3661, %rd3659, %rd3660;
	and.b64  	%rd3662, %rd3642, %rd3617;
	xor.b64  	%rd3663, %rd3642, %rd3617;
	and.b64  	%rd3664, %rd3663, %rd3592;
	or.b64  	%rd3665, %rd3664, %rd3662;
	add.s64 	%rd3666, %rd3655, %rd3665;
	add.s64 	%rd3667, %rd3666, %rd3661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2679,%dummy}, %rd3656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2680}, %rd3656;
	}
	shf.r.wrap.b32 	%r2681, %r2680, %r2679, 14;
	shf.r.wrap.b32 	%r2682, %r2679, %r2680, 14;
	mov.b64 	%rd3668, {%r2682, %r2681};
	shf.r.wrap.b32 	%r2683, %r2680, %r2679, 18;
	shf.r.wrap.b32 	%r2684, %r2679, %r2680, 18;
	mov.b64 	%rd3669, {%r2684, %r2683};
	xor.b64  	%rd3670, %rd3669, %rd3668;
	shf.l.wrap.b32 	%r2685, %r2679, %r2680, 23;
	shf.l.wrap.b32 	%r2686, %r2680, %r2679, 23;
	mov.b64 	%rd3671, {%r2686, %r2685};
	xor.b64  	%rd3672, %rd3670, %rd3671;
	xor.b64  	%rd3673, %rd3631, %rd3606;
	and.b64  	%rd3674, %rd3656, %rd3673;
	xor.b64  	%rd3675, %rd3674, %rd3606;
	add.s64 	%rd3676, %rd3581, %rd10128;
	ld.const.u64 	%rd3677, [%rd10104+184];
	add.s64 	%rd3678, %rd3676, %rd3677;
	add.s64 	%rd3679, %rd3678, %rd3675;
	add.s64 	%rd3680, %rd3679, %rd3672;
	add.s64 	%rd3681, %rd3680, %rd3592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2687,%dummy}, %rd3667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2688}, %rd3667;
	}
	shf.r.wrap.b32 	%r2689, %r2688, %r2687, 28;
	shf.r.wrap.b32 	%r2690, %r2687, %r2688, 28;
	mov.b64 	%rd3682, {%r2690, %r2689};
	shf.l.wrap.b32 	%r2691, %r2687, %r2688, 30;
	shf.l.wrap.b32 	%r2692, %r2688, %r2687, 30;
	mov.b64 	%rd3683, {%r2692, %r2691};
	xor.b64  	%rd3684, %rd3683, %rd3682;
	shf.l.wrap.b32 	%r2693, %r2687, %r2688, 25;
	shf.l.wrap.b32 	%r2694, %r2688, %r2687, 25;
	mov.b64 	%rd3685, {%r2694, %r2693};
	xor.b64  	%rd3686, %rd3684, %rd3685;
	and.b64  	%rd3687, %rd3667, %rd3642;
	xor.b64  	%rd3688, %rd3667, %rd3642;
	and.b64  	%rd3689, %rd3688, %rd3617;
	or.b64  	%rd3690, %rd3689, %rd3687;
	add.s64 	%rd3691, %rd3680, %rd3690;
	add.s64 	%rd3692, %rd3691, %rd3686;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2695,%dummy}, %rd3681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2696}, %rd3681;
	}
	shf.r.wrap.b32 	%r2697, %r2696, %r2695, 14;
	shf.r.wrap.b32 	%r2698, %r2695, %r2696, 14;
	mov.b64 	%rd3693, {%r2698, %r2697};
	shf.r.wrap.b32 	%r2699, %r2696, %r2695, 18;
	shf.r.wrap.b32 	%r2700, %r2695, %r2696, 18;
	mov.b64 	%rd3694, {%r2700, %r2699};
	xor.b64  	%rd3695, %rd3694, %rd3693;
	shf.l.wrap.b32 	%r2701, %r2695, %r2696, 23;
	shf.l.wrap.b32 	%r2702, %r2696, %r2695, 23;
	mov.b64 	%rd3696, {%r2702, %r2701};
	xor.b64  	%rd3697, %rd3695, %rd3696;
	xor.b64  	%rd3698, %rd3656, %rd3631;
	and.b64  	%rd3699, %rd3681, %rd3698;
	xor.b64  	%rd3700, %rd3699, %rd3631;
	add.s64 	%rd3701, %rd3606, %rd10112;
	ld.const.u64 	%rd3702, [%rd10104+192];
	add.s64 	%rd3703, %rd3701, %rd3702;
	add.s64 	%rd3704, %rd3703, %rd3700;
	add.s64 	%rd3705, %rd3704, %rd3697;
	add.s64 	%rd3706, %rd3705, %rd3617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2703,%dummy}, %rd3692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2704}, %rd3692;
	}
	shf.r.wrap.b32 	%r2705, %r2704, %r2703, 28;
	shf.r.wrap.b32 	%r2706, %r2703, %r2704, 28;
	mov.b64 	%rd3707, {%r2706, %r2705};
	shf.l.wrap.b32 	%r2707, %r2703, %r2704, 30;
	shf.l.wrap.b32 	%r2708, %r2704, %r2703, 30;
	mov.b64 	%rd3708, {%r2708, %r2707};
	xor.b64  	%rd3709, %rd3708, %rd3707;
	shf.l.wrap.b32 	%r2709, %r2703, %r2704, 25;
	shf.l.wrap.b32 	%r2710, %r2704, %r2703, 25;
	mov.b64 	%rd3710, {%r2710, %r2709};
	xor.b64  	%rd3711, %rd3709, %rd3710;
	and.b64  	%rd3712, %rd3692, %rd3667;
	xor.b64  	%rd3713, %rd3692, %rd3667;
	and.b64  	%rd3714, %rd3713, %rd3642;
	or.b64  	%rd3715, %rd3714, %rd3712;
	add.s64 	%rd3716, %rd3705, %rd3715;
	add.s64 	%rd3717, %rd3716, %rd3711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2711,%dummy}, %rd3706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2712}, %rd3706;
	}
	shf.r.wrap.b32 	%r2713, %r2712, %r2711, 14;
	shf.r.wrap.b32 	%r2714, %r2711, %r2712, 14;
	mov.b64 	%rd3718, {%r2714, %r2713};
	shf.r.wrap.b32 	%r2715, %r2712, %r2711, 18;
	shf.r.wrap.b32 	%r2716, %r2711, %r2712, 18;
	mov.b64 	%rd3719, {%r2716, %r2715};
	xor.b64  	%rd3720, %rd3719, %rd3718;
	shf.l.wrap.b32 	%r2717, %r2711, %r2712, 23;
	shf.l.wrap.b32 	%r2718, %r2712, %r2711, 23;
	mov.b64 	%rd3721, {%r2718, %r2717};
	xor.b64  	%rd3722, %rd3720, %rd3721;
	xor.b64  	%rd3723, %rd3681, %rd3656;
	and.b64  	%rd3724, %rd3706, %rd3723;
	xor.b64  	%rd3725, %rd3724, %rd3656;
	add.s64 	%rd3726, %rd3631, %rd10111;
	ld.const.u64 	%rd3727, [%rd10104+200];
	add.s64 	%rd3728, %rd3726, %rd3727;
	add.s64 	%rd3729, %rd3728, %rd3725;
	add.s64 	%rd3730, %rd3729, %rd3722;
	add.s64 	%rd3731, %rd3730, %rd3642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2719,%dummy}, %rd3717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2720}, %rd3717;
	}
	shf.r.wrap.b32 	%r2721, %r2720, %r2719, 28;
	shf.r.wrap.b32 	%r2722, %r2719, %r2720, 28;
	mov.b64 	%rd3732, {%r2722, %r2721};
	shf.l.wrap.b32 	%r2723, %r2719, %r2720, 30;
	shf.l.wrap.b32 	%r2724, %r2720, %r2719, 30;
	mov.b64 	%rd3733, {%r2724, %r2723};
	xor.b64  	%rd3734, %rd3733, %rd3732;
	shf.l.wrap.b32 	%r2725, %r2719, %r2720, 25;
	shf.l.wrap.b32 	%r2726, %r2720, %r2719, 25;
	mov.b64 	%rd3735, {%r2726, %r2725};
	xor.b64  	%rd3736, %rd3734, %rd3735;
	and.b64  	%rd3737, %rd3717, %rd3692;
	xor.b64  	%rd3738, %rd3717, %rd3692;
	and.b64  	%rd3739, %rd3738, %rd3667;
	or.b64  	%rd3740, %rd3739, %rd3737;
	add.s64 	%rd3741, %rd3730, %rd3740;
	add.s64 	%rd3742, %rd3741, %rd3736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2727,%dummy}, %rd3731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2728}, %rd3731;
	}
	shf.r.wrap.b32 	%r2729, %r2728, %r2727, 14;
	shf.r.wrap.b32 	%r2730, %r2727, %r2728, 14;
	mov.b64 	%rd3743, {%r2730, %r2729};
	shf.r.wrap.b32 	%r2731, %r2728, %r2727, 18;
	shf.r.wrap.b32 	%r2732, %r2727, %r2728, 18;
	mov.b64 	%rd3744, {%r2732, %r2731};
	xor.b64  	%rd3745, %rd3744, %rd3743;
	shf.l.wrap.b32 	%r2733, %r2727, %r2728, 23;
	shf.l.wrap.b32 	%r2734, %r2728, %r2727, 23;
	mov.b64 	%rd3746, {%r2734, %r2733};
	xor.b64  	%rd3747, %rd3745, %rd3746;
	xor.b64  	%rd3748, %rd3706, %rd3681;
	and.b64  	%rd3749, %rd3731, %rd3748;
	xor.b64  	%rd3750, %rd3749, %rd3681;
	add.s64 	%rd3751, %rd3656, %rd10110;
	ld.const.u64 	%rd3752, [%rd10104+208];
	add.s64 	%rd3753, %rd3751, %rd3752;
	add.s64 	%rd3754, %rd3753, %rd3750;
	add.s64 	%rd3755, %rd3754, %rd3747;
	add.s64 	%rd3756, %rd3755, %rd3667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2735,%dummy}, %rd3742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2736}, %rd3742;
	}
	shf.r.wrap.b32 	%r2737, %r2736, %r2735, 28;
	shf.r.wrap.b32 	%r2738, %r2735, %r2736, 28;
	mov.b64 	%rd3757, {%r2738, %r2737};
	shf.l.wrap.b32 	%r2739, %r2735, %r2736, 30;
	shf.l.wrap.b32 	%r2740, %r2736, %r2735, 30;
	mov.b64 	%rd3758, {%r2740, %r2739};
	xor.b64  	%rd3759, %rd3758, %rd3757;
	shf.l.wrap.b32 	%r2741, %r2735, %r2736, 25;
	shf.l.wrap.b32 	%r2742, %r2736, %r2735, 25;
	mov.b64 	%rd3760, {%r2742, %r2741};
	xor.b64  	%rd3761, %rd3759, %rd3760;
	and.b64  	%rd3762, %rd3742, %rd3717;
	xor.b64  	%rd3763, %rd3742, %rd3717;
	and.b64  	%rd3764, %rd3763, %rd3692;
	or.b64  	%rd3765, %rd3764, %rd3762;
	add.s64 	%rd3766, %rd3755, %rd3765;
	add.s64 	%rd3767, %rd3766, %rd3761;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2743,%dummy}, %rd3756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2744}, %rd3756;
	}
	shf.r.wrap.b32 	%r2745, %r2744, %r2743, 14;
	shf.r.wrap.b32 	%r2746, %r2743, %r2744, 14;
	mov.b64 	%rd3768, {%r2746, %r2745};
	shf.r.wrap.b32 	%r2747, %r2744, %r2743, 18;
	shf.r.wrap.b32 	%r2748, %r2743, %r2744, 18;
	mov.b64 	%rd3769, {%r2748, %r2747};
	xor.b64  	%rd3770, %rd3769, %rd3768;
	shf.l.wrap.b32 	%r2749, %r2743, %r2744, 23;
	shf.l.wrap.b32 	%r2750, %r2744, %r2743, 23;
	mov.b64 	%rd3771, {%r2750, %r2749};
	xor.b64  	%rd3772, %rd3770, %rd3771;
	xor.b64  	%rd3773, %rd3731, %rd3706;
	and.b64  	%rd3774, %rd3756, %rd3773;
	xor.b64  	%rd3775, %rd3774, %rd3706;
	add.s64 	%rd3776, %rd3681, %rd10109;
	ld.const.u64 	%rd3777, [%rd10104+216];
	add.s64 	%rd3778, %rd3776, %rd3777;
	add.s64 	%rd3779, %rd3778, %rd3775;
	add.s64 	%rd3780, %rd3779, %rd3772;
	add.s64 	%rd3781, %rd3780, %rd3692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2751,%dummy}, %rd3767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2752}, %rd3767;
	}
	shf.r.wrap.b32 	%r2753, %r2752, %r2751, 28;
	shf.r.wrap.b32 	%r2754, %r2751, %r2752, 28;
	mov.b64 	%rd3782, {%r2754, %r2753};
	shf.l.wrap.b32 	%r2755, %r2751, %r2752, 30;
	shf.l.wrap.b32 	%r2756, %r2752, %r2751, 30;
	mov.b64 	%rd3783, {%r2756, %r2755};
	xor.b64  	%rd3784, %rd3783, %rd3782;
	shf.l.wrap.b32 	%r2757, %r2751, %r2752, 25;
	shf.l.wrap.b32 	%r2758, %r2752, %r2751, 25;
	mov.b64 	%rd3785, {%r2758, %r2757};
	xor.b64  	%rd3786, %rd3784, %rd3785;
	and.b64  	%rd3787, %rd3767, %rd3742;
	xor.b64  	%rd3788, %rd3767, %rd3742;
	and.b64  	%rd3789, %rd3788, %rd3717;
	or.b64  	%rd3790, %rd3789, %rd3787;
	add.s64 	%rd3791, %rd3780, %rd3790;
	add.s64 	%rd3792, %rd3791, %rd3786;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2759,%dummy}, %rd3781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2760}, %rd3781;
	}
	shf.r.wrap.b32 	%r2761, %r2760, %r2759, 14;
	shf.r.wrap.b32 	%r2762, %r2759, %r2760, 14;
	mov.b64 	%rd3793, {%r2762, %r2761};
	shf.r.wrap.b32 	%r2763, %r2760, %r2759, 18;
	shf.r.wrap.b32 	%r2764, %r2759, %r2760, 18;
	mov.b64 	%rd3794, {%r2764, %r2763};
	xor.b64  	%rd3795, %rd3794, %rd3793;
	shf.l.wrap.b32 	%r2765, %r2759, %r2760, 23;
	shf.l.wrap.b32 	%r2766, %r2760, %r2759, 23;
	mov.b64 	%rd3796, {%r2766, %r2765};
	xor.b64  	%rd3797, %rd3795, %rd3796;
	xor.b64  	%rd3798, %rd3756, %rd3731;
	and.b64  	%rd3799, %rd3781, %rd3798;
	xor.b64  	%rd3800, %rd3799, %rd3731;
	add.s64 	%rd3801, %rd3706, %rd10108;
	ld.const.u64 	%rd3802, [%rd10104+224];
	add.s64 	%rd3803, %rd3801, %rd3802;
	add.s64 	%rd3804, %rd3803, %rd3800;
	add.s64 	%rd3805, %rd3804, %rd3797;
	add.s64 	%rd10120, %rd3805, %rd3717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2767,%dummy}, %rd3792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2768}, %rd3792;
	}
	shf.r.wrap.b32 	%r2769, %r2768, %r2767, 28;
	shf.r.wrap.b32 	%r2770, %r2767, %r2768, 28;
	mov.b64 	%rd3806, {%r2770, %r2769};
	shf.l.wrap.b32 	%r2771, %r2767, %r2768, 30;
	shf.l.wrap.b32 	%r2772, %r2768, %r2767, 30;
	mov.b64 	%rd3807, {%r2772, %r2771};
	xor.b64  	%rd3808, %rd3807, %rd3806;
	shf.l.wrap.b32 	%r2773, %r2767, %r2768, 25;
	shf.l.wrap.b32 	%r2774, %r2768, %r2767, 25;
	mov.b64 	%rd3809, {%r2774, %r2773};
	xor.b64  	%rd3810, %rd3808, %rd3809;
	and.b64  	%rd3811, %rd3792, %rd3767;
	xor.b64  	%rd3812, %rd3792, %rd3767;
	and.b64  	%rd3813, %rd3812, %rd3742;
	or.b64  	%rd3814, %rd3813, %rd3811;
	add.s64 	%rd3815, %rd3805, %rd3814;
	add.s64 	%rd10116, %rd3815, %rd3810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2775,%dummy}, %rd10120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2776}, %rd10120;
	}
	shf.r.wrap.b32 	%r2777, %r2776, %r2775, 14;
	shf.r.wrap.b32 	%r2778, %r2775, %r2776, 14;
	mov.b64 	%rd3816, {%r2778, %r2777};
	shf.r.wrap.b32 	%r2779, %r2776, %r2775, 18;
	shf.r.wrap.b32 	%r2780, %r2775, %r2776, 18;
	mov.b64 	%rd3817, {%r2780, %r2779};
	xor.b64  	%rd3818, %rd3817, %rd3816;
	shf.l.wrap.b32 	%r2781, %r2775, %r2776, 23;
	shf.l.wrap.b32 	%r2782, %r2776, %r2775, 23;
	mov.b64 	%rd3819, {%r2782, %r2781};
	xor.b64  	%rd3820, %rd3818, %rd3819;
	xor.b64  	%rd3821, %rd3781, %rd3756;
	and.b64  	%rd3822, %rd10120, %rd3821;
	xor.b64  	%rd3823, %rd3822, %rd3756;
	add.s64 	%rd3824, %rd3731, %rd10107;
	ld.const.u64 	%rd3825, [%rd10104+232];
	add.s64 	%rd3826, %rd3824, %rd3825;
	add.s64 	%rd3827, %rd3826, %rd3823;
	add.s64 	%rd3828, %rd3827, %rd3820;
	add.s64 	%rd10119, %rd3828, %rd3742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2783,%dummy}, %rd10116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2784}, %rd10116;
	}
	shf.r.wrap.b32 	%r2785, %r2784, %r2783, 28;
	shf.r.wrap.b32 	%r2786, %r2783, %r2784, 28;
	mov.b64 	%rd3829, {%r2786, %r2785};
	shf.l.wrap.b32 	%r2787, %r2783, %r2784, 30;
	shf.l.wrap.b32 	%r2788, %r2784, %r2783, 30;
	mov.b64 	%rd3830, {%r2788, %r2787};
	xor.b64  	%rd3831, %rd3830, %rd3829;
	shf.l.wrap.b32 	%r2789, %r2783, %r2784, 25;
	shf.l.wrap.b32 	%r2790, %r2784, %r2783, 25;
	mov.b64 	%rd3832, {%r2790, %r2789};
	xor.b64  	%rd3833, %rd3831, %rd3832;
	and.b64  	%rd3834, %rd10116, %rd3792;
	xor.b64  	%rd3835, %rd10116, %rd3792;
	and.b64  	%rd3836, %rd3835, %rd3767;
	or.b64  	%rd3837, %rd3836, %rd3834;
	add.s64 	%rd3838, %rd3828, %rd3837;
	add.s64 	%rd10115, %rd3838, %rd3833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2791,%dummy}, %rd10119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2792}, %rd10119;
	}
	shf.r.wrap.b32 	%r2793, %r2792, %r2791, 14;
	shf.r.wrap.b32 	%r2794, %r2791, %r2792, 14;
	mov.b64 	%rd3839, {%r2794, %r2793};
	shf.r.wrap.b32 	%r2795, %r2792, %r2791, 18;
	shf.r.wrap.b32 	%r2796, %r2791, %r2792, 18;
	mov.b64 	%rd3840, {%r2796, %r2795};
	xor.b64  	%rd3841, %rd3840, %rd3839;
	shf.l.wrap.b32 	%r2797, %r2791, %r2792, 23;
	shf.l.wrap.b32 	%r2798, %r2792, %r2791, 23;
	mov.b64 	%rd3842, {%r2798, %r2797};
	xor.b64  	%rd3843, %rd3841, %rd3842;
	xor.b64  	%rd3844, %rd10120, %rd3781;
	and.b64  	%rd3845, %rd10119, %rd3844;
	xor.b64  	%rd3846, %rd3845, %rd3781;
	add.s64 	%rd3847, %rd3756, %rd10106;
	ld.const.u64 	%rd3848, [%rd10104+240];
	add.s64 	%rd3849, %rd3847, %rd3848;
	add.s64 	%rd3850, %rd3849, %rd3846;
	add.s64 	%rd3851, %rd3850, %rd3843;
	add.s64 	%rd10118, %rd3851, %rd3767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2799,%dummy}, %rd10115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2800}, %rd10115;
	}
	shf.r.wrap.b32 	%r2801, %r2800, %r2799, 28;
	shf.r.wrap.b32 	%r2802, %r2799, %r2800, 28;
	mov.b64 	%rd3852, {%r2802, %r2801};
	shf.l.wrap.b32 	%r2803, %r2799, %r2800, 30;
	shf.l.wrap.b32 	%r2804, %r2800, %r2799, 30;
	mov.b64 	%rd3853, {%r2804, %r2803};
	xor.b64  	%rd3854, %rd3853, %rd3852;
	shf.l.wrap.b32 	%r2805, %r2799, %r2800, 25;
	shf.l.wrap.b32 	%r2806, %r2800, %r2799, 25;
	mov.b64 	%rd3855, {%r2806, %r2805};
	xor.b64  	%rd3856, %rd3854, %rd3855;
	and.b64  	%rd3857, %rd10115, %rd10116;
	xor.b64  	%rd3858, %rd10115, %rd10116;
	and.b64  	%rd3859, %rd3858, %rd3792;
	or.b64  	%rd3860, %rd3859, %rd3857;
	add.s64 	%rd3861, %rd3851, %rd3860;
	add.s64 	%rd10114, %rd3861, %rd3856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2807,%dummy}, %rd10118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2808}, %rd10118;
	}
	shf.r.wrap.b32 	%r2809, %r2808, %r2807, 14;
	shf.r.wrap.b32 	%r2810, %r2807, %r2808, 14;
	mov.b64 	%rd3862, {%r2810, %r2809};
	shf.r.wrap.b32 	%r2811, %r2808, %r2807, 18;
	shf.r.wrap.b32 	%r2812, %r2807, %r2808, 18;
	mov.b64 	%rd3863, {%r2812, %r2811};
	xor.b64  	%rd3864, %rd3863, %rd3862;
	shf.l.wrap.b32 	%r2813, %r2807, %r2808, 23;
	shf.l.wrap.b32 	%r2814, %r2808, %r2807, 23;
	mov.b64 	%rd3865, {%r2814, %r2813};
	xor.b64  	%rd3866, %rd3864, %rd3865;
	xor.b64  	%rd3867, %rd10119, %rd10120;
	and.b64  	%rd3868, %rd10118, %rd3867;
	xor.b64  	%rd3869, %rd3868, %rd10120;
	add.s64 	%rd3870, %rd3781, %rd10105;
	ld.const.u64 	%rd3871, [%rd10104+248];
	add.s64 	%rd3872, %rd3870, %rd3871;
	add.s64 	%rd3873, %rd3872, %rd3869;
	add.s64 	%rd3874, %rd3873, %rd3866;
	add.s64 	%rd10117, %rd3874, %rd3792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2815,%dummy}, %rd10114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2816}, %rd10114;
	}
	shf.r.wrap.b32 	%r2817, %r2816, %r2815, 28;
	shf.r.wrap.b32 	%r2818, %r2815, %r2816, 28;
	mov.b64 	%rd3875, {%r2818, %r2817};
	shf.l.wrap.b32 	%r2819, %r2815, %r2816, 30;
	shf.l.wrap.b32 	%r2820, %r2816, %r2815, 30;
	mov.b64 	%rd3876, {%r2820, %r2819};
	xor.b64  	%rd3877, %rd3876, %rd3875;
	shf.l.wrap.b32 	%r2821, %r2815, %r2816, 25;
	shf.l.wrap.b32 	%r2822, %r2816, %r2815, 25;
	mov.b64 	%rd3878, {%r2822, %r2821};
	xor.b64  	%rd3879, %rd3877, %rd3878;
	and.b64  	%rd3880, %rd10114, %rd10115;
	xor.b64  	%rd3881, %rd10114, %rd10115;
	and.b64  	%rd3882, %rd3881, %rd10116;
	or.b64  	%rd3883, %rd3882, %rd3880;
	add.s64 	%rd3884, %rd3874, %rd3883;
	add.s64 	%rd10113, %rd3884, %rd3879;
	add.s32 	%r7612, %r7612, 16;
	setp.lt.s32	%p20, %r7612, 80;
	mov.u64 	%rd10104, %rd293;
	@%p20 bra 	BB3_14;

	ld.const.u64 	%rd10132, [k_sha512+96];
	ld.const.u64 	%rd10133, [k_sha512+88];
	ld.const.u64 	%rd10134, [k_sha512+80];
	ld.const.u64 	%rd10135, [k_sha512+72];
	ld.const.u64 	%rd10136, [k_sha512+64];
	ld.const.u64 	%rd10137, [k_sha512+56];
	add.s64 	%rd3885, %rd10113, %rd41;
	mov.b64	{%r7615, %r7616}, %rd3885;
	add.s64 	%rd3886, %rd10114, %rd40;
	mov.b64	{%r7613, %r7614}, %rd3886;
	add.s64 	%rd3887, %rd10115, %rd39;
	mov.b64	{%r7619, %r7620}, %rd3887;
	add.s64 	%rd3888, %rd10116, %rd38;
	mov.b64	{%r7617, %r7618}, %rd3888;
	add.s64 	%rd3889, %rd10117, %rd37;
	mov.b64	{%r7623, %r7624}, %rd3889;
	add.s64 	%rd3890, %rd10118, %rd36;
	mov.b64	{%r7621, %r7622}, %rd3890;
	add.s64 	%rd3891, %rd10119, %rd35;
	mov.b64	{%r7627, %r7628}, %rd3891;
	add.s64 	%rd3892, %rd10120, %rd34;
	mov.b64	{%r7625, %r7626}, %rd3892;
	mov.u32 	%r7630, %r7629;
	mov.u32 	%r7631, %r7629;
	mov.u32 	%r7632, %r7629;
	mov.u32 	%r7633, %r7629;
	mov.u32 	%r7634, %r7629;
	mov.u32 	%r7635, %r7629;
	mov.u32 	%r7636, %r7629;
	mov.u32 	%r7637, %r7629;
	mov.u32 	%r7638, %r7629;
	mov.u32 	%r7639, %r7629;
	mov.u32 	%r7640, %r7629;
	mov.u32 	%r7641, %r7629;
	mov.u32 	%r7642, %r7629;
	mov.u32 	%r7643, %r7629;
	mov.u32 	%r7644, %r7629;

BB3_16:
	xor.b32  	%r2840, %r7613, 909522486;
	xor.b32  	%r2841, %r7614, 909522486;
	xor.b32  	%r2842, %r7615, 909522486;
	xor.b32  	%r2843, %r7616, 909522486;
	add.u64 	%rd3893, %SP, 0;
	add.u64 	%rd3894, %SPL, 0;
	st.local.v4.u32 	[%rd3894], {%r2843, %r2842, %r2841, %r2840};
	xor.b32  	%r2844, %r7617, 909522486;
	xor.b32  	%r2845, %r7618, 909522486;
	xor.b32  	%r2846, %r7619, 909522486;
	xor.b32  	%r2847, %r7620, 909522486;
	add.u64 	%rd3895, %SP, 16;
	add.u64 	%rd3896, %SPL, 16;
	st.local.v4.u32 	[%rd3896], {%r2847, %r2846, %r2845, %r2844};
	xor.b32  	%r2848, %r7621, 909522486;
	xor.b32  	%r2849, %r7622, 909522486;
	xor.b32  	%r2850, %r7623, 909522486;
	xor.b32  	%r2851, %r7624, 909522486;
	add.u64 	%rd3897, %SP, 32;
	add.u64 	%rd3898, %SPL, 32;
	st.local.v4.u32 	[%rd3898], {%r2851, %r2850, %r2849, %r2848};
	xor.b32  	%r2852, %r7625, 909522486;
	xor.b32  	%r2853, %r7626, 909522486;
	xor.b32  	%r2854, %r7627, 909522486;
	xor.b32  	%r2855, %r7628, 909522486;
	add.u64 	%rd3899, %SP, 48;
	add.u64 	%rd3900, %SPL, 48;
	st.local.v4.u32 	[%rd3900], {%r2855, %r2854, %r2853, %r2852};
	xor.b32  	%r2856, %r7629, 909522486;
	xor.b32  	%r2857, %r7630, 909522486;
	xor.b32  	%r2858, %r7631, 909522486;
	xor.b32  	%r2859, %r7632, 909522486;
	add.u64 	%rd3901, %SP, 64;
	add.u64 	%rd3902, %SPL, 64;
	st.local.v4.u32 	[%rd3902], {%r2859, %r2858, %r2857, %r2856};
	xor.b32  	%r2860, %r7633, 909522486;
	xor.b32  	%r2861, %r7634, 909522486;
	xor.b32  	%r2862, %r7635, 909522486;
	xor.b32  	%r2863, %r7636, 909522486;
	add.u64 	%rd3903, %SP, 80;
	add.u64 	%rd3904, %SPL, 80;
	st.local.v4.u32 	[%rd3904], {%r2863, %r2862, %r2861, %r2860};
	xor.b32  	%r2864, %r7637, 909522486;
	xor.b32  	%r2865, %r7638, 909522486;
	xor.b32  	%r2866, %r7639, 909522486;
	xor.b32  	%r2867, %r7640, 909522486;
	add.u64 	%rd3905, %SP, 96;
	add.u64 	%rd3906, %SPL, 96;
	st.local.v4.u32 	[%rd3906], {%r2867, %r2866, %r2865, %r2864};
	xor.b32  	%r2868, %r7641, 909522486;
	xor.b32  	%r2869, %r7642, 909522486;
	xor.b32  	%r2870, %r7643, 909522486;
	xor.b32  	%r2871, %r7644, 909522486;
	add.u64 	%rd3907, %SP, 112;
	add.u64 	%rd3908, %SPL, 112;
	st.local.v4.u32 	[%rd3908], {%r2871, %r2870, %r2869, %r2868};
	add.u64 	%rd3909, %SP, 128;
	add.u64 	%rd3910, %SPL, 128;
	mov.u64 	%rd3911, 7640891576956012808;
	st.local.u64 	[%rd3910], %rd3911;
	add.s64 	%rd310, %rd3910, 8;
	mov.u64 	%rd3912, -4942790177534073029;
	st.local.u64 	[%rd3910+8], %rd3912;
	add.s64 	%rd311, %rd3910, 16;
	mov.u64 	%rd3913, 4354685564936845355;
	st.local.u64 	[%rd3910+16], %rd3913;
	add.s64 	%rd312, %rd3910, 24;
	mov.u64 	%rd3914, -6534734903238641935;
	st.local.u64 	[%rd3910+24], %rd3914;
	add.s64 	%rd313, %rd3910, 32;
	mov.u64 	%rd3915, 5840696475078001361;
	st.local.u64 	[%rd3910+32], %rd3915;
	add.s64 	%rd314, %rd3910, 40;
	mov.u64 	%rd3916, -7276294671716946913;
	st.local.u64 	[%rd3910+40], %rd3916;
	add.s64 	%rd315, %rd3910, 48;
	mov.u64 	%rd3917, 2270897969802886507;
	st.local.u64 	[%rd3910+48], %rd3917;
	add.s64 	%rd316, %rd3910, 56;
	mov.u64 	%rd3918, 6620516959819538809;
	st.local.u64 	[%rd3910+56], %rd3918;
	mov.u32 	%r2872, 0;
	st.local.v2.u32 	[%rd3910+64], {%r2872, %r2872};
	st.local.v2.u32 	[%rd3910+72], {%r2872, %r2872};
	st.local.v2.u32 	[%rd3910+80], {%r2872, %r2872};
	st.local.v2.u32 	[%rd3910+88], {%r2872, %r2872};
	st.local.v2.u32 	[%rd3910+96], {%r2872, %r2872};
	st.local.v2.u32 	[%rd3910+104], {%r2872, %r2872};
	st.local.v2.u32 	[%rd3910+112], {%r2872, %r2872};
	st.local.v2.u32 	[%rd3910+120], {%r2872, %r2872};
	st.local.v2.u32 	[%rd3910+128], {%r2872, %r2872};
	st.local.v2.u32 	[%rd3910+136], {%r2872, %r2872};
	st.local.v2.u32 	[%rd3910+144], {%r2872, %r2872};
	st.local.v2.u32 	[%rd3910+152], {%r2872, %r2872};
	st.local.v2.u32 	[%rd3910+160], {%r2872, %r2872};
	st.local.v2.u32 	[%rd3910+168], {%r2872, %r2872};
	st.local.v2.u32 	[%rd3910+176], {%r2872, %r2872};
	st.local.v2.u32 	[%rd3910+184], {%r2872, %r2872};
	st.local.u32 	[%rd3910+192], %r2872;
	mov.u32 	%r2873, 128;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd3909;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3893;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd3895;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd3897;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd3899;
	.param .b64 param5;
	st.param.b64	[param5+0], %rd3901;
	.param .b64 param6;
	st.param.b64	[param6+0], %rd3903;
	.param .b64 param7;
	st.param.b64	[param7+0], %rd3905;
	.param .b64 param8;
	st.param.b64	[param8+0], %rd3907;
	.param .b32 param9;
	st.param.b32	[param9+0], %r2873;
	call.uni 
	sha512_update_128, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7, 
	param8, 
	param9
	);
	
	//{
	}// Callseq End 15
	xor.b32  	%r2874, %r7615, 1549556828;
	xor.b32  	%r2875, %r7616, 1549556828;
	xor.b32  	%r2876, %r7613, 1549556828;
	xor.b32  	%r2877, %r7614, 1549556828;
	st.local.v4.u32 	[%rd3894], {%r2875, %r2874, %r2877, %r2876};
	xor.b32  	%r2878, %r7619, 1549556828;
	xor.b32  	%r2879, %r7620, 1549556828;
	xor.b32  	%r2880, %r7617, 1549556828;
	xor.b32  	%r2881, %r7618, 1549556828;
	st.local.v4.u32 	[%rd3896], {%r2879, %r2878, %r2881, %r2880};
	xor.b32  	%r2882, %r7623, 1549556828;
	xor.b32  	%r2883, %r7624, 1549556828;
	xor.b32  	%r2884, %r7621, 1549556828;
	xor.b32  	%r2885, %r7622, 1549556828;
	st.local.v4.u32 	[%rd3898], {%r2883, %r2882, %r2885, %r2884};
	xor.b32  	%r2886, %r7627, 1549556828;
	xor.b32  	%r2887, %r7628, 1549556828;
	xor.b32  	%r2888, %r7625, 1549556828;
	xor.b32  	%r2889, %r7626, 1549556828;
	st.local.v4.u32 	[%rd3900], {%r2887, %r2886, %r2889, %r2888};
	xor.b32  	%r2890, %r7631, 1549556828;
	xor.b32  	%r2891, %r7632, 1549556828;
	xor.b32  	%r2892, %r7629, 1549556828;
	xor.b32  	%r2893, %r7630, 1549556828;
	st.local.v4.u32 	[%rd3902], {%r2891, %r2890, %r2893, %r2892};
	xor.b32  	%r2894, %r7635, 1549556828;
	xor.b32  	%r2895, %r7636, 1549556828;
	xor.b32  	%r2896, %r7633, 1549556828;
	xor.b32  	%r2897, %r7634, 1549556828;
	st.local.v4.u32 	[%rd3904], {%r2895, %r2894, %r2897, %r2896};
	xor.b32  	%r2898, %r7639, 1549556828;
	xor.b32  	%r2899, %r7640, 1549556828;
	xor.b32  	%r2900, %r7637, 1549556828;
	xor.b32  	%r2901, %r7638, 1549556828;
	st.local.v4.u32 	[%rd3906], {%r2899, %r2898, %r2901, %r2900};
	xor.b32  	%r2902, %r7643, 1549556828;
	xor.b32  	%r2903, %r7644, 1549556828;
	xor.b32  	%r2904, %r7641, 1549556828;
	xor.b32  	%r2905, %r7642, 1549556828;
	st.local.v4.u32 	[%rd3908], {%r2903, %r2902, %r2905, %r2904};
	st.local.u64 	[%rd3910+200], %rd3911;
	add.s64 	%rd318, %rd3910, 208;
	st.local.u64 	[%rd3910+208], %rd3912;
	add.s64 	%rd319, %rd3910, 216;
	st.local.u64 	[%rd3910+216], %rd3913;
	st.local.u64 	[%rd3910+224], %rd3914;
	st.local.u64 	[%rd3910+232], %rd3915;
	st.local.u64 	[%rd3910+240], %rd3916;
	st.local.u64 	[%rd3910+248], %rd3917;
	st.local.u64 	[%rd3910+256], %rd3918;
	add.s64 	%rd339, %rd3910, 376;
	add.s64 	%rd340, %rd3910, 384;
	st.local.u32 	[%rd3910+392], %r2873;
	st.local.v2.u32 	[%rd3910+264], {%r2875, %r2874};
	st.local.v2.u32 	[%rd3910+272], {%r2877, %r2876};
	st.local.v2.u32 	[%rd3910+280], {%r2879, %r2878};
	st.local.v2.u32 	[%rd3910+288], {%r2881, %r2880};
	st.local.v2.u32 	[%rd3910+296], {%r2883, %r2882};
	st.local.v2.u32 	[%rd3910+304], {%r2885, %r2884};
	st.local.v2.u32 	[%rd3910+312], {%r2887, %r2886};
	st.local.v2.u32 	[%rd3910+320], {%r2889, %r2888};
	st.local.v2.u32 	[%rd3910+328], {%r2891, %r2890};
	st.local.v2.u32 	[%rd3910+336], {%r2893, %r2892};
	st.local.v2.u32 	[%rd3910+344], {%r2895, %r2894};
	st.local.v2.u32 	[%rd3910+352], {%r2897, %r2896};
	st.local.v2.u32 	[%rd3910+360], {%r2899, %r2898};
	st.local.v2.u32 	[%rd3910+368], {%r2901, %r2900};
	st.local.v2.u32 	[%rd3910+376], {%r2903, %r2902};
	st.local.v2.u32 	[%rd3910+384], {%r2905, %r2904};
	mov.b64	%rd10161, {%r2874, %r2875};
	mov.b64	%rd10162, {%r2876, %r2877};
	mov.b64	%rd10163, {%r2878, %r2879};
	mov.b64	%rd10164, {%r2880, %r2881};
	mov.b64	%rd10165, {%r2882, %r2883};
	mov.b64	%rd10166, {%r2884, %r2885};
	mov.b64	%rd10167, {%r2886, %r2887};
	mov.b64	%rd10168, {%r2888, %r2889};
	mov.b64	%rd10152, {%r2890, %r2891};
	mov.b64	%rd10151, {%r2892, %r2893};
	mov.b64	%rd10150, {%r2894, %r2895};
	mov.b64	%rd10149, {%r2896, %r2897};
	mov.b64	%rd10148, {%r2898, %r2899};
	mov.b64	%rd10147, {%r2900, %r2901};
	mov.b64	%rd10146, {%r2902, %r2903};
	mov.b64	%rd10145, {%r2904, %r2905};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2906,%dummy}, %rd3915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2907}, %rd3915;
	}
	shf.r.wrap.b32 	%r2908, %r2907, %r2906, 18;
	shf.r.wrap.b32 	%r2909, %r2906, %r2907, 18;
	mov.b64 	%rd3919, {%r2909, %r2908};
	shf.r.wrap.b32 	%r2910, %r2907, %r2906, 14;
	shf.r.wrap.b32 	%r2911, %r2906, %r2907, 14;
	mov.b64 	%rd3920, {%r2911, %r2910};
	xor.b64  	%rd3921, %rd3919, %rd3920;
	shf.l.wrap.b32 	%r2912, %r2906, %r2907, 23;
	shf.l.wrap.b32 	%r2913, %r2907, %r2906, 23;
	mov.b64 	%rd3922, {%r2913, %r2912};
	xor.b64  	%rd3923, %rd3921, %rd3922;
	add.s64 	%rd3924, %rd10161, %rd10144;
	add.s64 	%rd3925, %rd3924, %rd3923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2914}, %rd3911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2915,%dummy}, %rd3911;
	}
	shf.l.wrap.b32 	%r2916, %r2915, %r2914, 30;
	shf.l.wrap.b32 	%r2917, %r2914, %r2915, 30;
	mov.b64 	%rd3926, {%r2917, %r2916};
	shf.r.wrap.b32 	%r2918, %r2914, %r2915, 28;
	shf.r.wrap.b32 	%r2919, %r2915, %r2914, 28;
	mov.b64 	%rd3927, {%r2919, %r2918};
	xor.b64  	%rd3928, %rd3926, %rd3927;
	shf.l.wrap.b32 	%r2920, %r2915, %r2914, 25;
	shf.l.wrap.b32 	%r2921, %r2914, %r2915, 25;
	mov.b64 	%rd3929, {%r2921, %r2920};
	xor.b64  	%rd3930, %rd3928, %rd3929;
	add.s64 	%rd3931, %rd3925, %rd3930;
	add.s64 	%rd3932, %rd3925, 2357225248857953701;
	add.s64 	%rd3933, %rd3931, -5343946410804754465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2922,%dummy}, %rd3932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2923}, %rd3932;
	}
	shf.r.wrap.b32 	%r2924, %r2923, %r2922, 14;
	shf.r.wrap.b32 	%r2925, %r2922, %r2923, 14;
	mov.b64 	%rd3934, {%r2925, %r2924};
	shf.r.wrap.b32 	%r2926, %r2923, %r2922, 18;
	shf.r.wrap.b32 	%r2927, %r2922, %r2923, 18;
	mov.b64 	%rd3935, {%r2927, %r2926};
	xor.b64  	%rd3936, %rd3935, %rd3934;
	shf.l.wrap.b32 	%r2928, %r2922, %r2923, 23;
	shf.l.wrap.b32 	%r2929, %r2923, %r2922, 23;
	mov.b64 	%rd3937, {%r2929, %r2928};
	xor.b64  	%rd3938, %rd3936, %rd3937;
	and.b64  	%rd3939, %rd3932, -3887949035690463538;
	xor.b64  	%rd3940, %rd3939, -7276294671716946913;
	add.s64 	%rd3941, %rd10162, %rd10143;
	add.s64 	%rd3942, %rd3941, %rd3940;
	add.s64 	%rd3943, %rd3942, %rd3938;
	and.b64  	%rd3944, %rd3933, 7640891576956012808;
	and.b64  	%rd3945, %rd3933, -4942790177534073029;
	xor.b64  	%rd3946, %rd3945, 3026882967131160840;
	or.b64  	%rd3947, %rd3946, %rd3944;
	add.s64 	%rd3948, %rd3943, %rd3947;
	add.s64 	%rd3949, %rd3943, 6625583534739731862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2930,%dummy}, %rd3933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2931}, %rd3933;
	}
	shf.r.wrap.b32 	%r2932, %r2931, %r2930, 28;
	shf.r.wrap.b32 	%r2933, %r2930, %r2931, 28;
	mov.b64 	%rd3950, {%r2933, %r2932};
	shf.l.wrap.b32 	%r2934, %r2930, %r2931, 30;
	shf.l.wrap.b32 	%r2935, %r2931, %r2930, 30;
	mov.b64 	%rd3951, {%r2935, %r2934};
	xor.b64  	%rd3952, %rd3951, %rd3950;
	shf.l.wrap.b32 	%r2936, %r2930, %r2931, 25;
	shf.l.wrap.b32 	%r2937, %r2931, %r2930, 25;
	mov.b64 	%rd3953, {%r2937, %r2936};
	xor.b64  	%rd3954, %rd3952, %rd3953;
	add.s64 	%rd3955, %rd3948, %rd3954;
	add.s64 	%rd3956, %rd3955, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2938,%dummy}, %rd3949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2939}, %rd3949;
	}
	shf.r.wrap.b32 	%r2940, %r2939, %r2938, 14;
	shf.r.wrap.b32 	%r2941, %r2938, %r2939, 14;
	mov.b64 	%rd3957, {%r2941, %r2940};
	shf.r.wrap.b32 	%r2942, %r2939, %r2938, 18;
	shf.r.wrap.b32 	%r2943, %r2938, %r2939, 18;
	mov.b64 	%rd3958, {%r2943, %r2942};
	xor.b64  	%rd3959, %rd3958, %rd3957;
	shf.l.wrap.b32 	%r2944, %r2938, %r2939, 23;
	shf.l.wrap.b32 	%r2945, %r2939, %r2938, 23;
	mov.b64 	%rd3960, {%r2945, %r2944};
	xor.b64  	%rd3961, %rd3959, %rd3960;
	xor.b64  	%rd3962, %rd3932, 5840696475078001361;
	and.b64  	%rd3963, %rd3949, %rd3962;
	xor.b64  	%rd3964, %rd3963, 5840696475078001361;
	add.s64 	%rd3965, %rd10163, %rd10142;
	add.s64 	%rd3966, %rd3965, %rd3964;
	add.s64 	%rd3967, %rd3966, %rd3961;
	and.b64  	%rd3968, %rd3956, %rd3933;
	xor.b64  	%rd3969, %rd3956, %rd3933;
	and.b64  	%rd3970, %rd3969, 7640891576956012808;
	or.b64  	%rd3971, %rd3970, %rd3968;
	add.s64 	%rd3972, %rd3967, %rd3971;
	add.s64 	%rd3973, %rd3967, 6227659224458531674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2946,%dummy}, %rd3956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2947}, %rd3956;
	}
	shf.r.wrap.b32 	%r2948, %r2947, %r2946, 28;
	shf.r.wrap.b32 	%r2949, %r2946, %r2947, 28;
	mov.b64 	%rd3974, {%r2949, %r2948};
	shf.l.wrap.b32 	%r2950, %r2946, %r2947, 30;
	shf.l.wrap.b32 	%r2951, %r2947, %r2946, 30;
	mov.b64 	%rd3975, {%r2951, %r2950};
	xor.b64  	%rd3976, %rd3975, %rd3974;
	shf.l.wrap.b32 	%r2952, %r2946, %r2947, 25;
	shf.l.wrap.b32 	%r2953, %r2947, %r2946, 25;
	mov.b64 	%rd3977, {%r2953, %r2952};
	xor.b64  	%rd3978, %rd3976, %rd3977;
	add.s64 	%rd3979, %rd3972, %rd3978;
	add.s64 	%rd3980, %rd3979, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2954,%dummy}, %rd3973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2955}, %rd3973;
	}
	shf.r.wrap.b32 	%r2956, %r2955, %r2954, 14;
	shf.r.wrap.b32 	%r2957, %r2954, %r2955, 14;
	mov.b64 	%rd3981, {%r2957, %r2956};
	shf.r.wrap.b32 	%r2958, %r2955, %r2954, 18;
	shf.r.wrap.b32 	%r2959, %r2954, %r2955, 18;
	mov.b64 	%rd3982, {%r2959, %r2958};
	xor.b64  	%rd3983, %rd3982, %rd3981;
	shf.l.wrap.b32 	%r2960, %r2954, %r2955, 23;
	shf.l.wrap.b32 	%r2961, %r2955, %r2954, 23;
	mov.b64 	%rd3984, {%r2961, %r2960};
	xor.b64  	%rd3985, %rd3983, %rd3984;
	xor.b64  	%rd3986, %rd3949, %rd3932;
	and.b64  	%rd3987, %rd3973, %rd3986;
	xor.b64  	%rd3988, %rd3987, %rd3932;
	add.s64 	%rd3989, %rd10164, %rd10141;
	add.s64 	%rd3990, %rd3989, %rd3988;
	add.s64 	%rd3991, %rd3990, %rd3985;
	and.b64  	%rd3992, %rd3980, %rd3956;
	xor.b64  	%rd3993, %rd3980, %rd3956;
	and.b64  	%rd3994, %rd3993, %rd3933;
	or.b64  	%rd3995, %rd3994, %rd3992;
	add.s64 	%rd3996, %rd3991, %rd3995;
	add.s64 	%rd3997, %rd3991, -4965156021675537447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2962,%dummy}, %rd3980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2963}, %rd3980;
	}
	shf.r.wrap.b32 	%r2964, %r2963, %r2962, 28;
	shf.r.wrap.b32 	%r2965, %r2962, %r2963, 28;
	mov.b64 	%rd3998, {%r2965, %r2964};
	shf.l.wrap.b32 	%r2966, %r2962, %r2963, 30;
	shf.l.wrap.b32 	%r2967, %r2963, %r2962, 30;
	mov.b64 	%rd3999, {%r2967, %r2966};
	xor.b64  	%rd4000, %rd3999, %rd3998;
	shf.l.wrap.b32 	%r2968, %r2962, %r2963, 25;
	shf.l.wrap.b32 	%r2969, %r2963, %r2962, 25;
	mov.b64 	%rd4001, {%r2969, %r2968};
	xor.b64  	%rd4002, %rd4000, %rd4001;
	add.s64 	%rd4003, %rd3996, %rd4002;
	add.s64 	%rd4004, %rd4003, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2970,%dummy}, %rd3997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2971}, %rd3997;
	}
	shf.r.wrap.b32 	%r2972, %r2971, %r2970, 14;
	shf.r.wrap.b32 	%r2973, %r2970, %r2971, 14;
	mov.b64 	%rd4005, {%r2973, %r2972};
	shf.r.wrap.b32 	%r2974, %r2971, %r2970, 18;
	shf.r.wrap.b32 	%r2975, %r2970, %r2971, 18;
	mov.b64 	%rd4006, {%r2975, %r2974};
	xor.b64  	%rd4007, %rd4006, %rd4005;
	shf.l.wrap.b32 	%r2976, %r2970, %r2971, 23;
	shf.l.wrap.b32 	%r2977, %r2971, %r2970, 23;
	mov.b64 	%rd4008, {%r2977, %r2976};
	xor.b64  	%rd4009, %rd4007, %rd4008;
	xor.b64  	%rd4010, %rd3973, %rd3949;
	and.b64  	%rd4011, %rd3997, %rd4010;
	xor.b64  	%rd4012, %rd4011, %rd3949;
	add.s64 	%rd4013, %rd3932, %rd10165;
	add.s64 	%rd4014, %rd4013, %rd10140;
	add.s64 	%rd4015, %rd4014, %rd4012;
	add.s64 	%rd4016, %rd4015, %rd4009;
	add.s64 	%rd4017, %rd4016, %rd3933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2978,%dummy}, %rd4004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2979}, %rd4004;
	}
	shf.r.wrap.b32 	%r2980, %r2979, %r2978, 28;
	shf.r.wrap.b32 	%r2981, %r2978, %r2979, 28;
	mov.b64 	%rd4018, {%r2981, %r2980};
	shf.l.wrap.b32 	%r2982, %r2978, %r2979, 30;
	shf.l.wrap.b32 	%r2983, %r2979, %r2978, 30;
	mov.b64 	%rd4019, {%r2983, %r2982};
	xor.b64  	%rd4020, %rd4019, %rd4018;
	shf.l.wrap.b32 	%r2984, %r2978, %r2979, 25;
	shf.l.wrap.b32 	%r2985, %r2979, %r2978, 25;
	mov.b64 	%rd4021, {%r2985, %r2984};
	xor.b64  	%rd4022, %rd4020, %rd4021;
	and.b64  	%rd4023, %rd4004, %rd3980;
	xor.b64  	%rd4024, %rd4004, %rd3980;
	and.b64  	%rd4025, %rd4024, %rd3956;
	or.b64  	%rd4026, %rd4025, %rd4023;
	add.s64 	%rd4027, %rd4016, %rd4026;
	add.s64 	%rd4028, %rd4027, %rd4022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2986,%dummy}, %rd4017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2987}, %rd4017;
	}
	shf.r.wrap.b32 	%r2988, %r2987, %r2986, 14;
	shf.r.wrap.b32 	%r2989, %r2986, %r2987, 14;
	mov.b64 	%rd4029, {%r2989, %r2988};
	shf.r.wrap.b32 	%r2990, %r2987, %r2986, 18;
	shf.r.wrap.b32 	%r2991, %r2986, %r2987, 18;
	mov.b64 	%rd4030, {%r2991, %r2990};
	xor.b64  	%rd4031, %rd4030, %rd4029;
	shf.l.wrap.b32 	%r2992, %r2986, %r2987, 23;
	shf.l.wrap.b32 	%r2993, %r2987, %r2986, 23;
	mov.b64 	%rd4032, {%r2993, %r2992};
	xor.b64  	%rd4033, %rd4031, %rd4032;
	xor.b64  	%rd4034, %rd3997, %rd3973;
	and.b64  	%rd4035, %rd4017, %rd4034;
	xor.b64  	%rd4036, %rd4035, %rd3973;
	add.s64 	%rd4037, %rd3949, %rd10166;
	add.s64 	%rd4038, %rd4037, %rd10139;
	add.s64 	%rd4039, %rd4038, %rd4036;
	add.s64 	%rd4040, %rd4039, %rd4033;
	add.s64 	%rd4041, %rd4040, %rd3956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2994,%dummy}, %rd4028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2995}, %rd4028;
	}
	shf.r.wrap.b32 	%r2996, %r2995, %r2994, 28;
	shf.r.wrap.b32 	%r2997, %r2994, %r2995, 28;
	mov.b64 	%rd4042, {%r2997, %r2996};
	shf.l.wrap.b32 	%r2998, %r2994, %r2995, 30;
	shf.l.wrap.b32 	%r2999, %r2995, %r2994, 30;
	mov.b64 	%rd4043, {%r2999, %r2998};
	xor.b64  	%rd4044, %rd4043, %rd4042;
	shf.l.wrap.b32 	%r3000, %r2994, %r2995, 25;
	shf.l.wrap.b32 	%r3001, %r2995, %r2994, 25;
	mov.b64 	%rd4045, {%r3001, %r3000};
	xor.b64  	%rd4046, %rd4044, %rd4045;
	and.b64  	%rd4047, %rd4028, %rd4004;
	xor.b64  	%rd4048, %rd4028, %rd4004;
	and.b64  	%rd4049, %rd4048, %rd3980;
	or.b64  	%rd4050, %rd4049, %rd4047;
	add.s64 	%rd4051, %rd4040, %rd4050;
	add.s64 	%rd4052, %rd4051, %rd4046;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3002,%dummy}, %rd4041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3003}, %rd4041;
	}
	shf.r.wrap.b32 	%r3004, %r3003, %r3002, 14;
	shf.r.wrap.b32 	%r3005, %r3002, %r3003, 14;
	mov.b64 	%rd4053, {%r3005, %r3004};
	shf.r.wrap.b32 	%r3006, %r3003, %r3002, 18;
	shf.r.wrap.b32 	%r3007, %r3002, %r3003, 18;
	mov.b64 	%rd4054, {%r3007, %r3006};
	xor.b64  	%rd4055, %rd4054, %rd4053;
	shf.l.wrap.b32 	%r3008, %r3002, %r3003, 23;
	shf.l.wrap.b32 	%r3009, %r3003, %r3002, 23;
	mov.b64 	%rd4056, {%r3009, %r3008};
	xor.b64  	%rd4057, %rd4055, %rd4056;
	xor.b64  	%rd4058, %rd4017, %rd3997;
	and.b64  	%rd4059, %rd4041, %rd4058;
	xor.b64  	%rd4060, %rd4059, %rd3997;
	add.s64 	%rd4061, %rd3973, %rd10167;
	add.s64 	%rd4062, %rd4061, %rd10138;
	add.s64 	%rd4063, %rd4062, %rd4060;
	add.s64 	%rd4064, %rd4063, %rd4057;
	add.s64 	%rd4065, %rd4064, %rd3980;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3010,%dummy}, %rd4052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3011}, %rd4052;
	}
	shf.r.wrap.b32 	%r3012, %r3011, %r3010, 28;
	shf.r.wrap.b32 	%r3013, %r3010, %r3011, 28;
	mov.b64 	%rd4066, {%r3013, %r3012};
	shf.l.wrap.b32 	%r3014, %r3010, %r3011, 30;
	shf.l.wrap.b32 	%r3015, %r3011, %r3010, 30;
	mov.b64 	%rd4067, {%r3015, %r3014};
	xor.b64  	%rd4068, %rd4067, %rd4066;
	shf.l.wrap.b32 	%r3016, %r3010, %r3011, 25;
	shf.l.wrap.b32 	%r3017, %r3011, %r3010, 25;
	mov.b64 	%rd4069, {%r3017, %r3016};
	xor.b64  	%rd4070, %rd4068, %rd4069;
	and.b64  	%rd4071, %rd4052, %rd4028;
	xor.b64  	%rd4072, %rd4052, %rd4028;
	and.b64  	%rd4073, %rd4072, %rd4004;
	or.b64  	%rd4074, %rd4073, %rd4071;
	add.s64 	%rd4075, %rd4064, %rd4074;
	add.s64 	%rd4076, %rd4075, %rd4070;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3018,%dummy}, %rd4065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3019}, %rd4065;
	}
	shf.r.wrap.b32 	%r3020, %r3019, %r3018, 14;
	shf.r.wrap.b32 	%r3021, %r3018, %r3019, 14;
	mov.b64 	%rd4077, {%r3021, %r3020};
	shf.r.wrap.b32 	%r3022, %r3019, %r3018, 18;
	shf.r.wrap.b32 	%r3023, %r3018, %r3019, 18;
	mov.b64 	%rd4078, {%r3023, %r3022};
	xor.b64  	%rd4079, %rd4078, %rd4077;
	shf.l.wrap.b32 	%r3024, %r3018, %r3019, 23;
	shf.l.wrap.b32 	%r3025, %r3019, %r3018, 23;
	mov.b64 	%rd4080, {%r3025, %r3024};
	xor.b64  	%rd4081, %rd4079, %rd4080;
	xor.b64  	%rd4082, %rd4041, %rd4017;
	and.b64  	%rd4083, %rd4065, %rd4082;
	xor.b64  	%rd4084, %rd4083, %rd4017;
	add.s64 	%rd4085, %rd3997, %rd10168;
	add.s64 	%rd4086, %rd4085, %rd10137;
	add.s64 	%rd4087, %rd4086, %rd4084;
	add.s64 	%rd4088, %rd4087, %rd4081;
	add.s64 	%rd4089, %rd4088, %rd4004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3026,%dummy}, %rd4076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3027}, %rd4076;
	}
	shf.r.wrap.b32 	%r3028, %r3027, %r3026, 28;
	shf.r.wrap.b32 	%r3029, %r3026, %r3027, 28;
	mov.b64 	%rd4090, {%r3029, %r3028};
	shf.l.wrap.b32 	%r3030, %r3026, %r3027, 30;
	shf.l.wrap.b32 	%r3031, %r3027, %r3026, 30;
	mov.b64 	%rd4091, {%r3031, %r3030};
	xor.b64  	%rd4092, %rd4091, %rd4090;
	shf.l.wrap.b32 	%r3032, %r3026, %r3027, 25;
	shf.l.wrap.b32 	%r3033, %r3027, %r3026, 25;
	mov.b64 	%rd4093, {%r3033, %r3032};
	xor.b64  	%rd4094, %rd4092, %rd4093;
	and.b64  	%rd4095, %rd4076, %rd4052;
	xor.b64  	%rd4096, %rd4076, %rd4052;
	and.b64  	%rd4097, %rd4096, %rd4028;
	or.b64  	%rd4098, %rd4097, %rd4095;
	add.s64 	%rd4099, %rd4088, %rd4098;
	add.s64 	%rd4100, %rd4099, %rd4094;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3034,%dummy}, %rd4089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3035}, %rd4089;
	}
	shf.r.wrap.b32 	%r3036, %r3035, %r3034, 14;
	shf.r.wrap.b32 	%r3037, %r3034, %r3035, 14;
	mov.b64 	%rd4101, {%r3037, %r3036};
	shf.r.wrap.b32 	%r3038, %r3035, %r3034, 18;
	shf.r.wrap.b32 	%r3039, %r3034, %r3035, 18;
	mov.b64 	%rd4102, {%r3039, %r3038};
	xor.b64  	%rd4103, %rd4102, %rd4101;
	shf.l.wrap.b32 	%r3040, %r3034, %r3035, 23;
	shf.l.wrap.b32 	%r3041, %r3035, %r3034, 23;
	mov.b64 	%rd4104, {%r3041, %r3040};
	xor.b64  	%rd4105, %rd4103, %rd4104;
	xor.b64  	%rd4106, %rd4065, %rd4041;
	and.b64  	%rd4107, %rd4089, %rd4106;
	xor.b64  	%rd4108, %rd4107, %rd4041;
	add.s64 	%rd4109, %rd4017, %rd10152;
	add.s64 	%rd4110, %rd4109, %rd10136;
	add.s64 	%rd4111, %rd4110, %rd4108;
	add.s64 	%rd4112, %rd4111, %rd4105;
	add.s64 	%rd4113, %rd4112, %rd4028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3042,%dummy}, %rd4100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3043}, %rd4100;
	}
	shf.r.wrap.b32 	%r3044, %r3043, %r3042, 28;
	shf.r.wrap.b32 	%r3045, %r3042, %r3043, 28;
	mov.b64 	%rd4114, {%r3045, %r3044};
	shf.l.wrap.b32 	%r3046, %r3042, %r3043, 30;
	shf.l.wrap.b32 	%r3047, %r3043, %r3042, 30;
	mov.b64 	%rd4115, {%r3047, %r3046};
	xor.b64  	%rd4116, %rd4115, %rd4114;
	shf.l.wrap.b32 	%r3048, %r3042, %r3043, 25;
	shf.l.wrap.b32 	%r3049, %r3043, %r3042, 25;
	mov.b64 	%rd4117, {%r3049, %r3048};
	xor.b64  	%rd4118, %rd4116, %rd4117;
	and.b64  	%rd4119, %rd4100, %rd4076;
	xor.b64  	%rd4120, %rd4100, %rd4076;
	and.b64  	%rd4121, %rd4120, %rd4052;
	or.b64  	%rd4122, %rd4121, %rd4119;
	add.s64 	%rd4123, %rd4112, %rd4122;
	add.s64 	%rd4124, %rd4123, %rd4118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3050,%dummy}, %rd4113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3051}, %rd4113;
	}
	shf.r.wrap.b32 	%r3052, %r3051, %r3050, 14;
	shf.r.wrap.b32 	%r3053, %r3050, %r3051, 14;
	mov.b64 	%rd4125, {%r3053, %r3052};
	shf.r.wrap.b32 	%r3054, %r3051, %r3050, 18;
	shf.r.wrap.b32 	%r3055, %r3050, %r3051, 18;
	mov.b64 	%rd4126, {%r3055, %r3054};
	xor.b64  	%rd4127, %rd4126, %rd4125;
	shf.l.wrap.b32 	%r3056, %r3050, %r3051, 23;
	shf.l.wrap.b32 	%r3057, %r3051, %r3050, 23;
	mov.b64 	%rd4128, {%r3057, %r3056};
	xor.b64  	%rd4129, %rd4127, %rd4128;
	xor.b64  	%rd4130, %rd4089, %rd4065;
	and.b64  	%rd4131, %rd4113, %rd4130;
	xor.b64  	%rd4132, %rd4131, %rd4065;
	add.s64 	%rd4133, %rd4041, %rd10151;
	add.s64 	%rd4134, %rd4133, %rd10135;
	add.s64 	%rd4135, %rd4134, %rd4132;
	add.s64 	%rd4136, %rd4135, %rd4129;
	add.s64 	%rd4137, %rd4136, %rd4052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3058,%dummy}, %rd4124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3059}, %rd4124;
	}
	shf.r.wrap.b32 	%r3060, %r3059, %r3058, 28;
	shf.r.wrap.b32 	%r3061, %r3058, %r3059, 28;
	mov.b64 	%rd4138, {%r3061, %r3060};
	shf.l.wrap.b32 	%r3062, %r3058, %r3059, 30;
	shf.l.wrap.b32 	%r3063, %r3059, %r3058, 30;
	mov.b64 	%rd4139, {%r3063, %r3062};
	xor.b64  	%rd4140, %rd4139, %rd4138;
	shf.l.wrap.b32 	%r3064, %r3058, %r3059, 25;
	shf.l.wrap.b32 	%r3065, %r3059, %r3058, 25;
	mov.b64 	%rd4141, {%r3065, %r3064};
	xor.b64  	%rd4142, %rd4140, %rd4141;
	and.b64  	%rd4143, %rd4124, %rd4100;
	xor.b64  	%rd4144, %rd4124, %rd4100;
	and.b64  	%rd4145, %rd4144, %rd4076;
	or.b64  	%rd4146, %rd4145, %rd4143;
	add.s64 	%rd4147, %rd4136, %rd4146;
	add.s64 	%rd4148, %rd4147, %rd4142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3066,%dummy}, %rd4137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3067}, %rd4137;
	}
	shf.r.wrap.b32 	%r3068, %r3067, %r3066, 14;
	shf.r.wrap.b32 	%r3069, %r3066, %r3067, 14;
	mov.b64 	%rd4149, {%r3069, %r3068};
	shf.r.wrap.b32 	%r3070, %r3067, %r3066, 18;
	shf.r.wrap.b32 	%r3071, %r3066, %r3067, 18;
	mov.b64 	%rd4150, {%r3071, %r3070};
	xor.b64  	%rd4151, %rd4150, %rd4149;
	shf.l.wrap.b32 	%r3072, %r3066, %r3067, 23;
	shf.l.wrap.b32 	%r3073, %r3067, %r3066, 23;
	mov.b64 	%rd4152, {%r3073, %r3072};
	xor.b64  	%rd4153, %rd4151, %rd4152;
	xor.b64  	%rd4154, %rd4113, %rd4089;
	and.b64  	%rd4155, %rd4137, %rd4154;
	xor.b64  	%rd4156, %rd4155, %rd4089;
	add.s64 	%rd4157, %rd4065, %rd10150;
	add.s64 	%rd4158, %rd4157, %rd10134;
	add.s64 	%rd4159, %rd4158, %rd4156;
	add.s64 	%rd4160, %rd4159, %rd4153;
	add.s64 	%rd4161, %rd4160, %rd4076;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3074,%dummy}, %rd4148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3075}, %rd4148;
	}
	shf.r.wrap.b32 	%r3076, %r3075, %r3074, 28;
	shf.r.wrap.b32 	%r3077, %r3074, %r3075, 28;
	mov.b64 	%rd4162, {%r3077, %r3076};
	shf.l.wrap.b32 	%r3078, %r3074, %r3075, 30;
	shf.l.wrap.b32 	%r3079, %r3075, %r3074, 30;
	mov.b64 	%rd4163, {%r3079, %r3078};
	xor.b64  	%rd4164, %rd4163, %rd4162;
	shf.l.wrap.b32 	%r3080, %r3074, %r3075, 25;
	shf.l.wrap.b32 	%r3081, %r3075, %r3074, 25;
	mov.b64 	%rd4165, {%r3081, %r3080};
	xor.b64  	%rd4166, %rd4164, %rd4165;
	and.b64  	%rd4167, %rd4148, %rd4124;
	xor.b64  	%rd4168, %rd4148, %rd4124;
	and.b64  	%rd4169, %rd4168, %rd4100;
	or.b64  	%rd4170, %rd4169, %rd4167;
	add.s64 	%rd4171, %rd4160, %rd4170;
	add.s64 	%rd4172, %rd4171, %rd4166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3082,%dummy}, %rd4161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3083}, %rd4161;
	}
	shf.r.wrap.b32 	%r3084, %r3083, %r3082, 14;
	shf.r.wrap.b32 	%r3085, %r3082, %r3083, 14;
	mov.b64 	%rd4173, {%r3085, %r3084};
	shf.r.wrap.b32 	%r3086, %r3083, %r3082, 18;
	shf.r.wrap.b32 	%r3087, %r3082, %r3083, 18;
	mov.b64 	%rd4174, {%r3087, %r3086};
	xor.b64  	%rd4175, %rd4174, %rd4173;
	shf.l.wrap.b32 	%r3088, %r3082, %r3083, 23;
	shf.l.wrap.b32 	%r3089, %r3083, %r3082, 23;
	mov.b64 	%rd4176, {%r3089, %r3088};
	xor.b64  	%rd4177, %rd4175, %rd4176;
	xor.b64  	%rd4178, %rd4137, %rd4113;
	and.b64  	%rd4179, %rd4161, %rd4178;
	xor.b64  	%rd4180, %rd4179, %rd4113;
	add.s64 	%rd4181, %rd4089, %rd10149;
	add.s64 	%rd4182, %rd4181, %rd10133;
	add.s64 	%rd4183, %rd4182, %rd4180;
	add.s64 	%rd4184, %rd4183, %rd4177;
	add.s64 	%rd4185, %rd4184, %rd4100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3090,%dummy}, %rd4172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3091}, %rd4172;
	}
	shf.r.wrap.b32 	%r3092, %r3091, %r3090, 28;
	shf.r.wrap.b32 	%r3093, %r3090, %r3091, 28;
	mov.b64 	%rd4186, {%r3093, %r3092};
	shf.l.wrap.b32 	%r3094, %r3090, %r3091, 30;
	shf.l.wrap.b32 	%r3095, %r3091, %r3090, 30;
	mov.b64 	%rd4187, {%r3095, %r3094};
	xor.b64  	%rd4188, %rd4187, %rd4186;
	shf.l.wrap.b32 	%r3096, %r3090, %r3091, 25;
	shf.l.wrap.b32 	%r3097, %r3091, %r3090, 25;
	mov.b64 	%rd4189, {%r3097, %r3096};
	xor.b64  	%rd4190, %rd4188, %rd4189;
	and.b64  	%rd4191, %rd4172, %rd4148;
	xor.b64  	%rd4192, %rd4172, %rd4148;
	and.b64  	%rd4193, %rd4192, %rd4124;
	or.b64  	%rd4194, %rd4193, %rd4191;
	add.s64 	%rd4195, %rd4184, %rd4194;
	add.s64 	%rd4196, %rd4195, %rd4190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3098,%dummy}, %rd4185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3099}, %rd4185;
	}
	shf.r.wrap.b32 	%r3100, %r3099, %r3098, 14;
	shf.r.wrap.b32 	%r3101, %r3098, %r3099, 14;
	mov.b64 	%rd4197, {%r3101, %r3100};
	shf.r.wrap.b32 	%r3102, %r3099, %r3098, 18;
	shf.r.wrap.b32 	%r3103, %r3098, %r3099, 18;
	mov.b64 	%rd4198, {%r3103, %r3102};
	xor.b64  	%rd4199, %rd4198, %rd4197;
	shf.l.wrap.b32 	%r3104, %r3098, %r3099, 23;
	shf.l.wrap.b32 	%r3105, %r3099, %r3098, 23;
	mov.b64 	%rd4200, {%r3105, %r3104};
	xor.b64  	%rd4201, %rd4199, %rd4200;
	xor.b64  	%rd4202, %rd4161, %rd4137;
	and.b64  	%rd4203, %rd4185, %rd4202;
	xor.b64  	%rd4204, %rd4203, %rd4137;
	add.s64 	%rd4205, %rd4113, %rd10148;
	add.s64 	%rd4206, %rd4205, %rd10132;
	add.s64 	%rd4207, %rd4206, %rd4204;
	add.s64 	%rd4208, %rd4207, %rd4201;
	add.s64 	%rd10160, %rd4208, %rd4124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3106,%dummy}, %rd4196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3107}, %rd4196;
	}
	shf.r.wrap.b32 	%r3108, %r3107, %r3106, 28;
	shf.r.wrap.b32 	%r3109, %r3106, %r3107, 28;
	mov.b64 	%rd4209, {%r3109, %r3108};
	shf.l.wrap.b32 	%r3110, %r3106, %r3107, 30;
	shf.l.wrap.b32 	%r3111, %r3107, %r3106, 30;
	mov.b64 	%rd4210, {%r3111, %r3110};
	xor.b64  	%rd4211, %rd4210, %rd4209;
	shf.l.wrap.b32 	%r3112, %r3106, %r3107, 25;
	shf.l.wrap.b32 	%r3113, %r3107, %r3106, 25;
	mov.b64 	%rd4212, {%r3113, %r3112};
	xor.b64  	%rd4213, %rd4211, %rd4212;
	and.b64  	%rd4214, %rd4196, %rd4172;
	xor.b64  	%rd4215, %rd4196, %rd4172;
	and.b64  	%rd4216, %rd4215, %rd4148;
	or.b64  	%rd4217, %rd4216, %rd4214;
	add.s64 	%rd4218, %rd4208, %rd4217;
	add.s64 	%rd10156, %rd4218, %rd4213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3114,%dummy}, %rd10160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3115}, %rd10160;
	}
	shf.r.wrap.b32 	%r3116, %r3115, %r3114, 14;
	shf.r.wrap.b32 	%r3117, %r3114, %r3115, 14;
	mov.b64 	%rd4219, {%r3117, %r3116};
	shf.r.wrap.b32 	%r3118, %r3115, %r3114, 18;
	shf.r.wrap.b32 	%r3119, %r3114, %r3115, 18;
	mov.b64 	%rd4220, {%r3119, %r3118};
	xor.b64  	%rd4221, %rd4220, %rd4219;
	shf.l.wrap.b32 	%r3120, %r3114, %r3115, 23;
	shf.l.wrap.b32 	%r3121, %r3115, %r3114, 23;
	mov.b64 	%rd4222, {%r3121, %r3120};
	xor.b64  	%rd4223, %rd4221, %rd4222;
	xor.b64  	%rd4224, %rd4185, %rd4161;
	and.b64  	%rd4225, %rd10160, %rd4224;
	xor.b64  	%rd4226, %rd4225, %rd4161;
	add.s64 	%rd4227, %rd4137, %rd10147;
	add.s64 	%rd4228, %rd4227, %rd10131;
	add.s64 	%rd4229, %rd4228, %rd4226;
	add.s64 	%rd4230, %rd4229, %rd4223;
	add.s64 	%rd10159, %rd4230, %rd4148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3122,%dummy}, %rd10156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3123}, %rd10156;
	}
	shf.r.wrap.b32 	%r3124, %r3123, %r3122, 28;
	shf.r.wrap.b32 	%r3125, %r3122, %r3123, 28;
	mov.b64 	%rd4231, {%r3125, %r3124};
	shf.l.wrap.b32 	%r3126, %r3122, %r3123, 30;
	shf.l.wrap.b32 	%r3127, %r3123, %r3122, 30;
	mov.b64 	%rd4232, {%r3127, %r3126};
	xor.b64  	%rd4233, %rd4232, %rd4231;
	shf.l.wrap.b32 	%r3128, %r3122, %r3123, 25;
	shf.l.wrap.b32 	%r3129, %r3123, %r3122, 25;
	mov.b64 	%rd4234, {%r3129, %r3128};
	xor.b64  	%rd4235, %rd4233, %rd4234;
	and.b64  	%rd4236, %rd10156, %rd4196;
	xor.b64  	%rd4237, %rd10156, %rd4196;
	and.b64  	%rd4238, %rd4237, %rd4172;
	or.b64  	%rd4239, %rd4238, %rd4236;
	add.s64 	%rd4240, %rd4230, %rd4239;
	add.s64 	%rd10155, %rd4240, %rd4235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3130,%dummy}, %rd10159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3131}, %rd10159;
	}
	shf.r.wrap.b32 	%r3132, %r3131, %r3130, 14;
	shf.r.wrap.b32 	%r3133, %r3130, %r3131, 14;
	mov.b64 	%rd4241, {%r3133, %r3132};
	shf.r.wrap.b32 	%r3134, %r3131, %r3130, 18;
	shf.r.wrap.b32 	%r3135, %r3130, %r3131, 18;
	mov.b64 	%rd4242, {%r3135, %r3134};
	xor.b64  	%rd4243, %rd4242, %rd4241;
	shf.l.wrap.b32 	%r3136, %r3130, %r3131, 23;
	shf.l.wrap.b32 	%r3137, %r3131, %r3130, 23;
	mov.b64 	%rd4244, {%r3137, %r3136};
	xor.b64  	%rd4245, %rd4243, %rd4244;
	xor.b64  	%rd4246, %rd10160, %rd4185;
	and.b64  	%rd4247, %rd10159, %rd4246;
	xor.b64  	%rd4248, %rd4247, %rd4185;
	add.s64 	%rd4249, %rd4161, %rd10146;
	add.s64 	%rd4250, %rd4249, %rd10130;
	add.s64 	%rd4251, %rd4250, %rd4248;
	add.s64 	%rd4252, %rd4251, %rd4245;
	add.s64 	%rd10158, %rd4252, %rd4172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3138,%dummy}, %rd10155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3139}, %rd10155;
	}
	shf.r.wrap.b32 	%r3140, %r3139, %r3138, 28;
	shf.r.wrap.b32 	%r3141, %r3138, %r3139, 28;
	mov.b64 	%rd4253, {%r3141, %r3140};
	shf.l.wrap.b32 	%r3142, %r3138, %r3139, 30;
	shf.l.wrap.b32 	%r3143, %r3139, %r3138, 30;
	mov.b64 	%rd4254, {%r3143, %r3142};
	xor.b64  	%rd4255, %rd4254, %rd4253;
	shf.l.wrap.b32 	%r3144, %r3138, %r3139, 25;
	shf.l.wrap.b32 	%r3145, %r3139, %r3138, 25;
	mov.b64 	%rd4256, {%r3145, %r3144};
	xor.b64  	%rd4257, %rd4255, %rd4256;
	and.b64  	%rd4258, %rd10155, %rd10156;
	xor.b64  	%rd4259, %rd10155, %rd10156;
	and.b64  	%rd4260, %rd4259, %rd4196;
	or.b64  	%rd4261, %rd4260, %rd4258;
	add.s64 	%rd4262, %rd4252, %rd4261;
	add.s64 	%rd10154, %rd4262, %rd4257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3146,%dummy}, %rd10158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3147}, %rd10158;
	}
	shf.r.wrap.b32 	%r3148, %r3147, %r3146, 14;
	shf.r.wrap.b32 	%r3149, %r3146, %r3147, 14;
	mov.b64 	%rd4263, {%r3149, %r3148};
	shf.r.wrap.b32 	%r3150, %r3147, %r3146, 18;
	shf.r.wrap.b32 	%r3151, %r3146, %r3147, 18;
	mov.b64 	%rd4264, {%r3151, %r3150};
	xor.b64  	%rd4265, %rd4264, %rd4263;
	shf.l.wrap.b32 	%r3152, %r3146, %r3147, 23;
	shf.l.wrap.b32 	%r3153, %r3147, %r3146, 23;
	mov.b64 	%rd4266, {%r3153, %r3152};
	xor.b64  	%rd4267, %rd4265, %rd4266;
	xor.b64  	%rd4268, %rd10159, %rd10160;
	and.b64  	%rd4269, %rd10158, %rd4268;
	xor.b64  	%rd4270, %rd4269, %rd10160;
	add.s64 	%rd4271, %rd4185, %rd10145;
	add.s64 	%rd4272, %rd4271, %rd10129;
	add.s64 	%rd4273, %rd4272, %rd4270;
	add.s64 	%rd4274, %rd4273, %rd4267;
	add.s64 	%rd10157, %rd4274, %rd4196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3154,%dummy}, %rd10154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3155}, %rd10154;
	}
	shf.r.wrap.b32 	%r3156, %r3155, %r3154, 28;
	shf.r.wrap.b32 	%r3157, %r3154, %r3155, 28;
	mov.b64 	%rd4275, {%r3157, %r3156};
	shf.l.wrap.b32 	%r3158, %r3154, %r3155, 30;
	shf.l.wrap.b32 	%r3159, %r3155, %r3154, 30;
	mov.b64 	%rd4276, {%r3159, %r3158};
	xor.b64  	%rd4277, %rd4276, %rd4275;
	shf.l.wrap.b32 	%r3160, %r3154, %r3155, 25;
	shf.l.wrap.b32 	%r3161, %r3155, %r3154, 25;
	mov.b64 	%rd4278, {%r3161, %r3160};
	xor.b64  	%rd4279, %rd4277, %rd4278;
	and.b64  	%rd4280, %rd10154, %rd10155;
	xor.b64  	%rd4281, %rd10154, %rd10155;
	and.b64  	%rd4282, %rd4281, %rd10156;
	or.b64  	%rd4283, %rd4282, %rd4280;
	add.s64 	%rd4284, %rd4274, %rd4283;
	add.s64 	%rd10153, %rd4284, %rd4279;
	mov.u32 	%r7645, 16;

BB3_17:
	shr.u64 	%rd4285, %rd10146, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3162,%dummy}, %rd10146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3163}, %rd10146;
	}
	shf.r.wrap.b32 	%r3164, %r3163, %r3162, 19;
	shf.r.wrap.b32 	%r3165, %r3162, %r3163, 19;
	mov.b64 	%rd4286, {%r3165, %r3164};
	xor.b64  	%rd4287, %rd4286, %rd4285;
	shf.l.wrap.b32 	%r3166, %r3162, %r3163, 3;
	shf.l.wrap.b32 	%r3167, %r3163, %r3162, 3;
	mov.b64 	%rd4288, {%r3167, %r3166};
	xor.b64  	%rd4289, %rd4287, %rd4288;
	shr.u64 	%rd4290, %rd10162, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3168,%dummy}, %rd10162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3169}, %rd10162;
	}
	shf.r.wrap.b32 	%r3170, %r3169, %r3168, 1;
	shf.r.wrap.b32 	%r3171, %r3168, %r3169, 1;
	mov.b64 	%rd4291, {%r3171, %r3170};
	xor.b64  	%rd4292, %rd4291, %rd4290;
	shf.r.wrap.b32 	%r3172, %r3169, %r3168, 8;
	shf.r.wrap.b32 	%r3173, %r3168, %r3169, 8;
	mov.b64 	%rd4293, {%r3173, %r3172};
	xor.b64  	%rd4294, %rd4292, %rd4293;
	add.s64 	%rd4295, %rd10151, %rd10161;
	add.s64 	%rd4296, %rd4295, %rd4289;
	add.s64 	%rd10161, %rd4296, %rd4294;
	shr.u64 	%rd4297, %rd10145, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3174,%dummy}, %rd10145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3175}, %rd10145;
	}
	shf.r.wrap.b32 	%r3176, %r3175, %r3174, 19;
	shf.r.wrap.b32 	%r3177, %r3174, %r3175, 19;
	mov.b64 	%rd4298, {%r3177, %r3176};
	xor.b64  	%rd4299, %rd4298, %rd4297;
	shf.l.wrap.b32 	%r3178, %r3174, %r3175, 3;
	shf.l.wrap.b32 	%r3179, %r3175, %r3174, 3;
	mov.b64 	%rd4300, {%r3179, %r3178};
	xor.b64  	%rd4301, %rd4299, %rd4300;
	shr.u64 	%rd4302, %rd10163, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3180,%dummy}, %rd10163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3181}, %rd10163;
	}
	shf.r.wrap.b32 	%r3182, %r3181, %r3180, 1;
	shf.r.wrap.b32 	%r3183, %r3180, %r3181, 1;
	mov.b64 	%rd4303, {%r3183, %r3182};
	xor.b64  	%rd4304, %rd4303, %rd4302;
	shf.r.wrap.b32 	%r3184, %r3181, %r3180, 8;
	shf.r.wrap.b32 	%r3185, %r3180, %r3181, 8;
	mov.b64 	%rd4305, {%r3185, %r3184};
	xor.b64  	%rd4306, %rd4304, %rd4305;
	add.s64 	%rd4307, %rd10150, %rd10162;
	add.s64 	%rd4308, %rd4307, %rd4301;
	add.s64 	%rd10162, %rd4308, %rd4306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3186,%dummy}, %rd10161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3187}, %rd10161;
	}
	shf.r.wrap.b32 	%r3188, %r3187, %r3186, 19;
	shf.r.wrap.b32 	%r3189, %r3186, %r3187, 19;
	mov.b64 	%rd4309, {%r3189, %r3188};
	shf.l.wrap.b32 	%r3190, %r3186, %r3187, 3;
	shf.l.wrap.b32 	%r3191, %r3187, %r3186, 3;
	mov.b64 	%rd4310, {%r3191, %r3190};
	shr.u64 	%rd4311, %rd10161, 6;
	xor.b64  	%rd4312, %rd4309, %rd4311;
	xor.b64  	%rd4313, %rd4312, %rd4310;
	shr.u64 	%rd4314, %rd10164, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3192,%dummy}, %rd10164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3193}, %rd10164;
	}
	shf.r.wrap.b32 	%r3194, %r3193, %r3192, 1;
	shf.r.wrap.b32 	%r3195, %r3192, %r3193, 1;
	mov.b64 	%rd4315, {%r3195, %r3194};
	xor.b64  	%rd4316, %rd4315, %rd4314;
	shf.r.wrap.b32 	%r3196, %r3193, %r3192, 8;
	shf.r.wrap.b32 	%r3197, %r3192, %r3193, 8;
	mov.b64 	%rd4317, {%r3197, %r3196};
	xor.b64  	%rd4318, %rd4316, %rd4317;
	add.s64 	%rd4319, %rd10149, %rd10163;
	add.s64 	%rd4320, %rd4319, %rd4313;
	add.s64 	%rd10163, %rd4320, %rd4318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3198,%dummy}, %rd10162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3199}, %rd10162;
	}
	shf.r.wrap.b32 	%r3200, %r3199, %r3198, 19;
	shf.r.wrap.b32 	%r3201, %r3198, %r3199, 19;
	mov.b64 	%rd4321, {%r3201, %r3200};
	shf.l.wrap.b32 	%r3202, %r3198, %r3199, 3;
	shf.l.wrap.b32 	%r3203, %r3199, %r3198, 3;
	mov.b64 	%rd4322, {%r3203, %r3202};
	shr.u64 	%rd4323, %rd10162, 6;
	xor.b64  	%rd4324, %rd4321, %rd4323;
	xor.b64  	%rd4325, %rd4324, %rd4322;
	shr.u64 	%rd4326, %rd10165, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3204,%dummy}, %rd10165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3205}, %rd10165;
	}
	shf.r.wrap.b32 	%r3206, %r3205, %r3204, 1;
	shf.r.wrap.b32 	%r3207, %r3204, %r3205, 1;
	mov.b64 	%rd4327, {%r3207, %r3206};
	xor.b64  	%rd4328, %rd4327, %rd4326;
	shf.r.wrap.b32 	%r3208, %r3205, %r3204, 8;
	shf.r.wrap.b32 	%r3209, %r3204, %r3205, 8;
	mov.b64 	%rd4329, {%r3209, %r3208};
	xor.b64  	%rd4330, %rd4328, %rd4329;
	add.s64 	%rd4331, %rd10148, %rd10164;
	add.s64 	%rd4332, %rd4331, %rd4325;
	add.s64 	%rd10164, %rd4332, %rd4330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3210,%dummy}, %rd10163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3211}, %rd10163;
	}
	shf.r.wrap.b32 	%r3212, %r3211, %r3210, 19;
	shf.r.wrap.b32 	%r3213, %r3210, %r3211, 19;
	mov.b64 	%rd4333, {%r3213, %r3212};
	shf.l.wrap.b32 	%r3214, %r3210, %r3211, 3;
	shf.l.wrap.b32 	%r3215, %r3211, %r3210, 3;
	mov.b64 	%rd4334, {%r3215, %r3214};
	shr.u64 	%rd4335, %rd10163, 6;
	xor.b64  	%rd4336, %rd4333, %rd4335;
	xor.b64  	%rd4337, %rd4336, %rd4334;
	shr.u64 	%rd4338, %rd10166, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3216,%dummy}, %rd10166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3217}, %rd10166;
	}
	shf.r.wrap.b32 	%r3218, %r3217, %r3216, 1;
	shf.r.wrap.b32 	%r3219, %r3216, %r3217, 1;
	mov.b64 	%rd4339, {%r3219, %r3218};
	xor.b64  	%rd4340, %rd4339, %rd4338;
	shf.r.wrap.b32 	%r3220, %r3217, %r3216, 8;
	shf.r.wrap.b32 	%r3221, %r3216, %r3217, 8;
	mov.b64 	%rd4341, {%r3221, %r3220};
	xor.b64  	%rd4342, %rd4340, %rd4341;
	add.s64 	%rd4343, %rd10147, %rd10165;
	add.s64 	%rd4344, %rd4343, %rd4337;
	add.s64 	%rd10165, %rd4344, %rd4342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3222,%dummy}, %rd10164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3223}, %rd10164;
	}
	shf.r.wrap.b32 	%r3224, %r3223, %r3222, 19;
	shf.r.wrap.b32 	%r3225, %r3222, %r3223, 19;
	mov.b64 	%rd4345, {%r3225, %r3224};
	shf.l.wrap.b32 	%r3226, %r3222, %r3223, 3;
	shf.l.wrap.b32 	%r3227, %r3223, %r3222, 3;
	mov.b64 	%rd4346, {%r3227, %r3226};
	shr.u64 	%rd4347, %rd10164, 6;
	xor.b64  	%rd4348, %rd4345, %rd4347;
	xor.b64  	%rd4349, %rd4348, %rd4346;
	shr.u64 	%rd4350, %rd10167, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3228,%dummy}, %rd10167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3229}, %rd10167;
	}
	shf.r.wrap.b32 	%r3230, %r3229, %r3228, 1;
	shf.r.wrap.b32 	%r3231, %r3228, %r3229, 1;
	mov.b64 	%rd4351, {%r3231, %r3230};
	xor.b64  	%rd4352, %rd4351, %rd4350;
	shf.r.wrap.b32 	%r3232, %r3229, %r3228, 8;
	shf.r.wrap.b32 	%r3233, %r3228, %r3229, 8;
	mov.b64 	%rd4353, {%r3233, %r3232};
	xor.b64  	%rd4354, %rd4352, %rd4353;
	add.s64 	%rd4355, %rd10146, %rd10166;
	add.s64 	%rd4356, %rd4355, %rd4349;
	add.s64 	%rd10166, %rd4356, %rd4354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3234,%dummy}, %rd10165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3235}, %rd10165;
	}
	shf.r.wrap.b32 	%r3236, %r3235, %r3234, 19;
	shf.r.wrap.b32 	%r3237, %r3234, %r3235, 19;
	mov.b64 	%rd4357, {%r3237, %r3236};
	shf.l.wrap.b32 	%r3238, %r3234, %r3235, 3;
	shf.l.wrap.b32 	%r3239, %r3235, %r3234, 3;
	mov.b64 	%rd4358, {%r3239, %r3238};
	shr.u64 	%rd4359, %rd10165, 6;
	xor.b64  	%rd4360, %rd4357, %rd4359;
	xor.b64  	%rd4361, %rd4360, %rd4358;
	shr.u64 	%rd4362, %rd10168, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3240,%dummy}, %rd10168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3241}, %rd10168;
	}
	shf.r.wrap.b32 	%r3242, %r3241, %r3240, 1;
	shf.r.wrap.b32 	%r3243, %r3240, %r3241, 1;
	mov.b64 	%rd4363, {%r3243, %r3242};
	xor.b64  	%rd4364, %rd4363, %rd4362;
	shf.r.wrap.b32 	%r3244, %r3241, %r3240, 8;
	shf.r.wrap.b32 	%r3245, %r3240, %r3241, 8;
	mov.b64 	%rd4365, {%r3245, %r3244};
	xor.b64  	%rd4366, %rd4364, %rd4365;
	add.s64 	%rd4367, %rd10145, %rd10167;
	add.s64 	%rd4368, %rd4367, %rd4361;
	add.s64 	%rd10167, %rd4368, %rd4366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3246,%dummy}, %rd10166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3247}, %rd10166;
	}
	shf.r.wrap.b32 	%r3248, %r3247, %r3246, 19;
	shf.r.wrap.b32 	%r3249, %r3246, %r3247, 19;
	mov.b64 	%rd4369, {%r3249, %r3248};
	shf.l.wrap.b32 	%r3250, %r3246, %r3247, 3;
	shf.l.wrap.b32 	%r3251, %r3247, %r3246, 3;
	mov.b64 	%rd4370, {%r3251, %r3250};
	shr.u64 	%rd4371, %rd10166, 6;
	xor.b64  	%rd4372, %rd4369, %rd4371;
	xor.b64  	%rd4373, %rd4372, %rd4370;
	shr.u64 	%rd4374, %rd10152, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3252,%dummy}, %rd10152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3253}, %rd10152;
	}
	shf.r.wrap.b32 	%r3254, %r3253, %r3252, 1;
	shf.r.wrap.b32 	%r3255, %r3252, %r3253, 1;
	mov.b64 	%rd4375, {%r3255, %r3254};
	xor.b64  	%rd4376, %rd4375, %rd4374;
	shf.r.wrap.b32 	%r3256, %r3253, %r3252, 8;
	shf.r.wrap.b32 	%r3257, %r3252, %r3253, 8;
	mov.b64 	%rd4377, {%r3257, %r3256};
	xor.b64  	%rd4378, %rd4376, %rd4377;
	add.s64 	%rd4379, %rd10161, %rd10168;
	add.s64 	%rd4380, %rd4379, %rd4373;
	add.s64 	%rd10168, %rd4380, %rd4378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3258,%dummy}, %rd10167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3259}, %rd10167;
	}
	shf.r.wrap.b32 	%r3260, %r3259, %r3258, 19;
	shf.r.wrap.b32 	%r3261, %r3258, %r3259, 19;
	mov.b64 	%rd4381, {%r3261, %r3260};
	shf.l.wrap.b32 	%r3262, %r3258, %r3259, 3;
	shf.l.wrap.b32 	%r3263, %r3259, %r3258, 3;
	mov.b64 	%rd4382, {%r3263, %r3262};
	shr.u64 	%rd4383, %rd10167, 6;
	xor.b64  	%rd4384, %rd4381, %rd4383;
	xor.b64  	%rd4385, %rd4384, %rd4382;
	shr.u64 	%rd4386, %rd10151, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3264,%dummy}, %rd10151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3265}, %rd10151;
	}
	shf.r.wrap.b32 	%r3266, %r3265, %r3264, 1;
	shf.r.wrap.b32 	%r3267, %r3264, %r3265, 1;
	mov.b64 	%rd4387, {%r3267, %r3266};
	xor.b64  	%rd4388, %rd4387, %rd4386;
	shf.r.wrap.b32 	%r3268, %r3265, %r3264, 8;
	shf.r.wrap.b32 	%r3269, %r3264, %r3265, 8;
	mov.b64 	%rd4389, {%r3269, %r3268};
	xor.b64  	%rd4390, %rd4388, %rd4389;
	add.s64 	%rd4391, %rd10162, %rd10152;
	add.s64 	%rd4392, %rd4391, %rd4385;
	add.s64 	%rd10152, %rd4392, %rd4390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3270,%dummy}, %rd10168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3271}, %rd10168;
	}
	shf.r.wrap.b32 	%r3272, %r3271, %r3270, 19;
	shf.r.wrap.b32 	%r3273, %r3270, %r3271, 19;
	mov.b64 	%rd4393, {%r3273, %r3272};
	shf.l.wrap.b32 	%r3274, %r3270, %r3271, 3;
	shf.l.wrap.b32 	%r3275, %r3271, %r3270, 3;
	mov.b64 	%rd4394, {%r3275, %r3274};
	shr.u64 	%rd4395, %rd10168, 6;
	xor.b64  	%rd4396, %rd4393, %rd4395;
	xor.b64  	%rd4397, %rd4396, %rd4394;
	shr.u64 	%rd4398, %rd10150, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3276,%dummy}, %rd10150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3277}, %rd10150;
	}
	shf.r.wrap.b32 	%r3278, %r3277, %r3276, 1;
	shf.r.wrap.b32 	%r3279, %r3276, %r3277, 1;
	mov.b64 	%rd4399, {%r3279, %r3278};
	xor.b64  	%rd4400, %rd4399, %rd4398;
	shf.r.wrap.b32 	%r3280, %r3277, %r3276, 8;
	shf.r.wrap.b32 	%r3281, %r3276, %r3277, 8;
	mov.b64 	%rd4401, {%r3281, %r3280};
	xor.b64  	%rd4402, %rd4400, %rd4401;
	add.s64 	%rd4403, %rd10163, %rd10151;
	add.s64 	%rd4404, %rd4403, %rd4397;
	add.s64 	%rd10151, %rd4404, %rd4402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3282,%dummy}, %rd10152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3283}, %rd10152;
	}
	shf.r.wrap.b32 	%r3284, %r3283, %r3282, 19;
	shf.r.wrap.b32 	%r3285, %r3282, %r3283, 19;
	mov.b64 	%rd4405, {%r3285, %r3284};
	shf.l.wrap.b32 	%r3286, %r3282, %r3283, 3;
	shf.l.wrap.b32 	%r3287, %r3283, %r3282, 3;
	mov.b64 	%rd4406, {%r3287, %r3286};
	shr.u64 	%rd4407, %rd10152, 6;
	xor.b64  	%rd4408, %rd4405, %rd4407;
	xor.b64  	%rd4409, %rd4408, %rd4406;
	shr.u64 	%rd4410, %rd10149, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3288,%dummy}, %rd10149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3289}, %rd10149;
	}
	shf.r.wrap.b32 	%r3290, %r3289, %r3288, 1;
	shf.r.wrap.b32 	%r3291, %r3288, %r3289, 1;
	mov.b64 	%rd4411, {%r3291, %r3290};
	xor.b64  	%rd4412, %rd4411, %rd4410;
	shf.r.wrap.b32 	%r3292, %r3289, %r3288, 8;
	shf.r.wrap.b32 	%r3293, %r3288, %r3289, 8;
	mov.b64 	%rd4413, {%r3293, %r3292};
	xor.b64  	%rd4414, %rd4412, %rd4413;
	add.s64 	%rd4415, %rd10164, %rd10150;
	add.s64 	%rd4416, %rd4415, %rd4409;
	add.s64 	%rd10150, %rd4416, %rd4414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3294,%dummy}, %rd10151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3295}, %rd10151;
	}
	shf.r.wrap.b32 	%r3296, %r3295, %r3294, 19;
	shf.r.wrap.b32 	%r3297, %r3294, %r3295, 19;
	mov.b64 	%rd4417, {%r3297, %r3296};
	shf.l.wrap.b32 	%r3298, %r3294, %r3295, 3;
	shf.l.wrap.b32 	%r3299, %r3295, %r3294, 3;
	mov.b64 	%rd4418, {%r3299, %r3298};
	shr.u64 	%rd4419, %rd10151, 6;
	xor.b64  	%rd4420, %rd4417, %rd4419;
	xor.b64  	%rd4421, %rd4420, %rd4418;
	shr.u64 	%rd4422, %rd10148, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3300,%dummy}, %rd10148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3301}, %rd10148;
	}
	shf.r.wrap.b32 	%r3302, %r3301, %r3300, 1;
	shf.r.wrap.b32 	%r3303, %r3300, %r3301, 1;
	mov.b64 	%rd4423, {%r3303, %r3302};
	xor.b64  	%rd4424, %rd4423, %rd4422;
	shf.r.wrap.b32 	%r3304, %r3301, %r3300, 8;
	shf.r.wrap.b32 	%r3305, %r3300, %r3301, 8;
	mov.b64 	%rd4425, {%r3305, %r3304};
	xor.b64  	%rd4426, %rd4424, %rd4425;
	add.s64 	%rd4427, %rd10165, %rd10149;
	add.s64 	%rd4428, %rd4427, %rd4421;
	add.s64 	%rd10149, %rd4428, %rd4426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3306,%dummy}, %rd10150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3307}, %rd10150;
	}
	shf.r.wrap.b32 	%r3308, %r3307, %r3306, 19;
	shf.r.wrap.b32 	%r3309, %r3306, %r3307, 19;
	mov.b64 	%rd4429, {%r3309, %r3308};
	shf.l.wrap.b32 	%r3310, %r3306, %r3307, 3;
	shf.l.wrap.b32 	%r3311, %r3307, %r3306, 3;
	mov.b64 	%rd4430, {%r3311, %r3310};
	shr.u64 	%rd4431, %rd10150, 6;
	xor.b64  	%rd4432, %rd4429, %rd4431;
	xor.b64  	%rd4433, %rd4432, %rd4430;
	shr.u64 	%rd4434, %rd10147, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3312,%dummy}, %rd10147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3313}, %rd10147;
	}
	shf.r.wrap.b32 	%r3314, %r3313, %r3312, 1;
	shf.r.wrap.b32 	%r3315, %r3312, %r3313, 1;
	mov.b64 	%rd4435, {%r3315, %r3314};
	xor.b64  	%rd4436, %rd4435, %rd4434;
	shf.r.wrap.b32 	%r3316, %r3313, %r3312, 8;
	shf.r.wrap.b32 	%r3317, %r3312, %r3313, 8;
	mov.b64 	%rd4437, {%r3317, %r3316};
	xor.b64  	%rd4438, %rd4436, %rd4437;
	add.s64 	%rd4439, %rd10166, %rd10148;
	add.s64 	%rd4440, %rd4439, %rd4433;
	add.s64 	%rd10148, %rd4440, %rd4438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3318,%dummy}, %rd10149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3319}, %rd10149;
	}
	shf.r.wrap.b32 	%r3320, %r3319, %r3318, 19;
	shf.r.wrap.b32 	%r3321, %r3318, %r3319, 19;
	mov.b64 	%rd4441, {%r3321, %r3320};
	shf.l.wrap.b32 	%r3322, %r3318, %r3319, 3;
	shf.l.wrap.b32 	%r3323, %r3319, %r3318, 3;
	mov.b64 	%rd4442, {%r3323, %r3322};
	shr.u64 	%rd4443, %rd10149, 6;
	xor.b64  	%rd4444, %rd4441, %rd4443;
	xor.b64  	%rd4445, %rd4444, %rd4442;
	shr.u64 	%rd4446, %rd10146, 7;
	shf.r.wrap.b32 	%r3324, %r3163, %r3162, 1;
	shf.r.wrap.b32 	%r3325, %r3162, %r3163, 1;
	mov.b64 	%rd4447, {%r3325, %r3324};
	xor.b64  	%rd4448, %rd4447, %rd4446;
	shf.r.wrap.b32 	%r3326, %r3163, %r3162, 8;
	shf.r.wrap.b32 	%r3327, %r3162, %r3163, 8;
	mov.b64 	%rd4449, {%r3327, %r3326};
	xor.b64  	%rd4450, %rd4448, %rd4449;
	add.s64 	%rd4451, %rd10167, %rd10147;
	add.s64 	%rd4452, %rd4451, %rd4445;
	add.s64 	%rd10147, %rd4452, %rd4450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3328,%dummy}, %rd10148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3329}, %rd10148;
	}
	shf.r.wrap.b32 	%r3330, %r3329, %r3328, 19;
	shf.r.wrap.b32 	%r3331, %r3328, %r3329, 19;
	mov.b64 	%rd4453, {%r3331, %r3330};
	shf.l.wrap.b32 	%r3332, %r3328, %r3329, 3;
	shf.l.wrap.b32 	%r3333, %r3329, %r3328, 3;
	mov.b64 	%rd4454, {%r3333, %r3332};
	shr.u64 	%rd4455, %rd10148, 6;
	xor.b64  	%rd4456, %rd4453, %rd4455;
	xor.b64  	%rd4457, %rd4456, %rd4454;
	shr.u64 	%rd4458, %rd10145, 7;
	shf.r.wrap.b32 	%r3334, %r3175, %r3174, 1;
	shf.r.wrap.b32 	%r3335, %r3174, %r3175, 1;
	mov.b64 	%rd4459, {%r3335, %r3334};
	xor.b64  	%rd4460, %rd4459, %rd4458;
	shf.r.wrap.b32 	%r3336, %r3175, %r3174, 8;
	shf.r.wrap.b32 	%r3337, %r3174, %r3175, 8;
	mov.b64 	%rd4461, {%r3337, %r3336};
	xor.b64  	%rd4462, %rd4460, %rd4461;
	add.s64 	%rd4463, %rd10168, %rd10146;
	add.s64 	%rd4464, %rd4463, %rd4457;
	add.s64 	%rd10146, %rd4464, %rd4462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3338,%dummy}, %rd10147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3339}, %rd10147;
	}
	shf.r.wrap.b32 	%r3340, %r3339, %r3338, 19;
	shf.r.wrap.b32 	%r3341, %r3338, %r3339, 19;
	mov.b64 	%rd4465, {%r3341, %r3340};
	shf.l.wrap.b32 	%r3342, %r3338, %r3339, 3;
	shf.l.wrap.b32 	%r3343, %r3339, %r3338, 3;
	mov.b64 	%rd4466, {%r3343, %r3342};
	shr.u64 	%rd4467, %rd10147, 6;
	xor.b64  	%rd4468, %rd4465, %rd4467;
	xor.b64  	%rd4469, %rd4468, %rd4466;
	shf.r.wrap.b32 	%r3344, %r3187, %r3186, 1;
	shf.r.wrap.b32 	%r3345, %r3186, %r3187, 1;
	mov.b64 	%rd4470, {%r3345, %r3344};
	shf.r.wrap.b32 	%r3346, %r3187, %r3186, 8;
	shf.r.wrap.b32 	%r3347, %r3186, %r3187, 8;
	mov.b64 	%rd4471, {%r3347, %r3346};
	shr.u64 	%rd4472, %rd10161, 7;
	xor.b64  	%rd4473, %rd4470, %rd4472;
	xor.b64  	%rd4474, %rd4473, %rd4471;
	add.s64 	%rd4475, %rd10152, %rd10145;
	add.s64 	%rd4476, %rd4475, %rd4469;
	add.s64 	%rd10145, %rd4476, %rd4474;
	mul.wide.s32 	%rd4477, %r7645, 8;
	mov.u64 	%rd4478, k_sha512;
	add.s64 	%rd4479, %rd4478, %rd4477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3348,%dummy}, %rd10157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3349}, %rd10157;
	}
	shf.r.wrap.b32 	%r3350, %r3349, %r3348, 18;
	shf.r.wrap.b32 	%r3351, %r3348, %r3349, 18;
	mov.b64 	%rd4480, {%r3351, %r3350};
	shf.r.wrap.b32 	%r3352, %r3349, %r3348, 14;
	shf.r.wrap.b32 	%r3353, %r3348, %r3349, 14;
	mov.b64 	%rd4481, {%r3353, %r3352};
	xor.b64  	%rd4482, %rd4480, %rd4481;
	shf.l.wrap.b32 	%r3354, %r3348, %r3349, 23;
	shf.l.wrap.b32 	%r3355, %r3349, %r3348, 23;
	mov.b64 	%rd4483, {%r3355, %r3354};
	xor.b64  	%rd4484, %rd4482, %rd4483;
	xor.b64  	%rd4485, %rd10158, %rd10159;
	and.b64  	%rd4486, %rd10157, %rd4485;
	xor.b64  	%rd4487, %rd4486, %rd10159;
	add.s64 	%rd4488, %rd4487, %rd10160;
	add.s64 	%rd4489, %rd4488, %rd10161;
	ld.const.u64 	%rd4490, [%rd4479];
	add.s64 	%rd4491, %rd4489, %rd4490;
	add.s64 	%rd4492, %rd4491, %rd4484;
	add.s64 	%rd4493, %rd4492, %rd10156;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3356}, %rd10153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3357,%dummy}, %rd10153;
	}
	shf.l.wrap.b32 	%r3358, %r3357, %r3356, 30;
	shf.l.wrap.b32 	%r3359, %r3356, %r3357, 30;
	mov.b64 	%rd4494, {%r3359, %r3358};
	shf.r.wrap.b32 	%r3360, %r3356, %r3357, 28;
	shf.r.wrap.b32 	%r3361, %r3357, %r3356, 28;
	mov.b64 	%rd4495, {%r3361, %r3360};
	xor.b64  	%rd4496, %rd4494, %rd4495;
	shf.l.wrap.b32 	%r3362, %r3357, %r3356, 25;
	shf.l.wrap.b32 	%r3363, %r3356, %r3357, 25;
	mov.b64 	%rd4497, {%r3363, %r3362};
	xor.b64  	%rd4498, %rd4496, %rd4497;
	xor.b64  	%rd4499, %rd10153, %rd10154;
	and.b64  	%rd4500, %rd4499, %rd10155;
	and.b64  	%rd4501, %rd10153, %rd10154;
	or.b64  	%rd4502, %rd4500, %rd4501;
	add.s64 	%rd4503, %rd4492, %rd4502;
	add.s64 	%rd4504, %rd4503, %rd4498;
	add.s32 	%r3364, %r7645, 1;
	mul.wide.s32 	%rd4505, %r3364, 8;
	add.s64 	%rd4506, %rd4478, %rd4505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3365,%dummy}, %rd4493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3366}, %rd4493;
	}
	shf.r.wrap.b32 	%r3367, %r3366, %r3365, 14;
	shf.r.wrap.b32 	%r3368, %r3365, %r3366, 14;
	mov.b64 	%rd4507, {%r3368, %r3367};
	shf.r.wrap.b32 	%r3369, %r3366, %r3365, 18;
	shf.r.wrap.b32 	%r3370, %r3365, %r3366, 18;
	mov.b64 	%rd4508, {%r3370, %r3369};
	xor.b64  	%rd4509, %rd4508, %rd4507;
	shf.l.wrap.b32 	%r3371, %r3365, %r3366, 23;
	shf.l.wrap.b32 	%r3372, %r3366, %r3365, 23;
	mov.b64 	%rd4510, {%r3372, %r3371};
	xor.b64  	%rd4511, %rd4509, %rd4510;
	xor.b64  	%rd4512, %rd10157, %rd10158;
	and.b64  	%rd4513, %rd4493, %rd4512;
	xor.b64  	%rd4514, %rd4513, %rd10158;
	add.s64 	%rd4515, %rd10162, %rd10159;
	ld.const.u64 	%rd4516, [%rd4506];
	add.s64 	%rd4517, %rd4515, %rd4516;
	add.s64 	%rd4518, %rd4517, %rd4514;
	add.s64 	%rd4519, %rd4518, %rd4511;
	add.s64 	%rd4520, %rd4519, %rd10155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3373,%dummy}, %rd4504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3374}, %rd4504;
	}
	shf.r.wrap.b32 	%r3375, %r3374, %r3373, 28;
	shf.r.wrap.b32 	%r3376, %r3373, %r3374, 28;
	mov.b64 	%rd4521, {%r3376, %r3375};
	shf.l.wrap.b32 	%r3377, %r3373, %r3374, 30;
	shf.l.wrap.b32 	%r3378, %r3374, %r3373, 30;
	mov.b64 	%rd4522, {%r3378, %r3377};
	xor.b64  	%rd4523, %rd4522, %rd4521;
	shf.l.wrap.b32 	%r3379, %r3373, %r3374, 25;
	shf.l.wrap.b32 	%r3380, %r3374, %r3373, 25;
	mov.b64 	%rd4524, {%r3380, %r3379};
	xor.b64  	%rd4525, %rd4523, %rd4524;
	and.b64  	%rd4526, %rd4504, %rd10153;
	xor.b64  	%rd4527, %rd4504, %rd10153;
	and.b64  	%rd4528, %rd4527, %rd10154;
	or.b64  	%rd4529, %rd4528, %rd4526;
	add.s64 	%rd4530, %rd4519, %rd4529;
	add.s64 	%rd4531, %rd4530, %rd4525;
	add.s32 	%r3381, %r7645, 2;
	mul.wide.s32 	%rd4532, %r3381, 8;
	add.s64 	%rd4533, %rd4478, %rd4532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3382,%dummy}, %rd4520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3383}, %rd4520;
	}
	shf.r.wrap.b32 	%r3384, %r3383, %r3382, 14;
	shf.r.wrap.b32 	%r3385, %r3382, %r3383, 14;
	mov.b64 	%rd4534, {%r3385, %r3384};
	shf.r.wrap.b32 	%r3386, %r3383, %r3382, 18;
	shf.r.wrap.b32 	%r3387, %r3382, %r3383, 18;
	mov.b64 	%rd4535, {%r3387, %r3386};
	xor.b64  	%rd4536, %rd4535, %rd4534;
	shf.l.wrap.b32 	%r3388, %r3382, %r3383, 23;
	shf.l.wrap.b32 	%r3389, %r3383, %r3382, 23;
	mov.b64 	%rd4537, {%r3389, %r3388};
	xor.b64  	%rd4538, %rd4536, %rd4537;
	xor.b64  	%rd4539, %rd4493, %rd10157;
	and.b64  	%rd4540, %rd4520, %rd4539;
	xor.b64  	%rd4541, %rd4540, %rd10157;
	add.s64 	%rd4542, %rd10163, %rd10158;
	ld.const.u64 	%rd4543, [%rd4533];
	add.s64 	%rd4544, %rd4542, %rd4543;
	add.s64 	%rd4545, %rd4544, %rd4541;
	add.s64 	%rd4546, %rd4545, %rd4538;
	add.s64 	%rd4547, %rd4546, %rd10154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3390,%dummy}, %rd4531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3391}, %rd4531;
	}
	shf.r.wrap.b32 	%r3392, %r3391, %r3390, 28;
	shf.r.wrap.b32 	%r3393, %r3390, %r3391, 28;
	mov.b64 	%rd4548, {%r3393, %r3392};
	shf.l.wrap.b32 	%r3394, %r3390, %r3391, 30;
	shf.l.wrap.b32 	%r3395, %r3391, %r3390, 30;
	mov.b64 	%rd4549, {%r3395, %r3394};
	xor.b64  	%rd4550, %rd4549, %rd4548;
	shf.l.wrap.b32 	%r3396, %r3390, %r3391, 25;
	shf.l.wrap.b32 	%r3397, %r3391, %r3390, 25;
	mov.b64 	%rd4551, {%r3397, %r3396};
	xor.b64  	%rd4552, %rd4550, %rd4551;
	and.b64  	%rd4553, %rd4531, %rd4504;
	xor.b64  	%rd4554, %rd4531, %rd4504;
	and.b64  	%rd4555, %rd4554, %rd10153;
	or.b64  	%rd4556, %rd4555, %rd4553;
	add.s64 	%rd4557, %rd4546, %rd4556;
	add.s64 	%rd4558, %rd4557, %rd4552;
	add.s32 	%r3398, %r7645, 3;
	mul.wide.s32 	%rd4559, %r3398, 8;
	add.s64 	%rd4560, %rd4478, %rd4559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3399,%dummy}, %rd4547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3400}, %rd4547;
	}
	shf.r.wrap.b32 	%r3401, %r3400, %r3399, 14;
	shf.r.wrap.b32 	%r3402, %r3399, %r3400, 14;
	mov.b64 	%rd4561, {%r3402, %r3401};
	shf.r.wrap.b32 	%r3403, %r3400, %r3399, 18;
	shf.r.wrap.b32 	%r3404, %r3399, %r3400, 18;
	mov.b64 	%rd4562, {%r3404, %r3403};
	xor.b64  	%rd4563, %rd4562, %rd4561;
	shf.l.wrap.b32 	%r3405, %r3399, %r3400, 23;
	shf.l.wrap.b32 	%r3406, %r3400, %r3399, 23;
	mov.b64 	%rd4564, {%r3406, %r3405};
	xor.b64  	%rd4565, %rd4563, %rd4564;
	xor.b64  	%rd4566, %rd4520, %rd4493;
	and.b64  	%rd4567, %rd4547, %rd4566;
	xor.b64  	%rd4568, %rd4567, %rd4493;
	add.s64 	%rd4569, %rd10164, %rd10157;
	ld.const.u64 	%rd4570, [%rd4560];
	add.s64 	%rd4571, %rd4569, %rd4570;
	add.s64 	%rd4572, %rd4571, %rd4568;
	add.s64 	%rd4573, %rd4572, %rd4565;
	add.s64 	%rd4574, %rd4573, %rd10153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3407,%dummy}, %rd4558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3408}, %rd4558;
	}
	shf.r.wrap.b32 	%r3409, %r3408, %r3407, 28;
	shf.r.wrap.b32 	%r3410, %r3407, %r3408, 28;
	mov.b64 	%rd4575, {%r3410, %r3409};
	shf.l.wrap.b32 	%r3411, %r3407, %r3408, 30;
	shf.l.wrap.b32 	%r3412, %r3408, %r3407, 30;
	mov.b64 	%rd4576, {%r3412, %r3411};
	xor.b64  	%rd4577, %rd4576, %rd4575;
	shf.l.wrap.b32 	%r3413, %r3407, %r3408, 25;
	shf.l.wrap.b32 	%r3414, %r3408, %r3407, 25;
	mov.b64 	%rd4578, {%r3414, %r3413};
	xor.b64  	%rd4579, %rd4577, %rd4578;
	and.b64  	%rd4580, %rd4558, %rd4531;
	xor.b64  	%rd4581, %rd4558, %rd4531;
	and.b64  	%rd4582, %rd4581, %rd4504;
	or.b64  	%rd4583, %rd4582, %rd4580;
	add.s64 	%rd4584, %rd4573, %rd4583;
	add.s64 	%rd4585, %rd4584, %rd4579;
	add.s32 	%r3415, %r7645, 4;
	mul.wide.s32 	%rd4586, %r3415, 8;
	add.s64 	%rd4587, %rd4478, %rd4586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3416,%dummy}, %rd4574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3417}, %rd4574;
	}
	shf.r.wrap.b32 	%r3418, %r3417, %r3416, 14;
	shf.r.wrap.b32 	%r3419, %r3416, %r3417, 14;
	mov.b64 	%rd4588, {%r3419, %r3418};
	shf.r.wrap.b32 	%r3420, %r3417, %r3416, 18;
	shf.r.wrap.b32 	%r3421, %r3416, %r3417, 18;
	mov.b64 	%rd4589, {%r3421, %r3420};
	xor.b64  	%rd4590, %rd4589, %rd4588;
	shf.l.wrap.b32 	%r3422, %r3416, %r3417, 23;
	shf.l.wrap.b32 	%r3423, %r3417, %r3416, 23;
	mov.b64 	%rd4591, {%r3423, %r3422};
	xor.b64  	%rd4592, %rd4590, %rd4591;
	xor.b64  	%rd4593, %rd4547, %rd4520;
	and.b64  	%rd4594, %rd4574, %rd4593;
	xor.b64  	%rd4595, %rd4594, %rd4520;
	add.s64 	%rd4596, %rd4493, %rd10165;
	ld.const.u64 	%rd4597, [%rd4587];
	add.s64 	%rd4598, %rd4596, %rd4597;
	add.s64 	%rd4599, %rd4598, %rd4595;
	add.s64 	%rd4600, %rd4599, %rd4592;
	add.s64 	%rd4601, %rd4600, %rd4504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3424,%dummy}, %rd4585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3425}, %rd4585;
	}
	shf.r.wrap.b32 	%r3426, %r3425, %r3424, 28;
	shf.r.wrap.b32 	%r3427, %r3424, %r3425, 28;
	mov.b64 	%rd4602, {%r3427, %r3426};
	shf.l.wrap.b32 	%r3428, %r3424, %r3425, 30;
	shf.l.wrap.b32 	%r3429, %r3425, %r3424, 30;
	mov.b64 	%rd4603, {%r3429, %r3428};
	xor.b64  	%rd4604, %rd4603, %rd4602;
	shf.l.wrap.b32 	%r3430, %r3424, %r3425, 25;
	shf.l.wrap.b32 	%r3431, %r3425, %r3424, 25;
	mov.b64 	%rd4605, {%r3431, %r3430};
	xor.b64  	%rd4606, %rd4604, %rd4605;
	and.b64  	%rd4607, %rd4585, %rd4558;
	xor.b64  	%rd4608, %rd4585, %rd4558;
	and.b64  	%rd4609, %rd4608, %rd4531;
	or.b64  	%rd4610, %rd4609, %rd4607;
	add.s64 	%rd4611, %rd4600, %rd4610;
	add.s64 	%rd4612, %rd4611, %rd4606;
	add.s32 	%r3432, %r7645, 5;
	mul.wide.s32 	%rd4613, %r3432, 8;
	add.s64 	%rd4614, %rd4478, %rd4613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3433,%dummy}, %rd4601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3434}, %rd4601;
	}
	shf.r.wrap.b32 	%r3435, %r3434, %r3433, 14;
	shf.r.wrap.b32 	%r3436, %r3433, %r3434, 14;
	mov.b64 	%rd4615, {%r3436, %r3435};
	shf.r.wrap.b32 	%r3437, %r3434, %r3433, 18;
	shf.r.wrap.b32 	%r3438, %r3433, %r3434, 18;
	mov.b64 	%rd4616, {%r3438, %r3437};
	xor.b64  	%rd4617, %rd4616, %rd4615;
	shf.l.wrap.b32 	%r3439, %r3433, %r3434, 23;
	shf.l.wrap.b32 	%r3440, %r3434, %r3433, 23;
	mov.b64 	%rd4618, {%r3440, %r3439};
	xor.b64  	%rd4619, %rd4617, %rd4618;
	xor.b64  	%rd4620, %rd4574, %rd4547;
	and.b64  	%rd4621, %rd4601, %rd4620;
	xor.b64  	%rd4622, %rd4621, %rd4547;
	add.s64 	%rd4623, %rd4520, %rd10166;
	ld.const.u64 	%rd4624, [%rd4614];
	add.s64 	%rd4625, %rd4623, %rd4624;
	add.s64 	%rd4626, %rd4625, %rd4622;
	add.s64 	%rd4627, %rd4626, %rd4619;
	add.s64 	%rd4628, %rd4627, %rd4531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3441,%dummy}, %rd4612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3442}, %rd4612;
	}
	shf.r.wrap.b32 	%r3443, %r3442, %r3441, 28;
	shf.r.wrap.b32 	%r3444, %r3441, %r3442, 28;
	mov.b64 	%rd4629, {%r3444, %r3443};
	shf.l.wrap.b32 	%r3445, %r3441, %r3442, 30;
	shf.l.wrap.b32 	%r3446, %r3442, %r3441, 30;
	mov.b64 	%rd4630, {%r3446, %r3445};
	xor.b64  	%rd4631, %rd4630, %rd4629;
	shf.l.wrap.b32 	%r3447, %r3441, %r3442, 25;
	shf.l.wrap.b32 	%r3448, %r3442, %r3441, 25;
	mov.b64 	%rd4632, {%r3448, %r3447};
	xor.b64  	%rd4633, %rd4631, %rd4632;
	and.b64  	%rd4634, %rd4612, %rd4585;
	xor.b64  	%rd4635, %rd4612, %rd4585;
	and.b64  	%rd4636, %rd4635, %rd4558;
	or.b64  	%rd4637, %rd4636, %rd4634;
	add.s64 	%rd4638, %rd4627, %rd4637;
	add.s64 	%rd4639, %rd4638, %rd4633;
	add.s32 	%r3449, %r7645, 6;
	mul.wide.s32 	%rd4640, %r3449, 8;
	add.s64 	%rd4641, %rd4478, %rd4640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3450,%dummy}, %rd4628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3451}, %rd4628;
	}
	shf.r.wrap.b32 	%r3452, %r3451, %r3450, 14;
	shf.r.wrap.b32 	%r3453, %r3450, %r3451, 14;
	mov.b64 	%rd4642, {%r3453, %r3452};
	shf.r.wrap.b32 	%r3454, %r3451, %r3450, 18;
	shf.r.wrap.b32 	%r3455, %r3450, %r3451, 18;
	mov.b64 	%rd4643, {%r3455, %r3454};
	xor.b64  	%rd4644, %rd4643, %rd4642;
	shf.l.wrap.b32 	%r3456, %r3450, %r3451, 23;
	shf.l.wrap.b32 	%r3457, %r3451, %r3450, 23;
	mov.b64 	%rd4645, {%r3457, %r3456};
	xor.b64  	%rd4646, %rd4644, %rd4645;
	xor.b64  	%rd4647, %rd4601, %rd4574;
	and.b64  	%rd4648, %rd4628, %rd4647;
	xor.b64  	%rd4649, %rd4648, %rd4574;
	add.s64 	%rd4650, %rd4547, %rd10167;
	ld.const.u64 	%rd4651, [%rd4641];
	add.s64 	%rd4652, %rd4650, %rd4651;
	add.s64 	%rd4653, %rd4652, %rd4649;
	add.s64 	%rd4654, %rd4653, %rd4646;
	add.s64 	%rd4655, %rd4654, %rd4558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3458,%dummy}, %rd4639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3459}, %rd4639;
	}
	shf.r.wrap.b32 	%r3460, %r3459, %r3458, 28;
	shf.r.wrap.b32 	%r3461, %r3458, %r3459, 28;
	mov.b64 	%rd4656, {%r3461, %r3460};
	shf.l.wrap.b32 	%r3462, %r3458, %r3459, 30;
	shf.l.wrap.b32 	%r3463, %r3459, %r3458, 30;
	mov.b64 	%rd4657, {%r3463, %r3462};
	xor.b64  	%rd4658, %rd4657, %rd4656;
	shf.l.wrap.b32 	%r3464, %r3458, %r3459, 25;
	shf.l.wrap.b32 	%r3465, %r3459, %r3458, 25;
	mov.b64 	%rd4659, {%r3465, %r3464};
	xor.b64  	%rd4660, %rd4658, %rd4659;
	and.b64  	%rd4661, %rd4639, %rd4612;
	xor.b64  	%rd4662, %rd4639, %rd4612;
	and.b64  	%rd4663, %rd4662, %rd4585;
	or.b64  	%rd4664, %rd4663, %rd4661;
	add.s64 	%rd4665, %rd4654, %rd4664;
	add.s64 	%rd4666, %rd4665, %rd4660;
	add.s32 	%r3466, %r7645, 7;
	mul.wide.s32 	%rd4667, %r3466, 8;
	add.s64 	%rd4668, %rd4478, %rd4667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3467,%dummy}, %rd4655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3468}, %rd4655;
	}
	shf.r.wrap.b32 	%r3469, %r3468, %r3467, 14;
	shf.r.wrap.b32 	%r3470, %r3467, %r3468, 14;
	mov.b64 	%rd4669, {%r3470, %r3469};
	shf.r.wrap.b32 	%r3471, %r3468, %r3467, 18;
	shf.r.wrap.b32 	%r3472, %r3467, %r3468, 18;
	mov.b64 	%rd4670, {%r3472, %r3471};
	xor.b64  	%rd4671, %rd4670, %rd4669;
	shf.l.wrap.b32 	%r3473, %r3467, %r3468, 23;
	shf.l.wrap.b32 	%r3474, %r3468, %r3467, 23;
	mov.b64 	%rd4672, {%r3474, %r3473};
	xor.b64  	%rd4673, %rd4671, %rd4672;
	xor.b64  	%rd4674, %rd4628, %rd4601;
	and.b64  	%rd4675, %rd4655, %rd4674;
	xor.b64  	%rd4676, %rd4675, %rd4601;
	add.s64 	%rd4677, %rd4574, %rd10168;
	ld.const.u64 	%rd4678, [%rd4668];
	add.s64 	%rd4679, %rd4677, %rd4678;
	add.s64 	%rd4680, %rd4679, %rd4676;
	add.s64 	%rd4681, %rd4680, %rd4673;
	add.s64 	%rd4682, %rd4681, %rd4585;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3475,%dummy}, %rd4666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3476}, %rd4666;
	}
	shf.r.wrap.b32 	%r3477, %r3476, %r3475, 28;
	shf.r.wrap.b32 	%r3478, %r3475, %r3476, 28;
	mov.b64 	%rd4683, {%r3478, %r3477};
	shf.l.wrap.b32 	%r3479, %r3475, %r3476, 30;
	shf.l.wrap.b32 	%r3480, %r3476, %r3475, 30;
	mov.b64 	%rd4684, {%r3480, %r3479};
	xor.b64  	%rd4685, %rd4684, %rd4683;
	shf.l.wrap.b32 	%r3481, %r3475, %r3476, 25;
	shf.l.wrap.b32 	%r3482, %r3476, %r3475, 25;
	mov.b64 	%rd4686, {%r3482, %r3481};
	xor.b64  	%rd4687, %rd4685, %rd4686;
	and.b64  	%rd4688, %rd4666, %rd4639;
	xor.b64  	%rd4689, %rd4666, %rd4639;
	and.b64  	%rd4690, %rd4689, %rd4612;
	or.b64  	%rd4691, %rd4690, %rd4688;
	add.s64 	%rd4692, %rd4681, %rd4691;
	add.s64 	%rd4693, %rd4692, %rd4687;
	add.s32 	%r3483, %r7645, 8;
	mul.wide.s32 	%rd4694, %r3483, 8;
	add.s64 	%rd4695, %rd4478, %rd4694;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3484,%dummy}, %rd4682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3485}, %rd4682;
	}
	shf.r.wrap.b32 	%r3486, %r3485, %r3484, 14;
	shf.r.wrap.b32 	%r3487, %r3484, %r3485, 14;
	mov.b64 	%rd4696, {%r3487, %r3486};
	shf.r.wrap.b32 	%r3488, %r3485, %r3484, 18;
	shf.r.wrap.b32 	%r3489, %r3484, %r3485, 18;
	mov.b64 	%rd4697, {%r3489, %r3488};
	xor.b64  	%rd4698, %rd4697, %rd4696;
	shf.l.wrap.b32 	%r3490, %r3484, %r3485, 23;
	shf.l.wrap.b32 	%r3491, %r3485, %r3484, 23;
	mov.b64 	%rd4699, {%r3491, %r3490};
	xor.b64  	%rd4700, %rd4698, %rd4699;
	xor.b64  	%rd4701, %rd4655, %rd4628;
	and.b64  	%rd4702, %rd4682, %rd4701;
	xor.b64  	%rd4703, %rd4702, %rd4628;
	add.s64 	%rd4704, %rd4601, %rd10152;
	ld.const.u64 	%rd4705, [%rd4695];
	add.s64 	%rd4706, %rd4704, %rd4705;
	add.s64 	%rd4707, %rd4706, %rd4703;
	add.s64 	%rd4708, %rd4707, %rd4700;
	add.s64 	%rd4709, %rd4708, %rd4612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3492,%dummy}, %rd4693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3493}, %rd4693;
	}
	shf.r.wrap.b32 	%r3494, %r3493, %r3492, 28;
	shf.r.wrap.b32 	%r3495, %r3492, %r3493, 28;
	mov.b64 	%rd4710, {%r3495, %r3494};
	shf.l.wrap.b32 	%r3496, %r3492, %r3493, 30;
	shf.l.wrap.b32 	%r3497, %r3493, %r3492, 30;
	mov.b64 	%rd4711, {%r3497, %r3496};
	xor.b64  	%rd4712, %rd4711, %rd4710;
	shf.l.wrap.b32 	%r3498, %r3492, %r3493, 25;
	shf.l.wrap.b32 	%r3499, %r3493, %r3492, 25;
	mov.b64 	%rd4713, {%r3499, %r3498};
	xor.b64  	%rd4714, %rd4712, %rd4713;
	and.b64  	%rd4715, %rd4693, %rd4666;
	xor.b64  	%rd4716, %rd4693, %rd4666;
	and.b64  	%rd4717, %rd4716, %rd4639;
	or.b64  	%rd4718, %rd4717, %rd4715;
	add.s64 	%rd4719, %rd4708, %rd4718;
	add.s64 	%rd4720, %rd4719, %rd4714;
	add.s32 	%r3500, %r7645, 9;
	mul.wide.s32 	%rd4721, %r3500, 8;
	add.s64 	%rd4722, %rd4478, %rd4721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3501,%dummy}, %rd4709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3502}, %rd4709;
	}
	shf.r.wrap.b32 	%r3503, %r3502, %r3501, 14;
	shf.r.wrap.b32 	%r3504, %r3501, %r3502, 14;
	mov.b64 	%rd4723, {%r3504, %r3503};
	shf.r.wrap.b32 	%r3505, %r3502, %r3501, 18;
	shf.r.wrap.b32 	%r3506, %r3501, %r3502, 18;
	mov.b64 	%rd4724, {%r3506, %r3505};
	xor.b64  	%rd4725, %rd4724, %rd4723;
	shf.l.wrap.b32 	%r3507, %r3501, %r3502, 23;
	shf.l.wrap.b32 	%r3508, %r3502, %r3501, 23;
	mov.b64 	%rd4726, {%r3508, %r3507};
	xor.b64  	%rd4727, %rd4725, %rd4726;
	xor.b64  	%rd4728, %rd4682, %rd4655;
	and.b64  	%rd4729, %rd4709, %rd4728;
	xor.b64  	%rd4730, %rd4729, %rd4655;
	add.s64 	%rd4731, %rd4628, %rd10151;
	ld.const.u64 	%rd4732, [%rd4722];
	add.s64 	%rd4733, %rd4731, %rd4732;
	add.s64 	%rd4734, %rd4733, %rd4730;
	add.s64 	%rd4735, %rd4734, %rd4727;
	add.s64 	%rd4736, %rd4735, %rd4639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3509,%dummy}, %rd4720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3510}, %rd4720;
	}
	shf.r.wrap.b32 	%r3511, %r3510, %r3509, 28;
	shf.r.wrap.b32 	%r3512, %r3509, %r3510, 28;
	mov.b64 	%rd4737, {%r3512, %r3511};
	shf.l.wrap.b32 	%r3513, %r3509, %r3510, 30;
	shf.l.wrap.b32 	%r3514, %r3510, %r3509, 30;
	mov.b64 	%rd4738, {%r3514, %r3513};
	xor.b64  	%rd4739, %rd4738, %rd4737;
	shf.l.wrap.b32 	%r3515, %r3509, %r3510, 25;
	shf.l.wrap.b32 	%r3516, %r3510, %r3509, 25;
	mov.b64 	%rd4740, {%r3516, %r3515};
	xor.b64  	%rd4741, %rd4739, %rd4740;
	and.b64  	%rd4742, %rd4720, %rd4693;
	xor.b64  	%rd4743, %rd4720, %rd4693;
	and.b64  	%rd4744, %rd4743, %rd4666;
	or.b64  	%rd4745, %rd4744, %rd4742;
	add.s64 	%rd4746, %rd4735, %rd4745;
	add.s64 	%rd4747, %rd4746, %rd4741;
	add.s32 	%r3517, %r7645, 10;
	mul.wide.s32 	%rd4748, %r3517, 8;
	add.s64 	%rd4749, %rd4478, %rd4748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3518,%dummy}, %rd4736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3519}, %rd4736;
	}
	shf.r.wrap.b32 	%r3520, %r3519, %r3518, 14;
	shf.r.wrap.b32 	%r3521, %r3518, %r3519, 14;
	mov.b64 	%rd4750, {%r3521, %r3520};
	shf.r.wrap.b32 	%r3522, %r3519, %r3518, 18;
	shf.r.wrap.b32 	%r3523, %r3518, %r3519, 18;
	mov.b64 	%rd4751, {%r3523, %r3522};
	xor.b64  	%rd4752, %rd4751, %rd4750;
	shf.l.wrap.b32 	%r3524, %r3518, %r3519, 23;
	shf.l.wrap.b32 	%r3525, %r3519, %r3518, 23;
	mov.b64 	%rd4753, {%r3525, %r3524};
	xor.b64  	%rd4754, %rd4752, %rd4753;
	xor.b64  	%rd4755, %rd4709, %rd4682;
	and.b64  	%rd4756, %rd4736, %rd4755;
	xor.b64  	%rd4757, %rd4756, %rd4682;
	add.s64 	%rd4758, %rd4655, %rd10150;
	ld.const.u64 	%rd4759, [%rd4749];
	add.s64 	%rd4760, %rd4758, %rd4759;
	add.s64 	%rd4761, %rd4760, %rd4757;
	add.s64 	%rd4762, %rd4761, %rd4754;
	add.s64 	%rd4763, %rd4762, %rd4666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3526,%dummy}, %rd4747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3527}, %rd4747;
	}
	shf.r.wrap.b32 	%r3528, %r3527, %r3526, 28;
	shf.r.wrap.b32 	%r3529, %r3526, %r3527, 28;
	mov.b64 	%rd4764, {%r3529, %r3528};
	shf.l.wrap.b32 	%r3530, %r3526, %r3527, 30;
	shf.l.wrap.b32 	%r3531, %r3527, %r3526, 30;
	mov.b64 	%rd4765, {%r3531, %r3530};
	xor.b64  	%rd4766, %rd4765, %rd4764;
	shf.l.wrap.b32 	%r3532, %r3526, %r3527, 25;
	shf.l.wrap.b32 	%r3533, %r3527, %r3526, 25;
	mov.b64 	%rd4767, {%r3533, %r3532};
	xor.b64  	%rd4768, %rd4766, %rd4767;
	and.b64  	%rd4769, %rd4747, %rd4720;
	xor.b64  	%rd4770, %rd4747, %rd4720;
	and.b64  	%rd4771, %rd4770, %rd4693;
	or.b64  	%rd4772, %rd4771, %rd4769;
	add.s64 	%rd4773, %rd4762, %rd4772;
	add.s64 	%rd4774, %rd4773, %rd4768;
	add.s32 	%r3534, %r7645, 11;
	mul.wide.s32 	%rd4775, %r3534, 8;
	add.s64 	%rd4776, %rd4478, %rd4775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3535,%dummy}, %rd4763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3536}, %rd4763;
	}
	shf.r.wrap.b32 	%r3537, %r3536, %r3535, 14;
	shf.r.wrap.b32 	%r3538, %r3535, %r3536, 14;
	mov.b64 	%rd4777, {%r3538, %r3537};
	shf.r.wrap.b32 	%r3539, %r3536, %r3535, 18;
	shf.r.wrap.b32 	%r3540, %r3535, %r3536, 18;
	mov.b64 	%rd4778, {%r3540, %r3539};
	xor.b64  	%rd4779, %rd4778, %rd4777;
	shf.l.wrap.b32 	%r3541, %r3535, %r3536, 23;
	shf.l.wrap.b32 	%r3542, %r3536, %r3535, 23;
	mov.b64 	%rd4780, {%r3542, %r3541};
	xor.b64  	%rd4781, %rd4779, %rd4780;
	xor.b64  	%rd4782, %rd4736, %rd4709;
	and.b64  	%rd4783, %rd4763, %rd4782;
	xor.b64  	%rd4784, %rd4783, %rd4709;
	add.s64 	%rd4785, %rd4682, %rd10149;
	ld.const.u64 	%rd4786, [%rd4776];
	add.s64 	%rd4787, %rd4785, %rd4786;
	add.s64 	%rd4788, %rd4787, %rd4784;
	add.s64 	%rd4789, %rd4788, %rd4781;
	add.s64 	%rd4790, %rd4789, %rd4693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3543,%dummy}, %rd4774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3544}, %rd4774;
	}
	shf.r.wrap.b32 	%r3545, %r3544, %r3543, 28;
	shf.r.wrap.b32 	%r3546, %r3543, %r3544, 28;
	mov.b64 	%rd4791, {%r3546, %r3545};
	shf.l.wrap.b32 	%r3547, %r3543, %r3544, 30;
	shf.l.wrap.b32 	%r3548, %r3544, %r3543, 30;
	mov.b64 	%rd4792, {%r3548, %r3547};
	xor.b64  	%rd4793, %rd4792, %rd4791;
	shf.l.wrap.b32 	%r3549, %r3543, %r3544, 25;
	shf.l.wrap.b32 	%r3550, %r3544, %r3543, 25;
	mov.b64 	%rd4794, {%r3550, %r3549};
	xor.b64  	%rd4795, %rd4793, %rd4794;
	and.b64  	%rd4796, %rd4774, %rd4747;
	xor.b64  	%rd4797, %rd4774, %rd4747;
	and.b64  	%rd4798, %rd4797, %rd4720;
	or.b64  	%rd4799, %rd4798, %rd4796;
	add.s64 	%rd4800, %rd4789, %rd4799;
	add.s64 	%rd4801, %rd4800, %rd4795;
	add.s32 	%r3551, %r7645, 12;
	mul.wide.s32 	%rd4802, %r3551, 8;
	add.s64 	%rd4803, %rd4478, %rd4802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3552,%dummy}, %rd4790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3553}, %rd4790;
	}
	shf.r.wrap.b32 	%r3554, %r3553, %r3552, 14;
	shf.r.wrap.b32 	%r3555, %r3552, %r3553, 14;
	mov.b64 	%rd4804, {%r3555, %r3554};
	shf.r.wrap.b32 	%r3556, %r3553, %r3552, 18;
	shf.r.wrap.b32 	%r3557, %r3552, %r3553, 18;
	mov.b64 	%rd4805, {%r3557, %r3556};
	xor.b64  	%rd4806, %rd4805, %rd4804;
	shf.l.wrap.b32 	%r3558, %r3552, %r3553, 23;
	shf.l.wrap.b32 	%r3559, %r3553, %r3552, 23;
	mov.b64 	%rd4807, {%r3559, %r3558};
	xor.b64  	%rd4808, %rd4806, %rd4807;
	xor.b64  	%rd4809, %rd4763, %rd4736;
	and.b64  	%rd4810, %rd4790, %rd4809;
	xor.b64  	%rd4811, %rd4810, %rd4736;
	add.s64 	%rd4812, %rd4709, %rd10148;
	ld.const.u64 	%rd4813, [%rd4803];
	add.s64 	%rd4814, %rd4812, %rd4813;
	add.s64 	%rd4815, %rd4814, %rd4811;
	add.s64 	%rd4816, %rd4815, %rd4808;
	add.s64 	%rd10160, %rd4816, %rd4720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3560,%dummy}, %rd4801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3561}, %rd4801;
	}
	shf.r.wrap.b32 	%r3562, %r3561, %r3560, 28;
	shf.r.wrap.b32 	%r3563, %r3560, %r3561, 28;
	mov.b64 	%rd4817, {%r3563, %r3562};
	shf.l.wrap.b32 	%r3564, %r3560, %r3561, 30;
	shf.l.wrap.b32 	%r3565, %r3561, %r3560, 30;
	mov.b64 	%rd4818, {%r3565, %r3564};
	xor.b64  	%rd4819, %rd4818, %rd4817;
	shf.l.wrap.b32 	%r3566, %r3560, %r3561, 25;
	shf.l.wrap.b32 	%r3567, %r3561, %r3560, 25;
	mov.b64 	%rd4820, {%r3567, %r3566};
	xor.b64  	%rd4821, %rd4819, %rd4820;
	and.b64  	%rd4822, %rd4801, %rd4774;
	xor.b64  	%rd4823, %rd4801, %rd4774;
	and.b64  	%rd4824, %rd4823, %rd4747;
	or.b64  	%rd4825, %rd4824, %rd4822;
	add.s64 	%rd4826, %rd4816, %rd4825;
	add.s64 	%rd10156, %rd4826, %rd4821;
	add.s32 	%r3568, %r7645, 13;
	mul.wide.s32 	%rd4827, %r3568, 8;
	add.s64 	%rd4828, %rd4478, %rd4827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3569,%dummy}, %rd10160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3570}, %rd10160;
	}
	shf.r.wrap.b32 	%r3571, %r3570, %r3569, 14;
	shf.r.wrap.b32 	%r3572, %r3569, %r3570, 14;
	mov.b64 	%rd4829, {%r3572, %r3571};
	shf.r.wrap.b32 	%r3573, %r3570, %r3569, 18;
	shf.r.wrap.b32 	%r3574, %r3569, %r3570, 18;
	mov.b64 	%rd4830, {%r3574, %r3573};
	xor.b64  	%rd4831, %rd4830, %rd4829;
	shf.l.wrap.b32 	%r3575, %r3569, %r3570, 23;
	shf.l.wrap.b32 	%r3576, %r3570, %r3569, 23;
	mov.b64 	%rd4832, {%r3576, %r3575};
	xor.b64  	%rd4833, %rd4831, %rd4832;
	xor.b64  	%rd4834, %rd4790, %rd4763;
	and.b64  	%rd4835, %rd10160, %rd4834;
	xor.b64  	%rd4836, %rd4835, %rd4763;
	add.s64 	%rd4837, %rd4736, %rd10147;
	ld.const.u64 	%rd4838, [%rd4828];
	add.s64 	%rd4839, %rd4837, %rd4838;
	add.s64 	%rd4840, %rd4839, %rd4836;
	add.s64 	%rd4841, %rd4840, %rd4833;
	add.s64 	%rd10159, %rd4841, %rd4747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3577,%dummy}, %rd10156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3578}, %rd10156;
	}
	shf.r.wrap.b32 	%r3579, %r3578, %r3577, 28;
	shf.r.wrap.b32 	%r3580, %r3577, %r3578, 28;
	mov.b64 	%rd4842, {%r3580, %r3579};
	shf.l.wrap.b32 	%r3581, %r3577, %r3578, 30;
	shf.l.wrap.b32 	%r3582, %r3578, %r3577, 30;
	mov.b64 	%rd4843, {%r3582, %r3581};
	xor.b64  	%rd4844, %rd4843, %rd4842;
	shf.l.wrap.b32 	%r3583, %r3577, %r3578, 25;
	shf.l.wrap.b32 	%r3584, %r3578, %r3577, 25;
	mov.b64 	%rd4845, {%r3584, %r3583};
	xor.b64  	%rd4846, %rd4844, %rd4845;
	and.b64  	%rd4847, %rd10156, %rd4801;
	xor.b64  	%rd4848, %rd10156, %rd4801;
	and.b64  	%rd4849, %rd4848, %rd4774;
	or.b64  	%rd4850, %rd4849, %rd4847;
	add.s64 	%rd4851, %rd4841, %rd4850;
	add.s64 	%rd10155, %rd4851, %rd4846;
	add.s32 	%r3585, %r7645, 14;
	mul.wide.s32 	%rd4852, %r3585, 8;
	add.s64 	%rd4853, %rd4478, %rd4852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3586,%dummy}, %rd10159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3587}, %rd10159;
	}
	shf.r.wrap.b32 	%r3588, %r3587, %r3586, 14;
	shf.r.wrap.b32 	%r3589, %r3586, %r3587, 14;
	mov.b64 	%rd4854, {%r3589, %r3588};
	shf.r.wrap.b32 	%r3590, %r3587, %r3586, 18;
	shf.r.wrap.b32 	%r3591, %r3586, %r3587, 18;
	mov.b64 	%rd4855, {%r3591, %r3590};
	xor.b64  	%rd4856, %rd4855, %rd4854;
	shf.l.wrap.b32 	%r3592, %r3586, %r3587, 23;
	shf.l.wrap.b32 	%r3593, %r3587, %r3586, 23;
	mov.b64 	%rd4857, {%r3593, %r3592};
	xor.b64  	%rd4858, %rd4856, %rd4857;
	xor.b64  	%rd4859, %rd10160, %rd4790;
	and.b64  	%rd4860, %rd10159, %rd4859;
	xor.b64  	%rd4861, %rd4860, %rd4790;
	add.s64 	%rd4862, %rd4763, %rd10146;
	ld.const.u64 	%rd4863, [%rd4853];
	add.s64 	%rd4864, %rd4862, %rd4863;
	add.s64 	%rd4865, %rd4864, %rd4861;
	add.s64 	%rd4866, %rd4865, %rd4858;
	add.s64 	%rd10158, %rd4866, %rd4774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3594,%dummy}, %rd10155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3595}, %rd10155;
	}
	shf.r.wrap.b32 	%r3596, %r3595, %r3594, 28;
	shf.r.wrap.b32 	%r3597, %r3594, %r3595, 28;
	mov.b64 	%rd4867, {%r3597, %r3596};
	shf.l.wrap.b32 	%r3598, %r3594, %r3595, 30;
	shf.l.wrap.b32 	%r3599, %r3595, %r3594, 30;
	mov.b64 	%rd4868, {%r3599, %r3598};
	xor.b64  	%rd4869, %rd4868, %rd4867;
	shf.l.wrap.b32 	%r3600, %r3594, %r3595, 25;
	shf.l.wrap.b32 	%r3601, %r3595, %r3594, 25;
	mov.b64 	%rd4870, {%r3601, %r3600};
	xor.b64  	%rd4871, %rd4869, %rd4870;
	and.b64  	%rd4872, %rd10155, %rd10156;
	xor.b64  	%rd4873, %rd10155, %rd10156;
	and.b64  	%rd4874, %rd4873, %rd4801;
	or.b64  	%rd4875, %rd4874, %rd4872;
	add.s64 	%rd4876, %rd4866, %rd4875;
	add.s64 	%rd10154, %rd4876, %rd4871;
	add.s32 	%r3602, %r7645, 15;
	mul.wide.s32 	%rd4877, %r3602, 8;
	add.s64 	%rd4878, %rd4478, %rd4877;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3603,%dummy}, %rd10158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3604}, %rd10158;
	}
	shf.r.wrap.b32 	%r3605, %r3604, %r3603, 14;
	shf.r.wrap.b32 	%r3606, %r3603, %r3604, 14;
	mov.b64 	%rd4879, {%r3606, %r3605};
	shf.r.wrap.b32 	%r3607, %r3604, %r3603, 18;
	shf.r.wrap.b32 	%r3608, %r3603, %r3604, 18;
	mov.b64 	%rd4880, {%r3608, %r3607};
	xor.b64  	%rd4881, %rd4880, %rd4879;
	shf.l.wrap.b32 	%r3609, %r3603, %r3604, 23;
	shf.l.wrap.b32 	%r3610, %r3604, %r3603, 23;
	mov.b64 	%rd4882, {%r3610, %r3609};
	xor.b64  	%rd4883, %rd4881, %rd4882;
	xor.b64  	%rd4884, %rd10159, %rd10160;
	and.b64  	%rd4885, %rd10158, %rd4884;
	xor.b64  	%rd4886, %rd4885, %rd10160;
	add.s64 	%rd4887, %rd4790, %rd10145;
	ld.const.u64 	%rd4888, [%rd4878];
	add.s64 	%rd4889, %rd4887, %rd4888;
	add.s64 	%rd4890, %rd4889, %rd4886;
	add.s64 	%rd4891, %rd4890, %rd4883;
	add.s64 	%rd10157, %rd4891, %rd4801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3611,%dummy}, %rd10154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3612}, %rd10154;
	}
	shf.r.wrap.b32 	%r3613, %r3612, %r3611, 28;
	shf.r.wrap.b32 	%r3614, %r3611, %r3612, 28;
	mov.b64 	%rd4892, {%r3614, %r3613};
	shf.l.wrap.b32 	%r3615, %r3611, %r3612, 30;
	shf.l.wrap.b32 	%r3616, %r3612, %r3611, 30;
	mov.b64 	%rd4893, {%r3616, %r3615};
	xor.b64  	%rd4894, %rd4893, %rd4892;
	shf.l.wrap.b32 	%r3617, %r3611, %r3612, 25;
	shf.l.wrap.b32 	%r3618, %r3612, %r3611, 25;
	mov.b64 	%rd4895, {%r3618, %r3617};
	xor.b64  	%rd4896, %rd4894, %rd4895;
	and.b64  	%rd4897, %rd10154, %rd10155;
	xor.b64  	%rd4898, %rd10154, %rd10155;
	and.b64  	%rd4899, %rd4898, %rd10156;
	or.b64  	%rd4900, %rd4899, %rd4897;
	add.s64 	%rd4901, %rd4891, %rd4900;
	add.s64 	%rd10153, %rd4901, %rd4896;
	add.s32 	%r7645, %r7645, 16;
	setp.lt.s32	%p21, %r7645, 80;
	@%p21 bra 	BB3_17;

	mov.b32	%r7544, %envreg3;
	mov.u32 	%r7543, %ntid.x;
	mov.u32 	%r7542, %ctaid.x;
	mov.u32 	%r7541, %tid.x;
	mad.lo.s32 	%r7540, %r7542, %r7543, %r7544;
	add.s32 	%r7539, %r7540, %r7541;
	add.u64 	%rd10011, %SPL, 128;
	add.s64 	%rd10010, %rd10011, 264;
	add.s64 	%rd10009, %rd10011, 256;
	add.s64 	%rd10008, %rd10011, 248;
	add.s64 	%rd10007, %rd10011, 240;
	add.s64 	%rd10006, %rd10011, 232;
	add.s64 	%rd10005, %rd10011, 224;
	add.s64 	%rd10004, %rd10011, 200;
	add.u64 	%rd10170, %SPL, 528;
	add.u64 	%rd9911, %SP, 128;
	ld.param.u64 	%rd9910, [m07100_init_param_17];
	ld.param.u32 	%r7534, [m07100_init_param_27];
	ld.param.u64 	%rd9909, [m07100_init_param_18];
	ld.param.u32 	%r7533, [m07100_init_param_32];
	ld.param.u64 	%rd9908, [m07100_init_param_4];
	add.u64 	%rd10169, %SPL, 128;
	add.s64 	%rd9906, %rd10169, 368;
	add.s64 	%rd9905, %rd10169, 360;
	add.s64 	%rd9904, %rd10169, 352;
	add.s64 	%rd9903, %rd10169, 344;
	add.s64 	%rd9902, %rd10169, 336;
	add.s64 	%rd9901, %rd10169, 328;
	add.s64 	%rd9900, %rd10169, 320;
	add.s64 	%rd9899, %rd10169, 312;
	add.s64 	%rd9898, %rd10169, 304;
	add.s64 	%rd9897, %rd10169, 296;
	add.s64 	%rd9896, %rd10169, 288;
	add.s64 	%rd9895, %rd10169, 280;
	add.s64 	%rd9894, %rd10169, 272;
	mov.u32 	%r7646, 0;
	add.s64 	%rd4902, %rd10153, 7640891576956012808;
	st.local.u64 	[%rd10004], %rd4902;
	add.s64 	%rd4903, %rd10154, -4942790177534073029;
	st.local.u64 	[%rd318], %rd4903;
	add.s64 	%rd4904, %rd10155, 4354685564936845355;
	st.local.u64 	[%rd319], %rd4904;
	add.s64 	%rd4905, %rd10156, -6534734903238641935;
	st.local.u64 	[%rd10005], %rd4905;
	add.s64 	%rd4906, %rd10157, 5840696475078001361;
	st.local.u64 	[%rd10006], %rd4906;
	add.s64 	%rd4907, %rd10158, -7276294671716946913;
	st.local.u64 	[%rd10007], %rd4907;
	add.s64 	%rd4908, %rd10159, 2270897969802886507;
	st.local.u64 	[%rd10008], %rd4908;
	add.s64 	%rd4909, %rd10160, 6620516959819538809;
	st.local.u64 	[%rd10009], %rd4909;
	st.local.v2.u32 	[%rd10010], {%r7646, %r7646};
	st.local.v2.u32 	[%rd9894], {%r7646, %r7646};
	st.local.v2.u32 	[%rd9895], {%r7646, %r7646};
	st.local.v2.u32 	[%rd9896], {%r7646, %r7646};
	st.local.v2.u32 	[%rd9897], {%r7646, %r7646};
	st.local.v2.u32 	[%rd9898], {%r7646, %r7646};
	st.local.v2.u32 	[%rd9899], {%r7646, %r7646};
	st.local.v2.u32 	[%rd9900], {%r7646, %r7646};
	st.local.v2.u32 	[%rd9901], {%r7646, %r7646};
	st.local.v2.u32 	[%rd9902], {%r7646, %r7646};
	st.local.v2.u32 	[%rd9903], {%r7646, %r7646};
	st.local.v2.u32 	[%rd9904], {%r7646, %r7646};
	st.local.v2.u32 	[%rd9905], {%r7646, %r7646};
	st.local.v2.u32 	[%rd9906], {%r7646, %r7646};
	st.local.v2.u32 	[%rd339], {%r7646, %r7646};
	st.local.v2.u32 	[%rd340], {%r7646, %r7646};
	ld.local.u64 	%rd4911, [%rd10169];
	mul.wide.s32 	%rd4912, %r7539, 384;
	add.s64 	%rd4913, %rd9908, %rd4912;
	st.global.u64 	[%rd4913], %rd4911;
	ld.local.u64 	%rd4914, [%rd310];
	st.global.u64 	[%rd4913+8], %rd4914;
	ld.local.u64 	%rd4915, [%rd311];
	st.global.u64 	[%rd4913+16], %rd4915;
	ld.local.u64 	%rd4916, [%rd312];
	st.global.u64 	[%rd4913+24], %rd4916;
	ld.local.u64 	%rd4917, [%rd313];
	st.global.u64 	[%rd4913+32], %rd4917;
	ld.local.u64 	%rd4918, [%rd314];
	st.global.u64 	[%rd4913+40], %rd4918;
	ld.local.u64 	%rd4919, [%rd315];
	st.global.u64 	[%rd4913+48], %rd4919;
	ld.local.u64 	%rd4920, [%rd316];
	st.global.u64 	[%rd4913+56], %rd4920;
	st.global.u64 	[%rd4913+64], %rd4902;
	st.global.u64 	[%rd4913+72], %rd4903;
	st.global.u64 	[%rd4913+80], %rd4904;
	st.global.u64 	[%rd4913+88], %rd4905;
	st.global.u64 	[%rd4913+96], %rd4906;
	st.global.u64 	[%rd4913+104], %rd4907;
	st.global.u64 	[%rd4913+112], %rd4908;
	st.global.u64 	[%rd4913+120], %rd4909;
	mul.wide.u32 	%rd4921, %r7533, 256;
	add.s64 	%rd4922, %rd9909, %rd4921;
	mul.wide.u32 	%rd4923, %r7534, 560;
	add.s64 	%rd4924, %rd9910, %rd4923;
	ld.global.u32 	%r3620, [%rd4924+512];
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd9911;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd4922;
	.param .b32 param2;
	st.param.b32	[param2+0], %r3620;
	call.uni 
	sha512_hmac_update_global_swap, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 16
	add.s64 	%rd413, %rd10170, 192;
	add.s64 	%rd414, %rd10170, 64;
	add.s64 	%rd415, %rd10170, 80;
	add.s64 	%rd416, %rd10170, 96;
	add.s64 	%rd417, %rd10170, 112;
	add.s64 	%rd418, %rd10170, 128;
	add.s64 	%rd419, %rd10170, 144;
	add.s64 	%rd420, %rd10170, 160;
	add.s64 	%rd421, %rd10170, 176;
	add.s64 	%rd422, %rd10170, 72;
	add.s64 	%rd423, %rd10170, 88;
	add.s64 	%rd424, %rd10170, 104;
	add.s64 	%rd425, %rd10170, 120;
	add.s64 	%rd426, %rd10170, 136;
	add.s64 	%rd427, %rd10170, 152;
	add.s64 	%rd428, %rd10170, 168;
	add.s64 	%rd429, %rd10170, 184;
	add.s64 	%rd430, %rd10170, 8;
	add.s64 	%rd431, %rd10170, 16;
	add.s64 	%rd432, %rd10170, 24;
	add.s64 	%rd433, %rd10170, 32;
	add.s64 	%rd434, %rd10170, 40;
	add.s64 	%rd435, %rd10170, 48;
	add.s64 	%rd436, %rd10170, 56;
	add.s64 	%rd460, %rd10170, 256;

BB3_19:
	ld.local.v2.u32 	{%r3621, %r3622}, [%rd10169];
	st.local.v2.u32 	[%rd10170], {%r3621, %r3622};
	add.s64 	%rd10170, %rd10170, 8;
	add.s64 	%rd10169, %rd10169, 8;
	add.s32 	%r7646, %r7646, 1;
	setp.lt.u32	%p22, %r7646, 50;
	@%p22 bra 	BB3_19;

	add.u64 	%rd9996, %SPL, 528;
	add.u64 	%rd9914, %SP, 528;
	add.u64 	%rd4926, %SP, 928;
	add.u64 	%rd4927, %SPL, 928;
	mov.u32 	%r3625, 1;
	mov.u32 	%r3626, 0;
	st.local.v4.u32 	[%rd4927], {%r3625, %r3626, %r3626, %r3626};
	add.u64 	%rd4928, %SP, 944;
	add.u64 	%rd4929, %SPL, 944;
	st.local.v4.u32 	[%rd4929], {%r3626, %r3626, %r3626, %r3626};
	add.u64 	%rd4930, %SP, 960;
	add.u64 	%rd4931, %SPL, 960;
	st.local.v4.u32 	[%rd4931], {%r3626, %r3626, %r3626, %r3626};
	add.u64 	%rd4932, %SP, 976;
	add.u64 	%rd4933, %SPL, 976;
	st.local.v4.u32 	[%rd4933], {%r3626, %r3626, %r3626, %r3626};
	add.u64 	%rd4934, %SP, 992;
	add.u64 	%rd4935, %SPL, 992;
	st.local.v4.u32 	[%rd4935], {%r3626, %r3626, %r3626, %r3626};
	add.u64 	%rd4936, %SP, 1008;
	add.u64 	%rd4937, %SPL, 1008;
	st.local.v4.u32 	[%rd4937], {%r3626, %r3626, %r3626, %r3626};
	add.u64 	%rd4938, %SP, 1024;
	add.u64 	%rd4939, %SPL, 1024;
	st.local.v4.u32 	[%rd4939], {%r3626, %r3626, %r3626, %r3626};
	add.u64 	%rd4940, %SP, 1040;
	add.u64 	%rd4941, %SPL, 1040;
	st.local.v4.u32 	[%rd4941], {%r3626, %r3626, %r3626, %r3626};
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd9914;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd4926;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd4928;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd4930;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd4932;
	.param .b64 param5;
	st.param.b64	[param5+0], %rd4934;
	.param .b64 param6;
	st.param.b64	[param6+0], %rd4936;
	.param .b64 param7;
	st.param.b64	[param7+0], %rd4938;
	.param .b64 param8;
	st.param.b64	[param8+0], %rd4940;
	call.uni 
	sha512_hmac_update_128, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7, 
	param8
	);
	
	//{
	}// Callseq End 17
	ld.local.u32 	%r255, [%rd413];
	not.b32 	%r3627, %r255;
	and.b32  	%r3628, %r255, 127;
	bfe.u32 	%r3629, %r255, 2, 2;
	and.b32  	%r3630, %r3627, 3;
	shl.b32 	%r3631, %r3630, 3;
	mov.u32 	%r3632, 255;
	shl.b32 	%r3633, %r3632, %r3631;
	setp.eq.s32	%p23, %r3629, 0;
	selp.b32	%r3634, %r3633, 0, %p23;
	setp.eq.s32	%p24, %r3629, 1;
	selp.b32	%r3635, %r3633, 0, %p24;
	setp.eq.s32	%p25, %r3629, 2;
	selp.b32	%r3636, %r3633, 0, %p25;
	setp.eq.s32	%p26, %r3629, 3;
	selp.b32	%r3637, %r3633, 0, %p26;
	bfe.u32 	%r3638, %r255, 4, 3;
	setp.eq.s32	%p27, %r3638, 0;
	selp.b32	%r3639, -2139062144, 0, %p27;
	and.b32  	%r3640, %r3634, %r3639;
	ld.local.v2.u32 	{%r3641, %r3642}, [%rd414];
	or.b32  	%r7677, %r3640, %r3641;
	and.b32  	%r3643, %r3635, %r3639;
	or.b32  	%r7676, %r3643, %r3642;
	st.local.v2.u32 	[%rd414], {%r7677, %r7676};
	and.b32  	%r3644, %r3636, %r3639;
	ld.local.v2.u32 	{%r3645, %r3646}, [%rd422];
	or.b32  	%r7675, %r3644, %r3645;
	and.b32  	%r3647, %r3637, %r3639;
	or.b32  	%r7674, %r3647, %r3646;
	st.local.v2.u32 	[%rd422], {%r7675, %r7674};
	setp.eq.s32	%p28, %r3638, 1;
	selp.b32	%r3648, -2139062144, 0, %p28;
	and.b32  	%r3649, %r3634, %r3648;
	ld.local.v2.u32 	{%r3650, %r3651}, [%rd415];
	or.b32  	%r7673, %r3649, %r3650;
	and.b32  	%r3652, %r3635, %r3648;
	or.b32  	%r7672, %r3651, %r3652;
	st.local.v2.u32 	[%rd415], {%r7673, %r7672};
	and.b32  	%r3653, %r3636, %r3648;
	ld.local.v2.u32 	{%r3654, %r3655}, [%rd423];
	or.b32  	%r7671, %r3654, %r3653;
	and.b32  	%r3656, %r3637, %r3648;
	or.b32  	%r7670, %r3655, %r3656;
	st.local.v2.u32 	[%rd423], {%r7671, %r7670};
	setp.eq.s32	%p29, %r3638, 2;
	selp.b32	%r3657, -2139062144, 0, %p29;
	and.b32  	%r3658, %r3634, %r3657;
	ld.local.v2.u32 	{%r3659, %r3660}, [%rd416];
	or.b32  	%r7669, %r3659, %r3658;
	and.b32  	%r3661, %r3635, %r3657;
	or.b32  	%r7668, %r3660, %r3661;
	st.local.v2.u32 	[%rd416], {%r7669, %r7668};
	and.b32  	%r3662, %r3636, %r3657;
	ld.local.v2.u32 	{%r3663, %r3664}, [%rd424];
	or.b32  	%r7667, %r3663, %r3662;
	and.b32  	%r3665, %r3637, %r3657;
	or.b32  	%r7666, %r3664, %r3665;
	st.local.v2.u32 	[%rd424], {%r7667, %r7666};
	setp.eq.s32	%p30, %r3638, 3;
	selp.b32	%r3666, -2139062144, 0, %p30;
	and.b32  	%r3667, %r3634, %r3666;
	ld.local.v2.u32 	{%r3668, %r3669}, [%rd417];
	or.b32  	%r7665, %r3668, %r3667;
	and.b32  	%r3670, %r3635, %r3666;
	or.b32  	%r7664, %r3669, %r3670;
	st.local.v2.u32 	[%rd417], {%r7665, %r7664};
	and.b32  	%r3671, %r3636, %r3666;
	ld.local.v2.u32 	{%r3672, %r3673}, [%rd425];
	or.b32  	%r7663, %r3672, %r3671;
	and.b32  	%r3674, %r3637, %r3666;
	or.b32  	%r7662, %r3673, %r3674;
	st.local.v2.u32 	[%rd425], {%r7663, %r7662};
	setp.eq.s32	%p31, %r3638, 4;
	selp.b32	%r3675, -2139062144, 0, %p31;
	and.b32  	%r3676, %r3634, %r3675;
	ld.local.v2.u32 	{%r3677, %r3678}, [%rd418];
	or.b32  	%r7661, %r3677, %r3676;
	and.b32  	%r3679, %r3635, %r3675;
	or.b32  	%r7660, %r3678, %r3679;
	st.local.v2.u32 	[%rd418], {%r7661, %r7660};
	and.b32  	%r3680, %r3636, %r3675;
	ld.local.v2.u32 	{%r3681, %r3682}, [%rd426];
	or.b32  	%r7659, %r3681, %r3680;
	and.b32  	%r3683, %r3637, %r3675;
	or.b32  	%r7658, %r3682, %r3683;
	st.local.v2.u32 	[%rd426], {%r7659, %r7658};
	setp.eq.s32	%p32, %r3638, 5;
	selp.b32	%r3684, -2139062144, 0, %p32;
	and.b32  	%r3685, %r3634, %r3684;
	ld.local.v2.u32 	{%r3686, %r3687}, [%rd419];
	or.b32  	%r7657, %r3686, %r3685;
	and.b32  	%r3688, %r3635, %r3684;
	or.b32  	%r7656, %r3687, %r3688;
	st.local.v2.u32 	[%rd419], {%r7657, %r7656};
	and.b32  	%r3689, %r3636, %r3684;
	ld.local.v2.u32 	{%r3690, %r3691}, [%rd427];
	or.b32  	%r7655, %r3690, %r3689;
	and.b32  	%r3692, %r3637, %r3684;
	or.b32  	%r7654, %r3691, %r3692;
	st.local.v2.u32 	[%rd427], {%r7655, %r7654};
	setp.eq.s32	%p33, %r3638, 6;
	selp.b32	%r3693, -2139062144, 0, %p33;
	and.b32  	%r3694, %r3634, %r3693;
	ld.local.v2.u32 	{%r3695, %r3696}, [%rd420];
	or.b32  	%r7653, %r3695, %r3694;
	and.b32  	%r3697, %r3635, %r3693;
	or.b32  	%r7652, %r3696, %r3697;
	st.local.v2.u32 	[%rd420], {%r7653, %r7652};
	and.b32  	%r3698, %r3636, %r3693;
	ld.local.v2.u32 	{%r3699, %r3700}, [%rd428];
	or.b32  	%r7651, %r3699, %r3698;
	and.b32  	%r3701, %r3637, %r3693;
	or.b32  	%r7650, %r3700, %r3701;
	st.local.v2.u32 	[%rd428], {%r7651, %r7650};
	setp.eq.s32	%p34, %r3638, 7;
	selp.b32	%r3702, -2139062144, 0, %p34;
	and.b32  	%r3703, %r3634, %r3702;
	ld.local.v2.u32 	{%r3704, %r3705}, [%rd421];
	or.b32  	%r7649, %r3704, %r3703;
	and.b32  	%r3706, %r3635, %r3702;
	or.b32  	%r7648, %r3705, %r3706;
	st.local.v2.u32 	[%rd421], {%r7649, %r7648};
	and.b32  	%r3707, %r3636, %r3702;
	ld.local.v2.u32 	{%r3708, %r3709}, [%rd429];
	and.b32  	%r3710, %r3637, %r3702;
	or.b32  	%r3711, %r3709, %r3710;
	or.b32  	%r3712, %r3708, %r3707;
	st.local.v2.u32 	[%rd429], {%r3712, %r3711};
	ld.local.u64 	%rd10202, [%rd9996];
	ld.local.u64 	%rd10201, [%rd430];
	ld.local.u64 	%rd10200, [%rd431];
	ld.local.u64 	%rd10199, [%rd432];
	ld.local.u64 	%rd10198, [%rd433];
	ld.local.u64 	%rd10197, [%rd434];
	ld.local.u64 	%rd10196, [%rd435];
	ld.local.u64 	%rd10195, [%rd436];
	setp.lt.u32	%p35, %r3628, 112;
	@%p35 bra 	BB3_24;

	bfe.u32 	%r3715, %r255, 2, 2;
	setp.eq.s32	%p36, %r3715, 0;
	selp.b32	%r3720, %r3633, 0, %p36;
	bfe.u32 	%r3721, %r255, 4, 3;
	setp.eq.s32	%p37, %r3721, 0;
	selp.b32	%r3722, -2139062144, 0, %p37;
	and.b32  	%r3723, %r3720, %r3722;
	setp.eq.s32	%p38, %r3715, 1;
	selp.b32	%r3724, %r3633, 0, %p38;
	and.b32  	%r3725, %r3724, %r3722;
	or.b32  	%r3726, %r3723, %r3641;
	or.b32  	%r3727, %r3725, %r3642;
	mov.b64	%rd10187, {%r3727, %r3726};
	setp.eq.s32	%p39, %r3715, 2;
	selp.b32	%r3728, %r3633, 0, %p39;
	and.b32  	%r3729, %r3728, %r3722;
	setp.eq.s32	%p40, %r3715, 3;
	selp.b32	%r3730, %r3633, 0, %p40;
	and.b32  	%r3731, %r3730, %r3722;
	or.b32  	%r3732, %r3729, %r3645;
	or.b32  	%r3733, %r3731, %r3646;
	mov.b64	%rd10188, {%r3733, %r3732};
	setp.eq.s32	%p41, %r3721, 1;
	selp.b32	%r3734, -2139062144, 0, %p41;
	and.b32  	%r3735, %r3720, %r3734;
	and.b32  	%r3736, %r3724, %r3734;
	or.b32  	%r3737, %r3735, %r3650;
	or.b32  	%r3738, %r3651, %r3736;
	mov.b64	%rd10189, {%r3738, %r3737};
	and.b32  	%r3739, %r3728, %r3734;
	and.b32  	%r3740, %r3730, %r3734;
	or.b32  	%r3741, %r3654, %r3739;
	or.b32  	%r3742, %r3655, %r3740;
	mov.b64	%rd10190, {%r3742, %r3741};
	setp.eq.s32	%p42, %r3721, 2;
	selp.b32	%r3743, -2139062144, 0, %p42;
	and.b32  	%r3744, %r3720, %r3743;
	and.b32  	%r3745, %r3724, %r3743;
	or.b32  	%r3746, %r3659, %r3744;
	or.b32  	%r3747, %r3660, %r3745;
	mov.b64	%rd10191, {%r3747, %r3746};
	and.b32  	%r3748, %r3728, %r3743;
	and.b32  	%r3749, %r3730, %r3743;
	or.b32  	%r3750, %r3663, %r3748;
	or.b32  	%r3751, %r3664, %r3749;
	mov.b64	%rd10192, {%r3751, %r3750};
	setp.eq.s32	%p43, %r3721, 3;
	selp.b32	%r3752, -2139062144, 0, %p43;
	and.b32  	%r3753, %r3720, %r3752;
	and.b32  	%r3754, %r3724, %r3752;
	or.b32  	%r3755, %r3668, %r3753;
	or.b32  	%r3756, %r3669, %r3754;
	mov.b64	%rd10193, {%r3756, %r3755};
	and.b32  	%r3757, %r3728, %r3752;
	and.b32  	%r3758, %r3730, %r3752;
	or.b32  	%r3759, %r3672, %r3757;
	or.b32  	%r3760, %r3673, %r3758;
	mov.b64	%rd10194, {%r3760, %r3759};
	setp.eq.s32	%p44, %r3721, 4;
	selp.b32	%r3761, -2139062144, 0, %p44;
	and.b32  	%r3762, %r3720, %r3761;
	and.b32  	%r3763, %r3724, %r3761;
	or.b32  	%r3764, %r3677, %r3762;
	or.b32  	%r3765, %r3678, %r3763;
	mov.b64	%rd10178, {%r3765, %r3764};
	and.b32  	%r3766, %r3728, %r3761;
	and.b32  	%r3767, %r3730, %r3761;
	or.b32  	%r3768, %r3681, %r3766;
	or.b32  	%r3769, %r3682, %r3767;
	mov.b64	%rd10177, {%r3769, %r3768};
	setp.eq.s32	%p45, %r3721, 5;
	selp.b32	%r3770, -2139062144, 0, %p45;
	and.b32  	%r3771, %r3720, %r3770;
	and.b32  	%r3772, %r3724, %r3770;
	or.b32  	%r3773, %r3686, %r3771;
	or.b32  	%r3774, %r3687, %r3772;
	mov.b64	%rd10176, {%r3774, %r3773};
	and.b32  	%r3775, %r3728, %r3770;
	and.b32  	%r3776, %r3730, %r3770;
	or.b32  	%r3777, %r3690, %r3775;
	or.b32  	%r3778, %r3691, %r3776;
	mov.b64	%rd10175, {%r3778, %r3777};
	setp.eq.s32	%p46, %r3721, 6;
	selp.b32	%r3779, -2139062144, 0, %p46;
	and.b32  	%r3780, %r3720, %r3779;
	and.b32  	%r3781, %r3724, %r3779;
	or.b32  	%r3782, %r3695, %r3780;
	or.b32  	%r3783, %r3696, %r3781;
	mov.b64	%rd10174, {%r3783, %r3782};
	and.b32  	%r3784, %r3728, %r3779;
	and.b32  	%r3785, %r3730, %r3779;
	or.b32  	%r3786, %r3699, %r3784;
	or.b32  	%r3787, %r3700, %r3785;
	mov.b64	%rd10173, {%r3787, %r3786};
	setp.eq.s32	%p47, %r3721, 7;
	selp.b32	%r3788, -2139062144, 0, %p47;
	and.b32  	%r3789, %r3720, %r3788;
	and.b32  	%r3790, %r3724, %r3788;
	or.b32  	%r3791, %r3704, %r3789;
	or.b32  	%r3792, %r3705, %r3790;
	mov.b64	%rd10172, {%r3792, %r3791};
	and.b32  	%r3793, %r3728, %r3788;
	and.b32  	%r3794, %r3730, %r3788;
	or.b32  	%r3795, %r3708, %r3793;
	or.b32  	%r3796, %r3709, %r3794;
	mov.b64	%rd10171, {%r3796, %r3795};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3797,%dummy}, %rd10198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3798}, %rd10198;
	}
	shf.r.wrap.b32 	%r3799, %r3798, %r3797, 18;
	shf.r.wrap.b32 	%r3800, %r3797, %r3798, 18;
	mov.b64 	%rd4943, {%r3800, %r3799};
	shf.r.wrap.b32 	%r3801, %r3798, %r3797, 14;
	shf.r.wrap.b32 	%r3802, %r3797, %r3798, 14;
	mov.b64 	%rd4944, {%r3802, %r3801};
	xor.b64  	%rd4945, %rd4943, %rd4944;
	shf.l.wrap.b32 	%r3803, %r3797, %r3798, 23;
	shf.l.wrap.b32 	%r3804, %r3798, %r3797, 23;
	mov.b64 	%rd4946, {%r3804, %r3803};
	xor.b64  	%rd4947, %rd4945, %rd4946;
	xor.b64  	%rd4948, %rd10196, %rd10197;
	and.b64  	%rd4949, %rd4948, %rd10198;
	xor.b64  	%rd4950, %rd4949, %rd10196;
	add.s64 	%rd4951, %rd4950, %rd10195;
	add.s64 	%rd4952, %rd4951, %rd10187;
	add.s64 	%rd4953, %rd4952, %rd10144;
	add.s64 	%rd4954, %rd4953, %rd4947;
	add.s64 	%rd4955, %rd4954, %rd10199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3805}, %rd10202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3806,%dummy}, %rd10202;
	}
	shf.l.wrap.b32 	%r3807, %r3806, %r3805, 30;
	shf.l.wrap.b32 	%r3808, %r3805, %r3806, 30;
	mov.b64 	%rd4956, {%r3808, %r3807};
	shf.r.wrap.b32 	%r3809, %r3805, %r3806, 28;
	shf.r.wrap.b32 	%r3810, %r3806, %r3805, 28;
	mov.b64 	%rd4957, {%r3810, %r3809};
	xor.b64  	%rd4958, %rd4956, %rd4957;
	shf.l.wrap.b32 	%r3811, %r3806, %r3805, 25;
	shf.l.wrap.b32 	%r3812, %r3805, %r3806, 25;
	mov.b64 	%rd4959, {%r3812, %r3811};
	xor.b64  	%rd4960, %rd4958, %rd4959;
	xor.b64  	%rd4961, %rd10201, %rd10202;
	and.b64  	%rd4962, %rd10200, %rd4961;
	and.b64  	%rd4963, %rd10201, %rd10202;
	or.b64  	%rd4964, %rd4962, %rd4963;
	add.s64 	%rd4965, %rd4954, %rd4964;
	add.s64 	%rd4966, %rd4965, %rd4960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3813,%dummy}, %rd4955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3814}, %rd4955;
	}
	shf.r.wrap.b32 	%r3815, %r3814, %r3813, 14;
	shf.r.wrap.b32 	%r3816, %r3813, %r3814, 14;
	mov.b64 	%rd4967, {%r3816, %r3815};
	shf.r.wrap.b32 	%r3817, %r3814, %r3813, 18;
	shf.r.wrap.b32 	%r3818, %r3813, %r3814, 18;
	mov.b64 	%rd4968, {%r3818, %r3817};
	xor.b64  	%rd4969, %rd4968, %rd4967;
	shf.l.wrap.b32 	%r3819, %r3813, %r3814, 23;
	shf.l.wrap.b32 	%r3820, %r3814, %r3813, 23;
	mov.b64 	%rd4970, {%r3820, %r3819};
	xor.b64  	%rd4971, %rd4969, %rd4970;
	xor.b64  	%rd4972, %rd10197, %rd10198;
	and.b64  	%rd4973, %rd4955, %rd4972;
	xor.b64  	%rd4974, %rd4973, %rd10197;
	add.s64 	%rd4975, %rd10188, %rd10196;
	add.s64 	%rd4976, %rd4975, %rd10143;
	add.s64 	%rd4977, %rd4976, %rd4974;
	add.s64 	%rd4978, %rd4977, %rd4971;
	add.s64 	%rd4979, %rd4978, %rd10200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3821,%dummy}, %rd4966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3822}, %rd4966;
	}
	shf.r.wrap.b32 	%r3823, %r3822, %r3821, 28;
	shf.r.wrap.b32 	%r3824, %r3821, %r3822, 28;
	mov.b64 	%rd4980, {%r3824, %r3823};
	shf.l.wrap.b32 	%r3825, %r3821, %r3822, 30;
	shf.l.wrap.b32 	%r3826, %r3822, %r3821, 30;
	mov.b64 	%rd4981, {%r3826, %r3825};
	xor.b64  	%rd4982, %rd4981, %rd4980;
	shf.l.wrap.b32 	%r3827, %r3821, %r3822, 25;
	shf.l.wrap.b32 	%r3828, %r3822, %r3821, 25;
	mov.b64 	%rd4983, {%r3828, %r3827};
	xor.b64  	%rd4984, %rd4982, %rd4983;
	and.b64  	%rd4985, %rd4966, %rd10202;
	xor.b64  	%rd4986, %rd4966, %rd10202;
	and.b64  	%rd4987, %rd4986, %rd10201;
	or.b64  	%rd4988, %rd4987, %rd4985;
	add.s64 	%rd4989, %rd4978, %rd4988;
	add.s64 	%rd4990, %rd4989, %rd4984;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3829,%dummy}, %rd4979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3830}, %rd4979;
	}
	shf.r.wrap.b32 	%r3831, %r3830, %r3829, 14;
	shf.r.wrap.b32 	%r3832, %r3829, %r3830, 14;
	mov.b64 	%rd4991, {%r3832, %r3831};
	shf.r.wrap.b32 	%r3833, %r3830, %r3829, 18;
	shf.r.wrap.b32 	%r3834, %r3829, %r3830, 18;
	mov.b64 	%rd4992, {%r3834, %r3833};
	xor.b64  	%rd4993, %rd4992, %rd4991;
	shf.l.wrap.b32 	%r3835, %r3829, %r3830, 23;
	shf.l.wrap.b32 	%r3836, %r3830, %r3829, 23;
	mov.b64 	%rd4994, {%r3836, %r3835};
	xor.b64  	%rd4995, %rd4993, %rd4994;
	xor.b64  	%rd4996, %rd4955, %rd10198;
	and.b64  	%rd4997, %rd4979, %rd4996;
	xor.b64  	%rd4998, %rd4997, %rd10198;
	add.s64 	%rd4999, %rd10189, %rd10197;
	add.s64 	%rd5000, %rd4999, %rd10142;
	add.s64 	%rd5001, %rd5000, %rd4998;
	add.s64 	%rd5002, %rd5001, %rd4995;
	add.s64 	%rd5003, %rd5002, %rd10201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3837,%dummy}, %rd4990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3838}, %rd4990;
	}
	shf.r.wrap.b32 	%r3839, %r3838, %r3837, 28;
	shf.r.wrap.b32 	%r3840, %r3837, %r3838, 28;
	mov.b64 	%rd5004, {%r3840, %r3839};
	shf.l.wrap.b32 	%r3841, %r3837, %r3838, 30;
	shf.l.wrap.b32 	%r3842, %r3838, %r3837, 30;
	mov.b64 	%rd5005, {%r3842, %r3841};
	xor.b64  	%rd5006, %rd5005, %rd5004;
	shf.l.wrap.b32 	%r3843, %r3837, %r3838, 25;
	shf.l.wrap.b32 	%r3844, %r3838, %r3837, 25;
	mov.b64 	%rd5007, {%r3844, %r3843};
	xor.b64  	%rd5008, %rd5006, %rd5007;
	and.b64  	%rd5009, %rd4990, %rd4966;
	xor.b64  	%rd5010, %rd4990, %rd4966;
	and.b64  	%rd5011, %rd5010, %rd10202;
	or.b64  	%rd5012, %rd5011, %rd5009;
	add.s64 	%rd5013, %rd5002, %rd5012;
	add.s64 	%rd5014, %rd5013, %rd5008;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3845,%dummy}, %rd5003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3846}, %rd5003;
	}
	shf.r.wrap.b32 	%r3847, %r3846, %r3845, 14;
	shf.r.wrap.b32 	%r3848, %r3845, %r3846, 14;
	mov.b64 	%rd5015, {%r3848, %r3847};
	shf.r.wrap.b32 	%r3849, %r3846, %r3845, 18;
	shf.r.wrap.b32 	%r3850, %r3845, %r3846, 18;
	mov.b64 	%rd5016, {%r3850, %r3849};
	xor.b64  	%rd5017, %rd5016, %rd5015;
	shf.l.wrap.b32 	%r3851, %r3845, %r3846, 23;
	shf.l.wrap.b32 	%r3852, %r3846, %r3845, 23;
	mov.b64 	%rd5018, {%r3852, %r3851};
	xor.b64  	%rd5019, %rd5017, %rd5018;
	xor.b64  	%rd5020, %rd4979, %rd4955;
	and.b64  	%rd5021, %rd5003, %rd5020;
	xor.b64  	%rd5022, %rd5021, %rd4955;
	add.s64 	%rd5023, %rd10190, %rd10198;
	add.s64 	%rd5024, %rd5023, %rd10141;
	add.s64 	%rd5025, %rd5024, %rd5022;
	add.s64 	%rd5026, %rd5025, %rd5019;
	add.s64 	%rd5027, %rd5026, %rd10202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3853,%dummy}, %rd5014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3854}, %rd5014;
	}
	shf.r.wrap.b32 	%r3855, %r3854, %r3853, 28;
	shf.r.wrap.b32 	%r3856, %r3853, %r3854, 28;
	mov.b64 	%rd5028, {%r3856, %r3855};
	shf.l.wrap.b32 	%r3857, %r3853, %r3854, 30;
	shf.l.wrap.b32 	%r3858, %r3854, %r3853, 30;
	mov.b64 	%rd5029, {%r3858, %r3857};
	xor.b64  	%rd5030, %rd5029, %rd5028;
	shf.l.wrap.b32 	%r3859, %r3853, %r3854, 25;
	shf.l.wrap.b32 	%r3860, %r3854, %r3853, 25;
	mov.b64 	%rd5031, {%r3860, %r3859};
	xor.b64  	%rd5032, %rd5030, %rd5031;
	and.b64  	%rd5033, %rd5014, %rd4990;
	xor.b64  	%rd5034, %rd5014, %rd4990;
	and.b64  	%rd5035, %rd5034, %rd4966;
	or.b64  	%rd5036, %rd5035, %rd5033;
	add.s64 	%rd5037, %rd5026, %rd5036;
	add.s64 	%rd5038, %rd5037, %rd5032;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3861,%dummy}, %rd5027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3862}, %rd5027;
	}
	shf.r.wrap.b32 	%r3863, %r3862, %r3861, 14;
	shf.r.wrap.b32 	%r3864, %r3861, %r3862, 14;
	mov.b64 	%rd5039, {%r3864, %r3863};
	shf.r.wrap.b32 	%r3865, %r3862, %r3861, 18;
	shf.r.wrap.b32 	%r3866, %r3861, %r3862, 18;
	mov.b64 	%rd5040, {%r3866, %r3865};
	xor.b64  	%rd5041, %rd5040, %rd5039;
	shf.l.wrap.b32 	%r3867, %r3861, %r3862, 23;
	shf.l.wrap.b32 	%r3868, %r3862, %r3861, 23;
	mov.b64 	%rd5042, {%r3868, %r3867};
	xor.b64  	%rd5043, %rd5041, %rd5042;
	xor.b64  	%rd5044, %rd5003, %rd4979;
	and.b64  	%rd5045, %rd5027, %rd5044;
	xor.b64  	%rd5046, %rd5045, %rd4979;
	add.s64 	%rd5047, %rd4955, %rd10191;
	add.s64 	%rd5048, %rd5047, %rd10140;
	add.s64 	%rd5049, %rd5048, %rd5046;
	add.s64 	%rd5050, %rd5049, %rd5043;
	add.s64 	%rd5051, %rd5050, %rd4966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3869,%dummy}, %rd5038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3870}, %rd5038;
	}
	shf.r.wrap.b32 	%r3871, %r3870, %r3869, 28;
	shf.r.wrap.b32 	%r3872, %r3869, %r3870, 28;
	mov.b64 	%rd5052, {%r3872, %r3871};
	shf.l.wrap.b32 	%r3873, %r3869, %r3870, 30;
	shf.l.wrap.b32 	%r3874, %r3870, %r3869, 30;
	mov.b64 	%rd5053, {%r3874, %r3873};
	xor.b64  	%rd5054, %rd5053, %rd5052;
	shf.l.wrap.b32 	%r3875, %r3869, %r3870, 25;
	shf.l.wrap.b32 	%r3876, %r3870, %r3869, 25;
	mov.b64 	%rd5055, {%r3876, %r3875};
	xor.b64  	%rd5056, %rd5054, %rd5055;
	and.b64  	%rd5057, %rd5038, %rd5014;
	xor.b64  	%rd5058, %rd5038, %rd5014;
	and.b64  	%rd5059, %rd5058, %rd4990;
	or.b64  	%rd5060, %rd5059, %rd5057;
	add.s64 	%rd5061, %rd5050, %rd5060;
	add.s64 	%rd5062, %rd5061, %rd5056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3877,%dummy}, %rd5051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3878}, %rd5051;
	}
	shf.r.wrap.b32 	%r3879, %r3878, %r3877, 14;
	shf.r.wrap.b32 	%r3880, %r3877, %r3878, 14;
	mov.b64 	%rd5063, {%r3880, %r3879};
	shf.r.wrap.b32 	%r3881, %r3878, %r3877, 18;
	shf.r.wrap.b32 	%r3882, %r3877, %r3878, 18;
	mov.b64 	%rd5064, {%r3882, %r3881};
	xor.b64  	%rd5065, %rd5064, %rd5063;
	shf.l.wrap.b32 	%r3883, %r3877, %r3878, 23;
	shf.l.wrap.b32 	%r3884, %r3878, %r3877, 23;
	mov.b64 	%rd5066, {%r3884, %r3883};
	xor.b64  	%rd5067, %rd5065, %rd5066;
	xor.b64  	%rd5068, %rd5027, %rd5003;
	and.b64  	%rd5069, %rd5051, %rd5068;
	xor.b64  	%rd5070, %rd5069, %rd5003;
	add.s64 	%rd5071, %rd4979, %rd10192;
	add.s64 	%rd5072, %rd5071, %rd10139;
	add.s64 	%rd5073, %rd5072, %rd5070;
	add.s64 	%rd5074, %rd5073, %rd5067;
	add.s64 	%rd5075, %rd5074, %rd4990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3885,%dummy}, %rd5062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3886}, %rd5062;
	}
	shf.r.wrap.b32 	%r3887, %r3886, %r3885, 28;
	shf.r.wrap.b32 	%r3888, %r3885, %r3886, 28;
	mov.b64 	%rd5076, {%r3888, %r3887};
	shf.l.wrap.b32 	%r3889, %r3885, %r3886, 30;
	shf.l.wrap.b32 	%r3890, %r3886, %r3885, 30;
	mov.b64 	%rd5077, {%r3890, %r3889};
	xor.b64  	%rd5078, %rd5077, %rd5076;
	shf.l.wrap.b32 	%r3891, %r3885, %r3886, 25;
	shf.l.wrap.b32 	%r3892, %r3886, %r3885, 25;
	mov.b64 	%rd5079, {%r3892, %r3891};
	xor.b64  	%rd5080, %rd5078, %rd5079;
	and.b64  	%rd5081, %rd5062, %rd5038;
	xor.b64  	%rd5082, %rd5062, %rd5038;
	and.b64  	%rd5083, %rd5082, %rd5014;
	or.b64  	%rd5084, %rd5083, %rd5081;
	add.s64 	%rd5085, %rd5074, %rd5084;
	add.s64 	%rd5086, %rd5085, %rd5080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3893,%dummy}, %rd5075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3894}, %rd5075;
	}
	shf.r.wrap.b32 	%r3895, %r3894, %r3893, 14;
	shf.r.wrap.b32 	%r3896, %r3893, %r3894, 14;
	mov.b64 	%rd5087, {%r3896, %r3895};
	shf.r.wrap.b32 	%r3897, %r3894, %r3893, 18;
	shf.r.wrap.b32 	%r3898, %r3893, %r3894, 18;
	mov.b64 	%rd5088, {%r3898, %r3897};
	xor.b64  	%rd5089, %rd5088, %rd5087;
	shf.l.wrap.b32 	%r3899, %r3893, %r3894, 23;
	shf.l.wrap.b32 	%r3900, %r3894, %r3893, 23;
	mov.b64 	%rd5090, {%r3900, %r3899};
	xor.b64  	%rd5091, %rd5089, %rd5090;
	xor.b64  	%rd5092, %rd5051, %rd5027;
	and.b64  	%rd5093, %rd5075, %rd5092;
	xor.b64  	%rd5094, %rd5093, %rd5027;
	add.s64 	%rd5095, %rd5003, %rd10193;
	add.s64 	%rd5096, %rd5095, %rd10138;
	add.s64 	%rd5097, %rd5096, %rd5094;
	add.s64 	%rd5098, %rd5097, %rd5091;
	add.s64 	%rd5099, %rd5098, %rd5014;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3901,%dummy}, %rd5086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3902}, %rd5086;
	}
	shf.r.wrap.b32 	%r3903, %r3902, %r3901, 28;
	shf.r.wrap.b32 	%r3904, %r3901, %r3902, 28;
	mov.b64 	%rd5100, {%r3904, %r3903};
	shf.l.wrap.b32 	%r3905, %r3901, %r3902, 30;
	shf.l.wrap.b32 	%r3906, %r3902, %r3901, 30;
	mov.b64 	%rd5101, {%r3906, %r3905};
	xor.b64  	%rd5102, %rd5101, %rd5100;
	shf.l.wrap.b32 	%r3907, %r3901, %r3902, 25;
	shf.l.wrap.b32 	%r3908, %r3902, %r3901, 25;
	mov.b64 	%rd5103, {%r3908, %r3907};
	xor.b64  	%rd5104, %rd5102, %rd5103;
	and.b64  	%rd5105, %rd5086, %rd5062;
	xor.b64  	%rd5106, %rd5086, %rd5062;
	and.b64  	%rd5107, %rd5106, %rd5038;
	or.b64  	%rd5108, %rd5107, %rd5105;
	add.s64 	%rd5109, %rd5098, %rd5108;
	add.s64 	%rd5110, %rd5109, %rd5104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3909,%dummy}, %rd5099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3910}, %rd5099;
	}
	shf.r.wrap.b32 	%r3911, %r3910, %r3909, 14;
	shf.r.wrap.b32 	%r3912, %r3909, %r3910, 14;
	mov.b64 	%rd5111, {%r3912, %r3911};
	shf.r.wrap.b32 	%r3913, %r3910, %r3909, 18;
	shf.r.wrap.b32 	%r3914, %r3909, %r3910, 18;
	mov.b64 	%rd5112, {%r3914, %r3913};
	xor.b64  	%rd5113, %rd5112, %rd5111;
	shf.l.wrap.b32 	%r3915, %r3909, %r3910, 23;
	shf.l.wrap.b32 	%r3916, %r3910, %r3909, 23;
	mov.b64 	%rd5114, {%r3916, %r3915};
	xor.b64  	%rd5115, %rd5113, %rd5114;
	xor.b64  	%rd5116, %rd5075, %rd5051;
	and.b64  	%rd5117, %rd5099, %rd5116;
	xor.b64  	%rd5118, %rd5117, %rd5051;
	add.s64 	%rd5119, %rd5027, %rd10194;
	add.s64 	%rd5120, %rd5119, %rd10137;
	add.s64 	%rd5121, %rd5120, %rd5118;
	add.s64 	%rd5122, %rd5121, %rd5115;
	add.s64 	%rd5123, %rd5122, %rd5038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3917,%dummy}, %rd5110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3918}, %rd5110;
	}
	shf.r.wrap.b32 	%r3919, %r3918, %r3917, 28;
	shf.r.wrap.b32 	%r3920, %r3917, %r3918, 28;
	mov.b64 	%rd5124, {%r3920, %r3919};
	shf.l.wrap.b32 	%r3921, %r3917, %r3918, 30;
	shf.l.wrap.b32 	%r3922, %r3918, %r3917, 30;
	mov.b64 	%rd5125, {%r3922, %r3921};
	xor.b64  	%rd5126, %rd5125, %rd5124;
	shf.l.wrap.b32 	%r3923, %r3917, %r3918, 25;
	shf.l.wrap.b32 	%r3924, %r3918, %r3917, 25;
	mov.b64 	%rd5127, {%r3924, %r3923};
	xor.b64  	%rd5128, %rd5126, %rd5127;
	and.b64  	%rd5129, %rd5110, %rd5086;
	xor.b64  	%rd5130, %rd5110, %rd5086;
	and.b64  	%rd5131, %rd5130, %rd5062;
	or.b64  	%rd5132, %rd5131, %rd5129;
	add.s64 	%rd5133, %rd5122, %rd5132;
	add.s64 	%rd5134, %rd5133, %rd5128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3925,%dummy}, %rd5123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3926}, %rd5123;
	}
	shf.r.wrap.b32 	%r3927, %r3926, %r3925, 14;
	shf.r.wrap.b32 	%r3928, %r3925, %r3926, 14;
	mov.b64 	%rd5135, {%r3928, %r3927};
	shf.r.wrap.b32 	%r3929, %r3926, %r3925, 18;
	shf.r.wrap.b32 	%r3930, %r3925, %r3926, 18;
	mov.b64 	%rd5136, {%r3930, %r3929};
	xor.b64  	%rd5137, %rd5136, %rd5135;
	shf.l.wrap.b32 	%r3931, %r3925, %r3926, 23;
	shf.l.wrap.b32 	%r3932, %r3926, %r3925, 23;
	mov.b64 	%rd5138, {%r3932, %r3931};
	xor.b64  	%rd5139, %rd5137, %rd5138;
	xor.b64  	%rd5140, %rd5099, %rd5075;
	and.b64  	%rd5141, %rd5123, %rd5140;
	xor.b64  	%rd5142, %rd5141, %rd5075;
	add.s64 	%rd5143, %rd5051, %rd10178;
	add.s64 	%rd5144, %rd5143, %rd10136;
	add.s64 	%rd5145, %rd5144, %rd5142;
	add.s64 	%rd5146, %rd5145, %rd5139;
	add.s64 	%rd5147, %rd5146, %rd5062;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3933,%dummy}, %rd5134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3934}, %rd5134;
	}
	shf.r.wrap.b32 	%r3935, %r3934, %r3933, 28;
	shf.r.wrap.b32 	%r3936, %r3933, %r3934, 28;
	mov.b64 	%rd5148, {%r3936, %r3935};
	shf.l.wrap.b32 	%r3937, %r3933, %r3934, 30;
	shf.l.wrap.b32 	%r3938, %r3934, %r3933, 30;
	mov.b64 	%rd5149, {%r3938, %r3937};
	xor.b64  	%rd5150, %rd5149, %rd5148;
	shf.l.wrap.b32 	%r3939, %r3933, %r3934, 25;
	shf.l.wrap.b32 	%r3940, %r3934, %r3933, 25;
	mov.b64 	%rd5151, {%r3940, %r3939};
	xor.b64  	%rd5152, %rd5150, %rd5151;
	and.b64  	%rd5153, %rd5134, %rd5110;
	xor.b64  	%rd5154, %rd5134, %rd5110;
	and.b64  	%rd5155, %rd5154, %rd5086;
	or.b64  	%rd5156, %rd5155, %rd5153;
	add.s64 	%rd5157, %rd5146, %rd5156;
	add.s64 	%rd5158, %rd5157, %rd5152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3941,%dummy}, %rd5147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3942}, %rd5147;
	}
	shf.r.wrap.b32 	%r3943, %r3942, %r3941, 14;
	shf.r.wrap.b32 	%r3944, %r3941, %r3942, 14;
	mov.b64 	%rd5159, {%r3944, %r3943};
	shf.r.wrap.b32 	%r3945, %r3942, %r3941, 18;
	shf.r.wrap.b32 	%r3946, %r3941, %r3942, 18;
	mov.b64 	%rd5160, {%r3946, %r3945};
	xor.b64  	%rd5161, %rd5160, %rd5159;
	shf.l.wrap.b32 	%r3947, %r3941, %r3942, 23;
	shf.l.wrap.b32 	%r3948, %r3942, %r3941, 23;
	mov.b64 	%rd5162, {%r3948, %r3947};
	xor.b64  	%rd5163, %rd5161, %rd5162;
	xor.b64  	%rd5164, %rd5123, %rd5099;
	and.b64  	%rd5165, %rd5147, %rd5164;
	xor.b64  	%rd5166, %rd5165, %rd5099;
	add.s64 	%rd5167, %rd5075, %rd10177;
	add.s64 	%rd5168, %rd5167, %rd10135;
	add.s64 	%rd5169, %rd5168, %rd5166;
	add.s64 	%rd5170, %rd5169, %rd5163;
	add.s64 	%rd5171, %rd5170, %rd5086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3949,%dummy}, %rd5158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3950}, %rd5158;
	}
	shf.r.wrap.b32 	%r3951, %r3950, %r3949, 28;
	shf.r.wrap.b32 	%r3952, %r3949, %r3950, 28;
	mov.b64 	%rd5172, {%r3952, %r3951};
	shf.l.wrap.b32 	%r3953, %r3949, %r3950, 30;
	shf.l.wrap.b32 	%r3954, %r3950, %r3949, 30;
	mov.b64 	%rd5173, {%r3954, %r3953};
	xor.b64  	%rd5174, %rd5173, %rd5172;
	shf.l.wrap.b32 	%r3955, %r3949, %r3950, 25;
	shf.l.wrap.b32 	%r3956, %r3950, %r3949, 25;
	mov.b64 	%rd5175, {%r3956, %r3955};
	xor.b64  	%rd5176, %rd5174, %rd5175;
	and.b64  	%rd5177, %rd5158, %rd5134;
	xor.b64  	%rd5178, %rd5158, %rd5134;
	and.b64  	%rd5179, %rd5178, %rd5110;
	or.b64  	%rd5180, %rd5179, %rd5177;
	add.s64 	%rd5181, %rd5170, %rd5180;
	add.s64 	%rd5182, %rd5181, %rd5176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3957,%dummy}, %rd5171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3958}, %rd5171;
	}
	shf.r.wrap.b32 	%r3959, %r3958, %r3957, 14;
	shf.r.wrap.b32 	%r3960, %r3957, %r3958, 14;
	mov.b64 	%rd5183, {%r3960, %r3959};
	shf.r.wrap.b32 	%r3961, %r3958, %r3957, 18;
	shf.r.wrap.b32 	%r3962, %r3957, %r3958, 18;
	mov.b64 	%rd5184, {%r3962, %r3961};
	xor.b64  	%rd5185, %rd5184, %rd5183;
	shf.l.wrap.b32 	%r3963, %r3957, %r3958, 23;
	shf.l.wrap.b32 	%r3964, %r3958, %r3957, 23;
	mov.b64 	%rd5186, {%r3964, %r3963};
	xor.b64  	%rd5187, %rd5185, %rd5186;
	xor.b64  	%rd5188, %rd5147, %rd5123;
	and.b64  	%rd5189, %rd5171, %rd5188;
	xor.b64  	%rd5190, %rd5189, %rd5123;
	add.s64 	%rd5191, %rd5099, %rd10176;
	add.s64 	%rd5192, %rd5191, %rd10134;
	add.s64 	%rd5193, %rd5192, %rd5190;
	add.s64 	%rd5194, %rd5193, %rd5187;
	add.s64 	%rd5195, %rd5194, %rd5110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3965,%dummy}, %rd5182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3966}, %rd5182;
	}
	shf.r.wrap.b32 	%r3967, %r3966, %r3965, 28;
	shf.r.wrap.b32 	%r3968, %r3965, %r3966, 28;
	mov.b64 	%rd5196, {%r3968, %r3967};
	shf.l.wrap.b32 	%r3969, %r3965, %r3966, 30;
	shf.l.wrap.b32 	%r3970, %r3966, %r3965, 30;
	mov.b64 	%rd5197, {%r3970, %r3969};
	xor.b64  	%rd5198, %rd5197, %rd5196;
	shf.l.wrap.b32 	%r3971, %r3965, %r3966, 25;
	shf.l.wrap.b32 	%r3972, %r3966, %r3965, 25;
	mov.b64 	%rd5199, {%r3972, %r3971};
	xor.b64  	%rd5200, %rd5198, %rd5199;
	and.b64  	%rd5201, %rd5182, %rd5158;
	xor.b64  	%rd5202, %rd5182, %rd5158;
	and.b64  	%rd5203, %rd5202, %rd5134;
	or.b64  	%rd5204, %rd5203, %rd5201;
	add.s64 	%rd5205, %rd5194, %rd5204;
	add.s64 	%rd5206, %rd5205, %rd5200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3973,%dummy}, %rd5195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3974}, %rd5195;
	}
	shf.r.wrap.b32 	%r3975, %r3974, %r3973, 14;
	shf.r.wrap.b32 	%r3976, %r3973, %r3974, 14;
	mov.b64 	%rd5207, {%r3976, %r3975};
	shf.r.wrap.b32 	%r3977, %r3974, %r3973, 18;
	shf.r.wrap.b32 	%r3978, %r3973, %r3974, 18;
	mov.b64 	%rd5208, {%r3978, %r3977};
	xor.b64  	%rd5209, %rd5208, %rd5207;
	shf.l.wrap.b32 	%r3979, %r3973, %r3974, 23;
	shf.l.wrap.b32 	%r3980, %r3974, %r3973, 23;
	mov.b64 	%rd5210, {%r3980, %r3979};
	xor.b64  	%rd5211, %rd5209, %rd5210;
	xor.b64  	%rd5212, %rd5171, %rd5147;
	and.b64  	%rd5213, %rd5195, %rd5212;
	xor.b64  	%rd5214, %rd5213, %rd5147;
	add.s64 	%rd5215, %rd5123, %rd10175;
	add.s64 	%rd5216, %rd5215, %rd10133;
	add.s64 	%rd5217, %rd5216, %rd5214;
	add.s64 	%rd5218, %rd5217, %rd5211;
	add.s64 	%rd5219, %rd5218, %rd5134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3981,%dummy}, %rd5206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3982}, %rd5206;
	}
	shf.r.wrap.b32 	%r3983, %r3982, %r3981, 28;
	shf.r.wrap.b32 	%r3984, %r3981, %r3982, 28;
	mov.b64 	%rd5220, {%r3984, %r3983};
	shf.l.wrap.b32 	%r3985, %r3981, %r3982, 30;
	shf.l.wrap.b32 	%r3986, %r3982, %r3981, 30;
	mov.b64 	%rd5221, {%r3986, %r3985};
	xor.b64  	%rd5222, %rd5221, %rd5220;
	shf.l.wrap.b32 	%r3987, %r3981, %r3982, 25;
	shf.l.wrap.b32 	%r3988, %r3982, %r3981, 25;
	mov.b64 	%rd5223, {%r3988, %r3987};
	xor.b64  	%rd5224, %rd5222, %rd5223;
	and.b64  	%rd5225, %rd5206, %rd5182;
	xor.b64  	%rd5226, %rd5206, %rd5182;
	and.b64  	%rd5227, %rd5226, %rd5158;
	or.b64  	%rd5228, %rd5227, %rd5225;
	add.s64 	%rd5229, %rd5218, %rd5228;
	add.s64 	%rd5230, %rd5229, %rd5224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3989,%dummy}, %rd5219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3990}, %rd5219;
	}
	shf.r.wrap.b32 	%r3991, %r3990, %r3989, 14;
	shf.r.wrap.b32 	%r3992, %r3989, %r3990, 14;
	mov.b64 	%rd5231, {%r3992, %r3991};
	shf.r.wrap.b32 	%r3993, %r3990, %r3989, 18;
	shf.r.wrap.b32 	%r3994, %r3989, %r3990, 18;
	mov.b64 	%rd5232, {%r3994, %r3993};
	xor.b64  	%rd5233, %rd5232, %rd5231;
	shf.l.wrap.b32 	%r3995, %r3989, %r3990, 23;
	shf.l.wrap.b32 	%r3996, %r3990, %r3989, 23;
	mov.b64 	%rd5234, {%r3996, %r3995};
	xor.b64  	%rd5235, %rd5233, %rd5234;
	xor.b64  	%rd5236, %rd5195, %rd5171;
	and.b64  	%rd5237, %rd5219, %rd5236;
	xor.b64  	%rd5238, %rd5237, %rd5171;
	add.s64 	%rd5239, %rd5147, %rd10174;
	add.s64 	%rd5240, %rd5239, %rd10132;
	add.s64 	%rd5241, %rd5240, %rd5238;
	add.s64 	%rd5242, %rd5241, %rd5235;
	add.s64 	%rd10186, %rd5242, %rd5158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3997,%dummy}, %rd5230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3998}, %rd5230;
	}
	shf.r.wrap.b32 	%r3999, %r3998, %r3997, 28;
	shf.r.wrap.b32 	%r4000, %r3997, %r3998, 28;
	mov.b64 	%rd5243, {%r4000, %r3999};
	shf.l.wrap.b32 	%r4001, %r3997, %r3998, 30;
	shf.l.wrap.b32 	%r4002, %r3998, %r3997, 30;
	mov.b64 	%rd5244, {%r4002, %r4001};
	xor.b64  	%rd5245, %rd5244, %rd5243;
	shf.l.wrap.b32 	%r4003, %r3997, %r3998, 25;
	shf.l.wrap.b32 	%r4004, %r3998, %r3997, 25;
	mov.b64 	%rd5246, {%r4004, %r4003};
	xor.b64  	%rd5247, %rd5245, %rd5246;
	and.b64  	%rd5248, %rd5230, %rd5206;
	xor.b64  	%rd5249, %rd5230, %rd5206;
	and.b64  	%rd5250, %rd5249, %rd5182;
	or.b64  	%rd5251, %rd5250, %rd5248;
	add.s64 	%rd5252, %rd5242, %rd5251;
	add.s64 	%rd10182, %rd5252, %rd5247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4005,%dummy}, %rd10186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4006}, %rd10186;
	}
	shf.r.wrap.b32 	%r4007, %r4006, %r4005, 14;
	shf.r.wrap.b32 	%r4008, %r4005, %r4006, 14;
	mov.b64 	%rd5253, {%r4008, %r4007};
	shf.r.wrap.b32 	%r4009, %r4006, %r4005, 18;
	shf.r.wrap.b32 	%r4010, %r4005, %r4006, 18;
	mov.b64 	%rd5254, {%r4010, %r4009};
	xor.b64  	%rd5255, %rd5254, %rd5253;
	shf.l.wrap.b32 	%r4011, %r4005, %r4006, 23;
	shf.l.wrap.b32 	%r4012, %r4006, %r4005, 23;
	mov.b64 	%rd5256, {%r4012, %r4011};
	xor.b64  	%rd5257, %rd5255, %rd5256;
	xor.b64  	%rd5258, %rd5219, %rd5195;
	and.b64  	%rd5259, %rd10186, %rd5258;
	xor.b64  	%rd5260, %rd5259, %rd5195;
	add.s64 	%rd5261, %rd5171, %rd10173;
	add.s64 	%rd5262, %rd5261, %rd10131;
	add.s64 	%rd5263, %rd5262, %rd5260;
	add.s64 	%rd5264, %rd5263, %rd5257;
	add.s64 	%rd10185, %rd5264, %rd5182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4013,%dummy}, %rd10182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4014}, %rd10182;
	}
	shf.r.wrap.b32 	%r4015, %r4014, %r4013, 28;
	shf.r.wrap.b32 	%r4016, %r4013, %r4014, 28;
	mov.b64 	%rd5265, {%r4016, %r4015};
	shf.l.wrap.b32 	%r4017, %r4013, %r4014, 30;
	shf.l.wrap.b32 	%r4018, %r4014, %r4013, 30;
	mov.b64 	%rd5266, {%r4018, %r4017};
	xor.b64  	%rd5267, %rd5266, %rd5265;
	shf.l.wrap.b32 	%r4019, %r4013, %r4014, 25;
	shf.l.wrap.b32 	%r4020, %r4014, %r4013, 25;
	mov.b64 	%rd5268, {%r4020, %r4019};
	xor.b64  	%rd5269, %rd5267, %rd5268;
	and.b64  	%rd5270, %rd10182, %rd5230;
	xor.b64  	%rd5271, %rd10182, %rd5230;
	and.b64  	%rd5272, %rd5271, %rd5206;
	or.b64  	%rd5273, %rd5272, %rd5270;
	add.s64 	%rd5274, %rd5264, %rd5273;
	add.s64 	%rd10181, %rd5274, %rd5269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4021,%dummy}, %rd10185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4022}, %rd10185;
	}
	shf.r.wrap.b32 	%r4023, %r4022, %r4021, 14;
	shf.r.wrap.b32 	%r4024, %r4021, %r4022, 14;
	mov.b64 	%rd5275, {%r4024, %r4023};
	shf.r.wrap.b32 	%r4025, %r4022, %r4021, 18;
	shf.r.wrap.b32 	%r4026, %r4021, %r4022, 18;
	mov.b64 	%rd5276, {%r4026, %r4025};
	xor.b64  	%rd5277, %rd5276, %rd5275;
	shf.l.wrap.b32 	%r4027, %r4021, %r4022, 23;
	shf.l.wrap.b32 	%r4028, %r4022, %r4021, 23;
	mov.b64 	%rd5278, {%r4028, %r4027};
	xor.b64  	%rd5279, %rd5277, %rd5278;
	xor.b64  	%rd5280, %rd10186, %rd5219;
	and.b64  	%rd5281, %rd10185, %rd5280;
	xor.b64  	%rd5282, %rd5281, %rd5219;
	add.s64 	%rd5283, %rd5195, %rd10172;
	add.s64 	%rd5284, %rd5283, %rd10130;
	add.s64 	%rd5285, %rd5284, %rd5282;
	add.s64 	%rd5286, %rd5285, %rd5279;
	add.s64 	%rd10184, %rd5286, %rd5206;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4029,%dummy}, %rd10181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4030}, %rd10181;
	}
	shf.r.wrap.b32 	%r4031, %r4030, %r4029, 28;
	shf.r.wrap.b32 	%r4032, %r4029, %r4030, 28;
	mov.b64 	%rd5287, {%r4032, %r4031};
	shf.l.wrap.b32 	%r4033, %r4029, %r4030, 30;
	shf.l.wrap.b32 	%r4034, %r4030, %r4029, 30;
	mov.b64 	%rd5288, {%r4034, %r4033};
	xor.b64  	%rd5289, %rd5288, %rd5287;
	shf.l.wrap.b32 	%r4035, %r4029, %r4030, 25;
	shf.l.wrap.b32 	%r4036, %r4030, %r4029, 25;
	mov.b64 	%rd5290, {%r4036, %r4035};
	xor.b64  	%rd5291, %rd5289, %rd5290;
	and.b64  	%rd5292, %rd10181, %rd10182;
	xor.b64  	%rd5293, %rd10181, %rd10182;
	and.b64  	%rd5294, %rd5293, %rd5230;
	or.b64  	%rd5295, %rd5294, %rd5292;
	add.s64 	%rd5296, %rd5286, %rd5295;
	add.s64 	%rd10180, %rd5296, %rd5291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4037,%dummy}, %rd10184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4038}, %rd10184;
	}
	shf.r.wrap.b32 	%r4039, %r4038, %r4037, 14;
	shf.r.wrap.b32 	%r4040, %r4037, %r4038, 14;
	mov.b64 	%rd5297, {%r4040, %r4039};
	shf.r.wrap.b32 	%r4041, %r4038, %r4037, 18;
	shf.r.wrap.b32 	%r4042, %r4037, %r4038, 18;
	mov.b64 	%rd5298, {%r4042, %r4041};
	xor.b64  	%rd5299, %rd5298, %rd5297;
	shf.l.wrap.b32 	%r4043, %r4037, %r4038, 23;
	shf.l.wrap.b32 	%r4044, %r4038, %r4037, 23;
	mov.b64 	%rd5300, {%r4044, %r4043};
	xor.b64  	%rd5301, %rd5299, %rd5300;
	xor.b64  	%rd5302, %rd10185, %rd10186;
	and.b64  	%rd5303, %rd10184, %rd5302;
	xor.b64  	%rd5304, %rd5303, %rd10186;
	add.s64 	%rd5305, %rd5219, %rd10171;
	add.s64 	%rd5306, %rd5305, %rd10129;
	add.s64 	%rd5307, %rd5306, %rd5304;
	add.s64 	%rd5308, %rd5307, %rd5301;
	add.s64 	%rd10183, %rd5308, %rd5230;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4045,%dummy}, %rd10180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4046}, %rd10180;
	}
	shf.r.wrap.b32 	%r4047, %r4046, %r4045, 28;
	shf.r.wrap.b32 	%r4048, %r4045, %r4046, 28;
	mov.b64 	%rd5309, {%r4048, %r4047};
	shf.l.wrap.b32 	%r4049, %r4045, %r4046, 30;
	shf.l.wrap.b32 	%r4050, %r4046, %r4045, 30;
	mov.b64 	%rd5310, {%r4050, %r4049};
	xor.b64  	%rd5311, %rd5310, %rd5309;
	shf.l.wrap.b32 	%r4051, %r4045, %r4046, 25;
	shf.l.wrap.b32 	%r4052, %r4046, %r4045, 25;
	mov.b64 	%rd5312, {%r4052, %r4051};
	xor.b64  	%rd5313, %rd5311, %rd5312;
	and.b64  	%rd5314, %rd10180, %rd10181;
	xor.b64  	%rd5315, %rd10180, %rd10181;
	and.b64  	%rd5316, %rd5315, %rd10182;
	or.b64  	%rd5317, %rd5316, %rd5314;
	add.s64 	%rd5318, %rd5308, %rd5317;
	add.s64 	%rd10179, %rd5318, %rd5313;
	mov.u32 	%r7647, 16;

BB3_22:
	shr.u64 	%rd5319, %rd10172, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4053,%dummy}, %rd10172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4054}, %rd10172;
	}
	shf.r.wrap.b32 	%r4055, %r4054, %r4053, 19;
	shf.r.wrap.b32 	%r4056, %r4053, %r4054, 19;
	mov.b64 	%rd5320, {%r4056, %r4055};
	xor.b64  	%rd5321, %rd5320, %rd5319;
	shf.l.wrap.b32 	%r4057, %r4053, %r4054, 3;
	shf.l.wrap.b32 	%r4058, %r4054, %r4053, 3;
	mov.b64 	%rd5322, {%r4058, %r4057};
	xor.b64  	%rd5323, %rd5321, %rd5322;
	shr.u64 	%rd5324, %rd10188, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4059,%dummy}, %rd10188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4060}, %rd10188;
	}
	shf.r.wrap.b32 	%r4061, %r4060, %r4059, 1;
	shf.r.wrap.b32 	%r4062, %r4059, %r4060, 1;
	mov.b64 	%rd5325, {%r4062, %r4061};
	xor.b64  	%rd5326, %rd5325, %rd5324;
	shf.r.wrap.b32 	%r4063, %r4060, %r4059, 8;
	shf.r.wrap.b32 	%r4064, %r4059, %r4060, 8;
	mov.b64 	%rd5327, {%r4064, %r4063};
	xor.b64  	%rd5328, %rd5326, %rd5327;
	add.s64 	%rd5329, %rd10177, %rd10187;
	add.s64 	%rd5330, %rd5329, %rd5323;
	add.s64 	%rd10187, %rd5330, %rd5328;
	shr.u64 	%rd5331, %rd10171, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4065,%dummy}, %rd10171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4066}, %rd10171;
	}
	shf.r.wrap.b32 	%r4067, %r4066, %r4065, 19;
	shf.r.wrap.b32 	%r4068, %r4065, %r4066, 19;
	mov.b64 	%rd5332, {%r4068, %r4067};
	xor.b64  	%rd5333, %rd5332, %rd5331;
	shf.l.wrap.b32 	%r4069, %r4065, %r4066, 3;
	shf.l.wrap.b32 	%r4070, %r4066, %r4065, 3;
	mov.b64 	%rd5334, {%r4070, %r4069};
	xor.b64  	%rd5335, %rd5333, %rd5334;
	shr.u64 	%rd5336, %rd10189, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4071,%dummy}, %rd10189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4072}, %rd10189;
	}
	shf.r.wrap.b32 	%r4073, %r4072, %r4071, 1;
	shf.r.wrap.b32 	%r4074, %r4071, %r4072, 1;
	mov.b64 	%rd5337, {%r4074, %r4073};
	xor.b64  	%rd5338, %rd5337, %rd5336;
	shf.r.wrap.b32 	%r4075, %r4072, %r4071, 8;
	shf.r.wrap.b32 	%r4076, %r4071, %r4072, 8;
	mov.b64 	%rd5339, {%r4076, %r4075};
	xor.b64  	%rd5340, %rd5338, %rd5339;
	add.s64 	%rd5341, %rd10176, %rd10188;
	add.s64 	%rd5342, %rd5341, %rd5335;
	add.s64 	%rd10188, %rd5342, %rd5340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4077,%dummy}, %rd10187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4078}, %rd10187;
	}
	shf.r.wrap.b32 	%r4079, %r4078, %r4077, 19;
	shf.r.wrap.b32 	%r4080, %r4077, %r4078, 19;
	mov.b64 	%rd5343, {%r4080, %r4079};
	shf.l.wrap.b32 	%r4081, %r4077, %r4078, 3;
	shf.l.wrap.b32 	%r4082, %r4078, %r4077, 3;
	mov.b64 	%rd5344, {%r4082, %r4081};
	shr.u64 	%rd5345, %rd10187, 6;
	xor.b64  	%rd5346, %rd5343, %rd5345;
	xor.b64  	%rd5347, %rd5346, %rd5344;
	shr.u64 	%rd5348, %rd10190, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4083,%dummy}, %rd10190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4084}, %rd10190;
	}
	shf.r.wrap.b32 	%r4085, %r4084, %r4083, 1;
	shf.r.wrap.b32 	%r4086, %r4083, %r4084, 1;
	mov.b64 	%rd5349, {%r4086, %r4085};
	xor.b64  	%rd5350, %rd5349, %rd5348;
	shf.r.wrap.b32 	%r4087, %r4084, %r4083, 8;
	shf.r.wrap.b32 	%r4088, %r4083, %r4084, 8;
	mov.b64 	%rd5351, {%r4088, %r4087};
	xor.b64  	%rd5352, %rd5350, %rd5351;
	add.s64 	%rd5353, %rd10175, %rd10189;
	add.s64 	%rd5354, %rd5353, %rd5347;
	add.s64 	%rd10189, %rd5354, %rd5352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4089,%dummy}, %rd10188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4090}, %rd10188;
	}
	shf.r.wrap.b32 	%r4091, %r4090, %r4089, 19;
	shf.r.wrap.b32 	%r4092, %r4089, %r4090, 19;
	mov.b64 	%rd5355, {%r4092, %r4091};
	shf.l.wrap.b32 	%r4093, %r4089, %r4090, 3;
	shf.l.wrap.b32 	%r4094, %r4090, %r4089, 3;
	mov.b64 	%rd5356, {%r4094, %r4093};
	shr.u64 	%rd5357, %rd10188, 6;
	xor.b64  	%rd5358, %rd5355, %rd5357;
	xor.b64  	%rd5359, %rd5358, %rd5356;
	shr.u64 	%rd5360, %rd10191, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4095,%dummy}, %rd10191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4096}, %rd10191;
	}
	shf.r.wrap.b32 	%r4097, %r4096, %r4095, 1;
	shf.r.wrap.b32 	%r4098, %r4095, %r4096, 1;
	mov.b64 	%rd5361, {%r4098, %r4097};
	xor.b64  	%rd5362, %rd5361, %rd5360;
	shf.r.wrap.b32 	%r4099, %r4096, %r4095, 8;
	shf.r.wrap.b32 	%r4100, %r4095, %r4096, 8;
	mov.b64 	%rd5363, {%r4100, %r4099};
	xor.b64  	%rd5364, %rd5362, %rd5363;
	add.s64 	%rd5365, %rd10174, %rd10190;
	add.s64 	%rd5366, %rd5365, %rd5359;
	add.s64 	%rd10190, %rd5366, %rd5364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4101,%dummy}, %rd10189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4102}, %rd10189;
	}
	shf.r.wrap.b32 	%r4103, %r4102, %r4101, 19;
	shf.r.wrap.b32 	%r4104, %r4101, %r4102, 19;
	mov.b64 	%rd5367, {%r4104, %r4103};
	shf.l.wrap.b32 	%r4105, %r4101, %r4102, 3;
	shf.l.wrap.b32 	%r4106, %r4102, %r4101, 3;
	mov.b64 	%rd5368, {%r4106, %r4105};
	shr.u64 	%rd5369, %rd10189, 6;
	xor.b64  	%rd5370, %rd5367, %rd5369;
	xor.b64  	%rd5371, %rd5370, %rd5368;
	shr.u64 	%rd5372, %rd10192, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4107,%dummy}, %rd10192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4108}, %rd10192;
	}
	shf.r.wrap.b32 	%r4109, %r4108, %r4107, 1;
	shf.r.wrap.b32 	%r4110, %r4107, %r4108, 1;
	mov.b64 	%rd5373, {%r4110, %r4109};
	xor.b64  	%rd5374, %rd5373, %rd5372;
	shf.r.wrap.b32 	%r4111, %r4108, %r4107, 8;
	shf.r.wrap.b32 	%r4112, %r4107, %r4108, 8;
	mov.b64 	%rd5375, {%r4112, %r4111};
	xor.b64  	%rd5376, %rd5374, %rd5375;
	add.s64 	%rd5377, %rd10173, %rd10191;
	add.s64 	%rd5378, %rd5377, %rd5371;
	add.s64 	%rd10191, %rd5378, %rd5376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4113,%dummy}, %rd10190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4114}, %rd10190;
	}
	shf.r.wrap.b32 	%r4115, %r4114, %r4113, 19;
	shf.r.wrap.b32 	%r4116, %r4113, %r4114, 19;
	mov.b64 	%rd5379, {%r4116, %r4115};
	shf.l.wrap.b32 	%r4117, %r4113, %r4114, 3;
	shf.l.wrap.b32 	%r4118, %r4114, %r4113, 3;
	mov.b64 	%rd5380, {%r4118, %r4117};
	shr.u64 	%rd5381, %rd10190, 6;
	xor.b64  	%rd5382, %rd5379, %rd5381;
	xor.b64  	%rd5383, %rd5382, %rd5380;
	shr.u64 	%rd5384, %rd10193, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4119,%dummy}, %rd10193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4120}, %rd10193;
	}
	shf.r.wrap.b32 	%r4121, %r4120, %r4119, 1;
	shf.r.wrap.b32 	%r4122, %r4119, %r4120, 1;
	mov.b64 	%rd5385, {%r4122, %r4121};
	xor.b64  	%rd5386, %rd5385, %rd5384;
	shf.r.wrap.b32 	%r4123, %r4120, %r4119, 8;
	shf.r.wrap.b32 	%r4124, %r4119, %r4120, 8;
	mov.b64 	%rd5387, {%r4124, %r4123};
	xor.b64  	%rd5388, %rd5386, %rd5387;
	add.s64 	%rd5389, %rd10172, %rd10192;
	add.s64 	%rd5390, %rd5389, %rd5383;
	add.s64 	%rd10192, %rd5390, %rd5388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4125,%dummy}, %rd10191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4126}, %rd10191;
	}
	shf.r.wrap.b32 	%r4127, %r4126, %r4125, 19;
	shf.r.wrap.b32 	%r4128, %r4125, %r4126, 19;
	mov.b64 	%rd5391, {%r4128, %r4127};
	shf.l.wrap.b32 	%r4129, %r4125, %r4126, 3;
	shf.l.wrap.b32 	%r4130, %r4126, %r4125, 3;
	mov.b64 	%rd5392, {%r4130, %r4129};
	shr.u64 	%rd5393, %rd10191, 6;
	xor.b64  	%rd5394, %rd5391, %rd5393;
	xor.b64  	%rd5395, %rd5394, %rd5392;
	shr.u64 	%rd5396, %rd10194, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4131,%dummy}, %rd10194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4132}, %rd10194;
	}
	shf.r.wrap.b32 	%r4133, %r4132, %r4131, 1;
	shf.r.wrap.b32 	%r4134, %r4131, %r4132, 1;
	mov.b64 	%rd5397, {%r4134, %r4133};
	xor.b64  	%rd5398, %rd5397, %rd5396;
	shf.r.wrap.b32 	%r4135, %r4132, %r4131, 8;
	shf.r.wrap.b32 	%r4136, %r4131, %r4132, 8;
	mov.b64 	%rd5399, {%r4136, %r4135};
	xor.b64  	%rd5400, %rd5398, %rd5399;
	add.s64 	%rd5401, %rd10171, %rd10193;
	add.s64 	%rd5402, %rd5401, %rd5395;
	add.s64 	%rd10193, %rd5402, %rd5400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4137,%dummy}, %rd10192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4138}, %rd10192;
	}
	shf.r.wrap.b32 	%r4139, %r4138, %r4137, 19;
	shf.r.wrap.b32 	%r4140, %r4137, %r4138, 19;
	mov.b64 	%rd5403, {%r4140, %r4139};
	shf.l.wrap.b32 	%r4141, %r4137, %r4138, 3;
	shf.l.wrap.b32 	%r4142, %r4138, %r4137, 3;
	mov.b64 	%rd5404, {%r4142, %r4141};
	shr.u64 	%rd5405, %rd10192, 6;
	xor.b64  	%rd5406, %rd5403, %rd5405;
	xor.b64  	%rd5407, %rd5406, %rd5404;
	shr.u64 	%rd5408, %rd10178, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4143,%dummy}, %rd10178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4144}, %rd10178;
	}
	shf.r.wrap.b32 	%r4145, %r4144, %r4143, 1;
	shf.r.wrap.b32 	%r4146, %r4143, %r4144, 1;
	mov.b64 	%rd5409, {%r4146, %r4145};
	xor.b64  	%rd5410, %rd5409, %rd5408;
	shf.r.wrap.b32 	%r4147, %r4144, %r4143, 8;
	shf.r.wrap.b32 	%r4148, %r4143, %r4144, 8;
	mov.b64 	%rd5411, {%r4148, %r4147};
	xor.b64  	%rd5412, %rd5410, %rd5411;
	add.s64 	%rd5413, %rd10187, %rd10194;
	add.s64 	%rd5414, %rd5413, %rd5407;
	add.s64 	%rd10194, %rd5414, %rd5412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4149,%dummy}, %rd10193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4150}, %rd10193;
	}
	shf.r.wrap.b32 	%r4151, %r4150, %r4149, 19;
	shf.r.wrap.b32 	%r4152, %r4149, %r4150, 19;
	mov.b64 	%rd5415, {%r4152, %r4151};
	shf.l.wrap.b32 	%r4153, %r4149, %r4150, 3;
	shf.l.wrap.b32 	%r4154, %r4150, %r4149, 3;
	mov.b64 	%rd5416, {%r4154, %r4153};
	shr.u64 	%rd5417, %rd10193, 6;
	xor.b64  	%rd5418, %rd5415, %rd5417;
	xor.b64  	%rd5419, %rd5418, %rd5416;
	shr.u64 	%rd5420, %rd10177, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4155,%dummy}, %rd10177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4156}, %rd10177;
	}
	shf.r.wrap.b32 	%r4157, %r4156, %r4155, 1;
	shf.r.wrap.b32 	%r4158, %r4155, %r4156, 1;
	mov.b64 	%rd5421, {%r4158, %r4157};
	xor.b64  	%rd5422, %rd5421, %rd5420;
	shf.r.wrap.b32 	%r4159, %r4156, %r4155, 8;
	shf.r.wrap.b32 	%r4160, %r4155, %r4156, 8;
	mov.b64 	%rd5423, {%r4160, %r4159};
	xor.b64  	%rd5424, %rd5422, %rd5423;
	add.s64 	%rd5425, %rd10188, %rd10178;
	add.s64 	%rd5426, %rd5425, %rd5419;
	add.s64 	%rd10178, %rd5426, %rd5424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4161,%dummy}, %rd10194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4162}, %rd10194;
	}
	shf.r.wrap.b32 	%r4163, %r4162, %r4161, 19;
	shf.r.wrap.b32 	%r4164, %r4161, %r4162, 19;
	mov.b64 	%rd5427, {%r4164, %r4163};
	shf.l.wrap.b32 	%r4165, %r4161, %r4162, 3;
	shf.l.wrap.b32 	%r4166, %r4162, %r4161, 3;
	mov.b64 	%rd5428, {%r4166, %r4165};
	shr.u64 	%rd5429, %rd10194, 6;
	xor.b64  	%rd5430, %rd5427, %rd5429;
	xor.b64  	%rd5431, %rd5430, %rd5428;
	shr.u64 	%rd5432, %rd10176, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4167,%dummy}, %rd10176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4168}, %rd10176;
	}
	shf.r.wrap.b32 	%r4169, %r4168, %r4167, 1;
	shf.r.wrap.b32 	%r4170, %r4167, %r4168, 1;
	mov.b64 	%rd5433, {%r4170, %r4169};
	xor.b64  	%rd5434, %rd5433, %rd5432;
	shf.r.wrap.b32 	%r4171, %r4168, %r4167, 8;
	shf.r.wrap.b32 	%r4172, %r4167, %r4168, 8;
	mov.b64 	%rd5435, {%r4172, %r4171};
	xor.b64  	%rd5436, %rd5434, %rd5435;
	add.s64 	%rd5437, %rd10189, %rd10177;
	add.s64 	%rd5438, %rd5437, %rd5431;
	add.s64 	%rd10177, %rd5438, %rd5436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4173,%dummy}, %rd10178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4174}, %rd10178;
	}
	shf.r.wrap.b32 	%r4175, %r4174, %r4173, 19;
	shf.r.wrap.b32 	%r4176, %r4173, %r4174, 19;
	mov.b64 	%rd5439, {%r4176, %r4175};
	shf.l.wrap.b32 	%r4177, %r4173, %r4174, 3;
	shf.l.wrap.b32 	%r4178, %r4174, %r4173, 3;
	mov.b64 	%rd5440, {%r4178, %r4177};
	shr.u64 	%rd5441, %rd10178, 6;
	xor.b64  	%rd5442, %rd5439, %rd5441;
	xor.b64  	%rd5443, %rd5442, %rd5440;
	shr.u64 	%rd5444, %rd10175, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4179,%dummy}, %rd10175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4180}, %rd10175;
	}
	shf.r.wrap.b32 	%r4181, %r4180, %r4179, 1;
	shf.r.wrap.b32 	%r4182, %r4179, %r4180, 1;
	mov.b64 	%rd5445, {%r4182, %r4181};
	xor.b64  	%rd5446, %rd5445, %rd5444;
	shf.r.wrap.b32 	%r4183, %r4180, %r4179, 8;
	shf.r.wrap.b32 	%r4184, %r4179, %r4180, 8;
	mov.b64 	%rd5447, {%r4184, %r4183};
	xor.b64  	%rd5448, %rd5446, %rd5447;
	add.s64 	%rd5449, %rd10190, %rd10176;
	add.s64 	%rd5450, %rd5449, %rd5443;
	add.s64 	%rd10176, %rd5450, %rd5448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4185,%dummy}, %rd10177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4186}, %rd10177;
	}
	shf.r.wrap.b32 	%r4187, %r4186, %r4185, 19;
	shf.r.wrap.b32 	%r4188, %r4185, %r4186, 19;
	mov.b64 	%rd5451, {%r4188, %r4187};
	shf.l.wrap.b32 	%r4189, %r4185, %r4186, 3;
	shf.l.wrap.b32 	%r4190, %r4186, %r4185, 3;
	mov.b64 	%rd5452, {%r4190, %r4189};
	shr.u64 	%rd5453, %rd10177, 6;
	xor.b64  	%rd5454, %rd5451, %rd5453;
	xor.b64  	%rd5455, %rd5454, %rd5452;
	shr.u64 	%rd5456, %rd10174, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4191,%dummy}, %rd10174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4192}, %rd10174;
	}
	shf.r.wrap.b32 	%r4193, %r4192, %r4191, 1;
	shf.r.wrap.b32 	%r4194, %r4191, %r4192, 1;
	mov.b64 	%rd5457, {%r4194, %r4193};
	xor.b64  	%rd5458, %rd5457, %rd5456;
	shf.r.wrap.b32 	%r4195, %r4192, %r4191, 8;
	shf.r.wrap.b32 	%r4196, %r4191, %r4192, 8;
	mov.b64 	%rd5459, {%r4196, %r4195};
	xor.b64  	%rd5460, %rd5458, %rd5459;
	add.s64 	%rd5461, %rd10191, %rd10175;
	add.s64 	%rd5462, %rd5461, %rd5455;
	add.s64 	%rd10175, %rd5462, %rd5460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4197,%dummy}, %rd10176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4198}, %rd10176;
	}
	shf.r.wrap.b32 	%r4199, %r4198, %r4197, 19;
	shf.r.wrap.b32 	%r4200, %r4197, %r4198, 19;
	mov.b64 	%rd5463, {%r4200, %r4199};
	shf.l.wrap.b32 	%r4201, %r4197, %r4198, 3;
	shf.l.wrap.b32 	%r4202, %r4198, %r4197, 3;
	mov.b64 	%rd5464, {%r4202, %r4201};
	shr.u64 	%rd5465, %rd10176, 6;
	xor.b64  	%rd5466, %rd5463, %rd5465;
	xor.b64  	%rd5467, %rd5466, %rd5464;
	shr.u64 	%rd5468, %rd10173, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4203,%dummy}, %rd10173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4204}, %rd10173;
	}
	shf.r.wrap.b32 	%r4205, %r4204, %r4203, 1;
	shf.r.wrap.b32 	%r4206, %r4203, %r4204, 1;
	mov.b64 	%rd5469, {%r4206, %r4205};
	xor.b64  	%rd5470, %rd5469, %rd5468;
	shf.r.wrap.b32 	%r4207, %r4204, %r4203, 8;
	shf.r.wrap.b32 	%r4208, %r4203, %r4204, 8;
	mov.b64 	%rd5471, {%r4208, %r4207};
	xor.b64  	%rd5472, %rd5470, %rd5471;
	add.s64 	%rd5473, %rd10192, %rd10174;
	add.s64 	%rd5474, %rd5473, %rd5467;
	add.s64 	%rd10174, %rd5474, %rd5472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4209,%dummy}, %rd10175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4210}, %rd10175;
	}
	shf.r.wrap.b32 	%r4211, %r4210, %r4209, 19;
	shf.r.wrap.b32 	%r4212, %r4209, %r4210, 19;
	mov.b64 	%rd5475, {%r4212, %r4211};
	shf.l.wrap.b32 	%r4213, %r4209, %r4210, 3;
	shf.l.wrap.b32 	%r4214, %r4210, %r4209, 3;
	mov.b64 	%rd5476, {%r4214, %r4213};
	shr.u64 	%rd5477, %rd10175, 6;
	xor.b64  	%rd5478, %rd5475, %rd5477;
	xor.b64  	%rd5479, %rd5478, %rd5476;
	shr.u64 	%rd5480, %rd10172, 7;
	shf.r.wrap.b32 	%r4215, %r4054, %r4053, 1;
	shf.r.wrap.b32 	%r4216, %r4053, %r4054, 1;
	mov.b64 	%rd5481, {%r4216, %r4215};
	xor.b64  	%rd5482, %rd5481, %rd5480;
	shf.r.wrap.b32 	%r4217, %r4054, %r4053, 8;
	shf.r.wrap.b32 	%r4218, %r4053, %r4054, 8;
	mov.b64 	%rd5483, {%r4218, %r4217};
	xor.b64  	%rd5484, %rd5482, %rd5483;
	add.s64 	%rd5485, %rd10193, %rd10173;
	add.s64 	%rd5486, %rd5485, %rd5479;
	add.s64 	%rd10173, %rd5486, %rd5484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4219,%dummy}, %rd10174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4220}, %rd10174;
	}
	shf.r.wrap.b32 	%r4221, %r4220, %r4219, 19;
	shf.r.wrap.b32 	%r4222, %r4219, %r4220, 19;
	mov.b64 	%rd5487, {%r4222, %r4221};
	shf.l.wrap.b32 	%r4223, %r4219, %r4220, 3;
	shf.l.wrap.b32 	%r4224, %r4220, %r4219, 3;
	mov.b64 	%rd5488, {%r4224, %r4223};
	shr.u64 	%rd5489, %rd10174, 6;
	xor.b64  	%rd5490, %rd5487, %rd5489;
	xor.b64  	%rd5491, %rd5490, %rd5488;
	shr.u64 	%rd5492, %rd10171, 7;
	shf.r.wrap.b32 	%r4225, %r4066, %r4065, 1;
	shf.r.wrap.b32 	%r4226, %r4065, %r4066, 1;
	mov.b64 	%rd5493, {%r4226, %r4225};
	xor.b64  	%rd5494, %rd5493, %rd5492;
	shf.r.wrap.b32 	%r4227, %r4066, %r4065, 8;
	shf.r.wrap.b32 	%r4228, %r4065, %r4066, 8;
	mov.b64 	%rd5495, {%r4228, %r4227};
	xor.b64  	%rd5496, %rd5494, %rd5495;
	add.s64 	%rd5497, %rd10194, %rd10172;
	add.s64 	%rd5498, %rd5497, %rd5491;
	add.s64 	%rd10172, %rd5498, %rd5496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4229,%dummy}, %rd10173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4230}, %rd10173;
	}
	shf.r.wrap.b32 	%r4231, %r4230, %r4229, 19;
	shf.r.wrap.b32 	%r4232, %r4229, %r4230, 19;
	mov.b64 	%rd5499, {%r4232, %r4231};
	shf.l.wrap.b32 	%r4233, %r4229, %r4230, 3;
	shf.l.wrap.b32 	%r4234, %r4230, %r4229, 3;
	mov.b64 	%rd5500, {%r4234, %r4233};
	shr.u64 	%rd5501, %rd10173, 6;
	xor.b64  	%rd5502, %rd5499, %rd5501;
	xor.b64  	%rd5503, %rd5502, %rd5500;
	shf.r.wrap.b32 	%r4235, %r4078, %r4077, 1;
	shf.r.wrap.b32 	%r4236, %r4077, %r4078, 1;
	mov.b64 	%rd5504, {%r4236, %r4235};
	shf.r.wrap.b32 	%r4237, %r4078, %r4077, 8;
	shf.r.wrap.b32 	%r4238, %r4077, %r4078, 8;
	mov.b64 	%rd5505, {%r4238, %r4237};
	shr.u64 	%rd5506, %rd10187, 7;
	xor.b64  	%rd5507, %rd5504, %rd5506;
	xor.b64  	%rd5508, %rd5507, %rd5505;
	add.s64 	%rd5509, %rd10178, %rd10171;
	add.s64 	%rd5510, %rd5509, %rd5503;
	add.s64 	%rd10171, %rd5510, %rd5508;
	mul.wide.s32 	%rd5511, %r7647, 8;
	mov.u64 	%rd5512, k_sha512;
	add.s64 	%rd5513, %rd5512, %rd5511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4239,%dummy}, %rd10183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4240}, %rd10183;
	}
	shf.r.wrap.b32 	%r4241, %r4240, %r4239, 18;
	shf.r.wrap.b32 	%r4242, %r4239, %r4240, 18;
	mov.b64 	%rd5514, {%r4242, %r4241};
	shf.r.wrap.b32 	%r4243, %r4240, %r4239, 14;
	shf.r.wrap.b32 	%r4244, %r4239, %r4240, 14;
	mov.b64 	%rd5515, {%r4244, %r4243};
	xor.b64  	%rd5516, %rd5514, %rd5515;
	shf.l.wrap.b32 	%r4245, %r4239, %r4240, 23;
	shf.l.wrap.b32 	%r4246, %r4240, %r4239, 23;
	mov.b64 	%rd5517, {%r4246, %r4245};
	xor.b64  	%rd5518, %rd5516, %rd5517;
	xor.b64  	%rd5519, %rd10184, %rd10185;
	and.b64  	%rd5520, %rd10183, %rd5519;
	xor.b64  	%rd5521, %rd5520, %rd10185;
	add.s64 	%rd5522, %rd5521, %rd10186;
	add.s64 	%rd5523, %rd5522, %rd10187;
	ld.const.u64 	%rd5524, [%rd5513];
	add.s64 	%rd5525, %rd5523, %rd5524;
	add.s64 	%rd5526, %rd5525, %rd5518;
	add.s64 	%rd5527, %rd5526, %rd10182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4247}, %rd10179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4248,%dummy}, %rd10179;
	}
	shf.l.wrap.b32 	%r4249, %r4248, %r4247, 30;
	shf.l.wrap.b32 	%r4250, %r4247, %r4248, 30;
	mov.b64 	%rd5528, {%r4250, %r4249};
	shf.r.wrap.b32 	%r4251, %r4247, %r4248, 28;
	shf.r.wrap.b32 	%r4252, %r4248, %r4247, 28;
	mov.b64 	%rd5529, {%r4252, %r4251};
	xor.b64  	%rd5530, %rd5528, %rd5529;
	shf.l.wrap.b32 	%r4253, %r4248, %r4247, 25;
	shf.l.wrap.b32 	%r4254, %r4247, %r4248, 25;
	mov.b64 	%rd5531, {%r4254, %r4253};
	xor.b64  	%rd5532, %rd5530, %rd5531;
	xor.b64  	%rd5533, %rd10179, %rd10180;
	and.b64  	%rd5534, %rd5533, %rd10181;
	and.b64  	%rd5535, %rd10179, %rd10180;
	or.b64  	%rd5536, %rd5534, %rd5535;
	add.s64 	%rd5537, %rd5526, %rd5536;
	add.s64 	%rd5538, %rd5537, %rd5532;
	add.s32 	%r4255, %r7647, 1;
	mul.wide.s32 	%rd5539, %r4255, 8;
	add.s64 	%rd5540, %rd5512, %rd5539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4256,%dummy}, %rd5527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4257}, %rd5527;
	}
	shf.r.wrap.b32 	%r4258, %r4257, %r4256, 14;
	shf.r.wrap.b32 	%r4259, %r4256, %r4257, 14;
	mov.b64 	%rd5541, {%r4259, %r4258};
	shf.r.wrap.b32 	%r4260, %r4257, %r4256, 18;
	shf.r.wrap.b32 	%r4261, %r4256, %r4257, 18;
	mov.b64 	%rd5542, {%r4261, %r4260};
	xor.b64  	%rd5543, %rd5542, %rd5541;
	shf.l.wrap.b32 	%r4262, %r4256, %r4257, 23;
	shf.l.wrap.b32 	%r4263, %r4257, %r4256, 23;
	mov.b64 	%rd5544, {%r4263, %r4262};
	xor.b64  	%rd5545, %rd5543, %rd5544;
	xor.b64  	%rd5546, %rd10183, %rd10184;
	and.b64  	%rd5547, %rd5527, %rd5546;
	xor.b64  	%rd5548, %rd5547, %rd10184;
	add.s64 	%rd5549, %rd10188, %rd10185;
	ld.const.u64 	%rd5550, [%rd5540];
	add.s64 	%rd5551, %rd5549, %rd5550;
	add.s64 	%rd5552, %rd5551, %rd5548;
	add.s64 	%rd5553, %rd5552, %rd5545;
	add.s64 	%rd5554, %rd5553, %rd10181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4264,%dummy}, %rd5538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4265}, %rd5538;
	}
	shf.r.wrap.b32 	%r4266, %r4265, %r4264, 28;
	shf.r.wrap.b32 	%r4267, %r4264, %r4265, 28;
	mov.b64 	%rd5555, {%r4267, %r4266};
	shf.l.wrap.b32 	%r4268, %r4264, %r4265, 30;
	shf.l.wrap.b32 	%r4269, %r4265, %r4264, 30;
	mov.b64 	%rd5556, {%r4269, %r4268};
	xor.b64  	%rd5557, %rd5556, %rd5555;
	shf.l.wrap.b32 	%r4270, %r4264, %r4265, 25;
	shf.l.wrap.b32 	%r4271, %r4265, %r4264, 25;
	mov.b64 	%rd5558, {%r4271, %r4270};
	xor.b64  	%rd5559, %rd5557, %rd5558;
	and.b64  	%rd5560, %rd5538, %rd10179;
	xor.b64  	%rd5561, %rd5538, %rd10179;
	and.b64  	%rd5562, %rd5561, %rd10180;
	or.b64  	%rd5563, %rd5562, %rd5560;
	add.s64 	%rd5564, %rd5553, %rd5563;
	add.s64 	%rd5565, %rd5564, %rd5559;
	add.s32 	%r4272, %r7647, 2;
	mul.wide.s32 	%rd5566, %r4272, 8;
	add.s64 	%rd5567, %rd5512, %rd5566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4273,%dummy}, %rd5554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4274}, %rd5554;
	}
	shf.r.wrap.b32 	%r4275, %r4274, %r4273, 14;
	shf.r.wrap.b32 	%r4276, %r4273, %r4274, 14;
	mov.b64 	%rd5568, {%r4276, %r4275};
	shf.r.wrap.b32 	%r4277, %r4274, %r4273, 18;
	shf.r.wrap.b32 	%r4278, %r4273, %r4274, 18;
	mov.b64 	%rd5569, {%r4278, %r4277};
	xor.b64  	%rd5570, %rd5569, %rd5568;
	shf.l.wrap.b32 	%r4279, %r4273, %r4274, 23;
	shf.l.wrap.b32 	%r4280, %r4274, %r4273, 23;
	mov.b64 	%rd5571, {%r4280, %r4279};
	xor.b64  	%rd5572, %rd5570, %rd5571;
	xor.b64  	%rd5573, %rd5527, %rd10183;
	and.b64  	%rd5574, %rd5554, %rd5573;
	xor.b64  	%rd5575, %rd5574, %rd10183;
	add.s64 	%rd5576, %rd10189, %rd10184;
	ld.const.u64 	%rd5577, [%rd5567];
	add.s64 	%rd5578, %rd5576, %rd5577;
	add.s64 	%rd5579, %rd5578, %rd5575;
	add.s64 	%rd5580, %rd5579, %rd5572;
	add.s64 	%rd5581, %rd5580, %rd10180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4281,%dummy}, %rd5565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4282}, %rd5565;
	}
	shf.r.wrap.b32 	%r4283, %r4282, %r4281, 28;
	shf.r.wrap.b32 	%r4284, %r4281, %r4282, 28;
	mov.b64 	%rd5582, {%r4284, %r4283};
	shf.l.wrap.b32 	%r4285, %r4281, %r4282, 30;
	shf.l.wrap.b32 	%r4286, %r4282, %r4281, 30;
	mov.b64 	%rd5583, {%r4286, %r4285};
	xor.b64  	%rd5584, %rd5583, %rd5582;
	shf.l.wrap.b32 	%r4287, %r4281, %r4282, 25;
	shf.l.wrap.b32 	%r4288, %r4282, %r4281, 25;
	mov.b64 	%rd5585, {%r4288, %r4287};
	xor.b64  	%rd5586, %rd5584, %rd5585;
	and.b64  	%rd5587, %rd5565, %rd5538;
	xor.b64  	%rd5588, %rd5565, %rd5538;
	and.b64  	%rd5589, %rd5588, %rd10179;
	or.b64  	%rd5590, %rd5589, %rd5587;
	add.s64 	%rd5591, %rd5580, %rd5590;
	add.s64 	%rd5592, %rd5591, %rd5586;
	add.s32 	%r4289, %r7647, 3;
	mul.wide.s32 	%rd5593, %r4289, 8;
	add.s64 	%rd5594, %rd5512, %rd5593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4290,%dummy}, %rd5581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4291}, %rd5581;
	}
	shf.r.wrap.b32 	%r4292, %r4291, %r4290, 14;
	shf.r.wrap.b32 	%r4293, %r4290, %r4291, 14;
	mov.b64 	%rd5595, {%r4293, %r4292};
	shf.r.wrap.b32 	%r4294, %r4291, %r4290, 18;
	shf.r.wrap.b32 	%r4295, %r4290, %r4291, 18;
	mov.b64 	%rd5596, {%r4295, %r4294};
	xor.b64  	%rd5597, %rd5596, %rd5595;
	shf.l.wrap.b32 	%r4296, %r4290, %r4291, 23;
	shf.l.wrap.b32 	%r4297, %r4291, %r4290, 23;
	mov.b64 	%rd5598, {%r4297, %r4296};
	xor.b64  	%rd5599, %rd5597, %rd5598;
	xor.b64  	%rd5600, %rd5554, %rd5527;
	and.b64  	%rd5601, %rd5581, %rd5600;
	xor.b64  	%rd5602, %rd5601, %rd5527;
	add.s64 	%rd5603, %rd10190, %rd10183;
	ld.const.u64 	%rd5604, [%rd5594];
	add.s64 	%rd5605, %rd5603, %rd5604;
	add.s64 	%rd5606, %rd5605, %rd5602;
	add.s64 	%rd5607, %rd5606, %rd5599;
	add.s64 	%rd5608, %rd5607, %rd10179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4298,%dummy}, %rd5592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4299}, %rd5592;
	}
	shf.r.wrap.b32 	%r4300, %r4299, %r4298, 28;
	shf.r.wrap.b32 	%r4301, %r4298, %r4299, 28;
	mov.b64 	%rd5609, {%r4301, %r4300};
	shf.l.wrap.b32 	%r4302, %r4298, %r4299, 30;
	shf.l.wrap.b32 	%r4303, %r4299, %r4298, 30;
	mov.b64 	%rd5610, {%r4303, %r4302};
	xor.b64  	%rd5611, %rd5610, %rd5609;
	shf.l.wrap.b32 	%r4304, %r4298, %r4299, 25;
	shf.l.wrap.b32 	%r4305, %r4299, %r4298, 25;
	mov.b64 	%rd5612, {%r4305, %r4304};
	xor.b64  	%rd5613, %rd5611, %rd5612;
	and.b64  	%rd5614, %rd5592, %rd5565;
	xor.b64  	%rd5615, %rd5592, %rd5565;
	and.b64  	%rd5616, %rd5615, %rd5538;
	or.b64  	%rd5617, %rd5616, %rd5614;
	add.s64 	%rd5618, %rd5607, %rd5617;
	add.s64 	%rd5619, %rd5618, %rd5613;
	add.s32 	%r4306, %r7647, 4;
	mul.wide.s32 	%rd5620, %r4306, 8;
	add.s64 	%rd5621, %rd5512, %rd5620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4307,%dummy}, %rd5608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4308}, %rd5608;
	}
	shf.r.wrap.b32 	%r4309, %r4308, %r4307, 14;
	shf.r.wrap.b32 	%r4310, %r4307, %r4308, 14;
	mov.b64 	%rd5622, {%r4310, %r4309};
	shf.r.wrap.b32 	%r4311, %r4308, %r4307, 18;
	shf.r.wrap.b32 	%r4312, %r4307, %r4308, 18;
	mov.b64 	%rd5623, {%r4312, %r4311};
	xor.b64  	%rd5624, %rd5623, %rd5622;
	shf.l.wrap.b32 	%r4313, %r4307, %r4308, 23;
	shf.l.wrap.b32 	%r4314, %r4308, %r4307, 23;
	mov.b64 	%rd5625, {%r4314, %r4313};
	xor.b64  	%rd5626, %rd5624, %rd5625;
	xor.b64  	%rd5627, %rd5581, %rd5554;
	and.b64  	%rd5628, %rd5608, %rd5627;
	xor.b64  	%rd5629, %rd5628, %rd5554;
	add.s64 	%rd5630, %rd5527, %rd10191;
	ld.const.u64 	%rd5631, [%rd5621];
	add.s64 	%rd5632, %rd5630, %rd5631;
	add.s64 	%rd5633, %rd5632, %rd5629;
	add.s64 	%rd5634, %rd5633, %rd5626;
	add.s64 	%rd5635, %rd5634, %rd5538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4315,%dummy}, %rd5619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4316}, %rd5619;
	}
	shf.r.wrap.b32 	%r4317, %r4316, %r4315, 28;
	shf.r.wrap.b32 	%r4318, %r4315, %r4316, 28;
	mov.b64 	%rd5636, {%r4318, %r4317};
	shf.l.wrap.b32 	%r4319, %r4315, %r4316, 30;
	shf.l.wrap.b32 	%r4320, %r4316, %r4315, 30;
	mov.b64 	%rd5637, {%r4320, %r4319};
	xor.b64  	%rd5638, %rd5637, %rd5636;
	shf.l.wrap.b32 	%r4321, %r4315, %r4316, 25;
	shf.l.wrap.b32 	%r4322, %r4316, %r4315, 25;
	mov.b64 	%rd5639, {%r4322, %r4321};
	xor.b64  	%rd5640, %rd5638, %rd5639;
	and.b64  	%rd5641, %rd5619, %rd5592;
	xor.b64  	%rd5642, %rd5619, %rd5592;
	and.b64  	%rd5643, %rd5642, %rd5565;
	or.b64  	%rd5644, %rd5643, %rd5641;
	add.s64 	%rd5645, %rd5634, %rd5644;
	add.s64 	%rd5646, %rd5645, %rd5640;
	add.s32 	%r4323, %r7647, 5;
	mul.wide.s32 	%rd5647, %r4323, 8;
	add.s64 	%rd5648, %rd5512, %rd5647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4324,%dummy}, %rd5635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4325}, %rd5635;
	}
	shf.r.wrap.b32 	%r4326, %r4325, %r4324, 14;
	shf.r.wrap.b32 	%r4327, %r4324, %r4325, 14;
	mov.b64 	%rd5649, {%r4327, %r4326};
	shf.r.wrap.b32 	%r4328, %r4325, %r4324, 18;
	shf.r.wrap.b32 	%r4329, %r4324, %r4325, 18;
	mov.b64 	%rd5650, {%r4329, %r4328};
	xor.b64  	%rd5651, %rd5650, %rd5649;
	shf.l.wrap.b32 	%r4330, %r4324, %r4325, 23;
	shf.l.wrap.b32 	%r4331, %r4325, %r4324, 23;
	mov.b64 	%rd5652, {%r4331, %r4330};
	xor.b64  	%rd5653, %rd5651, %rd5652;
	xor.b64  	%rd5654, %rd5608, %rd5581;
	and.b64  	%rd5655, %rd5635, %rd5654;
	xor.b64  	%rd5656, %rd5655, %rd5581;
	add.s64 	%rd5657, %rd5554, %rd10192;
	ld.const.u64 	%rd5658, [%rd5648];
	add.s64 	%rd5659, %rd5657, %rd5658;
	add.s64 	%rd5660, %rd5659, %rd5656;
	add.s64 	%rd5661, %rd5660, %rd5653;
	add.s64 	%rd5662, %rd5661, %rd5565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4332,%dummy}, %rd5646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4333}, %rd5646;
	}
	shf.r.wrap.b32 	%r4334, %r4333, %r4332, 28;
	shf.r.wrap.b32 	%r4335, %r4332, %r4333, 28;
	mov.b64 	%rd5663, {%r4335, %r4334};
	shf.l.wrap.b32 	%r4336, %r4332, %r4333, 30;
	shf.l.wrap.b32 	%r4337, %r4333, %r4332, 30;
	mov.b64 	%rd5664, {%r4337, %r4336};
	xor.b64  	%rd5665, %rd5664, %rd5663;
	shf.l.wrap.b32 	%r4338, %r4332, %r4333, 25;
	shf.l.wrap.b32 	%r4339, %r4333, %r4332, 25;
	mov.b64 	%rd5666, {%r4339, %r4338};
	xor.b64  	%rd5667, %rd5665, %rd5666;
	and.b64  	%rd5668, %rd5646, %rd5619;
	xor.b64  	%rd5669, %rd5646, %rd5619;
	and.b64  	%rd5670, %rd5669, %rd5592;
	or.b64  	%rd5671, %rd5670, %rd5668;
	add.s64 	%rd5672, %rd5661, %rd5671;
	add.s64 	%rd5673, %rd5672, %rd5667;
	add.s32 	%r4340, %r7647, 6;
	mul.wide.s32 	%rd5674, %r4340, 8;
	add.s64 	%rd5675, %rd5512, %rd5674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4341,%dummy}, %rd5662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4342}, %rd5662;
	}
	shf.r.wrap.b32 	%r4343, %r4342, %r4341, 14;
	shf.r.wrap.b32 	%r4344, %r4341, %r4342, 14;
	mov.b64 	%rd5676, {%r4344, %r4343};
	shf.r.wrap.b32 	%r4345, %r4342, %r4341, 18;
	shf.r.wrap.b32 	%r4346, %r4341, %r4342, 18;
	mov.b64 	%rd5677, {%r4346, %r4345};
	xor.b64  	%rd5678, %rd5677, %rd5676;
	shf.l.wrap.b32 	%r4347, %r4341, %r4342, 23;
	shf.l.wrap.b32 	%r4348, %r4342, %r4341, 23;
	mov.b64 	%rd5679, {%r4348, %r4347};
	xor.b64  	%rd5680, %rd5678, %rd5679;
	xor.b64  	%rd5681, %rd5635, %rd5608;
	and.b64  	%rd5682, %rd5662, %rd5681;
	xor.b64  	%rd5683, %rd5682, %rd5608;
	add.s64 	%rd5684, %rd5581, %rd10193;
	ld.const.u64 	%rd5685, [%rd5675];
	add.s64 	%rd5686, %rd5684, %rd5685;
	add.s64 	%rd5687, %rd5686, %rd5683;
	add.s64 	%rd5688, %rd5687, %rd5680;
	add.s64 	%rd5689, %rd5688, %rd5592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4349,%dummy}, %rd5673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4350}, %rd5673;
	}
	shf.r.wrap.b32 	%r4351, %r4350, %r4349, 28;
	shf.r.wrap.b32 	%r4352, %r4349, %r4350, 28;
	mov.b64 	%rd5690, {%r4352, %r4351};
	shf.l.wrap.b32 	%r4353, %r4349, %r4350, 30;
	shf.l.wrap.b32 	%r4354, %r4350, %r4349, 30;
	mov.b64 	%rd5691, {%r4354, %r4353};
	xor.b64  	%rd5692, %rd5691, %rd5690;
	shf.l.wrap.b32 	%r4355, %r4349, %r4350, 25;
	shf.l.wrap.b32 	%r4356, %r4350, %r4349, 25;
	mov.b64 	%rd5693, {%r4356, %r4355};
	xor.b64  	%rd5694, %rd5692, %rd5693;
	and.b64  	%rd5695, %rd5673, %rd5646;
	xor.b64  	%rd5696, %rd5673, %rd5646;
	and.b64  	%rd5697, %rd5696, %rd5619;
	or.b64  	%rd5698, %rd5697, %rd5695;
	add.s64 	%rd5699, %rd5688, %rd5698;
	add.s64 	%rd5700, %rd5699, %rd5694;
	add.s32 	%r4357, %r7647, 7;
	mul.wide.s32 	%rd5701, %r4357, 8;
	add.s64 	%rd5702, %rd5512, %rd5701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4358,%dummy}, %rd5689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4359}, %rd5689;
	}
	shf.r.wrap.b32 	%r4360, %r4359, %r4358, 14;
	shf.r.wrap.b32 	%r4361, %r4358, %r4359, 14;
	mov.b64 	%rd5703, {%r4361, %r4360};
	shf.r.wrap.b32 	%r4362, %r4359, %r4358, 18;
	shf.r.wrap.b32 	%r4363, %r4358, %r4359, 18;
	mov.b64 	%rd5704, {%r4363, %r4362};
	xor.b64  	%rd5705, %rd5704, %rd5703;
	shf.l.wrap.b32 	%r4364, %r4358, %r4359, 23;
	shf.l.wrap.b32 	%r4365, %r4359, %r4358, 23;
	mov.b64 	%rd5706, {%r4365, %r4364};
	xor.b64  	%rd5707, %rd5705, %rd5706;
	xor.b64  	%rd5708, %rd5662, %rd5635;
	and.b64  	%rd5709, %rd5689, %rd5708;
	xor.b64  	%rd5710, %rd5709, %rd5635;
	add.s64 	%rd5711, %rd5608, %rd10194;
	ld.const.u64 	%rd5712, [%rd5702];
	add.s64 	%rd5713, %rd5711, %rd5712;
	add.s64 	%rd5714, %rd5713, %rd5710;
	add.s64 	%rd5715, %rd5714, %rd5707;
	add.s64 	%rd5716, %rd5715, %rd5619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4366,%dummy}, %rd5700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4367}, %rd5700;
	}
	shf.r.wrap.b32 	%r4368, %r4367, %r4366, 28;
	shf.r.wrap.b32 	%r4369, %r4366, %r4367, 28;
	mov.b64 	%rd5717, {%r4369, %r4368};
	shf.l.wrap.b32 	%r4370, %r4366, %r4367, 30;
	shf.l.wrap.b32 	%r4371, %r4367, %r4366, 30;
	mov.b64 	%rd5718, {%r4371, %r4370};
	xor.b64  	%rd5719, %rd5718, %rd5717;
	shf.l.wrap.b32 	%r4372, %r4366, %r4367, 25;
	shf.l.wrap.b32 	%r4373, %r4367, %r4366, 25;
	mov.b64 	%rd5720, {%r4373, %r4372};
	xor.b64  	%rd5721, %rd5719, %rd5720;
	and.b64  	%rd5722, %rd5700, %rd5673;
	xor.b64  	%rd5723, %rd5700, %rd5673;
	and.b64  	%rd5724, %rd5723, %rd5646;
	or.b64  	%rd5725, %rd5724, %rd5722;
	add.s64 	%rd5726, %rd5715, %rd5725;
	add.s64 	%rd5727, %rd5726, %rd5721;
	add.s32 	%r4374, %r7647, 8;
	mul.wide.s32 	%rd5728, %r4374, 8;
	add.s64 	%rd5729, %rd5512, %rd5728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4375,%dummy}, %rd5716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4376}, %rd5716;
	}
	shf.r.wrap.b32 	%r4377, %r4376, %r4375, 14;
	shf.r.wrap.b32 	%r4378, %r4375, %r4376, 14;
	mov.b64 	%rd5730, {%r4378, %r4377};
	shf.r.wrap.b32 	%r4379, %r4376, %r4375, 18;
	shf.r.wrap.b32 	%r4380, %r4375, %r4376, 18;
	mov.b64 	%rd5731, {%r4380, %r4379};
	xor.b64  	%rd5732, %rd5731, %rd5730;
	shf.l.wrap.b32 	%r4381, %r4375, %r4376, 23;
	shf.l.wrap.b32 	%r4382, %r4376, %r4375, 23;
	mov.b64 	%rd5733, {%r4382, %r4381};
	xor.b64  	%rd5734, %rd5732, %rd5733;
	xor.b64  	%rd5735, %rd5689, %rd5662;
	and.b64  	%rd5736, %rd5716, %rd5735;
	xor.b64  	%rd5737, %rd5736, %rd5662;
	add.s64 	%rd5738, %rd5635, %rd10178;
	ld.const.u64 	%rd5739, [%rd5729];
	add.s64 	%rd5740, %rd5738, %rd5739;
	add.s64 	%rd5741, %rd5740, %rd5737;
	add.s64 	%rd5742, %rd5741, %rd5734;
	add.s64 	%rd5743, %rd5742, %rd5646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4383,%dummy}, %rd5727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4384}, %rd5727;
	}
	shf.r.wrap.b32 	%r4385, %r4384, %r4383, 28;
	shf.r.wrap.b32 	%r4386, %r4383, %r4384, 28;
	mov.b64 	%rd5744, {%r4386, %r4385};
	shf.l.wrap.b32 	%r4387, %r4383, %r4384, 30;
	shf.l.wrap.b32 	%r4388, %r4384, %r4383, 30;
	mov.b64 	%rd5745, {%r4388, %r4387};
	xor.b64  	%rd5746, %rd5745, %rd5744;
	shf.l.wrap.b32 	%r4389, %r4383, %r4384, 25;
	shf.l.wrap.b32 	%r4390, %r4384, %r4383, 25;
	mov.b64 	%rd5747, {%r4390, %r4389};
	xor.b64  	%rd5748, %rd5746, %rd5747;
	and.b64  	%rd5749, %rd5727, %rd5700;
	xor.b64  	%rd5750, %rd5727, %rd5700;
	and.b64  	%rd5751, %rd5750, %rd5673;
	or.b64  	%rd5752, %rd5751, %rd5749;
	add.s64 	%rd5753, %rd5742, %rd5752;
	add.s64 	%rd5754, %rd5753, %rd5748;
	add.s32 	%r4391, %r7647, 9;
	mul.wide.s32 	%rd5755, %r4391, 8;
	add.s64 	%rd5756, %rd5512, %rd5755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4392,%dummy}, %rd5743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4393}, %rd5743;
	}
	shf.r.wrap.b32 	%r4394, %r4393, %r4392, 14;
	shf.r.wrap.b32 	%r4395, %r4392, %r4393, 14;
	mov.b64 	%rd5757, {%r4395, %r4394};
	shf.r.wrap.b32 	%r4396, %r4393, %r4392, 18;
	shf.r.wrap.b32 	%r4397, %r4392, %r4393, 18;
	mov.b64 	%rd5758, {%r4397, %r4396};
	xor.b64  	%rd5759, %rd5758, %rd5757;
	shf.l.wrap.b32 	%r4398, %r4392, %r4393, 23;
	shf.l.wrap.b32 	%r4399, %r4393, %r4392, 23;
	mov.b64 	%rd5760, {%r4399, %r4398};
	xor.b64  	%rd5761, %rd5759, %rd5760;
	xor.b64  	%rd5762, %rd5716, %rd5689;
	and.b64  	%rd5763, %rd5743, %rd5762;
	xor.b64  	%rd5764, %rd5763, %rd5689;
	add.s64 	%rd5765, %rd5662, %rd10177;
	ld.const.u64 	%rd5766, [%rd5756];
	add.s64 	%rd5767, %rd5765, %rd5766;
	add.s64 	%rd5768, %rd5767, %rd5764;
	add.s64 	%rd5769, %rd5768, %rd5761;
	add.s64 	%rd5770, %rd5769, %rd5673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4400,%dummy}, %rd5754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4401}, %rd5754;
	}
	shf.r.wrap.b32 	%r4402, %r4401, %r4400, 28;
	shf.r.wrap.b32 	%r4403, %r4400, %r4401, 28;
	mov.b64 	%rd5771, {%r4403, %r4402};
	shf.l.wrap.b32 	%r4404, %r4400, %r4401, 30;
	shf.l.wrap.b32 	%r4405, %r4401, %r4400, 30;
	mov.b64 	%rd5772, {%r4405, %r4404};
	xor.b64  	%rd5773, %rd5772, %rd5771;
	shf.l.wrap.b32 	%r4406, %r4400, %r4401, 25;
	shf.l.wrap.b32 	%r4407, %r4401, %r4400, 25;
	mov.b64 	%rd5774, {%r4407, %r4406};
	xor.b64  	%rd5775, %rd5773, %rd5774;
	and.b64  	%rd5776, %rd5754, %rd5727;
	xor.b64  	%rd5777, %rd5754, %rd5727;
	and.b64  	%rd5778, %rd5777, %rd5700;
	or.b64  	%rd5779, %rd5778, %rd5776;
	add.s64 	%rd5780, %rd5769, %rd5779;
	add.s64 	%rd5781, %rd5780, %rd5775;
	add.s32 	%r4408, %r7647, 10;
	mul.wide.s32 	%rd5782, %r4408, 8;
	add.s64 	%rd5783, %rd5512, %rd5782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4409,%dummy}, %rd5770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4410}, %rd5770;
	}
	shf.r.wrap.b32 	%r4411, %r4410, %r4409, 14;
	shf.r.wrap.b32 	%r4412, %r4409, %r4410, 14;
	mov.b64 	%rd5784, {%r4412, %r4411};
	shf.r.wrap.b32 	%r4413, %r4410, %r4409, 18;
	shf.r.wrap.b32 	%r4414, %r4409, %r4410, 18;
	mov.b64 	%rd5785, {%r4414, %r4413};
	xor.b64  	%rd5786, %rd5785, %rd5784;
	shf.l.wrap.b32 	%r4415, %r4409, %r4410, 23;
	shf.l.wrap.b32 	%r4416, %r4410, %r4409, 23;
	mov.b64 	%rd5787, {%r4416, %r4415};
	xor.b64  	%rd5788, %rd5786, %rd5787;
	xor.b64  	%rd5789, %rd5743, %rd5716;
	and.b64  	%rd5790, %rd5770, %rd5789;
	xor.b64  	%rd5791, %rd5790, %rd5716;
	add.s64 	%rd5792, %rd5689, %rd10176;
	ld.const.u64 	%rd5793, [%rd5783];
	add.s64 	%rd5794, %rd5792, %rd5793;
	add.s64 	%rd5795, %rd5794, %rd5791;
	add.s64 	%rd5796, %rd5795, %rd5788;
	add.s64 	%rd5797, %rd5796, %rd5700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4417,%dummy}, %rd5781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4418}, %rd5781;
	}
	shf.r.wrap.b32 	%r4419, %r4418, %r4417, 28;
	shf.r.wrap.b32 	%r4420, %r4417, %r4418, 28;
	mov.b64 	%rd5798, {%r4420, %r4419};
	shf.l.wrap.b32 	%r4421, %r4417, %r4418, 30;
	shf.l.wrap.b32 	%r4422, %r4418, %r4417, 30;
	mov.b64 	%rd5799, {%r4422, %r4421};
	xor.b64  	%rd5800, %rd5799, %rd5798;
	shf.l.wrap.b32 	%r4423, %r4417, %r4418, 25;
	shf.l.wrap.b32 	%r4424, %r4418, %r4417, 25;
	mov.b64 	%rd5801, {%r4424, %r4423};
	xor.b64  	%rd5802, %rd5800, %rd5801;
	and.b64  	%rd5803, %rd5781, %rd5754;
	xor.b64  	%rd5804, %rd5781, %rd5754;
	and.b64  	%rd5805, %rd5804, %rd5727;
	or.b64  	%rd5806, %rd5805, %rd5803;
	add.s64 	%rd5807, %rd5796, %rd5806;
	add.s64 	%rd5808, %rd5807, %rd5802;
	add.s32 	%r4425, %r7647, 11;
	mul.wide.s32 	%rd5809, %r4425, 8;
	add.s64 	%rd5810, %rd5512, %rd5809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4426,%dummy}, %rd5797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4427}, %rd5797;
	}
	shf.r.wrap.b32 	%r4428, %r4427, %r4426, 14;
	shf.r.wrap.b32 	%r4429, %r4426, %r4427, 14;
	mov.b64 	%rd5811, {%r4429, %r4428};
	shf.r.wrap.b32 	%r4430, %r4427, %r4426, 18;
	shf.r.wrap.b32 	%r4431, %r4426, %r4427, 18;
	mov.b64 	%rd5812, {%r4431, %r4430};
	xor.b64  	%rd5813, %rd5812, %rd5811;
	shf.l.wrap.b32 	%r4432, %r4426, %r4427, 23;
	shf.l.wrap.b32 	%r4433, %r4427, %r4426, 23;
	mov.b64 	%rd5814, {%r4433, %r4432};
	xor.b64  	%rd5815, %rd5813, %rd5814;
	xor.b64  	%rd5816, %rd5770, %rd5743;
	and.b64  	%rd5817, %rd5797, %rd5816;
	xor.b64  	%rd5818, %rd5817, %rd5743;
	add.s64 	%rd5819, %rd5716, %rd10175;
	ld.const.u64 	%rd5820, [%rd5810];
	add.s64 	%rd5821, %rd5819, %rd5820;
	add.s64 	%rd5822, %rd5821, %rd5818;
	add.s64 	%rd5823, %rd5822, %rd5815;
	add.s64 	%rd5824, %rd5823, %rd5727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4434,%dummy}, %rd5808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4435}, %rd5808;
	}
	shf.r.wrap.b32 	%r4436, %r4435, %r4434, 28;
	shf.r.wrap.b32 	%r4437, %r4434, %r4435, 28;
	mov.b64 	%rd5825, {%r4437, %r4436};
	shf.l.wrap.b32 	%r4438, %r4434, %r4435, 30;
	shf.l.wrap.b32 	%r4439, %r4435, %r4434, 30;
	mov.b64 	%rd5826, {%r4439, %r4438};
	xor.b64  	%rd5827, %rd5826, %rd5825;
	shf.l.wrap.b32 	%r4440, %r4434, %r4435, 25;
	shf.l.wrap.b32 	%r4441, %r4435, %r4434, 25;
	mov.b64 	%rd5828, {%r4441, %r4440};
	xor.b64  	%rd5829, %rd5827, %rd5828;
	and.b64  	%rd5830, %rd5808, %rd5781;
	xor.b64  	%rd5831, %rd5808, %rd5781;
	and.b64  	%rd5832, %rd5831, %rd5754;
	or.b64  	%rd5833, %rd5832, %rd5830;
	add.s64 	%rd5834, %rd5823, %rd5833;
	add.s64 	%rd5835, %rd5834, %rd5829;
	add.s32 	%r4442, %r7647, 12;
	mul.wide.s32 	%rd5836, %r4442, 8;
	add.s64 	%rd5837, %rd5512, %rd5836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4443,%dummy}, %rd5824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4444}, %rd5824;
	}
	shf.r.wrap.b32 	%r4445, %r4444, %r4443, 14;
	shf.r.wrap.b32 	%r4446, %r4443, %r4444, 14;
	mov.b64 	%rd5838, {%r4446, %r4445};
	shf.r.wrap.b32 	%r4447, %r4444, %r4443, 18;
	shf.r.wrap.b32 	%r4448, %r4443, %r4444, 18;
	mov.b64 	%rd5839, {%r4448, %r4447};
	xor.b64  	%rd5840, %rd5839, %rd5838;
	shf.l.wrap.b32 	%r4449, %r4443, %r4444, 23;
	shf.l.wrap.b32 	%r4450, %r4444, %r4443, 23;
	mov.b64 	%rd5841, {%r4450, %r4449};
	xor.b64  	%rd5842, %rd5840, %rd5841;
	xor.b64  	%rd5843, %rd5797, %rd5770;
	and.b64  	%rd5844, %rd5824, %rd5843;
	xor.b64  	%rd5845, %rd5844, %rd5770;
	add.s64 	%rd5846, %rd5743, %rd10174;
	ld.const.u64 	%rd5847, [%rd5837];
	add.s64 	%rd5848, %rd5846, %rd5847;
	add.s64 	%rd5849, %rd5848, %rd5845;
	add.s64 	%rd5850, %rd5849, %rd5842;
	add.s64 	%rd10186, %rd5850, %rd5754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4451,%dummy}, %rd5835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4452}, %rd5835;
	}
	shf.r.wrap.b32 	%r4453, %r4452, %r4451, 28;
	shf.r.wrap.b32 	%r4454, %r4451, %r4452, 28;
	mov.b64 	%rd5851, {%r4454, %r4453};
	shf.l.wrap.b32 	%r4455, %r4451, %r4452, 30;
	shf.l.wrap.b32 	%r4456, %r4452, %r4451, 30;
	mov.b64 	%rd5852, {%r4456, %r4455};
	xor.b64  	%rd5853, %rd5852, %rd5851;
	shf.l.wrap.b32 	%r4457, %r4451, %r4452, 25;
	shf.l.wrap.b32 	%r4458, %r4452, %r4451, 25;
	mov.b64 	%rd5854, {%r4458, %r4457};
	xor.b64  	%rd5855, %rd5853, %rd5854;
	and.b64  	%rd5856, %rd5835, %rd5808;
	xor.b64  	%rd5857, %rd5835, %rd5808;
	and.b64  	%rd5858, %rd5857, %rd5781;
	or.b64  	%rd5859, %rd5858, %rd5856;
	add.s64 	%rd5860, %rd5850, %rd5859;
	add.s64 	%rd10182, %rd5860, %rd5855;
	add.s32 	%r4459, %r7647, 13;
	mul.wide.s32 	%rd5861, %r4459, 8;
	add.s64 	%rd5862, %rd5512, %rd5861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4460,%dummy}, %rd10186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4461}, %rd10186;
	}
	shf.r.wrap.b32 	%r4462, %r4461, %r4460, 14;
	shf.r.wrap.b32 	%r4463, %r4460, %r4461, 14;
	mov.b64 	%rd5863, {%r4463, %r4462};
	shf.r.wrap.b32 	%r4464, %r4461, %r4460, 18;
	shf.r.wrap.b32 	%r4465, %r4460, %r4461, 18;
	mov.b64 	%rd5864, {%r4465, %r4464};
	xor.b64  	%rd5865, %rd5864, %rd5863;
	shf.l.wrap.b32 	%r4466, %r4460, %r4461, 23;
	shf.l.wrap.b32 	%r4467, %r4461, %r4460, 23;
	mov.b64 	%rd5866, {%r4467, %r4466};
	xor.b64  	%rd5867, %rd5865, %rd5866;
	xor.b64  	%rd5868, %rd5824, %rd5797;
	and.b64  	%rd5869, %rd10186, %rd5868;
	xor.b64  	%rd5870, %rd5869, %rd5797;
	add.s64 	%rd5871, %rd5770, %rd10173;
	ld.const.u64 	%rd5872, [%rd5862];
	add.s64 	%rd5873, %rd5871, %rd5872;
	add.s64 	%rd5874, %rd5873, %rd5870;
	add.s64 	%rd5875, %rd5874, %rd5867;
	add.s64 	%rd10185, %rd5875, %rd5781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4468,%dummy}, %rd10182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4469}, %rd10182;
	}
	shf.r.wrap.b32 	%r4470, %r4469, %r4468, 28;
	shf.r.wrap.b32 	%r4471, %r4468, %r4469, 28;
	mov.b64 	%rd5876, {%r4471, %r4470};
	shf.l.wrap.b32 	%r4472, %r4468, %r4469, 30;
	shf.l.wrap.b32 	%r4473, %r4469, %r4468, 30;
	mov.b64 	%rd5877, {%r4473, %r4472};
	xor.b64  	%rd5878, %rd5877, %rd5876;
	shf.l.wrap.b32 	%r4474, %r4468, %r4469, 25;
	shf.l.wrap.b32 	%r4475, %r4469, %r4468, 25;
	mov.b64 	%rd5879, {%r4475, %r4474};
	xor.b64  	%rd5880, %rd5878, %rd5879;
	and.b64  	%rd5881, %rd10182, %rd5835;
	xor.b64  	%rd5882, %rd10182, %rd5835;
	and.b64  	%rd5883, %rd5882, %rd5808;
	or.b64  	%rd5884, %rd5883, %rd5881;
	add.s64 	%rd5885, %rd5875, %rd5884;
	add.s64 	%rd10181, %rd5885, %rd5880;
	add.s32 	%r4476, %r7647, 14;
	mul.wide.s32 	%rd5886, %r4476, 8;
	add.s64 	%rd5887, %rd5512, %rd5886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4477,%dummy}, %rd10185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4478}, %rd10185;
	}
	shf.r.wrap.b32 	%r4479, %r4478, %r4477, 14;
	shf.r.wrap.b32 	%r4480, %r4477, %r4478, 14;
	mov.b64 	%rd5888, {%r4480, %r4479};
	shf.r.wrap.b32 	%r4481, %r4478, %r4477, 18;
	shf.r.wrap.b32 	%r4482, %r4477, %r4478, 18;
	mov.b64 	%rd5889, {%r4482, %r4481};
	xor.b64  	%rd5890, %rd5889, %rd5888;
	shf.l.wrap.b32 	%r4483, %r4477, %r4478, 23;
	shf.l.wrap.b32 	%r4484, %r4478, %r4477, 23;
	mov.b64 	%rd5891, {%r4484, %r4483};
	xor.b64  	%rd5892, %rd5890, %rd5891;
	xor.b64  	%rd5893, %rd10186, %rd5824;
	and.b64  	%rd5894, %rd10185, %rd5893;
	xor.b64  	%rd5895, %rd5894, %rd5824;
	add.s64 	%rd5896, %rd5797, %rd10172;
	ld.const.u64 	%rd5897, [%rd5887];
	add.s64 	%rd5898, %rd5896, %rd5897;
	add.s64 	%rd5899, %rd5898, %rd5895;
	add.s64 	%rd5900, %rd5899, %rd5892;
	add.s64 	%rd10184, %rd5900, %rd5808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4485,%dummy}, %rd10181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4486}, %rd10181;
	}
	shf.r.wrap.b32 	%r4487, %r4486, %r4485, 28;
	shf.r.wrap.b32 	%r4488, %r4485, %r4486, 28;
	mov.b64 	%rd5901, {%r4488, %r4487};
	shf.l.wrap.b32 	%r4489, %r4485, %r4486, 30;
	shf.l.wrap.b32 	%r4490, %r4486, %r4485, 30;
	mov.b64 	%rd5902, {%r4490, %r4489};
	xor.b64  	%rd5903, %rd5902, %rd5901;
	shf.l.wrap.b32 	%r4491, %r4485, %r4486, 25;
	shf.l.wrap.b32 	%r4492, %r4486, %r4485, 25;
	mov.b64 	%rd5904, {%r4492, %r4491};
	xor.b64  	%rd5905, %rd5903, %rd5904;
	and.b64  	%rd5906, %rd10181, %rd10182;
	xor.b64  	%rd5907, %rd10181, %rd10182;
	and.b64  	%rd5908, %rd5907, %rd5835;
	or.b64  	%rd5909, %rd5908, %rd5906;
	add.s64 	%rd5910, %rd5900, %rd5909;
	add.s64 	%rd10180, %rd5910, %rd5905;
	add.s32 	%r4493, %r7647, 15;
	mul.wide.s32 	%rd5911, %r4493, 8;
	add.s64 	%rd5912, %rd5512, %rd5911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4494,%dummy}, %rd10184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4495}, %rd10184;
	}
	shf.r.wrap.b32 	%r4496, %r4495, %r4494, 14;
	shf.r.wrap.b32 	%r4497, %r4494, %r4495, 14;
	mov.b64 	%rd5913, {%r4497, %r4496};
	shf.r.wrap.b32 	%r4498, %r4495, %r4494, 18;
	shf.r.wrap.b32 	%r4499, %r4494, %r4495, 18;
	mov.b64 	%rd5914, {%r4499, %r4498};
	xor.b64  	%rd5915, %rd5914, %rd5913;
	shf.l.wrap.b32 	%r4500, %r4494, %r4495, 23;
	shf.l.wrap.b32 	%r4501, %r4495, %r4494, 23;
	mov.b64 	%rd5916, {%r4501, %r4500};
	xor.b64  	%rd5917, %rd5915, %rd5916;
	xor.b64  	%rd5918, %rd10185, %rd10186;
	and.b64  	%rd5919, %rd10184, %rd5918;
	xor.b64  	%rd5920, %rd5919, %rd10186;
	add.s64 	%rd5921, %rd5824, %rd10171;
	ld.const.u64 	%rd5922, [%rd5912];
	add.s64 	%rd5923, %rd5921, %rd5922;
	add.s64 	%rd5924, %rd5923, %rd5920;
	add.s64 	%rd5925, %rd5924, %rd5917;
	add.s64 	%rd10183, %rd5925, %rd5835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4502,%dummy}, %rd10180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4503}, %rd10180;
	}
	shf.r.wrap.b32 	%r4504, %r4503, %r4502, 28;
	shf.r.wrap.b32 	%r4505, %r4502, %r4503, 28;
	mov.b64 	%rd5926, {%r4505, %r4504};
	shf.l.wrap.b32 	%r4506, %r4502, %r4503, 30;
	shf.l.wrap.b32 	%r4507, %r4503, %r4502, 30;
	mov.b64 	%rd5927, {%r4507, %r4506};
	xor.b64  	%rd5928, %rd5927, %rd5926;
	shf.l.wrap.b32 	%r4508, %r4502, %r4503, 25;
	shf.l.wrap.b32 	%r4509, %r4503, %r4502, 25;
	mov.b64 	%rd5929, {%r4509, %r4508};
	xor.b64  	%rd5930, %rd5928, %rd5929;
	and.b64  	%rd5931, %rd10180, %rd10181;
	xor.b64  	%rd5932, %rd10180, %rd10181;
	and.b64  	%rd5933, %rd5932, %rd10182;
	or.b64  	%rd5934, %rd5933, %rd5931;
	add.s64 	%rd5935, %rd5925, %rd5934;
	add.s64 	%rd10179, %rd5935, %rd5930;
	add.s32 	%r7647, %r7647, 16;
	setp.lt.s32	%p48, %r7647, 80;
	@%p48 bra 	BB3_22;

	add.u64 	%rd9917, %SPL, 528;
	add.s64 	%rd10202, %rd10202, %rd10179;
	st.local.u64 	[%rd9917], %rd10202;
	add.s64 	%rd10201, %rd10201, %rd10180;
	st.local.u64 	[%rd9917+8], %rd10201;
	add.s64 	%rd10200, %rd10200, %rd10181;
	st.local.u64 	[%rd9917+16], %rd10200;
	add.s64 	%rd10199, %rd10199, %rd10182;
	st.local.u64 	[%rd9917+24], %rd10199;
	add.s64 	%rd10198, %rd10198, %rd10183;
	st.local.u64 	[%rd9917+32], %rd10198;
	add.s64 	%rd10197, %rd10197, %rd10184;
	st.local.u64 	[%rd9917+40], %rd10197;
	add.s64 	%rd10196, %rd10196, %rd10185;
	st.local.u64 	[%rd9917+48], %rd10196;
	add.s64 	%rd10195, %rd10195, %rd10186;
	st.local.u64 	[%rd9917+56], %rd10195;
	mov.u32 	%r7648, 0;
	st.local.v2.u32 	[%rd9917+64], {%r7648, %r7648};
	st.local.v2.u32 	[%rd9917+72], {%r7648, %r7648};
	st.local.v2.u32 	[%rd9917+80], {%r7648, %r7648};
	st.local.v2.u32 	[%rd9917+88], {%r7648, %r7648};
	st.local.v2.u32 	[%rd9917+96], {%r7648, %r7648};
	st.local.v2.u32 	[%rd9917+104], {%r7648, %r7648};
	st.local.v2.u32 	[%rd9917+112], {%r7648, %r7648};
	st.local.v2.u32 	[%rd9917+120], {%r7648, %r7648};
	st.local.v2.u32 	[%rd9917+128], {%r7648, %r7648};
	st.local.v2.u32 	[%rd9917+136], {%r7648, %r7648};
	st.local.v2.u32 	[%rd9917+144], {%r7648, %r7648};
	st.local.v2.u32 	[%rd9917+152], {%r7648, %r7648};
	st.local.v2.u32 	[%rd9917+160], {%r7648, %r7648};
	st.local.v2.u32 	[%rd9917+168], {%r7648, %r7648};
	st.local.v2.u32 	[%rd9917+176], {%r7648, %r7648};
	st.local.v2.u32 	[%rd9917+184], {%r7648, %r7648};
	mov.u32 	%r7649, %r7648;
	mov.u32 	%r7650, %r7648;
	mov.u32 	%r7651, %r7648;
	mov.u32 	%r7652, %r7648;
	mov.u32 	%r7653, %r7648;
	mov.u32 	%r7654, %r7648;
	mov.u32 	%r7655, %r7648;
	mov.u32 	%r7656, %r7648;
	mov.u32 	%r7657, %r7648;
	mov.u32 	%r7658, %r7648;
	mov.u32 	%r7659, %r7648;
	mov.u32 	%r7660, %r7648;
	mov.u32 	%r7661, %r7648;
	mov.u32 	%r7662, %r7648;
	mov.u32 	%r7663, %r7648;
	mov.u32 	%r7664, %r7648;
	mov.u32 	%r7665, %r7648;
	mov.u32 	%r7666, %r7648;
	mov.u32 	%r7667, %r7648;
	mov.u32 	%r7668, %r7648;
	mov.u32 	%r7669, %r7648;
	mov.u32 	%r7670, %r7648;
	mov.u32 	%r7671, %r7648;
	mov.u32 	%r7672, %r7648;
	mov.u32 	%r7673, %r7648;
	mov.u32 	%r7674, %r7648;
	mov.u32 	%r7675, %r7648;
	mov.u32 	%r7676, %r7648;
	mov.u32 	%r7677, %r7648;

BB3_24:
	mov.u32 	%r7535, 0;
	add.u64 	%rd9919, %SPL, 528;
	shl.b32 	%r4541, %r255, 3;
	st.local.v2.u32 	[%rd9919+184], {%r7535, %r4541};
	mov.b64	%rd10219, {%r7676, %r7677};
	mov.b64	%rd10220, {%r7674, %r7675};
	mov.b64	%rd10221, {%r7672, %r7673};
	mov.b64	%rd10222, {%r7670, %r7671};
	mov.b64	%rd10223, {%r7668, %r7669};
	mov.b64	%rd10224, {%r7666, %r7667};
	mov.b64	%rd10225, {%r7664, %r7665};
	mov.b64	%rd10226, {%r7662, %r7663};
	mov.b64	%rd10210, {%r7660, %r7661};
	mov.b64	%rd10209, {%r7658, %r7659};
	mov.b64	%rd10208, {%r7656, %r7657};
	mov.b64	%rd10207, {%r7654, %r7655};
	mov.b64	%rd10206, {%r7652, %r7653};
	mov.b64	%rd10205, {%r7650, %r7651};
	mov.b64	%rd10204, {%r7648, %r7649};
	mov.b64	%rd10203, {%r4541, %r7535};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4543,%dummy}, %rd10198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4544}, %rd10198;
	}
	shf.r.wrap.b32 	%r4545, %r4544, %r4543, 18;
	shf.r.wrap.b32 	%r4546, %r4543, %r4544, 18;
	mov.b64 	%rd5936, {%r4546, %r4545};
	shf.r.wrap.b32 	%r4547, %r4544, %r4543, 14;
	shf.r.wrap.b32 	%r4548, %r4543, %r4544, 14;
	mov.b64 	%rd5937, {%r4548, %r4547};
	xor.b64  	%rd5938, %rd5936, %rd5937;
	shf.l.wrap.b32 	%r4549, %r4543, %r4544, 23;
	shf.l.wrap.b32 	%r4550, %r4544, %r4543, 23;
	mov.b64 	%rd5939, {%r4550, %r4549};
	xor.b64  	%rd5940, %rd5938, %rd5939;
	xor.b64  	%rd5941, %rd10196, %rd10197;
	and.b64  	%rd5942, %rd5941, %rd10198;
	xor.b64  	%rd5943, %rd5942, %rd10196;
	add.s64 	%rd5944, %rd5943, %rd10195;
	add.s64 	%rd5945, %rd5944, %rd10219;
	add.s64 	%rd5946, %rd5945, %rd10144;
	add.s64 	%rd5947, %rd5946, %rd5940;
	add.s64 	%rd5948, %rd5947, %rd10199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4551}, %rd10202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4552,%dummy}, %rd10202;
	}
	shf.l.wrap.b32 	%r4553, %r4552, %r4551, 30;
	shf.l.wrap.b32 	%r4554, %r4551, %r4552, 30;
	mov.b64 	%rd5949, {%r4554, %r4553};
	shf.r.wrap.b32 	%r4555, %r4551, %r4552, 28;
	shf.r.wrap.b32 	%r4556, %r4552, %r4551, 28;
	mov.b64 	%rd5950, {%r4556, %r4555};
	xor.b64  	%rd5951, %rd5949, %rd5950;
	shf.l.wrap.b32 	%r4557, %r4552, %r4551, 25;
	shf.l.wrap.b32 	%r4558, %r4551, %r4552, 25;
	mov.b64 	%rd5952, {%r4558, %r4557};
	xor.b64  	%rd5953, %rd5951, %rd5952;
	xor.b64  	%rd5954, %rd10201, %rd10202;
	and.b64  	%rd5955, %rd10200, %rd5954;
	and.b64  	%rd5956, %rd10201, %rd10202;
	or.b64  	%rd5957, %rd5955, %rd5956;
	add.s64 	%rd5958, %rd5947, %rd5957;
	add.s64 	%rd5959, %rd5958, %rd5953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4559,%dummy}, %rd5948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4560}, %rd5948;
	}
	shf.r.wrap.b32 	%r4561, %r4560, %r4559, 14;
	shf.r.wrap.b32 	%r4562, %r4559, %r4560, 14;
	mov.b64 	%rd5960, {%r4562, %r4561};
	shf.r.wrap.b32 	%r4563, %r4560, %r4559, 18;
	shf.r.wrap.b32 	%r4564, %r4559, %r4560, 18;
	mov.b64 	%rd5961, {%r4564, %r4563};
	xor.b64  	%rd5962, %rd5961, %rd5960;
	shf.l.wrap.b32 	%r4565, %r4559, %r4560, 23;
	shf.l.wrap.b32 	%r4566, %r4560, %r4559, 23;
	mov.b64 	%rd5963, {%r4566, %r4565};
	xor.b64  	%rd5964, %rd5962, %rd5963;
	xor.b64  	%rd5965, %rd10197, %rd10198;
	and.b64  	%rd5966, %rd5948, %rd5965;
	xor.b64  	%rd5967, %rd5966, %rd10197;
	add.s64 	%rd5968, %rd10220, %rd10196;
	add.s64 	%rd5969, %rd5968, %rd10143;
	add.s64 	%rd5970, %rd5969, %rd5967;
	add.s64 	%rd5971, %rd5970, %rd5964;
	add.s64 	%rd5972, %rd5971, %rd10200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4567,%dummy}, %rd5959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4568}, %rd5959;
	}
	shf.r.wrap.b32 	%r4569, %r4568, %r4567, 28;
	shf.r.wrap.b32 	%r4570, %r4567, %r4568, 28;
	mov.b64 	%rd5973, {%r4570, %r4569};
	shf.l.wrap.b32 	%r4571, %r4567, %r4568, 30;
	shf.l.wrap.b32 	%r4572, %r4568, %r4567, 30;
	mov.b64 	%rd5974, {%r4572, %r4571};
	xor.b64  	%rd5975, %rd5974, %rd5973;
	shf.l.wrap.b32 	%r4573, %r4567, %r4568, 25;
	shf.l.wrap.b32 	%r4574, %r4568, %r4567, 25;
	mov.b64 	%rd5976, {%r4574, %r4573};
	xor.b64  	%rd5977, %rd5975, %rd5976;
	and.b64  	%rd5978, %rd5959, %rd10202;
	xor.b64  	%rd5979, %rd5959, %rd10202;
	and.b64  	%rd5980, %rd5979, %rd10201;
	or.b64  	%rd5981, %rd5980, %rd5978;
	add.s64 	%rd5982, %rd5971, %rd5981;
	add.s64 	%rd5983, %rd5982, %rd5977;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4575,%dummy}, %rd5972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4576}, %rd5972;
	}
	shf.r.wrap.b32 	%r4577, %r4576, %r4575, 14;
	shf.r.wrap.b32 	%r4578, %r4575, %r4576, 14;
	mov.b64 	%rd5984, {%r4578, %r4577};
	shf.r.wrap.b32 	%r4579, %r4576, %r4575, 18;
	shf.r.wrap.b32 	%r4580, %r4575, %r4576, 18;
	mov.b64 	%rd5985, {%r4580, %r4579};
	xor.b64  	%rd5986, %rd5985, %rd5984;
	shf.l.wrap.b32 	%r4581, %r4575, %r4576, 23;
	shf.l.wrap.b32 	%r4582, %r4576, %r4575, 23;
	mov.b64 	%rd5987, {%r4582, %r4581};
	xor.b64  	%rd5988, %rd5986, %rd5987;
	xor.b64  	%rd5989, %rd5948, %rd10198;
	and.b64  	%rd5990, %rd5972, %rd5989;
	xor.b64  	%rd5991, %rd5990, %rd10198;
	add.s64 	%rd5992, %rd10221, %rd10197;
	add.s64 	%rd5993, %rd5992, %rd10142;
	add.s64 	%rd5994, %rd5993, %rd5991;
	add.s64 	%rd5995, %rd5994, %rd5988;
	add.s64 	%rd5996, %rd5995, %rd10201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4583,%dummy}, %rd5983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4584}, %rd5983;
	}
	shf.r.wrap.b32 	%r4585, %r4584, %r4583, 28;
	shf.r.wrap.b32 	%r4586, %r4583, %r4584, 28;
	mov.b64 	%rd5997, {%r4586, %r4585};
	shf.l.wrap.b32 	%r4587, %r4583, %r4584, 30;
	shf.l.wrap.b32 	%r4588, %r4584, %r4583, 30;
	mov.b64 	%rd5998, {%r4588, %r4587};
	xor.b64  	%rd5999, %rd5998, %rd5997;
	shf.l.wrap.b32 	%r4589, %r4583, %r4584, 25;
	shf.l.wrap.b32 	%r4590, %r4584, %r4583, 25;
	mov.b64 	%rd6000, {%r4590, %r4589};
	xor.b64  	%rd6001, %rd5999, %rd6000;
	and.b64  	%rd6002, %rd5983, %rd5959;
	xor.b64  	%rd6003, %rd5983, %rd5959;
	and.b64  	%rd6004, %rd6003, %rd10202;
	or.b64  	%rd6005, %rd6004, %rd6002;
	add.s64 	%rd6006, %rd5995, %rd6005;
	add.s64 	%rd6007, %rd6006, %rd6001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4591,%dummy}, %rd5996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4592}, %rd5996;
	}
	shf.r.wrap.b32 	%r4593, %r4592, %r4591, 14;
	shf.r.wrap.b32 	%r4594, %r4591, %r4592, 14;
	mov.b64 	%rd6008, {%r4594, %r4593};
	shf.r.wrap.b32 	%r4595, %r4592, %r4591, 18;
	shf.r.wrap.b32 	%r4596, %r4591, %r4592, 18;
	mov.b64 	%rd6009, {%r4596, %r4595};
	xor.b64  	%rd6010, %rd6009, %rd6008;
	shf.l.wrap.b32 	%r4597, %r4591, %r4592, 23;
	shf.l.wrap.b32 	%r4598, %r4592, %r4591, 23;
	mov.b64 	%rd6011, {%r4598, %r4597};
	xor.b64  	%rd6012, %rd6010, %rd6011;
	xor.b64  	%rd6013, %rd5972, %rd5948;
	and.b64  	%rd6014, %rd5996, %rd6013;
	xor.b64  	%rd6015, %rd6014, %rd5948;
	add.s64 	%rd6016, %rd10222, %rd10198;
	add.s64 	%rd6017, %rd6016, %rd10141;
	add.s64 	%rd6018, %rd6017, %rd6015;
	add.s64 	%rd6019, %rd6018, %rd6012;
	add.s64 	%rd6020, %rd6019, %rd10202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4599,%dummy}, %rd6007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4600}, %rd6007;
	}
	shf.r.wrap.b32 	%r4601, %r4600, %r4599, 28;
	shf.r.wrap.b32 	%r4602, %r4599, %r4600, 28;
	mov.b64 	%rd6021, {%r4602, %r4601};
	shf.l.wrap.b32 	%r4603, %r4599, %r4600, 30;
	shf.l.wrap.b32 	%r4604, %r4600, %r4599, 30;
	mov.b64 	%rd6022, {%r4604, %r4603};
	xor.b64  	%rd6023, %rd6022, %rd6021;
	shf.l.wrap.b32 	%r4605, %r4599, %r4600, 25;
	shf.l.wrap.b32 	%r4606, %r4600, %r4599, 25;
	mov.b64 	%rd6024, {%r4606, %r4605};
	xor.b64  	%rd6025, %rd6023, %rd6024;
	and.b64  	%rd6026, %rd6007, %rd5983;
	xor.b64  	%rd6027, %rd6007, %rd5983;
	and.b64  	%rd6028, %rd6027, %rd5959;
	or.b64  	%rd6029, %rd6028, %rd6026;
	add.s64 	%rd6030, %rd6019, %rd6029;
	add.s64 	%rd6031, %rd6030, %rd6025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4607,%dummy}, %rd6020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4608}, %rd6020;
	}
	shf.r.wrap.b32 	%r4609, %r4608, %r4607, 14;
	shf.r.wrap.b32 	%r4610, %r4607, %r4608, 14;
	mov.b64 	%rd6032, {%r4610, %r4609};
	shf.r.wrap.b32 	%r4611, %r4608, %r4607, 18;
	shf.r.wrap.b32 	%r4612, %r4607, %r4608, 18;
	mov.b64 	%rd6033, {%r4612, %r4611};
	xor.b64  	%rd6034, %rd6033, %rd6032;
	shf.l.wrap.b32 	%r4613, %r4607, %r4608, 23;
	shf.l.wrap.b32 	%r4614, %r4608, %r4607, 23;
	mov.b64 	%rd6035, {%r4614, %r4613};
	xor.b64  	%rd6036, %rd6034, %rd6035;
	xor.b64  	%rd6037, %rd5996, %rd5972;
	and.b64  	%rd6038, %rd6020, %rd6037;
	xor.b64  	%rd6039, %rd6038, %rd5972;
	add.s64 	%rd6040, %rd5948, %rd10223;
	add.s64 	%rd6041, %rd6040, %rd10140;
	add.s64 	%rd6042, %rd6041, %rd6039;
	add.s64 	%rd6043, %rd6042, %rd6036;
	add.s64 	%rd6044, %rd6043, %rd5959;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4615,%dummy}, %rd6031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4616}, %rd6031;
	}
	shf.r.wrap.b32 	%r4617, %r4616, %r4615, 28;
	shf.r.wrap.b32 	%r4618, %r4615, %r4616, 28;
	mov.b64 	%rd6045, {%r4618, %r4617};
	shf.l.wrap.b32 	%r4619, %r4615, %r4616, 30;
	shf.l.wrap.b32 	%r4620, %r4616, %r4615, 30;
	mov.b64 	%rd6046, {%r4620, %r4619};
	xor.b64  	%rd6047, %rd6046, %rd6045;
	shf.l.wrap.b32 	%r4621, %r4615, %r4616, 25;
	shf.l.wrap.b32 	%r4622, %r4616, %r4615, 25;
	mov.b64 	%rd6048, {%r4622, %r4621};
	xor.b64  	%rd6049, %rd6047, %rd6048;
	and.b64  	%rd6050, %rd6031, %rd6007;
	xor.b64  	%rd6051, %rd6031, %rd6007;
	and.b64  	%rd6052, %rd6051, %rd5983;
	or.b64  	%rd6053, %rd6052, %rd6050;
	add.s64 	%rd6054, %rd6043, %rd6053;
	add.s64 	%rd6055, %rd6054, %rd6049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4623,%dummy}, %rd6044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4624}, %rd6044;
	}
	shf.r.wrap.b32 	%r4625, %r4624, %r4623, 14;
	shf.r.wrap.b32 	%r4626, %r4623, %r4624, 14;
	mov.b64 	%rd6056, {%r4626, %r4625};
	shf.r.wrap.b32 	%r4627, %r4624, %r4623, 18;
	shf.r.wrap.b32 	%r4628, %r4623, %r4624, 18;
	mov.b64 	%rd6057, {%r4628, %r4627};
	xor.b64  	%rd6058, %rd6057, %rd6056;
	shf.l.wrap.b32 	%r4629, %r4623, %r4624, 23;
	shf.l.wrap.b32 	%r4630, %r4624, %r4623, 23;
	mov.b64 	%rd6059, {%r4630, %r4629};
	xor.b64  	%rd6060, %rd6058, %rd6059;
	xor.b64  	%rd6061, %rd6020, %rd5996;
	and.b64  	%rd6062, %rd6044, %rd6061;
	xor.b64  	%rd6063, %rd6062, %rd5996;
	add.s64 	%rd6064, %rd5972, %rd10224;
	add.s64 	%rd6065, %rd6064, %rd10139;
	add.s64 	%rd6066, %rd6065, %rd6063;
	add.s64 	%rd6067, %rd6066, %rd6060;
	add.s64 	%rd6068, %rd6067, %rd5983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4631,%dummy}, %rd6055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4632}, %rd6055;
	}
	shf.r.wrap.b32 	%r4633, %r4632, %r4631, 28;
	shf.r.wrap.b32 	%r4634, %r4631, %r4632, 28;
	mov.b64 	%rd6069, {%r4634, %r4633};
	shf.l.wrap.b32 	%r4635, %r4631, %r4632, 30;
	shf.l.wrap.b32 	%r4636, %r4632, %r4631, 30;
	mov.b64 	%rd6070, {%r4636, %r4635};
	xor.b64  	%rd6071, %rd6070, %rd6069;
	shf.l.wrap.b32 	%r4637, %r4631, %r4632, 25;
	shf.l.wrap.b32 	%r4638, %r4632, %r4631, 25;
	mov.b64 	%rd6072, {%r4638, %r4637};
	xor.b64  	%rd6073, %rd6071, %rd6072;
	and.b64  	%rd6074, %rd6055, %rd6031;
	xor.b64  	%rd6075, %rd6055, %rd6031;
	and.b64  	%rd6076, %rd6075, %rd6007;
	or.b64  	%rd6077, %rd6076, %rd6074;
	add.s64 	%rd6078, %rd6067, %rd6077;
	add.s64 	%rd6079, %rd6078, %rd6073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4639,%dummy}, %rd6068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4640}, %rd6068;
	}
	shf.r.wrap.b32 	%r4641, %r4640, %r4639, 14;
	shf.r.wrap.b32 	%r4642, %r4639, %r4640, 14;
	mov.b64 	%rd6080, {%r4642, %r4641};
	shf.r.wrap.b32 	%r4643, %r4640, %r4639, 18;
	shf.r.wrap.b32 	%r4644, %r4639, %r4640, 18;
	mov.b64 	%rd6081, {%r4644, %r4643};
	xor.b64  	%rd6082, %rd6081, %rd6080;
	shf.l.wrap.b32 	%r4645, %r4639, %r4640, 23;
	shf.l.wrap.b32 	%r4646, %r4640, %r4639, 23;
	mov.b64 	%rd6083, {%r4646, %r4645};
	xor.b64  	%rd6084, %rd6082, %rd6083;
	xor.b64  	%rd6085, %rd6044, %rd6020;
	and.b64  	%rd6086, %rd6068, %rd6085;
	xor.b64  	%rd6087, %rd6086, %rd6020;
	add.s64 	%rd6088, %rd5996, %rd10225;
	add.s64 	%rd6089, %rd6088, %rd10138;
	add.s64 	%rd6090, %rd6089, %rd6087;
	add.s64 	%rd6091, %rd6090, %rd6084;
	add.s64 	%rd6092, %rd6091, %rd6007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4647,%dummy}, %rd6079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4648}, %rd6079;
	}
	shf.r.wrap.b32 	%r4649, %r4648, %r4647, 28;
	shf.r.wrap.b32 	%r4650, %r4647, %r4648, 28;
	mov.b64 	%rd6093, {%r4650, %r4649};
	shf.l.wrap.b32 	%r4651, %r4647, %r4648, 30;
	shf.l.wrap.b32 	%r4652, %r4648, %r4647, 30;
	mov.b64 	%rd6094, {%r4652, %r4651};
	xor.b64  	%rd6095, %rd6094, %rd6093;
	shf.l.wrap.b32 	%r4653, %r4647, %r4648, 25;
	shf.l.wrap.b32 	%r4654, %r4648, %r4647, 25;
	mov.b64 	%rd6096, {%r4654, %r4653};
	xor.b64  	%rd6097, %rd6095, %rd6096;
	and.b64  	%rd6098, %rd6079, %rd6055;
	xor.b64  	%rd6099, %rd6079, %rd6055;
	and.b64  	%rd6100, %rd6099, %rd6031;
	or.b64  	%rd6101, %rd6100, %rd6098;
	add.s64 	%rd6102, %rd6091, %rd6101;
	add.s64 	%rd6103, %rd6102, %rd6097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4655,%dummy}, %rd6092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4656}, %rd6092;
	}
	shf.r.wrap.b32 	%r4657, %r4656, %r4655, 14;
	shf.r.wrap.b32 	%r4658, %r4655, %r4656, 14;
	mov.b64 	%rd6104, {%r4658, %r4657};
	shf.r.wrap.b32 	%r4659, %r4656, %r4655, 18;
	shf.r.wrap.b32 	%r4660, %r4655, %r4656, 18;
	mov.b64 	%rd6105, {%r4660, %r4659};
	xor.b64  	%rd6106, %rd6105, %rd6104;
	shf.l.wrap.b32 	%r4661, %r4655, %r4656, 23;
	shf.l.wrap.b32 	%r4662, %r4656, %r4655, 23;
	mov.b64 	%rd6107, {%r4662, %r4661};
	xor.b64  	%rd6108, %rd6106, %rd6107;
	xor.b64  	%rd6109, %rd6068, %rd6044;
	and.b64  	%rd6110, %rd6092, %rd6109;
	xor.b64  	%rd6111, %rd6110, %rd6044;
	add.s64 	%rd6112, %rd6020, %rd10226;
	add.s64 	%rd6113, %rd6112, %rd10137;
	add.s64 	%rd6114, %rd6113, %rd6111;
	add.s64 	%rd6115, %rd6114, %rd6108;
	add.s64 	%rd6116, %rd6115, %rd6031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4663,%dummy}, %rd6103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4664}, %rd6103;
	}
	shf.r.wrap.b32 	%r4665, %r4664, %r4663, 28;
	shf.r.wrap.b32 	%r4666, %r4663, %r4664, 28;
	mov.b64 	%rd6117, {%r4666, %r4665};
	shf.l.wrap.b32 	%r4667, %r4663, %r4664, 30;
	shf.l.wrap.b32 	%r4668, %r4664, %r4663, 30;
	mov.b64 	%rd6118, {%r4668, %r4667};
	xor.b64  	%rd6119, %rd6118, %rd6117;
	shf.l.wrap.b32 	%r4669, %r4663, %r4664, 25;
	shf.l.wrap.b32 	%r4670, %r4664, %r4663, 25;
	mov.b64 	%rd6120, {%r4670, %r4669};
	xor.b64  	%rd6121, %rd6119, %rd6120;
	and.b64  	%rd6122, %rd6103, %rd6079;
	xor.b64  	%rd6123, %rd6103, %rd6079;
	and.b64  	%rd6124, %rd6123, %rd6055;
	or.b64  	%rd6125, %rd6124, %rd6122;
	add.s64 	%rd6126, %rd6115, %rd6125;
	add.s64 	%rd6127, %rd6126, %rd6121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4671,%dummy}, %rd6116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4672}, %rd6116;
	}
	shf.r.wrap.b32 	%r4673, %r4672, %r4671, 14;
	shf.r.wrap.b32 	%r4674, %r4671, %r4672, 14;
	mov.b64 	%rd6128, {%r4674, %r4673};
	shf.r.wrap.b32 	%r4675, %r4672, %r4671, 18;
	shf.r.wrap.b32 	%r4676, %r4671, %r4672, 18;
	mov.b64 	%rd6129, {%r4676, %r4675};
	xor.b64  	%rd6130, %rd6129, %rd6128;
	shf.l.wrap.b32 	%r4677, %r4671, %r4672, 23;
	shf.l.wrap.b32 	%r4678, %r4672, %r4671, 23;
	mov.b64 	%rd6131, {%r4678, %r4677};
	xor.b64  	%rd6132, %rd6130, %rd6131;
	xor.b64  	%rd6133, %rd6092, %rd6068;
	and.b64  	%rd6134, %rd6116, %rd6133;
	xor.b64  	%rd6135, %rd6134, %rd6068;
	add.s64 	%rd6136, %rd6044, %rd10210;
	add.s64 	%rd6137, %rd6136, %rd10136;
	add.s64 	%rd6138, %rd6137, %rd6135;
	add.s64 	%rd6139, %rd6138, %rd6132;
	add.s64 	%rd6140, %rd6139, %rd6055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4679,%dummy}, %rd6127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4680}, %rd6127;
	}
	shf.r.wrap.b32 	%r4681, %r4680, %r4679, 28;
	shf.r.wrap.b32 	%r4682, %r4679, %r4680, 28;
	mov.b64 	%rd6141, {%r4682, %r4681};
	shf.l.wrap.b32 	%r4683, %r4679, %r4680, 30;
	shf.l.wrap.b32 	%r4684, %r4680, %r4679, 30;
	mov.b64 	%rd6142, {%r4684, %r4683};
	xor.b64  	%rd6143, %rd6142, %rd6141;
	shf.l.wrap.b32 	%r4685, %r4679, %r4680, 25;
	shf.l.wrap.b32 	%r4686, %r4680, %r4679, 25;
	mov.b64 	%rd6144, {%r4686, %r4685};
	xor.b64  	%rd6145, %rd6143, %rd6144;
	and.b64  	%rd6146, %rd6127, %rd6103;
	xor.b64  	%rd6147, %rd6127, %rd6103;
	and.b64  	%rd6148, %rd6147, %rd6079;
	or.b64  	%rd6149, %rd6148, %rd6146;
	add.s64 	%rd6150, %rd6139, %rd6149;
	add.s64 	%rd6151, %rd6150, %rd6145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4687,%dummy}, %rd6140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4688}, %rd6140;
	}
	shf.r.wrap.b32 	%r4689, %r4688, %r4687, 14;
	shf.r.wrap.b32 	%r4690, %r4687, %r4688, 14;
	mov.b64 	%rd6152, {%r4690, %r4689};
	shf.r.wrap.b32 	%r4691, %r4688, %r4687, 18;
	shf.r.wrap.b32 	%r4692, %r4687, %r4688, 18;
	mov.b64 	%rd6153, {%r4692, %r4691};
	xor.b64  	%rd6154, %rd6153, %rd6152;
	shf.l.wrap.b32 	%r4693, %r4687, %r4688, 23;
	shf.l.wrap.b32 	%r4694, %r4688, %r4687, 23;
	mov.b64 	%rd6155, {%r4694, %r4693};
	xor.b64  	%rd6156, %rd6154, %rd6155;
	xor.b64  	%rd6157, %rd6116, %rd6092;
	and.b64  	%rd6158, %rd6140, %rd6157;
	xor.b64  	%rd6159, %rd6158, %rd6092;
	add.s64 	%rd6160, %rd6068, %rd10209;
	add.s64 	%rd6161, %rd6160, %rd10135;
	add.s64 	%rd6162, %rd6161, %rd6159;
	add.s64 	%rd6163, %rd6162, %rd6156;
	add.s64 	%rd6164, %rd6163, %rd6079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4695,%dummy}, %rd6151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4696}, %rd6151;
	}
	shf.r.wrap.b32 	%r4697, %r4696, %r4695, 28;
	shf.r.wrap.b32 	%r4698, %r4695, %r4696, 28;
	mov.b64 	%rd6165, {%r4698, %r4697};
	shf.l.wrap.b32 	%r4699, %r4695, %r4696, 30;
	shf.l.wrap.b32 	%r4700, %r4696, %r4695, 30;
	mov.b64 	%rd6166, {%r4700, %r4699};
	xor.b64  	%rd6167, %rd6166, %rd6165;
	shf.l.wrap.b32 	%r4701, %r4695, %r4696, 25;
	shf.l.wrap.b32 	%r4702, %r4696, %r4695, 25;
	mov.b64 	%rd6168, {%r4702, %r4701};
	xor.b64  	%rd6169, %rd6167, %rd6168;
	and.b64  	%rd6170, %rd6151, %rd6127;
	xor.b64  	%rd6171, %rd6151, %rd6127;
	and.b64  	%rd6172, %rd6171, %rd6103;
	or.b64  	%rd6173, %rd6172, %rd6170;
	add.s64 	%rd6174, %rd6163, %rd6173;
	add.s64 	%rd6175, %rd6174, %rd6169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4703,%dummy}, %rd6164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4704}, %rd6164;
	}
	shf.r.wrap.b32 	%r4705, %r4704, %r4703, 14;
	shf.r.wrap.b32 	%r4706, %r4703, %r4704, 14;
	mov.b64 	%rd6176, {%r4706, %r4705};
	shf.r.wrap.b32 	%r4707, %r4704, %r4703, 18;
	shf.r.wrap.b32 	%r4708, %r4703, %r4704, 18;
	mov.b64 	%rd6177, {%r4708, %r4707};
	xor.b64  	%rd6178, %rd6177, %rd6176;
	shf.l.wrap.b32 	%r4709, %r4703, %r4704, 23;
	shf.l.wrap.b32 	%r4710, %r4704, %r4703, 23;
	mov.b64 	%rd6179, {%r4710, %r4709};
	xor.b64  	%rd6180, %rd6178, %rd6179;
	xor.b64  	%rd6181, %rd6140, %rd6116;
	and.b64  	%rd6182, %rd6164, %rd6181;
	xor.b64  	%rd6183, %rd6182, %rd6116;
	add.s64 	%rd6184, %rd6092, %rd10208;
	add.s64 	%rd6185, %rd6184, %rd10134;
	add.s64 	%rd6186, %rd6185, %rd6183;
	add.s64 	%rd6187, %rd6186, %rd6180;
	add.s64 	%rd6188, %rd6187, %rd6103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4711,%dummy}, %rd6175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4712}, %rd6175;
	}
	shf.r.wrap.b32 	%r4713, %r4712, %r4711, 28;
	shf.r.wrap.b32 	%r4714, %r4711, %r4712, 28;
	mov.b64 	%rd6189, {%r4714, %r4713};
	shf.l.wrap.b32 	%r4715, %r4711, %r4712, 30;
	shf.l.wrap.b32 	%r4716, %r4712, %r4711, 30;
	mov.b64 	%rd6190, {%r4716, %r4715};
	xor.b64  	%rd6191, %rd6190, %rd6189;
	shf.l.wrap.b32 	%r4717, %r4711, %r4712, 25;
	shf.l.wrap.b32 	%r4718, %r4712, %r4711, 25;
	mov.b64 	%rd6192, {%r4718, %r4717};
	xor.b64  	%rd6193, %rd6191, %rd6192;
	and.b64  	%rd6194, %rd6175, %rd6151;
	xor.b64  	%rd6195, %rd6175, %rd6151;
	and.b64  	%rd6196, %rd6195, %rd6127;
	or.b64  	%rd6197, %rd6196, %rd6194;
	add.s64 	%rd6198, %rd6187, %rd6197;
	add.s64 	%rd6199, %rd6198, %rd6193;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4719,%dummy}, %rd6188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4720}, %rd6188;
	}
	shf.r.wrap.b32 	%r4721, %r4720, %r4719, 14;
	shf.r.wrap.b32 	%r4722, %r4719, %r4720, 14;
	mov.b64 	%rd6200, {%r4722, %r4721};
	shf.r.wrap.b32 	%r4723, %r4720, %r4719, 18;
	shf.r.wrap.b32 	%r4724, %r4719, %r4720, 18;
	mov.b64 	%rd6201, {%r4724, %r4723};
	xor.b64  	%rd6202, %rd6201, %rd6200;
	shf.l.wrap.b32 	%r4725, %r4719, %r4720, 23;
	shf.l.wrap.b32 	%r4726, %r4720, %r4719, 23;
	mov.b64 	%rd6203, {%r4726, %r4725};
	xor.b64  	%rd6204, %rd6202, %rd6203;
	xor.b64  	%rd6205, %rd6164, %rd6140;
	and.b64  	%rd6206, %rd6188, %rd6205;
	xor.b64  	%rd6207, %rd6206, %rd6140;
	add.s64 	%rd6208, %rd6116, %rd10207;
	add.s64 	%rd6209, %rd6208, %rd10133;
	add.s64 	%rd6210, %rd6209, %rd6207;
	add.s64 	%rd6211, %rd6210, %rd6204;
	add.s64 	%rd6212, %rd6211, %rd6127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4727,%dummy}, %rd6199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4728}, %rd6199;
	}
	shf.r.wrap.b32 	%r4729, %r4728, %r4727, 28;
	shf.r.wrap.b32 	%r4730, %r4727, %r4728, 28;
	mov.b64 	%rd6213, {%r4730, %r4729};
	shf.l.wrap.b32 	%r4731, %r4727, %r4728, 30;
	shf.l.wrap.b32 	%r4732, %r4728, %r4727, 30;
	mov.b64 	%rd6214, {%r4732, %r4731};
	xor.b64  	%rd6215, %rd6214, %rd6213;
	shf.l.wrap.b32 	%r4733, %r4727, %r4728, 25;
	shf.l.wrap.b32 	%r4734, %r4728, %r4727, 25;
	mov.b64 	%rd6216, {%r4734, %r4733};
	xor.b64  	%rd6217, %rd6215, %rd6216;
	and.b64  	%rd6218, %rd6199, %rd6175;
	xor.b64  	%rd6219, %rd6199, %rd6175;
	and.b64  	%rd6220, %rd6219, %rd6151;
	or.b64  	%rd6221, %rd6220, %rd6218;
	add.s64 	%rd6222, %rd6211, %rd6221;
	add.s64 	%rd6223, %rd6222, %rd6217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4735,%dummy}, %rd6212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4736}, %rd6212;
	}
	shf.r.wrap.b32 	%r4737, %r4736, %r4735, 14;
	shf.r.wrap.b32 	%r4738, %r4735, %r4736, 14;
	mov.b64 	%rd6224, {%r4738, %r4737};
	shf.r.wrap.b32 	%r4739, %r4736, %r4735, 18;
	shf.r.wrap.b32 	%r4740, %r4735, %r4736, 18;
	mov.b64 	%rd6225, {%r4740, %r4739};
	xor.b64  	%rd6226, %rd6225, %rd6224;
	shf.l.wrap.b32 	%r4741, %r4735, %r4736, 23;
	shf.l.wrap.b32 	%r4742, %r4736, %r4735, 23;
	mov.b64 	%rd6227, {%r4742, %r4741};
	xor.b64  	%rd6228, %rd6226, %rd6227;
	xor.b64  	%rd6229, %rd6188, %rd6164;
	and.b64  	%rd6230, %rd6212, %rd6229;
	xor.b64  	%rd6231, %rd6230, %rd6164;
	add.s64 	%rd6232, %rd6140, %rd10206;
	add.s64 	%rd6233, %rd6232, %rd10132;
	add.s64 	%rd6234, %rd6233, %rd6231;
	add.s64 	%rd6235, %rd6234, %rd6228;
	add.s64 	%rd10218, %rd6235, %rd6151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4743,%dummy}, %rd6223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4744}, %rd6223;
	}
	shf.r.wrap.b32 	%r4745, %r4744, %r4743, 28;
	shf.r.wrap.b32 	%r4746, %r4743, %r4744, 28;
	mov.b64 	%rd6236, {%r4746, %r4745};
	shf.l.wrap.b32 	%r4747, %r4743, %r4744, 30;
	shf.l.wrap.b32 	%r4748, %r4744, %r4743, 30;
	mov.b64 	%rd6237, {%r4748, %r4747};
	xor.b64  	%rd6238, %rd6237, %rd6236;
	shf.l.wrap.b32 	%r4749, %r4743, %r4744, 25;
	shf.l.wrap.b32 	%r4750, %r4744, %r4743, 25;
	mov.b64 	%rd6239, {%r4750, %r4749};
	xor.b64  	%rd6240, %rd6238, %rd6239;
	and.b64  	%rd6241, %rd6223, %rd6199;
	xor.b64  	%rd6242, %rd6223, %rd6199;
	and.b64  	%rd6243, %rd6242, %rd6175;
	or.b64  	%rd6244, %rd6243, %rd6241;
	add.s64 	%rd6245, %rd6235, %rd6244;
	add.s64 	%rd10214, %rd6245, %rd6240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4751,%dummy}, %rd10218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4752}, %rd10218;
	}
	shf.r.wrap.b32 	%r4753, %r4752, %r4751, 14;
	shf.r.wrap.b32 	%r4754, %r4751, %r4752, 14;
	mov.b64 	%rd6246, {%r4754, %r4753};
	shf.r.wrap.b32 	%r4755, %r4752, %r4751, 18;
	shf.r.wrap.b32 	%r4756, %r4751, %r4752, 18;
	mov.b64 	%rd6247, {%r4756, %r4755};
	xor.b64  	%rd6248, %rd6247, %rd6246;
	shf.l.wrap.b32 	%r4757, %r4751, %r4752, 23;
	shf.l.wrap.b32 	%r4758, %r4752, %r4751, 23;
	mov.b64 	%rd6249, {%r4758, %r4757};
	xor.b64  	%rd6250, %rd6248, %rd6249;
	xor.b64  	%rd6251, %rd6212, %rd6188;
	and.b64  	%rd6252, %rd10218, %rd6251;
	xor.b64  	%rd6253, %rd6252, %rd6188;
	add.s64 	%rd6254, %rd6164, %rd10205;
	add.s64 	%rd6255, %rd6254, %rd10131;
	add.s64 	%rd6256, %rd6255, %rd6253;
	add.s64 	%rd6257, %rd6256, %rd6250;
	add.s64 	%rd10217, %rd6257, %rd6175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4759,%dummy}, %rd10214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4760}, %rd10214;
	}
	shf.r.wrap.b32 	%r4761, %r4760, %r4759, 28;
	shf.r.wrap.b32 	%r4762, %r4759, %r4760, 28;
	mov.b64 	%rd6258, {%r4762, %r4761};
	shf.l.wrap.b32 	%r4763, %r4759, %r4760, 30;
	shf.l.wrap.b32 	%r4764, %r4760, %r4759, 30;
	mov.b64 	%rd6259, {%r4764, %r4763};
	xor.b64  	%rd6260, %rd6259, %rd6258;
	shf.l.wrap.b32 	%r4765, %r4759, %r4760, 25;
	shf.l.wrap.b32 	%r4766, %r4760, %r4759, 25;
	mov.b64 	%rd6261, {%r4766, %r4765};
	xor.b64  	%rd6262, %rd6260, %rd6261;
	and.b64  	%rd6263, %rd10214, %rd6223;
	xor.b64  	%rd6264, %rd10214, %rd6223;
	and.b64  	%rd6265, %rd6264, %rd6199;
	or.b64  	%rd6266, %rd6265, %rd6263;
	add.s64 	%rd6267, %rd6257, %rd6266;
	add.s64 	%rd10213, %rd6267, %rd6262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4767,%dummy}, %rd10217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4768}, %rd10217;
	}
	shf.r.wrap.b32 	%r4769, %r4768, %r4767, 14;
	shf.r.wrap.b32 	%r4770, %r4767, %r4768, 14;
	mov.b64 	%rd6268, {%r4770, %r4769};
	shf.r.wrap.b32 	%r4771, %r4768, %r4767, 18;
	shf.r.wrap.b32 	%r4772, %r4767, %r4768, 18;
	mov.b64 	%rd6269, {%r4772, %r4771};
	xor.b64  	%rd6270, %rd6269, %rd6268;
	shf.l.wrap.b32 	%r4773, %r4767, %r4768, 23;
	shf.l.wrap.b32 	%r4774, %r4768, %r4767, 23;
	mov.b64 	%rd6271, {%r4774, %r4773};
	xor.b64  	%rd6272, %rd6270, %rd6271;
	xor.b64  	%rd6273, %rd10218, %rd6212;
	and.b64  	%rd6274, %rd10217, %rd6273;
	xor.b64  	%rd6275, %rd6274, %rd6212;
	add.s64 	%rd6276, %rd6188, %rd10204;
	add.s64 	%rd6277, %rd6276, %rd10130;
	add.s64 	%rd6278, %rd6277, %rd6275;
	add.s64 	%rd6279, %rd6278, %rd6272;
	add.s64 	%rd10216, %rd6279, %rd6199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4775,%dummy}, %rd10213;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4776}, %rd10213;
	}
	shf.r.wrap.b32 	%r4777, %r4776, %r4775, 28;
	shf.r.wrap.b32 	%r4778, %r4775, %r4776, 28;
	mov.b64 	%rd6280, {%r4778, %r4777};
	shf.l.wrap.b32 	%r4779, %r4775, %r4776, 30;
	shf.l.wrap.b32 	%r4780, %r4776, %r4775, 30;
	mov.b64 	%rd6281, {%r4780, %r4779};
	xor.b64  	%rd6282, %rd6281, %rd6280;
	shf.l.wrap.b32 	%r4781, %r4775, %r4776, 25;
	shf.l.wrap.b32 	%r4782, %r4776, %r4775, 25;
	mov.b64 	%rd6283, {%r4782, %r4781};
	xor.b64  	%rd6284, %rd6282, %rd6283;
	and.b64  	%rd6285, %rd10213, %rd10214;
	xor.b64  	%rd6286, %rd10213, %rd10214;
	and.b64  	%rd6287, %rd6286, %rd6223;
	or.b64  	%rd6288, %rd6287, %rd6285;
	add.s64 	%rd6289, %rd6279, %rd6288;
	add.s64 	%rd10212, %rd6289, %rd6284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4783,%dummy}, %rd10216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4784}, %rd10216;
	}
	shf.r.wrap.b32 	%r4785, %r4784, %r4783, 14;
	shf.r.wrap.b32 	%r4786, %r4783, %r4784, 14;
	mov.b64 	%rd6290, {%r4786, %r4785};
	shf.r.wrap.b32 	%r4787, %r4784, %r4783, 18;
	shf.r.wrap.b32 	%r4788, %r4783, %r4784, 18;
	mov.b64 	%rd6291, {%r4788, %r4787};
	xor.b64  	%rd6292, %rd6291, %rd6290;
	shf.l.wrap.b32 	%r4789, %r4783, %r4784, 23;
	shf.l.wrap.b32 	%r4790, %r4784, %r4783, 23;
	mov.b64 	%rd6293, {%r4790, %r4789};
	xor.b64  	%rd6294, %rd6292, %rd6293;
	xor.b64  	%rd6295, %rd10217, %rd10218;
	and.b64  	%rd6296, %rd10216, %rd6295;
	xor.b64  	%rd6297, %rd6296, %rd10218;
	add.s64 	%rd6298, %rd6212, %rd10203;
	add.s64 	%rd6299, %rd6298, %rd10129;
	add.s64 	%rd6300, %rd6299, %rd6297;
	add.s64 	%rd6301, %rd6300, %rd6294;
	add.s64 	%rd10215, %rd6301, %rd6223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4791,%dummy}, %rd10212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4792}, %rd10212;
	}
	shf.r.wrap.b32 	%r4793, %r4792, %r4791, 28;
	shf.r.wrap.b32 	%r4794, %r4791, %r4792, 28;
	mov.b64 	%rd6302, {%r4794, %r4793};
	shf.l.wrap.b32 	%r4795, %r4791, %r4792, 30;
	shf.l.wrap.b32 	%r4796, %r4792, %r4791, 30;
	mov.b64 	%rd6303, {%r4796, %r4795};
	xor.b64  	%rd6304, %rd6303, %rd6302;
	shf.l.wrap.b32 	%r4797, %r4791, %r4792, 25;
	shf.l.wrap.b32 	%r4798, %r4792, %r4791, 25;
	mov.b64 	%rd6305, {%r4798, %r4797};
	xor.b64  	%rd6306, %rd6304, %rd6305;
	and.b64  	%rd6307, %rd10212, %rd10213;
	xor.b64  	%rd6308, %rd10212, %rd10213;
	and.b64  	%rd6309, %rd6308, %rd10214;
	or.b64  	%rd6310, %rd6309, %rd6307;
	add.s64 	%rd6311, %rd6301, %rd6310;
	add.s64 	%rd10211, %rd6311, %rd6306;
	mov.u32 	%r7678, 16;

BB3_25:
	mov.u64 	%rd9915, k_sha512;
	shr.u64 	%rd6312, %rd10204, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4799,%dummy}, %rd10204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4800}, %rd10204;
	}
	shf.r.wrap.b32 	%r4801, %r4800, %r4799, 19;
	shf.r.wrap.b32 	%r4802, %r4799, %r4800, 19;
	mov.b64 	%rd6313, {%r4802, %r4801};
	xor.b64  	%rd6314, %rd6313, %rd6312;
	shf.l.wrap.b32 	%r4803, %r4799, %r4800, 3;
	shf.l.wrap.b32 	%r4804, %r4800, %r4799, 3;
	mov.b64 	%rd6315, {%r4804, %r4803};
	xor.b64  	%rd6316, %rd6314, %rd6315;
	shr.u64 	%rd6317, %rd10220, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4805,%dummy}, %rd10220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4806}, %rd10220;
	}
	shf.r.wrap.b32 	%r4807, %r4806, %r4805, 1;
	shf.r.wrap.b32 	%r4808, %r4805, %r4806, 1;
	mov.b64 	%rd6318, {%r4808, %r4807};
	xor.b64  	%rd6319, %rd6318, %rd6317;
	shf.r.wrap.b32 	%r4809, %r4806, %r4805, 8;
	shf.r.wrap.b32 	%r4810, %r4805, %r4806, 8;
	mov.b64 	%rd6320, {%r4810, %r4809};
	xor.b64  	%rd6321, %rd6319, %rd6320;
	add.s64 	%rd6322, %rd10209, %rd10219;
	add.s64 	%rd6323, %rd6322, %rd6316;
	add.s64 	%rd10219, %rd6323, %rd6321;
	shr.u64 	%rd6324, %rd10203, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4811,%dummy}, %rd10203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4812}, %rd10203;
	}
	shf.r.wrap.b32 	%r4813, %r4812, %r4811, 19;
	shf.r.wrap.b32 	%r4814, %r4811, %r4812, 19;
	mov.b64 	%rd6325, {%r4814, %r4813};
	xor.b64  	%rd6326, %rd6325, %rd6324;
	shf.l.wrap.b32 	%r4815, %r4811, %r4812, 3;
	shf.l.wrap.b32 	%r4816, %r4812, %r4811, 3;
	mov.b64 	%rd6327, {%r4816, %r4815};
	xor.b64  	%rd6328, %rd6326, %rd6327;
	shr.u64 	%rd6329, %rd10221, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4817,%dummy}, %rd10221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4818}, %rd10221;
	}
	shf.r.wrap.b32 	%r4819, %r4818, %r4817, 1;
	shf.r.wrap.b32 	%r4820, %r4817, %r4818, 1;
	mov.b64 	%rd6330, {%r4820, %r4819};
	xor.b64  	%rd6331, %rd6330, %rd6329;
	shf.r.wrap.b32 	%r4821, %r4818, %r4817, 8;
	shf.r.wrap.b32 	%r4822, %r4817, %r4818, 8;
	mov.b64 	%rd6332, {%r4822, %r4821};
	xor.b64  	%rd6333, %rd6331, %rd6332;
	add.s64 	%rd6334, %rd10208, %rd10220;
	add.s64 	%rd6335, %rd6334, %rd6328;
	add.s64 	%rd10220, %rd6335, %rd6333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4823,%dummy}, %rd10219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4824}, %rd10219;
	}
	shf.r.wrap.b32 	%r4825, %r4824, %r4823, 19;
	shf.r.wrap.b32 	%r4826, %r4823, %r4824, 19;
	mov.b64 	%rd6336, {%r4826, %r4825};
	shf.l.wrap.b32 	%r4827, %r4823, %r4824, 3;
	shf.l.wrap.b32 	%r4828, %r4824, %r4823, 3;
	mov.b64 	%rd6337, {%r4828, %r4827};
	shr.u64 	%rd6338, %rd10219, 6;
	xor.b64  	%rd6339, %rd6336, %rd6338;
	xor.b64  	%rd6340, %rd6339, %rd6337;
	shr.u64 	%rd6341, %rd10222, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4829,%dummy}, %rd10222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4830}, %rd10222;
	}
	shf.r.wrap.b32 	%r4831, %r4830, %r4829, 1;
	shf.r.wrap.b32 	%r4832, %r4829, %r4830, 1;
	mov.b64 	%rd6342, {%r4832, %r4831};
	xor.b64  	%rd6343, %rd6342, %rd6341;
	shf.r.wrap.b32 	%r4833, %r4830, %r4829, 8;
	shf.r.wrap.b32 	%r4834, %r4829, %r4830, 8;
	mov.b64 	%rd6344, {%r4834, %r4833};
	xor.b64  	%rd6345, %rd6343, %rd6344;
	add.s64 	%rd6346, %rd10207, %rd10221;
	add.s64 	%rd6347, %rd6346, %rd6340;
	add.s64 	%rd10221, %rd6347, %rd6345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4835,%dummy}, %rd10220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4836}, %rd10220;
	}
	shf.r.wrap.b32 	%r4837, %r4836, %r4835, 19;
	shf.r.wrap.b32 	%r4838, %r4835, %r4836, 19;
	mov.b64 	%rd6348, {%r4838, %r4837};
	shf.l.wrap.b32 	%r4839, %r4835, %r4836, 3;
	shf.l.wrap.b32 	%r4840, %r4836, %r4835, 3;
	mov.b64 	%rd6349, {%r4840, %r4839};
	shr.u64 	%rd6350, %rd10220, 6;
	xor.b64  	%rd6351, %rd6348, %rd6350;
	xor.b64  	%rd6352, %rd6351, %rd6349;
	shr.u64 	%rd6353, %rd10223, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4841,%dummy}, %rd10223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4842}, %rd10223;
	}
	shf.r.wrap.b32 	%r4843, %r4842, %r4841, 1;
	shf.r.wrap.b32 	%r4844, %r4841, %r4842, 1;
	mov.b64 	%rd6354, {%r4844, %r4843};
	xor.b64  	%rd6355, %rd6354, %rd6353;
	shf.r.wrap.b32 	%r4845, %r4842, %r4841, 8;
	shf.r.wrap.b32 	%r4846, %r4841, %r4842, 8;
	mov.b64 	%rd6356, {%r4846, %r4845};
	xor.b64  	%rd6357, %rd6355, %rd6356;
	add.s64 	%rd6358, %rd10206, %rd10222;
	add.s64 	%rd6359, %rd6358, %rd6352;
	add.s64 	%rd10222, %rd6359, %rd6357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4847,%dummy}, %rd10221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4848}, %rd10221;
	}
	shf.r.wrap.b32 	%r4849, %r4848, %r4847, 19;
	shf.r.wrap.b32 	%r4850, %r4847, %r4848, 19;
	mov.b64 	%rd6360, {%r4850, %r4849};
	shf.l.wrap.b32 	%r4851, %r4847, %r4848, 3;
	shf.l.wrap.b32 	%r4852, %r4848, %r4847, 3;
	mov.b64 	%rd6361, {%r4852, %r4851};
	shr.u64 	%rd6362, %rd10221, 6;
	xor.b64  	%rd6363, %rd6360, %rd6362;
	xor.b64  	%rd6364, %rd6363, %rd6361;
	shr.u64 	%rd6365, %rd10224, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4853,%dummy}, %rd10224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4854}, %rd10224;
	}
	shf.r.wrap.b32 	%r4855, %r4854, %r4853, 1;
	shf.r.wrap.b32 	%r4856, %r4853, %r4854, 1;
	mov.b64 	%rd6366, {%r4856, %r4855};
	xor.b64  	%rd6367, %rd6366, %rd6365;
	shf.r.wrap.b32 	%r4857, %r4854, %r4853, 8;
	shf.r.wrap.b32 	%r4858, %r4853, %r4854, 8;
	mov.b64 	%rd6368, {%r4858, %r4857};
	xor.b64  	%rd6369, %rd6367, %rd6368;
	add.s64 	%rd6370, %rd10205, %rd10223;
	add.s64 	%rd6371, %rd6370, %rd6364;
	add.s64 	%rd10223, %rd6371, %rd6369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4859,%dummy}, %rd10222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4860}, %rd10222;
	}
	shf.r.wrap.b32 	%r4861, %r4860, %r4859, 19;
	shf.r.wrap.b32 	%r4862, %r4859, %r4860, 19;
	mov.b64 	%rd6372, {%r4862, %r4861};
	shf.l.wrap.b32 	%r4863, %r4859, %r4860, 3;
	shf.l.wrap.b32 	%r4864, %r4860, %r4859, 3;
	mov.b64 	%rd6373, {%r4864, %r4863};
	shr.u64 	%rd6374, %rd10222, 6;
	xor.b64  	%rd6375, %rd6372, %rd6374;
	xor.b64  	%rd6376, %rd6375, %rd6373;
	shr.u64 	%rd6377, %rd10225, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4865,%dummy}, %rd10225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4866}, %rd10225;
	}
	shf.r.wrap.b32 	%r4867, %r4866, %r4865, 1;
	shf.r.wrap.b32 	%r4868, %r4865, %r4866, 1;
	mov.b64 	%rd6378, {%r4868, %r4867};
	xor.b64  	%rd6379, %rd6378, %rd6377;
	shf.r.wrap.b32 	%r4869, %r4866, %r4865, 8;
	shf.r.wrap.b32 	%r4870, %r4865, %r4866, 8;
	mov.b64 	%rd6380, {%r4870, %r4869};
	xor.b64  	%rd6381, %rd6379, %rd6380;
	add.s64 	%rd6382, %rd10204, %rd10224;
	add.s64 	%rd6383, %rd6382, %rd6376;
	add.s64 	%rd10224, %rd6383, %rd6381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4871,%dummy}, %rd10223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4872}, %rd10223;
	}
	shf.r.wrap.b32 	%r4873, %r4872, %r4871, 19;
	shf.r.wrap.b32 	%r4874, %r4871, %r4872, 19;
	mov.b64 	%rd6384, {%r4874, %r4873};
	shf.l.wrap.b32 	%r4875, %r4871, %r4872, 3;
	shf.l.wrap.b32 	%r4876, %r4872, %r4871, 3;
	mov.b64 	%rd6385, {%r4876, %r4875};
	shr.u64 	%rd6386, %rd10223, 6;
	xor.b64  	%rd6387, %rd6384, %rd6386;
	xor.b64  	%rd6388, %rd6387, %rd6385;
	shr.u64 	%rd6389, %rd10226, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4877,%dummy}, %rd10226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4878}, %rd10226;
	}
	shf.r.wrap.b32 	%r4879, %r4878, %r4877, 1;
	shf.r.wrap.b32 	%r4880, %r4877, %r4878, 1;
	mov.b64 	%rd6390, {%r4880, %r4879};
	xor.b64  	%rd6391, %rd6390, %rd6389;
	shf.r.wrap.b32 	%r4881, %r4878, %r4877, 8;
	shf.r.wrap.b32 	%r4882, %r4877, %r4878, 8;
	mov.b64 	%rd6392, {%r4882, %r4881};
	xor.b64  	%rd6393, %rd6391, %rd6392;
	add.s64 	%rd6394, %rd10203, %rd10225;
	add.s64 	%rd6395, %rd6394, %rd6388;
	add.s64 	%rd10225, %rd6395, %rd6393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4883,%dummy}, %rd10224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4884}, %rd10224;
	}
	shf.r.wrap.b32 	%r4885, %r4884, %r4883, 19;
	shf.r.wrap.b32 	%r4886, %r4883, %r4884, 19;
	mov.b64 	%rd6396, {%r4886, %r4885};
	shf.l.wrap.b32 	%r4887, %r4883, %r4884, 3;
	shf.l.wrap.b32 	%r4888, %r4884, %r4883, 3;
	mov.b64 	%rd6397, {%r4888, %r4887};
	shr.u64 	%rd6398, %rd10224, 6;
	xor.b64  	%rd6399, %rd6396, %rd6398;
	xor.b64  	%rd6400, %rd6399, %rd6397;
	shr.u64 	%rd6401, %rd10210, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4889,%dummy}, %rd10210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4890}, %rd10210;
	}
	shf.r.wrap.b32 	%r4891, %r4890, %r4889, 1;
	shf.r.wrap.b32 	%r4892, %r4889, %r4890, 1;
	mov.b64 	%rd6402, {%r4892, %r4891};
	xor.b64  	%rd6403, %rd6402, %rd6401;
	shf.r.wrap.b32 	%r4893, %r4890, %r4889, 8;
	shf.r.wrap.b32 	%r4894, %r4889, %r4890, 8;
	mov.b64 	%rd6404, {%r4894, %r4893};
	xor.b64  	%rd6405, %rd6403, %rd6404;
	add.s64 	%rd6406, %rd10219, %rd10226;
	add.s64 	%rd6407, %rd6406, %rd6400;
	add.s64 	%rd10226, %rd6407, %rd6405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4895,%dummy}, %rd10225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4896}, %rd10225;
	}
	shf.r.wrap.b32 	%r4897, %r4896, %r4895, 19;
	shf.r.wrap.b32 	%r4898, %r4895, %r4896, 19;
	mov.b64 	%rd6408, {%r4898, %r4897};
	shf.l.wrap.b32 	%r4899, %r4895, %r4896, 3;
	shf.l.wrap.b32 	%r4900, %r4896, %r4895, 3;
	mov.b64 	%rd6409, {%r4900, %r4899};
	shr.u64 	%rd6410, %rd10225, 6;
	xor.b64  	%rd6411, %rd6408, %rd6410;
	xor.b64  	%rd6412, %rd6411, %rd6409;
	shr.u64 	%rd6413, %rd10209, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4901,%dummy}, %rd10209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4902}, %rd10209;
	}
	shf.r.wrap.b32 	%r4903, %r4902, %r4901, 1;
	shf.r.wrap.b32 	%r4904, %r4901, %r4902, 1;
	mov.b64 	%rd6414, {%r4904, %r4903};
	xor.b64  	%rd6415, %rd6414, %rd6413;
	shf.r.wrap.b32 	%r4905, %r4902, %r4901, 8;
	shf.r.wrap.b32 	%r4906, %r4901, %r4902, 8;
	mov.b64 	%rd6416, {%r4906, %r4905};
	xor.b64  	%rd6417, %rd6415, %rd6416;
	add.s64 	%rd6418, %rd10220, %rd10210;
	add.s64 	%rd6419, %rd6418, %rd6412;
	add.s64 	%rd10210, %rd6419, %rd6417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4907,%dummy}, %rd10226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4908}, %rd10226;
	}
	shf.r.wrap.b32 	%r4909, %r4908, %r4907, 19;
	shf.r.wrap.b32 	%r4910, %r4907, %r4908, 19;
	mov.b64 	%rd6420, {%r4910, %r4909};
	shf.l.wrap.b32 	%r4911, %r4907, %r4908, 3;
	shf.l.wrap.b32 	%r4912, %r4908, %r4907, 3;
	mov.b64 	%rd6421, {%r4912, %r4911};
	shr.u64 	%rd6422, %rd10226, 6;
	xor.b64  	%rd6423, %rd6420, %rd6422;
	xor.b64  	%rd6424, %rd6423, %rd6421;
	shr.u64 	%rd6425, %rd10208, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4913,%dummy}, %rd10208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4914}, %rd10208;
	}
	shf.r.wrap.b32 	%r4915, %r4914, %r4913, 1;
	shf.r.wrap.b32 	%r4916, %r4913, %r4914, 1;
	mov.b64 	%rd6426, {%r4916, %r4915};
	xor.b64  	%rd6427, %rd6426, %rd6425;
	shf.r.wrap.b32 	%r4917, %r4914, %r4913, 8;
	shf.r.wrap.b32 	%r4918, %r4913, %r4914, 8;
	mov.b64 	%rd6428, {%r4918, %r4917};
	xor.b64  	%rd6429, %rd6427, %rd6428;
	add.s64 	%rd6430, %rd10221, %rd10209;
	add.s64 	%rd6431, %rd6430, %rd6424;
	add.s64 	%rd10209, %rd6431, %rd6429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4919,%dummy}, %rd10210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4920}, %rd10210;
	}
	shf.r.wrap.b32 	%r4921, %r4920, %r4919, 19;
	shf.r.wrap.b32 	%r4922, %r4919, %r4920, 19;
	mov.b64 	%rd6432, {%r4922, %r4921};
	shf.l.wrap.b32 	%r4923, %r4919, %r4920, 3;
	shf.l.wrap.b32 	%r4924, %r4920, %r4919, 3;
	mov.b64 	%rd6433, {%r4924, %r4923};
	shr.u64 	%rd6434, %rd10210, 6;
	xor.b64  	%rd6435, %rd6432, %rd6434;
	xor.b64  	%rd6436, %rd6435, %rd6433;
	shr.u64 	%rd6437, %rd10207, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4925,%dummy}, %rd10207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4926}, %rd10207;
	}
	shf.r.wrap.b32 	%r4927, %r4926, %r4925, 1;
	shf.r.wrap.b32 	%r4928, %r4925, %r4926, 1;
	mov.b64 	%rd6438, {%r4928, %r4927};
	xor.b64  	%rd6439, %rd6438, %rd6437;
	shf.r.wrap.b32 	%r4929, %r4926, %r4925, 8;
	shf.r.wrap.b32 	%r4930, %r4925, %r4926, 8;
	mov.b64 	%rd6440, {%r4930, %r4929};
	xor.b64  	%rd6441, %rd6439, %rd6440;
	add.s64 	%rd6442, %rd10222, %rd10208;
	add.s64 	%rd6443, %rd6442, %rd6436;
	add.s64 	%rd10208, %rd6443, %rd6441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4931,%dummy}, %rd10209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4932}, %rd10209;
	}
	shf.r.wrap.b32 	%r4933, %r4932, %r4931, 19;
	shf.r.wrap.b32 	%r4934, %r4931, %r4932, 19;
	mov.b64 	%rd6444, {%r4934, %r4933};
	shf.l.wrap.b32 	%r4935, %r4931, %r4932, 3;
	shf.l.wrap.b32 	%r4936, %r4932, %r4931, 3;
	mov.b64 	%rd6445, {%r4936, %r4935};
	shr.u64 	%rd6446, %rd10209, 6;
	xor.b64  	%rd6447, %rd6444, %rd6446;
	xor.b64  	%rd6448, %rd6447, %rd6445;
	shr.u64 	%rd6449, %rd10206, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4937,%dummy}, %rd10206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4938}, %rd10206;
	}
	shf.r.wrap.b32 	%r4939, %r4938, %r4937, 1;
	shf.r.wrap.b32 	%r4940, %r4937, %r4938, 1;
	mov.b64 	%rd6450, {%r4940, %r4939};
	xor.b64  	%rd6451, %rd6450, %rd6449;
	shf.r.wrap.b32 	%r4941, %r4938, %r4937, 8;
	shf.r.wrap.b32 	%r4942, %r4937, %r4938, 8;
	mov.b64 	%rd6452, {%r4942, %r4941};
	xor.b64  	%rd6453, %rd6451, %rd6452;
	add.s64 	%rd6454, %rd10223, %rd10207;
	add.s64 	%rd6455, %rd6454, %rd6448;
	add.s64 	%rd10207, %rd6455, %rd6453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4943,%dummy}, %rd10208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4944}, %rd10208;
	}
	shf.r.wrap.b32 	%r4945, %r4944, %r4943, 19;
	shf.r.wrap.b32 	%r4946, %r4943, %r4944, 19;
	mov.b64 	%rd6456, {%r4946, %r4945};
	shf.l.wrap.b32 	%r4947, %r4943, %r4944, 3;
	shf.l.wrap.b32 	%r4948, %r4944, %r4943, 3;
	mov.b64 	%rd6457, {%r4948, %r4947};
	shr.u64 	%rd6458, %rd10208, 6;
	xor.b64  	%rd6459, %rd6456, %rd6458;
	xor.b64  	%rd6460, %rd6459, %rd6457;
	shr.u64 	%rd6461, %rd10205, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4949,%dummy}, %rd10205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4950}, %rd10205;
	}
	shf.r.wrap.b32 	%r4951, %r4950, %r4949, 1;
	shf.r.wrap.b32 	%r4952, %r4949, %r4950, 1;
	mov.b64 	%rd6462, {%r4952, %r4951};
	xor.b64  	%rd6463, %rd6462, %rd6461;
	shf.r.wrap.b32 	%r4953, %r4950, %r4949, 8;
	shf.r.wrap.b32 	%r4954, %r4949, %r4950, 8;
	mov.b64 	%rd6464, {%r4954, %r4953};
	xor.b64  	%rd6465, %rd6463, %rd6464;
	add.s64 	%rd6466, %rd10224, %rd10206;
	add.s64 	%rd6467, %rd6466, %rd6460;
	add.s64 	%rd10206, %rd6467, %rd6465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4955,%dummy}, %rd10207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4956}, %rd10207;
	}
	shf.r.wrap.b32 	%r4957, %r4956, %r4955, 19;
	shf.r.wrap.b32 	%r4958, %r4955, %r4956, 19;
	mov.b64 	%rd6468, {%r4958, %r4957};
	shf.l.wrap.b32 	%r4959, %r4955, %r4956, 3;
	shf.l.wrap.b32 	%r4960, %r4956, %r4955, 3;
	mov.b64 	%rd6469, {%r4960, %r4959};
	shr.u64 	%rd6470, %rd10207, 6;
	xor.b64  	%rd6471, %rd6468, %rd6470;
	xor.b64  	%rd6472, %rd6471, %rd6469;
	shr.u64 	%rd6473, %rd10204, 7;
	shf.r.wrap.b32 	%r4961, %r4800, %r4799, 1;
	shf.r.wrap.b32 	%r4962, %r4799, %r4800, 1;
	mov.b64 	%rd6474, {%r4962, %r4961};
	xor.b64  	%rd6475, %rd6474, %rd6473;
	shf.r.wrap.b32 	%r4963, %r4800, %r4799, 8;
	shf.r.wrap.b32 	%r4964, %r4799, %r4800, 8;
	mov.b64 	%rd6476, {%r4964, %r4963};
	xor.b64  	%rd6477, %rd6475, %rd6476;
	add.s64 	%rd6478, %rd10225, %rd10205;
	add.s64 	%rd6479, %rd6478, %rd6472;
	add.s64 	%rd10205, %rd6479, %rd6477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4965,%dummy}, %rd10206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4966}, %rd10206;
	}
	shf.r.wrap.b32 	%r4967, %r4966, %r4965, 19;
	shf.r.wrap.b32 	%r4968, %r4965, %r4966, 19;
	mov.b64 	%rd6480, {%r4968, %r4967};
	shf.l.wrap.b32 	%r4969, %r4965, %r4966, 3;
	shf.l.wrap.b32 	%r4970, %r4966, %r4965, 3;
	mov.b64 	%rd6481, {%r4970, %r4969};
	shr.u64 	%rd6482, %rd10206, 6;
	xor.b64  	%rd6483, %rd6480, %rd6482;
	xor.b64  	%rd6484, %rd6483, %rd6481;
	shr.u64 	%rd6485, %rd10203, 7;
	shf.r.wrap.b32 	%r4971, %r4812, %r4811, 1;
	shf.r.wrap.b32 	%r4972, %r4811, %r4812, 1;
	mov.b64 	%rd6486, {%r4972, %r4971};
	xor.b64  	%rd6487, %rd6486, %rd6485;
	shf.r.wrap.b32 	%r4973, %r4812, %r4811, 8;
	shf.r.wrap.b32 	%r4974, %r4811, %r4812, 8;
	mov.b64 	%rd6488, {%r4974, %r4973};
	xor.b64  	%rd6489, %rd6487, %rd6488;
	add.s64 	%rd6490, %rd10226, %rd10204;
	add.s64 	%rd6491, %rd6490, %rd6484;
	add.s64 	%rd10204, %rd6491, %rd6489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4975,%dummy}, %rd10205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4976}, %rd10205;
	}
	shf.r.wrap.b32 	%r4977, %r4976, %r4975, 19;
	shf.r.wrap.b32 	%r4978, %r4975, %r4976, 19;
	mov.b64 	%rd6492, {%r4978, %r4977};
	shf.l.wrap.b32 	%r4979, %r4975, %r4976, 3;
	shf.l.wrap.b32 	%r4980, %r4976, %r4975, 3;
	mov.b64 	%rd6493, {%r4980, %r4979};
	shr.u64 	%rd6494, %rd10205, 6;
	xor.b64  	%rd6495, %rd6492, %rd6494;
	xor.b64  	%rd6496, %rd6495, %rd6493;
	shf.r.wrap.b32 	%r4981, %r4824, %r4823, 1;
	shf.r.wrap.b32 	%r4982, %r4823, %r4824, 1;
	mov.b64 	%rd6497, {%r4982, %r4981};
	shf.r.wrap.b32 	%r4983, %r4824, %r4823, 8;
	shf.r.wrap.b32 	%r4984, %r4823, %r4824, 8;
	mov.b64 	%rd6498, {%r4984, %r4983};
	shr.u64 	%rd6499, %rd10219, 7;
	xor.b64  	%rd6500, %rd6497, %rd6499;
	xor.b64  	%rd6501, %rd6500, %rd6498;
	add.s64 	%rd6502, %rd10210, %rd10203;
	add.s64 	%rd6503, %rd6502, %rd6496;
	add.s64 	%rd10203, %rd6503, %rd6501;
	mul.wide.s32 	%rd6504, %r7678, 8;
	add.s64 	%rd6506, %rd9915, %rd6504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4985,%dummy}, %rd10215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4986}, %rd10215;
	}
	shf.r.wrap.b32 	%r4987, %r4986, %r4985, 18;
	shf.r.wrap.b32 	%r4988, %r4985, %r4986, 18;
	mov.b64 	%rd6507, {%r4988, %r4987};
	shf.r.wrap.b32 	%r4989, %r4986, %r4985, 14;
	shf.r.wrap.b32 	%r4990, %r4985, %r4986, 14;
	mov.b64 	%rd6508, {%r4990, %r4989};
	xor.b64  	%rd6509, %rd6507, %rd6508;
	shf.l.wrap.b32 	%r4991, %r4985, %r4986, 23;
	shf.l.wrap.b32 	%r4992, %r4986, %r4985, 23;
	mov.b64 	%rd6510, {%r4992, %r4991};
	xor.b64  	%rd6511, %rd6509, %rd6510;
	xor.b64  	%rd6512, %rd10216, %rd10217;
	and.b64  	%rd6513, %rd10215, %rd6512;
	xor.b64  	%rd6514, %rd6513, %rd10217;
	add.s64 	%rd6515, %rd6514, %rd10218;
	add.s64 	%rd6516, %rd6515, %rd10219;
	ld.const.u64 	%rd6517, [%rd6506];
	add.s64 	%rd6518, %rd6516, %rd6517;
	add.s64 	%rd6519, %rd6518, %rd6511;
	add.s64 	%rd6520, %rd6519, %rd10214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4993}, %rd10211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4994,%dummy}, %rd10211;
	}
	shf.l.wrap.b32 	%r4995, %r4994, %r4993, 30;
	shf.l.wrap.b32 	%r4996, %r4993, %r4994, 30;
	mov.b64 	%rd6521, {%r4996, %r4995};
	shf.r.wrap.b32 	%r4997, %r4993, %r4994, 28;
	shf.r.wrap.b32 	%r4998, %r4994, %r4993, 28;
	mov.b64 	%rd6522, {%r4998, %r4997};
	xor.b64  	%rd6523, %rd6521, %rd6522;
	shf.l.wrap.b32 	%r4999, %r4994, %r4993, 25;
	shf.l.wrap.b32 	%r5000, %r4993, %r4994, 25;
	mov.b64 	%rd6524, {%r5000, %r4999};
	xor.b64  	%rd6525, %rd6523, %rd6524;
	xor.b64  	%rd6526, %rd10211, %rd10212;
	and.b64  	%rd6527, %rd6526, %rd10213;
	and.b64  	%rd6528, %rd10211, %rd10212;
	or.b64  	%rd6529, %rd6527, %rd6528;
	add.s64 	%rd6530, %rd6519, %rd6529;
	add.s64 	%rd6531, %rd6530, %rd6525;
	add.s32 	%r5001, %r7678, 1;
	mul.wide.s32 	%rd6532, %r5001, 8;
	add.s64 	%rd6533, %rd9915, %rd6532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5002,%dummy}, %rd6520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5003}, %rd6520;
	}
	shf.r.wrap.b32 	%r5004, %r5003, %r5002, 14;
	shf.r.wrap.b32 	%r5005, %r5002, %r5003, 14;
	mov.b64 	%rd6534, {%r5005, %r5004};
	shf.r.wrap.b32 	%r5006, %r5003, %r5002, 18;
	shf.r.wrap.b32 	%r5007, %r5002, %r5003, 18;
	mov.b64 	%rd6535, {%r5007, %r5006};
	xor.b64  	%rd6536, %rd6535, %rd6534;
	shf.l.wrap.b32 	%r5008, %r5002, %r5003, 23;
	shf.l.wrap.b32 	%r5009, %r5003, %r5002, 23;
	mov.b64 	%rd6537, {%r5009, %r5008};
	xor.b64  	%rd6538, %rd6536, %rd6537;
	xor.b64  	%rd6539, %rd10215, %rd10216;
	and.b64  	%rd6540, %rd6520, %rd6539;
	xor.b64  	%rd6541, %rd6540, %rd10216;
	add.s64 	%rd6542, %rd10220, %rd10217;
	ld.const.u64 	%rd6543, [%rd6533];
	add.s64 	%rd6544, %rd6542, %rd6543;
	add.s64 	%rd6545, %rd6544, %rd6541;
	add.s64 	%rd6546, %rd6545, %rd6538;
	add.s64 	%rd6547, %rd6546, %rd10213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5010,%dummy}, %rd6531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5011}, %rd6531;
	}
	shf.r.wrap.b32 	%r5012, %r5011, %r5010, 28;
	shf.r.wrap.b32 	%r5013, %r5010, %r5011, 28;
	mov.b64 	%rd6548, {%r5013, %r5012};
	shf.l.wrap.b32 	%r5014, %r5010, %r5011, 30;
	shf.l.wrap.b32 	%r5015, %r5011, %r5010, 30;
	mov.b64 	%rd6549, {%r5015, %r5014};
	xor.b64  	%rd6550, %rd6549, %rd6548;
	shf.l.wrap.b32 	%r5016, %r5010, %r5011, 25;
	shf.l.wrap.b32 	%r5017, %r5011, %r5010, 25;
	mov.b64 	%rd6551, {%r5017, %r5016};
	xor.b64  	%rd6552, %rd6550, %rd6551;
	and.b64  	%rd6553, %rd6531, %rd10211;
	xor.b64  	%rd6554, %rd6531, %rd10211;
	and.b64  	%rd6555, %rd6554, %rd10212;
	or.b64  	%rd6556, %rd6555, %rd6553;
	add.s64 	%rd6557, %rd6546, %rd6556;
	add.s64 	%rd6558, %rd6557, %rd6552;
	add.s32 	%r5018, %r7678, 2;
	mul.wide.s32 	%rd6559, %r5018, 8;
	add.s64 	%rd6560, %rd9915, %rd6559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5019,%dummy}, %rd6547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5020}, %rd6547;
	}
	shf.r.wrap.b32 	%r5021, %r5020, %r5019, 14;
	shf.r.wrap.b32 	%r5022, %r5019, %r5020, 14;
	mov.b64 	%rd6561, {%r5022, %r5021};
	shf.r.wrap.b32 	%r5023, %r5020, %r5019, 18;
	shf.r.wrap.b32 	%r5024, %r5019, %r5020, 18;
	mov.b64 	%rd6562, {%r5024, %r5023};
	xor.b64  	%rd6563, %rd6562, %rd6561;
	shf.l.wrap.b32 	%r5025, %r5019, %r5020, 23;
	shf.l.wrap.b32 	%r5026, %r5020, %r5019, 23;
	mov.b64 	%rd6564, {%r5026, %r5025};
	xor.b64  	%rd6565, %rd6563, %rd6564;
	xor.b64  	%rd6566, %rd6520, %rd10215;
	and.b64  	%rd6567, %rd6547, %rd6566;
	xor.b64  	%rd6568, %rd6567, %rd10215;
	add.s64 	%rd6569, %rd10221, %rd10216;
	ld.const.u64 	%rd6570, [%rd6560];
	add.s64 	%rd6571, %rd6569, %rd6570;
	add.s64 	%rd6572, %rd6571, %rd6568;
	add.s64 	%rd6573, %rd6572, %rd6565;
	add.s64 	%rd6574, %rd6573, %rd10212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5027,%dummy}, %rd6558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5028}, %rd6558;
	}
	shf.r.wrap.b32 	%r5029, %r5028, %r5027, 28;
	shf.r.wrap.b32 	%r5030, %r5027, %r5028, 28;
	mov.b64 	%rd6575, {%r5030, %r5029};
	shf.l.wrap.b32 	%r5031, %r5027, %r5028, 30;
	shf.l.wrap.b32 	%r5032, %r5028, %r5027, 30;
	mov.b64 	%rd6576, {%r5032, %r5031};
	xor.b64  	%rd6577, %rd6576, %rd6575;
	shf.l.wrap.b32 	%r5033, %r5027, %r5028, 25;
	shf.l.wrap.b32 	%r5034, %r5028, %r5027, 25;
	mov.b64 	%rd6578, {%r5034, %r5033};
	xor.b64  	%rd6579, %rd6577, %rd6578;
	and.b64  	%rd6580, %rd6558, %rd6531;
	xor.b64  	%rd6581, %rd6558, %rd6531;
	and.b64  	%rd6582, %rd6581, %rd10211;
	or.b64  	%rd6583, %rd6582, %rd6580;
	add.s64 	%rd6584, %rd6573, %rd6583;
	add.s64 	%rd6585, %rd6584, %rd6579;
	add.s32 	%r5035, %r7678, 3;
	mul.wide.s32 	%rd6586, %r5035, 8;
	add.s64 	%rd6587, %rd9915, %rd6586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5036,%dummy}, %rd6574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5037}, %rd6574;
	}
	shf.r.wrap.b32 	%r5038, %r5037, %r5036, 14;
	shf.r.wrap.b32 	%r5039, %r5036, %r5037, 14;
	mov.b64 	%rd6588, {%r5039, %r5038};
	shf.r.wrap.b32 	%r5040, %r5037, %r5036, 18;
	shf.r.wrap.b32 	%r5041, %r5036, %r5037, 18;
	mov.b64 	%rd6589, {%r5041, %r5040};
	xor.b64  	%rd6590, %rd6589, %rd6588;
	shf.l.wrap.b32 	%r5042, %r5036, %r5037, 23;
	shf.l.wrap.b32 	%r5043, %r5037, %r5036, 23;
	mov.b64 	%rd6591, {%r5043, %r5042};
	xor.b64  	%rd6592, %rd6590, %rd6591;
	xor.b64  	%rd6593, %rd6547, %rd6520;
	and.b64  	%rd6594, %rd6574, %rd6593;
	xor.b64  	%rd6595, %rd6594, %rd6520;
	add.s64 	%rd6596, %rd10222, %rd10215;
	ld.const.u64 	%rd6597, [%rd6587];
	add.s64 	%rd6598, %rd6596, %rd6597;
	add.s64 	%rd6599, %rd6598, %rd6595;
	add.s64 	%rd6600, %rd6599, %rd6592;
	add.s64 	%rd6601, %rd6600, %rd10211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5044,%dummy}, %rd6585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5045}, %rd6585;
	}
	shf.r.wrap.b32 	%r5046, %r5045, %r5044, 28;
	shf.r.wrap.b32 	%r5047, %r5044, %r5045, 28;
	mov.b64 	%rd6602, {%r5047, %r5046};
	shf.l.wrap.b32 	%r5048, %r5044, %r5045, 30;
	shf.l.wrap.b32 	%r5049, %r5045, %r5044, 30;
	mov.b64 	%rd6603, {%r5049, %r5048};
	xor.b64  	%rd6604, %rd6603, %rd6602;
	shf.l.wrap.b32 	%r5050, %r5044, %r5045, 25;
	shf.l.wrap.b32 	%r5051, %r5045, %r5044, 25;
	mov.b64 	%rd6605, {%r5051, %r5050};
	xor.b64  	%rd6606, %rd6604, %rd6605;
	and.b64  	%rd6607, %rd6585, %rd6558;
	xor.b64  	%rd6608, %rd6585, %rd6558;
	and.b64  	%rd6609, %rd6608, %rd6531;
	or.b64  	%rd6610, %rd6609, %rd6607;
	add.s64 	%rd6611, %rd6600, %rd6610;
	add.s64 	%rd6612, %rd6611, %rd6606;
	add.s32 	%r5052, %r7678, 4;
	mul.wide.s32 	%rd6613, %r5052, 8;
	add.s64 	%rd6614, %rd9915, %rd6613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5053,%dummy}, %rd6601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5054}, %rd6601;
	}
	shf.r.wrap.b32 	%r5055, %r5054, %r5053, 14;
	shf.r.wrap.b32 	%r5056, %r5053, %r5054, 14;
	mov.b64 	%rd6615, {%r5056, %r5055};
	shf.r.wrap.b32 	%r5057, %r5054, %r5053, 18;
	shf.r.wrap.b32 	%r5058, %r5053, %r5054, 18;
	mov.b64 	%rd6616, {%r5058, %r5057};
	xor.b64  	%rd6617, %rd6616, %rd6615;
	shf.l.wrap.b32 	%r5059, %r5053, %r5054, 23;
	shf.l.wrap.b32 	%r5060, %r5054, %r5053, 23;
	mov.b64 	%rd6618, {%r5060, %r5059};
	xor.b64  	%rd6619, %rd6617, %rd6618;
	xor.b64  	%rd6620, %rd6574, %rd6547;
	and.b64  	%rd6621, %rd6601, %rd6620;
	xor.b64  	%rd6622, %rd6621, %rd6547;
	add.s64 	%rd6623, %rd6520, %rd10223;
	ld.const.u64 	%rd6624, [%rd6614];
	add.s64 	%rd6625, %rd6623, %rd6624;
	add.s64 	%rd6626, %rd6625, %rd6622;
	add.s64 	%rd6627, %rd6626, %rd6619;
	add.s64 	%rd6628, %rd6627, %rd6531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5061,%dummy}, %rd6612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5062}, %rd6612;
	}
	shf.r.wrap.b32 	%r5063, %r5062, %r5061, 28;
	shf.r.wrap.b32 	%r5064, %r5061, %r5062, 28;
	mov.b64 	%rd6629, {%r5064, %r5063};
	shf.l.wrap.b32 	%r5065, %r5061, %r5062, 30;
	shf.l.wrap.b32 	%r5066, %r5062, %r5061, 30;
	mov.b64 	%rd6630, {%r5066, %r5065};
	xor.b64  	%rd6631, %rd6630, %rd6629;
	shf.l.wrap.b32 	%r5067, %r5061, %r5062, 25;
	shf.l.wrap.b32 	%r5068, %r5062, %r5061, 25;
	mov.b64 	%rd6632, {%r5068, %r5067};
	xor.b64  	%rd6633, %rd6631, %rd6632;
	and.b64  	%rd6634, %rd6612, %rd6585;
	xor.b64  	%rd6635, %rd6612, %rd6585;
	and.b64  	%rd6636, %rd6635, %rd6558;
	or.b64  	%rd6637, %rd6636, %rd6634;
	add.s64 	%rd6638, %rd6627, %rd6637;
	add.s64 	%rd6639, %rd6638, %rd6633;
	add.s32 	%r5069, %r7678, 5;
	mul.wide.s32 	%rd6640, %r5069, 8;
	add.s64 	%rd6641, %rd9915, %rd6640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5070,%dummy}, %rd6628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5071}, %rd6628;
	}
	shf.r.wrap.b32 	%r5072, %r5071, %r5070, 14;
	shf.r.wrap.b32 	%r5073, %r5070, %r5071, 14;
	mov.b64 	%rd6642, {%r5073, %r5072};
	shf.r.wrap.b32 	%r5074, %r5071, %r5070, 18;
	shf.r.wrap.b32 	%r5075, %r5070, %r5071, 18;
	mov.b64 	%rd6643, {%r5075, %r5074};
	xor.b64  	%rd6644, %rd6643, %rd6642;
	shf.l.wrap.b32 	%r5076, %r5070, %r5071, 23;
	shf.l.wrap.b32 	%r5077, %r5071, %r5070, 23;
	mov.b64 	%rd6645, {%r5077, %r5076};
	xor.b64  	%rd6646, %rd6644, %rd6645;
	xor.b64  	%rd6647, %rd6601, %rd6574;
	and.b64  	%rd6648, %rd6628, %rd6647;
	xor.b64  	%rd6649, %rd6648, %rd6574;
	add.s64 	%rd6650, %rd6547, %rd10224;
	ld.const.u64 	%rd6651, [%rd6641];
	add.s64 	%rd6652, %rd6650, %rd6651;
	add.s64 	%rd6653, %rd6652, %rd6649;
	add.s64 	%rd6654, %rd6653, %rd6646;
	add.s64 	%rd6655, %rd6654, %rd6558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5078,%dummy}, %rd6639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5079}, %rd6639;
	}
	shf.r.wrap.b32 	%r5080, %r5079, %r5078, 28;
	shf.r.wrap.b32 	%r5081, %r5078, %r5079, 28;
	mov.b64 	%rd6656, {%r5081, %r5080};
	shf.l.wrap.b32 	%r5082, %r5078, %r5079, 30;
	shf.l.wrap.b32 	%r5083, %r5079, %r5078, 30;
	mov.b64 	%rd6657, {%r5083, %r5082};
	xor.b64  	%rd6658, %rd6657, %rd6656;
	shf.l.wrap.b32 	%r5084, %r5078, %r5079, 25;
	shf.l.wrap.b32 	%r5085, %r5079, %r5078, 25;
	mov.b64 	%rd6659, {%r5085, %r5084};
	xor.b64  	%rd6660, %rd6658, %rd6659;
	and.b64  	%rd6661, %rd6639, %rd6612;
	xor.b64  	%rd6662, %rd6639, %rd6612;
	and.b64  	%rd6663, %rd6662, %rd6585;
	or.b64  	%rd6664, %rd6663, %rd6661;
	add.s64 	%rd6665, %rd6654, %rd6664;
	add.s64 	%rd6666, %rd6665, %rd6660;
	add.s32 	%r5086, %r7678, 6;
	mul.wide.s32 	%rd6667, %r5086, 8;
	add.s64 	%rd6668, %rd9915, %rd6667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5087,%dummy}, %rd6655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5088}, %rd6655;
	}
	shf.r.wrap.b32 	%r5089, %r5088, %r5087, 14;
	shf.r.wrap.b32 	%r5090, %r5087, %r5088, 14;
	mov.b64 	%rd6669, {%r5090, %r5089};
	shf.r.wrap.b32 	%r5091, %r5088, %r5087, 18;
	shf.r.wrap.b32 	%r5092, %r5087, %r5088, 18;
	mov.b64 	%rd6670, {%r5092, %r5091};
	xor.b64  	%rd6671, %rd6670, %rd6669;
	shf.l.wrap.b32 	%r5093, %r5087, %r5088, 23;
	shf.l.wrap.b32 	%r5094, %r5088, %r5087, 23;
	mov.b64 	%rd6672, {%r5094, %r5093};
	xor.b64  	%rd6673, %rd6671, %rd6672;
	xor.b64  	%rd6674, %rd6628, %rd6601;
	and.b64  	%rd6675, %rd6655, %rd6674;
	xor.b64  	%rd6676, %rd6675, %rd6601;
	add.s64 	%rd6677, %rd6574, %rd10225;
	ld.const.u64 	%rd6678, [%rd6668];
	add.s64 	%rd6679, %rd6677, %rd6678;
	add.s64 	%rd6680, %rd6679, %rd6676;
	add.s64 	%rd6681, %rd6680, %rd6673;
	add.s64 	%rd6682, %rd6681, %rd6585;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5095,%dummy}, %rd6666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5096}, %rd6666;
	}
	shf.r.wrap.b32 	%r5097, %r5096, %r5095, 28;
	shf.r.wrap.b32 	%r5098, %r5095, %r5096, 28;
	mov.b64 	%rd6683, {%r5098, %r5097};
	shf.l.wrap.b32 	%r5099, %r5095, %r5096, 30;
	shf.l.wrap.b32 	%r5100, %r5096, %r5095, 30;
	mov.b64 	%rd6684, {%r5100, %r5099};
	xor.b64  	%rd6685, %rd6684, %rd6683;
	shf.l.wrap.b32 	%r5101, %r5095, %r5096, 25;
	shf.l.wrap.b32 	%r5102, %r5096, %r5095, 25;
	mov.b64 	%rd6686, {%r5102, %r5101};
	xor.b64  	%rd6687, %rd6685, %rd6686;
	and.b64  	%rd6688, %rd6666, %rd6639;
	xor.b64  	%rd6689, %rd6666, %rd6639;
	and.b64  	%rd6690, %rd6689, %rd6612;
	or.b64  	%rd6691, %rd6690, %rd6688;
	add.s64 	%rd6692, %rd6681, %rd6691;
	add.s64 	%rd6693, %rd6692, %rd6687;
	add.s32 	%r5103, %r7678, 7;
	mul.wide.s32 	%rd6694, %r5103, 8;
	add.s64 	%rd6695, %rd9915, %rd6694;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5104,%dummy}, %rd6682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5105}, %rd6682;
	}
	shf.r.wrap.b32 	%r5106, %r5105, %r5104, 14;
	shf.r.wrap.b32 	%r5107, %r5104, %r5105, 14;
	mov.b64 	%rd6696, {%r5107, %r5106};
	shf.r.wrap.b32 	%r5108, %r5105, %r5104, 18;
	shf.r.wrap.b32 	%r5109, %r5104, %r5105, 18;
	mov.b64 	%rd6697, {%r5109, %r5108};
	xor.b64  	%rd6698, %rd6697, %rd6696;
	shf.l.wrap.b32 	%r5110, %r5104, %r5105, 23;
	shf.l.wrap.b32 	%r5111, %r5105, %r5104, 23;
	mov.b64 	%rd6699, {%r5111, %r5110};
	xor.b64  	%rd6700, %rd6698, %rd6699;
	xor.b64  	%rd6701, %rd6655, %rd6628;
	and.b64  	%rd6702, %rd6682, %rd6701;
	xor.b64  	%rd6703, %rd6702, %rd6628;
	add.s64 	%rd6704, %rd6601, %rd10226;
	ld.const.u64 	%rd6705, [%rd6695];
	add.s64 	%rd6706, %rd6704, %rd6705;
	add.s64 	%rd6707, %rd6706, %rd6703;
	add.s64 	%rd6708, %rd6707, %rd6700;
	add.s64 	%rd6709, %rd6708, %rd6612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5112,%dummy}, %rd6693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5113}, %rd6693;
	}
	shf.r.wrap.b32 	%r5114, %r5113, %r5112, 28;
	shf.r.wrap.b32 	%r5115, %r5112, %r5113, 28;
	mov.b64 	%rd6710, {%r5115, %r5114};
	shf.l.wrap.b32 	%r5116, %r5112, %r5113, 30;
	shf.l.wrap.b32 	%r5117, %r5113, %r5112, 30;
	mov.b64 	%rd6711, {%r5117, %r5116};
	xor.b64  	%rd6712, %rd6711, %rd6710;
	shf.l.wrap.b32 	%r5118, %r5112, %r5113, 25;
	shf.l.wrap.b32 	%r5119, %r5113, %r5112, 25;
	mov.b64 	%rd6713, {%r5119, %r5118};
	xor.b64  	%rd6714, %rd6712, %rd6713;
	and.b64  	%rd6715, %rd6693, %rd6666;
	xor.b64  	%rd6716, %rd6693, %rd6666;
	and.b64  	%rd6717, %rd6716, %rd6639;
	or.b64  	%rd6718, %rd6717, %rd6715;
	add.s64 	%rd6719, %rd6708, %rd6718;
	add.s64 	%rd6720, %rd6719, %rd6714;
	add.s32 	%r5120, %r7678, 8;
	mul.wide.s32 	%rd6721, %r5120, 8;
	add.s64 	%rd6722, %rd9915, %rd6721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5121,%dummy}, %rd6709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5122}, %rd6709;
	}
	shf.r.wrap.b32 	%r5123, %r5122, %r5121, 14;
	shf.r.wrap.b32 	%r5124, %r5121, %r5122, 14;
	mov.b64 	%rd6723, {%r5124, %r5123};
	shf.r.wrap.b32 	%r5125, %r5122, %r5121, 18;
	shf.r.wrap.b32 	%r5126, %r5121, %r5122, 18;
	mov.b64 	%rd6724, {%r5126, %r5125};
	xor.b64  	%rd6725, %rd6724, %rd6723;
	shf.l.wrap.b32 	%r5127, %r5121, %r5122, 23;
	shf.l.wrap.b32 	%r5128, %r5122, %r5121, 23;
	mov.b64 	%rd6726, {%r5128, %r5127};
	xor.b64  	%rd6727, %rd6725, %rd6726;
	xor.b64  	%rd6728, %rd6682, %rd6655;
	and.b64  	%rd6729, %rd6709, %rd6728;
	xor.b64  	%rd6730, %rd6729, %rd6655;
	add.s64 	%rd6731, %rd6628, %rd10210;
	ld.const.u64 	%rd6732, [%rd6722];
	add.s64 	%rd6733, %rd6731, %rd6732;
	add.s64 	%rd6734, %rd6733, %rd6730;
	add.s64 	%rd6735, %rd6734, %rd6727;
	add.s64 	%rd6736, %rd6735, %rd6639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5129,%dummy}, %rd6720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5130}, %rd6720;
	}
	shf.r.wrap.b32 	%r5131, %r5130, %r5129, 28;
	shf.r.wrap.b32 	%r5132, %r5129, %r5130, 28;
	mov.b64 	%rd6737, {%r5132, %r5131};
	shf.l.wrap.b32 	%r5133, %r5129, %r5130, 30;
	shf.l.wrap.b32 	%r5134, %r5130, %r5129, 30;
	mov.b64 	%rd6738, {%r5134, %r5133};
	xor.b64  	%rd6739, %rd6738, %rd6737;
	shf.l.wrap.b32 	%r5135, %r5129, %r5130, 25;
	shf.l.wrap.b32 	%r5136, %r5130, %r5129, 25;
	mov.b64 	%rd6740, {%r5136, %r5135};
	xor.b64  	%rd6741, %rd6739, %rd6740;
	and.b64  	%rd6742, %rd6720, %rd6693;
	xor.b64  	%rd6743, %rd6720, %rd6693;
	and.b64  	%rd6744, %rd6743, %rd6666;
	or.b64  	%rd6745, %rd6744, %rd6742;
	add.s64 	%rd6746, %rd6735, %rd6745;
	add.s64 	%rd6747, %rd6746, %rd6741;
	add.s32 	%r5137, %r7678, 9;
	mul.wide.s32 	%rd6748, %r5137, 8;
	add.s64 	%rd6749, %rd9915, %rd6748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5138,%dummy}, %rd6736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5139}, %rd6736;
	}
	shf.r.wrap.b32 	%r5140, %r5139, %r5138, 14;
	shf.r.wrap.b32 	%r5141, %r5138, %r5139, 14;
	mov.b64 	%rd6750, {%r5141, %r5140};
	shf.r.wrap.b32 	%r5142, %r5139, %r5138, 18;
	shf.r.wrap.b32 	%r5143, %r5138, %r5139, 18;
	mov.b64 	%rd6751, {%r5143, %r5142};
	xor.b64  	%rd6752, %rd6751, %rd6750;
	shf.l.wrap.b32 	%r5144, %r5138, %r5139, 23;
	shf.l.wrap.b32 	%r5145, %r5139, %r5138, 23;
	mov.b64 	%rd6753, {%r5145, %r5144};
	xor.b64  	%rd6754, %rd6752, %rd6753;
	xor.b64  	%rd6755, %rd6709, %rd6682;
	and.b64  	%rd6756, %rd6736, %rd6755;
	xor.b64  	%rd6757, %rd6756, %rd6682;
	add.s64 	%rd6758, %rd6655, %rd10209;
	ld.const.u64 	%rd6759, [%rd6749];
	add.s64 	%rd6760, %rd6758, %rd6759;
	add.s64 	%rd6761, %rd6760, %rd6757;
	add.s64 	%rd6762, %rd6761, %rd6754;
	add.s64 	%rd6763, %rd6762, %rd6666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5146,%dummy}, %rd6747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5147}, %rd6747;
	}
	shf.r.wrap.b32 	%r5148, %r5147, %r5146, 28;
	shf.r.wrap.b32 	%r5149, %r5146, %r5147, 28;
	mov.b64 	%rd6764, {%r5149, %r5148};
	shf.l.wrap.b32 	%r5150, %r5146, %r5147, 30;
	shf.l.wrap.b32 	%r5151, %r5147, %r5146, 30;
	mov.b64 	%rd6765, {%r5151, %r5150};
	xor.b64  	%rd6766, %rd6765, %rd6764;
	shf.l.wrap.b32 	%r5152, %r5146, %r5147, 25;
	shf.l.wrap.b32 	%r5153, %r5147, %r5146, 25;
	mov.b64 	%rd6767, {%r5153, %r5152};
	xor.b64  	%rd6768, %rd6766, %rd6767;
	and.b64  	%rd6769, %rd6747, %rd6720;
	xor.b64  	%rd6770, %rd6747, %rd6720;
	and.b64  	%rd6771, %rd6770, %rd6693;
	or.b64  	%rd6772, %rd6771, %rd6769;
	add.s64 	%rd6773, %rd6762, %rd6772;
	add.s64 	%rd6774, %rd6773, %rd6768;
	add.s32 	%r5154, %r7678, 10;
	mul.wide.s32 	%rd6775, %r5154, 8;
	add.s64 	%rd6776, %rd9915, %rd6775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5155,%dummy}, %rd6763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5156}, %rd6763;
	}
	shf.r.wrap.b32 	%r5157, %r5156, %r5155, 14;
	shf.r.wrap.b32 	%r5158, %r5155, %r5156, 14;
	mov.b64 	%rd6777, {%r5158, %r5157};
	shf.r.wrap.b32 	%r5159, %r5156, %r5155, 18;
	shf.r.wrap.b32 	%r5160, %r5155, %r5156, 18;
	mov.b64 	%rd6778, {%r5160, %r5159};
	xor.b64  	%rd6779, %rd6778, %rd6777;
	shf.l.wrap.b32 	%r5161, %r5155, %r5156, 23;
	shf.l.wrap.b32 	%r5162, %r5156, %r5155, 23;
	mov.b64 	%rd6780, {%r5162, %r5161};
	xor.b64  	%rd6781, %rd6779, %rd6780;
	xor.b64  	%rd6782, %rd6736, %rd6709;
	and.b64  	%rd6783, %rd6763, %rd6782;
	xor.b64  	%rd6784, %rd6783, %rd6709;
	add.s64 	%rd6785, %rd6682, %rd10208;
	ld.const.u64 	%rd6786, [%rd6776];
	add.s64 	%rd6787, %rd6785, %rd6786;
	add.s64 	%rd6788, %rd6787, %rd6784;
	add.s64 	%rd6789, %rd6788, %rd6781;
	add.s64 	%rd6790, %rd6789, %rd6693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5163,%dummy}, %rd6774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5164}, %rd6774;
	}
	shf.r.wrap.b32 	%r5165, %r5164, %r5163, 28;
	shf.r.wrap.b32 	%r5166, %r5163, %r5164, 28;
	mov.b64 	%rd6791, {%r5166, %r5165};
	shf.l.wrap.b32 	%r5167, %r5163, %r5164, 30;
	shf.l.wrap.b32 	%r5168, %r5164, %r5163, 30;
	mov.b64 	%rd6792, {%r5168, %r5167};
	xor.b64  	%rd6793, %rd6792, %rd6791;
	shf.l.wrap.b32 	%r5169, %r5163, %r5164, 25;
	shf.l.wrap.b32 	%r5170, %r5164, %r5163, 25;
	mov.b64 	%rd6794, {%r5170, %r5169};
	xor.b64  	%rd6795, %rd6793, %rd6794;
	and.b64  	%rd6796, %rd6774, %rd6747;
	xor.b64  	%rd6797, %rd6774, %rd6747;
	and.b64  	%rd6798, %rd6797, %rd6720;
	or.b64  	%rd6799, %rd6798, %rd6796;
	add.s64 	%rd6800, %rd6789, %rd6799;
	add.s64 	%rd6801, %rd6800, %rd6795;
	add.s32 	%r5171, %r7678, 11;
	mul.wide.s32 	%rd6802, %r5171, 8;
	add.s64 	%rd6803, %rd9915, %rd6802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5172,%dummy}, %rd6790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5173}, %rd6790;
	}
	shf.r.wrap.b32 	%r5174, %r5173, %r5172, 14;
	shf.r.wrap.b32 	%r5175, %r5172, %r5173, 14;
	mov.b64 	%rd6804, {%r5175, %r5174};
	shf.r.wrap.b32 	%r5176, %r5173, %r5172, 18;
	shf.r.wrap.b32 	%r5177, %r5172, %r5173, 18;
	mov.b64 	%rd6805, {%r5177, %r5176};
	xor.b64  	%rd6806, %rd6805, %rd6804;
	shf.l.wrap.b32 	%r5178, %r5172, %r5173, 23;
	shf.l.wrap.b32 	%r5179, %r5173, %r5172, 23;
	mov.b64 	%rd6807, {%r5179, %r5178};
	xor.b64  	%rd6808, %rd6806, %rd6807;
	xor.b64  	%rd6809, %rd6763, %rd6736;
	and.b64  	%rd6810, %rd6790, %rd6809;
	xor.b64  	%rd6811, %rd6810, %rd6736;
	add.s64 	%rd6812, %rd6709, %rd10207;
	ld.const.u64 	%rd6813, [%rd6803];
	add.s64 	%rd6814, %rd6812, %rd6813;
	add.s64 	%rd6815, %rd6814, %rd6811;
	add.s64 	%rd6816, %rd6815, %rd6808;
	add.s64 	%rd6817, %rd6816, %rd6720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5180,%dummy}, %rd6801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5181}, %rd6801;
	}
	shf.r.wrap.b32 	%r5182, %r5181, %r5180, 28;
	shf.r.wrap.b32 	%r5183, %r5180, %r5181, 28;
	mov.b64 	%rd6818, {%r5183, %r5182};
	shf.l.wrap.b32 	%r5184, %r5180, %r5181, 30;
	shf.l.wrap.b32 	%r5185, %r5181, %r5180, 30;
	mov.b64 	%rd6819, {%r5185, %r5184};
	xor.b64  	%rd6820, %rd6819, %rd6818;
	shf.l.wrap.b32 	%r5186, %r5180, %r5181, 25;
	shf.l.wrap.b32 	%r5187, %r5181, %r5180, 25;
	mov.b64 	%rd6821, {%r5187, %r5186};
	xor.b64  	%rd6822, %rd6820, %rd6821;
	and.b64  	%rd6823, %rd6801, %rd6774;
	xor.b64  	%rd6824, %rd6801, %rd6774;
	and.b64  	%rd6825, %rd6824, %rd6747;
	or.b64  	%rd6826, %rd6825, %rd6823;
	add.s64 	%rd6827, %rd6816, %rd6826;
	add.s64 	%rd6828, %rd6827, %rd6822;
	add.s32 	%r5188, %r7678, 12;
	mul.wide.s32 	%rd6829, %r5188, 8;
	add.s64 	%rd6830, %rd9915, %rd6829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5189,%dummy}, %rd6817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5190}, %rd6817;
	}
	shf.r.wrap.b32 	%r5191, %r5190, %r5189, 14;
	shf.r.wrap.b32 	%r5192, %r5189, %r5190, 14;
	mov.b64 	%rd6831, {%r5192, %r5191};
	shf.r.wrap.b32 	%r5193, %r5190, %r5189, 18;
	shf.r.wrap.b32 	%r5194, %r5189, %r5190, 18;
	mov.b64 	%rd6832, {%r5194, %r5193};
	xor.b64  	%rd6833, %rd6832, %rd6831;
	shf.l.wrap.b32 	%r5195, %r5189, %r5190, 23;
	shf.l.wrap.b32 	%r5196, %r5190, %r5189, 23;
	mov.b64 	%rd6834, {%r5196, %r5195};
	xor.b64  	%rd6835, %rd6833, %rd6834;
	xor.b64  	%rd6836, %rd6790, %rd6763;
	and.b64  	%rd6837, %rd6817, %rd6836;
	xor.b64  	%rd6838, %rd6837, %rd6763;
	add.s64 	%rd6839, %rd6736, %rd10206;
	ld.const.u64 	%rd6840, [%rd6830];
	add.s64 	%rd6841, %rd6839, %rd6840;
	add.s64 	%rd6842, %rd6841, %rd6838;
	add.s64 	%rd6843, %rd6842, %rd6835;
	add.s64 	%rd10218, %rd6843, %rd6747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5197,%dummy}, %rd6828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5198}, %rd6828;
	}
	shf.r.wrap.b32 	%r5199, %r5198, %r5197, 28;
	shf.r.wrap.b32 	%r5200, %r5197, %r5198, 28;
	mov.b64 	%rd6844, {%r5200, %r5199};
	shf.l.wrap.b32 	%r5201, %r5197, %r5198, 30;
	shf.l.wrap.b32 	%r5202, %r5198, %r5197, 30;
	mov.b64 	%rd6845, {%r5202, %r5201};
	xor.b64  	%rd6846, %rd6845, %rd6844;
	shf.l.wrap.b32 	%r5203, %r5197, %r5198, 25;
	shf.l.wrap.b32 	%r5204, %r5198, %r5197, 25;
	mov.b64 	%rd6847, {%r5204, %r5203};
	xor.b64  	%rd6848, %rd6846, %rd6847;
	and.b64  	%rd6849, %rd6828, %rd6801;
	xor.b64  	%rd6850, %rd6828, %rd6801;
	and.b64  	%rd6851, %rd6850, %rd6774;
	or.b64  	%rd6852, %rd6851, %rd6849;
	add.s64 	%rd6853, %rd6843, %rd6852;
	add.s64 	%rd10214, %rd6853, %rd6848;
	add.s32 	%r5205, %r7678, 13;
	mul.wide.s32 	%rd6854, %r5205, 8;
	add.s64 	%rd6855, %rd9915, %rd6854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5206,%dummy}, %rd10218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5207}, %rd10218;
	}
	shf.r.wrap.b32 	%r5208, %r5207, %r5206, 14;
	shf.r.wrap.b32 	%r5209, %r5206, %r5207, 14;
	mov.b64 	%rd6856, {%r5209, %r5208};
	shf.r.wrap.b32 	%r5210, %r5207, %r5206, 18;
	shf.r.wrap.b32 	%r5211, %r5206, %r5207, 18;
	mov.b64 	%rd6857, {%r5211, %r5210};
	xor.b64  	%rd6858, %rd6857, %rd6856;
	shf.l.wrap.b32 	%r5212, %r5206, %r5207, 23;
	shf.l.wrap.b32 	%r5213, %r5207, %r5206, 23;
	mov.b64 	%rd6859, {%r5213, %r5212};
	xor.b64  	%rd6860, %rd6858, %rd6859;
	xor.b64  	%rd6861, %rd6817, %rd6790;
	and.b64  	%rd6862, %rd10218, %rd6861;
	xor.b64  	%rd6863, %rd6862, %rd6790;
	add.s64 	%rd6864, %rd6763, %rd10205;
	ld.const.u64 	%rd6865, [%rd6855];
	add.s64 	%rd6866, %rd6864, %rd6865;
	add.s64 	%rd6867, %rd6866, %rd6863;
	add.s64 	%rd6868, %rd6867, %rd6860;
	add.s64 	%rd10217, %rd6868, %rd6774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5214,%dummy}, %rd10214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5215}, %rd10214;
	}
	shf.r.wrap.b32 	%r5216, %r5215, %r5214, 28;
	shf.r.wrap.b32 	%r5217, %r5214, %r5215, 28;
	mov.b64 	%rd6869, {%r5217, %r5216};
	shf.l.wrap.b32 	%r5218, %r5214, %r5215, 30;
	shf.l.wrap.b32 	%r5219, %r5215, %r5214, 30;
	mov.b64 	%rd6870, {%r5219, %r5218};
	xor.b64  	%rd6871, %rd6870, %rd6869;
	shf.l.wrap.b32 	%r5220, %r5214, %r5215, 25;
	shf.l.wrap.b32 	%r5221, %r5215, %r5214, 25;
	mov.b64 	%rd6872, {%r5221, %r5220};
	xor.b64  	%rd6873, %rd6871, %rd6872;
	and.b64  	%rd6874, %rd10214, %rd6828;
	xor.b64  	%rd6875, %rd10214, %rd6828;
	and.b64  	%rd6876, %rd6875, %rd6801;
	or.b64  	%rd6877, %rd6876, %rd6874;
	add.s64 	%rd6878, %rd6868, %rd6877;
	add.s64 	%rd10213, %rd6878, %rd6873;
	add.s32 	%r5222, %r7678, 14;
	mul.wide.s32 	%rd6879, %r5222, 8;
	add.s64 	%rd6880, %rd9915, %rd6879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5223,%dummy}, %rd10217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5224}, %rd10217;
	}
	shf.r.wrap.b32 	%r5225, %r5224, %r5223, 14;
	shf.r.wrap.b32 	%r5226, %r5223, %r5224, 14;
	mov.b64 	%rd6881, {%r5226, %r5225};
	shf.r.wrap.b32 	%r5227, %r5224, %r5223, 18;
	shf.r.wrap.b32 	%r5228, %r5223, %r5224, 18;
	mov.b64 	%rd6882, {%r5228, %r5227};
	xor.b64  	%rd6883, %rd6882, %rd6881;
	shf.l.wrap.b32 	%r5229, %r5223, %r5224, 23;
	shf.l.wrap.b32 	%r5230, %r5224, %r5223, 23;
	mov.b64 	%rd6884, {%r5230, %r5229};
	xor.b64  	%rd6885, %rd6883, %rd6884;
	xor.b64  	%rd6886, %rd10218, %rd6817;
	and.b64  	%rd6887, %rd10217, %rd6886;
	xor.b64  	%rd6888, %rd6887, %rd6817;
	add.s64 	%rd6889, %rd6790, %rd10204;
	ld.const.u64 	%rd6890, [%rd6880];
	add.s64 	%rd6891, %rd6889, %rd6890;
	add.s64 	%rd6892, %rd6891, %rd6888;
	add.s64 	%rd6893, %rd6892, %rd6885;
	add.s64 	%rd10216, %rd6893, %rd6801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5231,%dummy}, %rd10213;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5232}, %rd10213;
	}
	shf.r.wrap.b32 	%r5233, %r5232, %r5231, 28;
	shf.r.wrap.b32 	%r5234, %r5231, %r5232, 28;
	mov.b64 	%rd6894, {%r5234, %r5233};
	shf.l.wrap.b32 	%r5235, %r5231, %r5232, 30;
	shf.l.wrap.b32 	%r5236, %r5232, %r5231, 30;
	mov.b64 	%rd6895, {%r5236, %r5235};
	xor.b64  	%rd6896, %rd6895, %rd6894;
	shf.l.wrap.b32 	%r5237, %r5231, %r5232, 25;
	shf.l.wrap.b32 	%r5238, %r5232, %r5231, 25;
	mov.b64 	%rd6897, {%r5238, %r5237};
	xor.b64  	%rd6898, %rd6896, %rd6897;
	and.b64  	%rd6899, %rd10213, %rd10214;
	xor.b64  	%rd6900, %rd10213, %rd10214;
	and.b64  	%rd6901, %rd6900, %rd6828;
	or.b64  	%rd6902, %rd6901, %rd6899;
	add.s64 	%rd6903, %rd6893, %rd6902;
	add.s64 	%rd10212, %rd6903, %rd6898;
	add.s32 	%r5239, %r7678, 15;
	mul.wide.s32 	%rd6904, %r5239, 8;
	add.s64 	%rd6905, %rd9915, %rd6904;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5240,%dummy}, %rd10216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5241}, %rd10216;
	}
	shf.r.wrap.b32 	%r5242, %r5241, %r5240, 14;
	shf.r.wrap.b32 	%r5243, %r5240, %r5241, 14;
	mov.b64 	%rd6906, {%r5243, %r5242};
	shf.r.wrap.b32 	%r5244, %r5241, %r5240, 18;
	shf.r.wrap.b32 	%r5245, %r5240, %r5241, 18;
	mov.b64 	%rd6907, {%r5245, %r5244};
	xor.b64  	%rd6908, %rd6907, %rd6906;
	shf.l.wrap.b32 	%r5246, %r5240, %r5241, 23;
	shf.l.wrap.b32 	%r5247, %r5241, %r5240, 23;
	mov.b64 	%rd6909, {%r5247, %r5246};
	xor.b64  	%rd6910, %rd6908, %rd6909;
	xor.b64  	%rd6911, %rd10217, %rd10218;
	and.b64  	%rd6912, %rd10216, %rd6911;
	xor.b64  	%rd6913, %rd6912, %rd10218;
	add.s64 	%rd6914, %rd6817, %rd10203;
	ld.const.u64 	%rd6915, [%rd6905];
	add.s64 	%rd6916, %rd6914, %rd6915;
	add.s64 	%rd6917, %rd6916, %rd6913;
	add.s64 	%rd6918, %rd6917, %rd6910;
	add.s64 	%rd10215, %rd6918, %rd6828;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5248,%dummy}, %rd10212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5249}, %rd10212;
	}
	shf.r.wrap.b32 	%r5250, %r5249, %r5248, 28;
	shf.r.wrap.b32 	%r5251, %r5248, %r5249, 28;
	mov.b64 	%rd6919, {%r5251, %r5250};
	shf.l.wrap.b32 	%r5252, %r5248, %r5249, 30;
	shf.l.wrap.b32 	%r5253, %r5249, %r5248, 30;
	mov.b64 	%rd6920, {%r5253, %r5252};
	xor.b64  	%rd6921, %rd6920, %rd6919;
	shf.l.wrap.b32 	%r5254, %r5248, %r5249, 25;
	shf.l.wrap.b32 	%r5255, %r5249, %r5248, 25;
	mov.b64 	%rd6922, {%r5255, %r5254};
	xor.b64  	%rd6923, %rd6921, %rd6922;
	and.b64  	%rd6924, %rd10212, %rd10213;
	xor.b64  	%rd6925, %rd10212, %rd10213;
	and.b64  	%rd6926, %rd6925, %rd10214;
	or.b64  	%rd6927, %rd6926, %rd6924;
	add.s64 	%rd6928, %rd6918, %rd6927;
	add.s64 	%rd10211, %rd6928, %rd6923;
	add.s32 	%r7678, %r7678, 16;
	setp.lt.s32	%p49, %r7678, 80;
	@%p49 bra 	BB3_25;

	add.u64 	%rd10021, %SPL, 528;
	add.s64 	%rd10020, %rd10021, 248;
	add.s64 	%rd10019, %rd10021, 240;
	add.u64 	%rd10017, %SPL, 528;
	add.s64 	%rd10016, %rd10017, 232;
	add.s64 	%rd10015, %rd10017, 224;
	add.s64 	%rd10014, %rd10017, 216;
	add.u64 	%rd9955, %SPL, 528;
	add.s64 	%rd9954, %rd9955, 208;
	add.s64 	%rd9953, %rd9955, 200;
	add.s64 	%rd9952, %rd9955, 384;
	add.s64 	%rd9951, %rd9955, 376;
	add.s64 	%rd9950, %rd9955, 368;
	add.s64 	%rd9949, %rd9955, 360;
	add.u64 	%rd9933, %SPL, 528;
	add.s64 	%rd9932, %rd9933, 352;
	add.s64 	%rd9931, %rd9933, 344;
	add.s64 	%rd9930, %rd9933, 336;
	add.s64 	%rd9929, %rd9933, 328;
	add.s64 	%rd9928, %rd9933, 320;
	add.s64 	%rd9927, %rd9933, 312;
	add.s64 	%rd9926, %rd9933, 304;
	add.s64 	%rd9925, %rd9933, 296;
	add.s64 	%rd9924, %rd9933, 288;
	add.s64 	%rd9923, %rd9933, 280;
	add.s64 	%rd9922, %rd9933, 272;
	add.s64 	%rd9921, %rd9933, 264;
	mov.u32 	%r7536, 255;
	add.s64 	%rd6929, %rd10202, %rd10211;
	st.local.u64 	[%rd9933], %rd6929;
	add.s64 	%rd6930, %rd10201, %rd10212;
	st.local.u64 	[%rd9933+8], %rd6930;
	add.s64 	%rd6931, %rd10200, %rd10213;
	st.local.u64 	[%rd9933+16], %rd6931;
	add.s64 	%rd6932, %rd10199, %rd10214;
	st.local.u64 	[%rd9933+24], %rd6932;
	add.s64 	%rd6933, %rd10198, %rd10215;
	st.local.u64 	[%rd9933+32], %rd6933;
	add.s64 	%rd6934, %rd10197, %rd10216;
	st.local.u64 	[%rd9933+40], %rd6934;
	add.s64 	%rd6935, %rd10196, %rd10217;
	st.local.u64 	[%rd9933+48], %rd6935;
	add.s64 	%rd6936, %rd10195, %rd10218;
	st.local.u64 	[%rd9933+56], %rd6936;
	mov.b64	{%r5256, %r5257}, %rd6929;
	mov.b64	{%r5258, %r5259}, %rd6930;
	mov.b64	{%r5260, %r5261}, %rd6931;
	mov.b64	{%r5262, %r5263}, %rd6932;
	mov.b64	{%r5264, %r5265}, %rd6933;
	mov.b64	{%r5266, %r5267}, %rd6934;
	mov.b64	{%r5268, %r5269}, %rd6935;
	mov.b64	{%r5270, %r5271}, %rd6936;
	ld.local.u32 	%r5272, [%rd9933+392];
	add.s32 	%r352, %r5272, 64;
	not.b32 	%r5273, %r352;
	st.local.u32 	[%rd9933+392], %r352;
	and.b32  	%r5274, %r352, 127;
	bfe.u32 	%r5275, %r352, 2, 2;
	and.b32  	%r5276, %r5273, 3;
	shl.b32 	%r5277, %r5276, 3;
	shl.b32 	%r5279, %r7536, %r5277;
	setp.eq.s32	%p50, %r5275, 0;
	selp.b32	%r5280, %r5279, 0, %p50;
	setp.eq.s32	%p51, %r5275, 1;
	selp.b32	%r5281, %r5279, 0, %p51;
	setp.eq.s32	%p52, %r5275, 2;
	selp.b32	%r5282, %r5279, 0, %p52;
	setp.eq.s32	%p53, %r5275, 3;
	selp.b32	%r5283, %r5279, 0, %p53;
	bfe.u32 	%r5284, %r352, 4, 3;
	setp.eq.s32	%p54, %r5284, 0;
	selp.b32	%r5285, -2139062144, 0, %p54;
	and.b32  	%r5286, %r5280, %r5285;
	or.b32  	%r7709, %r5286, %r5257;
	and.b32  	%r5287, %r5281, %r5285;
	or.b32  	%r7708, %r5287, %r5256;
	st.local.v2.u32 	[%rd9921], {%r7709, %r7708};
	and.b32  	%r5288, %r5282, %r5285;
	or.b32  	%r7707, %r5288, %r5259;
	and.b32  	%r5289, %r5283, %r5285;
	or.b32  	%r7706, %r5289, %r5258;
	st.local.v2.u32 	[%rd9922], {%r7707, %r7706};
	setp.eq.s32	%p55, %r5284, 1;
	selp.b32	%r5290, -2139062144, 0, %p55;
	and.b32  	%r5291, %r5280, %r5290;
	or.b32  	%r7705, %r5291, %r5261;
	and.b32  	%r5292, %r5281, %r5290;
	or.b32  	%r7704, %r5292, %r5260;
	st.local.v2.u32 	[%rd9923], {%r7705, %r7704};
	and.b32  	%r5293, %r5282, %r5290;
	or.b32  	%r7703, %r5263, %r5293;
	and.b32  	%r5294, %r5283, %r5290;
	or.b32  	%r7702, %r5262, %r5294;
	st.local.v2.u32 	[%rd9924], {%r7703, %r7702};
	setp.eq.s32	%p56, %r5284, 2;
	selp.b32	%r5295, -2139062144, 0, %p56;
	and.b32  	%r5296, %r5280, %r5295;
	or.b32  	%r7701, %r5265, %r5296;
	and.b32  	%r5297, %r5281, %r5295;
	or.b32  	%r7700, %r5264, %r5297;
	st.local.v2.u32 	[%rd9925], {%r7701, %r7700};
	and.b32  	%r5298, %r5282, %r5295;
	or.b32  	%r7699, %r5267, %r5298;
	and.b32  	%r5299, %r5283, %r5295;
	or.b32  	%r7698, %r5266, %r5299;
	st.local.v2.u32 	[%rd9926], {%r7699, %r7698};
	setp.eq.s32	%p57, %r5284, 3;
	selp.b32	%r5300, -2139062144, 0, %p57;
	and.b32  	%r5301, %r5280, %r5300;
	or.b32  	%r7697, %r5269, %r5301;
	and.b32  	%r5302, %r5281, %r5300;
	or.b32  	%r7696, %r5268, %r5302;
	st.local.v2.u32 	[%rd9927], {%r7697, %r7696};
	and.b32  	%r5303, %r5282, %r5300;
	or.b32  	%r7695, %r5271, %r5303;
	and.b32  	%r5304, %r5283, %r5300;
	or.b32  	%r7694, %r5270, %r5304;
	st.local.v2.u32 	[%rd9928], {%r7695, %r7694};
	setp.eq.s32	%p58, %r5284, 4;
	selp.b32	%r5305, -2139062144, 0, %p58;
	and.b32  	%r7693, %r5280, %r5305;
	and.b32  	%r7692, %r5281, %r5305;
	st.local.v2.u32 	[%rd9929], {%r7693, %r7692};
	and.b32  	%r7691, %r5282, %r5305;
	and.b32  	%r7690, %r5283, %r5305;
	st.local.v2.u32 	[%rd9930], {%r7691, %r7690};
	setp.eq.s32	%p59, %r5284, 5;
	selp.b32	%r5306, -2139062144, 0, %p59;
	and.b32  	%r7689, %r5280, %r5306;
	and.b32  	%r7688, %r5281, %r5306;
	st.local.v2.u32 	[%rd9931], {%r7689, %r7688};
	and.b32  	%r7687, %r5282, %r5306;
	and.b32  	%r7686, %r5283, %r5306;
	st.local.v2.u32 	[%rd9932], {%r7687, %r7686};
	setp.eq.s32	%p60, %r5284, 6;
	selp.b32	%r5307, -2139062144, 0, %p60;
	and.b32  	%r7685, %r5280, %r5307;
	and.b32  	%r7684, %r5281, %r5307;
	st.local.v2.u32 	[%rd9949], {%r7685, %r7684};
	and.b32  	%r7683, %r5282, %r5307;
	and.b32  	%r7682, %r5283, %r5307;
	st.local.v2.u32 	[%rd9950], {%r7683, %r7682};
	setp.eq.s32	%p61, %r5284, 7;
	selp.b32	%r5308, -2139062144, 0, %p61;
	and.b32  	%r7681, %r5280, %r5308;
	and.b32  	%r7680, %r5281, %r5308;
	st.local.v2.u32 	[%rd9951], {%r7681, %r7680};
	and.b32  	%r383, %r5282, %r5308;
	and.b32  	%r384, %r5283, %r5308;
	st.local.v2.u32 	[%rd9952], {%r383, %r384};
	ld.local.u64 	%rd10258, [%rd9953];
	ld.local.u64 	%rd10257, [%rd9954];
	ld.local.u64 	%rd10256, [%rd10014];
	ld.local.u64 	%rd10255, [%rd10015];
	ld.local.u64 	%rd10254, [%rd10016];
	ld.local.u64 	%rd10253, [%rd10019];
	ld.local.u64 	%rd10252, [%rd10020];
	ld.local.u64 	%rd10251, [%rd460];
	setp.lt.u32	%p62, %r5274, 112;
	@%p62 bra 	BB3_30;

	mov.b64	%rd10243, {%r7708, %r7709};
	mov.b64	%rd10244, {%r7706, %r7707};
	mov.b64	%rd10245, {%r7704, %r7705};
	mov.b64	%rd10246, {%r7702, %r7703};
	mov.b64	%rd10247, {%r7700, %r7701};
	mov.b64	%rd10248, {%r7698, %r7699};
	mov.b64	%rd10249, {%r7696, %r7697};
	mov.b64	%rd10250, {%r7694, %r7695};
	mov.b64	%rd10234, {%r7692, %r7693};
	mov.b64	%rd10233, {%r7690, %r7691};
	mov.b64	%rd10232, {%r7688, %r7689};
	mov.b64	%rd10231, {%r7686, %r7687};
	mov.b64	%rd10230, {%r7684, %r7685};
	mov.b64	%rd10229, {%r7682, %r7683};
	mov.b64	%rd10228, {%r7680, %r7681};
	mov.b64	%rd10227, {%r384, %r383};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5310,%dummy}, %rd10254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5311}, %rd10254;
	}
	shf.r.wrap.b32 	%r5312, %r5311, %r5310, 18;
	shf.r.wrap.b32 	%r5313, %r5310, %r5311, 18;
	mov.b64 	%rd6937, {%r5313, %r5312};
	shf.r.wrap.b32 	%r5314, %r5311, %r5310, 14;
	shf.r.wrap.b32 	%r5315, %r5310, %r5311, 14;
	mov.b64 	%rd6938, {%r5315, %r5314};
	xor.b64  	%rd6939, %rd6937, %rd6938;
	shf.l.wrap.b32 	%r5316, %r5310, %r5311, 23;
	shf.l.wrap.b32 	%r5317, %r5311, %r5310, 23;
	mov.b64 	%rd6940, {%r5317, %r5316};
	xor.b64  	%rd6941, %rd6939, %rd6940;
	xor.b64  	%rd6942, %rd10252, %rd10253;
	and.b64  	%rd6943, %rd6942, %rd10254;
	xor.b64  	%rd6944, %rd6943, %rd10252;
	add.s64 	%rd6945, %rd6944, %rd10251;
	add.s64 	%rd6946, %rd6945, %rd10243;
	add.s64 	%rd6947, %rd6946, %rd10144;
	add.s64 	%rd6948, %rd6947, %rd6941;
	add.s64 	%rd6949, %rd6948, %rd10255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5318}, %rd10258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5319,%dummy}, %rd10258;
	}
	shf.l.wrap.b32 	%r5320, %r5319, %r5318, 30;
	shf.l.wrap.b32 	%r5321, %r5318, %r5319, 30;
	mov.b64 	%rd6950, {%r5321, %r5320};
	shf.r.wrap.b32 	%r5322, %r5318, %r5319, 28;
	shf.r.wrap.b32 	%r5323, %r5319, %r5318, 28;
	mov.b64 	%rd6951, {%r5323, %r5322};
	xor.b64  	%rd6952, %rd6950, %rd6951;
	shf.l.wrap.b32 	%r5324, %r5319, %r5318, 25;
	shf.l.wrap.b32 	%r5325, %r5318, %r5319, 25;
	mov.b64 	%rd6953, {%r5325, %r5324};
	xor.b64  	%rd6954, %rd6952, %rd6953;
	xor.b64  	%rd6955, %rd10257, %rd10258;
	and.b64  	%rd6956, %rd10256, %rd6955;
	and.b64  	%rd6957, %rd10257, %rd10258;
	or.b64  	%rd6958, %rd6956, %rd6957;
	add.s64 	%rd6959, %rd6948, %rd6958;
	add.s64 	%rd6960, %rd6959, %rd6954;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5326,%dummy}, %rd6949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5327}, %rd6949;
	}
	shf.r.wrap.b32 	%r5328, %r5327, %r5326, 14;
	shf.r.wrap.b32 	%r5329, %r5326, %r5327, 14;
	mov.b64 	%rd6961, {%r5329, %r5328};
	shf.r.wrap.b32 	%r5330, %r5327, %r5326, 18;
	shf.r.wrap.b32 	%r5331, %r5326, %r5327, 18;
	mov.b64 	%rd6962, {%r5331, %r5330};
	xor.b64  	%rd6963, %rd6962, %rd6961;
	shf.l.wrap.b32 	%r5332, %r5326, %r5327, 23;
	shf.l.wrap.b32 	%r5333, %r5327, %r5326, 23;
	mov.b64 	%rd6964, {%r5333, %r5332};
	xor.b64  	%rd6965, %rd6963, %rd6964;
	xor.b64  	%rd6966, %rd10253, %rd10254;
	and.b64  	%rd6967, %rd6949, %rd6966;
	xor.b64  	%rd6968, %rd6967, %rd10253;
	add.s64 	%rd6969, %rd10244, %rd10252;
	add.s64 	%rd6970, %rd6969, %rd10143;
	add.s64 	%rd6971, %rd6970, %rd6968;
	add.s64 	%rd6972, %rd6971, %rd6965;
	add.s64 	%rd6973, %rd6972, %rd10256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5334,%dummy}, %rd6960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5335}, %rd6960;
	}
	shf.r.wrap.b32 	%r5336, %r5335, %r5334, 28;
	shf.r.wrap.b32 	%r5337, %r5334, %r5335, 28;
	mov.b64 	%rd6974, {%r5337, %r5336};
	shf.l.wrap.b32 	%r5338, %r5334, %r5335, 30;
	shf.l.wrap.b32 	%r5339, %r5335, %r5334, 30;
	mov.b64 	%rd6975, {%r5339, %r5338};
	xor.b64  	%rd6976, %rd6975, %rd6974;
	shf.l.wrap.b32 	%r5340, %r5334, %r5335, 25;
	shf.l.wrap.b32 	%r5341, %r5335, %r5334, 25;
	mov.b64 	%rd6977, {%r5341, %r5340};
	xor.b64  	%rd6978, %rd6976, %rd6977;
	and.b64  	%rd6979, %rd6960, %rd10258;
	xor.b64  	%rd6980, %rd6960, %rd10258;
	and.b64  	%rd6981, %rd6980, %rd10257;
	or.b64  	%rd6982, %rd6981, %rd6979;
	add.s64 	%rd6983, %rd6972, %rd6982;
	add.s64 	%rd6984, %rd6983, %rd6978;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5342,%dummy}, %rd6973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5343}, %rd6973;
	}
	shf.r.wrap.b32 	%r5344, %r5343, %r5342, 14;
	shf.r.wrap.b32 	%r5345, %r5342, %r5343, 14;
	mov.b64 	%rd6985, {%r5345, %r5344};
	shf.r.wrap.b32 	%r5346, %r5343, %r5342, 18;
	shf.r.wrap.b32 	%r5347, %r5342, %r5343, 18;
	mov.b64 	%rd6986, {%r5347, %r5346};
	xor.b64  	%rd6987, %rd6986, %rd6985;
	shf.l.wrap.b32 	%r5348, %r5342, %r5343, 23;
	shf.l.wrap.b32 	%r5349, %r5343, %r5342, 23;
	mov.b64 	%rd6988, {%r5349, %r5348};
	xor.b64  	%rd6989, %rd6987, %rd6988;
	xor.b64  	%rd6990, %rd6949, %rd10254;
	and.b64  	%rd6991, %rd6973, %rd6990;
	xor.b64  	%rd6992, %rd6991, %rd10254;
	add.s64 	%rd6993, %rd10245, %rd10253;
	add.s64 	%rd6994, %rd6993, %rd10142;
	add.s64 	%rd6995, %rd6994, %rd6992;
	add.s64 	%rd6996, %rd6995, %rd6989;
	add.s64 	%rd6997, %rd6996, %rd10257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5350,%dummy}, %rd6984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5351}, %rd6984;
	}
	shf.r.wrap.b32 	%r5352, %r5351, %r5350, 28;
	shf.r.wrap.b32 	%r5353, %r5350, %r5351, 28;
	mov.b64 	%rd6998, {%r5353, %r5352};
	shf.l.wrap.b32 	%r5354, %r5350, %r5351, 30;
	shf.l.wrap.b32 	%r5355, %r5351, %r5350, 30;
	mov.b64 	%rd6999, {%r5355, %r5354};
	xor.b64  	%rd7000, %rd6999, %rd6998;
	shf.l.wrap.b32 	%r5356, %r5350, %r5351, 25;
	shf.l.wrap.b32 	%r5357, %r5351, %r5350, 25;
	mov.b64 	%rd7001, {%r5357, %r5356};
	xor.b64  	%rd7002, %rd7000, %rd7001;
	and.b64  	%rd7003, %rd6984, %rd6960;
	xor.b64  	%rd7004, %rd6984, %rd6960;
	and.b64  	%rd7005, %rd7004, %rd10258;
	or.b64  	%rd7006, %rd7005, %rd7003;
	add.s64 	%rd7007, %rd6996, %rd7006;
	add.s64 	%rd7008, %rd7007, %rd7002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5358,%dummy}, %rd6997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5359}, %rd6997;
	}
	shf.r.wrap.b32 	%r5360, %r5359, %r5358, 14;
	shf.r.wrap.b32 	%r5361, %r5358, %r5359, 14;
	mov.b64 	%rd7009, {%r5361, %r5360};
	shf.r.wrap.b32 	%r5362, %r5359, %r5358, 18;
	shf.r.wrap.b32 	%r5363, %r5358, %r5359, 18;
	mov.b64 	%rd7010, {%r5363, %r5362};
	xor.b64  	%rd7011, %rd7010, %rd7009;
	shf.l.wrap.b32 	%r5364, %r5358, %r5359, 23;
	shf.l.wrap.b32 	%r5365, %r5359, %r5358, 23;
	mov.b64 	%rd7012, {%r5365, %r5364};
	xor.b64  	%rd7013, %rd7011, %rd7012;
	xor.b64  	%rd7014, %rd6973, %rd6949;
	and.b64  	%rd7015, %rd6997, %rd7014;
	xor.b64  	%rd7016, %rd7015, %rd6949;
	add.s64 	%rd7017, %rd10246, %rd10254;
	add.s64 	%rd7018, %rd7017, %rd10141;
	add.s64 	%rd7019, %rd7018, %rd7016;
	add.s64 	%rd7020, %rd7019, %rd7013;
	add.s64 	%rd7021, %rd7020, %rd10258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5366,%dummy}, %rd7008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5367}, %rd7008;
	}
	shf.r.wrap.b32 	%r5368, %r5367, %r5366, 28;
	shf.r.wrap.b32 	%r5369, %r5366, %r5367, 28;
	mov.b64 	%rd7022, {%r5369, %r5368};
	shf.l.wrap.b32 	%r5370, %r5366, %r5367, 30;
	shf.l.wrap.b32 	%r5371, %r5367, %r5366, 30;
	mov.b64 	%rd7023, {%r5371, %r5370};
	xor.b64  	%rd7024, %rd7023, %rd7022;
	shf.l.wrap.b32 	%r5372, %r5366, %r5367, 25;
	shf.l.wrap.b32 	%r5373, %r5367, %r5366, 25;
	mov.b64 	%rd7025, {%r5373, %r5372};
	xor.b64  	%rd7026, %rd7024, %rd7025;
	and.b64  	%rd7027, %rd7008, %rd6984;
	xor.b64  	%rd7028, %rd7008, %rd6984;
	and.b64  	%rd7029, %rd7028, %rd6960;
	or.b64  	%rd7030, %rd7029, %rd7027;
	add.s64 	%rd7031, %rd7020, %rd7030;
	add.s64 	%rd7032, %rd7031, %rd7026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5374,%dummy}, %rd7021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5375}, %rd7021;
	}
	shf.r.wrap.b32 	%r5376, %r5375, %r5374, 14;
	shf.r.wrap.b32 	%r5377, %r5374, %r5375, 14;
	mov.b64 	%rd7033, {%r5377, %r5376};
	shf.r.wrap.b32 	%r5378, %r5375, %r5374, 18;
	shf.r.wrap.b32 	%r5379, %r5374, %r5375, 18;
	mov.b64 	%rd7034, {%r5379, %r5378};
	xor.b64  	%rd7035, %rd7034, %rd7033;
	shf.l.wrap.b32 	%r5380, %r5374, %r5375, 23;
	shf.l.wrap.b32 	%r5381, %r5375, %r5374, 23;
	mov.b64 	%rd7036, {%r5381, %r5380};
	xor.b64  	%rd7037, %rd7035, %rd7036;
	xor.b64  	%rd7038, %rd6997, %rd6973;
	and.b64  	%rd7039, %rd7021, %rd7038;
	xor.b64  	%rd7040, %rd7039, %rd6973;
	add.s64 	%rd7041, %rd6949, %rd10247;
	add.s64 	%rd7042, %rd7041, %rd10140;
	add.s64 	%rd7043, %rd7042, %rd7040;
	add.s64 	%rd7044, %rd7043, %rd7037;
	add.s64 	%rd7045, %rd7044, %rd6960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5382,%dummy}, %rd7032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5383}, %rd7032;
	}
	shf.r.wrap.b32 	%r5384, %r5383, %r5382, 28;
	shf.r.wrap.b32 	%r5385, %r5382, %r5383, 28;
	mov.b64 	%rd7046, {%r5385, %r5384};
	shf.l.wrap.b32 	%r5386, %r5382, %r5383, 30;
	shf.l.wrap.b32 	%r5387, %r5383, %r5382, 30;
	mov.b64 	%rd7047, {%r5387, %r5386};
	xor.b64  	%rd7048, %rd7047, %rd7046;
	shf.l.wrap.b32 	%r5388, %r5382, %r5383, 25;
	shf.l.wrap.b32 	%r5389, %r5383, %r5382, 25;
	mov.b64 	%rd7049, {%r5389, %r5388};
	xor.b64  	%rd7050, %rd7048, %rd7049;
	and.b64  	%rd7051, %rd7032, %rd7008;
	xor.b64  	%rd7052, %rd7032, %rd7008;
	and.b64  	%rd7053, %rd7052, %rd6984;
	or.b64  	%rd7054, %rd7053, %rd7051;
	add.s64 	%rd7055, %rd7044, %rd7054;
	add.s64 	%rd7056, %rd7055, %rd7050;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5390,%dummy}, %rd7045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5391}, %rd7045;
	}
	shf.r.wrap.b32 	%r5392, %r5391, %r5390, 14;
	shf.r.wrap.b32 	%r5393, %r5390, %r5391, 14;
	mov.b64 	%rd7057, {%r5393, %r5392};
	shf.r.wrap.b32 	%r5394, %r5391, %r5390, 18;
	shf.r.wrap.b32 	%r5395, %r5390, %r5391, 18;
	mov.b64 	%rd7058, {%r5395, %r5394};
	xor.b64  	%rd7059, %rd7058, %rd7057;
	shf.l.wrap.b32 	%r5396, %r5390, %r5391, 23;
	shf.l.wrap.b32 	%r5397, %r5391, %r5390, 23;
	mov.b64 	%rd7060, {%r5397, %r5396};
	xor.b64  	%rd7061, %rd7059, %rd7060;
	xor.b64  	%rd7062, %rd7021, %rd6997;
	and.b64  	%rd7063, %rd7045, %rd7062;
	xor.b64  	%rd7064, %rd7063, %rd6997;
	add.s64 	%rd7065, %rd6973, %rd10248;
	add.s64 	%rd7066, %rd7065, %rd10139;
	add.s64 	%rd7067, %rd7066, %rd7064;
	add.s64 	%rd7068, %rd7067, %rd7061;
	add.s64 	%rd7069, %rd7068, %rd6984;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5398,%dummy}, %rd7056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5399}, %rd7056;
	}
	shf.r.wrap.b32 	%r5400, %r5399, %r5398, 28;
	shf.r.wrap.b32 	%r5401, %r5398, %r5399, 28;
	mov.b64 	%rd7070, {%r5401, %r5400};
	shf.l.wrap.b32 	%r5402, %r5398, %r5399, 30;
	shf.l.wrap.b32 	%r5403, %r5399, %r5398, 30;
	mov.b64 	%rd7071, {%r5403, %r5402};
	xor.b64  	%rd7072, %rd7071, %rd7070;
	shf.l.wrap.b32 	%r5404, %r5398, %r5399, 25;
	shf.l.wrap.b32 	%r5405, %r5399, %r5398, 25;
	mov.b64 	%rd7073, {%r5405, %r5404};
	xor.b64  	%rd7074, %rd7072, %rd7073;
	and.b64  	%rd7075, %rd7056, %rd7032;
	xor.b64  	%rd7076, %rd7056, %rd7032;
	and.b64  	%rd7077, %rd7076, %rd7008;
	or.b64  	%rd7078, %rd7077, %rd7075;
	add.s64 	%rd7079, %rd7068, %rd7078;
	add.s64 	%rd7080, %rd7079, %rd7074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5406,%dummy}, %rd7069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5407}, %rd7069;
	}
	shf.r.wrap.b32 	%r5408, %r5407, %r5406, 14;
	shf.r.wrap.b32 	%r5409, %r5406, %r5407, 14;
	mov.b64 	%rd7081, {%r5409, %r5408};
	shf.r.wrap.b32 	%r5410, %r5407, %r5406, 18;
	shf.r.wrap.b32 	%r5411, %r5406, %r5407, 18;
	mov.b64 	%rd7082, {%r5411, %r5410};
	xor.b64  	%rd7083, %rd7082, %rd7081;
	shf.l.wrap.b32 	%r5412, %r5406, %r5407, 23;
	shf.l.wrap.b32 	%r5413, %r5407, %r5406, 23;
	mov.b64 	%rd7084, {%r5413, %r5412};
	xor.b64  	%rd7085, %rd7083, %rd7084;
	xor.b64  	%rd7086, %rd7045, %rd7021;
	and.b64  	%rd7087, %rd7069, %rd7086;
	xor.b64  	%rd7088, %rd7087, %rd7021;
	add.s64 	%rd7089, %rd6997, %rd10249;
	add.s64 	%rd7090, %rd7089, %rd10138;
	add.s64 	%rd7091, %rd7090, %rd7088;
	add.s64 	%rd7092, %rd7091, %rd7085;
	add.s64 	%rd7093, %rd7092, %rd7008;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5414,%dummy}, %rd7080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5415}, %rd7080;
	}
	shf.r.wrap.b32 	%r5416, %r5415, %r5414, 28;
	shf.r.wrap.b32 	%r5417, %r5414, %r5415, 28;
	mov.b64 	%rd7094, {%r5417, %r5416};
	shf.l.wrap.b32 	%r5418, %r5414, %r5415, 30;
	shf.l.wrap.b32 	%r5419, %r5415, %r5414, 30;
	mov.b64 	%rd7095, {%r5419, %r5418};
	xor.b64  	%rd7096, %rd7095, %rd7094;
	shf.l.wrap.b32 	%r5420, %r5414, %r5415, 25;
	shf.l.wrap.b32 	%r5421, %r5415, %r5414, 25;
	mov.b64 	%rd7097, {%r5421, %r5420};
	xor.b64  	%rd7098, %rd7096, %rd7097;
	and.b64  	%rd7099, %rd7080, %rd7056;
	xor.b64  	%rd7100, %rd7080, %rd7056;
	and.b64  	%rd7101, %rd7100, %rd7032;
	or.b64  	%rd7102, %rd7101, %rd7099;
	add.s64 	%rd7103, %rd7092, %rd7102;
	add.s64 	%rd7104, %rd7103, %rd7098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5422,%dummy}, %rd7093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5423}, %rd7093;
	}
	shf.r.wrap.b32 	%r5424, %r5423, %r5422, 14;
	shf.r.wrap.b32 	%r5425, %r5422, %r5423, 14;
	mov.b64 	%rd7105, {%r5425, %r5424};
	shf.r.wrap.b32 	%r5426, %r5423, %r5422, 18;
	shf.r.wrap.b32 	%r5427, %r5422, %r5423, 18;
	mov.b64 	%rd7106, {%r5427, %r5426};
	xor.b64  	%rd7107, %rd7106, %rd7105;
	shf.l.wrap.b32 	%r5428, %r5422, %r5423, 23;
	shf.l.wrap.b32 	%r5429, %r5423, %r5422, 23;
	mov.b64 	%rd7108, {%r5429, %r5428};
	xor.b64  	%rd7109, %rd7107, %rd7108;
	xor.b64  	%rd7110, %rd7069, %rd7045;
	and.b64  	%rd7111, %rd7093, %rd7110;
	xor.b64  	%rd7112, %rd7111, %rd7045;
	add.s64 	%rd7113, %rd7021, %rd10250;
	add.s64 	%rd7114, %rd7113, %rd10137;
	add.s64 	%rd7115, %rd7114, %rd7112;
	add.s64 	%rd7116, %rd7115, %rd7109;
	add.s64 	%rd7117, %rd7116, %rd7032;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5430,%dummy}, %rd7104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5431}, %rd7104;
	}
	shf.r.wrap.b32 	%r5432, %r5431, %r5430, 28;
	shf.r.wrap.b32 	%r5433, %r5430, %r5431, 28;
	mov.b64 	%rd7118, {%r5433, %r5432};
	shf.l.wrap.b32 	%r5434, %r5430, %r5431, 30;
	shf.l.wrap.b32 	%r5435, %r5431, %r5430, 30;
	mov.b64 	%rd7119, {%r5435, %r5434};
	xor.b64  	%rd7120, %rd7119, %rd7118;
	shf.l.wrap.b32 	%r5436, %r5430, %r5431, 25;
	shf.l.wrap.b32 	%r5437, %r5431, %r5430, 25;
	mov.b64 	%rd7121, {%r5437, %r5436};
	xor.b64  	%rd7122, %rd7120, %rd7121;
	and.b64  	%rd7123, %rd7104, %rd7080;
	xor.b64  	%rd7124, %rd7104, %rd7080;
	and.b64  	%rd7125, %rd7124, %rd7056;
	or.b64  	%rd7126, %rd7125, %rd7123;
	add.s64 	%rd7127, %rd7116, %rd7126;
	add.s64 	%rd7128, %rd7127, %rd7122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5438,%dummy}, %rd7117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5439}, %rd7117;
	}
	shf.r.wrap.b32 	%r5440, %r5439, %r5438, 14;
	shf.r.wrap.b32 	%r5441, %r5438, %r5439, 14;
	mov.b64 	%rd7129, {%r5441, %r5440};
	shf.r.wrap.b32 	%r5442, %r5439, %r5438, 18;
	shf.r.wrap.b32 	%r5443, %r5438, %r5439, 18;
	mov.b64 	%rd7130, {%r5443, %r5442};
	xor.b64  	%rd7131, %rd7130, %rd7129;
	shf.l.wrap.b32 	%r5444, %r5438, %r5439, 23;
	shf.l.wrap.b32 	%r5445, %r5439, %r5438, 23;
	mov.b64 	%rd7132, {%r5445, %r5444};
	xor.b64  	%rd7133, %rd7131, %rd7132;
	xor.b64  	%rd7134, %rd7093, %rd7069;
	and.b64  	%rd7135, %rd7117, %rd7134;
	xor.b64  	%rd7136, %rd7135, %rd7069;
	add.s64 	%rd7137, %rd7045, %rd10234;
	add.s64 	%rd7138, %rd7137, %rd10136;
	add.s64 	%rd7139, %rd7138, %rd7136;
	add.s64 	%rd7140, %rd7139, %rd7133;
	add.s64 	%rd7141, %rd7140, %rd7056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5446,%dummy}, %rd7128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5447}, %rd7128;
	}
	shf.r.wrap.b32 	%r5448, %r5447, %r5446, 28;
	shf.r.wrap.b32 	%r5449, %r5446, %r5447, 28;
	mov.b64 	%rd7142, {%r5449, %r5448};
	shf.l.wrap.b32 	%r5450, %r5446, %r5447, 30;
	shf.l.wrap.b32 	%r5451, %r5447, %r5446, 30;
	mov.b64 	%rd7143, {%r5451, %r5450};
	xor.b64  	%rd7144, %rd7143, %rd7142;
	shf.l.wrap.b32 	%r5452, %r5446, %r5447, 25;
	shf.l.wrap.b32 	%r5453, %r5447, %r5446, 25;
	mov.b64 	%rd7145, {%r5453, %r5452};
	xor.b64  	%rd7146, %rd7144, %rd7145;
	and.b64  	%rd7147, %rd7128, %rd7104;
	xor.b64  	%rd7148, %rd7128, %rd7104;
	and.b64  	%rd7149, %rd7148, %rd7080;
	or.b64  	%rd7150, %rd7149, %rd7147;
	add.s64 	%rd7151, %rd7140, %rd7150;
	add.s64 	%rd7152, %rd7151, %rd7146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5454,%dummy}, %rd7141;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5455}, %rd7141;
	}
	shf.r.wrap.b32 	%r5456, %r5455, %r5454, 14;
	shf.r.wrap.b32 	%r5457, %r5454, %r5455, 14;
	mov.b64 	%rd7153, {%r5457, %r5456};
	shf.r.wrap.b32 	%r5458, %r5455, %r5454, 18;
	shf.r.wrap.b32 	%r5459, %r5454, %r5455, 18;
	mov.b64 	%rd7154, {%r5459, %r5458};
	xor.b64  	%rd7155, %rd7154, %rd7153;
	shf.l.wrap.b32 	%r5460, %r5454, %r5455, 23;
	shf.l.wrap.b32 	%r5461, %r5455, %r5454, 23;
	mov.b64 	%rd7156, {%r5461, %r5460};
	xor.b64  	%rd7157, %rd7155, %rd7156;
	xor.b64  	%rd7158, %rd7117, %rd7093;
	and.b64  	%rd7159, %rd7141, %rd7158;
	xor.b64  	%rd7160, %rd7159, %rd7093;
	add.s64 	%rd7161, %rd7069, %rd10233;
	add.s64 	%rd7162, %rd7161, %rd10135;
	add.s64 	%rd7163, %rd7162, %rd7160;
	add.s64 	%rd7164, %rd7163, %rd7157;
	add.s64 	%rd7165, %rd7164, %rd7080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5462,%dummy}, %rd7152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5463}, %rd7152;
	}
	shf.r.wrap.b32 	%r5464, %r5463, %r5462, 28;
	shf.r.wrap.b32 	%r5465, %r5462, %r5463, 28;
	mov.b64 	%rd7166, {%r5465, %r5464};
	shf.l.wrap.b32 	%r5466, %r5462, %r5463, 30;
	shf.l.wrap.b32 	%r5467, %r5463, %r5462, 30;
	mov.b64 	%rd7167, {%r5467, %r5466};
	xor.b64  	%rd7168, %rd7167, %rd7166;
	shf.l.wrap.b32 	%r5468, %r5462, %r5463, 25;
	shf.l.wrap.b32 	%r5469, %r5463, %r5462, 25;
	mov.b64 	%rd7169, {%r5469, %r5468};
	xor.b64  	%rd7170, %rd7168, %rd7169;
	and.b64  	%rd7171, %rd7152, %rd7128;
	xor.b64  	%rd7172, %rd7152, %rd7128;
	and.b64  	%rd7173, %rd7172, %rd7104;
	or.b64  	%rd7174, %rd7173, %rd7171;
	add.s64 	%rd7175, %rd7164, %rd7174;
	add.s64 	%rd7176, %rd7175, %rd7170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5470,%dummy}, %rd7165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5471}, %rd7165;
	}
	shf.r.wrap.b32 	%r5472, %r5471, %r5470, 14;
	shf.r.wrap.b32 	%r5473, %r5470, %r5471, 14;
	mov.b64 	%rd7177, {%r5473, %r5472};
	shf.r.wrap.b32 	%r5474, %r5471, %r5470, 18;
	shf.r.wrap.b32 	%r5475, %r5470, %r5471, 18;
	mov.b64 	%rd7178, {%r5475, %r5474};
	xor.b64  	%rd7179, %rd7178, %rd7177;
	shf.l.wrap.b32 	%r5476, %r5470, %r5471, 23;
	shf.l.wrap.b32 	%r5477, %r5471, %r5470, 23;
	mov.b64 	%rd7180, {%r5477, %r5476};
	xor.b64  	%rd7181, %rd7179, %rd7180;
	xor.b64  	%rd7182, %rd7141, %rd7117;
	and.b64  	%rd7183, %rd7165, %rd7182;
	xor.b64  	%rd7184, %rd7183, %rd7117;
	add.s64 	%rd7185, %rd7093, %rd10232;
	add.s64 	%rd7186, %rd7185, %rd10134;
	add.s64 	%rd7187, %rd7186, %rd7184;
	add.s64 	%rd7188, %rd7187, %rd7181;
	add.s64 	%rd7189, %rd7188, %rd7104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5478,%dummy}, %rd7176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5479}, %rd7176;
	}
	shf.r.wrap.b32 	%r5480, %r5479, %r5478, 28;
	shf.r.wrap.b32 	%r5481, %r5478, %r5479, 28;
	mov.b64 	%rd7190, {%r5481, %r5480};
	shf.l.wrap.b32 	%r5482, %r5478, %r5479, 30;
	shf.l.wrap.b32 	%r5483, %r5479, %r5478, 30;
	mov.b64 	%rd7191, {%r5483, %r5482};
	xor.b64  	%rd7192, %rd7191, %rd7190;
	shf.l.wrap.b32 	%r5484, %r5478, %r5479, 25;
	shf.l.wrap.b32 	%r5485, %r5479, %r5478, 25;
	mov.b64 	%rd7193, {%r5485, %r5484};
	xor.b64  	%rd7194, %rd7192, %rd7193;
	and.b64  	%rd7195, %rd7176, %rd7152;
	xor.b64  	%rd7196, %rd7176, %rd7152;
	and.b64  	%rd7197, %rd7196, %rd7128;
	or.b64  	%rd7198, %rd7197, %rd7195;
	add.s64 	%rd7199, %rd7188, %rd7198;
	add.s64 	%rd7200, %rd7199, %rd7194;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5486,%dummy}, %rd7189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5487}, %rd7189;
	}
	shf.r.wrap.b32 	%r5488, %r5487, %r5486, 14;
	shf.r.wrap.b32 	%r5489, %r5486, %r5487, 14;
	mov.b64 	%rd7201, {%r5489, %r5488};
	shf.r.wrap.b32 	%r5490, %r5487, %r5486, 18;
	shf.r.wrap.b32 	%r5491, %r5486, %r5487, 18;
	mov.b64 	%rd7202, {%r5491, %r5490};
	xor.b64  	%rd7203, %rd7202, %rd7201;
	shf.l.wrap.b32 	%r5492, %r5486, %r5487, 23;
	shf.l.wrap.b32 	%r5493, %r5487, %r5486, 23;
	mov.b64 	%rd7204, {%r5493, %r5492};
	xor.b64  	%rd7205, %rd7203, %rd7204;
	xor.b64  	%rd7206, %rd7165, %rd7141;
	and.b64  	%rd7207, %rd7189, %rd7206;
	xor.b64  	%rd7208, %rd7207, %rd7141;
	add.s64 	%rd7209, %rd7117, %rd10231;
	add.s64 	%rd7210, %rd7209, %rd10133;
	add.s64 	%rd7211, %rd7210, %rd7208;
	add.s64 	%rd7212, %rd7211, %rd7205;
	add.s64 	%rd7213, %rd7212, %rd7128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5494,%dummy}, %rd7200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5495}, %rd7200;
	}
	shf.r.wrap.b32 	%r5496, %r5495, %r5494, 28;
	shf.r.wrap.b32 	%r5497, %r5494, %r5495, 28;
	mov.b64 	%rd7214, {%r5497, %r5496};
	shf.l.wrap.b32 	%r5498, %r5494, %r5495, 30;
	shf.l.wrap.b32 	%r5499, %r5495, %r5494, 30;
	mov.b64 	%rd7215, {%r5499, %r5498};
	xor.b64  	%rd7216, %rd7215, %rd7214;
	shf.l.wrap.b32 	%r5500, %r5494, %r5495, 25;
	shf.l.wrap.b32 	%r5501, %r5495, %r5494, 25;
	mov.b64 	%rd7217, {%r5501, %r5500};
	xor.b64  	%rd7218, %rd7216, %rd7217;
	and.b64  	%rd7219, %rd7200, %rd7176;
	xor.b64  	%rd7220, %rd7200, %rd7176;
	and.b64  	%rd7221, %rd7220, %rd7152;
	or.b64  	%rd7222, %rd7221, %rd7219;
	add.s64 	%rd7223, %rd7212, %rd7222;
	add.s64 	%rd7224, %rd7223, %rd7218;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5502,%dummy}, %rd7213;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5503}, %rd7213;
	}
	shf.r.wrap.b32 	%r5504, %r5503, %r5502, 14;
	shf.r.wrap.b32 	%r5505, %r5502, %r5503, 14;
	mov.b64 	%rd7225, {%r5505, %r5504};
	shf.r.wrap.b32 	%r5506, %r5503, %r5502, 18;
	shf.r.wrap.b32 	%r5507, %r5502, %r5503, 18;
	mov.b64 	%rd7226, {%r5507, %r5506};
	xor.b64  	%rd7227, %rd7226, %rd7225;
	shf.l.wrap.b32 	%r5508, %r5502, %r5503, 23;
	shf.l.wrap.b32 	%r5509, %r5503, %r5502, 23;
	mov.b64 	%rd7228, {%r5509, %r5508};
	xor.b64  	%rd7229, %rd7227, %rd7228;
	xor.b64  	%rd7230, %rd7189, %rd7165;
	and.b64  	%rd7231, %rd7213, %rd7230;
	xor.b64  	%rd7232, %rd7231, %rd7165;
	add.s64 	%rd7233, %rd7141, %rd10230;
	add.s64 	%rd7234, %rd7233, %rd10132;
	add.s64 	%rd7235, %rd7234, %rd7232;
	add.s64 	%rd7236, %rd7235, %rd7229;
	add.s64 	%rd10242, %rd7236, %rd7152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5510,%dummy}, %rd7224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5511}, %rd7224;
	}
	shf.r.wrap.b32 	%r5512, %r5511, %r5510, 28;
	shf.r.wrap.b32 	%r5513, %r5510, %r5511, 28;
	mov.b64 	%rd7237, {%r5513, %r5512};
	shf.l.wrap.b32 	%r5514, %r5510, %r5511, 30;
	shf.l.wrap.b32 	%r5515, %r5511, %r5510, 30;
	mov.b64 	%rd7238, {%r5515, %r5514};
	xor.b64  	%rd7239, %rd7238, %rd7237;
	shf.l.wrap.b32 	%r5516, %r5510, %r5511, 25;
	shf.l.wrap.b32 	%r5517, %r5511, %r5510, 25;
	mov.b64 	%rd7240, {%r5517, %r5516};
	xor.b64  	%rd7241, %rd7239, %rd7240;
	and.b64  	%rd7242, %rd7224, %rd7200;
	xor.b64  	%rd7243, %rd7224, %rd7200;
	and.b64  	%rd7244, %rd7243, %rd7176;
	or.b64  	%rd7245, %rd7244, %rd7242;
	add.s64 	%rd7246, %rd7236, %rd7245;
	add.s64 	%rd10238, %rd7246, %rd7241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5518,%dummy}, %rd10242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5519}, %rd10242;
	}
	shf.r.wrap.b32 	%r5520, %r5519, %r5518, 14;
	shf.r.wrap.b32 	%r5521, %r5518, %r5519, 14;
	mov.b64 	%rd7247, {%r5521, %r5520};
	shf.r.wrap.b32 	%r5522, %r5519, %r5518, 18;
	shf.r.wrap.b32 	%r5523, %r5518, %r5519, 18;
	mov.b64 	%rd7248, {%r5523, %r5522};
	xor.b64  	%rd7249, %rd7248, %rd7247;
	shf.l.wrap.b32 	%r5524, %r5518, %r5519, 23;
	shf.l.wrap.b32 	%r5525, %r5519, %r5518, 23;
	mov.b64 	%rd7250, {%r5525, %r5524};
	xor.b64  	%rd7251, %rd7249, %rd7250;
	xor.b64  	%rd7252, %rd7213, %rd7189;
	and.b64  	%rd7253, %rd10242, %rd7252;
	xor.b64  	%rd7254, %rd7253, %rd7189;
	add.s64 	%rd7255, %rd7165, %rd10229;
	add.s64 	%rd7256, %rd7255, %rd10131;
	add.s64 	%rd7257, %rd7256, %rd7254;
	add.s64 	%rd7258, %rd7257, %rd7251;
	add.s64 	%rd10241, %rd7258, %rd7176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5526,%dummy}, %rd10238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5527}, %rd10238;
	}
	shf.r.wrap.b32 	%r5528, %r5527, %r5526, 28;
	shf.r.wrap.b32 	%r5529, %r5526, %r5527, 28;
	mov.b64 	%rd7259, {%r5529, %r5528};
	shf.l.wrap.b32 	%r5530, %r5526, %r5527, 30;
	shf.l.wrap.b32 	%r5531, %r5527, %r5526, 30;
	mov.b64 	%rd7260, {%r5531, %r5530};
	xor.b64  	%rd7261, %rd7260, %rd7259;
	shf.l.wrap.b32 	%r5532, %r5526, %r5527, 25;
	shf.l.wrap.b32 	%r5533, %r5527, %r5526, 25;
	mov.b64 	%rd7262, {%r5533, %r5532};
	xor.b64  	%rd7263, %rd7261, %rd7262;
	and.b64  	%rd7264, %rd10238, %rd7224;
	xor.b64  	%rd7265, %rd10238, %rd7224;
	and.b64  	%rd7266, %rd7265, %rd7200;
	or.b64  	%rd7267, %rd7266, %rd7264;
	add.s64 	%rd7268, %rd7258, %rd7267;
	add.s64 	%rd10237, %rd7268, %rd7263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5534,%dummy}, %rd10241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5535}, %rd10241;
	}
	shf.r.wrap.b32 	%r5536, %r5535, %r5534, 14;
	shf.r.wrap.b32 	%r5537, %r5534, %r5535, 14;
	mov.b64 	%rd7269, {%r5537, %r5536};
	shf.r.wrap.b32 	%r5538, %r5535, %r5534, 18;
	shf.r.wrap.b32 	%r5539, %r5534, %r5535, 18;
	mov.b64 	%rd7270, {%r5539, %r5538};
	xor.b64  	%rd7271, %rd7270, %rd7269;
	shf.l.wrap.b32 	%r5540, %r5534, %r5535, 23;
	shf.l.wrap.b32 	%r5541, %r5535, %r5534, 23;
	mov.b64 	%rd7272, {%r5541, %r5540};
	xor.b64  	%rd7273, %rd7271, %rd7272;
	xor.b64  	%rd7274, %rd10242, %rd7213;
	and.b64  	%rd7275, %rd10241, %rd7274;
	xor.b64  	%rd7276, %rd7275, %rd7213;
	add.s64 	%rd7277, %rd7189, %rd10228;
	add.s64 	%rd7278, %rd7277, %rd10130;
	add.s64 	%rd7279, %rd7278, %rd7276;
	add.s64 	%rd7280, %rd7279, %rd7273;
	add.s64 	%rd10240, %rd7280, %rd7200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5542,%dummy}, %rd10237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5543}, %rd10237;
	}
	shf.r.wrap.b32 	%r5544, %r5543, %r5542, 28;
	shf.r.wrap.b32 	%r5545, %r5542, %r5543, 28;
	mov.b64 	%rd7281, {%r5545, %r5544};
	shf.l.wrap.b32 	%r5546, %r5542, %r5543, 30;
	shf.l.wrap.b32 	%r5547, %r5543, %r5542, 30;
	mov.b64 	%rd7282, {%r5547, %r5546};
	xor.b64  	%rd7283, %rd7282, %rd7281;
	shf.l.wrap.b32 	%r5548, %r5542, %r5543, 25;
	shf.l.wrap.b32 	%r5549, %r5543, %r5542, 25;
	mov.b64 	%rd7284, {%r5549, %r5548};
	xor.b64  	%rd7285, %rd7283, %rd7284;
	and.b64  	%rd7286, %rd10237, %rd10238;
	xor.b64  	%rd7287, %rd10237, %rd10238;
	and.b64  	%rd7288, %rd7287, %rd7224;
	or.b64  	%rd7289, %rd7288, %rd7286;
	add.s64 	%rd7290, %rd7280, %rd7289;
	add.s64 	%rd10236, %rd7290, %rd7285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5550,%dummy}, %rd10240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5551}, %rd10240;
	}
	shf.r.wrap.b32 	%r5552, %r5551, %r5550, 14;
	shf.r.wrap.b32 	%r5553, %r5550, %r5551, 14;
	mov.b64 	%rd7291, {%r5553, %r5552};
	shf.r.wrap.b32 	%r5554, %r5551, %r5550, 18;
	shf.r.wrap.b32 	%r5555, %r5550, %r5551, 18;
	mov.b64 	%rd7292, {%r5555, %r5554};
	xor.b64  	%rd7293, %rd7292, %rd7291;
	shf.l.wrap.b32 	%r5556, %r5550, %r5551, 23;
	shf.l.wrap.b32 	%r5557, %r5551, %r5550, 23;
	mov.b64 	%rd7294, {%r5557, %r5556};
	xor.b64  	%rd7295, %rd7293, %rd7294;
	xor.b64  	%rd7296, %rd10241, %rd10242;
	and.b64  	%rd7297, %rd10240, %rd7296;
	xor.b64  	%rd7298, %rd7297, %rd10242;
	add.s64 	%rd7299, %rd7213, %rd10227;
	add.s64 	%rd7300, %rd7299, %rd10129;
	add.s64 	%rd7301, %rd7300, %rd7298;
	add.s64 	%rd7302, %rd7301, %rd7295;
	add.s64 	%rd10239, %rd7302, %rd7224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5558,%dummy}, %rd10236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5559}, %rd10236;
	}
	shf.r.wrap.b32 	%r5560, %r5559, %r5558, 28;
	shf.r.wrap.b32 	%r5561, %r5558, %r5559, 28;
	mov.b64 	%rd7303, {%r5561, %r5560};
	shf.l.wrap.b32 	%r5562, %r5558, %r5559, 30;
	shf.l.wrap.b32 	%r5563, %r5559, %r5558, 30;
	mov.b64 	%rd7304, {%r5563, %r5562};
	xor.b64  	%rd7305, %rd7304, %rd7303;
	shf.l.wrap.b32 	%r5564, %r5558, %r5559, 25;
	shf.l.wrap.b32 	%r5565, %r5559, %r5558, 25;
	mov.b64 	%rd7306, {%r5565, %r5564};
	xor.b64  	%rd7307, %rd7305, %rd7306;
	and.b64  	%rd7308, %rd10236, %rd10237;
	xor.b64  	%rd7309, %rd10236, %rd10237;
	and.b64  	%rd7310, %rd7309, %rd10238;
	or.b64  	%rd7311, %rd7310, %rd7308;
	add.s64 	%rd7312, %rd7302, %rd7311;
	add.s64 	%rd10235, %rd7312, %rd7307;
	mov.u32 	%r7679, 16;

BB3_28:
	shr.u64 	%rd7313, %rd10228, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5566,%dummy}, %rd10228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5567}, %rd10228;
	}
	shf.r.wrap.b32 	%r5568, %r5567, %r5566, 19;
	shf.r.wrap.b32 	%r5569, %r5566, %r5567, 19;
	mov.b64 	%rd7314, {%r5569, %r5568};
	xor.b64  	%rd7315, %rd7314, %rd7313;
	shf.l.wrap.b32 	%r5570, %r5566, %r5567, 3;
	shf.l.wrap.b32 	%r5571, %r5567, %r5566, 3;
	mov.b64 	%rd7316, {%r5571, %r5570};
	xor.b64  	%rd7317, %rd7315, %rd7316;
	shr.u64 	%rd7318, %rd10244, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5572,%dummy}, %rd10244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5573}, %rd10244;
	}
	shf.r.wrap.b32 	%r5574, %r5573, %r5572, 1;
	shf.r.wrap.b32 	%r5575, %r5572, %r5573, 1;
	mov.b64 	%rd7319, {%r5575, %r5574};
	xor.b64  	%rd7320, %rd7319, %rd7318;
	shf.r.wrap.b32 	%r5576, %r5573, %r5572, 8;
	shf.r.wrap.b32 	%r5577, %r5572, %r5573, 8;
	mov.b64 	%rd7321, {%r5577, %r5576};
	xor.b64  	%rd7322, %rd7320, %rd7321;
	add.s64 	%rd7323, %rd10233, %rd10243;
	add.s64 	%rd7324, %rd7323, %rd7317;
	add.s64 	%rd10243, %rd7324, %rd7322;
	shr.u64 	%rd7325, %rd10227, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5578,%dummy}, %rd10227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5579}, %rd10227;
	}
	shf.r.wrap.b32 	%r5580, %r5579, %r5578, 19;
	shf.r.wrap.b32 	%r5581, %r5578, %r5579, 19;
	mov.b64 	%rd7326, {%r5581, %r5580};
	xor.b64  	%rd7327, %rd7326, %rd7325;
	shf.l.wrap.b32 	%r5582, %r5578, %r5579, 3;
	shf.l.wrap.b32 	%r5583, %r5579, %r5578, 3;
	mov.b64 	%rd7328, {%r5583, %r5582};
	xor.b64  	%rd7329, %rd7327, %rd7328;
	shr.u64 	%rd7330, %rd10245, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5584,%dummy}, %rd10245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5585}, %rd10245;
	}
	shf.r.wrap.b32 	%r5586, %r5585, %r5584, 1;
	shf.r.wrap.b32 	%r5587, %r5584, %r5585, 1;
	mov.b64 	%rd7331, {%r5587, %r5586};
	xor.b64  	%rd7332, %rd7331, %rd7330;
	shf.r.wrap.b32 	%r5588, %r5585, %r5584, 8;
	shf.r.wrap.b32 	%r5589, %r5584, %r5585, 8;
	mov.b64 	%rd7333, {%r5589, %r5588};
	xor.b64  	%rd7334, %rd7332, %rd7333;
	add.s64 	%rd7335, %rd10232, %rd10244;
	add.s64 	%rd7336, %rd7335, %rd7329;
	add.s64 	%rd10244, %rd7336, %rd7334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5590,%dummy}, %rd10243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5591}, %rd10243;
	}
	shf.r.wrap.b32 	%r5592, %r5591, %r5590, 19;
	shf.r.wrap.b32 	%r5593, %r5590, %r5591, 19;
	mov.b64 	%rd7337, {%r5593, %r5592};
	shf.l.wrap.b32 	%r5594, %r5590, %r5591, 3;
	shf.l.wrap.b32 	%r5595, %r5591, %r5590, 3;
	mov.b64 	%rd7338, {%r5595, %r5594};
	shr.u64 	%rd7339, %rd10243, 6;
	xor.b64  	%rd7340, %rd7337, %rd7339;
	xor.b64  	%rd7341, %rd7340, %rd7338;
	shr.u64 	%rd7342, %rd10246, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5596,%dummy}, %rd10246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5597}, %rd10246;
	}
	shf.r.wrap.b32 	%r5598, %r5597, %r5596, 1;
	shf.r.wrap.b32 	%r5599, %r5596, %r5597, 1;
	mov.b64 	%rd7343, {%r5599, %r5598};
	xor.b64  	%rd7344, %rd7343, %rd7342;
	shf.r.wrap.b32 	%r5600, %r5597, %r5596, 8;
	shf.r.wrap.b32 	%r5601, %r5596, %r5597, 8;
	mov.b64 	%rd7345, {%r5601, %r5600};
	xor.b64  	%rd7346, %rd7344, %rd7345;
	add.s64 	%rd7347, %rd10231, %rd10245;
	add.s64 	%rd7348, %rd7347, %rd7341;
	add.s64 	%rd10245, %rd7348, %rd7346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5602,%dummy}, %rd10244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5603}, %rd10244;
	}
	shf.r.wrap.b32 	%r5604, %r5603, %r5602, 19;
	shf.r.wrap.b32 	%r5605, %r5602, %r5603, 19;
	mov.b64 	%rd7349, {%r5605, %r5604};
	shf.l.wrap.b32 	%r5606, %r5602, %r5603, 3;
	shf.l.wrap.b32 	%r5607, %r5603, %r5602, 3;
	mov.b64 	%rd7350, {%r5607, %r5606};
	shr.u64 	%rd7351, %rd10244, 6;
	xor.b64  	%rd7352, %rd7349, %rd7351;
	xor.b64  	%rd7353, %rd7352, %rd7350;
	shr.u64 	%rd7354, %rd10247, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5608,%dummy}, %rd10247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5609}, %rd10247;
	}
	shf.r.wrap.b32 	%r5610, %r5609, %r5608, 1;
	shf.r.wrap.b32 	%r5611, %r5608, %r5609, 1;
	mov.b64 	%rd7355, {%r5611, %r5610};
	xor.b64  	%rd7356, %rd7355, %rd7354;
	shf.r.wrap.b32 	%r5612, %r5609, %r5608, 8;
	shf.r.wrap.b32 	%r5613, %r5608, %r5609, 8;
	mov.b64 	%rd7357, {%r5613, %r5612};
	xor.b64  	%rd7358, %rd7356, %rd7357;
	add.s64 	%rd7359, %rd10230, %rd10246;
	add.s64 	%rd7360, %rd7359, %rd7353;
	add.s64 	%rd10246, %rd7360, %rd7358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5614,%dummy}, %rd10245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5615}, %rd10245;
	}
	shf.r.wrap.b32 	%r5616, %r5615, %r5614, 19;
	shf.r.wrap.b32 	%r5617, %r5614, %r5615, 19;
	mov.b64 	%rd7361, {%r5617, %r5616};
	shf.l.wrap.b32 	%r5618, %r5614, %r5615, 3;
	shf.l.wrap.b32 	%r5619, %r5615, %r5614, 3;
	mov.b64 	%rd7362, {%r5619, %r5618};
	shr.u64 	%rd7363, %rd10245, 6;
	xor.b64  	%rd7364, %rd7361, %rd7363;
	xor.b64  	%rd7365, %rd7364, %rd7362;
	shr.u64 	%rd7366, %rd10248, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5620,%dummy}, %rd10248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5621}, %rd10248;
	}
	shf.r.wrap.b32 	%r5622, %r5621, %r5620, 1;
	shf.r.wrap.b32 	%r5623, %r5620, %r5621, 1;
	mov.b64 	%rd7367, {%r5623, %r5622};
	xor.b64  	%rd7368, %rd7367, %rd7366;
	shf.r.wrap.b32 	%r5624, %r5621, %r5620, 8;
	shf.r.wrap.b32 	%r5625, %r5620, %r5621, 8;
	mov.b64 	%rd7369, {%r5625, %r5624};
	xor.b64  	%rd7370, %rd7368, %rd7369;
	add.s64 	%rd7371, %rd10229, %rd10247;
	add.s64 	%rd7372, %rd7371, %rd7365;
	add.s64 	%rd10247, %rd7372, %rd7370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5626,%dummy}, %rd10246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5627}, %rd10246;
	}
	shf.r.wrap.b32 	%r5628, %r5627, %r5626, 19;
	shf.r.wrap.b32 	%r5629, %r5626, %r5627, 19;
	mov.b64 	%rd7373, {%r5629, %r5628};
	shf.l.wrap.b32 	%r5630, %r5626, %r5627, 3;
	shf.l.wrap.b32 	%r5631, %r5627, %r5626, 3;
	mov.b64 	%rd7374, {%r5631, %r5630};
	shr.u64 	%rd7375, %rd10246, 6;
	xor.b64  	%rd7376, %rd7373, %rd7375;
	xor.b64  	%rd7377, %rd7376, %rd7374;
	shr.u64 	%rd7378, %rd10249, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5632,%dummy}, %rd10249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5633}, %rd10249;
	}
	shf.r.wrap.b32 	%r5634, %r5633, %r5632, 1;
	shf.r.wrap.b32 	%r5635, %r5632, %r5633, 1;
	mov.b64 	%rd7379, {%r5635, %r5634};
	xor.b64  	%rd7380, %rd7379, %rd7378;
	shf.r.wrap.b32 	%r5636, %r5633, %r5632, 8;
	shf.r.wrap.b32 	%r5637, %r5632, %r5633, 8;
	mov.b64 	%rd7381, {%r5637, %r5636};
	xor.b64  	%rd7382, %rd7380, %rd7381;
	add.s64 	%rd7383, %rd10228, %rd10248;
	add.s64 	%rd7384, %rd7383, %rd7377;
	add.s64 	%rd10248, %rd7384, %rd7382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5638,%dummy}, %rd10247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5639}, %rd10247;
	}
	shf.r.wrap.b32 	%r5640, %r5639, %r5638, 19;
	shf.r.wrap.b32 	%r5641, %r5638, %r5639, 19;
	mov.b64 	%rd7385, {%r5641, %r5640};
	shf.l.wrap.b32 	%r5642, %r5638, %r5639, 3;
	shf.l.wrap.b32 	%r5643, %r5639, %r5638, 3;
	mov.b64 	%rd7386, {%r5643, %r5642};
	shr.u64 	%rd7387, %rd10247, 6;
	xor.b64  	%rd7388, %rd7385, %rd7387;
	xor.b64  	%rd7389, %rd7388, %rd7386;
	shr.u64 	%rd7390, %rd10250, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5644,%dummy}, %rd10250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5645}, %rd10250;
	}
	shf.r.wrap.b32 	%r5646, %r5645, %r5644, 1;
	shf.r.wrap.b32 	%r5647, %r5644, %r5645, 1;
	mov.b64 	%rd7391, {%r5647, %r5646};
	xor.b64  	%rd7392, %rd7391, %rd7390;
	shf.r.wrap.b32 	%r5648, %r5645, %r5644, 8;
	shf.r.wrap.b32 	%r5649, %r5644, %r5645, 8;
	mov.b64 	%rd7393, {%r5649, %r5648};
	xor.b64  	%rd7394, %rd7392, %rd7393;
	add.s64 	%rd7395, %rd10227, %rd10249;
	add.s64 	%rd7396, %rd7395, %rd7389;
	add.s64 	%rd10249, %rd7396, %rd7394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5650,%dummy}, %rd10248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5651}, %rd10248;
	}
	shf.r.wrap.b32 	%r5652, %r5651, %r5650, 19;
	shf.r.wrap.b32 	%r5653, %r5650, %r5651, 19;
	mov.b64 	%rd7397, {%r5653, %r5652};
	shf.l.wrap.b32 	%r5654, %r5650, %r5651, 3;
	shf.l.wrap.b32 	%r5655, %r5651, %r5650, 3;
	mov.b64 	%rd7398, {%r5655, %r5654};
	shr.u64 	%rd7399, %rd10248, 6;
	xor.b64  	%rd7400, %rd7397, %rd7399;
	xor.b64  	%rd7401, %rd7400, %rd7398;
	shr.u64 	%rd7402, %rd10234, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5656,%dummy}, %rd10234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5657}, %rd10234;
	}
	shf.r.wrap.b32 	%r5658, %r5657, %r5656, 1;
	shf.r.wrap.b32 	%r5659, %r5656, %r5657, 1;
	mov.b64 	%rd7403, {%r5659, %r5658};
	xor.b64  	%rd7404, %rd7403, %rd7402;
	shf.r.wrap.b32 	%r5660, %r5657, %r5656, 8;
	shf.r.wrap.b32 	%r5661, %r5656, %r5657, 8;
	mov.b64 	%rd7405, {%r5661, %r5660};
	xor.b64  	%rd7406, %rd7404, %rd7405;
	add.s64 	%rd7407, %rd10243, %rd10250;
	add.s64 	%rd7408, %rd7407, %rd7401;
	add.s64 	%rd10250, %rd7408, %rd7406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5662,%dummy}, %rd10249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5663}, %rd10249;
	}
	shf.r.wrap.b32 	%r5664, %r5663, %r5662, 19;
	shf.r.wrap.b32 	%r5665, %r5662, %r5663, 19;
	mov.b64 	%rd7409, {%r5665, %r5664};
	shf.l.wrap.b32 	%r5666, %r5662, %r5663, 3;
	shf.l.wrap.b32 	%r5667, %r5663, %r5662, 3;
	mov.b64 	%rd7410, {%r5667, %r5666};
	shr.u64 	%rd7411, %rd10249, 6;
	xor.b64  	%rd7412, %rd7409, %rd7411;
	xor.b64  	%rd7413, %rd7412, %rd7410;
	shr.u64 	%rd7414, %rd10233, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5668,%dummy}, %rd10233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5669}, %rd10233;
	}
	shf.r.wrap.b32 	%r5670, %r5669, %r5668, 1;
	shf.r.wrap.b32 	%r5671, %r5668, %r5669, 1;
	mov.b64 	%rd7415, {%r5671, %r5670};
	xor.b64  	%rd7416, %rd7415, %rd7414;
	shf.r.wrap.b32 	%r5672, %r5669, %r5668, 8;
	shf.r.wrap.b32 	%r5673, %r5668, %r5669, 8;
	mov.b64 	%rd7417, {%r5673, %r5672};
	xor.b64  	%rd7418, %rd7416, %rd7417;
	add.s64 	%rd7419, %rd10244, %rd10234;
	add.s64 	%rd7420, %rd7419, %rd7413;
	add.s64 	%rd10234, %rd7420, %rd7418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5674,%dummy}, %rd10250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5675}, %rd10250;
	}
	shf.r.wrap.b32 	%r5676, %r5675, %r5674, 19;
	shf.r.wrap.b32 	%r5677, %r5674, %r5675, 19;
	mov.b64 	%rd7421, {%r5677, %r5676};
	shf.l.wrap.b32 	%r5678, %r5674, %r5675, 3;
	shf.l.wrap.b32 	%r5679, %r5675, %r5674, 3;
	mov.b64 	%rd7422, {%r5679, %r5678};
	shr.u64 	%rd7423, %rd10250, 6;
	xor.b64  	%rd7424, %rd7421, %rd7423;
	xor.b64  	%rd7425, %rd7424, %rd7422;
	shr.u64 	%rd7426, %rd10232, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5680,%dummy}, %rd10232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5681}, %rd10232;
	}
	shf.r.wrap.b32 	%r5682, %r5681, %r5680, 1;
	shf.r.wrap.b32 	%r5683, %r5680, %r5681, 1;
	mov.b64 	%rd7427, {%r5683, %r5682};
	xor.b64  	%rd7428, %rd7427, %rd7426;
	shf.r.wrap.b32 	%r5684, %r5681, %r5680, 8;
	shf.r.wrap.b32 	%r5685, %r5680, %r5681, 8;
	mov.b64 	%rd7429, {%r5685, %r5684};
	xor.b64  	%rd7430, %rd7428, %rd7429;
	add.s64 	%rd7431, %rd10245, %rd10233;
	add.s64 	%rd7432, %rd7431, %rd7425;
	add.s64 	%rd10233, %rd7432, %rd7430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5686,%dummy}, %rd10234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5687}, %rd10234;
	}
	shf.r.wrap.b32 	%r5688, %r5687, %r5686, 19;
	shf.r.wrap.b32 	%r5689, %r5686, %r5687, 19;
	mov.b64 	%rd7433, {%r5689, %r5688};
	shf.l.wrap.b32 	%r5690, %r5686, %r5687, 3;
	shf.l.wrap.b32 	%r5691, %r5687, %r5686, 3;
	mov.b64 	%rd7434, {%r5691, %r5690};
	shr.u64 	%rd7435, %rd10234, 6;
	xor.b64  	%rd7436, %rd7433, %rd7435;
	xor.b64  	%rd7437, %rd7436, %rd7434;
	shr.u64 	%rd7438, %rd10231, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5692,%dummy}, %rd10231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5693}, %rd10231;
	}
	shf.r.wrap.b32 	%r5694, %r5693, %r5692, 1;
	shf.r.wrap.b32 	%r5695, %r5692, %r5693, 1;
	mov.b64 	%rd7439, {%r5695, %r5694};
	xor.b64  	%rd7440, %rd7439, %rd7438;
	shf.r.wrap.b32 	%r5696, %r5693, %r5692, 8;
	shf.r.wrap.b32 	%r5697, %r5692, %r5693, 8;
	mov.b64 	%rd7441, {%r5697, %r5696};
	xor.b64  	%rd7442, %rd7440, %rd7441;
	add.s64 	%rd7443, %rd10246, %rd10232;
	add.s64 	%rd7444, %rd7443, %rd7437;
	add.s64 	%rd10232, %rd7444, %rd7442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5698,%dummy}, %rd10233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5699}, %rd10233;
	}
	shf.r.wrap.b32 	%r5700, %r5699, %r5698, 19;
	shf.r.wrap.b32 	%r5701, %r5698, %r5699, 19;
	mov.b64 	%rd7445, {%r5701, %r5700};
	shf.l.wrap.b32 	%r5702, %r5698, %r5699, 3;
	shf.l.wrap.b32 	%r5703, %r5699, %r5698, 3;
	mov.b64 	%rd7446, {%r5703, %r5702};
	shr.u64 	%rd7447, %rd10233, 6;
	xor.b64  	%rd7448, %rd7445, %rd7447;
	xor.b64  	%rd7449, %rd7448, %rd7446;
	shr.u64 	%rd7450, %rd10230, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5704,%dummy}, %rd10230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5705}, %rd10230;
	}
	shf.r.wrap.b32 	%r5706, %r5705, %r5704, 1;
	shf.r.wrap.b32 	%r5707, %r5704, %r5705, 1;
	mov.b64 	%rd7451, {%r5707, %r5706};
	xor.b64  	%rd7452, %rd7451, %rd7450;
	shf.r.wrap.b32 	%r5708, %r5705, %r5704, 8;
	shf.r.wrap.b32 	%r5709, %r5704, %r5705, 8;
	mov.b64 	%rd7453, {%r5709, %r5708};
	xor.b64  	%rd7454, %rd7452, %rd7453;
	add.s64 	%rd7455, %rd10247, %rd10231;
	add.s64 	%rd7456, %rd7455, %rd7449;
	add.s64 	%rd10231, %rd7456, %rd7454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5710,%dummy}, %rd10232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5711}, %rd10232;
	}
	shf.r.wrap.b32 	%r5712, %r5711, %r5710, 19;
	shf.r.wrap.b32 	%r5713, %r5710, %r5711, 19;
	mov.b64 	%rd7457, {%r5713, %r5712};
	shf.l.wrap.b32 	%r5714, %r5710, %r5711, 3;
	shf.l.wrap.b32 	%r5715, %r5711, %r5710, 3;
	mov.b64 	%rd7458, {%r5715, %r5714};
	shr.u64 	%rd7459, %rd10232, 6;
	xor.b64  	%rd7460, %rd7457, %rd7459;
	xor.b64  	%rd7461, %rd7460, %rd7458;
	shr.u64 	%rd7462, %rd10229, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5716,%dummy}, %rd10229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5717}, %rd10229;
	}
	shf.r.wrap.b32 	%r5718, %r5717, %r5716, 1;
	shf.r.wrap.b32 	%r5719, %r5716, %r5717, 1;
	mov.b64 	%rd7463, {%r5719, %r5718};
	xor.b64  	%rd7464, %rd7463, %rd7462;
	shf.r.wrap.b32 	%r5720, %r5717, %r5716, 8;
	shf.r.wrap.b32 	%r5721, %r5716, %r5717, 8;
	mov.b64 	%rd7465, {%r5721, %r5720};
	xor.b64  	%rd7466, %rd7464, %rd7465;
	add.s64 	%rd7467, %rd10248, %rd10230;
	add.s64 	%rd7468, %rd7467, %rd7461;
	add.s64 	%rd10230, %rd7468, %rd7466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5722,%dummy}, %rd10231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5723}, %rd10231;
	}
	shf.r.wrap.b32 	%r5724, %r5723, %r5722, 19;
	shf.r.wrap.b32 	%r5725, %r5722, %r5723, 19;
	mov.b64 	%rd7469, {%r5725, %r5724};
	shf.l.wrap.b32 	%r5726, %r5722, %r5723, 3;
	shf.l.wrap.b32 	%r5727, %r5723, %r5722, 3;
	mov.b64 	%rd7470, {%r5727, %r5726};
	shr.u64 	%rd7471, %rd10231, 6;
	xor.b64  	%rd7472, %rd7469, %rd7471;
	xor.b64  	%rd7473, %rd7472, %rd7470;
	shr.u64 	%rd7474, %rd10228, 7;
	shf.r.wrap.b32 	%r5728, %r5567, %r5566, 1;
	shf.r.wrap.b32 	%r5729, %r5566, %r5567, 1;
	mov.b64 	%rd7475, {%r5729, %r5728};
	xor.b64  	%rd7476, %rd7475, %rd7474;
	shf.r.wrap.b32 	%r5730, %r5567, %r5566, 8;
	shf.r.wrap.b32 	%r5731, %r5566, %r5567, 8;
	mov.b64 	%rd7477, {%r5731, %r5730};
	xor.b64  	%rd7478, %rd7476, %rd7477;
	add.s64 	%rd7479, %rd10249, %rd10229;
	add.s64 	%rd7480, %rd7479, %rd7473;
	add.s64 	%rd10229, %rd7480, %rd7478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5732,%dummy}, %rd10230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5733}, %rd10230;
	}
	shf.r.wrap.b32 	%r5734, %r5733, %r5732, 19;
	shf.r.wrap.b32 	%r5735, %r5732, %r5733, 19;
	mov.b64 	%rd7481, {%r5735, %r5734};
	shf.l.wrap.b32 	%r5736, %r5732, %r5733, 3;
	shf.l.wrap.b32 	%r5737, %r5733, %r5732, 3;
	mov.b64 	%rd7482, {%r5737, %r5736};
	shr.u64 	%rd7483, %rd10230, 6;
	xor.b64  	%rd7484, %rd7481, %rd7483;
	xor.b64  	%rd7485, %rd7484, %rd7482;
	shr.u64 	%rd7486, %rd10227, 7;
	shf.r.wrap.b32 	%r5738, %r5579, %r5578, 1;
	shf.r.wrap.b32 	%r5739, %r5578, %r5579, 1;
	mov.b64 	%rd7487, {%r5739, %r5738};
	xor.b64  	%rd7488, %rd7487, %rd7486;
	shf.r.wrap.b32 	%r5740, %r5579, %r5578, 8;
	shf.r.wrap.b32 	%r5741, %r5578, %r5579, 8;
	mov.b64 	%rd7489, {%r5741, %r5740};
	xor.b64  	%rd7490, %rd7488, %rd7489;
	add.s64 	%rd7491, %rd10250, %rd10228;
	add.s64 	%rd7492, %rd7491, %rd7485;
	add.s64 	%rd10228, %rd7492, %rd7490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5742,%dummy}, %rd10229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5743}, %rd10229;
	}
	shf.r.wrap.b32 	%r5744, %r5743, %r5742, 19;
	shf.r.wrap.b32 	%r5745, %r5742, %r5743, 19;
	mov.b64 	%rd7493, {%r5745, %r5744};
	shf.l.wrap.b32 	%r5746, %r5742, %r5743, 3;
	shf.l.wrap.b32 	%r5747, %r5743, %r5742, 3;
	mov.b64 	%rd7494, {%r5747, %r5746};
	shr.u64 	%rd7495, %rd10229, 6;
	xor.b64  	%rd7496, %rd7493, %rd7495;
	xor.b64  	%rd7497, %rd7496, %rd7494;
	shf.r.wrap.b32 	%r5748, %r5591, %r5590, 1;
	shf.r.wrap.b32 	%r5749, %r5590, %r5591, 1;
	mov.b64 	%rd7498, {%r5749, %r5748};
	shf.r.wrap.b32 	%r5750, %r5591, %r5590, 8;
	shf.r.wrap.b32 	%r5751, %r5590, %r5591, 8;
	mov.b64 	%rd7499, {%r5751, %r5750};
	shr.u64 	%rd7500, %rd10243, 7;
	xor.b64  	%rd7501, %rd7498, %rd7500;
	xor.b64  	%rd7502, %rd7501, %rd7499;
	add.s64 	%rd7503, %rd10234, %rd10227;
	add.s64 	%rd7504, %rd7503, %rd7497;
	add.s64 	%rd10227, %rd7504, %rd7502;
	mul.wide.s32 	%rd7505, %r7679, 8;
	mov.u64 	%rd7506, k_sha512;
	add.s64 	%rd7507, %rd7506, %rd7505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5752,%dummy}, %rd10239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5753}, %rd10239;
	}
	shf.r.wrap.b32 	%r5754, %r5753, %r5752, 18;
	shf.r.wrap.b32 	%r5755, %r5752, %r5753, 18;
	mov.b64 	%rd7508, {%r5755, %r5754};
	shf.r.wrap.b32 	%r5756, %r5753, %r5752, 14;
	shf.r.wrap.b32 	%r5757, %r5752, %r5753, 14;
	mov.b64 	%rd7509, {%r5757, %r5756};
	xor.b64  	%rd7510, %rd7508, %rd7509;
	shf.l.wrap.b32 	%r5758, %r5752, %r5753, 23;
	shf.l.wrap.b32 	%r5759, %r5753, %r5752, 23;
	mov.b64 	%rd7511, {%r5759, %r5758};
	xor.b64  	%rd7512, %rd7510, %rd7511;
	xor.b64  	%rd7513, %rd10240, %rd10241;
	and.b64  	%rd7514, %rd10239, %rd7513;
	xor.b64  	%rd7515, %rd7514, %rd10241;
	add.s64 	%rd7516, %rd7515, %rd10242;
	add.s64 	%rd7517, %rd7516, %rd10243;
	ld.const.u64 	%rd7518, [%rd7507];
	add.s64 	%rd7519, %rd7517, %rd7518;
	add.s64 	%rd7520, %rd7519, %rd7512;
	add.s64 	%rd7521, %rd7520, %rd10238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5760}, %rd10235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5761,%dummy}, %rd10235;
	}
	shf.l.wrap.b32 	%r5762, %r5761, %r5760, 30;
	shf.l.wrap.b32 	%r5763, %r5760, %r5761, 30;
	mov.b64 	%rd7522, {%r5763, %r5762};
	shf.r.wrap.b32 	%r5764, %r5760, %r5761, 28;
	shf.r.wrap.b32 	%r5765, %r5761, %r5760, 28;
	mov.b64 	%rd7523, {%r5765, %r5764};
	xor.b64  	%rd7524, %rd7522, %rd7523;
	shf.l.wrap.b32 	%r5766, %r5761, %r5760, 25;
	shf.l.wrap.b32 	%r5767, %r5760, %r5761, 25;
	mov.b64 	%rd7525, {%r5767, %r5766};
	xor.b64  	%rd7526, %rd7524, %rd7525;
	xor.b64  	%rd7527, %rd10235, %rd10236;
	and.b64  	%rd7528, %rd7527, %rd10237;
	and.b64  	%rd7529, %rd10235, %rd10236;
	or.b64  	%rd7530, %rd7528, %rd7529;
	add.s64 	%rd7531, %rd7520, %rd7530;
	add.s64 	%rd7532, %rd7531, %rd7526;
	add.s32 	%r5768, %r7679, 1;
	mul.wide.s32 	%rd7533, %r5768, 8;
	add.s64 	%rd7534, %rd7506, %rd7533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5769,%dummy}, %rd7521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5770}, %rd7521;
	}
	shf.r.wrap.b32 	%r5771, %r5770, %r5769, 14;
	shf.r.wrap.b32 	%r5772, %r5769, %r5770, 14;
	mov.b64 	%rd7535, {%r5772, %r5771};
	shf.r.wrap.b32 	%r5773, %r5770, %r5769, 18;
	shf.r.wrap.b32 	%r5774, %r5769, %r5770, 18;
	mov.b64 	%rd7536, {%r5774, %r5773};
	xor.b64  	%rd7537, %rd7536, %rd7535;
	shf.l.wrap.b32 	%r5775, %r5769, %r5770, 23;
	shf.l.wrap.b32 	%r5776, %r5770, %r5769, 23;
	mov.b64 	%rd7538, {%r5776, %r5775};
	xor.b64  	%rd7539, %rd7537, %rd7538;
	xor.b64  	%rd7540, %rd10239, %rd10240;
	and.b64  	%rd7541, %rd7521, %rd7540;
	xor.b64  	%rd7542, %rd7541, %rd10240;
	add.s64 	%rd7543, %rd10244, %rd10241;
	ld.const.u64 	%rd7544, [%rd7534];
	add.s64 	%rd7545, %rd7543, %rd7544;
	add.s64 	%rd7546, %rd7545, %rd7542;
	add.s64 	%rd7547, %rd7546, %rd7539;
	add.s64 	%rd7548, %rd7547, %rd10237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5777,%dummy}, %rd7532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5778}, %rd7532;
	}
	shf.r.wrap.b32 	%r5779, %r5778, %r5777, 28;
	shf.r.wrap.b32 	%r5780, %r5777, %r5778, 28;
	mov.b64 	%rd7549, {%r5780, %r5779};
	shf.l.wrap.b32 	%r5781, %r5777, %r5778, 30;
	shf.l.wrap.b32 	%r5782, %r5778, %r5777, 30;
	mov.b64 	%rd7550, {%r5782, %r5781};
	xor.b64  	%rd7551, %rd7550, %rd7549;
	shf.l.wrap.b32 	%r5783, %r5777, %r5778, 25;
	shf.l.wrap.b32 	%r5784, %r5778, %r5777, 25;
	mov.b64 	%rd7552, {%r5784, %r5783};
	xor.b64  	%rd7553, %rd7551, %rd7552;
	and.b64  	%rd7554, %rd7532, %rd10235;
	xor.b64  	%rd7555, %rd7532, %rd10235;
	and.b64  	%rd7556, %rd7555, %rd10236;
	or.b64  	%rd7557, %rd7556, %rd7554;
	add.s64 	%rd7558, %rd7547, %rd7557;
	add.s64 	%rd7559, %rd7558, %rd7553;
	add.s32 	%r5785, %r7679, 2;
	mul.wide.s32 	%rd7560, %r5785, 8;
	add.s64 	%rd7561, %rd7506, %rd7560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5786,%dummy}, %rd7548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5787}, %rd7548;
	}
	shf.r.wrap.b32 	%r5788, %r5787, %r5786, 14;
	shf.r.wrap.b32 	%r5789, %r5786, %r5787, 14;
	mov.b64 	%rd7562, {%r5789, %r5788};
	shf.r.wrap.b32 	%r5790, %r5787, %r5786, 18;
	shf.r.wrap.b32 	%r5791, %r5786, %r5787, 18;
	mov.b64 	%rd7563, {%r5791, %r5790};
	xor.b64  	%rd7564, %rd7563, %rd7562;
	shf.l.wrap.b32 	%r5792, %r5786, %r5787, 23;
	shf.l.wrap.b32 	%r5793, %r5787, %r5786, 23;
	mov.b64 	%rd7565, {%r5793, %r5792};
	xor.b64  	%rd7566, %rd7564, %rd7565;
	xor.b64  	%rd7567, %rd7521, %rd10239;
	and.b64  	%rd7568, %rd7548, %rd7567;
	xor.b64  	%rd7569, %rd7568, %rd10239;
	add.s64 	%rd7570, %rd10245, %rd10240;
	ld.const.u64 	%rd7571, [%rd7561];
	add.s64 	%rd7572, %rd7570, %rd7571;
	add.s64 	%rd7573, %rd7572, %rd7569;
	add.s64 	%rd7574, %rd7573, %rd7566;
	add.s64 	%rd7575, %rd7574, %rd10236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5794,%dummy}, %rd7559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5795}, %rd7559;
	}
	shf.r.wrap.b32 	%r5796, %r5795, %r5794, 28;
	shf.r.wrap.b32 	%r5797, %r5794, %r5795, 28;
	mov.b64 	%rd7576, {%r5797, %r5796};
	shf.l.wrap.b32 	%r5798, %r5794, %r5795, 30;
	shf.l.wrap.b32 	%r5799, %r5795, %r5794, 30;
	mov.b64 	%rd7577, {%r5799, %r5798};
	xor.b64  	%rd7578, %rd7577, %rd7576;
	shf.l.wrap.b32 	%r5800, %r5794, %r5795, 25;
	shf.l.wrap.b32 	%r5801, %r5795, %r5794, 25;
	mov.b64 	%rd7579, {%r5801, %r5800};
	xor.b64  	%rd7580, %rd7578, %rd7579;
	and.b64  	%rd7581, %rd7559, %rd7532;
	xor.b64  	%rd7582, %rd7559, %rd7532;
	and.b64  	%rd7583, %rd7582, %rd10235;
	or.b64  	%rd7584, %rd7583, %rd7581;
	add.s64 	%rd7585, %rd7574, %rd7584;
	add.s64 	%rd7586, %rd7585, %rd7580;
	add.s32 	%r5802, %r7679, 3;
	mul.wide.s32 	%rd7587, %r5802, 8;
	add.s64 	%rd7588, %rd7506, %rd7587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5803,%dummy}, %rd7575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5804}, %rd7575;
	}
	shf.r.wrap.b32 	%r5805, %r5804, %r5803, 14;
	shf.r.wrap.b32 	%r5806, %r5803, %r5804, 14;
	mov.b64 	%rd7589, {%r5806, %r5805};
	shf.r.wrap.b32 	%r5807, %r5804, %r5803, 18;
	shf.r.wrap.b32 	%r5808, %r5803, %r5804, 18;
	mov.b64 	%rd7590, {%r5808, %r5807};
	xor.b64  	%rd7591, %rd7590, %rd7589;
	shf.l.wrap.b32 	%r5809, %r5803, %r5804, 23;
	shf.l.wrap.b32 	%r5810, %r5804, %r5803, 23;
	mov.b64 	%rd7592, {%r5810, %r5809};
	xor.b64  	%rd7593, %rd7591, %rd7592;
	xor.b64  	%rd7594, %rd7548, %rd7521;
	and.b64  	%rd7595, %rd7575, %rd7594;
	xor.b64  	%rd7596, %rd7595, %rd7521;
	add.s64 	%rd7597, %rd10246, %rd10239;
	ld.const.u64 	%rd7598, [%rd7588];
	add.s64 	%rd7599, %rd7597, %rd7598;
	add.s64 	%rd7600, %rd7599, %rd7596;
	add.s64 	%rd7601, %rd7600, %rd7593;
	add.s64 	%rd7602, %rd7601, %rd10235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5811,%dummy}, %rd7586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5812}, %rd7586;
	}
	shf.r.wrap.b32 	%r5813, %r5812, %r5811, 28;
	shf.r.wrap.b32 	%r5814, %r5811, %r5812, 28;
	mov.b64 	%rd7603, {%r5814, %r5813};
	shf.l.wrap.b32 	%r5815, %r5811, %r5812, 30;
	shf.l.wrap.b32 	%r5816, %r5812, %r5811, 30;
	mov.b64 	%rd7604, {%r5816, %r5815};
	xor.b64  	%rd7605, %rd7604, %rd7603;
	shf.l.wrap.b32 	%r5817, %r5811, %r5812, 25;
	shf.l.wrap.b32 	%r5818, %r5812, %r5811, 25;
	mov.b64 	%rd7606, {%r5818, %r5817};
	xor.b64  	%rd7607, %rd7605, %rd7606;
	and.b64  	%rd7608, %rd7586, %rd7559;
	xor.b64  	%rd7609, %rd7586, %rd7559;
	and.b64  	%rd7610, %rd7609, %rd7532;
	or.b64  	%rd7611, %rd7610, %rd7608;
	add.s64 	%rd7612, %rd7601, %rd7611;
	add.s64 	%rd7613, %rd7612, %rd7607;
	add.s32 	%r5819, %r7679, 4;
	mul.wide.s32 	%rd7614, %r5819, 8;
	add.s64 	%rd7615, %rd7506, %rd7614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5820,%dummy}, %rd7602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5821}, %rd7602;
	}
	shf.r.wrap.b32 	%r5822, %r5821, %r5820, 14;
	shf.r.wrap.b32 	%r5823, %r5820, %r5821, 14;
	mov.b64 	%rd7616, {%r5823, %r5822};
	shf.r.wrap.b32 	%r5824, %r5821, %r5820, 18;
	shf.r.wrap.b32 	%r5825, %r5820, %r5821, 18;
	mov.b64 	%rd7617, {%r5825, %r5824};
	xor.b64  	%rd7618, %rd7617, %rd7616;
	shf.l.wrap.b32 	%r5826, %r5820, %r5821, 23;
	shf.l.wrap.b32 	%r5827, %r5821, %r5820, 23;
	mov.b64 	%rd7619, {%r5827, %r5826};
	xor.b64  	%rd7620, %rd7618, %rd7619;
	xor.b64  	%rd7621, %rd7575, %rd7548;
	and.b64  	%rd7622, %rd7602, %rd7621;
	xor.b64  	%rd7623, %rd7622, %rd7548;
	add.s64 	%rd7624, %rd7521, %rd10247;
	ld.const.u64 	%rd7625, [%rd7615];
	add.s64 	%rd7626, %rd7624, %rd7625;
	add.s64 	%rd7627, %rd7626, %rd7623;
	add.s64 	%rd7628, %rd7627, %rd7620;
	add.s64 	%rd7629, %rd7628, %rd7532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5828,%dummy}, %rd7613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5829}, %rd7613;
	}
	shf.r.wrap.b32 	%r5830, %r5829, %r5828, 28;
	shf.r.wrap.b32 	%r5831, %r5828, %r5829, 28;
	mov.b64 	%rd7630, {%r5831, %r5830};
	shf.l.wrap.b32 	%r5832, %r5828, %r5829, 30;
	shf.l.wrap.b32 	%r5833, %r5829, %r5828, 30;
	mov.b64 	%rd7631, {%r5833, %r5832};
	xor.b64  	%rd7632, %rd7631, %rd7630;
	shf.l.wrap.b32 	%r5834, %r5828, %r5829, 25;
	shf.l.wrap.b32 	%r5835, %r5829, %r5828, 25;
	mov.b64 	%rd7633, {%r5835, %r5834};
	xor.b64  	%rd7634, %rd7632, %rd7633;
	and.b64  	%rd7635, %rd7613, %rd7586;
	xor.b64  	%rd7636, %rd7613, %rd7586;
	and.b64  	%rd7637, %rd7636, %rd7559;
	or.b64  	%rd7638, %rd7637, %rd7635;
	add.s64 	%rd7639, %rd7628, %rd7638;
	add.s64 	%rd7640, %rd7639, %rd7634;
	add.s32 	%r5836, %r7679, 5;
	mul.wide.s32 	%rd7641, %r5836, 8;
	add.s64 	%rd7642, %rd7506, %rd7641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5837,%dummy}, %rd7629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5838}, %rd7629;
	}
	shf.r.wrap.b32 	%r5839, %r5838, %r5837, 14;
	shf.r.wrap.b32 	%r5840, %r5837, %r5838, 14;
	mov.b64 	%rd7643, {%r5840, %r5839};
	shf.r.wrap.b32 	%r5841, %r5838, %r5837, 18;
	shf.r.wrap.b32 	%r5842, %r5837, %r5838, 18;
	mov.b64 	%rd7644, {%r5842, %r5841};
	xor.b64  	%rd7645, %rd7644, %rd7643;
	shf.l.wrap.b32 	%r5843, %r5837, %r5838, 23;
	shf.l.wrap.b32 	%r5844, %r5838, %r5837, 23;
	mov.b64 	%rd7646, {%r5844, %r5843};
	xor.b64  	%rd7647, %rd7645, %rd7646;
	xor.b64  	%rd7648, %rd7602, %rd7575;
	and.b64  	%rd7649, %rd7629, %rd7648;
	xor.b64  	%rd7650, %rd7649, %rd7575;
	add.s64 	%rd7651, %rd7548, %rd10248;
	ld.const.u64 	%rd7652, [%rd7642];
	add.s64 	%rd7653, %rd7651, %rd7652;
	add.s64 	%rd7654, %rd7653, %rd7650;
	add.s64 	%rd7655, %rd7654, %rd7647;
	add.s64 	%rd7656, %rd7655, %rd7559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5845,%dummy}, %rd7640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5846}, %rd7640;
	}
	shf.r.wrap.b32 	%r5847, %r5846, %r5845, 28;
	shf.r.wrap.b32 	%r5848, %r5845, %r5846, 28;
	mov.b64 	%rd7657, {%r5848, %r5847};
	shf.l.wrap.b32 	%r5849, %r5845, %r5846, 30;
	shf.l.wrap.b32 	%r5850, %r5846, %r5845, 30;
	mov.b64 	%rd7658, {%r5850, %r5849};
	xor.b64  	%rd7659, %rd7658, %rd7657;
	shf.l.wrap.b32 	%r5851, %r5845, %r5846, 25;
	shf.l.wrap.b32 	%r5852, %r5846, %r5845, 25;
	mov.b64 	%rd7660, {%r5852, %r5851};
	xor.b64  	%rd7661, %rd7659, %rd7660;
	and.b64  	%rd7662, %rd7640, %rd7613;
	xor.b64  	%rd7663, %rd7640, %rd7613;
	and.b64  	%rd7664, %rd7663, %rd7586;
	or.b64  	%rd7665, %rd7664, %rd7662;
	add.s64 	%rd7666, %rd7655, %rd7665;
	add.s64 	%rd7667, %rd7666, %rd7661;
	add.s32 	%r5853, %r7679, 6;
	mul.wide.s32 	%rd7668, %r5853, 8;
	add.s64 	%rd7669, %rd7506, %rd7668;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5854,%dummy}, %rd7656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5855}, %rd7656;
	}
	shf.r.wrap.b32 	%r5856, %r5855, %r5854, 14;
	shf.r.wrap.b32 	%r5857, %r5854, %r5855, 14;
	mov.b64 	%rd7670, {%r5857, %r5856};
	shf.r.wrap.b32 	%r5858, %r5855, %r5854, 18;
	shf.r.wrap.b32 	%r5859, %r5854, %r5855, 18;
	mov.b64 	%rd7671, {%r5859, %r5858};
	xor.b64  	%rd7672, %rd7671, %rd7670;
	shf.l.wrap.b32 	%r5860, %r5854, %r5855, 23;
	shf.l.wrap.b32 	%r5861, %r5855, %r5854, 23;
	mov.b64 	%rd7673, {%r5861, %r5860};
	xor.b64  	%rd7674, %rd7672, %rd7673;
	xor.b64  	%rd7675, %rd7629, %rd7602;
	and.b64  	%rd7676, %rd7656, %rd7675;
	xor.b64  	%rd7677, %rd7676, %rd7602;
	add.s64 	%rd7678, %rd7575, %rd10249;
	ld.const.u64 	%rd7679, [%rd7669];
	add.s64 	%rd7680, %rd7678, %rd7679;
	add.s64 	%rd7681, %rd7680, %rd7677;
	add.s64 	%rd7682, %rd7681, %rd7674;
	add.s64 	%rd7683, %rd7682, %rd7586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5862,%dummy}, %rd7667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5863}, %rd7667;
	}
	shf.r.wrap.b32 	%r5864, %r5863, %r5862, 28;
	shf.r.wrap.b32 	%r5865, %r5862, %r5863, 28;
	mov.b64 	%rd7684, {%r5865, %r5864};
	shf.l.wrap.b32 	%r5866, %r5862, %r5863, 30;
	shf.l.wrap.b32 	%r5867, %r5863, %r5862, 30;
	mov.b64 	%rd7685, {%r5867, %r5866};
	xor.b64  	%rd7686, %rd7685, %rd7684;
	shf.l.wrap.b32 	%r5868, %r5862, %r5863, 25;
	shf.l.wrap.b32 	%r5869, %r5863, %r5862, 25;
	mov.b64 	%rd7687, {%r5869, %r5868};
	xor.b64  	%rd7688, %rd7686, %rd7687;
	and.b64  	%rd7689, %rd7667, %rd7640;
	xor.b64  	%rd7690, %rd7667, %rd7640;
	and.b64  	%rd7691, %rd7690, %rd7613;
	or.b64  	%rd7692, %rd7691, %rd7689;
	add.s64 	%rd7693, %rd7682, %rd7692;
	add.s64 	%rd7694, %rd7693, %rd7688;
	add.s32 	%r5870, %r7679, 7;
	mul.wide.s32 	%rd7695, %r5870, 8;
	add.s64 	%rd7696, %rd7506, %rd7695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5871,%dummy}, %rd7683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5872}, %rd7683;
	}
	shf.r.wrap.b32 	%r5873, %r5872, %r5871, 14;
	shf.r.wrap.b32 	%r5874, %r5871, %r5872, 14;
	mov.b64 	%rd7697, {%r5874, %r5873};
	shf.r.wrap.b32 	%r5875, %r5872, %r5871, 18;
	shf.r.wrap.b32 	%r5876, %r5871, %r5872, 18;
	mov.b64 	%rd7698, {%r5876, %r5875};
	xor.b64  	%rd7699, %rd7698, %rd7697;
	shf.l.wrap.b32 	%r5877, %r5871, %r5872, 23;
	shf.l.wrap.b32 	%r5878, %r5872, %r5871, 23;
	mov.b64 	%rd7700, {%r5878, %r5877};
	xor.b64  	%rd7701, %rd7699, %rd7700;
	xor.b64  	%rd7702, %rd7656, %rd7629;
	and.b64  	%rd7703, %rd7683, %rd7702;
	xor.b64  	%rd7704, %rd7703, %rd7629;
	add.s64 	%rd7705, %rd7602, %rd10250;
	ld.const.u64 	%rd7706, [%rd7696];
	add.s64 	%rd7707, %rd7705, %rd7706;
	add.s64 	%rd7708, %rd7707, %rd7704;
	add.s64 	%rd7709, %rd7708, %rd7701;
	add.s64 	%rd7710, %rd7709, %rd7613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5879,%dummy}, %rd7694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5880}, %rd7694;
	}
	shf.r.wrap.b32 	%r5881, %r5880, %r5879, 28;
	shf.r.wrap.b32 	%r5882, %r5879, %r5880, 28;
	mov.b64 	%rd7711, {%r5882, %r5881};
	shf.l.wrap.b32 	%r5883, %r5879, %r5880, 30;
	shf.l.wrap.b32 	%r5884, %r5880, %r5879, 30;
	mov.b64 	%rd7712, {%r5884, %r5883};
	xor.b64  	%rd7713, %rd7712, %rd7711;
	shf.l.wrap.b32 	%r5885, %r5879, %r5880, 25;
	shf.l.wrap.b32 	%r5886, %r5880, %r5879, 25;
	mov.b64 	%rd7714, {%r5886, %r5885};
	xor.b64  	%rd7715, %rd7713, %rd7714;
	and.b64  	%rd7716, %rd7694, %rd7667;
	xor.b64  	%rd7717, %rd7694, %rd7667;
	and.b64  	%rd7718, %rd7717, %rd7640;
	or.b64  	%rd7719, %rd7718, %rd7716;
	add.s64 	%rd7720, %rd7709, %rd7719;
	add.s64 	%rd7721, %rd7720, %rd7715;
	add.s32 	%r5887, %r7679, 8;
	mul.wide.s32 	%rd7722, %r5887, 8;
	add.s64 	%rd7723, %rd7506, %rd7722;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5888,%dummy}, %rd7710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5889}, %rd7710;
	}
	shf.r.wrap.b32 	%r5890, %r5889, %r5888, 14;
	shf.r.wrap.b32 	%r5891, %r5888, %r5889, 14;
	mov.b64 	%rd7724, {%r5891, %r5890};
	shf.r.wrap.b32 	%r5892, %r5889, %r5888, 18;
	shf.r.wrap.b32 	%r5893, %r5888, %r5889, 18;
	mov.b64 	%rd7725, {%r5893, %r5892};
	xor.b64  	%rd7726, %rd7725, %rd7724;
	shf.l.wrap.b32 	%r5894, %r5888, %r5889, 23;
	shf.l.wrap.b32 	%r5895, %r5889, %r5888, 23;
	mov.b64 	%rd7727, {%r5895, %r5894};
	xor.b64  	%rd7728, %rd7726, %rd7727;
	xor.b64  	%rd7729, %rd7683, %rd7656;
	and.b64  	%rd7730, %rd7710, %rd7729;
	xor.b64  	%rd7731, %rd7730, %rd7656;
	add.s64 	%rd7732, %rd7629, %rd10234;
	ld.const.u64 	%rd7733, [%rd7723];
	add.s64 	%rd7734, %rd7732, %rd7733;
	add.s64 	%rd7735, %rd7734, %rd7731;
	add.s64 	%rd7736, %rd7735, %rd7728;
	add.s64 	%rd7737, %rd7736, %rd7640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5896,%dummy}, %rd7721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5897}, %rd7721;
	}
	shf.r.wrap.b32 	%r5898, %r5897, %r5896, 28;
	shf.r.wrap.b32 	%r5899, %r5896, %r5897, 28;
	mov.b64 	%rd7738, {%r5899, %r5898};
	shf.l.wrap.b32 	%r5900, %r5896, %r5897, 30;
	shf.l.wrap.b32 	%r5901, %r5897, %r5896, 30;
	mov.b64 	%rd7739, {%r5901, %r5900};
	xor.b64  	%rd7740, %rd7739, %rd7738;
	shf.l.wrap.b32 	%r5902, %r5896, %r5897, 25;
	shf.l.wrap.b32 	%r5903, %r5897, %r5896, 25;
	mov.b64 	%rd7741, {%r5903, %r5902};
	xor.b64  	%rd7742, %rd7740, %rd7741;
	and.b64  	%rd7743, %rd7721, %rd7694;
	xor.b64  	%rd7744, %rd7721, %rd7694;
	and.b64  	%rd7745, %rd7744, %rd7667;
	or.b64  	%rd7746, %rd7745, %rd7743;
	add.s64 	%rd7747, %rd7736, %rd7746;
	add.s64 	%rd7748, %rd7747, %rd7742;
	add.s32 	%r5904, %r7679, 9;
	mul.wide.s32 	%rd7749, %r5904, 8;
	add.s64 	%rd7750, %rd7506, %rd7749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5905,%dummy}, %rd7737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5906}, %rd7737;
	}
	shf.r.wrap.b32 	%r5907, %r5906, %r5905, 14;
	shf.r.wrap.b32 	%r5908, %r5905, %r5906, 14;
	mov.b64 	%rd7751, {%r5908, %r5907};
	shf.r.wrap.b32 	%r5909, %r5906, %r5905, 18;
	shf.r.wrap.b32 	%r5910, %r5905, %r5906, 18;
	mov.b64 	%rd7752, {%r5910, %r5909};
	xor.b64  	%rd7753, %rd7752, %rd7751;
	shf.l.wrap.b32 	%r5911, %r5905, %r5906, 23;
	shf.l.wrap.b32 	%r5912, %r5906, %r5905, 23;
	mov.b64 	%rd7754, {%r5912, %r5911};
	xor.b64  	%rd7755, %rd7753, %rd7754;
	xor.b64  	%rd7756, %rd7710, %rd7683;
	and.b64  	%rd7757, %rd7737, %rd7756;
	xor.b64  	%rd7758, %rd7757, %rd7683;
	add.s64 	%rd7759, %rd7656, %rd10233;
	ld.const.u64 	%rd7760, [%rd7750];
	add.s64 	%rd7761, %rd7759, %rd7760;
	add.s64 	%rd7762, %rd7761, %rd7758;
	add.s64 	%rd7763, %rd7762, %rd7755;
	add.s64 	%rd7764, %rd7763, %rd7667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5913,%dummy}, %rd7748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5914}, %rd7748;
	}
	shf.r.wrap.b32 	%r5915, %r5914, %r5913, 28;
	shf.r.wrap.b32 	%r5916, %r5913, %r5914, 28;
	mov.b64 	%rd7765, {%r5916, %r5915};
	shf.l.wrap.b32 	%r5917, %r5913, %r5914, 30;
	shf.l.wrap.b32 	%r5918, %r5914, %r5913, 30;
	mov.b64 	%rd7766, {%r5918, %r5917};
	xor.b64  	%rd7767, %rd7766, %rd7765;
	shf.l.wrap.b32 	%r5919, %r5913, %r5914, 25;
	shf.l.wrap.b32 	%r5920, %r5914, %r5913, 25;
	mov.b64 	%rd7768, {%r5920, %r5919};
	xor.b64  	%rd7769, %rd7767, %rd7768;
	and.b64  	%rd7770, %rd7748, %rd7721;
	xor.b64  	%rd7771, %rd7748, %rd7721;
	and.b64  	%rd7772, %rd7771, %rd7694;
	or.b64  	%rd7773, %rd7772, %rd7770;
	add.s64 	%rd7774, %rd7763, %rd7773;
	add.s64 	%rd7775, %rd7774, %rd7769;
	add.s32 	%r5921, %r7679, 10;
	mul.wide.s32 	%rd7776, %r5921, 8;
	add.s64 	%rd7777, %rd7506, %rd7776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5922,%dummy}, %rd7764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5923}, %rd7764;
	}
	shf.r.wrap.b32 	%r5924, %r5923, %r5922, 14;
	shf.r.wrap.b32 	%r5925, %r5922, %r5923, 14;
	mov.b64 	%rd7778, {%r5925, %r5924};
	shf.r.wrap.b32 	%r5926, %r5923, %r5922, 18;
	shf.r.wrap.b32 	%r5927, %r5922, %r5923, 18;
	mov.b64 	%rd7779, {%r5927, %r5926};
	xor.b64  	%rd7780, %rd7779, %rd7778;
	shf.l.wrap.b32 	%r5928, %r5922, %r5923, 23;
	shf.l.wrap.b32 	%r5929, %r5923, %r5922, 23;
	mov.b64 	%rd7781, {%r5929, %r5928};
	xor.b64  	%rd7782, %rd7780, %rd7781;
	xor.b64  	%rd7783, %rd7737, %rd7710;
	and.b64  	%rd7784, %rd7764, %rd7783;
	xor.b64  	%rd7785, %rd7784, %rd7710;
	add.s64 	%rd7786, %rd7683, %rd10232;
	ld.const.u64 	%rd7787, [%rd7777];
	add.s64 	%rd7788, %rd7786, %rd7787;
	add.s64 	%rd7789, %rd7788, %rd7785;
	add.s64 	%rd7790, %rd7789, %rd7782;
	add.s64 	%rd7791, %rd7790, %rd7694;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5930,%dummy}, %rd7775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5931}, %rd7775;
	}
	shf.r.wrap.b32 	%r5932, %r5931, %r5930, 28;
	shf.r.wrap.b32 	%r5933, %r5930, %r5931, 28;
	mov.b64 	%rd7792, {%r5933, %r5932};
	shf.l.wrap.b32 	%r5934, %r5930, %r5931, 30;
	shf.l.wrap.b32 	%r5935, %r5931, %r5930, 30;
	mov.b64 	%rd7793, {%r5935, %r5934};
	xor.b64  	%rd7794, %rd7793, %rd7792;
	shf.l.wrap.b32 	%r5936, %r5930, %r5931, 25;
	shf.l.wrap.b32 	%r5937, %r5931, %r5930, 25;
	mov.b64 	%rd7795, {%r5937, %r5936};
	xor.b64  	%rd7796, %rd7794, %rd7795;
	and.b64  	%rd7797, %rd7775, %rd7748;
	xor.b64  	%rd7798, %rd7775, %rd7748;
	and.b64  	%rd7799, %rd7798, %rd7721;
	or.b64  	%rd7800, %rd7799, %rd7797;
	add.s64 	%rd7801, %rd7790, %rd7800;
	add.s64 	%rd7802, %rd7801, %rd7796;
	add.s32 	%r5938, %r7679, 11;
	mul.wide.s32 	%rd7803, %r5938, 8;
	add.s64 	%rd7804, %rd7506, %rd7803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5939,%dummy}, %rd7791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5940}, %rd7791;
	}
	shf.r.wrap.b32 	%r5941, %r5940, %r5939, 14;
	shf.r.wrap.b32 	%r5942, %r5939, %r5940, 14;
	mov.b64 	%rd7805, {%r5942, %r5941};
	shf.r.wrap.b32 	%r5943, %r5940, %r5939, 18;
	shf.r.wrap.b32 	%r5944, %r5939, %r5940, 18;
	mov.b64 	%rd7806, {%r5944, %r5943};
	xor.b64  	%rd7807, %rd7806, %rd7805;
	shf.l.wrap.b32 	%r5945, %r5939, %r5940, 23;
	shf.l.wrap.b32 	%r5946, %r5940, %r5939, 23;
	mov.b64 	%rd7808, {%r5946, %r5945};
	xor.b64  	%rd7809, %rd7807, %rd7808;
	xor.b64  	%rd7810, %rd7764, %rd7737;
	and.b64  	%rd7811, %rd7791, %rd7810;
	xor.b64  	%rd7812, %rd7811, %rd7737;
	add.s64 	%rd7813, %rd7710, %rd10231;
	ld.const.u64 	%rd7814, [%rd7804];
	add.s64 	%rd7815, %rd7813, %rd7814;
	add.s64 	%rd7816, %rd7815, %rd7812;
	add.s64 	%rd7817, %rd7816, %rd7809;
	add.s64 	%rd7818, %rd7817, %rd7721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5947,%dummy}, %rd7802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5948}, %rd7802;
	}
	shf.r.wrap.b32 	%r5949, %r5948, %r5947, 28;
	shf.r.wrap.b32 	%r5950, %r5947, %r5948, 28;
	mov.b64 	%rd7819, {%r5950, %r5949};
	shf.l.wrap.b32 	%r5951, %r5947, %r5948, 30;
	shf.l.wrap.b32 	%r5952, %r5948, %r5947, 30;
	mov.b64 	%rd7820, {%r5952, %r5951};
	xor.b64  	%rd7821, %rd7820, %rd7819;
	shf.l.wrap.b32 	%r5953, %r5947, %r5948, 25;
	shf.l.wrap.b32 	%r5954, %r5948, %r5947, 25;
	mov.b64 	%rd7822, {%r5954, %r5953};
	xor.b64  	%rd7823, %rd7821, %rd7822;
	and.b64  	%rd7824, %rd7802, %rd7775;
	xor.b64  	%rd7825, %rd7802, %rd7775;
	and.b64  	%rd7826, %rd7825, %rd7748;
	or.b64  	%rd7827, %rd7826, %rd7824;
	add.s64 	%rd7828, %rd7817, %rd7827;
	add.s64 	%rd7829, %rd7828, %rd7823;
	add.s32 	%r5955, %r7679, 12;
	mul.wide.s32 	%rd7830, %r5955, 8;
	add.s64 	%rd7831, %rd7506, %rd7830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5956,%dummy}, %rd7818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5957}, %rd7818;
	}
	shf.r.wrap.b32 	%r5958, %r5957, %r5956, 14;
	shf.r.wrap.b32 	%r5959, %r5956, %r5957, 14;
	mov.b64 	%rd7832, {%r5959, %r5958};
	shf.r.wrap.b32 	%r5960, %r5957, %r5956, 18;
	shf.r.wrap.b32 	%r5961, %r5956, %r5957, 18;
	mov.b64 	%rd7833, {%r5961, %r5960};
	xor.b64  	%rd7834, %rd7833, %rd7832;
	shf.l.wrap.b32 	%r5962, %r5956, %r5957, 23;
	shf.l.wrap.b32 	%r5963, %r5957, %r5956, 23;
	mov.b64 	%rd7835, {%r5963, %r5962};
	xor.b64  	%rd7836, %rd7834, %rd7835;
	xor.b64  	%rd7837, %rd7791, %rd7764;
	and.b64  	%rd7838, %rd7818, %rd7837;
	xor.b64  	%rd7839, %rd7838, %rd7764;
	add.s64 	%rd7840, %rd7737, %rd10230;
	ld.const.u64 	%rd7841, [%rd7831];
	add.s64 	%rd7842, %rd7840, %rd7841;
	add.s64 	%rd7843, %rd7842, %rd7839;
	add.s64 	%rd7844, %rd7843, %rd7836;
	add.s64 	%rd10242, %rd7844, %rd7748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5964,%dummy}, %rd7829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5965}, %rd7829;
	}
	shf.r.wrap.b32 	%r5966, %r5965, %r5964, 28;
	shf.r.wrap.b32 	%r5967, %r5964, %r5965, 28;
	mov.b64 	%rd7845, {%r5967, %r5966};
	shf.l.wrap.b32 	%r5968, %r5964, %r5965, 30;
	shf.l.wrap.b32 	%r5969, %r5965, %r5964, 30;
	mov.b64 	%rd7846, {%r5969, %r5968};
	xor.b64  	%rd7847, %rd7846, %rd7845;
	shf.l.wrap.b32 	%r5970, %r5964, %r5965, 25;
	shf.l.wrap.b32 	%r5971, %r5965, %r5964, 25;
	mov.b64 	%rd7848, {%r5971, %r5970};
	xor.b64  	%rd7849, %rd7847, %rd7848;
	and.b64  	%rd7850, %rd7829, %rd7802;
	xor.b64  	%rd7851, %rd7829, %rd7802;
	and.b64  	%rd7852, %rd7851, %rd7775;
	or.b64  	%rd7853, %rd7852, %rd7850;
	add.s64 	%rd7854, %rd7844, %rd7853;
	add.s64 	%rd10238, %rd7854, %rd7849;
	add.s32 	%r5972, %r7679, 13;
	mul.wide.s32 	%rd7855, %r5972, 8;
	add.s64 	%rd7856, %rd7506, %rd7855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5973,%dummy}, %rd10242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5974}, %rd10242;
	}
	shf.r.wrap.b32 	%r5975, %r5974, %r5973, 14;
	shf.r.wrap.b32 	%r5976, %r5973, %r5974, 14;
	mov.b64 	%rd7857, {%r5976, %r5975};
	shf.r.wrap.b32 	%r5977, %r5974, %r5973, 18;
	shf.r.wrap.b32 	%r5978, %r5973, %r5974, 18;
	mov.b64 	%rd7858, {%r5978, %r5977};
	xor.b64  	%rd7859, %rd7858, %rd7857;
	shf.l.wrap.b32 	%r5979, %r5973, %r5974, 23;
	shf.l.wrap.b32 	%r5980, %r5974, %r5973, 23;
	mov.b64 	%rd7860, {%r5980, %r5979};
	xor.b64  	%rd7861, %rd7859, %rd7860;
	xor.b64  	%rd7862, %rd7818, %rd7791;
	and.b64  	%rd7863, %rd10242, %rd7862;
	xor.b64  	%rd7864, %rd7863, %rd7791;
	add.s64 	%rd7865, %rd7764, %rd10229;
	ld.const.u64 	%rd7866, [%rd7856];
	add.s64 	%rd7867, %rd7865, %rd7866;
	add.s64 	%rd7868, %rd7867, %rd7864;
	add.s64 	%rd7869, %rd7868, %rd7861;
	add.s64 	%rd10241, %rd7869, %rd7775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5981,%dummy}, %rd10238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5982}, %rd10238;
	}
	shf.r.wrap.b32 	%r5983, %r5982, %r5981, 28;
	shf.r.wrap.b32 	%r5984, %r5981, %r5982, 28;
	mov.b64 	%rd7870, {%r5984, %r5983};
	shf.l.wrap.b32 	%r5985, %r5981, %r5982, 30;
	shf.l.wrap.b32 	%r5986, %r5982, %r5981, 30;
	mov.b64 	%rd7871, {%r5986, %r5985};
	xor.b64  	%rd7872, %rd7871, %rd7870;
	shf.l.wrap.b32 	%r5987, %r5981, %r5982, 25;
	shf.l.wrap.b32 	%r5988, %r5982, %r5981, 25;
	mov.b64 	%rd7873, {%r5988, %r5987};
	xor.b64  	%rd7874, %rd7872, %rd7873;
	and.b64  	%rd7875, %rd10238, %rd7829;
	xor.b64  	%rd7876, %rd10238, %rd7829;
	and.b64  	%rd7877, %rd7876, %rd7802;
	or.b64  	%rd7878, %rd7877, %rd7875;
	add.s64 	%rd7879, %rd7869, %rd7878;
	add.s64 	%rd10237, %rd7879, %rd7874;
	add.s32 	%r5989, %r7679, 14;
	mul.wide.s32 	%rd7880, %r5989, 8;
	add.s64 	%rd7881, %rd7506, %rd7880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5990,%dummy}, %rd10241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5991}, %rd10241;
	}
	shf.r.wrap.b32 	%r5992, %r5991, %r5990, 14;
	shf.r.wrap.b32 	%r5993, %r5990, %r5991, 14;
	mov.b64 	%rd7882, {%r5993, %r5992};
	shf.r.wrap.b32 	%r5994, %r5991, %r5990, 18;
	shf.r.wrap.b32 	%r5995, %r5990, %r5991, 18;
	mov.b64 	%rd7883, {%r5995, %r5994};
	xor.b64  	%rd7884, %rd7883, %rd7882;
	shf.l.wrap.b32 	%r5996, %r5990, %r5991, 23;
	shf.l.wrap.b32 	%r5997, %r5991, %r5990, 23;
	mov.b64 	%rd7885, {%r5997, %r5996};
	xor.b64  	%rd7886, %rd7884, %rd7885;
	xor.b64  	%rd7887, %rd10242, %rd7818;
	and.b64  	%rd7888, %rd10241, %rd7887;
	xor.b64  	%rd7889, %rd7888, %rd7818;
	add.s64 	%rd7890, %rd7791, %rd10228;
	ld.const.u64 	%rd7891, [%rd7881];
	add.s64 	%rd7892, %rd7890, %rd7891;
	add.s64 	%rd7893, %rd7892, %rd7889;
	add.s64 	%rd7894, %rd7893, %rd7886;
	add.s64 	%rd10240, %rd7894, %rd7802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5998,%dummy}, %rd10237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5999}, %rd10237;
	}
	shf.r.wrap.b32 	%r6000, %r5999, %r5998, 28;
	shf.r.wrap.b32 	%r6001, %r5998, %r5999, 28;
	mov.b64 	%rd7895, {%r6001, %r6000};
	shf.l.wrap.b32 	%r6002, %r5998, %r5999, 30;
	shf.l.wrap.b32 	%r6003, %r5999, %r5998, 30;
	mov.b64 	%rd7896, {%r6003, %r6002};
	xor.b64  	%rd7897, %rd7896, %rd7895;
	shf.l.wrap.b32 	%r6004, %r5998, %r5999, 25;
	shf.l.wrap.b32 	%r6005, %r5999, %r5998, 25;
	mov.b64 	%rd7898, {%r6005, %r6004};
	xor.b64  	%rd7899, %rd7897, %rd7898;
	and.b64  	%rd7900, %rd10237, %rd10238;
	xor.b64  	%rd7901, %rd10237, %rd10238;
	and.b64  	%rd7902, %rd7901, %rd7829;
	or.b64  	%rd7903, %rd7902, %rd7900;
	add.s64 	%rd7904, %rd7894, %rd7903;
	add.s64 	%rd10236, %rd7904, %rd7899;
	add.s32 	%r6006, %r7679, 15;
	mul.wide.s32 	%rd7905, %r6006, 8;
	add.s64 	%rd7906, %rd7506, %rd7905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6007,%dummy}, %rd10240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6008}, %rd10240;
	}
	shf.r.wrap.b32 	%r6009, %r6008, %r6007, 14;
	shf.r.wrap.b32 	%r6010, %r6007, %r6008, 14;
	mov.b64 	%rd7907, {%r6010, %r6009};
	shf.r.wrap.b32 	%r6011, %r6008, %r6007, 18;
	shf.r.wrap.b32 	%r6012, %r6007, %r6008, 18;
	mov.b64 	%rd7908, {%r6012, %r6011};
	xor.b64  	%rd7909, %rd7908, %rd7907;
	shf.l.wrap.b32 	%r6013, %r6007, %r6008, 23;
	shf.l.wrap.b32 	%r6014, %r6008, %r6007, 23;
	mov.b64 	%rd7910, {%r6014, %r6013};
	xor.b64  	%rd7911, %rd7909, %rd7910;
	xor.b64  	%rd7912, %rd10241, %rd10242;
	and.b64  	%rd7913, %rd10240, %rd7912;
	xor.b64  	%rd7914, %rd7913, %rd10242;
	add.s64 	%rd7915, %rd7818, %rd10227;
	ld.const.u64 	%rd7916, [%rd7906];
	add.s64 	%rd7917, %rd7915, %rd7916;
	add.s64 	%rd7918, %rd7917, %rd7914;
	add.s64 	%rd7919, %rd7918, %rd7911;
	add.s64 	%rd10239, %rd7919, %rd7829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6015,%dummy}, %rd10236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6016}, %rd10236;
	}
	shf.r.wrap.b32 	%r6017, %r6016, %r6015, 28;
	shf.r.wrap.b32 	%r6018, %r6015, %r6016, 28;
	mov.b64 	%rd7920, {%r6018, %r6017};
	shf.l.wrap.b32 	%r6019, %r6015, %r6016, 30;
	shf.l.wrap.b32 	%r6020, %r6016, %r6015, 30;
	mov.b64 	%rd7921, {%r6020, %r6019};
	xor.b64  	%rd7922, %rd7921, %rd7920;
	shf.l.wrap.b32 	%r6021, %r6015, %r6016, 25;
	shf.l.wrap.b32 	%r6022, %r6016, %r6015, 25;
	mov.b64 	%rd7923, {%r6022, %r6021};
	xor.b64  	%rd7924, %rd7922, %rd7923;
	and.b64  	%rd7925, %rd10236, %rd10237;
	xor.b64  	%rd7926, %rd10236, %rd10237;
	and.b64  	%rd7927, %rd7926, %rd10238;
	or.b64  	%rd7928, %rd7927, %rd7925;
	add.s64 	%rd7929, %rd7919, %rd7928;
	add.s64 	%rd10235, %rd7929, %rd7924;
	add.s32 	%r7679, %r7679, 16;
	setp.lt.s32	%p63, %r7679, 80;
	@%p63 bra 	BB3_28;

	add.u64 	%rd10029, %SPL, 528;
	add.s64 	%rd10028, %rd10029, 248;
	add.s64 	%rd10027, %rd10029, 240;
	add.u64 	%rd9975, %SPL, 528;
	add.s64 	%rd9974, %rd9975, 232;
	add.s64 	%rd9973, %rd9975, 224;
	add.s64 	%rd9972, %rd9975, 216;
	add.u64 	%rd9970, %SPL, 528;
	add.s64 	%rd9969, %rd9970, 208;
	add.s64 	%rd9968, %rd9970, 200;
	add.s64 	%rd9967, %rd9970, 384;
	add.s64 	%rd9966, %rd9970, 376;
	add.s64 	%rd9965, %rd9970, 368;
	add.s64 	%rd9964, %rd9970, 360;
	add.u64 	%rd9947, %SPL, 528;
	add.s64 	%rd9946, %rd9947, 352;
	add.s64 	%rd9945, %rd9947, 344;
	add.s64 	%rd9944, %rd9947, 336;
	add.s64 	%rd9943, %rd9947, 328;
	add.s64 	%rd9942, %rd9947, 320;
	add.s64 	%rd9941, %rd9947, 312;
	add.s64 	%rd9940, %rd9947, 304;
	add.s64 	%rd9939, %rd9947, 296;
	add.s64 	%rd9938, %rd9947, 288;
	add.s64 	%rd9937, %rd9947, 280;
	add.s64 	%rd9936, %rd9947, 272;
	add.s64 	%rd9935, %rd9947, 264;
	mov.u32 	%r7680, 0;
	add.s64 	%rd10258, %rd10258, %rd10235;
	st.local.u64 	[%rd9968], %rd10258;
	add.s64 	%rd10257, %rd10257, %rd10236;
	st.local.u64 	[%rd9969], %rd10257;
	add.s64 	%rd10256, %rd10256, %rd10237;
	st.local.u64 	[%rd9972], %rd10256;
	add.s64 	%rd10255, %rd10255, %rd10238;
	st.local.u64 	[%rd9973], %rd10255;
	add.s64 	%rd10254, %rd10254, %rd10239;
	st.local.u64 	[%rd9974], %rd10254;
	add.s64 	%rd10253, %rd10253, %rd10240;
	st.local.u64 	[%rd10027], %rd10253;
	add.s64 	%rd10252, %rd10252, %rd10241;
	st.local.u64 	[%rd10028], %rd10252;
	add.s64 	%rd10251, %rd10251, %rd10242;
	st.local.u64 	[%rd460], %rd10251;
	st.local.v2.u32 	[%rd9935], {%r7680, %r7680};
	st.local.v2.u32 	[%rd9936], {%r7680, %r7680};
	st.local.v2.u32 	[%rd9937], {%r7680, %r7680};
	st.local.v2.u32 	[%rd9938], {%r7680, %r7680};
	st.local.v2.u32 	[%rd9939], {%r7680, %r7680};
	st.local.v2.u32 	[%rd9940], {%r7680, %r7680};
	st.local.v2.u32 	[%rd9941], {%r7680, %r7680};
	st.local.v2.u32 	[%rd9942], {%r7680, %r7680};
	st.local.v2.u32 	[%rd9943], {%r7680, %r7680};
	st.local.v2.u32 	[%rd9944], {%r7680, %r7680};
	st.local.v2.u32 	[%rd9945], {%r7680, %r7680};
	st.local.v2.u32 	[%rd9946], {%r7680, %r7680};
	st.local.v2.u32 	[%rd9964], {%r7680, %r7680};
	st.local.v2.u32 	[%rd9965], {%r7680, %r7680};
	st.local.v2.u32 	[%rd9966], {%r7680, %r7680};
	st.local.v2.u32 	[%rd9967], {%r7680, %r7680};
	mov.u32 	%r7681, %r7680;
	mov.u32 	%r7682, %r7680;
	mov.u32 	%r7683, %r7680;
	mov.u32 	%r7684, %r7680;
	mov.u32 	%r7685, %r7680;
	mov.u32 	%r7686, %r7680;
	mov.u32 	%r7687, %r7680;
	mov.u32 	%r7688, %r7680;
	mov.u32 	%r7689, %r7680;
	mov.u32 	%r7690, %r7680;
	mov.u32 	%r7691, %r7680;
	mov.u32 	%r7692, %r7680;
	mov.u32 	%r7693, %r7680;
	mov.u32 	%r7694, %r7680;
	mov.u32 	%r7695, %r7680;
	mov.u32 	%r7696, %r7680;
	mov.u32 	%r7697, %r7680;
	mov.u32 	%r7698, %r7680;
	mov.u32 	%r7699, %r7680;
	mov.u32 	%r7700, %r7680;
	mov.u32 	%r7701, %r7680;
	mov.u32 	%r7702, %r7680;
	mov.u32 	%r7703, %r7680;
	mov.u32 	%r7704, %r7680;
	mov.u32 	%r7705, %r7680;
	mov.u32 	%r7706, %r7680;
	mov.u32 	%r7707, %r7680;
	mov.u32 	%r7708, %r7680;
	mov.u32 	%r7709, %r7680;

BB3_30:
	add.u64 	%rd9958, %SPL, 528;
	add.s64 	%rd9957, %rd9958, 384;
	mov.u32 	%r7537, 0;
	mov.u64 	%rd10259, k_sha512;
	shl.b32 	%r6054, %r352, 3;
	st.local.v2.u32 	[%rd9957], {%r7537, %r6054};
	mov.b64	%rd10276, {%r7708, %r7709};
	mov.b64	%rd10277, {%r7706, %r7707};
	mov.b64	%rd10278, {%r7704, %r7705};
	mov.b64	%rd10279, {%r7702, %r7703};
	mov.b64	%rd10280, {%r7700, %r7701};
	mov.b64	%rd10281, {%r7698, %r7699};
	mov.b64	%rd10282, {%r7696, %r7697};
	mov.b64	%rd10283, {%r7694, %r7695};
	mov.b64	%rd10267, {%r7692, %r7693};
	mov.b64	%rd10266, {%r7690, %r7691};
	mov.b64	%rd10265, {%r7688, %r7689};
	mov.b64	%rd10264, {%r7686, %r7687};
	mov.b64	%rd10263, {%r7684, %r7685};
	mov.b64	%rd10262, {%r7682, %r7683};
	mov.b64	%rd10261, {%r7680, %r7681};
	mov.b64	%rd10260, {%r6054, %r7537};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6056,%dummy}, %rd10254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6057}, %rd10254;
	}
	shf.r.wrap.b32 	%r6058, %r6057, %r6056, 18;
	shf.r.wrap.b32 	%r6059, %r6056, %r6057, 18;
	mov.b64 	%rd7931, {%r6059, %r6058};
	shf.r.wrap.b32 	%r6060, %r6057, %r6056, 14;
	shf.r.wrap.b32 	%r6061, %r6056, %r6057, 14;
	mov.b64 	%rd7932, {%r6061, %r6060};
	xor.b64  	%rd7933, %rd7931, %rd7932;
	shf.l.wrap.b32 	%r6062, %r6056, %r6057, 23;
	shf.l.wrap.b32 	%r6063, %r6057, %r6056, 23;
	mov.b64 	%rd7934, {%r6063, %r6062};
	xor.b64  	%rd7935, %rd7933, %rd7934;
	xor.b64  	%rd7936, %rd10252, %rd10253;
	and.b64  	%rd7937, %rd7936, %rd10254;
	xor.b64  	%rd7938, %rd7937, %rd10252;
	add.s64 	%rd7939, %rd7938, %rd10251;
	add.s64 	%rd7940, %rd7939, %rd10276;
	add.s64 	%rd7941, %rd7940, %rd10144;
	add.s64 	%rd7942, %rd7941, %rd7935;
	add.s64 	%rd7943, %rd7942, %rd10255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6064}, %rd10258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6065,%dummy}, %rd10258;
	}
	shf.l.wrap.b32 	%r6066, %r6065, %r6064, 30;
	shf.l.wrap.b32 	%r6067, %r6064, %r6065, 30;
	mov.b64 	%rd7944, {%r6067, %r6066};
	shf.r.wrap.b32 	%r6068, %r6064, %r6065, 28;
	shf.r.wrap.b32 	%r6069, %r6065, %r6064, 28;
	mov.b64 	%rd7945, {%r6069, %r6068};
	xor.b64  	%rd7946, %rd7944, %rd7945;
	shf.l.wrap.b32 	%r6070, %r6065, %r6064, 25;
	shf.l.wrap.b32 	%r6071, %r6064, %r6065, 25;
	mov.b64 	%rd7947, {%r6071, %r6070};
	xor.b64  	%rd7948, %rd7946, %rd7947;
	xor.b64  	%rd7949, %rd10257, %rd10258;
	and.b64  	%rd7950, %rd10256, %rd7949;
	and.b64  	%rd7951, %rd10257, %rd10258;
	or.b64  	%rd7952, %rd7950, %rd7951;
	add.s64 	%rd7953, %rd7942, %rd7952;
	add.s64 	%rd7954, %rd7953, %rd7948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6072,%dummy}, %rd7943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6073}, %rd7943;
	}
	shf.r.wrap.b32 	%r6074, %r6073, %r6072, 14;
	shf.r.wrap.b32 	%r6075, %r6072, %r6073, 14;
	mov.b64 	%rd7955, {%r6075, %r6074};
	shf.r.wrap.b32 	%r6076, %r6073, %r6072, 18;
	shf.r.wrap.b32 	%r6077, %r6072, %r6073, 18;
	mov.b64 	%rd7956, {%r6077, %r6076};
	xor.b64  	%rd7957, %rd7956, %rd7955;
	shf.l.wrap.b32 	%r6078, %r6072, %r6073, 23;
	shf.l.wrap.b32 	%r6079, %r6073, %r6072, 23;
	mov.b64 	%rd7958, {%r6079, %r6078};
	xor.b64  	%rd7959, %rd7957, %rd7958;
	xor.b64  	%rd7960, %rd10253, %rd10254;
	and.b64  	%rd7961, %rd7943, %rd7960;
	xor.b64  	%rd7962, %rd7961, %rd10253;
	add.s64 	%rd7963, %rd10277, %rd10252;
	add.s64 	%rd7964, %rd7963, %rd10143;
	add.s64 	%rd7965, %rd7964, %rd7962;
	add.s64 	%rd7966, %rd7965, %rd7959;
	add.s64 	%rd7967, %rd7966, %rd10256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6080,%dummy}, %rd7954;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6081}, %rd7954;
	}
	shf.r.wrap.b32 	%r6082, %r6081, %r6080, 28;
	shf.r.wrap.b32 	%r6083, %r6080, %r6081, 28;
	mov.b64 	%rd7968, {%r6083, %r6082};
	shf.l.wrap.b32 	%r6084, %r6080, %r6081, 30;
	shf.l.wrap.b32 	%r6085, %r6081, %r6080, 30;
	mov.b64 	%rd7969, {%r6085, %r6084};
	xor.b64  	%rd7970, %rd7969, %rd7968;
	shf.l.wrap.b32 	%r6086, %r6080, %r6081, 25;
	shf.l.wrap.b32 	%r6087, %r6081, %r6080, 25;
	mov.b64 	%rd7971, {%r6087, %r6086};
	xor.b64  	%rd7972, %rd7970, %rd7971;
	and.b64  	%rd7973, %rd7954, %rd10258;
	xor.b64  	%rd7974, %rd7954, %rd10258;
	and.b64  	%rd7975, %rd7974, %rd10257;
	or.b64  	%rd7976, %rd7975, %rd7973;
	add.s64 	%rd7977, %rd7966, %rd7976;
	add.s64 	%rd7978, %rd7977, %rd7972;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6088,%dummy}, %rd7967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6089}, %rd7967;
	}
	shf.r.wrap.b32 	%r6090, %r6089, %r6088, 14;
	shf.r.wrap.b32 	%r6091, %r6088, %r6089, 14;
	mov.b64 	%rd7979, {%r6091, %r6090};
	shf.r.wrap.b32 	%r6092, %r6089, %r6088, 18;
	shf.r.wrap.b32 	%r6093, %r6088, %r6089, 18;
	mov.b64 	%rd7980, {%r6093, %r6092};
	xor.b64  	%rd7981, %rd7980, %rd7979;
	shf.l.wrap.b32 	%r6094, %r6088, %r6089, 23;
	shf.l.wrap.b32 	%r6095, %r6089, %r6088, 23;
	mov.b64 	%rd7982, {%r6095, %r6094};
	xor.b64  	%rd7983, %rd7981, %rd7982;
	xor.b64  	%rd7984, %rd7943, %rd10254;
	and.b64  	%rd7985, %rd7967, %rd7984;
	xor.b64  	%rd7986, %rd7985, %rd10254;
	add.s64 	%rd7987, %rd10278, %rd10253;
	add.s64 	%rd7988, %rd7987, %rd10142;
	add.s64 	%rd7989, %rd7988, %rd7986;
	add.s64 	%rd7990, %rd7989, %rd7983;
	add.s64 	%rd7991, %rd7990, %rd10257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6096,%dummy}, %rd7978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6097}, %rd7978;
	}
	shf.r.wrap.b32 	%r6098, %r6097, %r6096, 28;
	shf.r.wrap.b32 	%r6099, %r6096, %r6097, 28;
	mov.b64 	%rd7992, {%r6099, %r6098};
	shf.l.wrap.b32 	%r6100, %r6096, %r6097, 30;
	shf.l.wrap.b32 	%r6101, %r6097, %r6096, 30;
	mov.b64 	%rd7993, {%r6101, %r6100};
	xor.b64  	%rd7994, %rd7993, %rd7992;
	shf.l.wrap.b32 	%r6102, %r6096, %r6097, 25;
	shf.l.wrap.b32 	%r6103, %r6097, %r6096, 25;
	mov.b64 	%rd7995, {%r6103, %r6102};
	xor.b64  	%rd7996, %rd7994, %rd7995;
	and.b64  	%rd7997, %rd7978, %rd7954;
	xor.b64  	%rd7998, %rd7978, %rd7954;
	and.b64  	%rd7999, %rd7998, %rd10258;
	or.b64  	%rd8000, %rd7999, %rd7997;
	add.s64 	%rd8001, %rd7990, %rd8000;
	add.s64 	%rd8002, %rd8001, %rd7996;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6104,%dummy}, %rd7991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6105}, %rd7991;
	}
	shf.r.wrap.b32 	%r6106, %r6105, %r6104, 14;
	shf.r.wrap.b32 	%r6107, %r6104, %r6105, 14;
	mov.b64 	%rd8003, {%r6107, %r6106};
	shf.r.wrap.b32 	%r6108, %r6105, %r6104, 18;
	shf.r.wrap.b32 	%r6109, %r6104, %r6105, 18;
	mov.b64 	%rd8004, {%r6109, %r6108};
	xor.b64  	%rd8005, %rd8004, %rd8003;
	shf.l.wrap.b32 	%r6110, %r6104, %r6105, 23;
	shf.l.wrap.b32 	%r6111, %r6105, %r6104, 23;
	mov.b64 	%rd8006, {%r6111, %r6110};
	xor.b64  	%rd8007, %rd8005, %rd8006;
	xor.b64  	%rd8008, %rd7967, %rd7943;
	and.b64  	%rd8009, %rd7991, %rd8008;
	xor.b64  	%rd8010, %rd8009, %rd7943;
	add.s64 	%rd8011, %rd10279, %rd10254;
	add.s64 	%rd8012, %rd8011, %rd10141;
	add.s64 	%rd8013, %rd8012, %rd8010;
	add.s64 	%rd8014, %rd8013, %rd8007;
	add.s64 	%rd8015, %rd8014, %rd10258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6112,%dummy}, %rd8002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6113}, %rd8002;
	}
	shf.r.wrap.b32 	%r6114, %r6113, %r6112, 28;
	shf.r.wrap.b32 	%r6115, %r6112, %r6113, 28;
	mov.b64 	%rd8016, {%r6115, %r6114};
	shf.l.wrap.b32 	%r6116, %r6112, %r6113, 30;
	shf.l.wrap.b32 	%r6117, %r6113, %r6112, 30;
	mov.b64 	%rd8017, {%r6117, %r6116};
	xor.b64  	%rd8018, %rd8017, %rd8016;
	shf.l.wrap.b32 	%r6118, %r6112, %r6113, 25;
	shf.l.wrap.b32 	%r6119, %r6113, %r6112, 25;
	mov.b64 	%rd8019, {%r6119, %r6118};
	xor.b64  	%rd8020, %rd8018, %rd8019;
	and.b64  	%rd8021, %rd8002, %rd7978;
	xor.b64  	%rd8022, %rd8002, %rd7978;
	and.b64  	%rd8023, %rd8022, %rd7954;
	or.b64  	%rd8024, %rd8023, %rd8021;
	add.s64 	%rd8025, %rd8014, %rd8024;
	add.s64 	%rd8026, %rd8025, %rd8020;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6120,%dummy}, %rd8015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6121}, %rd8015;
	}
	shf.r.wrap.b32 	%r6122, %r6121, %r6120, 14;
	shf.r.wrap.b32 	%r6123, %r6120, %r6121, 14;
	mov.b64 	%rd8027, {%r6123, %r6122};
	shf.r.wrap.b32 	%r6124, %r6121, %r6120, 18;
	shf.r.wrap.b32 	%r6125, %r6120, %r6121, 18;
	mov.b64 	%rd8028, {%r6125, %r6124};
	xor.b64  	%rd8029, %rd8028, %rd8027;
	shf.l.wrap.b32 	%r6126, %r6120, %r6121, 23;
	shf.l.wrap.b32 	%r6127, %r6121, %r6120, 23;
	mov.b64 	%rd8030, {%r6127, %r6126};
	xor.b64  	%rd8031, %rd8029, %rd8030;
	xor.b64  	%rd8032, %rd7991, %rd7967;
	and.b64  	%rd8033, %rd8015, %rd8032;
	xor.b64  	%rd8034, %rd8033, %rd7967;
	add.s64 	%rd8035, %rd7943, %rd10280;
	add.s64 	%rd8036, %rd8035, %rd10140;
	add.s64 	%rd8037, %rd8036, %rd8034;
	add.s64 	%rd8038, %rd8037, %rd8031;
	add.s64 	%rd8039, %rd8038, %rd7954;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6128,%dummy}, %rd8026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6129}, %rd8026;
	}
	shf.r.wrap.b32 	%r6130, %r6129, %r6128, 28;
	shf.r.wrap.b32 	%r6131, %r6128, %r6129, 28;
	mov.b64 	%rd8040, {%r6131, %r6130};
	shf.l.wrap.b32 	%r6132, %r6128, %r6129, 30;
	shf.l.wrap.b32 	%r6133, %r6129, %r6128, 30;
	mov.b64 	%rd8041, {%r6133, %r6132};
	xor.b64  	%rd8042, %rd8041, %rd8040;
	shf.l.wrap.b32 	%r6134, %r6128, %r6129, 25;
	shf.l.wrap.b32 	%r6135, %r6129, %r6128, 25;
	mov.b64 	%rd8043, {%r6135, %r6134};
	xor.b64  	%rd8044, %rd8042, %rd8043;
	and.b64  	%rd8045, %rd8026, %rd8002;
	xor.b64  	%rd8046, %rd8026, %rd8002;
	and.b64  	%rd8047, %rd8046, %rd7978;
	or.b64  	%rd8048, %rd8047, %rd8045;
	add.s64 	%rd8049, %rd8038, %rd8048;
	add.s64 	%rd8050, %rd8049, %rd8044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6136,%dummy}, %rd8039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6137}, %rd8039;
	}
	shf.r.wrap.b32 	%r6138, %r6137, %r6136, 14;
	shf.r.wrap.b32 	%r6139, %r6136, %r6137, 14;
	mov.b64 	%rd8051, {%r6139, %r6138};
	shf.r.wrap.b32 	%r6140, %r6137, %r6136, 18;
	shf.r.wrap.b32 	%r6141, %r6136, %r6137, 18;
	mov.b64 	%rd8052, {%r6141, %r6140};
	xor.b64  	%rd8053, %rd8052, %rd8051;
	shf.l.wrap.b32 	%r6142, %r6136, %r6137, 23;
	shf.l.wrap.b32 	%r6143, %r6137, %r6136, 23;
	mov.b64 	%rd8054, {%r6143, %r6142};
	xor.b64  	%rd8055, %rd8053, %rd8054;
	xor.b64  	%rd8056, %rd8015, %rd7991;
	and.b64  	%rd8057, %rd8039, %rd8056;
	xor.b64  	%rd8058, %rd8057, %rd7991;
	add.s64 	%rd8059, %rd7967, %rd10281;
	add.s64 	%rd8060, %rd8059, %rd10139;
	add.s64 	%rd8061, %rd8060, %rd8058;
	add.s64 	%rd8062, %rd8061, %rd8055;
	add.s64 	%rd8063, %rd8062, %rd7978;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6144,%dummy}, %rd8050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6145}, %rd8050;
	}
	shf.r.wrap.b32 	%r6146, %r6145, %r6144, 28;
	shf.r.wrap.b32 	%r6147, %r6144, %r6145, 28;
	mov.b64 	%rd8064, {%r6147, %r6146};
	shf.l.wrap.b32 	%r6148, %r6144, %r6145, 30;
	shf.l.wrap.b32 	%r6149, %r6145, %r6144, 30;
	mov.b64 	%rd8065, {%r6149, %r6148};
	xor.b64  	%rd8066, %rd8065, %rd8064;
	shf.l.wrap.b32 	%r6150, %r6144, %r6145, 25;
	shf.l.wrap.b32 	%r6151, %r6145, %r6144, 25;
	mov.b64 	%rd8067, {%r6151, %r6150};
	xor.b64  	%rd8068, %rd8066, %rd8067;
	and.b64  	%rd8069, %rd8050, %rd8026;
	xor.b64  	%rd8070, %rd8050, %rd8026;
	and.b64  	%rd8071, %rd8070, %rd8002;
	or.b64  	%rd8072, %rd8071, %rd8069;
	add.s64 	%rd8073, %rd8062, %rd8072;
	add.s64 	%rd8074, %rd8073, %rd8068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6152,%dummy}, %rd8063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6153}, %rd8063;
	}
	shf.r.wrap.b32 	%r6154, %r6153, %r6152, 14;
	shf.r.wrap.b32 	%r6155, %r6152, %r6153, 14;
	mov.b64 	%rd8075, {%r6155, %r6154};
	shf.r.wrap.b32 	%r6156, %r6153, %r6152, 18;
	shf.r.wrap.b32 	%r6157, %r6152, %r6153, 18;
	mov.b64 	%rd8076, {%r6157, %r6156};
	xor.b64  	%rd8077, %rd8076, %rd8075;
	shf.l.wrap.b32 	%r6158, %r6152, %r6153, 23;
	shf.l.wrap.b32 	%r6159, %r6153, %r6152, 23;
	mov.b64 	%rd8078, {%r6159, %r6158};
	xor.b64  	%rd8079, %rd8077, %rd8078;
	xor.b64  	%rd8080, %rd8039, %rd8015;
	and.b64  	%rd8081, %rd8063, %rd8080;
	xor.b64  	%rd8082, %rd8081, %rd8015;
	add.s64 	%rd8083, %rd7991, %rd10282;
	add.s64 	%rd8084, %rd8083, %rd10138;
	add.s64 	%rd8085, %rd8084, %rd8082;
	add.s64 	%rd8086, %rd8085, %rd8079;
	add.s64 	%rd8087, %rd8086, %rd8002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6160,%dummy}, %rd8074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6161}, %rd8074;
	}
	shf.r.wrap.b32 	%r6162, %r6161, %r6160, 28;
	shf.r.wrap.b32 	%r6163, %r6160, %r6161, 28;
	mov.b64 	%rd8088, {%r6163, %r6162};
	shf.l.wrap.b32 	%r6164, %r6160, %r6161, 30;
	shf.l.wrap.b32 	%r6165, %r6161, %r6160, 30;
	mov.b64 	%rd8089, {%r6165, %r6164};
	xor.b64  	%rd8090, %rd8089, %rd8088;
	shf.l.wrap.b32 	%r6166, %r6160, %r6161, 25;
	shf.l.wrap.b32 	%r6167, %r6161, %r6160, 25;
	mov.b64 	%rd8091, {%r6167, %r6166};
	xor.b64  	%rd8092, %rd8090, %rd8091;
	and.b64  	%rd8093, %rd8074, %rd8050;
	xor.b64  	%rd8094, %rd8074, %rd8050;
	and.b64  	%rd8095, %rd8094, %rd8026;
	or.b64  	%rd8096, %rd8095, %rd8093;
	add.s64 	%rd8097, %rd8086, %rd8096;
	add.s64 	%rd8098, %rd8097, %rd8092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6168,%dummy}, %rd8087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6169}, %rd8087;
	}
	shf.r.wrap.b32 	%r6170, %r6169, %r6168, 14;
	shf.r.wrap.b32 	%r6171, %r6168, %r6169, 14;
	mov.b64 	%rd8099, {%r6171, %r6170};
	shf.r.wrap.b32 	%r6172, %r6169, %r6168, 18;
	shf.r.wrap.b32 	%r6173, %r6168, %r6169, 18;
	mov.b64 	%rd8100, {%r6173, %r6172};
	xor.b64  	%rd8101, %rd8100, %rd8099;
	shf.l.wrap.b32 	%r6174, %r6168, %r6169, 23;
	shf.l.wrap.b32 	%r6175, %r6169, %r6168, 23;
	mov.b64 	%rd8102, {%r6175, %r6174};
	xor.b64  	%rd8103, %rd8101, %rd8102;
	xor.b64  	%rd8104, %rd8063, %rd8039;
	and.b64  	%rd8105, %rd8087, %rd8104;
	xor.b64  	%rd8106, %rd8105, %rd8039;
	add.s64 	%rd8107, %rd8015, %rd10283;
	add.s64 	%rd8108, %rd8107, %rd10137;
	add.s64 	%rd8109, %rd8108, %rd8106;
	add.s64 	%rd8110, %rd8109, %rd8103;
	add.s64 	%rd8111, %rd8110, %rd8026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6176,%dummy}, %rd8098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6177}, %rd8098;
	}
	shf.r.wrap.b32 	%r6178, %r6177, %r6176, 28;
	shf.r.wrap.b32 	%r6179, %r6176, %r6177, 28;
	mov.b64 	%rd8112, {%r6179, %r6178};
	shf.l.wrap.b32 	%r6180, %r6176, %r6177, 30;
	shf.l.wrap.b32 	%r6181, %r6177, %r6176, 30;
	mov.b64 	%rd8113, {%r6181, %r6180};
	xor.b64  	%rd8114, %rd8113, %rd8112;
	shf.l.wrap.b32 	%r6182, %r6176, %r6177, 25;
	shf.l.wrap.b32 	%r6183, %r6177, %r6176, 25;
	mov.b64 	%rd8115, {%r6183, %r6182};
	xor.b64  	%rd8116, %rd8114, %rd8115;
	and.b64  	%rd8117, %rd8098, %rd8074;
	xor.b64  	%rd8118, %rd8098, %rd8074;
	and.b64  	%rd8119, %rd8118, %rd8050;
	or.b64  	%rd8120, %rd8119, %rd8117;
	add.s64 	%rd8121, %rd8110, %rd8120;
	add.s64 	%rd8122, %rd8121, %rd8116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6184,%dummy}, %rd8111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6185}, %rd8111;
	}
	shf.r.wrap.b32 	%r6186, %r6185, %r6184, 14;
	shf.r.wrap.b32 	%r6187, %r6184, %r6185, 14;
	mov.b64 	%rd8123, {%r6187, %r6186};
	shf.r.wrap.b32 	%r6188, %r6185, %r6184, 18;
	shf.r.wrap.b32 	%r6189, %r6184, %r6185, 18;
	mov.b64 	%rd8124, {%r6189, %r6188};
	xor.b64  	%rd8125, %rd8124, %rd8123;
	shf.l.wrap.b32 	%r6190, %r6184, %r6185, 23;
	shf.l.wrap.b32 	%r6191, %r6185, %r6184, 23;
	mov.b64 	%rd8126, {%r6191, %r6190};
	xor.b64  	%rd8127, %rd8125, %rd8126;
	xor.b64  	%rd8128, %rd8087, %rd8063;
	and.b64  	%rd8129, %rd8111, %rd8128;
	xor.b64  	%rd8130, %rd8129, %rd8063;
	add.s64 	%rd8131, %rd8039, %rd10267;
	add.s64 	%rd8132, %rd8131, %rd10136;
	add.s64 	%rd8133, %rd8132, %rd8130;
	add.s64 	%rd8134, %rd8133, %rd8127;
	add.s64 	%rd8135, %rd8134, %rd8050;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6192,%dummy}, %rd8122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6193}, %rd8122;
	}
	shf.r.wrap.b32 	%r6194, %r6193, %r6192, 28;
	shf.r.wrap.b32 	%r6195, %r6192, %r6193, 28;
	mov.b64 	%rd8136, {%r6195, %r6194};
	shf.l.wrap.b32 	%r6196, %r6192, %r6193, 30;
	shf.l.wrap.b32 	%r6197, %r6193, %r6192, 30;
	mov.b64 	%rd8137, {%r6197, %r6196};
	xor.b64  	%rd8138, %rd8137, %rd8136;
	shf.l.wrap.b32 	%r6198, %r6192, %r6193, 25;
	shf.l.wrap.b32 	%r6199, %r6193, %r6192, 25;
	mov.b64 	%rd8139, {%r6199, %r6198};
	xor.b64  	%rd8140, %rd8138, %rd8139;
	and.b64  	%rd8141, %rd8122, %rd8098;
	xor.b64  	%rd8142, %rd8122, %rd8098;
	and.b64  	%rd8143, %rd8142, %rd8074;
	or.b64  	%rd8144, %rd8143, %rd8141;
	add.s64 	%rd8145, %rd8134, %rd8144;
	add.s64 	%rd8146, %rd8145, %rd8140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6200,%dummy}, %rd8135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6201}, %rd8135;
	}
	shf.r.wrap.b32 	%r6202, %r6201, %r6200, 14;
	shf.r.wrap.b32 	%r6203, %r6200, %r6201, 14;
	mov.b64 	%rd8147, {%r6203, %r6202};
	shf.r.wrap.b32 	%r6204, %r6201, %r6200, 18;
	shf.r.wrap.b32 	%r6205, %r6200, %r6201, 18;
	mov.b64 	%rd8148, {%r6205, %r6204};
	xor.b64  	%rd8149, %rd8148, %rd8147;
	shf.l.wrap.b32 	%r6206, %r6200, %r6201, 23;
	shf.l.wrap.b32 	%r6207, %r6201, %r6200, 23;
	mov.b64 	%rd8150, {%r6207, %r6206};
	xor.b64  	%rd8151, %rd8149, %rd8150;
	xor.b64  	%rd8152, %rd8111, %rd8087;
	and.b64  	%rd8153, %rd8135, %rd8152;
	xor.b64  	%rd8154, %rd8153, %rd8087;
	add.s64 	%rd8155, %rd8063, %rd10266;
	add.s64 	%rd8156, %rd8155, %rd10135;
	add.s64 	%rd8157, %rd8156, %rd8154;
	add.s64 	%rd8158, %rd8157, %rd8151;
	add.s64 	%rd8159, %rd8158, %rd8074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6208,%dummy}, %rd8146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6209}, %rd8146;
	}
	shf.r.wrap.b32 	%r6210, %r6209, %r6208, 28;
	shf.r.wrap.b32 	%r6211, %r6208, %r6209, 28;
	mov.b64 	%rd8160, {%r6211, %r6210};
	shf.l.wrap.b32 	%r6212, %r6208, %r6209, 30;
	shf.l.wrap.b32 	%r6213, %r6209, %r6208, 30;
	mov.b64 	%rd8161, {%r6213, %r6212};
	xor.b64  	%rd8162, %rd8161, %rd8160;
	shf.l.wrap.b32 	%r6214, %r6208, %r6209, 25;
	shf.l.wrap.b32 	%r6215, %r6209, %r6208, 25;
	mov.b64 	%rd8163, {%r6215, %r6214};
	xor.b64  	%rd8164, %rd8162, %rd8163;
	and.b64  	%rd8165, %rd8146, %rd8122;
	xor.b64  	%rd8166, %rd8146, %rd8122;
	and.b64  	%rd8167, %rd8166, %rd8098;
	or.b64  	%rd8168, %rd8167, %rd8165;
	add.s64 	%rd8169, %rd8158, %rd8168;
	add.s64 	%rd8170, %rd8169, %rd8164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6216,%dummy}, %rd8159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6217}, %rd8159;
	}
	shf.r.wrap.b32 	%r6218, %r6217, %r6216, 14;
	shf.r.wrap.b32 	%r6219, %r6216, %r6217, 14;
	mov.b64 	%rd8171, {%r6219, %r6218};
	shf.r.wrap.b32 	%r6220, %r6217, %r6216, 18;
	shf.r.wrap.b32 	%r6221, %r6216, %r6217, 18;
	mov.b64 	%rd8172, {%r6221, %r6220};
	xor.b64  	%rd8173, %rd8172, %rd8171;
	shf.l.wrap.b32 	%r6222, %r6216, %r6217, 23;
	shf.l.wrap.b32 	%r6223, %r6217, %r6216, 23;
	mov.b64 	%rd8174, {%r6223, %r6222};
	xor.b64  	%rd8175, %rd8173, %rd8174;
	xor.b64  	%rd8176, %rd8135, %rd8111;
	and.b64  	%rd8177, %rd8159, %rd8176;
	xor.b64  	%rd8178, %rd8177, %rd8111;
	add.s64 	%rd8179, %rd8087, %rd10265;
	add.s64 	%rd8180, %rd8179, %rd10134;
	add.s64 	%rd8181, %rd8180, %rd8178;
	add.s64 	%rd8182, %rd8181, %rd8175;
	add.s64 	%rd8183, %rd8182, %rd8098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6224,%dummy}, %rd8170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6225}, %rd8170;
	}
	shf.r.wrap.b32 	%r6226, %r6225, %r6224, 28;
	shf.r.wrap.b32 	%r6227, %r6224, %r6225, 28;
	mov.b64 	%rd8184, {%r6227, %r6226};
	shf.l.wrap.b32 	%r6228, %r6224, %r6225, 30;
	shf.l.wrap.b32 	%r6229, %r6225, %r6224, 30;
	mov.b64 	%rd8185, {%r6229, %r6228};
	xor.b64  	%rd8186, %rd8185, %rd8184;
	shf.l.wrap.b32 	%r6230, %r6224, %r6225, 25;
	shf.l.wrap.b32 	%r6231, %r6225, %r6224, 25;
	mov.b64 	%rd8187, {%r6231, %r6230};
	xor.b64  	%rd8188, %rd8186, %rd8187;
	and.b64  	%rd8189, %rd8170, %rd8146;
	xor.b64  	%rd8190, %rd8170, %rd8146;
	and.b64  	%rd8191, %rd8190, %rd8122;
	or.b64  	%rd8192, %rd8191, %rd8189;
	add.s64 	%rd8193, %rd8182, %rd8192;
	add.s64 	%rd8194, %rd8193, %rd8188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6232,%dummy}, %rd8183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6233}, %rd8183;
	}
	shf.r.wrap.b32 	%r6234, %r6233, %r6232, 14;
	shf.r.wrap.b32 	%r6235, %r6232, %r6233, 14;
	mov.b64 	%rd8195, {%r6235, %r6234};
	shf.r.wrap.b32 	%r6236, %r6233, %r6232, 18;
	shf.r.wrap.b32 	%r6237, %r6232, %r6233, 18;
	mov.b64 	%rd8196, {%r6237, %r6236};
	xor.b64  	%rd8197, %rd8196, %rd8195;
	shf.l.wrap.b32 	%r6238, %r6232, %r6233, 23;
	shf.l.wrap.b32 	%r6239, %r6233, %r6232, 23;
	mov.b64 	%rd8198, {%r6239, %r6238};
	xor.b64  	%rd8199, %rd8197, %rd8198;
	xor.b64  	%rd8200, %rd8159, %rd8135;
	and.b64  	%rd8201, %rd8183, %rd8200;
	xor.b64  	%rd8202, %rd8201, %rd8135;
	add.s64 	%rd8203, %rd8111, %rd10264;
	add.s64 	%rd8204, %rd8203, %rd10133;
	add.s64 	%rd8205, %rd8204, %rd8202;
	add.s64 	%rd8206, %rd8205, %rd8199;
	add.s64 	%rd8207, %rd8206, %rd8122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6240,%dummy}, %rd8194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6241}, %rd8194;
	}
	shf.r.wrap.b32 	%r6242, %r6241, %r6240, 28;
	shf.r.wrap.b32 	%r6243, %r6240, %r6241, 28;
	mov.b64 	%rd8208, {%r6243, %r6242};
	shf.l.wrap.b32 	%r6244, %r6240, %r6241, 30;
	shf.l.wrap.b32 	%r6245, %r6241, %r6240, 30;
	mov.b64 	%rd8209, {%r6245, %r6244};
	xor.b64  	%rd8210, %rd8209, %rd8208;
	shf.l.wrap.b32 	%r6246, %r6240, %r6241, 25;
	shf.l.wrap.b32 	%r6247, %r6241, %r6240, 25;
	mov.b64 	%rd8211, {%r6247, %r6246};
	xor.b64  	%rd8212, %rd8210, %rd8211;
	and.b64  	%rd8213, %rd8194, %rd8170;
	xor.b64  	%rd8214, %rd8194, %rd8170;
	and.b64  	%rd8215, %rd8214, %rd8146;
	or.b64  	%rd8216, %rd8215, %rd8213;
	add.s64 	%rd8217, %rd8206, %rd8216;
	add.s64 	%rd8218, %rd8217, %rd8212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6248,%dummy}, %rd8207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6249}, %rd8207;
	}
	shf.r.wrap.b32 	%r6250, %r6249, %r6248, 14;
	shf.r.wrap.b32 	%r6251, %r6248, %r6249, 14;
	mov.b64 	%rd8219, {%r6251, %r6250};
	shf.r.wrap.b32 	%r6252, %r6249, %r6248, 18;
	shf.r.wrap.b32 	%r6253, %r6248, %r6249, 18;
	mov.b64 	%rd8220, {%r6253, %r6252};
	xor.b64  	%rd8221, %rd8220, %rd8219;
	shf.l.wrap.b32 	%r6254, %r6248, %r6249, 23;
	shf.l.wrap.b32 	%r6255, %r6249, %r6248, 23;
	mov.b64 	%rd8222, {%r6255, %r6254};
	xor.b64  	%rd8223, %rd8221, %rd8222;
	xor.b64  	%rd8224, %rd8183, %rd8159;
	and.b64  	%rd8225, %rd8207, %rd8224;
	xor.b64  	%rd8226, %rd8225, %rd8159;
	add.s64 	%rd8227, %rd8135, %rd10263;
	add.s64 	%rd8228, %rd8227, %rd10132;
	add.s64 	%rd8229, %rd8228, %rd8226;
	add.s64 	%rd8230, %rd8229, %rd8223;
	add.s64 	%rd10275, %rd8230, %rd8146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6256,%dummy}, %rd8218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6257}, %rd8218;
	}
	shf.r.wrap.b32 	%r6258, %r6257, %r6256, 28;
	shf.r.wrap.b32 	%r6259, %r6256, %r6257, 28;
	mov.b64 	%rd8231, {%r6259, %r6258};
	shf.l.wrap.b32 	%r6260, %r6256, %r6257, 30;
	shf.l.wrap.b32 	%r6261, %r6257, %r6256, 30;
	mov.b64 	%rd8232, {%r6261, %r6260};
	xor.b64  	%rd8233, %rd8232, %rd8231;
	shf.l.wrap.b32 	%r6262, %r6256, %r6257, 25;
	shf.l.wrap.b32 	%r6263, %r6257, %r6256, 25;
	mov.b64 	%rd8234, {%r6263, %r6262};
	xor.b64  	%rd8235, %rd8233, %rd8234;
	and.b64  	%rd8236, %rd8218, %rd8194;
	xor.b64  	%rd8237, %rd8218, %rd8194;
	and.b64  	%rd8238, %rd8237, %rd8170;
	or.b64  	%rd8239, %rd8238, %rd8236;
	add.s64 	%rd8240, %rd8230, %rd8239;
	add.s64 	%rd10271, %rd8240, %rd8235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6264,%dummy}, %rd10275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6265}, %rd10275;
	}
	shf.r.wrap.b32 	%r6266, %r6265, %r6264, 14;
	shf.r.wrap.b32 	%r6267, %r6264, %r6265, 14;
	mov.b64 	%rd8241, {%r6267, %r6266};
	shf.r.wrap.b32 	%r6268, %r6265, %r6264, 18;
	shf.r.wrap.b32 	%r6269, %r6264, %r6265, 18;
	mov.b64 	%rd8242, {%r6269, %r6268};
	xor.b64  	%rd8243, %rd8242, %rd8241;
	shf.l.wrap.b32 	%r6270, %r6264, %r6265, 23;
	shf.l.wrap.b32 	%r6271, %r6265, %r6264, 23;
	mov.b64 	%rd8244, {%r6271, %r6270};
	xor.b64  	%rd8245, %rd8243, %rd8244;
	xor.b64  	%rd8246, %rd8207, %rd8183;
	and.b64  	%rd8247, %rd10275, %rd8246;
	xor.b64  	%rd8248, %rd8247, %rd8183;
	add.s64 	%rd8249, %rd8159, %rd10262;
	add.s64 	%rd8250, %rd8249, %rd10131;
	add.s64 	%rd8251, %rd8250, %rd8248;
	add.s64 	%rd8252, %rd8251, %rd8245;
	add.s64 	%rd10274, %rd8252, %rd8170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6272,%dummy}, %rd10271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6273}, %rd10271;
	}
	shf.r.wrap.b32 	%r6274, %r6273, %r6272, 28;
	shf.r.wrap.b32 	%r6275, %r6272, %r6273, 28;
	mov.b64 	%rd8253, {%r6275, %r6274};
	shf.l.wrap.b32 	%r6276, %r6272, %r6273, 30;
	shf.l.wrap.b32 	%r6277, %r6273, %r6272, 30;
	mov.b64 	%rd8254, {%r6277, %r6276};
	xor.b64  	%rd8255, %rd8254, %rd8253;
	shf.l.wrap.b32 	%r6278, %r6272, %r6273, 25;
	shf.l.wrap.b32 	%r6279, %r6273, %r6272, 25;
	mov.b64 	%rd8256, {%r6279, %r6278};
	xor.b64  	%rd8257, %rd8255, %rd8256;
	and.b64  	%rd8258, %rd10271, %rd8218;
	xor.b64  	%rd8259, %rd10271, %rd8218;
	and.b64  	%rd8260, %rd8259, %rd8194;
	or.b64  	%rd8261, %rd8260, %rd8258;
	add.s64 	%rd8262, %rd8252, %rd8261;
	add.s64 	%rd10270, %rd8262, %rd8257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6280,%dummy}, %rd10274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6281}, %rd10274;
	}
	shf.r.wrap.b32 	%r6282, %r6281, %r6280, 14;
	shf.r.wrap.b32 	%r6283, %r6280, %r6281, 14;
	mov.b64 	%rd8263, {%r6283, %r6282};
	shf.r.wrap.b32 	%r6284, %r6281, %r6280, 18;
	shf.r.wrap.b32 	%r6285, %r6280, %r6281, 18;
	mov.b64 	%rd8264, {%r6285, %r6284};
	xor.b64  	%rd8265, %rd8264, %rd8263;
	shf.l.wrap.b32 	%r6286, %r6280, %r6281, 23;
	shf.l.wrap.b32 	%r6287, %r6281, %r6280, 23;
	mov.b64 	%rd8266, {%r6287, %r6286};
	xor.b64  	%rd8267, %rd8265, %rd8266;
	xor.b64  	%rd8268, %rd10275, %rd8207;
	and.b64  	%rd8269, %rd10274, %rd8268;
	xor.b64  	%rd8270, %rd8269, %rd8207;
	add.s64 	%rd8271, %rd8183, %rd10261;
	add.s64 	%rd8272, %rd8271, %rd10130;
	add.s64 	%rd8273, %rd8272, %rd8270;
	add.s64 	%rd8274, %rd8273, %rd8267;
	add.s64 	%rd10273, %rd8274, %rd8194;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6288,%dummy}, %rd10270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6289}, %rd10270;
	}
	shf.r.wrap.b32 	%r6290, %r6289, %r6288, 28;
	shf.r.wrap.b32 	%r6291, %r6288, %r6289, 28;
	mov.b64 	%rd8275, {%r6291, %r6290};
	shf.l.wrap.b32 	%r6292, %r6288, %r6289, 30;
	shf.l.wrap.b32 	%r6293, %r6289, %r6288, 30;
	mov.b64 	%rd8276, {%r6293, %r6292};
	xor.b64  	%rd8277, %rd8276, %rd8275;
	shf.l.wrap.b32 	%r6294, %r6288, %r6289, 25;
	shf.l.wrap.b32 	%r6295, %r6289, %r6288, 25;
	mov.b64 	%rd8278, {%r6295, %r6294};
	xor.b64  	%rd8279, %rd8277, %rd8278;
	and.b64  	%rd8280, %rd10270, %rd10271;
	xor.b64  	%rd8281, %rd10270, %rd10271;
	and.b64  	%rd8282, %rd8281, %rd8218;
	or.b64  	%rd8283, %rd8282, %rd8280;
	add.s64 	%rd8284, %rd8274, %rd8283;
	add.s64 	%rd10269, %rd8284, %rd8279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6296,%dummy}, %rd10273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6297}, %rd10273;
	}
	shf.r.wrap.b32 	%r6298, %r6297, %r6296, 14;
	shf.r.wrap.b32 	%r6299, %r6296, %r6297, 14;
	mov.b64 	%rd8285, {%r6299, %r6298};
	shf.r.wrap.b32 	%r6300, %r6297, %r6296, 18;
	shf.r.wrap.b32 	%r6301, %r6296, %r6297, 18;
	mov.b64 	%rd8286, {%r6301, %r6300};
	xor.b64  	%rd8287, %rd8286, %rd8285;
	shf.l.wrap.b32 	%r6302, %r6296, %r6297, 23;
	shf.l.wrap.b32 	%r6303, %r6297, %r6296, 23;
	mov.b64 	%rd8288, {%r6303, %r6302};
	xor.b64  	%rd8289, %rd8287, %rd8288;
	xor.b64  	%rd8290, %rd10274, %rd10275;
	and.b64  	%rd8291, %rd10273, %rd8290;
	xor.b64  	%rd8292, %rd8291, %rd10275;
	add.s64 	%rd8293, %rd8207, %rd10260;
	add.s64 	%rd8294, %rd8293, %rd10129;
	add.s64 	%rd8295, %rd8294, %rd8292;
	add.s64 	%rd8296, %rd8295, %rd8289;
	add.s64 	%rd10272, %rd8296, %rd8218;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6304,%dummy}, %rd10269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6305}, %rd10269;
	}
	shf.r.wrap.b32 	%r6306, %r6305, %r6304, 28;
	shf.r.wrap.b32 	%r6307, %r6304, %r6305, 28;
	mov.b64 	%rd8297, {%r6307, %r6306};
	shf.l.wrap.b32 	%r6308, %r6304, %r6305, 30;
	shf.l.wrap.b32 	%r6309, %r6305, %r6304, 30;
	mov.b64 	%rd8298, {%r6309, %r6308};
	xor.b64  	%rd8299, %rd8298, %rd8297;
	shf.l.wrap.b32 	%r6310, %r6304, %r6305, 25;
	shf.l.wrap.b32 	%r6311, %r6305, %r6304, 25;
	mov.b64 	%rd8300, {%r6311, %r6310};
	xor.b64  	%rd8301, %rd8299, %rd8300;
	and.b64  	%rd8302, %rd10269, %rd10270;
	xor.b64  	%rd8303, %rd10269, %rd10270;
	and.b64  	%rd8304, %rd8303, %rd10271;
	or.b64  	%rd8305, %rd8304, %rd8302;
	add.s64 	%rd8306, %rd8296, %rd8305;
	add.s64 	%rd10268, %rd8306, %rd8301;
	mov.u32 	%r7710, 16;

BB3_31:
	shr.u64 	%rd8307, %rd10261, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6312,%dummy}, %rd10261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6313}, %rd10261;
	}
	shf.r.wrap.b32 	%r6314, %r6313, %r6312, 19;
	shf.r.wrap.b32 	%r6315, %r6312, %r6313, 19;
	mov.b64 	%rd8308, {%r6315, %r6314};
	xor.b64  	%rd8309, %rd8308, %rd8307;
	shf.l.wrap.b32 	%r6316, %r6312, %r6313, 3;
	shf.l.wrap.b32 	%r6317, %r6313, %r6312, 3;
	mov.b64 	%rd8310, {%r6317, %r6316};
	xor.b64  	%rd8311, %rd8309, %rd8310;
	shr.u64 	%rd8312, %rd10277, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6318,%dummy}, %rd10277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6319}, %rd10277;
	}
	shf.r.wrap.b32 	%r6320, %r6319, %r6318, 1;
	shf.r.wrap.b32 	%r6321, %r6318, %r6319, 1;
	mov.b64 	%rd8313, {%r6321, %r6320};
	xor.b64  	%rd8314, %rd8313, %rd8312;
	shf.r.wrap.b32 	%r6322, %r6319, %r6318, 8;
	shf.r.wrap.b32 	%r6323, %r6318, %r6319, 8;
	mov.b64 	%rd8315, {%r6323, %r6322};
	xor.b64  	%rd8316, %rd8314, %rd8315;
	add.s64 	%rd8317, %rd10266, %rd10276;
	add.s64 	%rd8318, %rd8317, %rd8311;
	add.s64 	%rd10276, %rd8318, %rd8316;
	shr.u64 	%rd8319, %rd10260, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6324,%dummy}, %rd10260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6325}, %rd10260;
	}
	shf.r.wrap.b32 	%r6326, %r6325, %r6324, 19;
	shf.r.wrap.b32 	%r6327, %r6324, %r6325, 19;
	mov.b64 	%rd8320, {%r6327, %r6326};
	xor.b64  	%rd8321, %rd8320, %rd8319;
	shf.l.wrap.b32 	%r6328, %r6324, %r6325, 3;
	shf.l.wrap.b32 	%r6329, %r6325, %r6324, 3;
	mov.b64 	%rd8322, {%r6329, %r6328};
	xor.b64  	%rd8323, %rd8321, %rd8322;
	shr.u64 	%rd8324, %rd10278, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6330,%dummy}, %rd10278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6331}, %rd10278;
	}
	shf.r.wrap.b32 	%r6332, %r6331, %r6330, 1;
	shf.r.wrap.b32 	%r6333, %r6330, %r6331, 1;
	mov.b64 	%rd8325, {%r6333, %r6332};
	xor.b64  	%rd8326, %rd8325, %rd8324;
	shf.r.wrap.b32 	%r6334, %r6331, %r6330, 8;
	shf.r.wrap.b32 	%r6335, %r6330, %r6331, 8;
	mov.b64 	%rd8327, {%r6335, %r6334};
	xor.b64  	%rd8328, %rd8326, %rd8327;
	add.s64 	%rd8329, %rd10265, %rd10277;
	add.s64 	%rd8330, %rd8329, %rd8323;
	add.s64 	%rd10277, %rd8330, %rd8328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6336,%dummy}, %rd10276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6337}, %rd10276;
	}
	shf.r.wrap.b32 	%r6338, %r6337, %r6336, 19;
	shf.r.wrap.b32 	%r6339, %r6336, %r6337, 19;
	mov.b64 	%rd8331, {%r6339, %r6338};
	shf.l.wrap.b32 	%r6340, %r6336, %r6337, 3;
	shf.l.wrap.b32 	%r6341, %r6337, %r6336, 3;
	mov.b64 	%rd8332, {%r6341, %r6340};
	shr.u64 	%rd8333, %rd10276, 6;
	xor.b64  	%rd8334, %rd8331, %rd8333;
	xor.b64  	%rd8335, %rd8334, %rd8332;
	shr.u64 	%rd8336, %rd10279, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6342,%dummy}, %rd10279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6343}, %rd10279;
	}
	shf.r.wrap.b32 	%r6344, %r6343, %r6342, 1;
	shf.r.wrap.b32 	%r6345, %r6342, %r6343, 1;
	mov.b64 	%rd8337, {%r6345, %r6344};
	xor.b64  	%rd8338, %rd8337, %rd8336;
	shf.r.wrap.b32 	%r6346, %r6343, %r6342, 8;
	shf.r.wrap.b32 	%r6347, %r6342, %r6343, 8;
	mov.b64 	%rd8339, {%r6347, %r6346};
	xor.b64  	%rd8340, %rd8338, %rd8339;
	add.s64 	%rd8341, %rd10264, %rd10278;
	add.s64 	%rd8342, %rd8341, %rd8335;
	add.s64 	%rd10278, %rd8342, %rd8340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6348,%dummy}, %rd10277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6349}, %rd10277;
	}
	shf.r.wrap.b32 	%r6350, %r6349, %r6348, 19;
	shf.r.wrap.b32 	%r6351, %r6348, %r6349, 19;
	mov.b64 	%rd8343, {%r6351, %r6350};
	shf.l.wrap.b32 	%r6352, %r6348, %r6349, 3;
	shf.l.wrap.b32 	%r6353, %r6349, %r6348, 3;
	mov.b64 	%rd8344, {%r6353, %r6352};
	shr.u64 	%rd8345, %rd10277, 6;
	xor.b64  	%rd8346, %rd8343, %rd8345;
	xor.b64  	%rd8347, %rd8346, %rd8344;
	shr.u64 	%rd8348, %rd10280, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6354,%dummy}, %rd10280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6355}, %rd10280;
	}
	shf.r.wrap.b32 	%r6356, %r6355, %r6354, 1;
	shf.r.wrap.b32 	%r6357, %r6354, %r6355, 1;
	mov.b64 	%rd8349, {%r6357, %r6356};
	xor.b64  	%rd8350, %rd8349, %rd8348;
	shf.r.wrap.b32 	%r6358, %r6355, %r6354, 8;
	shf.r.wrap.b32 	%r6359, %r6354, %r6355, 8;
	mov.b64 	%rd8351, {%r6359, %r6358};
	xor.b64  	%rd8352, %rd8350, %rd8351;
	add.s64 	%rd8353, %rd10263, %rd10279;
	add.s64 	%rd8354, %rd8353, %rd8347;
	add.s64 	%rd10279, %rd8354, %rd8352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6360,%dummy}, %rd10278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6361}, %rd10278;
	}
	shf.r.wrap.b32 	%r6362, %r6361, %r6360, 19;
	shf.r.wrap.b32 	%r6363, %r6360, %r6361, 19;
	mov.b64 	%rd8355, {%r6363, %r6362};
	shf.l.wrap.b32 	%r6364, %r6360, %r6361, 3;
	shf.l.wrap.b32 	%r6365, %r6361, %r6360, 3;
	mov.b64 	%rd8356, {%r6365, %r6364};
	shr.u64 	%rd8357, %rd10278, 6;
	xor.b64  	%rd8358, %rd8355, %rd8357;
	xor.b64  	%rd8359, %rd8358, %rd8356;
	shr.u64 	%rd8360, %rd10281, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6366,%dummy}, %rd10281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6367}, %rd10281;
	}
	shf.r.wrap.b32 	%r6368, %r6367, %r6366, 1;
	shf.r.wrap.b32 	%r6369, %r6366, %r6367, 1;
	mov.b64 	%rd8361, {%r6369, %r6368};
	xor.b64  	%rd8362, %rd8361, %rd8360;
	shf.r.wrap.b32 	%r6370, %r6367, %r6366, 8;
	shf.r.wrap.b32 	%r6371, %r6366, %r6367, 8;
	mov.b64 	%rd8363, {%r6371, %r6370};
	xor.b64  	%rd8364, %rd8362, %rd8363;
	add.s64 	%rd8365, %rd10262, %rd10280;
	add.s64 	%rd8366, %rd8365, %rd8359;
	add.s64 	%rd10280, %rd8366, %rd8364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6372,%dummy}, %rd10279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6373}, %rd10279;
	}
	shf.r.wrap.b32 	%r6374, %r6373, %r6372, 19;
	shf.r.wrap.b32 	%r6375, %r6372, %r6373, 19;
	mov.b64 	%rd8367, {%r6375, %r6374};
	shf.l.wrap.b32 	%r6376, %r6372, %r6373, 3;
	shf.l.wrap.b32 	%r6377, %r6373, %r6372, 3;
	mov.b64 	%rd8368, {%r6377, %r6376};
	shr.u64 	%rd8369, %rd10279, 6;
	xor.b64  	%rd8370, %rd8367, %rd8369;
	xor.b64  	%rd8371, %rd8370, %rd8368;
	shr.u64 	%rd8372, %rd10282, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6378,%dummy}, %rd10282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6379}, %rd10282;
	}
	shf.r.wrap.b32 	%r6380, %r6379, %r6378, 1;
	shf.r.wrap.b32 	%r6381, %r6378, %r6379, 1;
	mov.b64 	%rd8373, {%r6381, %r6380};
	xor.b64  	%rd8374, %rd8373, %rd8372;
	shf.r.wrap.b32 	%r6382, %r6379, %r6378, 8;
	shf.r.wrap.b32 	%r6383, %r6378, %r6379, 8;
	mov.b64 	%rd8375, {%r6383, %r6382};
	xor.b64  	%rd8376, %rd8374, %rd8375;
	add.s64 	%rd8377, %rd10261, %rd10281;
	add.s64 	%rd8378, %rd8377, %rd8371;
	add.s64 	%rd10281, %rd8378, %rd8376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6384,%dummy}, %rd10280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6385}, %rd10280;
	}
	shf.r.wrap.b32 	%r6386, %r6385, %r6384, 19;
	shf.r.wrap.b32 	%r6387, %r6384, %r6385, 19;
	mov.b64 	%rd8379, {%r6387, %r6386};
	shf.l.wrap.b32 	%r6388, %r6384, %r6385, 3;
	shf.l.wrap.b32 	%r6389, %r6385, %r6384, 3;
	mov.b64 	%rd8380, {%r6389, %r6388};
	shr.u64 	%rd8381, %rd10280, 6;
	xor.b64  	%rd8382, %rd8379, %rd8381;
	xor.b64  	%rd8383, %rd8382, %rd8380;
	shr.u64 	%rd8384, %rd10283, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6390,%dummy}, %rd10283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6391}, %rd10283;
	}
	shf.r.wrap.b32 	%r6392, %r6391, %r6390, 1;
	shf.r.wrap.b32 	%r6393, %r6390, %r6391, 1;
	mov.b64 	%rd8385, {%r6393, %r6392};
	xor.b64  	%rd8386, %rd8385, %rd8384;
	shf.r.wrap.b32 	%r6394, %r6391, %r6390, 8;
	shf.r.wrap.b32 	%r6395, %r6390, %r6391, 8;
	mov.b64 	%rd8387, {%r6395, %r6394};
	xor.b64  	%rd8388, %rd8386, %rd8387;
	add.s64 	%rd8389, %rd10260, %rd10282;
	add.s64 	%rd8390, %rd8389, %rd8383;
	add.s64 	%rd10282, %rd8390, %rd8388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6396,%dummy}, %rd10281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6397}, %rd10281;
	}
	shf.r.wrap.b32 	%r6398, %r6397, %r6396, 19;
	shf.r.wrap.b32 	%r6399, %r6396, %r6397, 19;
	mov.b64 	%rd8391, {%r6399, %r6398};
	shf.l.wrap.b32 	%r6400, %r6396, %r6397, 3;
	shf.l.wrap.b32 	%r6401, %r6397, %r6396, 3;
	mov.b64 	%rd8392, {%r6401, %r6400};
	shr.u64 	%rd8393, %rd10281, 6;
	xor.b64  	%rd8394, %rd8391, %rd8393;
	xor.b64  	%rd8395, %rd8394, %rd8392;
	shr.u64 	%rd8396, %rd10267, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6402,%dummy}, %rd10267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6403}, %rd10267;
	}
	shf.r.wrap.b32 	%r6404, %r6403, %r6402, 1;
	shf.r.wrap.b32 	%r6405, %r6402, %r6403, 1;
	mov.b64 	%rd8397, {%r6405, %r6404};
	xor.b64  	%rd8398, %rd8397, %rd8396;
	shf.r.wrap.b32 	%r6406, %r6403, %r6402, 8;
	shf.r.wrap.b32 	%r6407, %r6402, %r6403, 8;
	mov.b64 	%rd8399, {%r6407, %r6406};
	xor.b64  	%rd8400, %rd8398, %rd8399;
	add.s64 	%rd8401, %rd10276, %rd10283;
	add.s64 	%rd8402, %rd8401, %rd8395;
	add.s64 	%rd10283, %rd8402, %rd8400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6408,%dummy}, %rd10282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6409}, %rd10282;
	}
	shf.r.wrap.b32 	%r6410, %r6409, %r6408, 19;
	shf.r.wrap.b32 	%r6411, %r6408, %r6409, 19;
	mov.b64 	%rd8403, {%r6411, %r6410};
	shf.l.wrap.b32 	%r6412, %r6408, %r6409, 3;
	shf.l.wrap.b32 	%r6413, %r6409, %r6408, 3;
	mov.b64 	%rd8404, {%r6413, %r6412};
	shr.u64 	%rd8405, %rd10282, 6;
	xor.b64  	%rd8406, %rd8403, %rd8405;
	xor.b64  	%rd8407, %rd8406, %rd8404;
	shr.u64 	%rd8408, %rd10266, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6414,%dummy}, %rd10266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6415}, %rd10266;
	}
	shf.r.wrap.b32 	%r6416, %r6415, %r6414, 1;
	shf.r.wrap.b32 	%r6417, %r6414, %r6415, 1;
	mov.b64 	%rd8409, {%r6417, %r6416};
	xor.b64  	%rd8410, %rd8409, %rd8408;
	shf.r.wrap.b32 	%r6418, %r6415, %r6414, 8;
	shf.r.wrap.b32 	%r6419, %r6414, %r6415, 8;
	mov.b64 	%rd8411, {%r6419, %r6418};
	xor.b64  	%rd8412, %rd8410, %rd8411;
	add.s64 	%rd8413, %rd10277, %rd10267;
	add.s64 	%rd8414, %rd8413, %rd8407;
	add.s64 	%rd10267, %rd8414, %rd8412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6420,%dummy}, %rd10283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6421}, %rd10283;
	}
	shf.r.wrap.b32 	%r6422, %r6421, %r6420, 19;
	shf.r.wrap.b32 	%r6423, %r6420, %r6421, 19;
	mov.b64 	%rd8415, {%r6423, %r6422};
	shf.l.wrap.b32 	%r6424, %r6420, %r6421, 3;
	shf.l.wrap.b32 	%r6425, %r6421, %r6420, 3;
	mov.b64 	%rd8416, {%r6425, %r6424};
	shr.u64 	%rd8417, %rd10283, 6;
	xor.b64  	%rd8418, %rd8415, %rd8417;
	xor.b64  	%rd8419, %rd8418, %rd8416;
	shr.u64 	%rd8420, %rd10265, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6426,%dummy}, %rd10265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6427}, %rd10265;
	}
	shf.r.wrap.b32 	%r6428, %r6427, %r6426, 1;
	shf.r.wrap.b32 	%r6429, %r6426, %r6427, 1;
	mov.b64 	%rd8421, {%r6429, %r6428};
	xor.b64  	%rd8422, %rd8421, %rd8420;
	shf.r.wrap.b32 	%r6430, %r6427, %r6426, 8;
	shf.r.wrap.b32 	%r6431, %r6426, %r6427, 8;
	mov.b64 	%rd8423, {%r6431, %r6430};
	xor.b64  	%rd8424, %rd8422, %rd8423;
	add.s64 	%rd8425, %rd10278, %rd10266;
	add.s64 	%rd8426, %rd8425, %rd8419;
	add.s64 	%rd10266, %rd8426, %rd8424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6432,%dummy}, %rd10267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6433}, %rd10267;
	}
	shf.r.wrap.b32 	%r6434, %r6433, %r6432, 19;
	shf.r.wrap.b32 	%r6435, %r6432, %r6433, 19;
	mov.b64 	%rd8427, {%r6435, %r6434};
	shf.l.wrap.b32 	%r6436, %r6432, %r6433, 3;
	shf.l.wrap.b32 	%r6437, %r6433, %r6432, 3;
	mov.b64 	%rd8428, {%r6437, %r6436};
	shr.u64 	%rd8429, %rd10267, 6;
	xor.b64  	%rd8430, %rd8427, %rd8429;
	xor.b64  	%rd8431, %rd8430, %rd8428;
	shr.u64 	%rd8432, %rd10264, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6438,%dummy}, %rd10264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6439}, %rd10264;
	}
	shf.r.wrap.b32 	%r6440, %r6439, %r6438, 1;
	shf.r.wrap.b32 	%r6441, %r6438, %r6439, 1;
	mov.b64 	%rd8433, {%r6441, %r6440};
	xor.b64  	%rd8434, %rd8433, %rd8432;
	shf.r.wrap.b32 	%r6442, %r6439, %r6438, 8;
	shf.r.wrap.b32 	%r6443, %r6438, %r6439, 8;
	mov.b64 	%rd8435, {%r6443, %r6442};
	xor.b64  	%rd8436, %rd8434, %rd8435;
	add.s64 	%rd8437, %rd10279, %rd10265;
	add.s64 	%rd8438, %rd8437, %rd8431;
	add.s64 	%rd10265, %rd8438, %rd8436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6444,%dummy}, %rd10266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6445}, %rd10266;
	}
	shf.r.wrap.b32 	%r6446, %r6445, %r6444, 19;
	shf.r.wrap.b32 	%r6447, %r6444, %r6445, 19;
	mov.b64 	%rd8439, {%r6447, %r6446};
	shf.l.wrap.b32 	%r6448, %r6444, %r6445, 3;
	shf.l.wrap.b32 	%r6449, %r6445, %r6444, 3;
	mov.b64 	%rd8440, {%r6449, %r6448};
	shr.u64 	%rd8441, %rd10266, 6;
	xor.b64  	%rd8442, %rd8439, %rd8441;
	xor.b64  	%rd8443, %rd8442, %rd8440;
	shr.u64 	%rd8444, %rd10263, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6450,%dummy}, %rd10263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6451}, %rd10263;
	}
	shf.r.wrap.b32 	%r6452, %r6451, %r6450, 1;
	shf.r.wrap.b32 	%r6453, %r6450, %r6451, 1;
	mov.b64 	%rd8445, {%r6453, %r6452};
	xor.b64  	%rd8446, %rd8445, %rd8444;
	shf.r.wrap.b32 	%r6454, %r6451, %r6450, 8;
	shf.r.wrap.b32 	%r6455, %r6450, %r6451, 8;
	mov.b64 	%rd8447, {%r6455, %r6454};
	xor.b64  	%rd8448, %rd8446, %rd8447;
	add.s64 	%rd8449, %rd10280, %rd10264;
	add.s64 	%rd8450, %rd8449, %rd8443;
	add.s64 	%rd10264, %rd8450, %rd8448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6456,%dummy}, %rd10265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6457}, %rd10265;
	}
	shf.r.wrap.b32 	%r6458, %r6457, %r6456, 19;
	shf.r.wrap.b32 	%r6459, %r6456, %r6457, 19;
	mov.b64 	%rd8451, {%r6459, %r6458};
	shf.l.wrap.b32 	%r6460, %r6456, %r6457, 3;
	shf.l.wrap.b32 	%r6461, %r6457, %r6456, 3;
	mov.b64 	%rd8452, {%r6461, %r6460};
	shr.u64 	%rd8453, %rd10265, 6;
	xor.b64  	%rd8454, %rd8451, %rd8453;
	xor.b64  	%rd8455, %rd8454, %rd8452;
	shr.u64 	%rd8456, %rd10262, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6462,%dummy}, %rd10262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6463}, %rd10262;
	}
	shf.r.wrap.b32 	%r6464, %r6463, %r6462, 1;
	shf.r.wrap.b32 	%r6465, %r6462, %r6463, 1;
	mov.b64 	%rd8457, {%r6465, %r6464};
	xor.b64  	%rd8458, %rd8457, %rd8456;
	shf.r.wrap.b32 	%r6466, %r6463, %r6462, 8;
	shf.r.wrap.b32 	%r6467, %r6462, %r6463, 8;
	mov.b64 	%rd8459, {%r6467, %r6466};
	xor.b64  	%rd8460, %rd8458, %rd8459;
	add.s64 	%rd8461, %rd10281, %rd10263;
	add.s64 	%rd8462, %rd8461, %rd8455;
	add.s64 	%rd10263, %rd8462, %rd8460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6468,%dummy}, %rd10264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6469}, %rd10264;
	}
	shf.r.wrap.b32 	%r6470, %r6469, %r6468, 19;
	shf.r.wrap.b32 	%r6471, %r6468, %r6469, 19;
	mov.b64 	%rd8463, {%r6471, %r6470};
	shf.l.wrap.b32 	%r6472, %r6468, %r6469, 3;
	shf.l.wrap.b32 	%r6473, %r6469, %r6468, 3;
	mov.b64 	%rd8464, {%r6473, %r6472};
	shr.u64 	%rd8465, %rd10264, 6;
	xor.b64  	%rd8466, %rd8463, %rd8465;
	xor.b64  	%rd8467, %rd8466, %rd8464;
	shr.u64 	%rd8468, %rd10261, 7;
	shf.r.wrap.b32 	%r6474, %r6313, %r6312, 1;
	shf.r.wrap.b32 	%r6475, %r6312, %r6313, 1;
	mov.b64 	%rd8469, {%r6475, %r6474};
	xor.b64  	%rd8470, %rd8469, %rd8468;
	shf.r.wrap.b32 	%r6476, %r6313, %r6312, 8;
	shf.r.wrap.b32 	%r6477, %r6312, %r6313, 8;
	mov.b64 	%rd8471, {%r6477, %r6476};
	xor.b64  	%rd8472, %rd8470, %rd8471;
	add.s64 	%rd8473, %rd10282, %rd10262;
	add.s64 	%rd8474, %rd8473, %rd8467;
	add.s64 	%rd10262, %rd8474, %rd8472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6478,%dummy}, %rd10263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6479}, %rd10263;
	}
	shf.r.wrap.b32 	%r6480, %r6479, %r6478, 19;
	shf.r.wrap.b32 	%r6481, %r6478, %r6479, 19;
	mov.b64 	%rd8475, {%r6481, %r6480};
	shf.l.wrap.b32 	%r6482, %r6478, %r6479, 3;
	shf.l.wrap.b32 	%r6483, %r6479, %r6478, 3;
	mov.b64 	%rd8476, {%r6483, %r6482};
	shr.u64 	%rd8477, %rd10263, 6;
	xor.b64  	%rd8478, %rd8475, %rd8477;
	xor.b64  	%rd8479, %rd8478, %rd8476;
	shr.u64 	%rd8480, %rd10260, 7;
	shf.r.wrap.b32 	%r6484, %r6325, %r6324, 1;
	shf.r.wrap.b32 	%r6485, %r6324, %r6325, 1;
	mov.b64 	%rd8481, {%r6485, %r6484};
	xor.b64  	%rd8482, %rd8481, %rd8480;
	shf.r.wrap.b32 	%r6486, %r6325, %r6324, 8;
	shf.r.wrap.b32 	%r6487, %r6324, %r6325, 8;
	mov.b64 	%rd8483, {%r6487, %r6486};
	xor.b64  	%rd8484, %rd8482, %rd8483;
	add.s64 	%rd8485, %rd10283, %rd10261;
	add.s64 	%rd8486, %rd8485, %rd8479;
	add.s64 	%rd10261, %rd8486, %rd8484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6488,%dummy}, %rd10262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6489}, %rd10262;
	}
	shf.r.wrap.b32 	%r6490, %r6489, %r6488, 19;
	shf.r.wrap.b32 	%r6491, %r6488, %r6489, 19;
	mov.b64 	%rd8487, {%r6491, %r6490};
	shf.l.wrap.b32 	%r6492, %r6488, %r6489, 3;
	shf.l.wrap.b32 	%r6493, %r6489, %r6488, 3;
	mov.b64 	%rd8488, {%r6493, %r6492};
	shr.u64 	%rd8489, %rd10262, 6;
	xor.b64  	%rd8490, %rd8487, %rd8489;
	xor.b64  	%rd8491, %rd8490, %rd8488;
	shf.r.wrap.b32 	%r6494, %r6337, %r6336, 1;
	shf.r.wrap.b32 	%r6495, %r6336, %r6337, 1;
	mov.b64 	%rd8492, {%r6495, %r6494};
	shf.r.wrap.b32 	%r6496, %r6337, %r6336, 8;
	shf.r.wrap.b32 	%r6497, %r6336, %r6337, 8;
	mov.b64 	%rd8493, {%r6497, %r6496};
	shr.u64 	%rd8494, %rd10276, 7;
	xor.b64  	%rd8495, %rd8492, %rd8494;
	xor.b64  	%rd8496, %rd8495, %rd8493;
	add.s64 	%rd8497, %rd10267, %rd10260;
	add.s64 	%rd8498, %rd8497, %rd8491;
	add.s64 	%rd10260, %rd8498, %rd8496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6498,%dummy}, %rd10272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6499}, %rd10272;
	}
	shf.r.wrap.b32 	%r6500, %r6499, %r6498, 18;
	shf.r.wrap.b32 	%r6501, %r6498, %r6499, 18;
	mov.b64 	%rd8499, {%r6501, %r6500};
	shf.r.wrap.b32 	%r6502, %r6499, %r6498, 14;
	shf.r.wrap.b32 	%r6503, %r6498, %r6499, 14;
	mov.b64 	%rd8500, {%r6503, %r6502};
	xor.b64  	%rd8501, %rd8499, %rd8500;
	shf.l.wrap.b32 	%r6504, %r6498, %r6499, 23;
	shf.l.wrap.b32 	%r6505, %r6499, %r6498, 23;
	mov.b64 	%rd8502, {%r6505, %r6504};
	xor.b64  	%rd8503, %rd8501, %rd8502;
	xor.b64  	%rd8504, %rd10273, %rd10274;
	and.b64  	%rd8505, %rd10272, %rd8504;
	xor.b64  	%rd8506, %rd8505, %rd10274;
	add.s64 	%rd8507, %rd8506, %rd10275;
	add.s64 	%rd8508, %rd8507, %rd10276;
	add.s64 	%rd804, %rd10259, 128;
	ld.const.u64 	%rd8509, [%rd10259+128];
	add.s64 	%rd8510, %rd8508, %rd8509;
	add.s64 	%rd8511, %rd8510, %rd8503;
	add.s64 	%rd8512, %rd8511, %rd10271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6506}, %rd10268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6507,%dummy}, %rd10268;
	}
	shf.l.wrap.b32 	%r6508, %r6507, %r6506, 30;
	shf.l.wrap.b32 	%r6509, %r6506, %r6507, 30;
	mov.b64 	%rd8513, {%r6509, %r6508};
	shf.r.wrap.b32 	%r6510, %r6506, %r6507, 28;
	shf.r.wrap.b32 	%r6511, %r6507, %r6506, 28;
	mov.b64 	%rd8514, {%r6511, %r6510};
	xor.b64  	%rd8515, %rd8513, %rd8514;
	shf.l.wrap.b32 	%r6512, %r6507, %r6506, 25;
	shf.l.wrap.b32 	%r6513, %r6506, %r6507, 25;
	mov.b64 	%rd8516, {%r6513, %r6512};
	xor.b64  	%rd8517, %rd8515, %rd8516;
	xor.b64  	%rd8518, %rd10268, %rd10269;
	and.b64  	%rd8519, %rd8518, %rd10270;
	and.b64  	%rd8520, %rd10268, %rd10269;
	or.b64  	%rd8521, %rd8519, %rd8520;
	add.s64 	%rd8522, %rd8511, %rd8521;
	add.s64 	%rd8523, %rd8522, %rd8517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6514,%dummy}, %rd8512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6515}, %rd8512;
	}
	shf.r.wrap.b32 	%r6516, %r6515, %r6514, 14;
	shf.r.wrap.b32 	%r6517, %r6514, %r6515, 14;
	mov.b64 	%rd8524, {%r6517, %r6516};
	shf.r.wrap.b32 	%r6518, %r6515, %r6514, 18;
	shf.r.wrap.b32 	%r6519, %r6514, %r6515, 18;
	mov.b64 	%rd8525, {%r6519, %r6518};
	xor.b64  	%rd8526, %rd8525, %rd8524;
	shf.l.wrap.b32 	%r6520, %r6514, %r6515, 23;
	shf.l.wrap.b32 	%r6521, %r6515, %r6514, 23;
	mov.b64 	%rd8527, {%r6521, %r6520};
	xor.b64  	%rd8528, %rd8526, %rd8527;
	xor.b64  	%rd8529, %rd10272, %rd10273;
	and.b64  	%rd8530, %rd8512, %rd8529;
	xor.b64  	%rd8531, %rd8530, %rd10273;
	add.s64 	%rd8532, %rd10277, %rd10274;
	ld.const.u64 	%rd8533, [%rd10259+136];
	add.s64 	%rd8534, %rd8532, %rd8533;
	add.s64 	%rd8535, %rd8534, %rd8531;
	add.s64 	%rd8536, %rd8535, %rd8528;
	add.s64 	%rd8537, %rd8536, %rd10270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6522,%dummy}, %rd8523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6523}, %rd8523;
	}
	shf.r.wrap.b32 	%r6524, %r6523, %r6522, 28;
	shf.r.wrap.b32 	%r6525, %r6522, %r6523, 28;
	mov.b64 	%rd8538, {%r6525, %r6524};
	shf.l.wrap.b32 	%r6526, %r6522, %r6523, 30;
	shf.l.wrap.b32 	%r6527, %r6523, %r6522, 30;
	mov.b64 	%rd8539, {%r6527, %r6526};
	xor.b64  	%rd8540, %rd8539, %rd8538;
	shf.l.wrap.b32 	%r6528, %r6522, %r6523, 25;
	shf.l.wrap.b32 	%r6529, %r6523, %r6522, 25;
	mov.b64 	%rd8541, {%r6529, %r6528};
	xor.b64  	%rd8542, %rd8540, %rd8541;
	and.b64  	%rd8543, %rd8523, %rd10268;
	xor.b64  	%rd8544, %rd8523, %rd10268;
	and.b64  	%rd8545, %rd8544, %rd10269;
	or.b64  	%rd8546, %rd8545, %rd8543;
	add.s64 	%rd8547, %rd8536, %rd8546;
	add.s64 	%rd8548, %rd8547, %rd8542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6530,%dummy}, %rd8537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6531}, %rd8537;
	}
	shf.r.wrap.b32 	%r6532, %r6531, %r6530, 14;
	shf.r.wrap.b32 	%r6533, %r6530, %r6531, 14;
	mov.b64 	%rd8549, {%r6533, %r6532};
	shf.r.wrap.b32 	%r6534, %r6531, %r6530, 18;
	shf.r.wrap.b32 	%r6535, %r6530, %r6531, 18;
	mov.b64 	%rd8550, {%r6535, %r6534};
	xor.b64  	%rd8551, %rd8550, %rd8549;
	shf.l.wrap.b32 	%r6536, %r6530, %r6531, 23;
	shf.l.wrap.b32 	%r6537, %r6531, %r6530, 23;
	mov.b64 	%rd8552, {%r6537, %r6536};
	xor.b64  	%rd8553, %rd8551, %rd8552;
	xor.b64  	%rd8554, %rd8512, %rd10272;
	and.b64  	%rd8555, %rd8537, %rd8554;
	xor.b64  	%rd8556, %rd8555, %rd10272;
	add.s64 	%rd8557, %rd10278, %rd10273;
	ld.const.u64 	%rd8558, [%rd10259+144];
	add.s64 	%rd8559, %rd8557, %rd8558;
	add.s64 	%rd8560, %rd8559, %rd8556;
	add.s64 	%rd8561, %rd8560, %rd8553;
	add.s64 	%rd8562, %rd8561, %rd10269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6538,%dummy}, %rd8548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6539}, %rd8548;
	}
	shf.r.wrap.b32 	%r6540, %r6539, %r6538, 28;
	shf.r.wrap.b32 	%r6541, %r6538, %r6539, 28;
	mov.b64 	%rd8563, {%r6541, %r6540};
	shf.l.wrap.b32 	%r6542, %r6538, %r6539, 30;
	shf.l.wrap.b32 	%r6543, %r6539, %r6538, 30;
	mov.b64 	%rd8564, {%r6543, %r6542};
	xor.b64  	%rd8565, %rd8564, %rd8563;
	shf.l.wrap.b32 	%r6544, %r6538, %r6539, 25;
	shf.l.wrap.b32 	%r6545, %r6539, %r6538, 25;
	mov.b64 	%rd8566, {%r6545, %r6544};
	xor.b64  	%rd8567, %rd8565, %rd8566;
	and.b64  	%rd8568, %rd8548, %rd8523;
	xor.b64  	%rd8569, %rd8548, %rd8523;
	and.b64  	%rd8570, %rd8569, %rd10268;
	or.b64  	%rd8571, %rd8570, %rd8568;
	add.s64 	%rd8572, %rd8561, %rd8571;
	add.s64 	%rd8573, %rd8572, %rd8567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6546,%dummy}, %rd8562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6547}, %rd8562;
	}
	shf.r.wrap.b32 	%r6548, %r6547, %r6546, 14;
	shf.r.wrap.b32 	%r6549, %r6546, %r6547, 14;
	mov.b64 	%rd8574, {%r6549, %r6548};
	shf.r.wrap.b32 	%r6550, %r6547, %r6546, 18;
	shf.r.wrap.b32 	%r6551, %r6546, %r6547, 18;
	mov.b64 	%rd8575, {%r6551, %r6550};
	xor.b64  	%rd8576, %rd8575, %rd8574;
	shf.l.wrap.b32 	%r6552, %r6546, %r6547, 23;
	shf.l.wrap.b32 	%r6553, %r6547, %r6546, 23;
	mov.b64 	%rd8577, {%r6553, %r6552};
	xor.b64  	%rd8578, %rd8576, %rd8577;
	xor.b64  	%rd8579, %rd8537, %rd8512;
	and.b64  	%rd8580, %rd8562, %rd8579;
	xor.b64  	%rd8581, %rd8580, %rd8512;
	add.s64 	%rd8582, %rd10279, %rd10272;
	ld.const.u64 	%rd8583, [%rd10259+152];
	add.s64 	%rd8584, %rd8582, %rd8583;
	add.s64 	%rd8585, %rd8584, %rd8581;
	add.s64 	%rd8586, %rd8585, %rd8578;
	add.s64 	%rd8587, %rd8586, %rd10268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6554,%dummy}, %rd8573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6555}, %rd8573;
	}
	shf.r.wrap.b32 	%r6556, %r6555, %r6554, 28;
	shf.r.wrap.b32 	%r6557, %r6554, %r6555, 28;
	mov.b64 	%rd8588, {%r6557, %r6556};
	shf.l.wrap.b32 	%r6558, %r6554, %r6555, 30;
	shf.l.wrap.b32 	%r6559, %r6555, %r6554, 30;
	mov.b64 	%rd8589, {%r6559, %r6558};
	xor.b64  	%rd8590, %rd8589, %rd8588;
	shf.l.wrap.b32 	%r6560, %r6554, %r6555, 25;
	shf.l.wrap.b32 	%r6561, %r6555, %r6554, 25;
	mov.b64 	%rd8591, {%r6561, %r6560};
	xor.b64  	%rd8592, %rd8590, %rd8591;
	and.b64  	%rd8593, %rd8573, %rd8548;
	xor.b64  	%rd8594, %rd8573, %rd8548;
	and.b64  	%rd8595, %rd8594, %rd8523;
	or.b64  	%rd8596, %rd8595, %rd8593;
	add.s64 	%rd8597, %rd8586, %rd8596;
	add.s64 	%rd8598, %rd8597, %rd8592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6562,%dummy}, %rd8587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6563}, %rd8587;
	}
	shf.r.wrap.b32 	%r6564, %r6563, %r6562, 14;
	shf.r.wrap.b32 	%r6565, %r6562, %r6563, 14;
	mov.b64 	%rd8599, {%r6565, %r6564};
	shf.r.wrap.b32 	%r6566, %r6563, %r6562, 18;
	shf.r.wrap.b32 	%r6567, %r6562, %r6563, 18;
	mov.b64 	%rd8600, {%r6567, %r6566};
	xor.b64  	%rd8601, %rd8600, %rd8599;
	shf.l.wrap.b32 	%r6568, %r6562, %r6563, 23;
	shf.l.wrap.b32 	%r6569, %r6563, %r6562, 23;
	mov.b64 	%rd8602, {%r6569, %r6568};
	xor.b64  	%rd8603, %rd8601, %rd8602;
	xor.b64  	%rd8604, %rd8562, %rd8537;
	and.b64  	%rd8605, %rd8587, %rd8604;
	xor.b64  	%rd8606, %rd8605, %rd8537;
	add.s64 	%rd8607, %rd8512, %rd10280;
	ld.const.u64 	%rd8608, [%rd10259+160];
	add.s64 	%rd8609, %rd8607, %rd8608;
	add.s64 	%rd8610, %rd8609, %rd8606;
	add.s64 	%rd8611, %rd8610, %rd8603;
	add.s64 	%rd8612, %rd8611, %rd8523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6570,%dummy}, %rd8598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6571}, %rd8598;
	}
	shf.r.wrap.b32 	%r6572, %r6571, %r6570, 28;
	shf.r.wrap.b32 	%r6573, %r6570, %r6571, 28;
	mov.b64 	%rd8613, {%r6573, %r6572};
	shf.l.wrap.b32 	%r6574, %r6570, %r6571, 30;
	shf.l.wrap.b32 	%r6575, %r6571, %r6570, 30;
	mov.b64 	%rd8614, {%r6575, %r6574};
	xor.b64  	%rd8615, %rd8614, %rd8613;
	shf.l.wrap.b32 	%r6576, %r6570, %r6571, 25;
	shf.l.wrap.b32 	%r6577, %r6571, %r6570, 25;
	mov.b64 	%rd8616, {%r6577, %r6576};
	xor.b64  	%rd8617, %rd8615, %rd8616;
	and.b64  	%rd8618, %rd8598, %rd8573;
	xor.b64  	%rd8619, %rd8598, %rd8573;
	and.b64  	%rd8620, %rd8619, %rd8548;
	or.b64  	%rd8621, %rd8620, %rd8618;
	add.s64 	%rd8622, %rd8611, %rd8621;
	add.s64 	%rd8623, %rd8622, %rd8617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6578,%dummy}, %rd8612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6579}, %rd8612;
	}
	shf.r.wrap.b32 	%r6580, %r6579, %r6578, 14;
	shf.r.wrap.b32 	%r6581, %r6578, %r6579, 14;
	mov.b64 	%rd8624, {%r6581, %r6580};
	shf.r.wrap.b32 	%r6582, %r6579, %r6578, 18;
	shf.r.wrap.b32 	%r6583, %r6578, %r6579, 18;
	mov.b64 	%rd8625, {%r6583, %r6582};
	xor.b64  	%rd8626, %rd8625, %rd8624;
	shf.l.wrap.b32 	%r6584, %r6578, %r6579, 23;
	shf.l.wrap.b32 	%r6585, %r6579, %r6578, 23;
	mov.b64 	%rd8627, {%r6585, %r6584};
	xor.b64  	%rd8628, %rd8626, %rd8627;
	xor.b64  	%rd8629, %rd8587, %rd8562;
	and.b64  	%rd8630, %rd8612, %rd8629;
	xor.b64  	%rd8631, %rd8630, %rd8562;
	add.s64 	%rd8632, %rd8537, %rd10281;
	ld.const.u64 	%rd8633, [%rd10259+168];
	add.s64 	%rd8634, %rd8632, %rd8633;
	add.s64 	%rd8635, %rd8634, %rd8631;
	add.s64 	%rd8636, %rd8635, %rd8628;
	add.s64 	%rd8637, %rd8636, %rd8548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6586,%dummy}, %rd8623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6587}, %rd8623;
	}
	shf.r.wrap.b32 	%r6588, %r6587, %r6586, 28;
	shf.r.wrap.b32 	%r6589, %r6586, %r6587, 28;
	mov.b64 	%rd8638, {%r6589, %r6588};
	shf.l.wrap.b32 	%r6590, %r6586, %r6587, 30;
	shf.l.wrap.b32 	%r6591, %r6587, %r6586, 30;
	mov.b64 	%rd8639, {%r6591, %r6590};
	xor.b64  	%rd8640, %rd8639, %rd8638;
	shf.l.wrap.b32 	%r6592, %r6586, %r6587, 25;
	shf.l.wrap.b32 	%r6593, %r6587, %r6586, 25;
	mov.b64 	%rd8641, {%r6593, %r6592};
	xor.b64  	%rd8642, %rd8640, %rd8641;
	and.b64  	%rd8643, %rd8623, %rd8598;
	xor.b64  	%rd8644, %rd8623, %rd8598;
	and.b64  	%rd8645, %rd8644, %rd8573;
	or.b64  	%rd8646, %rd8645, %rd8643;
	add.s64 	%rd8647, %rd8636, %rd8646;
	add.s64 	%rd8648, %rd8647, %rd8642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6594,%dummy}, %rd8637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6595}, %rd8637;
	}
	shf.r.wrap.b32 	%r6596, %r6595, %r6594, 14;
	shf.r.wrap.b32 	%r6597, %r6594, %r6595, 14;
	mov.b64 	%rd8649, {%r6597, %r6596};
	shf.r.wrap.b32 	%r6598, %r6595, %r6594, 18;
	shf.r.wrap.b32 	%r6599, %r6594, %r6595, 18;
	mov.b64 	%rd8650, {%r6599, %r6598};
	xor.b64  	%rd8651, %rd8650, %rd8649;
	shf.l.wrap.b32 	%r6600, %r6594, %r6595, 23;
	shf.l.wrap.b32 	%r6601, %r6595, %r6594, 23;
	mov.b64 	%rd8652, {%r6601, %r6600};
	xor.b64  	%rd8653, %rd8651, %rd8652;
	xor.b64  	%rd8654, %rd8612, %rd8587;
	and.b64  	%rd8655, %rd8637, %rd8654;
	xor.b64  	%rd8656, %rd8655, %rd8587;
	add.s64 	%rd8657, %rd8562, %rd10282;
	ld.const.u64 	%rd8658, [%rd10259+176];
	add.s64 	%rd8659, %rd8657, %rd8658;
	add.s64 	%rd8660, %rd8659, %rd8656;
	add.s64 	%rd8661, %rd8660, %rd8653;
	add.s64 	%rd8662, %rd8661, %rd8573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6602,%dummy}, %rd8648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6603}, %rd8648;
	}
	shf.r.wrap.b32 	%r6604, %r6603, %r6602, 28;
	shf.r.wrap.b32 	%r6605, %r6602, %r6603, 28;
	mov.b64 	%rd8663, {%r6605, %r6604};
	shf.l.wrap.b32 	%r6606, %r6602, %r6603, 30;
	shf.l.wrap.b32 	%r6607, %r6603, %r6602, 30;
	mov.b64 	%rd8664, {%r6607, %r6606};
	xor.b64  	%rd8665, %rd8664, %rd8663;
	shf.l.wrap.b32 	%r6608, %r6602, %r6603, 25;
	shf.l.wrap.b32 	%r6609, %r6603, %r6602, 25;
	mov.b64 	%rd8666, {%r6609, %r6608};
	xor.b64  	%rd8667, %rd8665, %rd8666;
	and.b64  	%rd8668, %rd8648, %rd8623;
	xor.b64  	%rd8669, %rd8648, %rd8623;
	and.b64  	%rd8670, %rd8669, %rd8598;
	or.b64  	%rd8671, %rd8670, %rd8668;
	add.s64 	%rd8672, %rd8661, %rd8671;
	add.s64 	%rd8673, %rd8672, %rd8667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6610,%dummy}, %rd8662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6611}, %rd8662;
	}
	shf.r.wrap.b32 	%r6612, %r6611, %r6610, 14;
	shf.r.wrap.b32 	%r6613, %r6610, %r6611, 14;
	mov.b64 	%rd8674, {%r6613, %r6612};
	shf.r.wrap.b32 	%r6614, %r6611, %r6610, 18;
	shf.r.wrap.b32 	%r6615, %r6610, %r6611, 18;
	mov.b64 	%rd8675, {%r6615, %r6614};
	xor.b64  	%rd8676, %rd8675, %rd8674;
	shf.l.wrap.b32 	%r6616, %r6610, %r6611, 23;
	shf.l.wrap.b32 	%r6617, %r6611, %r6610, 23;
	mov.b64 	%rd8677, {%r6617, %r6616};
	xor.b64  	%rd8678, %rd8676, %rd8677;
	xor.b64  	%rd8679, %rd8637, %rd8612;
	and.b64  	%rd8680, %rd8662, %rd8679;
	xor.b64  	%rd8681, %rd8680, %rd8612;
	add.s64 	%rd8682, %rd8587, %rd10283;
	ld.const.u64 	%rd8683, [%rd10259+184];
	add.s64 	%rd8684, %rd8682, %rd8683;
	add.s64 	%rd8685, %rd8684, %rd8681;
	add.s64 	%rd8686, %rd8685, %rd8678;
	add.s64 	%rd8687, %rd8686, %rd8598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6618,%dummy}, %rd8673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6619}, %rd8673;
	}
	shf.r.wrap.b32 	%r6620, %r6619, %r6618, 28;
	shf.r.wrap.b32 	%r6621, %r6618, %r6619, 28;
	mov.b64 	%rd8688, {%r6621, %r6620};
	shf.l.wrap.b32 	%r6622, %r6618, %r6619, 30;
	shf.l.wrap.b32 	%r6623, %r6619, %r6618, 30;
	mov.b64 	%rd8689, {%r6623, %r6622};
	xor.b64  	%rd8690, %rd8689, %rd8688;
	shf.l.wrap.b32 	%r6624, %r6618, %r6619, 25;
	shf.l.wrap.b32 	%r6625, %r6619, %r6618, 25;
	mov.b64 	%rd8691, {%r6625, %r6624};
	xor.b64  	%rd8692, %rd8690, %rd8691;
	and.b64  	%rd8693, %rd8673, %rd8648;
	xor.b64  	%rd8694, %rd8673, %rd8648;
	and.b64  	%rd8695, %rd8694, %rd8623;
	or.b64  	%rd8696, %rd8695, %rd8693;
	add.s64 	%rd8697, %rd8686, %rd8696;
	add.s64 	%rd8698, %rd8697, %rd8692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6626,%dummy}, %rd8687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6627}, %rd8687;
	}
	shf.r.wrap.b32 	%r6628, %r6627, %r6626, 14;
	shf.r.wrap.b32 	%r6629, %r6626, %r6627, 14;
	mov.b64 	%rd8699, {%r6629, %r6628};
	shf.r.wrap.b32 	%r6630, %r6627, %r6626, 18;
	shf.r.wrap.b32 	%r6631, %r6626, %r6627, 18;
	mov.b64 	%rd8700, {%r6631, %r6630};
	xor.b64  	%rd8701, %rd8700, %rd8699;
	shf.l.wrap.b32 	%r6632, %r6626, %r6627, 23;
	shf.l.wrap.b32 	%r6633, %r6627, %r6626, 23;
	mov.b64 	%rd8702, {%r6633, %r6632};
	xor.b64  	%rd8703, %rd8701, %rd8702;
	xor.b64  	%rd8704, %rd8662, %rd8637;
	and.b64  	%rd8705, %rd8687, %rd8704;
	xor.b64  	%rd8706, %rd8705, %rd8637;
	add.s64 	%rd8707, %rd8612, %rd10267;
	ld.const.u64 	%rd8708, [%rd10259+192];
	add.s64 	%rd8709, %rd8707, %rd8708;
	add.s64 	%rd8710, %rd8709, %rd8706;
	add.s64 	%rd8711, %rd8710, %rd8703;
	add.s64 	%rd8712, %rd8711, %rd8623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6634,%dummy}, %rd8698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6635}, %rd8698;
	}
	shf.r.wrap.b32 	%r6636, %r6635, %r6634, 28;
	shf.r.wrap.b32 	%r6637, %r6634, %r6635, 28;
	mov.b64 	%rd8713, {%r6637, %r6636};
	shf.l.wrap.b32 	%r6638, %r6634, %r6635, 30;
	shf.l.wrap.b32 	%r6639, %r6635, %r6634, 30;
	mov.b64 	%rd8714, {%r6639, %r6638};
	xor.b64  	%rd8715, %rd8714, %rd8713;
	shf.l.wrap.b32 	%r6640, %r6634, %r6635, 25;
	shf.l.wrap.b32 	%r6641, %r6635, %r6634, 25;
	mov.b64 	%rd8716, {%r6641, %r6640};
	xor.b64  	%rd8717, %rd8715, %rd8716;
	and.b64  	%rd8718, %rd8698, %rd8673;
	xor.b64  	%rd8719, %rd8698, %rd8673;
	and.b64  	%rd8720, %rd8719, %rd8648;
	or.b64  	%rd8721, %rd8720, %rd8718;
	add.s64 	%rd8722, %rd8711, %rd8721;
	add.s64 	%rd8723, %rd8722, %rd8717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6642,%dummy}, %rd8712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6643}, %rd8712;
	}
	shf.r.wrap.b32 	%r6644, %r6643, %r6642, 14;
	shf.r.wrap.b32 	%r6645, %r6642, %r6643, 14;
	mov.b64 	%rd8724, {%r6645, %r6644};
	shf.r.wrap.b32 	%r6646, %r6643, %r6642, 18;
	shf.r.wrap.b32 	%r6647, %r6642, %r6643, 18;
	mov.b64 	%rd8725, {%r6647, %r6646};
	xor.b64  	%rd8726, %rd8725, %rd8724;
	shf.l.wrap.b32 	%r6648, %r6642, %r6643, 23;
	shf.l.wrap.b32 	%r6649, %r6643, %r6642, 23;
	mov.b64 	%rd8727, {%r6649, %r6648};
	xor.b64  	%rd8728, %rd8726, %rd8727;
	xor.b64  	%rd8729, %rd8687, %rd8662;
	and.b64  	%rd8730, %rd8712, %rd8729;
	xor.b64  	%rd8731, %rd8730, %rd8662;
	add.s64 	%rd8732, %rd8637, %rd10266;
	ld.const.u64 	%rd8733, [%rd10259+200];
	add.s64 	%rd8734, %rd8732, %rd8733;
	add.s64 	%rd8735, %rd8734, %rd8731;
	add.s64 	%rd8736, %rd8735, %rd8728;
	add.s64 	%rd8737, %rd8736, %rd8648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6650,%dummy}, %rd8723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6651}, %rd8723;
	}
	shf.r.wrap.b32 	%r6652, %r6651, %r6650, 28;
	shf.r.wrap.b32 	%r6653, %r6650, %r6651, 28;
	mov.b64 	%rd8738, {%r6653, %r6652};
	shf.l.wrap.b32 	%r6654, %r6650, %r6651, 30;
	shf.l.wrap.b32 	%r6655, %r6651, %r6650, 30;
	mov.b64 	%rd8739, {%r6655, %r6654};
	xor.b64  	%rd8740, %rd8739, %rd8738;
	shf.l.wrap.b32 	%r6656, %r6650, %r6651, 25;
	shf.l.wrap.b32 	%r6657, %r6651, %r6650, 25;
	mov.b64 	%rd8741, {%r6657, %r6656};
	xor.b64  	%rd8742, %rd8740, %rd8741;
	and.b64  	%rd8743, %rd8723, %rd8698;
	xor.b64  	%rd8744, %rd8723, %rd8698;
	and.b64  	%rd8745, %rd8744, %rd8673;
	or.b64  	%rd8746, %rd8745, %rd8743;
	add.s64 	%rd8747, %rd8736, %rd8746;
	add.s64 	%rd8748, %rd8747, %rd8742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6658,%dummy}, %rd8737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6659}, %rd8737;
	}
	shf.r.wrap.b32 	%r6660, %r6659, %r6658, 14;
	shf.r.wrap.b32 	%r6661, %r6658, %r6659, 14;
	mov.b64 	%rd8749, {%r6661, %r6660};
	shf.r.wrap.b32 	%r6662, %r6659, %r6658, 18;
	shf.r.wrap.b32 	%r6663, %r6658, %r6659, 18;
	mov.b64 	%rd8750, {%r6663, %r6662};
	xor.b64  	%rd8751, %rd8750, %rd8749;
	shf.l.wrap.b32 	%r6664, %r6658, %r6659, 23;
	shf.l.wrap.b32 	%r6665, %r6659, %r6658, 23;
	mov.b64 	%rd8752, {%r6665, %r6664};
	xor.b64  	%rd8753, %rd8751, %rd8752;
	xor.b64  	%rd8754, %rd8712, %rd8687;
	and.b64  	%rd8755, %rd8737, %rd8754;
	xor.b64  	%rd8756, %rd8755, %rd8687;
	add.s64 	%rd8757, %rd8662, %rd10265;
	ld.const.u64 	%rd8758, [%rd10259+208];
	add.s64 	%rd8759, %rd8757, %rd8758;
	add.s64 	%rd8760, %rd8759, %rd8756;
	add.s64 	%rd8761, %rd8760, %rd8753;
	add.s64 	%rd8762, %rd8761, %rd8673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6666,%dummy}, %rd8748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6667}, %rd8748;
	}
	shf.r.wrap.b32 	%r6668, %r6667, %r6666, 28;
	shf.r.wrap.b32 	%r6669, %r6666, %r6667, 28;
	mov.b64 	%rd8763, {%r6669, %r6668};
	shf.l.wrap.b32 	%r6670, %r6666, %r6667, 30;
	shf.l.wrap.b32 	%r6671, %r6667, %r6666, 30;
	mov.b64 	%rd8764, {%r6671, %r6670};
	xor.b64  	%rd8765, %rd8764, %rd8763;
	shf.l.wrap.b32 	%r6672, %r6666, %r6667, 25;
	shf.l.wrap.b32 	%r6673, %r6667, %r6666, 25;
	mov.b64 	%rd8766, {%r6673, %r6672};
	xor.b64  	%rd8767, %rd8765, %rd8766;
	and.b64  	%rd8768, %rd8748, %rd8723;
	xor.b64  	%rd8769, %rd8748, %rd8723;
	and.b64  	%rd8770, %rd8769, %rd8698;
	or.b64  	%rd8771, %rd8770, %rd8768;
	add.s64 	%rd8772, %rd8761, %rd8771;
	add.s64 	%rd8773, %rd8772, %rd8767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6674,%dummy}, %rd8762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6675}, %rd8762;
	}
	shf.r.wrap.b32 	%r6676, %r6675, %r6674, 14;
	shf.r.wrap.b32 	%r6677, %r6674, %r6675, 14;
	mov.b64 	%rd8774, {%r6677, %r6676};
	shf.r.wrap.b32 	%r6678, %r6675, %r6674, 18;
	shf.r.wrap.b32 	%r6679, %r6674, %r6675, 18;
	mov.b64 	%rd8775, {%r6679, %r6678};
	xor.b64  	%rd8776, %rd8775, %rd8774;
	shf.l.wrap.b32 	%r6680, %r6674, %r6675, 23;
	shf.l.wrap.b32 	%r6681, %r6675, %r6674, 23;
	mov.b64 	%rd8777, {%r6681, %r6680};
	xor.b64  	%rd8778, %rd8776, %rd8777;
	xor.b64  	%rd8779, %rd8737, %rd8712;
	and.b64  	%rd8780, %rd8762, %rd8779;
	xor.b64  	%rd8781, %rd8780, %rd8712;
	add.s64 	%rd8782, %rd8687, %rd10264;
	ld.const.u64 	%rd8783, [%rd10259+216];
	add.s64 	%rd8784, %rd8782, %rd8783;
	add.s64 	%rd8785, %rd8784, %rd8781;
	add.s64 	%rd8786, %rd8785, %rd8778;
	add.s64 	%rd8787, %rd8786, %rd8698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6682,%dummy}, %rd8773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6683}, %rd8773;
	}
	shf.r.wrap.b32 	%r6684, %r6683, %r6682, 28;
	shf.r.wrap.b32 	%r6685, %r6682, %r6683, 28;
	mov.b64 	%rd8788, {%r6685, %r6684};
	shf.l.wrap.b32 	%r6686, %r6682, %r6683, 30;
	shf.l.wrap.b32 	%r6687, %r6683, %r6682, 30;
	mov.b64 	%rd8789, {%r6687, %r6686};
	xor.b64  	%rd8790, %rd8789, %rd8788;
	shf.l.wrap.b32 	%r6688, %r6682, %r6683, 25;
	shf.l.wrap.b32 	%r6689, %r6683, %r6682, 25;
	mov.b64 	%rd8791, {%r6689, %r6688};
	xor.b64  	%rd8792, %rd8790, %rd8791;
	and.b64  	%rd8793, %rd8773, %rd8748;
	xor.b64  	%rd8794, %rd8773, %rd8748;
	and.b64  	%rd8795, %rd8794, %rd8723;
	or.b64  	%rd8796, %rd8795, %rd8793;
	add.s64 	%rd8797, %rd8786, %rd8796;
	add.s64 	%rd8798, %rd8797, %rd8792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6690,%dummy}, %rd8787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6691}, %rd8787;
	}
	shf.r.wrap.b32 	%r6692, %r6691, %r6690, 14;
	shf.r.wrap.b32 	%r6693, %r6690, %r6691, 14;
	mov.b64 	%rd8799, {%r6693, %r6692};
	shf.r.wrap.b32 	%r6694, %r6691, %r6690, 18;
	shf.r.wrap.b32 	%r6695, %r6690, %r6691, 18;
	mov.b64 	%rd8800, {%r6695, %r6694};
	xor.b64  	%rd8801, %rd8800, %rd8799;
	shf.l.wrap.b32 	%r6696, %r6690, %r6691, 23;
	shf.l.wrap.b32 	%r6697, %r6691, %r6690, 23;
	mov.b64 	%rd8802, {%r6697, %r6696};
	xor.b64  	%rd8803, %rd8801, %rd8802;
	xor.b64  	%rd8804, %rd8762, %rd8737;
	and.b64  	%rd8805, %rd8787, %rd8804;
	xor.b64  	%rd8806, %rd8805, %rd8737;
	add.s64 	%rd8807, %rd8712, %rd10263;
	ld.const.u64 	%rd8808, [%rd10259+224];
	add.s64 	%rd8809, %rd8807, %rd8808;
	add.s64 	%rd8810, %rd8809, %rd8806;
	add.s64 	%rd8811, %rd8810, %rd8803;
	add.s64 	%rd10275, %rd8811, %rd8723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6698,%dummy}, %rd8798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6699}, %rd8798;
	}
	shf.r.wrap.b32 	%r6700, %r6699, %r6698, 28;
	shf.r.wrap.b32 	%r6701, %r6698, %r6699, 28;
	mov.b64 	%rd8812, {%r6701, %r6700};
	shf.l.wrap.b32 	%r6702, %r6698, %r6699, 30;
	shf.l.wrap.b32 	%r6703, %r6699, %r6698, 30;
	mov.b64 	%rd8813, {%r6703, %r6702};
	xor.b64  	%rd8814, %rd8813, %rd8812;
	shf.l.wrap.b32 	%r6704, %r6698, %r6699, 25;
	shf.l.wrap.b32 	%r6705, %r6699, %r6698, 25;
	mov.b64 	%rd8815, {%r6705, %r6704};
	xor.b64  	%rd8816, %rd8814, %rd8815;
	and.b64  	%rd8817, %rd8798, %rd8773;
	xor.b64  	%rd8818, %rd8798, %rd8773;
	and.b64  	%rd8819, %rd8818, %rd8748;
	or.b64  	%rd8820, %rd8819, %rd8817;
	add.s64 	%rd8821, %rd8811, %rd8820;
	add.s64 	%rd10271, %rd8821, %rd8816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6706,%dummy}, %rd10275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6707}, %rd10275;
	}
	shf.r.wrap.b32 	%r6708, %r6707, %r6706, 14;
	shf.r.wrap.b32 	%r6709, %r6706, %r6707, 14;
	mov.b64 	%rd8822, {%r6709, %r6708};
	shf.r.wrap.b32 	%r6710, %r6707, %r6706, 18;
	shf.r.wrap.b32 	%r6711, %r6706, %r6707, 18;
	mov.b64 	%rd8823, {%r6711, %r6710};
	xor.b64  	%rd8824, %rd8823, %rd8822;
	shf.l.wrap.b32 	%r6712, %r6706, %r6707, 23;
	shf.l.wrap.b32 	%r6713, %r6707, %r6706, 23;
	mov.b64 	%rd8825, {%r6713, %r6712};
	xor.b64  	%rd8826, %rd8824, %rd8825;
	xor.b64  	%rd8827, %rd8787, %rd8762;
	and.b64  	%rd8828, %rd10275, %rd8827;
	xor.b64  	%rd8829, %rd8828, %rd8762;
	add.s64 	%rd8830, %rd8737, %rd10262;
	ld.const.u64 	%rd8831, [%rd10259+232];
	add.s64 	%rd8832, %rd8830, %rd8831;
	add.s64 	%rd8833, %rd8832, %rd8829;
	add.s64 	%rd8834, %rd8833, %rd8826;
	add.s64 	%rd10274, %rd8834, %rd8748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6714,%dummy}, %rd10271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6715}, %rd10271;
	}
	shf.r.wrap.b32 	%r6716, %r6715, %r6714, 28;
	shf.r.wrap.b32 	%r6717, %r6714, %r6715, 28;
	mov.b64 	%rd8835, {%r6717, %r6716};
	shf.l.wrap.b32 	%r6718, %r6714, %r6715, 30;
	shf.l.wrap.b32 	%r6719, %r6715, %r6714, 30;
	mov.b64 	%rd8836, {%r6719, %r6718};
	xor.b64  	%rd8837, %rd8836, %rd8835;
	shf.l.wrap.b32 	%r6720, %r6714, %r6715, 25;
	shf.l.wrap.b32 	%r6721, %r6715, %r6714, 25;
	mov.b64 	%rd8838, {%r6721, %r6720};
	xor.b64  	%rd8839, %rd8837, %rd8838;
	and.b64  	%rd8840, %rd10271, %rd8798;
	xor.b64  	%rd8841, %rd10271, %rd8798;
	and.b64  	%rd8842, %rd8841, %rd8773;
	or.b64  	%rd8843, %rd8842, %rd8840;
	add.s64 	%rd8844, %rd8834, %rd8843;
	add.s64 	%rd10270, %rd8844, %rd8839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6722,%dummy}, %rd10274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6723}, %rd10274;
	}
	shf.r.wrap.b32 	%r6724, %r6723, %r6722, 14;
	shf.r.wrap.b32 	%r6725, %r6722, %r6723, 14;
	mov.b64 	%rd8845, {%r6725, %r6724};
	shf.r.wrap.b32 	%r6726, %r6723, %r6722, 18;
	shf.r.wrap.b32 	%r6727, %r6722, %r6723, 18;
	mov.b64 	%rd8846, {%r6727, %r6726};
	xor.b64  	%rd8847, %rd8846, %rd8845;
	shf.l.wrap.b32 	%r6728, %r6722, %r6723, 23;
	shf.l.wrap.b32 	%r6729, %r6723, %r6722, 23;
	mov.b64 	%rd8848, {%r6729, %r6728};
	xor.b64  	%rd8849, %rd8847, %rd8848;
	xor.b64  	%rd8850, %rd10275, %rd8787;
	and.b64  	%rd8851, %rd10274, %rd8850;
	xor.b64  	%rd8852, %rd8851, %rd8787;
	add.s64 	%rd8853, %rd8762, %rd10261;
	ld.const.u64 	%rd8854, [%rd10259+240];
	add.s64 	%rd8855, %rd8853, %rd8854;
	add.s64 	%rd8856, %rd8855, %rd8852;
	add.s64 	%rd8857, %rd8856, %rd8849;
	add.s64 	%rd10273, %rd8857, %rd8773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6730,%dummy}, %rd10270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6731}, %rd10270;
	}
	shf.r.wrap.b32 	%r6732, %r6731, %r6730, 28;
	shf.r.wrap.b32 	%r6733, %r6730, %r6731, 28;
	mov.b64 	%rd8858, {%r6733, %r6732};
	shf.l.wrap.b32 	%r6734, %r6730, %r6731, 30;
	shf.l.wrap.b32 	%r6735, %r6731, %r6730, 30;
	mov.b64 	%rd8859, {%r6735, %r6734};
	xor.b64  	%rd8860, %rd8859, %rd8858;
	shf.l.wrap.b32 	%r6736, %r6730, %r6731, 25;
	shf.l.wrap.b32 	%r6737, %r6731, %r6730, 25;
	mov.b64 	%rd8861, {%r6737, %r6736};
	xor.b64  	%rd8862, %rd8860, %rd8861;
	and.b64  	%rd8863, %rd10270, %rd10271;
	xor.b64  	%rd8864, %rd10270, %rd10271;
	and.b64  	%rd8865, %rd8864, %rd8798;
	or.b64  	%rd8866, %rd8865, %rd8863;
	add.s64 	%rd8867, %rd8857, %rd8866;
	add.s64 	%rd10269, %rd8867, %rd8862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6738,%dummy}, %rd10273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6739}, %rd10273;
	}
	shf.r.wrap.b32 	%r6740, %r6739, %r6738, 14;
	shf.r.wrap.b32 	%r6741, %r6738, %r6739, 14;
	mov.b64 	%rd8868, {%r6741, %r6740};
	shf.r.wrap.b32 	%r6742, %r6739, %r6738, 18;
	shf.r.wrap.b32 	%r6743, %r6738, %r6739, 18;
	mov.b64 	%rd8869, {%r6743, %r6742};
	xor.b64  	%rd8870, %rd8869, %rd8868;
	shf.l.wrap.b32 	%r6744, %r6738, %r6739, 23;
	shf.l.wrap.b32 	%r6745, %r6739, %r6738, 23;
	mov.b64 	%rd8871, {%r6745, %r6744};
	xor.b64  	%rd8872, %rd8870, %rd8871;
	xor.b64  	%rd8873, %rd10274, %rd10275;
	and.b64  	%rd8874, %rd10273, %rd8873;
	xor.b64  	%rd8875, %rd8874, %rd10275;
	add.s64 	%rd8876, %rd8787, %rd10260;
	ld.const.u64 	%rd8877, [%rd10259+248];
	add.s64 	%rd8878, %rd8876, %rd8877;
	add.s64 	%rd8879, %rd8878, %rd8875;
	add.s64 	%rd8880, %rd8879, %rd8872;
	add.s64 	%rd10272, %rd8880, %rd8798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6746,%dummy}, %rd10269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6747}, %rd10269;
	}
	shf.r.wrap.b32 	%r6748, %r6747, %r6746, 28;
	shf.r.wrap.b32 	%r6749, %r6746, %r6747, 28;
	mov.b64 	%rd8881, {%r6749, %r6748};
	shf.l.wrap.b32 	%r6750, %r6746, %r6747, 30;
	shf.l.wrap.b32 	%r6751, %r6747, %r6746, 30;
	mov.b64 	%rd8882, {%r6751, %r6750};
	xor.b64  	%rd8883, %rd8882, %rd8881;
	shf.l.wrap.b32 	%r6752, %r6746, %r6747, 25;
	shf.l.wrap.b32 	%r6753, %r6747, %r6746, 25;
	mov.b64 	%rd8884, {%r6753, %r6752};
	xor.b64  	%rd8885, %rd8883, %rd8884;
	and.b64  	%rd8886, %rd10269, %rd10270;
	xor.b64  	%rd8887, %rd10269, %rd10270;
	and.b64  	%rd8888, %rd8887, %rd10271;
	or.b64  	%rd8889, %rd8888, %rd8886;
	add.s64 	%rd8890, %rd8880, %rd8889;
	add.s64 	%rd10268, %rd8890, %rd8885;
	add.s32 	%r7710, %r7710, 16;
	setp.lt.s32	%p64, %r7710, 80;
	mov.u64 	%rd10259, %rd804;
	@%p64 bra 	BB3_31;

	add.u64 	%rd10025, %SPL, 528;
	add.s64 	%rd10024, %rd10025, 248;
	add.s64 	%rd10023, %rd10025, 240;
	add.u64 	%rd9980, %SPL, 528;
	add.s64 	%rd9979, %rd9980, 232;
	add.s64 	%rd9978, %rd9980, 224;
	add.s64 	%rd9977, %rd9980, 216;
	add.u64 	%rd9962, %SPL, 528;
	add.s64 	%rd9961, %rd9962, 208;
	add.s64 	%rd9960, %rd9962, 200;
	add.s64 	%rd8891, %rd10258, %rd10268;
	st.local.u64 	[%rd9960], %rd8891;
	add.s64 	%rd8892, %rd10257, %rd10269;
	st.local.u64 	[%rd9961], %rd8892;
	add.s64 	%rd8893, %rd10256, %rd10270;
	st.local.u64 	[%rd9977], %rd8893;
	add.s64 	%rd8894, %rd10255, %rd10271;
	st.local.u64 	[%rd9978], %rd8894;
	add.s64 	%rd8895, %rd10254, %rd10272;
	st.local.u64 	[%rd9979], %rd8895;
	add.s64 	%rd8896, %rd10253, %rd10273;
	st.local.u64 	[%rd10023], %rd8896;
	add.s64 	%rd8897, %rd10252, %rd10274;
	st.local.u64 	[%rd10024], %rd8897;
	add.s64 	%rd8898, %rd10251, %rd10275;
	st.local.u64 	[%rd460], %rd8898;
	st.global.u64 	[%rd4913+128], %rd8891;
	st.global.u64 	[%rd4913+136], %rd8892;
	st.global.u64 	[%rd4913+144], %rd8893;
	st.global.u64 	[%rd4913+152], %rd8894;
	st.global.u64 	[%rd4913+160], %rd8895;
	st.global.u64 	[%rd4913+168], %rd8896;
	st.global.u64 	[%rd4913+176], %rd8897;
	st.global.u64 	[%rd4913+184], %rd8898;
	st.global.u64 	[%rd4913+256], %rd8891;
	st.global.u64 	[%rd4913+264], %rd8892;
	st.global.u64 	[%rd4913+272], %rd8893;
	st.global.u64 	[%rd4913+280], %rd8894;
	st.global.u64 	[%rd4913+288], %rd8895;
	st.global.u64 	[%rd4913+296], %rd8896;
	st.global.u64 	[%rd4913+304], %rd8897;
	st.global.u64 	[%rd4913+312], %rd8898;

BB3_33:
	ret;
}

	// .globl	m07100_loop
.entry m07100_loop(
	.param .u64 .ptr .global .align 4 m07100_loop_param_0,
	.param .u64 .ptr .global .align 4 m07100_loop_param_1,
	.param .u64 .ptr .global .align 4 m07100_loop_param_2,
	.param .u64 .ptr .const .align 4 m07100_loop_param_3,
	.param .u64 .ptr .global .align 8 m07100_loop_param_4,
	.param .u64 .ptr .global .align 1 m07100_loop_param_5,
	.param .u64 .ptr .global .align 4 m07100_loop_param_6,
	.param .u64 .ptr .global .align 4 m07100_loop_param_7,
	.param .u64 .ptr .global .align 4 m07100_loop_param_8,
	.param .u64 .ptr .global .align 4 m07100_loop_param_9,
	.param .u64 .ptr .global .align 4 m07100_loop_param_10,
	.param .u64 .ptr .global .align 4 m07100_loop_param_11,
	.param .u64 .ptr .global .align 4 m07100_loop_param_12,
	.param .u64 .ptr .global .align 4 m07100_loop_param_13,
	.param .u64 .ptr .global .align 8 m07100_loop_param_14,
	.param .u64 .ptr .global .align 4 m07100_loop_param_15,
	.param .u64 .ptr .global .align 4 m07100_loop_param_16,
	.param .u64 .ptr .global .align 4 m07100_loop_param_17,
	.param .u64 .ptr .global .align 4 m07100_loop_param_18,
	.param .u64 .ptr .global .align 4 m07100_loop_param_19,
	.param .u64 .ptr .global .align 1 m07100_loop_param_20,
	.param .u64 .ptr .global .align 1 m07100_loop_param_21,
	.param .u64 .ptr .global .align 1 m07100_loop_param_22,
	.param .u64 .ptr .global .align 1 m07100_loop_param_23,
	.param .u32 m07100_loop_param_24,
	.param .u32 m07100_loop_param_25,
	.param .u32 m07100_loop_param_26,
	.param .u32 m07100_loop_param_27,
	.param .u32 m07100_loop_param_28,
	.param .u32 m07100_loop_param_29,
	.param .u32 m07100_loop_param_30,
	.param .u32 m07100_loop_param_31,
	.param .u32 m07100_loop_param_32,
	.param .u32 m07100_loop_param_33,
	.param .u64 m07100_loop_param_34
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<1447>;
	.reg .b64 	%rd<2293>;


	ld.param.u64 	%rd221, [m07100_loop_param_4];
	ld.param.u32 	%r8, [m07100_loop_param_29];
	ld.param.u64 	%rd222, [m07100_loop_param_34];
	mov.b32	%r9, %envreg3;
	mov.u32 	%r10, %ctaid.x;
	mov.u32 	%r11, %ntid.x;
	mad.lo.s32 	%r12, %r10, %r11, %r9;
	mov.u32 	%r13, %tid.x;
	add.s32 	%r1, %r12, %r13;
	cvt.s64.s32	%rd223, %r1;
	setp.ge.u64	%p1, %rd223, %rd222;
	@%p1 bra 	BB4_9;

	mul.wide.s32 	%rd224, %r1, 384;
	add.s64 	%rd225, %rd221, %rd224;
	ld.global.u64 	%rd1, [%rd225+24];
	ld.global.u64 	%rd2, [%rd225+56];
	ld.global.u64 	%rd3, [%rd225+88];
	ld.global.u64 	%rd4, [%rd225+120];
	ld.const.u64 	%rd5, [k_sha512];
	ld.global.u64 	%rd6, [%rd225+48];
	ld.global.u64 	%rd7, [%rd225+40];
	ld.global.u64 	%rd8, [%rd225+32];
	ld.global.u64 	%rd9, [%rd225+8];
	ld.global.u64 	%rd10, [%rd225];
	ld.global.u64 	%rd11, [%rd225+16];
	ld.const.u64 	%rd12, [k_sha512+8];
	ld.const.u64 	%rd13, [k_sha512+16];
	ld.const.u64 	%rd14, [k_sha512+24];
	ld.const.u64 	%rd15, [k_sha512+32];
	ld.const.u64 	%rd16, [k_sha512+40];
	ld.const.u64 	%rd17, [k_sha512+48];
	ld.const.u64 	%rd18, [k_sha512+56];
	ld.const.u64 	%rd226, [k_sha512+64];
	xor.b64  	%rd19, %rd226, -9223372036854775808;
	ld.const.u64 	%rd20, [k_sha512+72];
	ld.const.u64 	%rd21, [k_sha512+80];
	ld.const.u64 	%rd22, [k_sha512+88];
	ld.const.u64 	%rd23, [k_sha512+96];
	ld.const.u64 	%rd24, [k_sha512+104];
	ld.const.u64 	%rd25, [k_sha512+112];
	ld.const.u64 	%rd227, [k_sha512+120];
	add.s64 	%rd26, %rd227, 1536;
	ld.global.u64 	%rd27, [%rd225+112];
	ld.global.u64 	%rd28, [%rd225+104];
	ld.global.u64 	%rd29, [%rd225+96];
	ld.global.u64 	%rd30, [%rd225+72];
	ld.global.u64 	%rd31, [%rd225+64];
	ld.global.u64 	%rd32, [%rd225+80];
	ld.global.u64 	%rd2245, [%rd225+128];
	ld.global.u64 	%rd2246, [%rd225+136];
	ld.global.u64 	%rd2247, [%rd225+144];
	ld.global.u64 	%rd2248, [%rd225+152];
	ld.global.u64 	%rd2249, [%rd225+160];
	ld.global.u64 	%rd2250, [%rd225+168];
	ld.global.u64 	%rd2251, [%rd225+176];
	ld.global.u64 	%rd2252, [%rd225+184];
	ld.global.u64 	%rd2277, [%rd225+256];
	ld.global.u64 	%rd2278, [%rd225+264];
	ld.global.u64 	%rd2279, [%rd225+272];
	ld.global.u64 	%rd2280, [%rd225+280];
	ld.global.u64 	%rd2281, [%rd225+288];
	ld.global.u64 	%rd2282, [%rd225+296];
	ld.global.u64 	%rd2283, [%rd225+304];
	ld.global.u64 	%rd2284, [%rd225+312];
	setp.eq.s32	%p2, %r8, 0;
	@%p2 bra 	BB4_8;

	{
	.reg .b32 %dummy;
	mov.b64 	{%r15,%dummy}, %rd8;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16}, %rd8;
	}
	shf.r.wrap.b32 	%r17, %r16, %r15, 14;
	shf.r.wrap.b32 	%r18, %r15, %r16, 14;
	mov.b64 	%rd228, {%r18, %r17};
	shf.r.wrap.b32 	%r19, %r16, %r15, 18;
	shf.r.wrap.b32 	%r20, %r15, %r16, 18;
	mov.b64 	%rd229, {%r20, %r19};
	xor.b64  	%rd230, %rd228, %rd229;
	shf.l.wrap.b32 	%r21, %r15, %r16, 23;
	shf.l.wrap.b32 	%r22, %r16, %r15, 23;
	mov.b64 	%rd231, {%r22, %r21};
	xor.b64  	%rd232, %rd230, %rd231;
	add.s64 	%rd233, %rd232, %rd2;
	xor.b64  	%rd234, %rd6, %rd7;
	and.b64  	%rd235, %rd234, %rd8;
	xor.b64  	%rd236, %rd235, %rd6;
	add.s64 	%rd49, %rd233, %rd236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r23}, %rd10;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r24,%dummy}, %rd10;
	}
	shf.l.wrap.b32 	%r25, %r24, %r23, 30;
	shf.l.wrap.b32 	%r26, %r23, %r24, 30;
	mov.b64 	%rd237, {%r26, %r25};
	shf.r.wrap.b32 	%r27, %r23, %r24, 28;
	shf.r.wrap.b32 	%r28, %r24, %r23, 28;
	mov.b64 	%rd238, {%r28, %r27};
	xor.b64  	%rd239, %rd238, %rd237;
	shf.l.wrap.b32 	%r29, %r24, %r23, 25;
	shf.l.wrap.b32 	%r30, %r23, %r24, 25;
	mov.b64 	%rd240, {%r30, %r29};
	xor.b64  	%rd241, %rd239, %rd240;
	xor.b64  	%rd242, %rd9, %rd10;
	and.b64  	%rd243, %rd11, %rd242;
	and.b64  	%rd244, %rd9, %rd10;
	or.b64  	%rd245, %rd243, %rd244;
	add.s64 	%rd50, %rd245, %rd241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r31,%dummy}, %rd29;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r32}, %rd29;
	}
	shf.r.wrap.b32 	%r33, %r32, %r31, 18;
	shf.r.wrap.b32 	%r34, %r31, %r32, 18;
	mov.b64 	%rd246, {%r34, %r33};
	shf.r.wrap.b32 	%r35, %r32, %r31, 14;
	shf.r.wrap.b32 	%r36, %r31, %r32, 14;
	mov.b64 	%rd247, {%r36, %r35};
	xor.b64  	%rd248, %rd247, %rd246;
	shf.l.wrap.b32 	%r37, %r31, %r32, 23;
	shf.l.wrap.b32 	%r38, %r32, %r31, 23;
	mov.b64 	%rd249, {%r38, %r37};
	xor.b64  	%rd250, %rd248, %rd249;
	add.s64 	%rd251, %rd250, %rd4;
	xor.b64  	%rd252, %rd27, %rd28;
	and.b64  	%rd253, %rd252, %rd29;
	xor.b64  	%rd254, %rd253, %rd27;
	add.s64 	%rd51, %rd251, %rd254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r39}, %rd31;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r40,%dummy}, %rd31;
	}
	shf.l.wrap.b32 	%r41, %r40, %r39, 30;
	shf.l.wrap.b32 	%r42, %r39, %r40, 30;
	mov.b64 	%rd255, {%r42, %r41};
	shf.r.wrap.b32 	%r43, %r39, %r40, 28;
	shf.r.wrap.b32 	%r44, %r40, %r39, 28;
	mov.b64 	%rd256, {%r44, %r43};
	xor.b64  	%rd257, %rd256, %rd255;
	shf.l.wrap.b32 	%r45, %r40, %r39, 25;
	shf.l.wrap.b32 	%r46, %r39, %r40, 25;
	mov.b64 	%rd258, {%r46, %r45};
	xor.b64  	%rd259, %rd257, %rd258;
	xor.b64  	%rd260, %rd30, %rd31;
	and.b64  	%rd261, %rd32, %rd260;
	and.b64  	%rd262, %rd30, %rd31;
	or.b64  	%rd263, %rd261, %rd262;
	add.s64 	%rd52, %rd263, %rd259;
	mov.u32 	%r1444, 0;

BB4_3:
	add.s64 	%rd272, %rd49, %rd2245;
	add.s64 	%rd273, %rd272, %rd5;
	add.s64 	%rd274, %rd273, %rd1;
	add.s64 	%rd275, %rd50, %rd273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r48,%dummy}, %rd274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r49}, %rd274;
	}
	shf.r.wrap.b32 	%r50, %r49, %r48, 14;
	shf.r.wrap.b32 	%r51, %r48, %r49, 14;
	mov.b64 	%rd276, {%r51, %r50};
	shf.r.wrap.b32 	%r52, %r49, %r48, 18;
	shf.r.wrap.b32 	%r53, %r48, %r49, 18;
	mov.b64 	%rd277, {%r53, %r52};
	xor.b64  	%rd278, %rd276, %rd277;
	shf.l.wrap.b32 	%r54, %r48, %r49, 23;
	shf.l.wrap.b32 	%r55, %r49, %r48, 23;
	mov.b64 	%rd279, {%r55, %r54};
	xor.b64  	%rd280, %rd278, %rd279;
	xor.b64  	%rd281, %rd7, %rd8;
	and.b64  	%rd282, %rd274, %rd281;
	xor.b64  	%rd283, %rd282, %rd7;
	add.s64 	%rd284, %rd2246, %rd6;
	add.s64 	%rd285, %rd284, %rd12;
	add.s64 	%rd286, %rd285, %rd283;
	add.s64 	%rd287, %rd286, %rd280;
	add.s64 	%rd288, %rd287, %rd11;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r56,%dummy}, %rd275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r57}, %rd275;
	}
	shf.r.wrap.b32 	%r58, %r57, %r56, 28;
	shf.r.wrap.b32 	%r59, %r56, %r57, 28;
	mov.b64 	%rd289, {%r59, %r58};
	shf.l.wrap.b32 	%r60, %r56, %r57, 30;
	shf.l.wrap.b32 	%r61, %r57, %r56, 30;
	mov.b64 	%rd290, {%r61, %r60};
	xor.b64  	%rd291, %rd289, %rd290;
	shf.l.wrap.b32 	%r62, %r56, %r57, 25;
	shf.l.wrap.b32 	%r63, %r57, %r56, 25;
	mov.b64 	%rd292, {%r63, %r62};
	xor.b64  	%rd293, %rd291, %rd292;
	and.b64  	%rd294, %rd275, %rd10;
	xor.b64  	%rd295, %rd275, %rd10;
	and.b64  	%rd296, %rd295, %rd9;
	or.b64  	%rd297, %rd296, %rd294;
	add.s64 	%rd298, %rd293, %rd297;
	add.s64 	%rd299, %rd298, %rd287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r64,%dummy}, %rd288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r65}, %rd288;
	}
	shf.r.wrap.b32 	%r66, %r65, %r64, 14;
	shf.r.wrap.b32 	%r67, %r64, %r65, 14;
	mov.b64 	%rd300, {%r67, %r66};
	shf.r.wrap.b32 	%r68, %r65, %r64, 18;
	shf.r.wrap.b32 	%r69, %r64, %r65, 18;
	mov.b64 	%rd301, {%r69, %r68};
	xor.b64  	%rd302, %rd300, %rd301;
	shf.l.wrap.b32 	%r70, %r64, %r65, 23;
	shf.l.wrap.b32 	%r71, %r65, %r64, 23;
	mov.b64 	%rd303, {%r71, %r70};
	xor.b64  	%rd304, %rd302, %rd303;
	xor.b64  	%rd305, %rd274, %rd8;
	and.b64  	%rd306, %rd288, %rd305;
	xor.b64  	%rd307, %rd306, %rd8;
	add.s64 	%rd308, %rd2247, %rd7;
	add.s64 	%rd309, %rd308, %rd13;
	add.s64 	%rd310, %rd309, %rd307;
	add.s64 	%rd311, %rd310, %rd304;
	add.s64 	%rd312, %rd311, %rd9;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r72,%dummy}, %rd299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r73}, %rd299;
	}
	shf.r.wrap.b32 	%r74, %r73, %r72, 28;
	shf.r.wrap.b32 	%r75, %r72, %r73, 28;
	mov.b64 	%rd313, {%r75, %r74};
	shf.l.wrap.b32 	%r76, %r72, %r73, 30;
	shf.l.wrap.b32 	%r77, %r73, %r72, 30;
	mov.b64 	%rd314, {%r77, %r76};
	xor.b64  	%rd315, %rd313, %rd314;
	shf.l.wrap.b32 	%r78, %r72, %r73, 25;
	shf.l.wrap.b32 	%r79, %r73, %r72, 25;
	mov.b64 	%rd316, {%r79, %r78};
	xor.b64  	%rd317, %rd315, %rd316;
	and.b64  	%rd318, %rd299, %rd275;
	xor.b64  	%rd319, %rd299, %rd275;
	and.b64  	%rd320, %rd319, %rd10;
	or.b64  	%rd321, %rd320, %rd318;
	add.s64 	%rd322, %rd317, %rd321;
	add.s64 	%rd323, %rd322, %rd311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r80,%dummy}, %rd312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r81}, %rd312;
	}
	shf.r.wrap.b32 	%r82, %r81, %r80, 14;
	shf.r.wrap.b32 	%r83, %r80, %r81, 14;
	mov.b64 	%rd324, {%r83, %r82};
	shf.r.wrap.b32 	%r84, %r81, %r80, 18;
	shf.r.wrap.b32 	%r85, %r80, %r81, 18;
	mov.b64 	%rd325, {%r85, %r84};
	xor.b64  	%rd326, %rd324, %rd325;
	shf.l.wrap.b32 	%r86, %r80, %r81, 23;
	shf.l.wrap.b32 	%r87, %r81, %r80, 23;
	mov.b64 	%rd327, {%r87, %r86};
	xor.b64  	%rd328, %rd326, %rd327;
	xor.b64  	%rd329, %rd288, %rd274;
	and.b64  	%rd330, %rd312, %rd329;
	xor.b64  	%rd331, %rd330, %rd274;
	add.s64 	%rd332, %rd2248, %rd8;
	add.s64 	%rd333, %rd332, %rd14;
	add.s64 	%rd334, %rd333, %rd331;
	add.s64 	%rd335, %rd334, %rd328;
	add.s64 	%rd336, %rd335, %rd10;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r88,%dummy}, %rd323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r89}, %rd323;
	}
	shf.r.wrap.b32 	%r90, %r89, %r88, 28;
	shf.r.wrap.b32 	%r91, %r88, %r89, 28;
	mov.b64 	%rd337, {%r91, %r90};
	shf.l.wrap.b32 	%r92, %r88, %r89, 30;
	shf.l.wrap.b32 	%r93, %r89, %r88, 30;
	mov.b64 	%rd338, {%r93, %r92};
	xor.b64  	%rd339, %rd337, %rd338;
	shf.l.wrap.b32 	%r94, %r88, %r89, 25;
	shf.l.wrap.b32 	%r95, %r89, %r88, 25;
	mov.b64 	%rd340, {%r95, %r94};
	xor.b64  	%rd341, %rd339, %rd340;
	and.b64  	%rd342, %rd323, %rd299;
	xor.b64  	%rd343, %rd323, %rd299;
	and.b64  	%rd344, %rd343, %rd275;
	or.b64  	%rd345, %rd344, %rd342;
	add.s64 	%rd346, %rd341, %rd345;
	add.s64 	%rd347, %rd346, %rd335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r96,%dummy}, %rd336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r97}, %rd336;
	}
	shf.r.wrap.b32 	%r98, %r97, %r96, 14;
	shf.r.wrap.b32 	%r99, %r96, %r97, 14;
	mov.b64 	%rd348, {%r99, %r98};
	shf.r.wrap.b32 	%r100, %r97, %r96, 18;
	shf.r.wrap.b32 	%r101, %r96, %r97, 18;
	mov.b64 	%rd349, {%r101, %r100};
	xor.b64  	%rd350, %rd348, %rd349;
	shf.l.wrap.b32 	%r102, %r96, %r97, 23;
	shf.l.wrap.b32 	%r103, %r97, %r96, 23;
	mov.b64 	%rd351, {%r103, %r102};
	xor.b64  	%rd352, %rd350, %rd351;
	xor.b64  	%rd353, %rd312, %rd288;
	and.b64  	%rd354, %rd336, %rd353;
	xor.b64  	%rd355, %rd354, %rd288;
	add.s64 	%rd356, %rd274, %rd2249;
	add.s64 	%rd357, %rd356, %rd15;
	add.s64 	%rd358, %rd357, %rd355;
	add.s64 	%rd359, %rd358, %rd352;
	add.s64 	%rd360, %rd359, %rd275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r104,%dummy}, %rd347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r105}, %rd347;
	}
	shf.r.wrap.b32 	%r106, %r105, %r104, 28;
	shf.r.wrap.b32 	%r107, %r104, %r105, 28;
	mov.b64 	%rd361, {%r107, %r106};
	shf.l.wrap.b32 	%r108, %r104, %r105, 30;
	shf.l.wrap.b32 	%r109, %r105, %r104, 30;
	mov.b64 	%rd362, {%r109, %r108};
	xor.b64  	%rd363, %rd361, %rd362;
	shf.l.wrap.b32 	%r110, %r104, %r105, 25;
	shf.l.wrap.b32 	%r111, %r105, %r104, 25;
	mov.b64 	%rd364, {%r111, %r110};
	xor.b64  	%rd365, %rd363, %rd364;
	and.b64  	%rd366, %rd347, %rd323;
	xor.b64  	%rd367, %rd347, %rd323;
	and.b64  	%rd368, %rd367, %rd299;
	or.b64  	%rd369, %rd368, %rd366;
	add.s64 	%rd370, %rd365, %rd369;
	add.s64 	%rd371, %rd370, %rd359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r112,%dummy}, %rd360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r113}, %rd360;
	}
	shf.r.wrap.b32 	%r114, %r113, %r112, 14;
	shf.r.wrap.b32 	%r115, %r112, %r113, 14;
	mov.b64 	%rd372, {%r115, %r114};
	shf.r.wrap.b32 	%r116, %r113, %r112, 18;
	shf.r.wrap.b32 	%r117, %r112, %r113, 18;
	mov.b64 	%rd373, {%r117, %r116};
	xor.b64  	%rd374, %rd372, %rd373;
	shf.l.wrap.b32 	%r118, %r112, %r113, 23;
	shf.l.wrap.b32 	%r119, %r113, %r112, 23;
	mov.b64 	%rd375, {%r119, %r118};
	xor.b64  	%rd376, %rd374, %rd375;
	xor.b64  	%rd377, %rd336, %rd312;
	and.b64  	%rd378, %rd360, %rd377;
	xor.b64  	%rd379, %rd378, %rd312;
	add.s64 	%rd380, %rd16, %rd2250;
	add.s64 	%rd381, %rd380, %rd288;
	add.s64 	%rd382, %rd381, %rd379;
	add.s64 	%rd383, %rd382, %rd376;
	add.s64 	%rd384, %rd383, %rd299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r120,%dummy}, %rd371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r121}, %rd371;
	}
	shf.r.wrap.b32 	%r122, %r121, %r120, 28;
	shf.r.wrap.b32 	%r123, %r120, %r121, 28;
	mov.b64 	%rd385, {%r123, %r122};
	shf.l.wrap.b32 	%r124, %r120, %r121, 30;
	shf.l.wrap.b32 	%r125, %r121, %r120, 30;
	mov.b64 	%rd386, {%r125, %r124};
	xor.b64  	%rd387, %rd385, %rd386;
	shf.l.wrap.b32 	%r126, %r120, %r121, 25;
	shf.l.wrap.b32 	%r127, %r121, %r120, 25;
	mov.b64 	%rd388, {%r127, %r126};
	xor.b64  	%rd389, %rd387, %rd388;
	and.b64  	%rd390, %rd371, %rd347;
	xor.b64  	%rd391, %rd371, %rd347;
	and.b64  	%rd392, %rd391, %rd323;
	or.b64  	%rd393, %rd392, %rd390;
	add.s64 	%rd394, %rd389, %rd393;
	add.s64 	%rd395, %rd394, %rd383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r128,%dummy}, %rd384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r129}, %rd384;
	}
	shf.r.wrap.b32 	%r130, %r129, %r128, 14;
	shf.r.wrap.b32 	%r131, %r128, %r129, 14;
	mov.b64 	%rd396, {%r131, %r130};
	shf.r.wrap.b32 	%r132, %r129, %r128, 18;
	shf.r.wrap.b32 	%r133, %r128, %r129, 18;
	mov.b64 	%rd397, {%r133, %r132};
	xor.b64  	%rd398, %rd396, %rd397;
	shf.l.wrap.b32 	%r134, %r128, %r129, 23;
	shf.l.wrap.b32 	%r135, %r129, %r128, 23;
	mov.b64 	%rd399, {%r135, %r134};
	xor.b64  	%rd400, %rd398, %rd399;
	xor.b64  	%rd401, %rd360, %rd336;
	and.b64  	%rd402, %rd384, %rd401;
	xor.b64  	%rd403, %rd402, %rd336;
	add.s64 	%rd404, %rd17, %rd2251;
	add.s64 	%rd405, %rd404, %rd312;
	add.s64 	%rd406, %rd405, %rd403;
	add.s64 	%rd407, %rd406, %rd400;
	add.s64 	%rd408, %rd407, %rd323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r136,%dummy}, %rd395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r137}, %rd395;
	}
	shf.r.wrap.b32 	%r138, %r137, %r136, 28;
	shf.r.wrap.b32 	%r139, %r136, %r137, 28;
	mov.b64 	%rd409, {%r139, %r138};
	shf.l.wrap.b32 	%r140, %r136, %r137, 30;
	shf.l.wrap.b32 	%r141, %r137, %r136, 30;
	mov.b64 	%rd410, {%r141, %r140};
	xor.b64  	%rd411, %rd409, %rd410;
	shf.l.wrap.b32 	%r142, %r136, %r137, 25;
	shf.l.wrap.b32 	%r143, %r137, %r136, 25;
	mov.b64 	%rd412, {%r143, %r142};
	xor.b64  	%rd413, %rd411, %rd412;
	and.b64  	%rd414, %rd395, %rd371;
	xor.b64  	%rd415, %rd395, %rd371;
	and.b64  	%rd416, %rd415, %rd347;
	or.b64  	%rd417, %rd416, %rd414;
	add.s64 	%rd418, %rd413, %rd417;
	add.s64 	%rd419, %rd418, %rd407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r144,%dummy}, %rd408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r145}, %rd408;
	}
	shf.r.wrap.b32 	%r146, %r145, %r144, 14;
	shf.r.wrap.b32 	%r147, %r144, %r145, 14;
	mov.b64 	%rd420, {%r147, %r146};
	shf.r.wrap.b32 	%r148, %r145, %r144, 18;
	shf.r.wrap.b32 	%r149, %r144, %r145, 18;
	mov.b64 	%rd421, {%r149, %r148};
	xor.b64  	%rd422, %rd420, %rd421;
	shf.l.wrap.b32 	%r150, %r144, %r145, 23;
	shf.l.wrap.b32 	%r151, %r145, %r144, 23;
	mov.b64 	%rd423, {%r151, %r150};
	xor.b64  	%rd424, %rd422, %rd423;
	xor.b64  	%rd425, %rd384, %rd360;
	and.b64  	%rd426, %rd408, %rd425;
	xor.b64  	%rd427, %rd426, %rd360;
	add.s64 	%rd428, %rd18, %rd2252;
	add.s64 	%rd429, %rd428, %rd336;
	add.s64 	%rd430, %rd429, %rd427;
	add.s64 	%rd431, %rd430, %rd424;
	add.s64 	%rd432, %rd431, %rd347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r152,%dummy}, %rd419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r153}, %rd419;
	}
	shf.r.wrap.b32 	%r154, %r153, %r152, 28;
	shf.r.wrap.b32 	%r155, %r152, %r153, 28;
	mov.b64 	%rd433, {%r155, %r154};
	shf.l.wrap.b32 	%r156, %r152, %r153, 30;
	shf.l.wrap.b32 	%r157, %r153, %r152, 30;
	mov.b64 	%rd434, {%r157, %r156};
	xor.b64  	%rd435, %rd433, %rd434;
	shf.l.wrap.b32 	%r158, %r152, %r153, 25;
	shf.l.wrap.b32 	%r159, %r153, %r152, 25;
	mov.b64 	%rd436, {%r159, %r158};
	xor.b64  	%rd437, %rd435, %rd436;
	and.b64  	%rd438, %rd419, %rd395;
	xor.b64  	%rd439, %rd419, %rd395;
	and.b64  	%rd440, %rd439, %rd371;
	or.b64  	%rd441, %rd440, %rd438;
	add.s64 	%rd442, %rd437, %rd441;
	add.s64 	%rd443, %rd442, %rd431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r160,%dummy}, %rd432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r161}, %rd432;
	}
	shf.r.wrap.b32 	%r162, %r161, %r160, 14;
	shf.r.wrap.b32 	%r163, %r160, %r161, 14;
	mov.b64 	%rd444, {%r163, %r162};
	shf.r.wrap.b32 	%r164, %r161, %r160, 18;
	shf.r.wrap.b32 	%r165, %r160, %r161, 18;
	mov.b64 	%rd445, {%r165, %r164};
	xor.b64  	%rd446, %rd444, %rd445;
	shf.l.wrap.b32 	%r166, %r160, %r161, 23;
	shf.l.wrap.b32 	%r167, %r161, %r160, 23;
	mov.b64 	%rd447, {%r167, %r166};
	xor.b64  	%rd448, %rd446, %rd447;
	xor.b64  	%rd449, %rd408, %rd384;
	and.b64  	%rd450, %rd432, %rd449;
	xor.b64  	%rd451, %rd450, %rd384;
	add.s64 	%rd452, %rd19, %rd360;
	add.s64 	%rd453, %rd452, %rd451;
	add.s64 	%rd454, %rd453, %rd448;
	add.s64 	%rd455, %rd454, %rd371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r168,%dummy}, %rd443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r169}, %rd443;
	}
	shf.r.wrap.b32 	%r170, %r169, %r168, 28;
	shf.r.wrap.b32 	%r171, %r168, %r169, 28;
	mov.b64 	%rd456, {%r171, %r170};
	shf.l.wrap.b32 	%r172, %r168, %r169, 30;
	shf.l.wrap.b32 	%r173, %r169, %r168, 30;
	mov.b64 	%rd457, {%r173, %r172};
	xor.b64  	%rd458, %rd456, %rd457;
	shf.l.wrap.b32 	%r174, %r168, %r169, 25;
	shf.l.wrap.b32 	%r175, %r169, %r168, 25;
	mov.b64 	%rd459, {%r175, %r174};
	xor.b64  	%rd460, %rd458, %rd459;
	and.b64  	%rd461, %rd443, %rd419;
	xor.b64  	%rd462, %rd443, %rd419;
	and.b64  	%rd463, %rd462, %rd395;
	or.b64  	%rd464, %rd463, %rd461;
	add.s64 	%rd465, %rd460, %rd464;
	add.s64 	%rd466, %rd465, %rd454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r176,%dummy}, %rd455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r177}, %rd455;
	}
	shf.r.wrap.b32 	%r178, %r177, %r176, 14;
	shf.r.wrap.b32 	%r179, %r176, %r177, 14;
	mov.b64 	%rd467, {%r179, %r178};
	shf.r.wrap.b32 	%r180, %r177, %r176, 18;
	shf.r.wrap.b32 	%r181, %r176, %r177, 18;
	mov.b64 	%rd468, {%r181, %r180};
	xor.b64  	%rd469, %rd467, %rd468;
	shf.l.wrap.b32 	%r182, %r176, %r177, 23;
	shf.l.wrap.b32 	%r183, %r177, %r176, 23;
	mov.b64 	%rd470, {%r183, %r182};
	xor.b64  	%rd471, %rd469, %rd470;
	xor.b64  	%rd472, %rd432, %rd408;
	and.b64  	%rd473, %rd455, %rd472;
	xor.b64  	%rd474, %rd473, %rd408;
	add.s64 	%rd475, %rd384, %rd20;
	add.s64 	%rd476, %rd475, %rd474;
	add.s64 	%rd477, %rd476, %rd471;
	add.s64 	%rd478, %rd477, %rd395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r184,%dummy}, %rd466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r185}, %rd466;
	}
	shf.r.wrap.b32 	%r186, %r185, %r184, 28;
	shf.r.wrap.b32 	%r187, %r184, %r185, 28;
	mov.b64 	%rd479, {%r187, %r186};
	shf.l.wrap.b32 	%r188, %r184, %r185, 30;
	shf.l.wrap.b32 	%r189, %r185, %r184, 30;
	mov.b64 	%rd480, {%r189, %r188};
	xor.b64  	%rd481, %rd479, %rd480;
	shf.l.wrap.b32 	%r190, %r184, %r185, 25;
	shf.l.wrap.b32 	%r191, %r185, %r184, 25;
	mov.b64 	%rd482, {%r191, %r190};
	xor.b64  	%rd483, %rd481, %rd482;
	and.b64  	%rd484, %rd466, %rd443;
	xor.b64  	%rd485, %rd466, %rd443;
	and.b64  	%rd486, %rd485, %rd419;
	or.b64  	%rd487, %rd486, %rd484;
	add.s64 	%rd488, %rd483, %rd487;
	add.s64 	%rd489, %rd488, %rd477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r192,%dummy}, %rd478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r193}, %rd478;
	}
	shf.r.wrap.b32 	%r194, %r193, %r192, 14;
	shf.r.wrap.b32 	%r195, %r192, %r193, 14;
	mov.b64 	%rd490, {%r195, %r194};
	shf.r.wrap.b32 	%r196, %r193, %r192, 18;
	shf.r.wrap.b32 	%r197, %r192, %r193, 18;
	mov.b64 	%rd491, {%r197, %r196};
	xor.b64  	%rd492, %rd490, %rd491;
	shf.l.wrap.b32 	%r198, %r192, %r193, 23;
	shf.l.wrap.b32 	%r199, %r193, %r192, 23;
	mov.b64 	%rd493, {%r199, %r198};
	xor.b64  	%rd494, %rd492, %rd493;
	xor.b64  	%rd495, %rd455, %rd432;
	and.b64  	%rd496, %rd478, %rd495;
	xor.b64  	%rd497, %rd496, %rd432;
	add.s64 	%rd498, %rd408, %rd21;
	add.s64 	%rd499, %rd498, %rd497;
	add.s64 	%rd500, %rd499, %rd494;
	add.s64 	%rd501, %rd500, %rd419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r200,%dummy}, %rd489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r201}, %rd489;
	}
	shf.r.wrap.b32 	%r202, %r201, %r200, 28;
	shf.r.wrap.b32 	%r203, %r200, %r201, 28;
	mov.b64 	%rd502, {%r203, %r202};
	shf.l.wrap.b32 	%r204, %r200, %r201, 30;
	shf.l.wrap.b32 	%r205, %r201, %r200, 30;
	mov.b64 	%rd503, {%r205, %r204};
	xor.b64  	%rd504, %rd502, %rd503;
	shf.l.wrap.b32 	%r206, %r200, %r201, 25;
	shf.l.wrap.b32 	%r207, %r201, %r200, 25;
	mov.b64 	%rd505, {%r207, %r206};
	xor.b64  	%rd506, %rd504, %rd505;
	and.b64  	%rd507, %rd489, %rd466;
	xor.b64  	%rd508, %rd489, %rd466;
	and.b64  	%rd509, %rd508, %rd443;
	or.b64  	%rd510, %rd509, %rd507;
	add.s64 	%rd511, %rd506, %rd510;
	add.s64 	%rd512, %rd511, %rd500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r208,%dummy}, %rd501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r209}, %rd501;
	}
	shf.r.wrap.b32 	%r210, %r209, %r208, 14;
	shf.r.wrap.b32 	%r211, %r208, %r209, 14;
	mov.b64 	%rd513, {%r211, %r210};
	shf.r.wrap.b32 	%r212, %r209, %r208, 18;
	shf.r.wrap.b32 	%r213, %r208, %r209, 18;
	mov.b64 	%rd514, {%r213, %r212};
	xor.b64  	%rd515, %rd513, %rd514;
	shf.l.wrap.b32 	%r214, %r208, %r209, 23;
	shf.l.wrap.b32 	%r215, %r209, %r208, 23;
	mov.b64 	%rd516, {%r215, %r214};
	xor.b64  	%rd517, %rd515, %rd516;
	xor.b64  	%rd518, %rd478, %rd455;
	and.b64  	%rd519, %rd501, %rd518;
	xor.b64  	%rd520, %rd519, %rd455;
	add.s64 	%rd521, %rd432, %rd22;
	add.s64 	%rd522, %rd521, %rd520;
	add.s64 	%rd523, %rd522, %rd517;
	add.s64 	%rd524, %rd523, %rd443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r216,%dummy}, %rd512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r217}, %rd512;
	}
	shf.r.wrap.b32 	%r218, %r217, %r216, 28;
	shf.r.wrap.b32 	%r219, %r216, %r217, 28;
	mov.b64 	%rd525, {%r219, %r218};
	shf.l.wrap.b32 	%r220, %r216, %r217, 30;
	shf.l.wrap.b32 	%r221, %r217, %r216, 30;
	mov.b64 	%rd526, {%r221, %r220};
	xor.b64  	%rd527, %rd525, %rd526;
	shf.l.wrap.b32 	%r222, %r216, %r217, 25;
	shf.l.wrap.b32 	%r223, %r217, %r216, 25;
	mov.b64 	%rd528, {%r223, %r222};
	xor.b64  	%rd529, %rd527, %rd528;
	and.b64  	%rd530, %rd512, %rd489;
	xor.b64  	%rd531, %rd512, %rd489;
	and.b64  	%rd532, %rd531, %rd466;
	or.b64  	%rd533, %rd532, %rd530;
	add.s64 	%rd534, %rd529, %rd533;
	add.s64 	%rd535, %rd534, %rd523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r224,%dummy}, %rd524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r225}, %rd524;
	}
	shf.r.wrap.b32 	%r226, %r225, %r224, 14;
	shf.r.wrap.b32 	%r227, %r224, %r225, 14;
	mov.b64 	%rd536, {%r227, %r226};
	shf.r.wrap.b32 	%r228, %r225, %r224, 18;
	shf.r.wrap.b32 	%r229, %r224, %r225, 18;
	mov.b64 	%rd537, {%r229, %r228};
	xor.b64  	%rd538, %rd536, %rd537;
	shf.l.wrap.b32 	%r230, %r224, %r225, 23;
	shf.l.wrap.b32 	%r231, %r225, %r224, 23;
	mov.b64 	%rd539, {%r231, %r230};
	xor.b64  	%rd540, %rd538, %rd539;
	xor.b64  	%rd541, %rd501, %rd478;
	and.b64  	%rd542, %rd524, %rd541;
	xor.b64  	%rd543, %rd542, %rd478;
	add.s64 	%rd544, %rd455, %rd23;
	add.s64 	%rd545, %rd544, %rd543;
	add.s64 	%rd546, %rd545, %rd540;
	add.s64 	%rd2244, %rd546, %rd466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r232,%dummy}, %rd535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r233}, %rd535;
	}
	shf.r.wrap.b32 	%r234, %r233, %r232, 28;
	shf.r.wrap.b32 	%r235, %r232, %r233, 28;
	mov.b64 	%rd547, {%r235, %r234};
	shf.l.wrap.b32 	%r236, %r232, %r233, 30;
	shf.l.wrap.b32 	%r237, %r233, %r232, 30;
	mov.b64 	%rd548, {%r237, %r236};
	xor.b64  	%rd549, %rd547, %rd548;
	shf.l.wrap.b32 	%r238, %r232, %r233, 25;
	shf.l.wrap.b32 	%r239, %r233, %r232, 25;
	mov.b64 	%rd550, {%r239, %r238};
	xor.b64  	%rd551, %rd549, %rd550;
	and.b64  	%rd552, %rd535, %rd512;
	xor.b64  	%rd553, %rd535, %rd512;
	and.b64  	%rd554, %rd553, %rd489;
	or.b64  	%rd555, %rd554, %rd552;
	add.s64 	%rd556, %rd551, %rd555;
	add.s64 	%rd2240, %rd556, %rd546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r240,%dummy}, %rd2244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r241}, %rd2244;
	}
	shf.r.wrap.b32 	%r242, %r241, %r240, 14;
	shf.r.wrap.b32 	%r243, %r240, %r241, 14;
	mov.b64 	%rd557, {%r243, %r242};
	shf.r.wrap.b32 	%r244, %r241, %r240, 18;
	shf.r.wrap.b32 	%r245, %r240, %r241, 18;
	mov.b64 	%rd558, {%r245, %r244};
	xor.b64  	%rd559, %rd557, %rd558;
	shf.l.wrap.b32 	%r246, %r240, %r241, 23;
	shf.l.wrap.b32 	%r247, %r241, %r240, 23;
	mov.b64 	%rd560, {%r247, %r246};
	xor.b64  	%rd561, %rd559, %rd560;
	xor.b64  	%rd562, %rd524, %rd501;
	and.b64  	%rd563, %rd2244, %rd562;
	xor.b64  	%rd564, %rd563, %rd501;
	add.s64 	%rd565, %rd478, %rd24;
	add.s64 	%rd566, %rd565, %rd564;
	add.s64 	%rd567, %rd566, %rd561;
	add.s64 	%rd2243, %rd567, %rd489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r248,%dummy}, %rd2240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r249}, %rd2240;
	}
	shf.r.wrap.b32 	%r250, %r249, %r248, 28;
	shf.r.wrap.b32 	%r251, %r248, %r249, 28;
	mov.b64 	%rd568, {%r251, %r250};
	shf.l.wrap.b32 	%r252, %r248, %r249, 30;
	shf.l.wrap.b32 	%r253, %r249, %r248, 30;
	mov.b64 	%rd569, {%r253, %r252};
	xor.b64  	%rd570, %rd568, %rd569;
	shf.l.wrap.b32 	%r254, %r248, %r249, 25;
	shf.l.wrap.b32 	%r255, %r249, %r248, 25;
	mov.b64 	%rd571, {%r255, %r254};
	xor.b64  	%rd572, %rd570, %rd571;
	and.b64  	%rd573, %rd2240, %rd535;
	xor.b64  	%rd574, %rd2240, %rd535;
	and.b64  	%rd575, %rd574, %rd512;
	or.b64  	%rd576, %rd575, %rd573;
	add.s64 	%rd577, %rd572, %rd576;
	add.s64 	%rd2239, %rd577, %rd567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r256,%dummy}, %rd2243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r257}, %rd2243;
	}
	shf.r.wrap.b32 	%r258, %r257, %r256, 14;
	shf.r.wrap.b32 	%r259, %r256, %r257, 14;
	mov.b64 	%rd578, {%r259, %r258};
	shf.r.wrap.b32 	%r260, %r257, %r256, 18;
	shf.r.wrap.b32 	%r261, %r256, %r257, 18;
	mov.b64 	%rd579, {%r261, %r260};
	xor.b64  	%rd580, %rd578, %rd579;
	shf.l.wrap.b32 	%r262, %r256, %r257, 23;
	shf.l.wrap.b32 	%r263, %r257, %r256, 23;
	mov.b64 	%rd581, {%r263, %r262};
	xor.b64  	%rd582, %rd580, %rd581;
	xor.b64  	%rd583, %rd2244, %rd524;
	and.b64  	%rd584, %rd2243, %rd583;
	xor.b64  	%rd585, %rd584, %rd524;
	add.s64 	%rd586, %rd501, %rd25;
	add.s64 	%rd587, %rd586, %rd585;
	add.s64 	%rd588, %rd587, %rd582;
	add.s64 	%rd2242, %rd588, %rd512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r264,%dummy}, %rd2239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r265}, %rd2239;
	}
	shf.r.wrap.b32 	%r266, %r265, %r264, 28;
	shf.r.wrap.b32 	%r267, %r264, %r265, 28;
	mov.b64 	%rd589, {%r267, %r266};
	shf.l.wrap.b32 	%r268, %r264, %r265, 30;
	shf.l.wrap.b32 	%r269, %r265, %r264, 30;
	mov.b64 	%rd590, {%r269, %r268};
	xor.b64  	%rd591, %rd589, %rd590;
	shf.l.wrap.b32 	%r270, %r264, %r265, 25;
	shf.l.wrap.b32 	%r271, %r265, %r264, 25;
	mov.b64 	%rd592, {%r271, %r270};
	xor.b64  	%rd593, %rd591, %rd592;
	and.b64  	%rd594, %rd2239, %rd2240;
	xor.b64  	%rd595, %rd2239, %rd2240;
	and.b64  	%rd596, %rd595, %rd535;
	or.b64  	%rd597, %rd596, %rd594;
	add.s64 	%rd598, %rd593, %rd597;
	add.s64 	%rd2238, %rd598, %rd588;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r272,%dummy}, %rd2242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r273}, %rd2242;
	}
	shf.r.wrap.b32 	%r274, %r273, %r272, 14;
	shf.r.wrap.b32 	%r275, %r272, %r273, 14;
	mov.b64 	%rd599, {%r275, %r274};
	shf.r.wrap.b32 	%r276, %r273, %r272, 18;
	shf.r.wrap.b32 	%r277, %r272, %r273, 18;
	mov.b64 	%rd600, {%r277, %r276};
	xor.b64  	%rd601, %rd599, %rd600;
	shf.l.wrap.b32 	%r278, %r272, %r273, 23;
	shf.l.wrap.b32 	%r279, %r273, %r272, 23;
	mov.b64 	%rd602, {%r279, %r278};
	xor.b64  	%rd603, %rd601, %rd602;
	xor.b64  	%rd604, %rd2243, %rd2244;
	and.b64  	%rd605, %rd2242, %rd604;
	xor.b64  	%rd606, %rd605, %rd2244;
	add.s64 	%rd607, %rd26, %rd524;
	add.s64 	%rd608, %rd607, %rd606;
	add.s64 	%rd609, %rd608, %rd603;
	add.s64 	%rd2241, %rd609, %rd535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r280,%dummy}, %rd2238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r281}, %rd2238;
	}
	shf.r.wrap.b32 	%r282, %r281, %r280, 28;
	shf.r.wrap.b32 	%r283, %r280, %r281, 28;
	mov.b64 	%rd610, {%r283, %r282};
	shf.l.wrap.b32 	%r284, %r280, %r281, 30;
	shf.l.wrap.b32 	%r285, %r281, %r280, 30;
	mov.b64 	%rd611, {%r285, %r284};
	xor.b64  	%rd612, %rd610, %rd611;
	shf.l.wrap.b32 	%r286, %r280, %r281, 25;
	shf.l.wrap.b32 	%r287, %r281, %r280, 25;
	mov.b64 	%rd613, {%r287, %r286};
	xor.b64  	%rd614, %rd612, %rd613;
	and.b64  	%rd615, %rd2238, %rd2239;
	xor.b64  	%rd616, %rd2238, %rd2239;
	and.b64  	%rd617, %rd616, %rd2240;
	or.b64  	%rd618, %rd617, %rd615;
	add.s64 	%rd619, %rd614, %rd618;
	add.s64 	%rd2237, %rd619, %rd609;
	mov.u64 	%rd2236, -9223372036854775808;
	mov.u64 	%rd2230, 0;
	mov.u64 	%rd2229, 1536;
	mov.u32 	%r1445, 16;
	mov.u64 	%rd2231, %rd2230;
	mov.u64 	%rd2232, %rd2230;
	mov.u64 	%rd2233, %rd2230;
	mov.u64 	%rd2234, %rd2230;
	mov.u64 	%rd2235, %rd2230;

BB4_4:
	shr.u64 	%rd620, %rd2230, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r288}, %rd2230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r289,%dummy}, %rd2230;
	}
	shf.l.wrap.b32 	%r290, %r289, %r288, 3;
	shf.l.wrap.b32 	%r291, %r288, %r289, 3;
	mov.b64 	%rd621, {%r291, %r290};
	xor.b64  	%rd622, %rd621, %rd620;
	shf.r.wrap.b32 	%r292, %r288, %r289, 19;
	shf.r.wrap.b32 	%r293, %r289, %r288, 19;
	mov.b64 	%rd623, {%r293, %r292};
	xor.b64  	%rd624, %rd622, %rd623;
	shr.u64 	%rd625, %rd2246, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r294,%dummy}, %rd2246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r295}, %rd2246;
	}
	shf.r.wrap.b32 	%r296, %r295, %r294, 8;
	shf.r.wrap.b32 	%r297, %r294, %r295, 8;
	mov.b64 	%rd626, {%r297, %r296};
	xor.b64  	%rd627, %rd626, %rd625;
	shf.r.wrap.b32 	%r298, %r295, %r294, 1;
	shf.r.wrap.b32 	%r299, %r294, %r295, 1;
	mov.b64 	%rd628, {%r299, %r298};
	xor.b64  	%rd629, %rd627, %rd628;
	add.s64 	%rd630, %rd629, %rd2245;
	add.s64 	%rd631, %rd630, %rd2235;
	add.s64 	%rd2245, %rd631, %rd624;
	shr.u64 	%rd632, %rd2229, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r300}, %rd2229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r301,%dummy}, %rd2229;
	}
	shf.l.wrap.b32 	%r302, %r301, %r300, 3;
	shf.l.wrap.b32 	%r303, %r300, %r301, 3;
	mov.b64 	%rd633, {%r303, %r302};
	xor.b64  	%rd634, %rd633, %rd632;
	shf.r.wrap.b32 	%r304, %r300, %r301, 19;
	shf.r.wrap.b32 	%r305, %r301, %r300, 19;
	mov.b64 	%rd635, {%r305, %r304};
	xor.b64  	%rd636, %rd634, %rd635;
	shr.u64 	%rd637, %rd2247, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r306,%dummy}, %rd2247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r307}, %rd2247;
	}
	shf.r.wrap.b32 	%r308, %r307, %r306, 8;
	shf.r.wrap.b32 	%r309, %r306, %r307, 8;
	mov.b64 	%rd638, {%r309, %r308};
	xor.b64  	%rd639, %rd638, %rd637;
	shf.r.wrap.b32 	%r310, %r307, %r306, 1;
	shf.r.wrap.b32 	%r311, %r306, %r307, 1;
	mov.b64 	%rd640, {%r311, %r310};
	xor.b64  	%rd641, %rd639, %rd640;
	add.s64 	%rd642, %rd641, %rd2246;
	add.s64 	%rd643, %rd642, %rd2234;
	add.s64 	%rd2246, %rd643, %rd636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r312,%dummy}, %rd2245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r313}, %rd2245;
	}
	shf.r.wrap.b32 	%r314, %r313, %r312, 19;
	shf.r.wrap.b32 	%r315, %r312, %r313, 19;
	mov.b64 	%rd644, {%r315, %r314};
	shf.l.wrap.b32 	%r316, %r312, %r313, 3;
	shf.l.wrap.b32 	%r317, %r313, %r312, 3;
	mov.b64 	%rd645, {%r317, %r316};
	shr.u64 	%rd646, %rd2245, 6;
	xor.b64  	%rd647, %rd645, %rd646;
	xor.b64  	%rd648, %rd647, %rd644;
	shr.u64 	%rd649, %rd2248, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r318,%dummy}, %rd2248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r319}, %rd2248;
	}
	shf.r.wrap.b32 	%r320, %r319, %r318, 8;
	shf.r.wrap.b32 	%r321, %r318, %r319, 8;
	mov.b64 	%rd650, {%r321, %r320};
	xor.b64  	%rd651, %rd650, %rd649;
	shf.r.wrap.b32 	%r322, %r319, %r318, 1;
	shf.r.wrap.b32 	%r323, %r318, %r319, 1;
	mov.b64 	%rd652, {%r323, %r322};
	xor.b64  	%rd653, %rd651, %rd652;
	add.s64 	%rd654, %rd653, %rd2247;
	add.s64 	%rd655, %rd654, %rd2233;
	add.s64 	%rd2247, %rd655, %rd648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r324,%dummy}, %rd2246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r325}, %rd2246;
	}
	shf.r.wrap.b32 	%r326, %r325, %r324, 19;
	shf.r.wrap.b32 	%r327, %r324, %r325, 19;
	mov.b64 	%rd656, {%r327, %r326};
	shf.l.wrap.b32 	%r328, %r324, %r325, 3;
	shf.l.wrap.b32 	%r329, %r325, %r324, 3;
	mov.b64 	%rd657, {%r329, %r328};
	shr.u64 	%rd658, %rd2246, 6;
	xor.b64  	%rd659, %rd657, %rd658;
	xor.b64  	%rd660, %rd659, %rd656;
	shr.u64 	%rd661, %rd2249, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r330,%dummy}, %rd2249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r331}, %rd2249;
	}
	shf.r.wrap.b32 	%r332, %r331, %r330, 8;
	shf.r.wrap.b32 	%r333, %r330, %r331, 8;
	mov.b64 	%rd662, {%r333, %r332};
	xor.b64  	%rd663, %rd662, %rd661;
	shf.r.wrap.b32 	%r334, %r331, %r330, 1;
	shf.r.wrap.b32 	%r335, %r330, %r331, 1;
	mov.b64 	%rd664, {%r335, %r334};
	xor.b64  	%rd665, %rd663, %rd664;
	add.s64 	%rd666, %rd665, %rd2248;
	add.s64 	%rd667, %rd666, %rd2232;
	add.s64 	%rd2248, %rd667, %rd660;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r336,%dummy}, %rd2247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r337}, %rd2247;
	}
	shf.r.wrap.b32 	%r338, %r337, %r336, 19;
	shf.r.wrap.b32 	%r339, %r336, %r337, 19;
	mov.b64 	%rd668, {%r339, %r338};
	shf.l.wrap.b32 	%r340, %r336, %r337, 3;
	shf.l.wrap.b32 	%r341, %r337, %r336, 3;
	mov.b64 	%rd669, {%r341, %r340};
	shr.u64 	%rd670, %rd2247, 6;
	xor.b64  	%rd671, %rd669, %rd670;
	xor.b64  	%rd672, %rd671, %rd668;
	shr.u64 	%rd673, %rd2250, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r342,%dummy}, %rd2250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r343}, %rd2250;
	}
	shf.r.wrap.b32 	%r344, %r343, %r342, 8;
	shf.r.wrap.b32 	%r345, %r342, %r343, 8;
	mov.b64 	%rd674, {%r345, %r344};
	xor.b64  	%rd675, %rd674, %rd673;
	shf.r.wrap.b32 	%r346, %r343, %r342, 1;
	shf.r.wrap.b32 	%r347, %r342, %r343, 1;
	mov.b64 	%rd676, {%r347, %r346};
	xor.b64  	%rd677, %rd675, %rd676;
	add.s64 	%rd678, %rd677, %rd2249;
	add.s64 	%rd679, %rd678, %rd2231;
	add.s64 	%rd2249, %rd679, %rd672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r348,%dummy}, %rd2248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r349}, %rd2248;
	}
	shf.r.wrap.b32 	%r350, %r349, %r348, 19;
	shf.r.wrap.b32 	%r351, %r348, %r349, 19;
	mov.b64 	%rd680, {%r351, %r350};
	shf.l.wrap.b32 	%r352, %r348, %r349, 3;
	shf.l.wrap.b32 	%r353, %r349, %r348, 3;
	mov.b64 	%rd681, {%r353, %r352};
	shr.u64 	%rd682, %rd2248, 6;
	xor.b64  	%rd683, %rd681, %rd682;
	xor.b64  	%rd684, %rd683, %rd680;
	shr.u64 	%rd685, %rd2251, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r354,%dummy}, %rd2251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r355}, %rd2251;
	}
	shf.r.wrap.b32 	%r356, %r355, %r354, 8;
	shf.r.wrap.b32 	%r357, %r354, %r355, 8;
	mov.b64 	%rd686, {%r357, %r356};
	xor.b64  	%rd687, %rd686, %rd685;
	shf.r.wrap.b32 	%r358, %r355, %r354, 1;
	shf.r.wrap.b32 	%r359, %r354, %r355, 1;
	mov.b64 	%rd688, {%r359, %r358};
	xor.b64  	%rd689, %rd687, %rd688;
	add.s64 	%rd690, %rd689, %rd2250;
	add.s64 	%rd691, %rd690, %rd2230;
	add.s64 	%rd2250, %rd691, %rd684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r360,%dummy}, %rd2249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r361}, %rd2249;
	}
	shf.r.wrap.b32 	%r362, %r361, %r360, 19;
	shf.r.wrap.b32 	%r363, %r360, %r361, 19;
	mov.b64 	%rd692, {%r363, %r362};
	shf.l.wrap.b32 	%r364, %r360, %r361, 3;
	shf.l.wrap.b32 	%r365, %r361, %r360, 3;
	mov.b64 	%rd693, {%r365, %r364};
	shr.u64 	%rd694, %rd2249, 6;
	xor.b64  	%rd695, %rd693, %rd694;
	xor.b64  	%rd696, %rd695, %rd692;
	shr.u64 	%rd697, %rd2252, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r366,%dummy}, %rd2252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r367}, %rd2252;
	}
	shf.r.wrap.b32 	%r368, %r367, %r366, 8;
	shf.r.wrap.b32 	%r369, %r366, %r367, 8;
	mov.b64 	%rd698, {%r369, %r368};
	xor.b64  	%rd699, %rd698, %rd697;
	shf.r.wrap.b32 	%r370, %r367, %r366, 1;
	shf.r.wrap.b32 	%r371, %r366, %r367, 1;
	mov.b64 	%rd700, {%r371, %r370};
	xor.b64  	%rd701, %rd699, %rd700;
	add.s64 	%rd702, %rd701, %rd2251;
	add.s64 	%rd703, %rd702, %rd2229;
	add.s64 	%rd2251, %rd703, %rd696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r372,%dummy}, %rd2250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r373}, %rd2250;
	}
	shf.r.wrap.b32 	%r374, %r373, %r372, 19;
	shf.r.wrap.b32 	%r375, %r372, %r373, 19;
	mov.b64 	%rd704, {%r375, %r374};
	shf.l.wrap.b32 	%r376, %r372, %r373, 3;
	shf.l.wrap.b32 	%r377, %r373, %r372, 3;
	mov.b64 	%rd705, {%r377, %r376};
	shr.u64 	%rd706, %rd2250, 6;
	xor.b64  	%rd707, %rd705, %rd706;
	xor.b64  	%rd708, %rd707, %rd704;
	shr.u64 	%rd709, %rd2236, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r378,%dummy}, %rd2236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r379}, %rd2236;
	}
	shf.r.wrap.b32 	%r380, %r379, %r378, 8;
	shf.r.wrap.b32 	%r381, %r378, %r379, 8;
	mov.b64 	%rd710, {%r381, %r380};
	xor.b64  	%rd711, %rd710, %rd709;
	shf.r.wrap.b32 	%r382, %r379, %r378, 1;
	shf.r.wrap.b32 	%r383, %r378, %r379, 1;
	mov.b64 	%rd712, {%r383, %r382};
	xor.b64  	%rd713, %rd711, %rd712;
	add.s64 	%rd714, %rd713, %rd2252;
	add.s64 	%rd715, %rd714, %rd2245;
	add.s64 	%rd2252, %rd715, %rd708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r384,%dummy}, %rd2251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r385}, %rd2251;
	}
	shf.r.wrap.b32 	%r386, %r385, %r384, 19;
	shf.r.wrap.b32 	%r387, %r384, %r385, 19;
	mov.b64 	%rd716, {%r387, %r386};
	shf.l.wrap.b32 	%r388, %r384, %r385, 3;
	shf.l.wrap.b32 	%r389, %r385, %r384, 3;
	mov.b64 	%rd717, {%r389, %r388};
	shr.u64 	%rd718, %rd2251, 6;
	xor.b64  	%rd719, %rd717, %rd718;
	xor.b64  	%rd720, %rd719, %rd716;
	shr.u64 	%rd721, %rd2235, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r390,%dummy}, %rd2235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r391}, %rd2235;
	}
	shf.r.wrap.b32 	%r392, %r391, %r390, 8;
	shf.r.wrap.b32 	%r393, %r390, %r391, 8;
	mov.b64 	%rd722, {%r393, %r392};
	xor.b64  	%rd723, %rd722, %rd721;
	shf.r.wrap.b32 	%r394, %r391, %r390, 1;
	shf.r.wrap.b32 	%r395, %r390, %r391, 1;
	mov.b64 	%rd724, {%r395, %r394};
	xor.b64  	%rd725, %rd723, %rd724;
	add.s64 	%rd726, %rd725, %rd2236;
	add.s64 	%rd727, %rd726, %rd2246;
	add.s64 	%rd2236, %rd727, %rd720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r396,%dummy}, %rd2252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r397}, %rd2252;
	}
	shf.r.wrap.b32 	%r398, %r397, %r396, 19;
	shf.r.wrap.b32 	%r399, %r396, %r397, 19;
	mov.b64 	%rd728, {%r399, %r398};
	shf.l.wrap.b32 	%r400, %r396, %r397, 3;
	shf.l.wrap.b32 	%r401, %r397, %r396, 3;
	mov.b64 	%rd729, {%r401, %r400};
	shr.u64 	%rd730, %rd2252, 6;
	xor.b64  	%rd731, %rd729, %rd730;
	xor.b64  	%rd732, %rd731, %rd728;
	shr.u64 	%rd733, %rd2234, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r402,%dummy}, %rd2234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r403}, %rd2234;
	}
	shf.r.wrap.b32 	%r404, %r403, %r402, 8;
	shf.r.wrap.b32 	%r405, %r402, %r403, 8;
	mov.b64 	%rd734, {%r405, %r404};
	xor.b64  	%rd735, %rd734, %rd733;
	shf.r.wrap.b32 	%r406, %r403, %r402, 1;
	shf.r.wrap.b32 	%r407, %r402, %r403, 1;
	mov.b64 	%rd736, {%r407, %r406};
	xor.b64  	%rd737, %rd735, %rd736;
	add.s64 	%rd738, %rd737, %rd2235;
	add.s64 	%rd739, %rd738, %rd2247;
	add.s64 	%rd2235, %rd739, %rd732;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r408,%dummy}, %rd2236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r409}, %rd2236;
	}
	shf.r.wrap.b32 	%r410, %r409, %r408, 19;
	shf.r.wrap.b32 	%r411, %r408, %r409, 19;
	mov.b64 	%rd740, {%r411, %r410};
	shf.l.wrap.b32 	%r412, %r408, %r409, 3;
	shf.l.wrap.b32 	%r413, %r409, %r408, 3;
	mov.b64 	%rd741, {%r413, %r412};
	shr.u64 	%rd742, %rd2236, 6;
	xor.b64  	%rd743, %rd741, %rd742;
	xor.b64  	%rd744, %rd743, %rd740;
	shr.u64 	%rd745, %rd2233, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r414,%dummy}, %rd2233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r415}, %rd2233;
	}
	shf.r.wrap.b32 	%r416, %r415, %r414, 8;
	shf.r.wrap.b32 	%r417, %r414, %r415, 8;
	mov.b64 	%rd746, {%r417, %r416};
	xor.b64  	%rd747, %rd746, %rd745;
	shf.r.wrap.b32 	%r418, %r415, %r414, 1;
	shf.r.wrap.b32 	%r419, %r414, %r415, 1;
	mov.b64 	%rd748, {%r419, %r418};
	xor.b64  	%rd749, %rd747, %rd748;
	add.s64 	%rd750, %rd749, %rd2234;
	add.s64 	%rd751, %rd750, %rd2248;
	add.s64 	%rd2234, %rd751, %rd744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r420,%dummy}, %rd2235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r421}, %rd2235;
	}
	shf.r.wrap.b32 	%r422, %r421, %r420, 19;
	shf.r.wrap.b32 	%r423, %r420, %r421, 19;
	mov.b64 	%rd752, {%r423, %r422};
	shf.l.wrap.b32 	%r424, %r420, %r421, 3;
	shf.l.wrap.b32 	%r425, %r421, %r420, 3;
	mov.b64 	%rd753, {%r425, %r424};
	shr.u64 	%rd754, %rd2235, 6;
	xor.b64  	%rd755, %rd753, %rd754;
	xor.b64  	%rd756, %rd755, %rd752;
	shr.u64 	%rd757, %rd2232, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r426,%dummy}, %rd2232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r427}, %rd2232;
	}
	shf.r.wrap.b32 	%r428, %r427, %r426, 8;
	shf.r.wrap.b32 	%r429, %r426, %r427, 8;
	mov.b64 	%rd758, {%r429, %r428};
	xor.b64  	%rd759, %rd758, %rd757;
	shf.r.wrap.b32 	%r430, %r427, %r426, 1;
	shf.r.wrap.b32 	%r431, %r426, %r427, 1;
	mov.b64 	%rd760, {%r431, %r430};
	xor.b64  	%rd761, %rd759, %rd760;
	add.s64 	%rd762, %rd761, %rd2233;
	add.s64 	%rd763, %rd762, %rd2249;
	add.s64 	%rd2233, %rd763, %rd756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r432,%dummy}, %rd2234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r433}, %rd2234;
	}
	shf.r.wrap.b32 	%r434, %r433, %r432, 19;
	shf.r.wrap.b32 	%r435, %r432, %r433, 19;
	mov.b64 	%rd764, {%r435, %r434};
	shf.l.wrap.b32 	%r436, %r432, %r433, 3;
	shf.l.wrap.b32 	%r437, %r433, %r432, 3;
	mov.b64 	%rd765, {%r437, %r436};
	shr.u64 	%rd766, %rd2234, 6;
	xor.b64  	%rd767, %rd765, %rd766;
	xor.b64  	%rd768, %rd767, %rd764;
	shr.u64 	%rd769, %rd2231, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r438,%dummy}, %rd2231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r439}, %rd2231;
	}
	shf.r.wrap.b32 	%r440, %r439, %r438, 8;
	shf.r.wrap.b32 	%r441, %r438, %r439, 8;
	mov.b64 	%rd770, {%r441, %r440};
	xor.b64  	%rd771, %rd770, %rd769;
	shf.r.wrap.b32 	%r442, %r439, %r438, 1;
	shf.r.wrap.b32 	%r443, %r438, %r439, 1;
	mov.b64 	%rd772, {%r443, %r442};
	xor.b64  	%rd773, %rd771, %rd772;
	add.s64 	%rd774, %rd773, %rd2232;
	add.s64 	%rd775, %rd774, %rd2250;
	add.s64 	%rd2232, %rd775, %rd768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r444,%dummy}, %rd2233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r445}, %rd2233;
	}
	shf.r.wrap.b32 	%r446, %r445, %r444, 19;
	shf.r.wrap.b32 	%r447, %r444, %r445, 19;
	mov.b64 	%rd776, {%r447, %r446};
	shf.l.wrap.b32 	%r448, %r444, %r445, 3;
	shf.l.wrap.b32 	%r449, %r445, %r444, 3;
	mov.b64 	%rd777, {%r449, %r448};
	shr.u64 	%rd778, %rd2233, 6;
	xor.b64  	%rd779, %rd777, %rd778;
	xor.b64  	%rd780, %rd779, %rd776;
	shr.u64 	%rd781, %rd2230, 7;
	shf.r.wrap.b32 	%r450, %r288, %r289, 8;
	shf.r.wrap.b32 	%r451, %r289, %r288, 8;
	mov.b64 	%rd782, {%r451, %r450};
	xor.b64  	%rd783, %rd782, %rd781;
	shf.r.wrap.b32 	%r452, %r288, %r289, 1;
	shf.r.wrap.b32 	%r453, %r289, %r288, 1;
	mov.b64 	%rd784, {%r453, %r452};
	xor.b64  	%rd785, %rd783, %rd784;
	add.s64 	%rd786, %rd785, %rd2231;
	add.s64 	%rd787, %rd786, %rd2251;
	add.s64 	%rd2231, %rd787, %rd780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r454,%dummy}, %rd2232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r455}, %rd2232;
	}
	shf.r.wrap.b32 	%r456, %r455, %r454, 19;
	shf.r.wrap.b32 	%r457, %r454, %r455, 19;
	mov.b64 	%rd788, {%r457, %r456};
	shf.l.wrap.b32 	%r458, %r454, %r455, 3;
	shf.l.wrap.b32 	%r459, %r455, %r454, 3;
	mov.b64 	%rd789, {%r459, %r458};
	shr.u64 	%rd790, %rd2232, 6;
	xor.b64  	%rd791, %rd789, %rd790;
	xor.b64  	%rd792, %rd791, %rd788;
	shr.u64 	%rd793, %rd2229, 7;
	shf.r.wrap.b32 	%r460, %r300, %r301, 8;
	shf.r.wrap.b32 	%r461, %r301, %r300, 8;
	mov.b64 	%rd794, {%r461, %r460};
	xor.b64  	%rd795, %rd794, %rd793;
	shf.r.wrap.b32 	%r462, %r300, %r301, 1;
	shf.r.wrap.b32 	%r463, %r301, %r300, 1;
	mov.b64 	%rd796, {%r463, %r462};
	xor.b64  	%rd797, %rd795, %rd796;
	add.s64 	%rd798, %rd797, %rd2230;
	add.s64 	%rd799, %rd798, %rd2252;
	add.s64 	%rd2230, %rd799, %rd792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r464,%dummy}, %rd2231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r465}, %rd2231;
	}
	shf.r.wrap.b32 	%r466, %r465, %r464, 19;
	shf.r.wrap.b32 	%r467, %r464, %r465, 19;
	mov.b64 	%rd800, {%r467, %r466};
	shf.l.wrap.b32 	%r468, %r464, %r465, 3;
	shf.l.wrap.b32 	%r469, %r465, %r464, 3;
	mov.b64 	%rd801, {%r469, %r468};
	shr.u64 	%rd802, %rd2231, 6;
	xor.b64  	%rd803, %rd801, %rd802;
	xor.b64  	%rd804, %rd803, %rd800;
	shf.r.wrap.b32 	%r470, %r313, %r312, 1;
	shf.r.wrap.b32 	%r471, %r312, %r313, 1;
	mov.b64 	%rd805, {%r471, %r470};
	shf.r.wrap.b32 	%r472, %r313, %r312, 8;
	shf.r.wrap.b32 	%r473, %r312, %r313, 8;
	mov.b64 	%rd806, {%r473, %r472};
	shr.u64 	%rd807, %rd2245, 7;
	xor.b64  	%rd808, %rd806, %rd807;
	xor.b64  	%rd809, %rd808, %rd805;
	add.s64 	%rd810, %rd809, %rd2229;
	add.s64 	%rd811, %rd810, %rd2236;
	add.s64 	%rd2229, %rd811, %rd804;
	mul.wide.s32 	%rd812, %r1445, 8;
	mov.u64 	%rd813, k_sha512;
	add.s64 	%rd814, %rd813, %rd812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r474,%dummy}, %rd2241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r475}, %rd2241;
	}
	shf.r.wrap.b32 	%r476, %r475, %r474, 18;
	shf.r.wrap.b32 	%r477, %r474, %r475, 18;
	mov.b64 	%rd815, {%r477, %r476};
	shf.r.wrap.b32 	%r478, %r475, %r474, 14;
	shf.r.wrap.b32 	%r479, %r474, %r475, 14;
	mov.b64 	%rd816, {%r479, %r478};
	xor.b64  	%rd817, %rd816, %rd815;
	shf.l.wrap.b32 	%r480, %r474, %r475, 23;
	shf.l.wrap.b32 	%r481, %r475, %r474, 23;
	mov.b64 	%rd818, {%r481, %r480};
	xor.b64  	%rd819, %rd817, %rd818;
	xor.b64  	%rd820, %rd2242, %rd2243;
	and.b64  	%rd821, %rd2241, %rd820;
	xor.b64  	%rd822, %rd821, %rd2243;
	add.s64 	%rd823, %rd822, %rd2244;
	add.s64 	%rd824, %rd823, %rd819;
	add.s64 	%rd825, %rd824, %rd2245;
	ld.const.u64 	%rd826, [%rd814];
	add.s64 	%rd827, %rd825, %rd826;
	add.s64 	%rd828, %rd827, %rd2240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r482}, %rd2237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r483,%dummy}, %rd2237;
	}
	shf.l.wrap.b32 	%r484, %r483, %r482, 30;
	shf.l.wrap.b32 	%r485, %r482, %r483, 30;
	mov.b64 	%rd829, {%r485, %r484};
	shf.r.wrap.b32 	%r486, %r482, %r483, 28;
	shf.r.wrap.b32 	%r487, %r483, %r482, 28;
	mov.b64 	%rd830, {%r487, %r486};
	xor.b64  	%rd831, %rd830, %rd829;
	shf.l.wrap.b32 	%r488, %r483, %r482, 25;
	shf.l.wrap.b32 	%r489, %r482, %r483, 25;
	mov.b64 	%rd832, {%r489, %r488};
	xor.b64  	%rd833, %rd831, %rd832;
	xor.b64  	%rd834, %rd2237, %rd2238;
	and.b64  	%rd835, %rd834, %rd2239;
	and.b64  	%rd836, %rd2237, %rd2238;
	or.b64  	%rd837, %rd835, %rd836;
	add.s64 	%rd838, %rd833, %rd837;
	add.s64 	%rd839, %rd838, %rd827;
	add.s32 	%r490, %r1445, 1;
	mul.wide.s32 	%rd840, %r490, 8;
	add.s64 	%rd841, %rd813, %rd840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r491,%dummy}, %rd828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r492}, %rd828;
	}
	shf.r.wrap.b32 	%r493, %r492, %r491, 14;
	shf.r.wrap.b32 	%r494, %r491, %r492, 14;
	mov.b64 	%rd842, {%r494, %r493};
	shf.r.wrap.b32 	%r495, %r492, %r491, 18;
	shf.r.wrap.b32 	%r496, %r491, %r492, 18;
	mov.b64 	%rd843, {%r496, %r495};
	xor.b64  	%rd844, %rd842, %rd843;
	shf.l.wrap.b32 	%r497, %r491, %r492, 23;
	shf.l.wrap.b32 	%r498, %r492, %r491, 23;
	mov.b64 	%rd845, {%r498, %r497};
	xor.b64  	%rd846, %rd844, %rd845;
	xor.b64  	%rd847, %rd2241, %rd2242;
	and.b64  	%rd848, %rd828, %rd847;
	xor.b64  	%rd849, %rd848, %rd2242;
	add.s64 	%rd850, %rd2246, %rd2243;
	ld.const.u64 	%rd851, [%rd841];
	add.s64 	%rd852, %rd850, %rd851;
	add.s64 	%rd853, %rd852, %rd849;
	add.s64 	%rd854, %rd853, %rd846;
	add.s64 	%rd855, %rd854, %rd2239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r499,%dummy}, %rd839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r500}, %rd839;
	}
	shf.r.wrap.b32 	%r501, %r500, %r499, 28;
	shf.r.wrap.b32 	%r502, %r499, %r500, 28;
	mov.b64 	%rd856, {%r502, %r501};
	shf.l.wrap.b32 	%r503, %r499, %r500, 30;
	shf.l.wrap.b32 	%r504, %r500, %r499, 30;
	mov.b64 	%rd857, {%r504, %r503};
	xor.b64  	%rd858, %rd856, %rd857;
	shf.l.wrap.b32 	%r505, %r499, %r500, 25;
	shf.l.wrap.b32 	%r506, %r500, %r499, 25;
	mov.b64 	%rd859, {%r506, %r505};
	xor.b64  	%rd860, %rd858, %rd859;
	and.b64  	%rd861, %rd839, %rd2237;
	xor.b64  	%rd862, %rd839, %rd2237;
	and.b64  	%rd863, %rd862, %rd2238;
	or.b64  	%rd864, %rd863, %rd861;
	add.s64 	%rd865, %rd860, %rd864;
	add.s64 	%rd866, %rd865, %rd854;
	add.s32 	%r507, %r1445, 2;
	mul.wide.s32 	%rd867, %r507, 8;
	add.s64 	%rd868, %rd813, %rd867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r508,%dummy}, %rd855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r509}, %rd855;
	}
	shf.r.wrap.b32 	%r510, %r509, %r508, 14;
	shf.r.wrap.b32 	%r511, %r508, %r509, 14;
	mov.b64 	%rd869, {%r511, %r510};
	shf.r.wrap.b32 	%r512, %r509, %r508, 18;
	shf.r.wrap.b32 	%r513, %r508, %r509, 18;
	mov.b64 	%rd870, {%r513, %r512};
	xor.b64  	%rd871, %rd869, %rd870;
	shf.l.wrap.b32 	%r514, %r508, %r509, 23;
	shf.l.wrap.b32 	%r515, %r509, %r508, 23;
	mov.b64 	%rd872, {%r515, %r514};
	xor.b64  	%rd873, %rd871, %rd872;
	xor.b64  	%rd874, %rd828, %rd2241;
	and.b64  	%rd875, %rd855, %rd874;
	xor.b64  	%rd876, %rd875, %rd2241;
	add.s64 	%rd877, %rd2247, %rd2242;
	ld.const.u64 	%rd878, [%rd868];
	add.s64 	%rd879, %rd877, %rd878;
	add.s64 	%rd880, %rd879, %rd876;
	add.s64 	%rd881, %rd880, %rd873;
	add.s64 	%rd882, %rd881, %rd2238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r516,%dummy}, %rd866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r517}, %rd866;
	}
	shf.r.wrap.b32 	%r518, %r517, %r516, 28;
	shf.r.wrap.b32 	%r519, %r516, %r517, 28;
	mov.b64 	%rd883, {%r519, %r518};
	shf.l.wrap.b32 	%r520, %r516, %r517, 30;
	shf.l.wrap.b32 	%r521, %r517, %r516, 30;
	mov.b64 	%rd884, {%r521, %r520};
	xor.b64  	%rd885, %rd883, %rd884;
	shf.l.wrap.b32 	%r522, %r516, %r517, 25;
	shf.l.wrap.b32 	%r523, %r517, %r516, 25;
	mov.b64 	%rd886, {%r523, %r522};
	xor.b64  	%rd887, %rd885, %rd886;
	and.b64  	%rd888, %rd866, %rd839;
	xor.b64  	%rd889, %rd866, %rd839;
	and.b64  	%rd890, %rd889, %rd2237;
	or.b64  	%rd891, %rd890, %rd888;
	add.s64 	%rd892, %rd887, %rd891;
	add.s64 	%rd893, %rd892, %rd881;
	add.s32 	%r524, %r1445, 3;
	mul.wide.s32 	%rd894, %r524, 8;
	add.s64 	%rd895, %rd813, %rd894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r525,%dummy}, %rd882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r526}, %rd882;
	}
	shf.r.wrap.b32 	%r527, %r526, %r525, 14;
	shf.r.wrap.b32 	%r528, %r525, %r526, 14;
	mov.b64 	%rd896, {%r528, %r527};
	shf.r.wrap.b32 	%r529, %r526, %r525, 18;
	shf.r.wrap.b32 	%r530, %r525, %r526, 18;
	mov.b64 	%rd897, {%r530, %r529};
	xor.b64  	%rd898, %rd896, %rd897;
	shf.l.wrap.b32 	%r531, %r525, %r526, 23;
	shf.l.wrap.b32 	%r532, %r526, %r525, 23;
	mov.b64 	%rd899, {%r532, %r531};
	xor.b64  	%rd900, %rd898, %rd899;
	xor.b64  	%rd901, %rd855, %rd828;
	and.b64  	%rd902, %rd882, %rd901;
	xor.b64  	%rd903, %rd902, %rd828;
	add.s64 	%rd904, %rd2248, %rd2241;
	ld.const.u64 	%rd905, [%rd895];
	add.s64 	%rd906, %rd904, %rd905;
	add.s64 	%rd907, %rd906, %rd903;
	add.s64 	%rd908, %rd907, %rd900;
	add.s64 	%rd909, %rd908, %rd2237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r533,%dummy}, %rd893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r534}, %rd893;
	}
	shf.r.wrap.b32 	%r535, %r534, %r533, 28;
	shf.r.wrap.b32 	%r536, %r533, %r534, 28;
	mov.b64 	%rd910, {%r536, %r535};
	shf.l.wrap.b32 	%r537, %r533, %r534, 30;
	shf.l.wrap.b32 	%r538, %r534, %r533, 30;
	mov.b64 	%rd911, {%r538, %r537};
	xor.b64  	%rd912, %rd910, %rd911;
	shf.l.wrap.b32 	%r539, %r533, %r534, 25;
	shf.l.wrap.b32 	%r540, %r534, %r533, 25;
	mov.b64 	%rd913, {%r540, %r539};
	xor.b64  	%rd914, %rd912, %rd913;
	and.b64  	%rd915, %rd893, %rd866;
	xor.b64  	%rd916, %rd893, %rd866;
	and.b64  	%rd917, %rd916, %rd839;
	or.b64  	%rd918, %rd917, %rd915;
	add.s64 	%rd919, %rd914, %rd918;
	add.s64 	%rd920, %rd919, %rd908;
	add.s32 	%r541, %r1445, 4;
	mul.wide.s32 	%rd921, %r541, 8;
	add.s64 	%rd922, %rd813, %rd921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r542,%dummy}, %rd909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r543}, %rd909;
	}
	shf.r.wrap.b32 	%r544, %r543, %r542, 14;
	shf.r.wrap.b32 	%r545, %r542, %r543, 14;
	mov.b64 	%rd923, {%r545, %r544};
	shf.r.wrap.b32 	%r546, %r543, %r542, 18;
	shf.r.wrap.b32 	%r547, %r542, %r543, 18;
	mov.b64 	%rd924, {%r547, %r546};
	xor.b64  	%rd925, %rd923, %rd924;
	shf.l.wrap.b32 	%r548, %r542, %r543, 23;
	shf.l.wrap.b32 	%r549, %r543, %r542, 23;
	mov.b64 	%rd926, {%r549, %r548};
	xor.b64  	%rd927, %rd925, %rd926;
	xor.b64  	%rd928, %rd882, %rd855;
	and.b64  	%rd929, %rd909, %rd928;
	xor.b64  	%rd930, %rd929, %rd855;
	add.s64 	%rd931, %rd828, %rd2249;
	ld.const.u64 	%rd932, [%rd922];
	add.s64 	%rd933, %rd931, %rd932;
	add.s64 	%rd934, %rd933, %rd930;
	add.s64 	%rd935, %rd934, %rd927;
	add.s64 	%rd936, %rd935, %rd839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r550,%dummy}, %rd920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r551}, %rd920;
	}
	shf.r.wrap.b32 	%r552, %r551, %r550, 28;
	shf.r.wrap.b32 	%r553, %r550, %r551, 28;
	mov.b64 	%rd937, {%r553, %r552};
	shf.l.wrap.b32 	%r554, %r550, %r551, 30;
	shf.l.wrap.b32 	%r555, %r551, %r550, 30;
	mov.b64 	%rd938, {%r555, %r554};
	xor.b64  	%rd939, %rd937, %rd938;
	shf.l.wrap.b32 	%r556, %r550, %r551, 25;
	shf.l.wrap.b32 	%r557, %r551, %r550, 25;
	mov.b64 	%rd940, {%r557, %r556};
	xor.b64  	%rd941, %rd939, %rd940;
	and.b64  	%rd942, %rd920, %rd893;
	xor.b64  	%rd943, %rd920, %rd893;
	and.b64  	%rd944, %rd943, %rd866;
	or.b64  	%rd945, %rd944, %rd942;
	add.s64 	%rd946, %rd941, %rd945;
	add.s64 	%rd947, %rd946, %rd935;
	add.s32 	%r558, %r1445, 5;
	mul.wide.s32 	%rd948, %r558, 8;
	add.s64 	%rd949, %rd813, %rd948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r559,%dummy}, %rd936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r560}, %rd936;
	}
	shf.r.wrap.b32 	%r561, %r560, %r559, 14;
	shf.r.wrap.b32 	%r562, %r559, %r560, 14;
	mov.b64 	%rd950, {%r562, %r561};
	shf.r.wrap.b32 	%r563, %r560, %r559, 18;
	shf.r.wrap.b32 	%r564, %r559, %r560, 18;
	mov.b64 	%rd951, {%r564, %r563};
	xor.b64  	%rd952, %rd950, %rd951;
	shf.l.wrap.b32 	%r565, %r559, %r560, 23;
	shf.l.wrap.b32 	%r566, %r560, %r559, 23;
	mov.b64 	%rd953, {%r566, %r565};
	xor.b64  	%rd954, %rd952, %rd953;
	xor.b64  	%rd955, %rd909, %rd882;
	and.b64  	%rd956, %rd936, %rd955;
	xor.b64  	%rd957, %rd956, %rd882;
	ld.const.u64 	%rd958, [%rd949];
	add.s64 	%rd959, %rd958, %rd2250;
	add.s64 	%rd960, %rd959, %rd855;
	add.s64 	%rd961, %rd960, %rd957;
	add.s64 	%rd962, %rd961, %rd954;
	add.s64 	%rd963, %rd962, %rd866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r567,%dummy}, %rd947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r568}, %rd947;
	}
	shf.r.wrap.b32 	%r569, %r568, %r567, 28;
	shf.r.wrap.b32 	%r570, %r567, %r568, 28;
	mov.b64 	%rd964, {%r570, %r569};
	shf.l.wrap.b32 	%r571, %r567, %r568, 30;
	shf.l.wrap.b32 	%r572, %r568, %r567, 30;
	mov.b64 	%rd965, {%r572, %r571};
	xor.b64  	%rd966, %rd964, %rd965;
	shf.l.wrap.b32 	%r573, %r567, %r568, 25;
	shf.l.wrap.b32 	%r574, %r568, %r567, 25;
	mov.b64 	%rd967, {%r574, %r573};
	xor.b64  	%rd968, %rd966, %rd967;
	and.b64  	%rd969, %rd947, %rd920;
	xor.b64  	%rd970, %rd947, %rd920;
	and.b64  	%rd971, %rd970, %rd893;
	or.b64  	%rd972, %rd971, %rd969;
	add.s64 	%rd973, %rd968, %rd972;
	add.s64 	%rd974, %rd973, %rd962;
	add.s32 	%r575, %r1445, 6;
	mul.wide.s32 	%rd975, %r575, 8;
	add.s64 	%rd976, %rd813, %rd975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r576,%dummy}, %rd963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r577}, %rd963;
	}
	shf.r.wrap.b32 	%r578, %r577, %r576, 14;
	shf.r.wrap.b32 	%r579, %r576, %r577, 14;
	mov.b64 	%rd977, {%r579, %r578};
	shf.r.wrap.b32 	%r580, %r577, %r576, 18;
	shf.r.wrap.b32 	%r581, %r576, %r577, 18;
	mov.b64 	%rd978, {%r581, %r580};
	xor.b64  	%rd979, %rd977, %rd978;
	shf.l.wrap.b32 	%r582, %r576, %r577, 23;
	shf.l.wrap.b32 	%r583, %r577, %r576, 23;
	mov.b64 	%rd980, {%r583, %r582};
	xor.b64  	%rd981, %rd979, %rd980;
	xor.b64  	%rd982, %rd936, %rd909;
	and.b64  	%rd983, %rd963, %rd982;
	xor.b64  	%rd984, %rd983, %rd909;
	ld.const.u64 	%rd985, [%rd976];
	add.s64 	%rd986, %rd985, %rd2251;
	add.s64 	%rd987, %rd986, %rd882;
	add.s64 	%rd988, %rd987, %rd984;
	add.s64 	%rd989, %rd988, %rd981;
	add.s64 	%rd990, %rd989, %rd893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r584,%dummy}, %rd974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r585}, %rd974;
	}
	shf.r.wrap.b32 	%r586, %r585, %r584, 28;
	shf.r.wrap.b32 	%r587, %r584, %r585, 28;
	mov.b64 	%rd991, {%r587, %r586};
	shf.l.wrap.b32 	%r588, %r584, %r585, 30;
	shf.l.wrap.b32 	%r589, %r585, %r584, 30;
	mov.b64 	%rd992, {%r589, %r588};
	xor.b64  	%rd993, %rd991, %rd992;
	shf.l.wrap.b32 	%r590, %r584, %r585, 25;
	shf.l.wrap.b32 	%r591, %r585, %r584, 25;
	mov.b64 	%rd994, {%r591, %r590};
	xor.b64  	%rd995, %rd993, %rd994;
	and.b64  	%rd996, %rd974, %rd947;
	xor.b64  	%rd997, %rd974, %rd947;
	and.b64  	%rd998, %rd997, %rd920;
	or.b64  	%rd999, %rd998, %rd996;
	add.s64 	%rd1000, %rd995, %rd999;
	add.s64 	%rd1001, %rd1000, %rd989;
	add.s32 	%r592, %r1445, 7;
	mul.wide.s32 	%rd1002, %r592, 8;
	add.s64 	%rd1003, %rd813, %rd1002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r593,%dummy}, %rd990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r594}, %rd990;
	}
	shf.r.wrap.b32 	%r595, %r594, %r593, 14;
	shf.r.wrap.b32 	%r596, %r593, %r594, 14;
	mov.b64 	%rd1004, {%r596, %r595};
	shf.r.wrap.b32 	%r597, %r594, %r593, 18;
	shf.r.wrap.b32 	%r598, %r593, %r594, 18;
	mov.b64 	%rd1005, {%r598, %r597};
	xor.b64  	%rd1006, %rd1004, %rd1005;
	shf.l.wrap.b32 	%r599, %r593, %r594, 23;
	shf.l.wrap.b32 	%r600, %r594, %r593, 23;
	mov.b64 	%rd1007, {%r600, %r599};
	xor.b64  	%rd1008, %rd1006, %rd1007;
	xor.b64  	%rd1009, %rd963, %rd936;
	and.b64  	%rd1010, %rd990, %rd1009;
	xor.b64  	%rd1011, %rd1010, %rd936;
	ld.const.u64 	%rd1012, [%rd1003];
	add.s64 	%rd1013, %rd1012, %rd2252;
	add.s64 	%rd1014, %rd1013, %rd909;
	add.s64 	%rd1015, %rd1014, %rd1011;
	add.s64 	%rd1016, %rd1015, %rd1008;
	add.s64 	%rd1017, %rd1016, %rd920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r601,%dummy}, %rd1001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r602}, %rd1001;
	}
	shf.r.wrap.b32 	%r603, %r602, %r601, 28;
	shf.r.wrap.b32 	%r604, %r601, %r602, 28;
	mov.b64 	%rd1018, {%r604, %r603};
	shf.l.wrap.b32 	%r605, %r601, %r602, 30;
	shf.l.wrap.b32 	%r606, %r602, %r601, 30;
	mov.b64 	%rd1019, {%r606, %r605};
	xor.b64  	%rd1020, %rd1018, %rd1019;
	shf.l.wrap.b32 	%r607, %r601, %r602, 25;
	shf.l.wrap.b32 	%r608, %r602, %r601, 25;
	mov.b64 	%rd1021, {%r608, %r607};
	xor.b64  	%rd1022, %rd1020, %rd1021;
	and.b64  	%rd1023, %rd1001, %rd974;
	xor.b64  	%rd1024, %rd1001, %rd974;
	and.b64  	%rd1025, %rd1024, %rd947;
	or.b64  	%rd1026, %rd1025, %rd1023;
	add.s64 	%rd1027, %rd1022, %rd1026;
	add.s64 	%rd1028, %rd1027, %rd1016;
	add.s32 	%r609, %r1445, 8;
	mul.wide.s32 	%rd1029, %r609, 8;
	add.s64 	%rd1030, %rd813, %rd1029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r610,%dummy}, %rd1017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r611}, %rd1017;
	}
	shf.r.wrap.b32 	%r612, %r611, %r610, 14;
	shf.r.wrap.b32 	%r613, %r610, %r611, 14;
	mov.b64 	%rd1031, {%r613, %r612};
	shf.r.wrap.b32 	%r614, %r611, %r610, 18;
	shf.r.wrap.b32 	%r615, %r610, %r611, 18;
	mov.b64 	%rd1032, {%r615, %r614};
	xor.b64  	%rd1033, %rd1031, %rd1032;
	shf.l.wrap.b32 	%r616, %r610, %r611, 23;
	shf.l.wrap.b32 	%r617, %r611, %r610, 23;
	mov.b64 	%rd1034, {%r617, %r616};
	xor.b64  	%rd1035, %rd1033, %rd1034;
	xor.b64  	%rd1036, %rd990, %rd963;
	and.b64  	%rd1037, %rd1017, %rd1036;
	xor.b64  	%rd1038, %rd1037, %rd963;
	ld.const.u64 	%rd1039, [%rd1030];
	add.s64 	%rd1040, %rd1039, %rd2236;
	add.s64 	%rd1041, %rd1040, %rd936;
	add.s64 	%rd1042, %rd1041, %rd1038;
	add.s64 	%rd1043, %rd1042, %rd1035;
	add.s64 	%rd1044, %rd1043, %rd947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r618,%dummy}, %rd1028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r619}, %rd1028;
	}
	shf.r.wrap.b32 	%r620, %r619, %r618, 28;
	shf.r.wrap.b32 	%r621, %r618, %r619, 28;
	mov.b64 	%rd1045, {%r621, %r620};
	shf.l.wrap.b32 	%r622, %r618, %r619, 30;
	shf.l.wrap.b32 	%r623, %r619, %r618, 30;
	mov.b64 	%rd1046, {%r623, %r622};
	xor.b64  	%rd1047, %rd1045, %rd1046;
	shf.l.wrap.b32 	%r624, %r618, %r619, 25;
	shf.l.wrap.b32 	%r625, %r619, %r618, 25;
	mov.b64 	%rd1048, {%r625, %r624};
	xor.b64  	%rd1049, %rd1047, %rd1048;
	and.b64  	%rd1050, %rd1028, %rd1001;
	xor.b64  	%rd1051, %rd1028, %rd1001;
	and.b64  	%rd1052, %rd1051, %rd974;
	or.b64  	%rd1053, %rd1052, %rd1050;
	add.s64 	%rd1054, %rd1049, %rd1053;
	add.s64 	%rd1055, %rd1054, %rd1043;
	add.s32 	%r626, %r1445, 9;
	mul.wide.s32 	%rd1056, %r626, 8;
	add.s64 	%rd1057, %rd813, %rd1056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r627,%dummy}, %rd1044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r628}, %rd1044;
	}
	shf.r.wrap.b32 	%r629, %r628, %r627, 14;
	shf.r.wrap.b32 	%r630, %r627, %r628, 14;
	mov.b64 	%rd1058, {%r630, %r629};
	shf.r.wrap.b32 	%r631, %r628, %r627, 18;
	shf.r.wrap.b32 	%r632, %r627, %r628, 18;
	mov.b64 	%rd1059, {%r632, %r631};
	xor.b64  	%rd1060, %rd1058, %rd1059;
	shf.l.wrap.b32 	%r633, %r627, %r628, 23;
	shf.l.wrap.b32 	%r634, %r628, %r627, 23;
	mov.b64 	%rd1061, {%r634, %r633};
	xor.b64  	%rd1062, %rd1060, %rd1061;
	xor.b64  	%rd1063, %rd1017, %rd990;
	and.b64  	%rd1064, %rd1044, %rd1063;
	xor.b64  	%rd1065, %rd1064, %rd990;
	ld.const.u64 	%rd1066, [%rd1057];
	add.s64 	%rd1067, %rd1066, %rd2235;
	add.s64 	%rd1068, %rd1067, %rd963;
	add.s64 	%rd1069, %rd1068, %rd1065;
	add.s64 	%rd1070, %rd1069, %rd1062;
	add.s64 	%rd1071, %rd1070, %rd974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r635,%dummy}, %rd1055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r636}, %rd1055;
	}
	shf.r.wrap.b32 	%r637, %r636, %r635, 28;
	shf.r.wrap.b32 	%r638, %r635, %r636, 28;
	mov.b64 	%rd1072, {%r638, %r637};
	shf.l.wrap.b32 	%r639, %r635, %r636, 30;
	shf.l.wrap.b32 	%r640, %r636, %r635, 30;
	mov.b64 	%rd1073, {%r640, %r639};
	xor.b64  	%rd1074, %rd1072, %rd1073;
	shf.l.wrap.b32 	%r641, %r635, %r636, 25;
	shf.l.wrap.b32 	%r642, %r636, %r635, 25;
	mov.b64 	%rd1075, {%r642, %r641};
	xor.b64  	%rd1076, %rd1074, %rd1075;
	and.b64  	%rd1077, %rd1055, %rd1028;
	xor.b64  	%rd1078, %rd1055, %rd1028;
	and.b64  	%rd1079, %rd1078, %rd1001;
	or.b64  	%rd1080, %rd1079, %rd1077;
	add.s64 	%rd1081, %rd1076, %rd1080;
	add.s64 	%rd1082, %rd1081, %rd1070;
	add.s32 	%r643, %r1445, 10;
	mul.wide.s32 	%rd1083, %r643, 8;
	add.s64 	%rd1084, %rd813, %rd1083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r644,%dummy}, %rd1071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r645}, %rd1071;
	}
	shf.r.wrap.b32 	%r646, %r645, %r644, 14;
	shf.r.wrap.b32 	%r647, %r644, %r645, 14;
	mov.b64 	%rd1085, {%r647, %r646};
	shf.r.wrap.b32 	%r648, %r645, %r644, 18;
	shf.r.wrap.b32 	%r649, %r644, %r645, 18;
	mov.b64 	%rd1086, {%r649, %r648};
	xor.b64  	%rd1087, %rd1085, %rd1086;
	shf.l.wrap.b32 	%r650, %r644, %r645, 23;
	shf.l.wrap.b32 	%r651, %r645, %r644, 23;
	mov.b64 	%rd1088, {%r651, %r650};
	xor.b64  	%rd1089, %rd1087, %rd1088;
	xor.b64  	%rd1090, %rd1044, %rd1017;
	and.b64  	%rd1091, %rd1071, %rd1090;
	xor.b64  	%rd1092, %rd1091, %rd1017;
	ld.const.u64 	%rd1093, [%rd1084];
	add.s64 	%rd1094, %rd1093, %rd2234;
	add.s64 	%rd1095, %rd1094, %rd990;
	add.s64 	%rd1096, %rd1095, %rd1092;
	add.s64 	%rd1097, %rd1096, %rd1089;
	add.s64 	%rd1098, %rd1097, %rd1001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r652,%dummy}, %rd1082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r653}, %rd1082;
	}
	shf.r.wrap.b32 	%r654, %r653, %r652, 28;
	shf.r.wrap.b32 	%r655, %r652, %r653, 28;
	mov.b64 	%rd1099, {%r655, %r654};
	shf.l.wrap.b32 	%r656, %r652, %r653, 30;
	shf.l.wrap.b32 	%r657, %r653, %r652, 30;
	mov.b64 	%rd1100, {%r657, %r656};
	xor.b64  	%rd1101, %rd1099, %rd1100;
	shf.l.wrap.b32 	%r658, %r652, %r653, 25;
	shf.l.wrap.b32 	%r659, %r653, %r652, 25;
	mov.b64 	%rd1102, {%r659, %r658};
	xor.b64  	%rd1103, %rd1101, %rd1102;
	and.b64  	%rd1104, %rd1082, %rd1055;
	xor.b64  	%rd1105, %rd1082, %rd1055;
	and.b64  	%rd1106, %rd1105, %rd1028;
	or.b64  	%rd1107, %rd1106, %rd1104;
	add.s64 	%rd1108, %rd1103, %rd1107;
	add.s64 	%rd1109, %rd1108, %rd1097;
	add.s32 	%r660, %r1445, 11;
	mul.wide.s32 	%rd1110, %r660, 8;
	add.s64 	%rd1111, %rd813, %rd1110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r661,%dummy}, %rd1098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r662}, %rd1098;
	}
	shf.r.wrap.b32 	%r663, %r662, %r661, 14;
	shf.r.wrap.b32 	%r664, %r661, %r662, 14;
	mov.b64 	%rd1112, {%r664, %r663};
	shf.r.wrap.b32 	%r665, %r662, %r661, 18;
	shf.r.wrap.b32 	%r666, %r661, %r662, 18;
	mov.b64 	%rd1113, {%r666, %r665};
	xor.b64  	%rd1114, %rd1112, %rd1113;
	shf.l.wrap.b32 	%r667, %r661, %r662, 23;
	shf.l.wrap.b32 	%r668, %r662, %r661, 23;
	mov.b64 	%rd1115, {%r668, %r667};
	xor.b64  	%rd1116, %rd1114, %rd1115;
	xor.b64  	%rd1117, %rd1071, %rd1044;
	and.b64  	%rd1118, %rd1098, %rd1117;
	xor.b64  	%rd1119, %rd1118, %rd1044;
	ld.const.u64 	%rd1120, [%rd1111];
	add.s64 	%rd1121, %rd1120, %rd2233;
	add.s64 	%rd1122, %rd1121, %rd1017;
	add.s64 	%rd1123, %rd1122, %rd1119;
	add.s64 	%rd1124, %rd1123, %rd1116;
	add.s64 	%rd1125, %rd1124, %rd1028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r669,%dummy}, %rd1109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r670}, %rd1109;
	}
	shf.r.wrap.b32 	%r671, %r670, %r669, 28;
	shf.r.wrap.b32 	%r672, %r669, %r670, 28;
	mov.b64 	%rd1126, {%r672, %r671};
	shf.l.wrap.b32 	%r673, %r669, %r670, 30;
	shf.l.wrap.b32 	%r674, %r670, %r669, 30;
	mov.b64 	%rd1127, {%r674, %r673};
	xor.b64  	%rd1128, %rd1126, %rd1127;
	shf.l.wrap.b32 	%r675, %r669, %r670, 25;
	shf.l.wrap.b32 	%r676, %r670, %r669, 25;
	mov.b64 	%rd1129, {%r676, %r675};
	xor.b64  	%rd1130, %rd1128, %rd1129;
	and.b64  	%rd1131, %rd1109, %rd1082;
	xor.b64  	%rd1132, %rd1109, %rd1082;
	and.b64  	%rd1133, %rd1132, %rd1055;
	or.b64  	%rd1134, %rd1133, %rd1131;
	add.s64 	%rd1135, %rd1130, %rd1134;
	add.s64 	%rd1136, %rd1135, %rd1124;
	add.s32 	%r677, %r1445, 12;
	mul.wide.s32 	%rd1137, %r677, 8;
	add.s64 	%rd1138, %rd813, %rd1137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r678,%dummy}, %rd1125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r679}, %rd1125;
	}
	shf.r.wrap.b32 	%r680, %r679, %r678, 14;
	shf.r.wrap.b32 	%r681, %r678, %r679, 14;
	mov.b64 	%rd1139, {%r681, %r680};
	shf.r.wrap.b32 	%r682, %r679, %r678, 18;
	shf.r.wrap.b32 	%r683, %r678, %r679, 18;
	mov.b64 	%rd1140, {%r683, %r682};
	xor.b64  	%rd1141, %rd1139, %rd1140;
	shf.l.wrap.b32 	%r684, %r678, %r679, 23;
	shf.l.wrap.b32 	%r685, %r679, %r678, 23;
	mov.b64 	%rd1142, {%r685, %r684};
	xor.b64  	%rd1143, %rd1141, %rd1142;
	xor.b64  	%rd1144, %rd1098, %rd1071;
	and.b64  	%rd1145, %rd1125, %rd1144;
	xor.b64  	%rd1146, %rd1145, %rd1071;
	ld.const.u64 	%rd1147, [%rd1138];
	add.s64 	%rd1148, %rd1147, %rd2232;
	add.s64 	%rd1149, %rd1148, %rd1044;
	add.s64 	%rd1150, %rd1149, %rd1146;
	add.s64 	%rd1151, %rd1150, %rd1143;
	add.s64 	%rd2244, %rd1151, %rd1055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r686,%dummy}, %rd1136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r687}, %rd1136;
	}
	shf.r.wrap.b32 	%r688, %r687, %r686, 28;
	shf.r.wrap.b32 	%r689, %r686, %r687, 28;
	mov.b64 	%rd1152, {%r689, %r688};
	shf.l.wrap.b32 	%r690, %r686, %r687, 30;
	shf.l.wrap.b32 	%r691, %r687, %r686, 30;
	mov.b64 	%rd1153, {%r691, %r690};
	xor.b64  	%rd1154, %rd1152, %rd1153;
	shf.l.wrap.b32 	%r692, %r686, %r687, 25;
	shf.l.wrap.b32 	%r693, %r687, %r686, 25;
	mov.b64 	%rd1155, {%r693, %r692};
	xor.b64  	%rd1156, %rd1154, %rd1155;
	and.b64  	%rd1157, %rd1136, %rd1109;
	xor.b64  	%rd1158, %rd1136, %rd1109;
	and.b64  	%rd1159, %rd1158, %rd1082;
	or.b64  	%rd1160, %rd1159, %rd1157;
	add.s64 	%rd1161, %rd1156, %rd1160;
	add.s64 	%rd2240, %rd1161, %rd1151;
	add.s32 	%r694, %r1445, 13;
	mul.wide.s32 	%rd1162, %r694, 8;
	add.s64 	%rd1163, %rd813, %rd1162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r695,%dummy}, %rd2244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r696}, %rd2244;
	}
	shf.r.wrap.b32 	%r697, %r696, %r695, 14;
	shf.r.wrap.b32 	%r698, %r695, %r696, 14;
	mov.b64 	%rd1164, {%r698, %r697};
	shf.r.wrap.b32 	%r699, %r696, %r695, 18;
	shf.r.wrap.b32 	%r700, %r695, %r696, 18;
	mov.b64 	%rd1165, {%r700, %r699};
	xor.b64  	%rd1166, %rd1164, %rd1165;
	shf.l.wrap.b32 	%r701, %r695, %r696, 23;
	shf.l.wrap.b32 	%r702, %r696, %r695, 23;
	mov.b64 	%rd1167, {%r702, %r701};
	xor.b64  	%rd1168, %rd1166, %rd1167;
	xor.b64  	%rd1169, %rd1125, %rd1098;
	and.b64  	%rd1170, %rd2244, %rd1169;
	xor.b64  	%rd1171, %rd1170, %rd1098;
	ld.const.u64 	%rd1172, [%rd1163];
	add.s64 	%rd1173, %rd1172, %rd2231;
	add.s64 	%rd1174, %rd1173, %rd1071;
	add.s64 	%rd1175, %rd1174, %rd1171;
	add.s64 	%rd1176, %rd1175, %rd1168;
	add.s64 	%rd2243, %rd1176, %rd1082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r703,%dummy}, %rd2240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r704}, %rd2240;
	}
	shf.r.wrap.b32 	%r705, %r704, %r703, 28;
	shf.r.wrap.b32 	%r706, %r703, %r704, 28;
	mov.b64 	%rd1177, {%r706, %r705};
	shf.l.wrap.b32 	%r707, %r703, %r704, 30;
	shf.l.wrap.b32 	%r708, %r704, %r703, 30;
	mov.b64 	%rd1178, {%r708, %r707};
	xor.b64  	%rd1179, %rd1177, %rd1178;
	shf.l.wrap.b32 	%r709, %r703, %r704, 25;
	shf.l.wrap.b32 	%r710, %r704, %r703, 25;
	mov.b64 	%rd1180, {%r710, %r709};
	xor.b64  	%rd1181, %rd1179, %rd1180;
	and.b64  	%rd1182, %rd2240, %rd1136;
	xor.b64  	%rd1183, %rd2240, %rd1136;
	and.b64  	%rd1184, %rd1183, %rd1109;
	or.b64  	%rd1185, %rd1184, %rd1182;
	add.s64 	%rd1186, %rd1181, %rd1185;
	add.s64 	%rd2239, %rd1186, %rd1176;
	add.s32 	%r711, %r1445, 14;
	mul.wide.s32 	%rd1187, %r711, 8;
	add.s64 	%rd1188, %rd813, %rd1187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r712,%dummy}, %rd2243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r713}, %rd2243;
	}
	shf.r.wrap.b32 	%r714, %r713, %r712, 14;
	shf.r.wrap.b32 	%r715, %r712, %r713, 14;
	mov.b64 	%rd1189, {%r715, %r714};
	shf.r.wrap.b32 	%r716, %r713, %r712, 18;
	shf.r.wrap.b32 	%r717, %r712, %r713, 18;
	mov.b64 	%rd1190, {%r717, %r716};
	xor.b64  	%rd1191, %rd1189, %rd1190;
	shf.l.wrap.b32 	%r718, %r712, %r713, 23;
	shf.l.wrap.b32 	%r719, %r713, %r712, 23;
	mov.b64 	%rd1192, {%r719, %r718};
	xor.b64  	%rd1193, %rd1191, %rd1192;
	xor.b64  	%rd1194, %rd2244, %rd1125;
	and.b64  	%rd1195, %rd2243, %rd1194;
	xor.b64  	%rd1196, %rd1195, %rd1125;
	ld.const.u64 	%rd1197, [%rd1188];
	add.s64 	%rd1198, %rd1197, %rd2230;
	add.s64 	%rd1199, %rd1198, %rd1098;
	add.s64 	%rd1200, %rd1199, %rd1196;
	add.s64 	%rd1201, %rd1200, %rd1193;
	add.s64 	%rd2242, %rd1201, %rd1109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r720,%dummy}, %rd2239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r721}, %rd2239;
	}
	shf.r.wrap.b32 	%r722, %r721, %r720, 28;
	shf.r.wrap.b32 	%r723, %r720, %r721, 28;
	mov.b64 	%rd1202, {%r723, %r722};
	shf.l.wrap.b32 	%r724, %r720, %r721, 30;
	shf.l.wrap.b32 	%r725, %r721, %r720, 30;
	mov.b64 	%rd1203, {%r725, %r724};
	xor.b64  	%rd1204, %rd1202, %rd1203;
	shf.l.wrap.b32 	%r726, %r720, %r721, 25;
	shf.l.wrap.b32 	%r727, %r721, %r720, 25;
	mov.b64 	%rd1205, {%r727, %r726};
	xor.b64  	%rd1206, %rd1204, %rd1205;
	and.b64  	%rd1207, %rd2239, %rd2240;
	xor.b64  	%rd1208, %rd2239, %rd2240;
	and.b64  	%rd1209, %rd1208, %rd1136;
	or.b64  	%rd1210, %rd1209, %rd1207;
	add.s64 	%rd1211, %rd1206, %rd1210;
	add.s64 	%rd2238, %rd1211, %rd1201;
	add.s32 	%r728, %r1445, 15;
	mul.wide.s32 	%rd1212, %r728, 8;
	add.s64 	%rd1213, %rd813, %rd1212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r729,%dummy}, %rd2242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r730}, %rd2242;
	}
	shf.r.wrap.b32 	%r731, %r730, %r729, 14;
	shf.r.wrap.b32 	%r732, %r729, %r730, 14;
	mov.b64 	%rd1214, {%r732, %r731};
	shf.r.wrap.b32 	%r733, %r730, %r729, 18;
	shf.r.wrap.b32 	%r734, %r729, %r730, 18;
	mov.b64 	%rd1215, {%r734, %r733};
	xor.b64  	%rd1216, %rd1214, %rd1215;
	shf.l.wrap.b32 	%r735, %r729, %r730, 23;
	shf.l.wrap.b32 	%r736, %r730, %r729, 23;
	mov.b64 	%rd1217, {%r736, %r735};
	xor.b64  	%rd1218, %rd1216, %rd1217;
	xor.b64  	%rd1219, %rd2243, %rd2244;
	and.b64  	%rd1220, %rd2242, %rd1219;
	xor.b64  	%rd1221, %rd1220, %rd2244;
	ld.const.u64 	%rd1222, [%rd1213];
	add.s64 	%rd1223, %rd1222, %rd2229;
	add.s64 	%rd1224, %rd1223, %rd1125;
	add.s64 	%rd1225, %rd1224, %rd1221;
	add.s64 	%rd1226, %rd1225, %rd1218;
	add.s64 	%rd2241, %rd1226, %rd1136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r737,%dummy}, %rd2238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r738}, %rd2238;
	}
	shf.r.wrap.b32 	%r739, %r738, %r737, 28;
	shf.r.wrap.b32 	%r740, %r737, %r738, 28;
	mov.b64 	%rd1227, {%r740, %r739};
	shf.l.wrap.b32 	%r741, %r737, %r738, 30;
	shf.l.wrap.b32 	%r742, %r738, %r737, 30;
	mov.b64 	%rd1228, {%r742, %r741};
	xor.b64  	%rd1229, %rd1227, %rd1228;
	shf.l.wrap.b32 	%r743, %r737, %r738, 25;
	shf.l.wrap.b32 	%r744, %r738, %r737, 25;
	mov.b64 	%rd1230, {%r744, %r743};
	xor.b64  	%rd1231, %rd1229, %rd1230;
	and.b64  	%rd1232, %rd2238, %rd2239;
	xor.b64  	%rd1233, %rd2238, %rd2239;
	and.b64  	%rd1234, %rd1233, %rd2240;
	or.b64  	%rd1235, %rd1234, %rd1232;
	add.s64 	%rd1236, %rd1231, %rd1235;
	add.s64 	%rd2237, %rd1236, %rd1226;
	add.s32 	%r1445, %r1445, 16;
	setp.lt.s32	%p3, %r1445, 80;
	@%p3 bra 	BB4_4;

	add.s64 	%rd2269, %rd2237, %rd10;
	add.s64 	%rd1245, %rd51, %rd2269;
	add.s64 	%rd1246, %rd1245, %rd5;
	add.s64 	%rd1247, %rd1246, %rd3;
	add.s64 	%rd1248, %rd52, %rd1246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r746,%dummy}, %rd1247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r747}, %rd1247;
	}
	shf.r.wrap.b32 	%r748, %r747, %r746, 14;
	shf.r.wrap.b32 	%r749, %r746, %r747, 14;
	mov.b64 	%rd1249, {%r749, %r748};
	shf.r.wrap.b32 	%r750, %r747, %r746, 18;
	shf.r.wrap.b32 	%r751, %r746, %r747, 18;
	mov.b64 	%rd1250, {%r751, %r750};
	xor.b64  	%rd1251, %rd1249, %rd1250;
	shf.l.wrap.b32 	%r752, %r746, %r747, 23;
	shf.l.wrap.b32 	%r753, %r747, %r746, 23;
	mov.b64 	%rd1252, {%r753, %r752};
	xor.b64  	%rd1253, %rd1251, %rd1252;
	xor.b64  	%rd1254, %rd28, %rd29;
	and.b64  	%rd1255, %rd1247, %rd1254;
	xor.b64  	%rd1256, %rd1255, %rd28;
	add.s64 	%rd2270, %rd2238, %rd9;
	add.s64 	%rd1257, %rd2270, %rd27;
	add.s64 	%rd1258, %rd1257, %rd12;
	add.s64 	%rd1259, %rd1258, %rd1256;
	add.s64 	%rd1260, %rd1259, %rd1253;
	add.s64 	%rd1261, %rd1260, %rd32;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r754,%dummy}, %rd1248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r755}, %rd1248;
	}
	shf.r.wrap.b32 	%r756, %r755, %r754, 28;
	shf.r.wrap.b32 	%r757, %r754, %r755, 28;
	mov.b64 	%rd1262, {%r757, %r756};
	shf.l.wrap.b32 	%r758, %r754, %r755, 30;
	shf.l.wrap.b32 	%r759, %r755, %r754, 30;
	mov.b64 	%rd1263, {%r759, %r758};
	xor.b64  	%rd1264, %rd1262, %rd1263;
	shf.l.wrap.b32 	%r760, %r754, %r755, 25;
	shf.l.wrap.b32 	%r761, %r755, %r754, 25;
	mov.b64 	%rd1265, {%r761, %r760};
	xor.b64  	%rd1266, %rd1264, %rd1265;
	and.b64  	%rd1267, %rd1248, %rd31;
	xor.b64  	%rd1268, %rd1248, %rd31;
	and.b64  	%rd1269, %rd1268, %rd30;
	or.b64  	%rd1270, %rd1269, %rd1267;
	add.s64 	%rd1271, %rd1266, %rd1270;
	add.s64 	%rd1272, %rd1271, %rd1260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r762,%dummy}, %rd1261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r763}, %rd1261;
	}
	shf.r.wrap.b32 	%r764, %r763, %r762, 14;
	shf.r.wrap.b32 	%r765, %r762, %r763, 14;
	mov.b64 	%rd1273, {%r765, %r764};
	shf.r.wrap.b32 	%r766, %r763, %r762, 18;
	shf.r.wrap.b32 	%r767, %r762, %r763, 18;
	mov.b64 	%rd1274, {%r767, %r766};
	xor.b64  	%rd1275, %rd1273, %rd1274;
	shf.l.wrap.b32 	%r768, %r762, %r763, 23;
	shf.l.wrap.b32 	%r769, %r763, %r762, 23;
	mov.b64 	%rd1276, {%r769, %r768};
	xor.b64  	%rd1277, %rd1275, %rd1276;
	xor.b64  	%rd1278, %rd1247, %rd29;
	and.b64  	%rd1279, %rd1261, %rd1278;
	xor.b64  	%rd1280, %rd1279, %rd29;
	add.s64 	%rd2271, %rd2239, %rd11;
	add.s64 	%rd1281, %rd2271, %rd28;
	add.s64 	%rd1282, %rd1281, %rd13;
	add.s64 	%rd1283, %rd1282, %rd1280;
	add.s64 	%rd1284, %rd1283, %rd1277;
	add.s64 	%rd1285, %rd1284, %rd30;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r770,%dummy}, %rd1272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r771}, %rd1272;
	}
	shf.r.wrap.b32 	%r772, %r771, %r770, 28;
	shf.r.wrap.b32 	%r773, %r770, %r771, 28;
	mov.b64 	%rd1286, {%r773, %r772};
	shf.l.wrap.b32 	%r774, %r770, %r771, 30;
	shf.l.wrap.b32 	%r775, %r771, %r770, 30;
	mov.b64 	%rd1287, {%r775, %r774};
	xor.b64  	%rd1288, %rd1286, %rd1287;
	shf.l.wrap.b32 	%r776, %r770, %r771, 25;
	shf.l.wrap.b32 	%r777, %r771, %r770, 25;
	mov.b64 	%rd1289, {%r777, %r776};
	xor.b64  	%rd1290, %rd1288, %rd1289;
	and.b64  	%rd1291, %rd1272, %rd1248;
	xor.b64  	%rd1292, %rd1272, %rd1248;
	and.b64  	%rd1293, %rd1292, %rd31;
	or.b64  	%rd1294, %rd1293, %rd1291;
	add.s64 	%rd1295, %rd1290, %rd1294;
	add.s64 	%rd1296, %rd1295, %rd1284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r778,%dummy}, %rd1285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r779}, %rd1285;
	}
	shf.r.wrap.b32 	%r780, %r779, %r778, 14;
	shf.r.wrap.b32 	%r781, %r778, %r779, 14;
	mov.b64 	%rd1297, {%r781, %r780};
	shf.r.wrap.b32 	%r782, %r779, %r778, 18;
	shf.r.wrap.b32 	%r783, %r778, %r779, 18;
	mov.b64 	%rd1298, {%r783, %r782};
	xor.b64  	%rd1299, %rd1297, %rd1298;
	shf.l.wrap.b32 	%r784, %r778, %r779, 23;
	shf.l.wrap.b32 	%r785, %r779, %r778, 23;
	mov.b64 	%rd1300, {%r785, %r784};
	xor.b64  	%rd1301, %rd1299, %rd1300;
	xor.b64  	%rd1302, %rd1261, %rd1247;
	and.b64  	%rd1303, %rd1285, %rd1302;
	xor.b64  	%rd1304, %rd1303, %rd1247;
	add.s64 	%rd2272, %rd2240, %rd1;
	add.s64 	%rd1305, %rd2272, %rd29;
	add.s64 	%rd1306, %rd1305, %rd14;
	add.s64 	%rd1307, %rd1306, %rd1304;
	add.s64 	%rd1308, %rd1307, %rd1301;
	add.s64 	%rd1309, %rd1308, %rd31;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r786,%dummy}, %rd1296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r787}, %rd1296;
	}
	shf.r.wrap.b32 	%r788, %r787, %r786, 28;
	shf.r.wrap.b32 	%r789, %r786, %r787, 28;
	mov.b64 	%rd1310, {%r789, %r788};
	shf.l.wrap.b32 	%r790, %r786, %r787, 30;
	shf.l.wrap.b32 	%r791, %r787, %r786, 30;
	mov.b64 	%rd1311, {%r791, %r790};
	xor.b64  	%rd1312, %rd1310, %rd1311;
	shf.l.wrap.b32 	%r792, %r786, %r787, 25;
	shf.l.wrap.b32 	%r793, %r787, %r786, 25;
	mov.b64 	%rd1313, {%r793, %r792};
	xor.b64  	%rd1314, %rd1312, %rd1313;
	and.b64  	%rd1315, %rd1296, %rd1272;
	xor.b64  	%rd1316, %rd1296, %rd1272;
	and.b64  	%rd1317, %rd1316, %rd1248;
	or.b64  	%rd1318, %rd1317, %rd1315;
	add.s64 	%rd1319, %rd1314, %rd1318;
	add.s64 	%rd1320, %rd1319, %rd1308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r794,%dummy}, %rd1309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r795}, %rd1309;
	}
	shf.r.wrap.b32 	%r796, %r795, %r794, 14;
	shf.r.wrap.b32 	%r797, %r794, %r795, 14;
	mov.b64 	%rd1321, {%r797, %r796};
	shf.r.wrap.b32 	%r798, %r795, %r794, 18;
	shf.r.wrap.b32 	%r799, %r794, %r795, 18;
	mov.b64 	%rd1322, {%r799, %r798};
	xor.b64  	%rd1323, %rd1321, %rd1322;
	shf.l.wrap.b32 	%r800, %r794, %r795, 23;
	shf.l.wrap.b32 	%r801, %r795, %r794, 23;
	mov.b64 	%rd1324, {%r801, %r800};
	xor.b64  	%rd1325, %rd1323, %rd1324;
	xor.b64  	%rd1326, %rd1285, %rd1261;
	and.b64  	%rd1327, %rd1309, %rd1326;
	xor.b64  	%rd1328, %rd1327, %rd1261;
	add.s64 	%rd2273, %rd2241, %rd8;
	add.s64 	%rd1329, %rd1247, %rd2273;
	add.s64 	%rd1330, %rd1329, %rd15;
	add.s64 	%rd1331, %rd1330, %rd1328;
	add.s64 	%rd1332, %rd1331, %rd1325;
	add.s64 	%rd1333, %rd1332, %rd1248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r802,%dummy}, %rd1320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r803}, %rd1320;
	}
	shf.r.wrap.b32 	%r804, %r803, %r802, 28;
	shf.r.wrap.b32 	%r805, %r802, %r803, 28;
	mov.b64 	%rd1334, {%r805, %r804};
	shf.l.wrap.b32 	%r806, %r802, %r803, 30;
	shf.l.wrap.b32 	%r807, %r803, %r802, 30;
	mov.b64 	%rd1335, {%r807, %r806};
	xor.b64  	%rd1336, %rd1334, %rd1335;
	shf.l.wrap.b32 	%r808, %r802, %r803, 25;
	shf.l.wrap.b32 	%r809, %r803, %r802, 25;
	mov.b64 	%rd1337, {%r809, %r808};
	xor.b64  	%rd1338, %rd1336, %rd1337;
	and.b64  	%rd1339, %rd1320, %rd1296;
	xor.b64  	%rd1340, %rd1320, %rd1296;
	and.b64  	%rd1341, %rd1340, %rd1272;
	or.b64  	%rd1342, %rd1341, %rd1339;
	add.s64 	%rd1343, %rd1338, %rd1342;
	add.s64 	%rd1344, %rd1343, %rd1332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r810,%dummy}, %rd1333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r811}, %rd1333;
	}
	shf.r.wrap.b32 	%r812, %r811, %r810, 14;
	shf.r.wrap.b32 	%r813, %r810, %r811, 14;
	mov.b64 	%rd1345, {%r813, %r812};
	shf.r.wrap.b32 	%r814, %r811, %r810, 18;
	shf.r.wrap.b32 	%r815, %r810, %r811, 18;
	mov.b64 	%rd1346, {%r815, %r814};
	xor.b64  	%rd1347, %rd1345, %rd1346;
	shf.l.wrap.b32 	%r816, %r810, %r811, 23;
	shf.l.wrap.b32 	%r817, %r811, %r810, 23;
	mov.b64 	%rd1348, {%r817, %r816};
	xor.b64  	%rd1349, %rd1347, %rd1348;
	xor.b64  	%rd1350, %rd1309, %rd1285;
	and.b64  	%rd1351, %rd1333, %rd1350;
	xor.b64  	%rd1352, %rd1351, %rd1285;
	add.s64 	%rd2274, %rd2242, %rd7;
	add.s64 	%rd1353, %rd16, %rd2274;
	add.s64 	%rd1354, %rd1353, %rd1261;
	add.s64 	%rd1355, %rd1354, %rd1352;
	add.s64 	%rd1356, %rd1355, %rd1349;
	add.s64 	%rd1357, %rd1356, %rd1272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r818,%dummy}, %rd1344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r819}, %rd1344;
	}
	shf.r.wrap.b32 	%r820, %r819, %r818, 28;
	shf.r.wrap.b32 	%r821, %r818, %r819, 28;
	mov.b64 	%rd1358, {%r821, %r820};
	shf.l.wrap.b32 	%r822, %r818, %r819, 30;
	shf.l.wrap.b32 	%r823, %r819, %r818, 30;
	mov.b64 	%rd1359, {%r823, %r822};
	xor.b64  	%rd1360, %rd1358, %rd1359;
	shf.l.wrap.b32 	%r824, %r818, %r819, 25;
	shf.l.wrap.b32 	%r825, %r819, %r818, 25;
	mov.b64 	%rd1361, {%r825, %r824};
	xor.b64  	%rd1362, %rd1360, %rd1361;
	and.b64  	%rd1363, %rd1344, %rd1320;
	xor.b64  	%rd1364, %rd1344, %rd1320;
	and.b64  	%rd1365, %rd1364, %rd1296;
	or.b64  	%rd1366, %rd1365, %rd1363;
	add.s64 	%rd1367, %rd1362, %rd1366;
	add.s64 	%rd1368, %rd1367, %rd1356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r826,%dummy}, %rd1357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r827}, %rd1357;
	}
	shf.r.wrap.b32 	%r828, %r827, %r826, 14;
	shf.r.wrap.b32 	%r829, %r826, %r827, 14;
	mov.b64 	%rd1369, {%r829, %r828};
	shf.r.wrap.b32 	%r830, %r827, %r826, 18;
	shf.r.wrap.b32 	%r831, %r826, %r827, 18;
	mov.b64 	%rd1370, {%r831, %r830};
	xor.b64  	%rd1371, %rd1369, %rd1370;
	shf.l.wrap.b32 	%r832, %r826, %r827, 23;
	shf.l.wrap.b32 	%r833, %r827, %r826, 23;
	mov.b64 	%rd1372, {%r833, %r832};
	xor.b64  	%rd1373, %rd1371, %rd1372;
	xor.b64  	%rd1374, %rd1333, %rd1309;
	and.b64  	%rd1375, %rd1357, %rd1374;
	xor.b64  	%rd1376, %rd1375, %rd1309;
	add.s64 	%rd2275, %rd2243, %rd6;
	add.s64 	%rd1377, %rd17, %rd2275;
	add.s64 	%rd1378, %rd1377, %rd1285;
	add.s64 	%rd1379, %rd1378, %rd1376;
	add.s64 	%rd1380, %rd1379, %rd1373;
	add.s64 	%rd1381, %rd1380, %rd1296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r834,%dummy}, %rd1368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r835}, %rd1368;
	}
	shf.r.wrap.b32 	%r836, %r835, %r834, 28;
	shf.r.wrap.b32 	%r837, %r834, %r835, 28;
	mov.b64 	%rd1382, {%r837, %r836};
	shf.l.wrap.b32 	%r838, %r834, %r835, 30;
	shf.l.wrap.b32 	%r839, %r835, %r834, 30;
	mov.b64 	%rd1383, {%r839, %r838};
	xor.b64  	%rd1384, %rd1382, %rd1383;
	shf.l.wrap.b32 	%r840, %r834, %r835, 25;
	shf.l.wrap.b32 	%r841, %r835, %r834, 25;
	mov.b64 	%rd1385, {%r841, %r840};
	xor.b64  	%rd1386, %rd1384, %rd1385;
	and.b64  	%rd1387, %rd1368, %rd1344;
	xor.b64  	%rd1388, %rd1368, %rd1344;
	and.b64  	%rd1389, %rd1388, %rd1320;
	or.b64  	%rd1390, %rd1389, %rd1387;
	add.s64 	%rd1391, %rd1386, %rd1390;
	add.s64 	%rd1392, %rd1391, %rd1380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r842,%dummy}, %rd1381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r843}, %rd1381;
	}
	shf.r.wrap.b32 	%r844, %r843, %r842, 14;
	shf.r.wrap.b32 	%r845, %r842, %r843, 14;
	mov.b64 	%rd1393, {%r845, %r844};
	shf.r.wrap.b32 	%r846, %r843, %r842, 18;
	shf.r.wrap.b32 	%r847, %r842, %r843, 18;
	mov.b64 	%rd1394, {%r847, %r846};
	xor.b64  	%rd1395, %rd1393, %rd1394;
	shf.l.wrap.b32 	%r848, %r842, %r843, 23;
	shf.l.wrap.b32 	%r849, %r843, %r842, 23;
	mov.b64 	%rd1396, {%r849, %r848};
	xor.b64  	%rd1397, %rd1395, %rd1396;
	xor.b64  	%rd1398, %rd1357, %rd1333;
	and.b64  	%rd1399, %rd1381, %rd1398;
	xor.b64  	%rd1400, %rd1399, %rd1333;
	add.s64 	%rd2276, %rd2244, %rd2;
	add.s64 	%rd1401, %rd18, %rd2276;
	add.s64 	%rd1402, %rd1401, %rd1309;
	add.s64 	%rd1403, %rd1402, %rd1400;
	add.s64 	%rd1404, %rd1403, %rd1397;
	add.s64 	%rd1405, %rd1404, %rd1320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r850,%dummy}, %rd1392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r851}, %rd1392;
	}
	shf.r.wrap.b32 	%r852, %r851, %r850, 28;
	shf.r.wrap.b32 	%r853, %r850, %r851, 28;
	mov.b64 	%rd1406, {%r853, %r852};
	shf.l.wrap.b32 	%r854, %r850, %r851, 30;
	shf.l.wrap.b32 	%r855, %r851, %r850, 30;
	mov.b64 	%rd1407, {%r855, %r854};
	xor.b64  	%rd1408, %rd1406, %rd1407;
	shf.l.wrap.b32 	%r856, %r850, %r851, 25;
	shf.l.wrap.b32 	%r857, %r851, %r850, 25;
	mov.b64 	%rd1409, {%r857, %r856};
	xor.b64  	%rd1410, %rd1408, %rd1409;
	and.b64  	%rd1411, %rd1392, %rd1368;
	xor.b64  	%rd1412, %rd1392, %rd1368;
	and.b64  	%rd1413, %rd1412, %rd1344;
	or.b64  	%rd1414, %rd1413, %rd1411;
	add.s64 	%rd1415, %rd1410, %rd1414;
	add.s64 	%rd1416, %rd1415, %rd1404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r858,%dummy}, %rd1405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r859}, %rd1405;
	}
	shf.r.wrap.b32 	%r860, %r859, %r858, 14;
	shf.r.wrap.b32 	%r861, %r858, %r859, 14;
	mov.b64 	%rd1417, {%r861, %r860};
	shf.r.wrap.b32 	%r862, %r859, %r858, 18;
	shf.r.wrap.b32 	%r863, %r858, %r859, 18;
	mov.b64 	%rd1418, {%r863, %r862};
	xor.b64  	%rd1419, %rd1417, %rd1418;
	shf.l.wrap.b32 	%r864, %r858, %r859, 23;
	shf.l.wrap.b32 	%r865, %r859, %r858, 23;
	mov.b64 	%rd1420, {%r865, %r864};
	xor.b64  	%rd1421, %rd1419, %rd1420;
	xor.b64  	%rd1422, %rd1381, %rd1357;
	and.b64  	%rd1423, %rd1405, %rd1422;
	xor.b64  	%rd1424, %rd1423, %rd1357;
	add.s64 	%rd1425, %rd19, %rd1333;
	add.s64 	%rd1426, %rd1425, %rd1424;
	add.s64 	%rd1427, %rd1426, %rd1421;
	add.s64 	%rd1428, %rd1427, %rd1344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r866,%dummy}, %rd1416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r867}, %rd1416;
	}
	shf.r.wrap.b32 	%r868, %r867, %r866, 28;
	shf.r.wrap.b32 	%r869, %r866, %r867, 28;
	mov.b64 	%rd1429, {%r869, %r868};
	shf.l.wrap.b32 	%r870, %r866, %r867, 30;
	shf.l.wrap.b32 	%r871, %r867, %r866, 30;
	mov.b64 	%rd1430, {%r871, %r870};
	xor.b64  	%rd1431, %rd1429, %rd1430;
	shf.l.wrap.b32 	%r872, %r866, %r867, 25;
	shf.l.wrap.b32 	%r873, %r867, %r866, 25;
	mov.b64 	%rd1432, {%r873, %r872};
	xor.b64  	%rd1433, %rd1431, %rd1432;
	and.b64  	%rd1434, %rd1416, %rd1392;
	xor.b64  	%rd1435, %rd1416, %rd1392;
	and.b64  	%rd1436, %rd1435, %rd1368;
	or.b64  	%rd1437, %rd1436, %rd1434;
	add.s64 	%rd1438, %rd1433, %rd1437;
	add.s64 	%rd1439, %rd1438, %rd1427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r874,%dummy}, %rd1428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r875}, %rd1428;
	}
	shf.r.wrap.b32 	%r876, %r875, %r874, 14;
	shf.r.wrap.b32 	%r877, %r874, %r875, 14;
	mov.b64 	%rd1440, {%r877, %r876};
	shf.r.wrap.b32 	%r878, %r875, %r874, 18;
	shf.r.wrap.b32 	%r879, %r874, %r875, 18;
	mov.b64 	%rd1441, {%r879, %r878};
	xor.b64  	%rd1442, %rd1440, %rd1441;
	shf.l.wrap.b32 	%r880, %r874, %r875, 23;
	shf.l.wrap.b32 	%r881, %r875, %r874, 23;
	mov.b64 	%rd1443, {%r881, %r880};
	xor.b64  	%rd1444, %rd1442, %rd1443;
	xor.b64  	%rd1445, %rd1405, %rd1381;
	and.b64  	%rd1446, %rd1428, %rd1445;
	xor.b64  	%rd1447, %rd1446, %rd1381;
	add.s64 	%rd1448, %rd1357, %rd20;
	add.s64 	%rd1449, %rd1448, %rd1447;
	add.s64 	%rd1450, %rd1449, %rd1444;
	add.s64 	%rd1451, %rd1450, %rd1368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r882,%dummy}, %rd1439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r883}, %rd1439;
	}
	shf.r.wrap.b32 	%r884, %r883, %r882, 28;
	shf.r.wrap.b32 	%r885, %r882, %r883, 28;
	mov.b64 	%rd1452, {%r885, %r884};
	shf.l.wrap.b32 	%r886, %r882, %r883, 30;
	shf.l.wrap.b32 	%r887, %r883, %r882, 30;
	mov.b64 	%rd1453, {%r887, %r886};
	xor.b64  	%rd1454, %rd1452, %rd1453;
	shf.l.wrap.b32 	%r888, %r882, %r883, 25;
	shf.l.wrap.b32 	%r889, %r883, %r882, 25;
	mov.b64 	%rd1455, {%r889, %r888};
	xor.b64  	%rd1456, %rd1454, %rd1455;
	and.b64  	%rd1457, %rd1439, %rd1416;
	xor.b64  	%rd1458, %rd1439, %rd1416;
	and.b64  	%rd1459, %rd1458, %rd1392;
	or.b64  	%rd1460, %rd1459, %rd1457;
	add.s64 	%rd1461, %rd1456, %rd1460;
	add.s64 	%rd1462, %rd1461, %rd1450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r890,%dummy}, %rd1451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r891}, %rd1451;
	}
	shf.r.wrap.b32 	%r892, %r891, %r890, 14;
	shf.r.wrap.b32 	%r893, %r890, %r891, 14;
	mov.b64 	%rd1463, {%r893, %r892};
	shf.r.wrap.b32 	%r894, %r891, %r890, 18;
	shf.r.wrap.b32 	%r895, %r890, %r891, 18;
	mov.b64 	%rd1464, {%r895, %r894};
	xor.b64  	%rd1465, %rd1463, %rd1464;
	shf.l.wrap.b32 	%r896, %r890, %r891, 23;
	shf.l.wrap.b32 	%r897, %r891, %r890, 23;
	mov.b64 	%rd1466, {%r897, %r896};
	xor.b64  	%rd1467, %rd1465, %rd1466;
	xor.b64  	%rd1468, %rd1428, %rd1405;
	and.b64  	%rd1469, %rd1451, %rd1468;
	xor.b64  	%rd1470, %rd1469, %rd1405;
	add.s64 	%rd1471, %rd1381, %rd21;
	add.s64 	%rd1472, %rd1471, %rd1470;
	add.s64 	%rd1473, %rd1472, %rd1467;
	add.s64 	%rd1474, %rd1473, %rd1392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r898,%dummy}, %rd1462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r899}, %rd1462;
	}
	shf.r.wrap.b32 	%r900, %r899, %r898, 28;
	shf.r.wrap.b32 	%r901, %r898, %r899, 28;
	mov.b64 	%rd1475, {%r901, %r900};
	shf.l.wrap.b32 	%r902, %r898, %r899, 30;
	shf.l.wrap.b32 	%r903, %r899, %r898, 30;
	mov.b64 	%rd1476, {%r903, %r902};
	xor.b64  	%rd1477, %rd1475, %rd1476;
	shf.l.wrap.b32 	%r904, %r898, %r899, 25;
	shf.l.wrap.b32 	%r905, %r899, %r898, 25;
	mov.b64 	%rd1478, {%r905, %r904};
	xor.b64  	%rd1479, %rd1477, %rd1478;
	and.b64  	%rd1480, %rd1462, %rd1439;
	xor.b64  	%rd1481, %rd1462, %rd1439;
	and.b64  	%rd1482, %rd1481, %rd1416;
	or.b64  	%rd1483, %rd1482, %rd1480;
	add.s64 	%rd1484, %rd1479, %rd1483;
	add.s64 	%rd1485, %rd1484, %rd1473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r906,%dummy}, %rd1474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r907}, %rd1474;
	}
	shf.r.wrap.b32 	%r908, %r907, %r906, 14;
	shf.r.wrap.b32 	%r909, %r906, %r907, 14;
	mov.b64 	%rd1486, {%r909, %r908};
	shf.r.wrap.b32 	%r910, %r907, %r906, 18;
	shf.r.wrap.b32 	%r911, %r906, %r907, 18;
	mov.b64 	%rd1487, {%r911, %r910};
	xor.b64  	%rd1488, %rd1486, %rd1487;
	shf.l.wrap.b32 	%r912, %r906, %r907, 23;
	shf.l.wrap.b32 	%r913, %r907, %r906, 23;
	mov.b64 	%rd1489, {%r913, %r912};
	xor.b64  	%rd1490, %rd1488, %rd1489;
	xor.b64  	%rd1491, %rd1451, %rd1428;
	and.b64  	%rd1492, %rd1474, %rd1491;
	xor.b64  	%rd1493, %rd1492, %rd1428;
	add.s64 	%rd1494, %rd1405, %rd22;
	add.s64 	%rd1495, %rd1494, %rd1493;
	add.s64 	%rd1496, %rd1495, %rd1490;
	add.s64 	%rd1497, %rd1496, %rd1416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r914,%dummy}, %rd1485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r915}, %rd1485;
	}
	shf.r.wrap.b32 	%r916, %r915, %r914, 28;
	shf.r.wrap.b32 	%r917, %r914, %r915, 28;
	mov.b64 	%rd1498, {%r917, %r916};
	shf.l.wrap.b32 	%r918, %r914, %r915, 30;
	shf.l.wrap.b32 	%r919, %r915, %r914, 30;
	mov.b64 	%rd1499, {%r919, %r918};
	xor.b64  	%rd1500, %rd1498, %rd1499;
	shf.l.wrap.b32 	%r920, %r914, %r915, 25;
	shf.l.wrap.b32 	%r921, %r915, %r914, 25;
	mov.b64 	%rd1501, {%r921, %r920};
	xor.b64  	%rd1502, %rd1500, %rd1501;
	and.b64  	%rd1503, %rd1485, %rd1462;
	xor.b64  	%rd1504, %rd1485, %rd1462;
	and.b64  	%rd1505, %rd1504, %rd1439;
	or.b64  	%rd1506, %rd1505, %rd1503;
	add.s64 	%rd1507, %rd1502, %rd1506;
	add.s64 	%rd1508, %rd1507, %rd1496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r922,%dummy}, %rd1497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r923}, %rd1497;
	}
	shf.r.wrap.b32 	%r924, %r923, %r922, 14;
	shf.r.wrap.b32 	%r925, %r922, %r923, 14;
	mov.b64 	%rd1509, {%r925, %r924};
	shf.r.wrap.b32 	%r926, %r923, %r922, 18;
	shf.r.wrap.b32 	%r927, %r922, %r923, 18;
	mov.b64 	%rd1510, {%r927, %r926};
	xor.b64  	%rd1511, %rd1509, %rd1510;
	shf.l.wrap.b32 	%r928, %r922, %r923, 23;
	shf.l.wrap.b32 	%r929, %r923, %r922, 23;
	mov.b64 	%rd1512, {%r929, %r928};
	xor.b64  	%rd1513, %rd1511, %rd1512;
	xor.b64  	%rd1514, %rd1474, %rd1451;
	and.b64  	%rd1515, %rd1497, %rd1514;
	xor.b64  	%rd1516, %rd1515, %rd1451;
	add.s64 	%rd1517, %rd1428, %rd23;
	add.s64 	%rd1518, %rd1517, %rd1516;
	add.s64 	%rd1519, %rd1518, %rd1513;
	add.s64 	%rd2268, %rd1519, %rd1439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r930,%dummy}, %rd1508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r931}, %rd1508;
	}
	shf.r.wrap.b32 	%r932, %r931, %r930, 28;
	shf.r.wrap.b32 	%r933, %r930, %r931, 28;
	mov.b64 	%rd1520, {%r933, %r932};
	shf.l.wrap.b32 	%r934, %r930, %r931, 30;
	shf.l.wrap.b32 	%r935, %r931, %r930, 30;
	mov.b64 	%rd1521, {%r935, %r934};
	xor.b64  	%rd1522, %rd1520, %rd1521;
	shf.l.wrap.b32 	%r936, %r930, %r931, 25;
	shf.l.wrap.b32 	%r937, %r931, %r930, 25;
	mov.b64 	%rd1523, {%r937, %r936};
	xor.b64  	%rd1524, %rd1522, %rd1523;
	and.b64  	%rd1525, %rd1508, %rd1485;
	xor.b64  	%rd1526, %rd1508, %rd1485;
	and.b64  	%rd1527, %rd1526, %rd1462;
	or.b64  	%rd1528, %rd1527, %rd1525;
	add.s64 	%rd1529, %rd1524, %rd1528;
	add.s64 	%rd2264, %rd1529, %rd1519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r938,%dummy}, %rd2268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r939}, %rd2268;
	}
	shf.r.wrap.b32 	%r940, %r939, %r938, 14;
	shf.r.wrap.b32 	%r941, %r938, %r939, 14;
	mov.b64 	%rd1530, {%r941, %r940};
	shf.r.wrap.b32 	%r942, %r939, %r938, 18;
	shf.r.wrap.b32 	%r943, %r938, %r939, 18;
	mov.b64 	%rd1531, {%r943, %r942};
	xor.b64  	%rd1532, %rd1530, %rd1531;
	shf.l.wrap.b32 	%r944, %r938, %r939, 23;
	shf.l.wrap.b32 	%r945, %r939, %r938, 23;
	mov.b64 	%rd1533, {%r945, %r944};
	xor.b64  	%rd1534, %rd1532, %rd1533;
	xor.b64  	%rd1535, %rd1497, %rd1474;
	and.b64  	%rd1536, %rd2268, %rd1535;
	xor.b64  	%rd1537, %rd1536, %rd1474;
	add.s64 	%rd1538, %rd1451, %rd24;
	add.s64 	%rd1539, %rd1538, %rd1537;
	add.s64 	%rd1540, %rd1539, %rd1534;
	add.s64 	%rd2267, %rd1540, %rd1462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r946,%dummy}, %rd2264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r947}, %rd2264;
	}
	shf.r.wrap.b32 	%r948, %r947, %r946, 28;
	shf.r.wrap.b32 	%r949, %r946, %r947, 28;
	mov.b64 	%rd1541, {%r949, %r948};
	shf.l.wrap.b32 	%r950, %r946, %r947, 30;
	shf.l.wrap.b32 	%r951, %r947, %r946, 30;
	mov.b64 	%rd1542, {%r951, %r950};
	xor.b64  	%rd1543, %rd1541, %rd1542;
	shf.l.wrap.b32 	%r952, %r946, %r947, 25;
	shf.l.wrap.b32 	%r953, %r947, %r946, 25;
	mov.b64 	%rd1544, {%r953, %r952};
	xor.b64  	%rd1545, %rd1543, %rd1544;
	and.b64  	%rd1546, %rd2264, %rd1508;
	xor.b64  	%rd1547, %rd2264, %rd1508;
	and.b64  	%rd1548, %rd1547, %rd1485;
	or.b64  	%rd1549, %rd1548, %rd1546;
	add.s64 	%rd1550, %rd1545, %rd1549;
	add.s64 	%rd2263, %rd1550, %rd1540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r954,%dummy}, %rd2267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r955}, %rd2267;
	}
	shf.r.wrap.b32 	%r956, %r955, %r954, 14;
	shf.r.wrap.b32 	%r957, %r954, %r955, 14;
	mov.b64 	%rd1551, {%r957, %r956};
	shf.r.wrap.b32 	%r958, %r955, %r954, 18;
	shf.r.wrap.b32 	%r959, %r954, %r955, 18;
	mov.b64 	%rd1552, {%r959, %r958};
	xor.b64  	%rd1553, %rd1551, %rd1552;
	shf.l.wrap.b32 	%r960, %r954, %r955, 23;
	shf.l.wrap.b32 	%r961, %r955, %r954, 23;
	mov.b64 	%rd1554, {%r961, %r960};
	xor.b64  	%rd1555, %rd1553, %rd1554;
	xor.b64  	%rd1556, %rd2268, %rd1497;
	and.b64  	%rd1557, %rd2267, %rd1556;
	xor.b64  	%rd1558, %rd1557, %rd1497;
	add.s64 	%rd1559, %rd1474, %rd25;
	add.s64 	%rd1560, %rd1559, %rd1558;
	add.s64 	%rd1561, %rd1560, %rd1555;
	add.s64 	%rd2266, %rd1561, %rd1485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r962,%dummy}, %rd2263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r963}, %rd2263;
	}
	shf.r.wrap.b32 	%r964, %r963, %r962, 28;
	shf.r.wrap.b32 	%r965, %r962, %r963, 28;
	mov.b64 	%rd1562, {%r965, %r964};
	shf.l.wrap.b32 	%r966, %r962, %r963, 30;
	shf.l.wrap.b32 	%r967, %r963, %r962, 30;
	mov.b64 	%rd1563, {%r967, %r966};
	xor.b64  	%rd1564, %rd1562, %rd1563;
	shf.l.wrap.b32 	%r968, %r962, %r963, 25;
	shf.l.wrap.b32 	%r969, %r963, %r962, 25;
	mov.b64 	%rd1565, {%r969, %r968};
	xor.b64  	%rd1566, %rd1564, %rd1565;
	and.b64  	%rd1567, %rd2263, %rd2264;
	xor.b64  	%rd1568, %rd2263, %rd2264;
	and.b64  	%rd1569, %rd1568, %rd1508;
	or.b64  	%rd1570, %rd1569, %rd1567;
	add.s64 	%rd1571, %rd1566, %rd1570;
	add.s64 	%rd2262, %rd1571, %rd1561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r970,%dummy}, %rd2266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r971}, %rd2266;
	}
	shf.r.wrap.b32 	%r972, %r971, %r970, 14;
	shf.r.wrap.b32 	%r973, %r970, %r971, 14;
	mov.b64 	%rd1572, {%r973, %r972};
	shf.r.wrap.b32 	%r974, %r971, %r970, 18;
	shf.r.wrap.b32 	%r975, %r970, %r971, 18;
	mov.b64 	%rd1573, {%r975, %r974};
	xor.b64  	%rd1574, %rd1572, %rd1573;
	shf.l.wrap.b32 	%r976, %r970, %r971, 23;
	shf.l.wrap.b32 	%r977, %r971, %r970, 23;
	mov.b64 	%rd1575, {%r977, %r976};
	xor.b64  	%rd1576, %rd1574, %rd1575;
	xor.b64  	%rd1577, %rd2267, %rd2268;
	and.b64  	%rd1578, %rd2266, %rd1577;
	xor.b64  	%rd1579, %rd1578, %rd2268;
	add.s64 	%rd1580, %rd26, %rd1497;
	add.s64 	%rd1581, %rd1580, %rd1579;
	add.s64 	%rd1582, %rd1581, %rd1576;
	add.s64 	%rd2265, %rd1582, %rd1508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r978,%dummy}, %rd2262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r979}, %rd2262;
	}
	shf.r.wrap.b32 	%r980, %r979, %r978, 28;
	shf.r.wrap.b32 	%r981, %r978, %r979, 28;
	mov.b64 	%rd1583, {%r981, %r980};
	shf.l.wrap.b32 	%r982, %r978, %r979, 30;
	shf.l.wrap.b32 	%r983, %r979, %r978, 30;
	mov.b64 	%rd1584, {%r983, %r982};
	xor.b64  	%rd1585, %rd1583, %rd1584;
	shf.l.wrap.b32 	%r984, %r978, %r979, 25;
	shf.l.wrap.b32 	%r985, %r979, %r978, 25;
	mov.b64 	%rd1586, {%r985, %r984};
	xor.b64  	%rd1587, %rd1585, %rd1586;
	and.b64  	%rd1588, %rd2262, %rd2263;
	xor.b64  	%rd1589, %rd2262, %rd2263;
	and.b64  	%rd1590, %rd1589, %rd2264;
	or.b64  	%rd1591, %rd1590, %rd1588;
	add.s64 	%rd1592, %rd1587, %rd1591;
	add.s64 	%rd2261, %rd1592, %rd1582;
	mov.u64 	%rd2260, -9223372036854775808;
	mov.u64 	%rd2254, 0;
	mov.u64 	%rd2253, 1536;
	mov.u32 	%r1446, 16;
	mov.u64 	%rd2255, %rd2254;
	mov.u64 	%rd2256, %rd2254;
	mov.u64 	%rd2257, %rd2254;
	mov.u64 	%rd2258, %rd2254;
	mov.u64 	%rd2259, %rd2254;

BB4_6:
	mov.u64 	%rd2212, k_sha512;
	shr.u64 	%rd1593, %rd2254, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r986}, %rd2254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r987,%dummy}, %rd2254;
	}
	shf.l.wrap.b32 	%r988, %r987, %r986, 3;
	shf.l.wrap.b32 	%r989, %r986, %r987, 3;
	mov.b64 	%rd1594, {%r989, %r988};
	xor.b64  	%rd1595, %rd1594, %rd1593;
	shf.r.wrap.b32 	%r990, %r986, %r987, 19;
	shf.r.wrap.b32 	%r991, %r987, %r986, 19;
	mov.b64 	%rd1596, {%r991, %r990};
	xor.b64  	%rd1597, %rd1595, %rd1596;
	shr.u64 	%rd1598, %rd2270, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r992,%dummy}, %rd2270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r993}, %rd2270;
	}
	shf.r.wrap.b32 	%r994, %r993, %r992, 8;
	shf.r.wrap.b32 	%r995, %r992, %r993, 8;
	mov.b64 	%rd1599, {%r995, %r994};
	xor.b64  	%rd1600, %rd1599, %rd1598;
	shf.r.wrap.b32 	%r996, %r993, %r992, 1;
	shf.r.wrap.b32 	%r997, %r992, %r993, 1;
	mov.b64 	%rd1601, {%r997, %r996};
	xor.b64  	%rd1602, %rd1600, %rd1601;
	add.s64 	%rd1603, %rd1602, %rd2269;
	add.s64 	%rd1604, %rd1603, %rd2259;
	add.s64 	%rd2269, %rd1604, %rd1597;
	shr.u64 	%rd1605, %rd2253, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r998}, %rd2253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r999,%dummy}, %rd2253;
	}
	shf.l.wrap.b32 	%r1000, %r999, %r998, 3;
	shf.l.wrap.b32 	%r1001, %r998, %r999, 3;
	mov.b64 	%rd1606, {%r1001, %r1000};
	xor.b64  	%rd1607, %rd1606, %rd1605;
	shf.r.wrap.b32 	%r1002, %r998, %r999, 19;
	shf.r.wrap.b32 	%r1003, %r999, %r998, 19;
	mov.b64 	%rd1608, {%r1003, %r1002};
	xor.b64  	%rd1609, %rd1607, %rd1608;
	shr.u64 	%rd1610, %rd2271, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1004,%dummy}, %rd2271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1005}, %rd2271;
	}
	shf.r.wrap.b32 	%r1006, %r1005, %r1004, 8;
	shf.r.wrap.b32 	%r1007, %r1004, %r1005, 8;
	mov.b64 	%rd1611, {%r1007, %r1006};
	xor.b64  	%rd1612, %rd1611, %rd1610;
	shf.r.wrap.b32 	%r1008, %r1005, %r1004, 1;
	shf.r.wrap.b32 	%r1009, %r1004, %r1005, 1;
	mov.b64 	%rd1613, {%r1009, %r1008};
	xor.b64  	%rd1614, %rd1612, %rd1613;
	add.s64 	%rd1615, %rd1614, %rd2270;
	add.s64 	%rd1616, %rd1615, %rd2258;
	add.s64 	%rd2270, %rd1616, %rd1609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1010,%dummy}, %rd2269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1011}, %rd2269;
	}
	shf.r.wrap.b32 	%r1012, %r1011, %r1010, 19;
	shf.r.wrap.b32 	%r1013, %r1010, %r1011, 19;
	mov.b64 	%rd1617, {%r1013, %r1012};
	shf.l.wrap.b32 	%r1014, %r1010, %r1011, 3;
	shf.l.wrap.b32 	%r1015, %r1011, %r1010, 3;
	mov.b64 	%rd1618, {%r1015, %r1014};
	shr.u64 	%rd1619, %rd2269, 6;
	xor.b64  	%rd1620, %rd1618, %rd1619;
	xor.b64  	%rd1621, %rd1620, %rd1617;
	shr.u64 	%rd1622, %rd2272, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1016,%dummy}, %rd2272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1017}, %rd2272;
	}
	shf.r.wrap.b32 	%r1018, %r1017, %r1016, 8;
	shf.r.wrap.b32 	%r1019, %r1016, %r1017, 8;
	mov.b64 	%rd1623, {%r1019, %r1018};
	xor.b64  	%rd1624, %rd1623, %rd1622;
	shf.r.wrap.b32 	%r1020, %r1017, %r1016, 1;
	shf.r.wrap.b32 	%r1021, %r1016, %r1017, 1;
	mov.b64 	%rd1625, {%r1021, %r1020};
	xor.b64  	%rd1626, %rd1624, %rd1625;
	add.s64 	%rd1627, %rd1626, %rd2271;
	add.s64 	%rd1628, %rd1627, %rd2257;
	add.s64 	%rd2271, %rd1628, %rd1621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1022,%dummy}, %rd2270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1023}, %rd2270;
	}
	shf.r.wrap.b32 	%r1024, %r1023, %r1022, 19;
	shf.r.wrap.b32 	%r1025, %r1022, %r1023, 19;
	mov.b64 	%rd1629, {%r1025, %r1024};
	shf.l.wrap.b32 	%r1026, %r1022, %r1023, 3;
	shf.l.wrap.b32 	%r1027, %r1023, %r1022, 3;
	mov.b64 	%rd1630, {%r1027, %r1026};
	shr.u64 	%rd1631, %rd2270, 6;
	xor.b64  	%rd1632, %rd1630, %rd1631;
	xor.b64  	%rd1633, %rd1632, %rd1629;
	shr.u64 	%rd1634, %rd2273, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1028,%dummy}, %rd2273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1029}, %rd2273;
	}
	shf.r.wrap.b32 	%r1030, %r1029, %r1028, 8;
	shf.r.wrap.b32 	%r1031, %r1028, %r1029, 8;
	mov.b64 	%rd1635, {%r1031, %r1030};
	xor.b64  	%rd1636, %rd1635, %rd1634;
	shf.r.wrap.b32 	%r1032, %r1029, %r1028, 1;
	shf.r.wrap.b32 	%r1033, %r1028, %r1029, 1;
	mov.b64 	%rd1637, {%r1033, %r1032};
	xor.b64  	%rd1638, %rd1636, %rd1637;
	add.s64 	%rd1639, %rd1638, %rd2272;
	add.s64 	%rd1640, %rd1639, %rd2256;
	add.s64 	%rd2272, %rd1640, %rd1633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1034,%dummy}, %rd2271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1035}, %rd2271;
	}
	shf.r.wrap.b32 	%r1036, %r1035, %r1034, 19;
	shf.r.wrap.b32 	%r1037, %r1034, %r1035, 19;
	mov.b64 	%rd1641, {%r1037, %r1036};
	shf.l.wrap.b32 	%r1038, %r1034, %r1035, 3;
	shf.l.wrap.b32 	%r1039, %r1035, %r1034, 3;
	mov.b64 	%rd1642, {%r1039, %r1038};
	shr.u64 	%rd1643, %rd2271, 6;
	xor.b64  	%rd1644, %rd1642, %rd1643;
	xor.b64  	%rd1645, %rd1644, %rd1641;
	shr.u64 	%rd1646, %rd2274, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1040,%dummy}, %rd2274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1041}, %rd2274;
	}
	shf.r.wrap.b32 	%r1042, %r1041, %r1040, 8;
	shf.r.wrap.b32 	%r1043, %r1040, %r1041, 8;
	mov.b64 	%rd1647, {%r1043, %r1042};
	xor.b64  	%rd1648, %rd1647, %rd1646;
	shf.r.wrap.b32 	%r1044, %r1041, %r1040, 1;
	shf.r.wrap.b32 	%r1045, %r1040, %r1041, 1;
	mov.b64 	%rd1649, {%r1045, %r1044};
	xor.b64  	%rd1650, %rd1648, %rd1649;
	add.s64 	%rd1651, %rd1650, %rd2273;
	add.s64 	%rd1652, %rd1651, %rd2255;
	add.s64 	%rd2273, %rd1652, %rd1645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1046,%dummy}, %rd2272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1047}, %rd2272;
	}
	shf.r.wrap.b32 	%r1048, %r1047, %r1046, 19;
	shf.r.wrap.b32 	%r1049, %r1046, %r1047, 19;
	mov.b64 	%rd1653, {%r1049, %r1048};
	shf.l.wrap.b32 	%r1050, %r1046, %r1047, 3;
	shf.l.wrap.b32 	%r1051, %r1047, %r1046, 3;
	mov.b64 	%rd1654, {%r1051, %r1050};
	shr.u64 	%rd1655, %rd2272, 6;
	xor.b64  	%rd1656, %rd1654, %rd1655;
	xor.b64  	%rd1657, %rd1656, %rd1653;
	shr.u64 	%rd1658, %rd2275, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1052,%dummy}, %rd2275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1053}, %rd2275;
	}
	shf.r.wrap.b32 	%r1054, %r1053, %r1052, 8;
	shf.r.wrap.b32 	%r1055, %r1052, %r1053, 8;
	mov.b64 	%rd1659, {%r1055, %r1054};
	xor.b64  	%rd1660, %rd1659, %rd1658;
	shf.r.wrap.b32 	%r1056, %r1053, %r1052, 1;
	shf.r.wrap.b32 	%r1057, %r1052, %r1053, 1;
	mov.b64 	%rd1661, {%r1057, %r1056};
	xor.b64  	%rd1662, %rd1660, %rd1661;
	add.s64 	%rd1663, %rd1662, %rd2274;
	add.s64 	%rd1664, %rd1663, %rd2254;
	add.s64 	%rd2274, %rd1664, %rd1657;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1058,%dummy}, %rd2273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1059}, %rd2273;
	}
	shf.r.wrap.b32 	%r1060, %r1059, %r1058, 19;
	shf.r.wrap.b32 	%r1061, %r1058, %r1059, 19;
	mov.b64 	%rd1665, {%r1061, %r1060};
	shf.l.wrap.b32 	%r1062, %r1058, %r1059, 3;
	shf.l.wrap.b32 	%r1063, %r1059, %r1058, 3;
	mov.b64 	%rd1666, {%r1063, %r1062};
	shr.u64 	%rd1667, %rd2273, 6;
	xor.b64  	%rd1668, %rd1666, %rd1667;
	xor.b64  	%rd1669, %rd1668, %rd1665;
	shr.u64 	%rd1670, %rd2276, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1064,%dummy}, %rd2276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1065}, %rd2276;
	}
	shf.r.wrap.b32 	%r1066, %r1065, %r1064, 8;
	shf.r.wrap.b32 	%r1067, %r1064, %r1065, 8;
	mov.b64 	%rd1671, {%r1067, %r1066};
	xor.b64  	%rd1672, %rd1671, %rd1670;
	shf.r.wrap.b32 	%r1068, %r1065, %r1064, 1;
	shf.r.wrap.b32 	%r1069, %r1064, %r1065, 1;
	mov.b64 	%rd1673, {%r1069, %r1068};
	xor.b64  	%rd1674, %rd1672, %rd1673;
	add.s64 	%rd1675, %rd1674, %rd2275;
	add.s64 	%rd1676, %rd1675, %rd2253;
	add.s64 	%rd2275, %rd1676, %rd1669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1070,%dummy}, %rd2274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1071}, %rd2274;
	}
	shf.r.wrap.b32 	%r1072, %r1071, %r1070, 19;
	shf.r.wrap.b32 	%r1073, %r1070, %r1071, 19;
	mov.b64 	%rd1677, {%r1073, %r1072};
	shf.l.wrap.b32 	%r1074, %r1070, %r1071, 3;
	shf.l.wrap.b32 	%r1075, %r1071, %r1070, 3;
	mov.b64 	%rd1678, {%r1075, %r1074};
	shr.u64 	%rd1679, %rd2274, 6;
	xor.b64  	%rd1680, %rd1678, %rd1679;
	xor.b64  	%rd1681, %rd1680, %rd1677;
	shr.u64 	%rd1682, %rd2260, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1076,%dummy}, %rd2260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1077}, %rd2260;
	}
	shf.r.wrap.b32 	%r1078, %r1077, %r1076, 8;
	shf.r.wrap.b32 	%r1079, %r1076, %r1077, 8;
	mov.b64 	%rd1683, {%r1079, %r1078};
	xor.b64  	%rd1684, %rd1683, %rd1682;
	shf.r.wrap.b32 	%r1080, %r1077, %r1076, 1;
	shf.r.wrap.b32 	%r1081, %r1076, %r1077, 1;
	mov.b64 	%rd1685, {%r1081, %r1080};
	xor.b64  	%rd1686, %rd1684, %rd1685;
	add.s64 	%rd1687, %rd1686, %rd2276;
	add.s64 	%rd1688, %rd1687, %rd2269;
	add.s64 	%rd2276, %rd1688, %rd1681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1082,%dummy}, %rd2275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1083}, %rd2275;
	}
	shf.r.wrap.b32 	%r1084, %r1083, %r1082, 19;
	shf.r.wrap.b32 	%r1085, %r1082, %r1083, 19;
	mov.b64 	%rd1689, {%r1085, %r1084};
	shf.l.wrap.b32 	%r1086, %r1082, %r1083, 3;
	shf.l.wrap.b32 	%r1087, %r1083, %r1082, 3;
	mov.b64 	%rd1690, {%r1087, %r1086};
	shr.u64 	%rd1691, %rd2275, 6;
	xor.b64  	%rd1692, %rd1690, %rd1691;
	xor.b64  	%rd1693, %rd1692, %rd1689;
	shr.u64 	%rd1694, %rd2259, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1088,%dummy}, %rd2259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1089}, %rd2259;
	}
	shf.r.wrap.b32 	%r1090, %r1089, %r1088, 8;
	shf.r.wrap.b32 	%r1091, %r1088, %r1089, 8;
	mov.b64 	%rd1695, {%r1091, %r1090};
	xor.b64  	%rd1696, %rd1695, %rd1694;
	shf.r.wrap.b32 	%r1092, %r1089, %r1088, 1;
	shf.r.wrap.b32 	%r1093, %r1088, %r1089, 1;
	mov.b64 	%rd1697, {%r1093, %r1092};
	xor.b64  	%rd1698, %rd1696, %rd1697;
	add.s64 	%rd1699, %rd1698, %rd2260;
	add.s64 	%rd1700, %rd1699, %rd2270;
	add.s64 	%rd2260, %rd1700, %rd1693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1094,%dummy}, %rd2276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1095}, %rd2276;
	}
	shf.r.wrap.b32 	%r1096, %r1095, %r1094, 19;
	shf.r.wrap.b32 	%r1097, %r1094, %r1095, 19;
	mov.b64 	%rd1701, {%r1097, %r1096};
	shf.l.wrap.b32 	%r1098, %r1094, %r1095, 3;
	shf.l.wrap.b32 	%r1099, %r1095, %r1094, 3;
	mov.b64 	%rd1702, {%r1099, %r1098};
	shr.u64 	%rd1703, %rd2276, 6;
	xor.b64  	%rd1704, %rd1702, %rd1703;
	xor.b64  	%rd1705, %rd1704, %rd1701;
	shr.u64 	%rd1706, %rd2258, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1100,%dummy}, %rd2258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1101}, %rd2258;
	}
	shf.r.wrap.b32 	%r1102, %r1101, %r1100, 8;
	shf.r.wrap.b32 	%r1103, %r1100, %r1101, 8;
	mov.b64 	%rd1707, {%r1103, %r1102};
	xor.b64  	%rd1708, %rd1707, %rd1706;
	shf.r.wrap.b32 	%r1104, %r1101, %r1100, 1;
	shf.r.wrap.b32 	%r1105, %r1100, %r1101, 1;
	mov.b64 	%rd1709, {%r1105, %r1104};
	xor.b64  	%rd1710, %rd1708, %rd1709;
	add.s64 	%rd1711, %rd1710, %rd2259;
	add.s64 	%rd1712, %rd1711, %rd2271;
	add.s64 	%rd2259, %rd1712, %rd1705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1106,%dummy}, %rd2260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1107}, %rd2260;
	}
	shf.r.wrap.b32 	%r1108, %r1107, %r1106, 19;
	shf.r.wrap.b32 	%r1109, %r1106, %r1107, 19;
	mov.b64 	%rd1713, {%r1109, %r1108};
	shf.l.wrap.b32 	%r1110, %r1106, %r1107, 3;
	shf.l.wrap.b32 	%r1111, %r1107, %r1106, 3;
	mov.b64 	%rd1714, {%r1111, %r1110};
	shr.u64 	%rd1715, %rd2260, 6;
	xor.b64  	%rd1716, %rd1714, %rd1715;
	xor.b64  	%rd1717, %rd1716, %rd1713;
	shr.u64 	%rd1718, %rd2257, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1112,%dummy}, %rd2257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1113}, %rd2257;
	}
	shf.r.wrap.b32 	%r1114, %r1113, %r1112, 8;
	shf.r.wrap.b32 	%r1115, %r1112, %r1113, 8;
	mov.b64 	%rd1719, {%r1115, %r1114};
	xor.b64  	%rd1720, %rd1719, %rd1718;
	shf.r.wrap.b32 	%r1116, %r1113, %r1112, 1;
	shf.r.wrap.b32 	%r1117, %r1112, %r1113, 1;
	mov.b64 	%rd1721, {%r1117, %r1116};
	xor.b64  	%rd1722, %rd1720, %rd1721;
	add.s64 	%rd1723, %rd1722, %rd2258;
	add.s64 	%rd1724, %rd1723, %rd2272;
	add.s64 	%rd2258, %rd1724, %rd1717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1118,%dummy}, %rd2259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1119}, %rd2259;
	}
	shf.r.wrap.b32 	%r1120, %r1119, %r1118, 19;
	shf.r.wrap.b32 	%r1121, %r1118, %r1119, 19;
	mov.b64 	%rd1725, {%r1121, %r1120};
	shf.l.wrap.b32 	%r1122, %r1118, %r1119, 3;
	shf.l.wrap.b32 	%r1123, %r1119, %r1118, 3;
	mov.b64 	%rd1726, {%r1123, %r1122};
	shr.u64 	%rd1727, %rd2259, 6;
	xor.b64  	%rd1728, %rd1726, %rd1727;
	xor.b64  	%rd1729, %rd1728, %rd1725;
	shr.u64 	%rd1730, %rd2256, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1124,%dummy}, %rd2256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1125}, %rd2256;
	}
	shf.r.wrap.b32 	%r1126, %r1125, %r1124, 8;
	shf.r.wrap.b32 	%r1127, %r1124, %r1125, 8;
	mov.b64 	%rd1731, {%r1127, %r1126};
	xor.b64  	%rd1732, %rd1731, %rd1730;
	shf.r.wrap.b32 	%r1128, %r1125, %r1124, 1;
	shf.r.wrap.b32 	%r1129, %r1124, %r1125, 1;
	mov.b64 	%rd1733, {%r1129, %r1128};
	xor.b64  	%rd1734, %rd1732, %rd1733;
	add.s64 	%rd1735, %rd1734, %rd2257;
	add.s64 	%rd1736, %rd1735, %rd2273;
	add.s64 	%rd2257, %rd1736, %rd1729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1130,%dummy}, %rd2258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1131}, %rd2258;
	}
	shf.r.wrap.b32 	%r1132, %r1131, %r1130, 19;
	shf.r.wrap.b32 	%r1133, %r1130, %r1131, 19;
	mov.b64 	%rd1737, {%r1133, %r1132};
	shf.l.wrap.b32 	%r1134, %r1130, %r1131, 3;
	shf.l.wrap.b32 	%r1135, %r1131, %r1130, 3;
	mov.b64 	%rd1738, {%r1135, %r1134};
	shr.u64 	%rd1739, %rd2258, 6;
	xor.b64  	%rd1740, %rd1738, %rd1739;
	xor.b64  	%rd1741, %rd1740, %rd1737;
	shr.u64 	%rd1742, %rd2255, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1136,%dummy}, %rd2255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1137}, %rd2255;
	}
	shf.r.wrap.b32 	%r1138, %r1137, %r1136, 8;
	shf.r.wrap.b32 	%r1139, %r1136, %r1137, 8;
	mov.b64 	%rd1743, {%r1139, %r1138};
	xor.b64  	%rd1744, %rd1743, %rd1742;
	shf.r.wrap.b32 	%r1140, %r1137, %r1136, 1;
	shf.r.wrap.b32 	%r1141, %r1136, %r1137, 1;
	mov.b64 	%rd1745, {%r1141, %r1140};
	xor.b64  	%rd1746, %rd1744, %rd1745;
	add.s64 	%rd1747, %rd1746, %rd2256;
	add.s64 	%rd1748, %rd1747, %rd2274;
	add.s64 	%rd2256, %rd1748, %rd1741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1142,%dummy}, %rd2257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1143}, %rd2257;
	}
	shf.r.wrap.b32 	%r1144, %r1143, %r1142, 19;
	shf.r.wrap.b32 	%r1145, %r1142, %r1143, 19;
	mov.b64 	%rd1749, {%r1145, %r1144};
	shf.l.wrap.b32 	%r1146, %r1142, %r1143, 3;
	shf.l.wrap.b32 	%r1147, %r1143, %r1142, 3;
	mov.b64 	%rd1750, {%r1147, %r1146};
	shr.u64 	%rd1751, %rd2257, 6;
	xor.b64  	%rd1752, %rd1750, %rd1751;
	xor.b64  	%rd1753, %rd1752, %rd1749;
	shr.u64 	%rd1754, %rd2254, 7;
	shf.r.wrap.b32 	%r1148, %r986, %r987, 8;
	shf.r.wrap.b32 	%r1149, %r987, %r986, 8;
	mov.b64 	%rd1755, {%r1149, %r1148};
	xor.b64  	%rd1756, %rd1755, %rd1754;
	shf.r.wrap.b32 	%r1150, %r986, %r987, 1;
	shf.r.wrap.b32 	%r1151, %r987, %r986, 1;
	mov.b64 	%rd1757, {%r1151, %r1150};
	xor.b64  	%rd1758, %rd1756, %rd1757;
	add.s64 	%rd1759, %rd1758, %rd2255;
	add.s64 	%rd1760, %rd1759, %rd2275;
	add.s64 	%rd2255, %rd1760, %rd1753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1152,%dummy}, %rd2256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1153}, %rd2256;
	}
	shf.r.wrap.b32 	%r1154, %r1153, %r1152, 19;
	shf.r.wrap.b32 	%r1155, %r1152, %r1153, 19;
	mov.b64 	%rd1761, {%r1155, %r1154};
	shf.l.wrap.b32 	%r1156, %r1152, %r1153, 3;
	shf.l.wrap.b32 	%r1157, %r1153, %r1152, 3;
	mov.b64 	%rd1762, {%r1157, %r1156};
	shr.u64 	%rd1763, %rd2256, 6;
	xor.b64  	%rd1764, %rd1762, %rd1763;
	xor.b64  	%rd1765, %rd1764, %rd1761;
	shr.u64 	%rd1766, %rd2253, 7;
	shf.r.wrap.b32 	%r1158, %r998, %r999, 8;
	shf.r.wrap.b32 	%r1159, %r999, %r998, 8;
	mov.b64 	%rd1767, {%r1159, %r1158};
	xor.b64  	%rd1768, %rd1767, %rd1766;
	shf.r.wrap.b32 	%r1160, %r998, %r999, 1;
	shf.r.wrap.b32 	%r1161, %r999, %r998, 1;
	mov.b64 	%rd1769, {%r1161, %r1160};
	xor.b64  	%rd1770, %rd1768, %rd1769;
	add.s64 	%rd1771, %rd1770, %rd2254;
	add.s64 	%rd1772, %rd1771, %rd2276;
	add.s64 	%rd2254, %rd1772, %rd1765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1162,%dummy}, %rd2255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1163}, %rd2255;
	}
	shf.r.wrap.b32 	%r1164, %r1163, %r1162, 19;
	shf.r.wrap.b32 	%r1165, %r1162, %r1163, 19;
	mov.b64 	%rd1773, {%r1165, %r1164};
	shf.l.wrap.b32 	%r1166, %r1162, %r1163, 3;
	shf.l.wrap.b32 	%r1167, %r1163, %r1162, 3;
	mov.b64 	%rd1774, {%r1167, %r1166};
	shr.u64 	%rd1775, %rd2255, 6;
	xor.b64  	%rd1776, %rd1774, %rd1775;
	xor.b64  	%rd1777, %rd1776, %rd1773;
	shf.r.wrap.b32 	%r1168, %r1011, %r1010, 1;
	shf.r.wrap.b32 	%r1169, %r1010, %r1011, 1;
	mov.b64 	%rd1778, {%r1169, %r1168};
	shf.r.wrap.b32 	%r1170, %r1011, %r1010, 8;
	shf.r.wrap.b32 	%r1171, %r1010, %r1011, 8;
	mov.b64 	%rd1779, {%r1171, %r1170};
	shr.u64 	%rd1780, %rd2269, 7;
	xor.b64  	%rd1781, %rd1779, %rd1780;
	xor.b64  	%rd1782, %rd1781, %rd1778;
	add.s64 	%rd1783, %rd1782, %rd2253;
	add.s64 	%rd1784, %rd1783, %rd2260;
	add.s64 	%rd2253, %rd1784, %rd1777;
	mul.wide.s32 	%rd1785, %r1446, 8;
	add.s64 	%rd1787, %rd2212, %rd1785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1172,%dummy}, %rd2265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1173}, %rd2265;
	}
	shf.r.wrap.b32 	%r1174, %r1173, %r1172, 18;
	shf.r.wrap.b32 	%r1175, %r1172, %r1173, 18;
	mov.b64 	%rd1788, {%r1175, %r1174};
	shf.r.wrap.b32 	%r1176, %r1173, %r1172, 14;
	shf.r.wrap.b32 	%r1177, %r1172, %r1173, 14;
	mov.b64 	%rd1789, {%r1177, %r1176};
	xor.b64  	%rd1790, %rd1789, %rd1788;
	shf.l.wrap.b32 	%r1178, %r1172, %r1173, 23;
	shf.l.wrap.b32 	%r1179, %r1173, %r1172, 23;
	mov.b64 	%rd1791, {%r1179, %r1178};
	xor.b64  	%rd1792, %rd1790, %rd1791;
	xor.b64  	%rd1793, %rd2266, %rd2267;
	and.b64  	%rd1794, %rd2265, %rd1793;
	xor.b64  	%rd1795, %rd1794, %rd2267;
	add.s64 	%rd1796, %rd1795, %rd2268;
	add.s64 	%rd1797, %rd1796, %rd1792;
	add.s64 	%rd1798, %rd1797, %rd2269;
	ld.const.u64 	%rd1799, [%rd1787];
	add.s64 	%rd1800, %rd1798, %rd1799;
	add.s64 	%rd1801, %rd1800, %rd2264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1180}, %rd2261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1181,%dummy}, %rd2261;
	}
	shf.l.wrap.b32 	%r1182, %r1181, %r1180, 30;
	shf.l.wrap.b32 	%r1183, %r1180, %r1181, 30;
	mov.b64 	%rd1802, {%r1183, %r1182};
	shf.r.wrap.b32 	%r1184, %r1180, %r1181, 28;
	shf.r.wrap.b32 	%r1185, %r1181, %r1180, 28;
	mov.b64 	%rd1803, {%r1185, %r1184};
	xor.b64  	%rd1804, %rd1803, %rd1802;
	shf.l.wrap.b32 	%r1186, %r1181, %r1180, 25;
	shf.l.wrap.b32 	%r1187, %r1180, %r1181, 25;
	mov.b64 	%rd1805, {%r1187, %r1186};
	xor.b64  	%rd1806, %rd1804, %rd1805;
	xor.b64  	%rd1807, %rd2261, %rd2262;
	and.b64  	%rd1808, %rd1807, %rd2263;
	and.b64  	%rd1809, %rd2261, %rd2262;
	or.b64  	%rd1810, %rd1808, %rd1809;
	add.s64 	%rd1811, %rd1806, %rd1810;
	add.s64 	%rd1812, %rd1811, %rd1800;
	add.s32 	%r1188, %r1446, 1;
	mul.wide.s32 	%rd1813, %r1188, 8;
	add.s64 	%rd1814, %rd2212, %rd1813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1189,%dummy}, %rd1801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1190}, %rd1801;
	}
	shf.r.wrap.b32 	%r1191, %r1190, %r1189, 14;
	shf.r.wrap.b32 	%r1192, %r1189, %r1190, 14;
	mov.b64 	%rd1815, {%r1192, %r1191};
	shf.r.wrap.b32 	%r1193, %r1190, %r1189, 18;
	shf.r.wrap.b32 	%r1194, %r1189, %r1190, 18;
	mov.b64 	%rd1816, {%r1194, %r1193};
	xor.b64  	%rd1817, %rd1815, %rd1816;
	shf.l.wrap.b32 	%r1195, %r1189, %r1190, 23;
	shf.l.wrap.b32 	%r1196, %r1190, %r1189, 23;
	mov.b64 	%rd1818, {%r1196, %r1195};
	xor.b64  	%rd1819, %rd1817, %rd1818;
	xor.b64  	%rd1820, %rd2265, %rd2266;
	and.b64  	%rd1821, %rd1801, %rd1820;
	xor.b64  	%rd1822, %rd1821, %rd2266;
	add.s64 	%rd1823, %rd2270, %rd2267;
	ld.const.u64 	%rd1824, [%rd1814];
	add.s64 	%rd1825, %rd1823, %rd1824;
	add.s64 	%rd1826, %rd1825, %rd1822;
	add.s64 	%rd1827, %rd1826, %rd1819;
	add.s64 	%rd1828, %rd1827, %rd2263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1197,%dummy}, %rd1812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1198}, %rd1812;
	}
	shf.r.wrap.b32 	%r1199, %r1198, %r1197, 28;
	shf.r.wrap.b32 	%r1200, %r1197, %r1198, 28;
	mov.b64 	%rd1829, {%r1200, %r1199};
	shf.l.wrap.b32 	%r1201, %r1197, %r1198, 30;
	shf.l.wrap.b32 	%r1202, %r1198, %r1197, 30;
	mov.b64 	%rd1830, {%r1202, %r1201};
	xor.b64  	%rd1831, %rd1829, %rd1830;
	shf.l.wrap.b32 	%r1203, %r1197, %r1198, 25;
	shf.l.wrap.b32 	%r1204, %r1198, %r1197, 25;
	mov.b64 	%rd1832, {%r1204, %r1203};
	xor.b64  	%rd1833, %rd1831, %rd1832;
	and.b64  	%rd1834, %rd1812, %rd2261;
	xor.b64  	%rd1835, %rd1812, %rd2261;
	and.b64  	%rd1836, %rd1835, %rd2262;
	or.b64  	%rd1837, %rd1836, %rd1834;
	add.s64 	%rd1838, %rd1833, %rd1837;
	add.s64 	%rd1839, %rd1838, %rd1827;
	add.s32 	%r1205, %r1446, 2;
	mul.wide.s32 	%rd1840, %r1205, 8;
	add.s64 	%rd1841, %rd2212, %rd1840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1206,%dummy}, %rd1828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1207}, %rd1828;
	}
	shf.r.wrap.b32 	%r1208, %r1207, %r1206, 14;
	shf.r.wrap.b32 	%r1209, %r1206, %r1207, 14;
	mov.b64 	%rd1842, {%r1209, %r1208};
	shf.r.wrap.b32 	%r1210, %r1207, %r1206, 18;
	shf.r.wrap.b32 	%r1211, %r1206, %r1207, 18;
	mov.b64 	%rd1843, {%r1211, %r1210};
	xor.b64  	%rd1844, %rd1842, %rd1843;
	shf.l.wrap.b32 	%r1212, %r1206, %r1207, 23;
	shf.l.wrap.b32 	%r1213, %r1207, %r1206, 23;
	mov.b64 	%rd1845, {%r1213, %r1212};
	xor.b64  	%rd1846, %rd1844, %rd1845;
	xor.b64  	%rd1847, %rd1801, %rd2265;
	and.b64  	%rd1848, %rd1828, %rd1847;
	xor.b64  	%rd1849, %rd1848, %rd2265;
	add.s64 	%rd1850, %rd2271, %rd2266;
	ld.const.u64 	%rd1851, [%rd1841];
	add.s64 	%rd1852, %rd1850, %rd1851;
	add.s64 	%rd1853, %rd1852, %rd1849;
	add.s64 	%rd1854, %rd1853, %rd1846;
	add.s64 	%rd1855, %rd1854, %rd2262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1214,%dummy}, %rd1839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1215}, %rd1839;
	}
	shf.r.wrap.b32 	%r1216, %r1215, %r1214, 28;
	shf.r.wrap.b32 	%r1217, %r1214, %r1215, 28;
	mov.b64 	%rd1856, {%r1217, %r1216};
	shf.l.wrap.b32 	%r1218, %r1214, %r1215, 30;
	shf.l.wrap.b32 	%r1219, %r1215, %r1214, 30;
	mov.b64 	%rd1857, {%r1219, %r1218};
	xor.b64  	%rd1858, %rd1856, %rd1857;
	shf.l.wrap.b32 	%r1220, %r1214, %r1215, 25;
	shf.l.wrap.b32 	%r1221, %r1215, %r1214, 25;
	mov.b64 	%rd1859, {%r1221, %r1220};
	xor.b64  	%rd1860, %rd1858, %rd1859;
	and.b64  	%rd1861, %rd1839, %rd1812;
	xor.b64  	%rd1862, %rd1839, %rd1812;
	and.b64  	%rd1863, %rd1862, %rd2261;
	or.b64  	%rd1864, %rd1863, %rd1861;
	add.s64 	%rd1865, %rd1860, %rd1864;
	add.s64 	%rd1866, %rd1865, %rd1854;
	add.s32 	%r1222, %r1446, 3;
	mul.wide.s32 	%rd1867, %r1222, 8;
	add.s64 	%rd1868, %rd2212, %rd1867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1223,%dummy}, %rd1855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1224}, %rd1855;
	}
	shf.r.wrap.b32 	%r1225, %r1224, %r1223, 14;
	shf.r.wrap.b32 	%r1226, %r1223, %r1224, 14;
	mov.b64 	%rd1869, {%r1226, %r1225};
	shf.r.wrap.b32 	%r1227, %r1224, %r1223, 18;
	shf.r.wrap.b32 	%r1228, %r1223, %r1224, 18;
	mov.b64 	%rd1870, {%r1228, %r1227};
	xor.b64  	%rd1871, %rd1869, %rd1870;
	shf.l.wrap.b32 	%r1229, %r1223, %r1224, 23;
	shf.l.wrap.b32 	%r1230, %r1224, %r1223, 23;
	mov.b64 	%rd1872, {%r1230, %r1229};
	xor.b64  	%rd1873, %rd1871, %rd1872;
	xor.b64  	%rd1874, %rd1828, %rd1801;
	and.b64  	%rd1875, %rd1855, %rd1874;
	xor.b64  	%rd1876, %rd1875, %rd1801;
	add.s64 	%rd1877, %rd2272, %rd2265;
	ld.const.u64 	%rd1878, [%rd1868];
	add.s64 	%rd1879, %rd1877, %rd1878;
	add.s64 	%rd1880, %rd1879, %rd1876;
	add.s64 	%rd1881, %rd1880, %rd1873;
	add.s64 	%rd1882, %rd1881, %rd2261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1231,%dummy}, %rd1866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1232}, %rd1866;
	}
	shf.r.wrap.b32 	%r1233, %r1232, %r1231, 28;
	shf.r.wrap.b32 	%r1234, %r1231, %r1232, 28;
	mov.b64 	%rd1883, {%r1234, %r1233};
	shf.l.wrap.b32 	%r1235, %r1231, %r1232, 30;
	shf.l.wrap.b32 	%r1236, %r1232, %r1231, 30;
	mov.b64 	%rd1884, {%r1236, %r1235};
	xor.b64  	%rd1885, %rd1883, %rd1884;
	shf.l.wrap.b32 	%r1237, %r1231, %r1232, 25;
	shf.l.wrap.b32 	%r1238, %r1232, %r1231, 25;
	mov.b64 	%rd1886, {%r1238, %r1237};
	xor.b64  	%rd1887, %rd1885, %rd1886;
	and.b64  	%rd1888, %rd1866, %rd1839;
	xor.b64  	%rd1889, %rd1866, %rd1839;
	and.b64  	%rd1890, %rd1889, %rd1812;
	or.b64  	%rd1891, %rd1890, %rd1888;
	add.s64 	%rd1892, %rd1887, %rd1891;
	add.s64 	%rd1893, %rd1892, %rd1881;
	add.s32 	%r1239, %r1446, 4;
	mul.wide.s32 	%rd1894, %r1239, 8;
	add.s64 	%rd1895, %rd2212, %rd1894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1240,%dummy}, %rd1882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1241}, %rd1882;
	}
	shf.r.wrap.b32 	%r1242, %r1241, %r1240, 14;
	shf.r.wrap.b32 	%r1243, %r1240, %r1241, 14;
	mov.b64 	%rd1896, {%r1243, %r1242};
	shf.r.wrap.b32 	%r1244, %r1241, %r1240, 18;
	shf.r.wrap.b32 	%r1245, %r1240, %r1241, 18;
	mov.b64 	%rd1897, {%r1245, %r1244};
	xor.b64  	%rd1898, %rd1896, %rd1897;
	shf.l.wrap.b32 	%r1246, %r1240, %r1241, 23;
	shf.l.wrap.b32 	%r1247, %r1241, %r1240, 23;
	mov.b64 	%rd1899, {%r1247, %r1246};
	xor.b64  	%rd1900, %rd1898, %rd1899;
	xor.b64  	%rd1901, %rd1855, %rd1828;
	and.b64  	%rd1902, %rd1882, %rd1901;
	xor.b64  	%rd1903, %rd1902, %rd1828;
	add.s64 	%rd1904, %rd1801, %rd2273;
	ld.const.u64 	%rd1905, [%rd1895];
	add.s64 	%rd1906, %rd1904, %rd1905;
	add.s64 	%rd1907, %rd1906, %rd1903;
	add.s64 	%rd1908, %rd1907, %rd1900;
	add.s64 	%rd1909, %rd1908, %rd1812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1248,%dummy}, %rd1893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1249}, %rd1893;
	}
	shf.r.wrap.b32 	%r1250, %r1249, %r1248, 28;
	shf.r.wrap.b32 	%r1251, %r1248, %r1249, 28;
	mov.b64 	%rd1910, {%r1251, %r1250};
	shf.l.wrap.b32 	%r1252, %r1248, %r1249, 30;
	shf.l.wrap.b32 	%r1253, %r1249, %r1248, 30;
	mov.b64 	%rd1911, {%r1253, %r1252};
	xor.b64  	%rd1912, %rd1910, %rd1911;
	shf.l.wrap.b32 	%r1254, %r1248, %r1249, 25;
	shf.l.wrap.b32 	%r1255, %r1249, %r1248, 25;
	mov.b64 	%rd1913, {%r1255, %r1254};
	xor.b64  	%rd1914, %rd1912, %rd1913;
	and.b64  	%rd1915, %rd1893, %rd1866;
	xor.b64  	%rd1916, %rd1893, %rd1866;
	and.b64  	%rd1917, %rd1916, %rd1839;
	or.b64  	%rd1918, %rd1917, %rd1915;
	add.s64 	%rd1919, %rd1914, %rd1918;
	add.s64 	%rd1920, %rd1919, %rd1908;
	add.s32 	%r1256, %r1446, 5;
	mul.wide.s32 	%rd1921, %r1256, 8;
	add.s64 	%rd1922, %rd2212, %rd1921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1257,%dummy}, %rd1909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1258}, %rd1909;
	}
	shf.r.wrap.b32 	%r1259, %r1258, %r1257, 14;
	shf.r.wrap.b32 	%r1260, %r1257, %r1258, 14;
	mov.b64 	%rd1923, {%r1260, %r1259};
	shf.r.wrap.b32 	%r1261, %r1258, %r1257, 18;
	shf.r.wrap.b32 	%r1262, %r1257, %r1258, 18;
	mov.b64 	%rd1924, {%r1262, %r1261};
	xor.b64  	%rd1925, %rd1923, %rd1924;
	shf.l.wrap.b32 	%r1263, %r1257, %r1258, 23;
	shf.l.wrap.b32 	%r1264, %r1258, %r1257, 23;
	mov.b64 	%rd1926, {%r1264, %r1263};
	xor.b64  	%rd1927, %rd1925, %rd1926;
	xor.b64  	%rd1928, %rd1882, %rd1855;
	and.b64  	%rd1929, %rd1909, %rd1928;
	xor.b64  	%rd1930, %rd1929, %rd1855;
	ld.const.u64 	%rd1931, [%rd1922];
	add.s64 	%rd1932, %rd1931, %rd2274;
	add.s64 	%rd1933, %rd1932, %rd1828;
	add.s64 	%rd1934, %rd1933, %rd1930;
	add.s64 	%rd1935, %rd1934, %rd1927;
	add.s64 	%rd1936, %rd1935, %rd1839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1265,%dummy}, %rd1920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1266}, %rd1920;
	}
	shf.r.wrap.b32 	%r1267, %r1266, %r1265, 28;
	shf.r.wrap.b32 	%r1268, %r1265, %r1266, 28;
	mov.b64 	%rd1937, {%r1268, %r1267};
	shf.l.wrap.b32 	%r1269, %r1265, %r1266, 30;
	shf.l.wrap.b32 	%r1270, %r1266, %r1265, 30;
	mov.b64 	%rd1938, {%r1270, %r1269};
	xor.b64  	%rd1939, %rd1937, %rd1938;
	shf.l.wrap.b32 	%r1271, %r1265, %r1266, 25;
	shf.l.wrap.b32 	%r1272, %r1266, %r1265, 25;
	mov.b64 	%rd1940, {%r1272, %r1271};
	xor.b64  	%rd1941, %rd1939, %rd1940;
	and.b64  	%rd1942, %rd1920, %rd1893;
	xor.b64  	%rd1943, %rd1920, %rd1893;
	and.b64  	%rd1944, %rd1943, %rd1866;
	or.b64  	%rd1945, %rd1944, %rd1942;
	add.s64 	%rd1946, %rd1941, %rd1945;
	add.s64 	%rd1947, %rd1946, %rd1935;
	add.s32 	%r1273, %r1446, 6;
	mul.wide.s32 	%rd1948, %r1273, 8;
	add.s64 	%rd1949, %rd2212, %rd1948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1274,%dummy}, %rd1936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1275}, %rd1936;
	}
	shf.r.wrap.b32 	%r1276, %r1275, %r1274, 14;
	shf.r.wrap.b32 	%r1277, %r1274, %r1275, 14;
	mov.b64 	%rd1950, {%r1277, %r1276};
	shf.r.wrap.b32 	%r1278, %r1275, %r1274, 18;
	shf.r.wrap.b32 	%r1279, %r1274, %r1275, 18;
	mov.b64 	%rd1951, {%r1279, %r1278};
	xor.b64  	%rd1952, %rd1950, %rd1951;
	shf.l.wrap.b32 	%r1280, %r1274, %r1275, 23;
	shf.l.wrap.b32 	%r1281, %r1275, %r1274, 23;
	mov.b64 	%rd1953, {%r1281, %r1280};
	xor.b64  	%rd1954, %rd1952, %rd1953;
	xor.b64  	%rd1955, %rd1909, %rd1882;
	and.b64  	%rd1956, %rd1936, %rd1955;
	xor.b64  	%rd1957, %rd1956, %rd1882;
	ld.const.u64 	%rd1958, [%rd1949];
	add.s64 	%rd1959, %rd1958, %rd2275;
	add.s64 	%rd1960, %rd1959, %rd1855;
	add.s64 	%rd1961, %rd1960, %rd1957;
	add.s64 	%rd1962, %rd1961, %rd1954;
	add.s64 	%rd1963, %rd1962, %rd1866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1282,%dummy}, %rd1947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1283}, %rd1947;
	}
	shf.r.wrap.b32 	%r1284, %r1283, %r1282, 28;
	shf.r.wrap.b32 	%r1285, %r1282, %r1283, 28;
	mov.b64 	%rd1964, {%r1285, %r1284};
	shf.l.wrap.b32 	%r1286, %r1282, %r1283, 30;
	shf.l.wrap.b32 	%r1287, %r1283, %r1282, 30;
	mov.b64 	%rd1965, {%r1287, %r1286};
	xor.b64  	%rd1966, %rd1964, %rd1965;
	shf.l.wrap.b32 	%r1288, %r1282, %r1283, 25;
	shf.l.wrap.b32 	%r1289, %r1283, %r1282, 25;
	mov.b64 	%rd1967, {%r1289, %r1288};
	xor.b64  	%rd1968, %rd1966, %rd1967;
	and.b64  	%rd1969, %rd1947, %rd1920;
	xor.b64  	%rd1970, %rd1947, %rd1920;
	and.b64  	%rd1971, %rd1970, %rd1893;
	or.b64  	%rd1972, %rd1971, %rd1969;
	add.s64 	%rd1973, %rd1968, %rd1972;
	add.s64 	%rd1974, %rd1973, %rd1962;
	add.s32 	%r1290, %r1446, 7;
	mul.wide.s32 	%rd1975, %r1290, 8;
	add.s64 	%rd1976, %rd2212, %rd1975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1291,%dummy}, %rd1963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1292}, %rd1963;
	}
	shf.r.wrap.b32 	%r1293, %r1292, %r1291, 14;
	shf.r.wrap.b32 	%r1294, %r1291, %r1292, 14;
	mov.b64 	%rd1977, {%r1294, %r1293};
	shf.r.wrap.b32 	%r1295, %r1292, %r1291, 18;
	shf.r.wrap.b32 	%r1296, %r1291, %r1292, 18;
	mov.b64 	%rd1978, {%r1296, %r1295};
	xor.b64  	%rd1979, %rd1977, %rd1978;
	shf.l.wrap.b32 	%r1297, %r1291, %r1292, 23;
	shf.l.wrap.b32 	%r1298, %r1292, %r1291, 23;
	mov.b64 	%rd1980, {%r1298, %r1297};
	xor.b64  	%rd1981, %rd1979, %rd1980;
	xor.b64  	%rd1982, %rd1936, %rd1909;
	and.b64  	%rd1983, %rd1963, %rd1982;
	xor.b64  	%rd1984, %rd1983, %rd1909;
	ld.const.u64 	%rd1985, [%rd1976];
	add.s64 	%rd1986, %rd1985, %rd2276;
	add.s64 	%rd1987, %rd1986, %rd1882;
	add.s64 	%rd1988, %rd1987, %rd1984;
	add.s64 	%rd1989, %rd1988, %rd1981;
	add.s64 	%rd1990, %rd1989, %rd1893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1299,%dummy}, %rd1974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1300}, %rd1974;
	}
	shf.r.wrap.b32 	%r1301, %r1300, %r1299, 28;
	shf.r.wrap.b32 	%r1302, %r1299, %r1300, 28;
	mov.b64 	%rd1991, {%r1302, %r1301};
	shf.l.wrap.b32 	%r1303, %r1299, %r1300, 30;
	shf.l.wrap.b32 	%r1304, %r1300, %r1299, 30;
	mov.b64 	%rd1992, {%r1304, %r1303};
	xor.b64  	%rd1993, %rd1991, %rd1992;
	shf.l.wrap.b32 	%r1305, %r1299, %r1300, 25;
	shf.l.wrap.b32 	%r1306, %r1300, %r1299, 25;
	mov.b64 	%rd1994, {%r1306, %r1305};
	xor.b64  	%rd1995, %rd1993, %rd1994;
	and.b64  	%rd1996, %rd1974, %rd1947;
	xor.b64  	%rd1997, %rd1974, %rd1947;
	and.b64  	%rd1998, %rd1997, %rd1920;
	or.b64  	%rd1999, %rd1998, %rd1996;
	add.s64 	%rd2000, %rd1995, %rd1999;
	add.s64 	%rd2001, %rd2000, %rd1989;
	add.s32 	%r1307, %r1446, 8;
	mul.wide.s32 	%rd2002, %r1307, 8;
	add.s64 	%rd2003, %rd2212, %rd2002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1308,%dummy}, %rd1990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1309}, %rd1990;
	}
	shf.r.wrap.b32 	%r1310, %r1309, %r1308, 14;
	shf.r.wrap.b32 	%r1311, %r1308, %r1309, 14;
	mov.b64 	%rd2004, {%r1311, %r1310};
	shf.r.wrap.b32 	%r1312, %r1309, %r1308, 18;
	shf.r.wrap.b32 	%r1313, %r1308, %r1309, 18;
	mov.b64 	%rd2005, {%r1313, %r1312};
	xor.b64  	%rd2006, %rd2004, %rd2005;
	shf.l.wrap.b32 	%r1314, %r1308, %r1309, 23;
	shf.l.wrap.b32 	%r1315, %r1309, %r1308, 23;
	mov.b64 	%rd2007, {%r1315, %r1314};
	xor.b64  	%rd2008, %rd2006, %rd2007;
	xor.b64  	%rd2009, %rd1963, %rd1936;
	and.b64  	%rd2010, %rd1990, %rd2009;
	xor.b64  	%rd2011, %rd2010, %rd1936;
	ld.const.u64 	%rd2012, [%rd2003];
	add.s64 	%rd2013, %rd2012, %rd2260;
	add.s64 	%rd2014, %rd2013, %rd1909;
	add.s64 	%rd2015, %rd2014, %rd2011;
	add.s64 	%rd2016, %rd2015, %rd2008;
	add.s64 	%rd2017, %rd2016, %rd1920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1316,%dummy}, %rd2001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1317}, %rd2001;
	}
	shf.r.wrap.b32 	%r1318, %r1317, %r1316, 28;
	shf.r.wrap.b32 	%r1319, %r1316, %r1317, 28;
	mov.b64 	%rd2018, {%r1319, %r1318};
	shf.l.wrap.b32 	%r1320, %r1316, %r1317, 30;
	shf.l.wrap.b32 	%r1321, %r1317, %r1316, 30;
	mov.b64 	%rd2019, {%r1321, %r1320};
	xor.b64  	%rd2020, %rd2018, %rd2019;
	shf.l.wrap.b32 	%r1322, %r1316, %r1317, 25;
	shf.l.wrap.b32 	%r1323, %r1317, %r1316, 25;
	mov.b64 	%rd2021, {%r1323, %r1322};
	xor.b64  	%rd2022, %rd2020, %rd2021;
	and.b64  	%rd2023, %rd2001, %rd1974;
	xor.b64  	%rd2024, %rd2001, %rd1974;
	and.b64  	%rd2025, %rd2024, %rd1947;
	or.b64  	%rd2026, %rd2025, %rd2023;
	add.s64 	%rd2027, %rd2022, %rd2026;
	add.s64 	%rd2028, %rd2027, %rd2016;
	add.s32 	%r1324, %r1446, 9;
	mul.wide.s32 	%rd2029, %r1324, 8;
	add.s64 	%rd2030, %rd2212, %rd2029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1325,%dummy}, %rd2017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1326}, %rd2017;
	}
	shf.r.wrap.b32 	%r1327, %r1326, %r1325, 14;
	shf.r.wrap.b32 	%r1328, %r1325, %r1326, 14;
	mov.b64 	%rd2031, {%r1328, %r1327};
	shf.r.wrap.b32 	%r1329, %r1326, %r1325, 18;
	shf.r.wrap.b32 	%r1330, %r1325, %r1326, 18;
	mov.b64 	%rd2032, {%r1330, %r1329};
	xor.b64  	%rd2033, %rd2031, %rd2032;
	shf.l.wrap.b32 	%r1331, %r1325, %r1326, 23;
	shf.l.wrap.b32 	%r1332, %r1326, %r1325, 23;
	mov.b64 	%rd2034, {%r1332, %r1331};
	xor.b64  	%rd2035, %rd2033, %rd2034;
	xor.b64  	%rd2036, %rd1990, %rd1963;
	and.b64  	%rd2037, %rd2017, %rd2036;
	xor.b64  	%rd2038, %rd2037, %rd1963;
	ld.const.u64 	%rd2039, [%rd2030];
	add.s64 	%rd2040, %rd2039, %rd2259;
	add.s64 	%rd2041, %rd2040, %rd1936;
	add.s64 	%rd2042, %rd2041, %rd2038;
	add.s64 	%rd2043, %rd2042, %rd2035;
	add.s64 	%rd2044, %rd2043, %rd1947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1333,%dummy}, %rd2028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1334}, %rd2028;
	}
	shf.r.wrap.b32 	%r1335, %r1334, %r1333, 28;
	shf.r.wrap.b32 	%r1336, %r1333, %r1334, 28;
	mov.b64 	%rd2045, {%r1336, %r1335};
	shf.l.wrap.b32 	%r1337, %r1333, %r1334, 30;
	shf.l.wrap.b32 	%r1338, %r1334, %r1333, 30;
	mov.b64 	%rd2046, {%r1338, %r1337};
	xor.b64  	%rd2047, %rd2045, %rd2046;
	shf.l.wrap.b32 	%r1339, %r1333, %r1334, 25;
	shf.l.wrap.b32 	%r1340, %r1334, %r1333, 25;
	mov.b64 	%rd2048, {%r1340, %r1339};
	xor.b64  	%rd2049, %rd2047, %rd2048;
	and.b64  	%rd2050, %rd2028, %rd2001;
	xor.b64  	%rd2051, %rd2028, %rd2001;
	and.b64  	%rd2052, %rd2051, %rd1974;
	or.b64  	%rd2053, %rd2052, %rd2050;
	add.s64 	%rd2054, %rd2049, %rd2053;
	add.s64 	%rd2055, %rd2054, %rd2043;
	add.s32 	%r1341, %r1446, 10;
	mul.wide.s32 	%rd2056, %r1341, 8;
	add.s64 	%rd2057, %rd2212, %rd2056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1342,%dummy}, %rd2044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1343}, %rd2044;
	}
	shf.r.wrap.b32 	%r1344, %r1343, %r1342, 14;
	shf.r.wrap.b32 	%r1345, %r1342, %r1343, 14;
	mov.b64 	%rd2058, {%r1345, %r1344};
	shf.r.wrap.b32 	%r1346, %r1343, %r1342, 18;
	shf.r.wrap.b32 	%r1347, %r1342, %r1343, 18;
	mov.b64 	%rd2059, {%r1347, %r1346};
	xor.b64  	%rd2060, %rd2058, %rd2059;
	shf.l.wrap.b32 	%r1348, %r1342, %r1343, 23;
	shf.l.wrap.b32 	%r1349, %r1343, %r1342, 23;
	mov.b64 	%rd2061, {%r1349, %r1348};
	xor.b64  	%rd2062, %rd2060, %rd2061;
	xor.b64  	%rd2063, %rd2017, %rd1990;
	and.b64  	%rd2064, %rd2044, %rd2063;
	xor.b64  	%rd2065, %rd2064, %rd1990;
	ld.const.u64 	%rd2066, [%rd2057];
	add.s64 	%rd2067, %rd2066, %rd2258;
	add.s64 	%rd2068, %rd2067, %rd1963;
	add.s64 	%rd2069, %rd2068, %rd2065;
	add.s64 	%rd2070, %rd2069, %rd2062;
	add.s64 	%rd2071, %rd2070, %rd1974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1350,%dummy}, %rd2055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1351}, %rd2055;
	}
	shf.r.wrap.b32 	%r1352, %r1351, %r1350, 28;
	shf.r.wrap.b32 	%r1353, %r1350, %r1351, 28;
	mov.b64 	%rd2072, {%r1353, %r1352};
	shf.l.wrap.b32 	%r1354, %r1350, %r1351, 30;
	shf.l.wrap.b32 	%r1355, %r1351, %r1350, 30;
	mov.b64 	%rd2073, {%r1355, %r1354};
	xor.b64  	%rd2074, %rd2072, %rd2073;
	shf.l.wrap.b32 	%r1356, %r1350, %r1351, 25;
	shf.l.wrap.b32 	%r1357, %r1351, %r1350, 25;
	mov.b64 	%rd2075, {%r1357, %r1356};
	xor.b64  	%rd2076, %rd2074, %rd2075;
	and.b64  	%rd2077, %rd2055, %rd2028;
	xor.b64  	%rd2078, %rd2055, %rd2028;
	and.b64  	%rd2079, %rd2078, %rd2001;
	or.b64  	%rd2080, %rd2079, %rd2077;
	add.s64 	%rd2081, %rd2076, %rd2080;
	add.s64 	%rd2082, %rd2081, %rd2070;
	add.s32 	%r1358, %r1446, 11;
	mul.wide.s32 	%rd2083, %r1358, 8;
	add.s64 	%rd2084, %rd2212, %rd2083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1359,%dummy}, %rd2071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1360}, %rd2071;
	}
	shf.r.wrap.b32 	%r1361, %r1360, %r1359, 14;
	shf.r.wrap.b32 	%r1362, %r1359, %r1360, 14;
	mov.b64 	%rd2085, {%r1362, %r1361};
	shf.r.wrap.b32 	%r1363, %r1360, %r1359, 18;
	shf.r.wrap.b32 	%r1364, %r1359, %r1360, 18;
	mov.b64 	%rd2086, {%r1364, %r1363};
	xor.b64  	%rd2087, %rd2085, %rd2086;
	shf.l.wrap.b32 	%r1365, %r1359, %r1360, 23;
	shf.l.wrap.b32 	%r1366, %r1360, %r1359, 23;
	mov.b64 	%rd2088, {%r1366, %r1365};
	xor.b64  	%rd2089, %rd2087, %rd2088;
	xor.b64  	%rd2090, %rd2044, %rd2017;
	and.b64  	%rd2091, %rd2071, %rd2090;
	xor.b64  	%rd2092, %rd2091, %rd2017;
	ld.const.u64 	%rd2093, [%rd2084];
	add.s64 	%rd2094, %rd2093, %rd2257;
	add.s64 	%rd2095, %rd2094, %rd1990;
	add.s64 	%rd2096, %rd2095, %rd2092;
	add.s64 	%rd2097, %rd2096, %rd2089;
	add.s64 	%rd2098, %rd2097, %rd2001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1367,%dummy}, %rd2082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1368}, %rd2082;
	}
	shf.r.wrap.b32 	%r1369, %r1368, %r1367, 28;
	shf.r.wrap.b32 	%r1370, %r1367, %r1368, 28;
	mov.b64 	%rd2099, {%r1370, %r1369};
	shf.l.wrap.b32 	%r1371, %r1367, %r1368, 30;
	shf.l.wrap.b32 	%r1372, %r1368, %r1367, 30;
	mov.b64 	%rd2100, {%r1372, %r1371};
	xor.b64  	%rd2101, %rd2099, %rd2100;
	shf.l.wrap.b32 	%r1373, %r1367, %r1368, 25;
	shf.l.wrap.b32 	%r1374, %r1368, %r1367, 25;
	mov.b64 	%rd2102, {%r1374, %r1373};
	xor.b64  	%rd2103, %rd2101, %rd2102;
	and.b64  	%rd2104, %rd2082, %rd2055;
	xor.b64  	%rd2105, %rd2082, %rd2055;
	and.b64  	%rd2106, %rd2105, %rd2028;
	or.b64  	%rd2107, %rd2106, %rd2104;
	add.s64 	%rd2108, %rd2103, %rd2107;
	add.s64 	%rd2109, %rd2108, %rd2097;
	add.s32 	%r1375, %r1446, 12;
	mul.wide.s32 	%rd2110, %r1375, 8;
	add.s64 	%rd2111, %rd2212, %rd2110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1376,%dummy}, %rd2098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1377}, %rd2098;
	}
	shf.r.wrap.b32 	%r1378, %r1377, %r1376, 14;
	shf.r.wrap.b32 	%r1379, %r1376, %r1377, 14;
	mov.b64 	%rd2112, {%r1379, %r1378};
	shf.r.wrap.b32 	%r1380, %r1377, %r1376, 18;
	shf.r.wrap.b32 	%r1381, %r1376, %r1377, 18;
	mov.b64 	%rd2113, {%r1381, %r1380};
	xor.b64  	%rd2114, %rd2112, %rd2113;
	shf.l.wrap.b32 	%r1382, %r1376, %r1377, 23;
	shf.l.wrap.b32 	%r1383, %r1377, %r1376, 23;
	mov.b64 	%rd2115, {%r1383, %r1382};
	xor.b64  	%rd2116, %rd2114, %rd2115;
	xor.b64  	%rd2117, %rd2071, %rd2044;
	and.b64  	%rd2118, %rd2098, %rd2117;
	xor.b64  	%rd2119, %rd2118, %rd2044;
	ld.const.u64 	%rd2120, [%rd2111];
	add.s64 	%rd2121, %rd2120, %rd2256;
	add.s64 	%rd2122, %rd2121, %rd2017;
	add.s64 	%rd2123, %rd2122, %rd2119;
	add.s64 	%rd2124, %rd2123, %rd2116;
	add.s64 	%rd2268, %rd2124, %rd2028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1384,%dummy}, %rd2109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1385}, %rd2109;
	}
	shf.r.wrap.b32 	%r1386, %r1385, %r1384, 28;
	shf.r.wrap.b32 	%r1387, %r1384, %r1385, 28;
	mov.b64 	%rd2125, {%r1387, %r1386};
	shf.l.wrap.b32 	%r1388, %r1384, %r1385, 30;
	shf.l.wrap.b32 	%r1389, %r1385, %r1384, 30;
	mov.b64 	%rd2126, {%r1389, %r1388};
	xor.b64  	%rd2127, %rd2125, %rd2126;
	shf.l.wrap.b32 	%r1390, %r1384, %r1385, 25;
	shf.l.wrap.b32 	%r1391, %r1385, %r1384, 25;
	mov.b64 	%rd2128, {%r1391, %r1390};
	xor.b64  	%rd2129, %rd2127, %rd2128;
	and.b64  	%rd2130, %rd2109, %rd2082;
	xor.b64  	%rd2131, %rd2109, %rd2082;
	and.b64  	%rd2132, %rd2131, %rd2055;
	or.b64  	%rd2133, %rd2132, %rd2130;
	add.s64 	%rd2134, %rd2129, %rd2133;
	add.s64 	%rd2264, %rd2134, %rd2124;
	add.s32 	%r1392, %r1446, 13;
	mul.wide.s32 	%rd2135, %r1392, 8;
	add.s64 	%rd2136, %rd2212, %rd2135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1393,%dummy}, %rd2268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1394}, %rd2268;
	}
	shf.r.wrap.b32 	%r1395, %r1394, %r1393, 14;
	shf.r.wrap.b32 	%r1396, %r1393, %r1394, 14;
	mov.b64 	%rd2137, {%r1396, %r1395};
	shf.r.wrap.b32 	%r1397, %r1394, %r1393, 18;
	shf.r.wrap.b32 	%r1398, %r1393, %r1394, 18;
	mov.b64 	%rd2138, {%r1398, %r1397};
	xor.b64  	%rd2139, %rd2137, %rd2138;
	shf.l.wrap.b32 	%r1399, %r1393, %r1394, 23;
	shf.l.wrap.b32 	%r1400, %r1394, %r1393, 23;
	mov.b64 	%rd2140, {%r1400, %r1399};
	xor.b64  	%rd2141, %rd2139, %rd2140;
	xor.b64  	%rd2142, %rd2098, %rd2071;
	and.b64  	%rd2143, %rd2268, %rd2142;
	xor.b64  	%rd2144, %rd2143, %rd2071;
	ld.const.u64 	%rd2145, [%rd2136];
	add.s64 	%rd2146, %rd2145, %rd2255;
	add.s64 	%rd2147, %rd2146, %rd2044;
	add.s64 	%rd2148, %rd2147, %rd2144;
	add.s64 	%rd2149, %rd2148, %rd2141;
	add.s64 	%rd2267, %rd2149, %rd2055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1401,%dummy}, %rd2264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1402}, %rd2264;
	}
	shf.r.wrap.b32 	%r1403, %r1402, %r1401, 28;
	shf.r.wrap.b32 	%r1404, %r1401, %r1402, 28;
	mov.b64 	%rd2150, {%r1404, %r1403};
	shf.l.wrap.b32 	%r1405, %r1401, %r1402, 30;
	shf.l.wrap.b32 	%r1406, %r1402, %r1401, 30;
	mov.b64 	%rd2151, {%r1406, %r1405};
	xor.b64  	%rd2152, %rd2150, %rd2151;
	shf.l.wrap.b32 	%r1407, %r1401, %r1402, 25;
	shf.l.wrap.b32 	%r1408, %r1402, %r1401, 25;
	mov.b64 	%rd2153, {%r1408, %r1407};
	xor.b64  	%rd2154, %rd2152, %rd2153;
	and.b64  	%rd2155, %rd2264, %rd2109;
	xor.b64  	%rd2156, %rd2264, %rd2109;
	and.b64  	%rd2157, %rd2156, %rd2082;
	or.b64  	%rd2158, %rd2157, %rd2155;
	add.s64 	%rd2159, %rd2154, %rd2158;
	add.s64 	%rd2263, %rd2159, %rd2149;
	add.s32 	%r1409, %r1446, 14;
	mul.wide.s32 	%rd2160, %r1409, 8;
	add.s64 	%rd2161, %rd2212, %rd2160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1410,%dummy}, %rd2267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1411}, %rd2267;
	}
	shf.r.wrap.b32 	%r1412, %r1411, %r1410, 14;
	shf.r.wrap.b32 	%r1413, %r1410, %r1411, 14;
	mov.b64 	%rd2162, {%r1413, %r1412};
	shf.r.wrap.b32 	%r1414, %r1411, %r1410, 18;
	shf.r.wrap.b32 	%r1415, %r1410, %r1411, 18;
	mov.b64 	%rd2163, {%r1415, %r1414};
	xor.b64  	%rd2164, %rd2162, %rd2163;
	shf.l.wrap.b32 	%r1416, %r1410, %r1411, 23;
	shf.l.wrap.b32 	%r1417, %r1411, %r1410, 23;
	mov.b64 	%rd2165, {%r1417, %r1416};
	xor.b64  	%rd2166, %rd2164, %rd2165;
	xor.b64  	%rd2167, %rd2268, %rd2098;
	and.b64  	%rd2168, %rd2267, %rd2167;
	xor.b64  	%rd2169, %rd2168, %rd2098;
	ld.const.u64 	%rd2170, [%rd2161];
	add.s64 	%rd2171, %rd2170, %rd2254;
	add.s64 	%rd2172, %rd2171, %rd2071;
	add.s64 	%rd2173, %rd2172, %rd2169;
	add.s64 	%rd2174, %rd2173, %rd2166;
	add.s64 	%rd2266, %rd2174, %rd2082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1418,%dummy}, %rd2263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1419}, %rd2263;
	}
	shf.r.wrap.b32 	%r1420, %r1419, %r1418, 28;
	shf.r.wrap.b32 	%r1421, %r1418, %r1419, 28;
	mov.b64 	%rd2175, {%r1421, %r1420};
	shf.l.wrap.b32 	%r1422, %r1418, %r1419, 30;
	shf.l.wrap.b32 	%r1423, %r1419, %r1418, 30;
	mov.b64 	%rd2176, {%r1423, %r1422};
	xor.b64  	%rd2177, %rd2175, %rd2176;
	shf.l.wrap.b32 	%r1424, %r1418, %r1419, 25;
	shf.l.wrap.b32 	%r1425, %r1419, %r1418, 25;
	mov.b64 	%rd2178, {%r1425, %r1424};
	xor.b64  	%rd2179, %rd2177, %rd2178;
	and.b64  	%rd2180, %rd2263, %rd2264;
	xor.b64  	%rd2181, %rd2263, %rd2264;
	and.b64  	%rd2182, %rd2181, %rd2109;
	or.b64  	%rd2183, %rd2182, %rd2180;
	add.s64 	%rd2184, %rd2179, %rd2183;
	add.s64 	%rd2262, %rd2184, %rd2174;
	add.s32 	%r1426, %r1446, 15;
	mul.wide.s32 	%rd2185, %r1426, 8;
	add.s64 	%rd2186, %rd2212, %rd2185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1427,%dummy}, %rd2266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1428}, %rd2266;
	}
	shf.r.wrap.b32 	%r1429, %r1428, %r1427, 14;
	shf.r.wrap.b32 	%r1430, %r1427, %r1428, 14;
	mov.b64 	%rd2187, {%r1430, %r1429};
	shf.r.wrap.b32 	%r1431, %r1428, %r1427, 18;
	shf.r.wrap.b32 	%r1432, %r1427, %r1428, 18;
	mov.b64 	%rd2188, {%r1432, %r1431};
	xor.b64  	%rd2189, %rd2187, %rd2188;
	shf.l.wrap.b32 	%r1433, %r1427, %r1428, 23;
	shf.l.wrap.b32 	%r1434, %r1428, %r1427, 23;
	mov.b64 	%rd2190, {%r1434, %r1433};
	xor.b64  	%rd2191, %rd2189, %rd2190;
	xor.b64  	%rd2192, %rd2267, %rd2268;
	and.b64  	%rd2193, %rd2266, %rd2192;
	xor.b64  	%rd2194, %rd2193, %rd2268;
	ld.const.u64 	%rd2195, [%rd2186];
	add.s64 	%rd2196, %rd2195, %rd2253;
	add.s64 	%rd2197, %rd2196, %rd2098;
	add.s64 	%rd2198, %rd2197, %rd2194;
	add.s64 	%rd2199, %rd2198, %rd2191;
	add.s64 	%rd2265, %rd2199, %rd2109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1435,%dummy}, %rd2262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1436}, %rd2262;
	}
	shf.r.wrap.b32 	%r1437, %r1436, %r1435, 28;
	shf.r.wrap.b32 	%r1438, %r1435, %r1436, 28;
	mov.b64 	%rd2200, {%r1438, %r1437};
	shf.l.wrap.b32 	%r1439, %r1435, %r1436, 30;
	shf.l.wrap.b32 	%r1440, %r1436, %r1435, 30;
	mov.b64 	%rd2201, {%r1440, %r1439};
	xor.b64  	%rd2202, %rd2200, %rd2201;
	shf.l.wrap.b32 	%r1441, %r1435, %r1436, 25;
	shf.l.wrap.b32 	%r1442, %r1436, %r1435, 25;
	mov.b64 	%rd2203, {%r1442, %r1441};
	xor.b64  	%rd2204, %rd2202, %rd2203;
	and.b64  	%rd2205, %rd2262, %rd2263;
	xor.b64  	%rd2206, %rd2262, %rd2263;
	and.b64  	%rd2207, %rd2206, %rd2264;
	or.b64  	%rd2208, %rd2207, %rd2205;
	add.s64 	%rd2209, %rd2204, %rd2208;
	add.s64 	%rd2261, %rd2209, %rd2199;
	add.s32 	%r1446, %r1446, 16;
	setp.lt.s32	%p4, %r1446, 80;
	@%p4 bra 	BB4_6;

	ld.param.u32 	%r1443, [m07100_loop_param_29];
	add.s64 	%rd2245, %rd2261, %rd31;
	xor.b64  	%rd2277, %rd2245, %rd2277;
	add.s64 	%rd2246, %rd2262, %rd30;
	xor.b64  	%rd2278, %rd2246, %rd2278;
	add.s64 	%rd2247, %rd2263, %rd32;
	xor.b64  	%rd2279, %rd2247, %rd2279;
	add.s64 	%rd2248, %rd2264, %rd3;
	xor.b64  	%rd2280, %rd2248, %rd2280;
	add.s64 	%rd2249, %rd2265, %rd29;
	xor.b64  	%rd2281, %rd2249, %rd2281;
	add.s64 	%rd2250, %rd2266, %rd28;
	xor.b64  	%rd2282, %rd2250, %rd2282;
	add.s64 	%rd2251, %rd2267, %rd27;
	xor.b64  	%rd2283, %rd2251, %rd2283;
	add.s64 	%rd2252, %rd2268, %rd4;
	xor.b64  	%rd2284, %rd2252, %rd2284;
	add.s32 	%r1444, %r1444, 1;
	setp.lt.u32	%p5, %r1444, %r1443;
	@%p5 bra 	BB4_3;

BB4_8:
	st.global.u64 	[%rd225+128], %rd2245;
	st.global.u64 	[%rd225+136], %rd2246;
	st.global.u64 	[%rd225+144], %rd2247;
	st.global.u64 	[%rd225+152], %rd2248;
	st.global.u64 	[%rd225+160], %rd2249;
	st.global.u64 	[%rd225+168], %rd2250;
	st.global.u64 	[%rd225+176], %rd2251;
	st.global.u64 	[%rd225+184], %rd2252;
	st.global.u64 	[%rd225+256], %rd2277;
	st.global.u64 	[%rd225+264], %rd2278;
	st.global.u64 	[%rd225+272], %rd2279;
	st.global.u64 	[%rd225+280], %rd2280;
	st.global.u64 	[%rd225+288], %rd2281;
	st.global.u64 	[%rd225+296], %rd2282;
	st.global.u64 	[%rd225+304], %rd2283;
	st.global.u64 	[%rd225+312], %rd2284;

BB4_9:
	ret;
}

	// .globl	m07100_comp
.entry m07100_comp(
	.param .u64 .ptr .global .align 4 m07100_comp_param_0,
	.param .u64 .ptr .global .align 4 m07100_comp_param_1,
	.param .u64 .ptr .global .align 4 m07100_comp_param_2,
	.param .u64 .ptr .const .align 4 m07100_comp_param_3,
	.param .u64 .ptr .global .align 8 m07100_comp_param_4,
	.param .u64 .ptr .global .align 1 m07100_comp_param_5,
	.param .u64 .ptr .global .align 4 m07100_comp_param_6,
	.param .u64 .ptr .global .align 4 m07100_comp_param_7,
	.param .u64 .ptr .global .align 4 m07100_comp_param_8,
	.param .u64 .ptr .global .align 4 m07100_comp_param_9,
	.param .u64 .ptr .global .align 4 m07100_comp_param_10,
	.param .u64 .ptr .global .align 4 m07100_comp_param_11,
	.param .u64 .ptr .global .align 4 m07100_comp_param_12,
	.param .u64 .ptr .global .align 4 m07100_comp_param_13,
	.param .u64 .ptr .global .align 8 m07100_comp_param_14,
	.param .u64 .ptr .global .align 4 m07100_comp_param_15,
	.param .u64 .ptr .global .align 4 m07100_comp_param_16,
	.param .u64 .ptr .global .align 4 m07100_comp_param_17,
	.param .u64 .ptr .global .align 4 m07100_comp_param_18,
	.param .u64 .ptr .global .align 4 m07100_comp_param_19,
	.param .u64 .ptr .global .align 1 m07100_comp_param_20,
	.param .u64 .ptr .global .align 1 m07100_comp_param_21,
	.param .u64 .ptr .global .align 1 m07100_comp_param_22,
	.param .u64 .ptr .global .align 1 m07100_comp_param_23,
	.param .u32 m07100_comp_param_24,
	.param .u32 m07100_comp_param_25,
	.param .u32 m07100_comp_param_26,
	.param .u32 m07100_comp_param_27,
	.param .u32 m07100_comp_param_28,
	.param .u32 m07100_comp_param_29,
	.param .u32 m07100_comp_param_30,
	.param .u32 m07100_comp_param_31,
	.param .u32 m07100_comp_param_32,
	.param .u32 m07100_comp_param_33,
	.param .u64 m07100_comp_param_34
)
{
	.reg .pred 	%p<25>;
	.reg .b32 	%r<103>;
	.reg .b64 	%rd<49>;


	ld.param.u64 	%rd3, [m07100_comp_param_4];
	ld.param.u64 	%rd4, [m07100_comp_param_6];
	ld.param.u64 	%rd5, [m07100_comp_param_7];
	ld.param.u64 	%rd6, [m07100_comp_param_8];
	ld.param.u64 	%rd7, [m07100_comp_param_9];
	ld.param.u64 	%rd8, [m07100_comp_param_10];
	ld.param.u64 	%rd9, [m07100_comp_param_11];
	ld.param.u64 	%rd10, [m07100_comp_param_12];
	ld.param.u64 	%rd11, [m07100_comp_param_13];
	ld.param.u64 	%rd12, [m07100_comp_param_14];
	ld.param.u64 	%rd13, [m07100_comp_param_15];
	ld.param.u64 	%rd14, [m07100_comp_param_16];
	ld.param.u64 	%rd15, [m07100_comp_param_19];
	ld.param.u32 	%r27, [m07100_comp_param_24];
	ld.param.u32 	%r28, [m07100_comp_param_25];
	ld.param.u32 	%r29, [m07100_comp_param_26];
	ld.param.u32 	%r30, [m07100_comp_param_27];
	ld.param.u32 	%r31, [m07100_comp_param_31];
	ld.param.u32 	%r32, [m07100_comp_param_32];
	ld.param.u64 	%rd16, [m07100_comp_param_34];
	mov.b32	%r33, %envreg3;
	mov.u32 	%r34, %ctaid.x;
	mov.u32 	%r35, %ntid.x;
	mad.lo.s32 	%r36, %r34, %r35, %r33;
	mov.u32 	%r37, %tid.x;
	add.s32 	%r1, %r36, %r37;
	cvt.s64.s32	%rd1, %r1;
	setp.ge.u64	%p1, %rd1, %rd16;
	@%p1 bra 	BB5_29;

	mul.wide.s32 	%rd17, %r1, 384;
	add.s64 	%rd18, %rd3, %rd17;
	ld.global.v2.u32 	{%r38, %r39}, [%rd18+256];
	ld.global.v2.u32 	{%r40, %r41}, [%rd18+264];
	and.b32  	%r6, %r28, 31;
	shr.u32 	%r42, %r38, %r6;
	and.b32  	%r43, %r42, %r27;
	mul.wide.u32 	%rd19, %r43, 4;
	add.s64 	%rd20, %rd4, %rd19;
	and.b32  	%r44, %r38, 31;
	mov.u32 	%r45, 1;
	shl.b32 	%r7, %r45, %r44;
	ld.global.u32 	%r46, [%rd20];
	and.b32  	%r47, %r7, %r46;
	setp.eq.s32	%p2, %r47, 0;
	@%p2 bra 	BB5_29;

	shr.u32 	%r49, %r39, %r6;
	and.b32  	%r50, %r49, %r27;
	mul.wide.u32 	%rd21, %r50, 4;
	add.s64 	%rd22, %rd5, %rd21;
	and.b32  	%r51, %r39, 31;
	shl.b32 	%r8, %r45, %r51;
	ld.global.u32 	%r52, [%rd22];
	and.b32  	%r53, %r52, %r8;
	setp.eq.s32	%p3, %r53, 0;
	@%p3 bra 	BB5_29;

	shr.u32 	%r54, %r40, %r6;
	and.b32  	%r55, %r54, %r27;
	mul.wide.u32 	%rd23, %r55, 4;
	add.s64 	%rd24, %rd6, %rd23;
	and.b32  	%r56, %r40, 31;
	shl.b32 	%r9, %r45, %r56;
	ld.global.u32 	%r58, [%rd24];
	and.b32  	%r59, %r58, %r9;
	setp.eq.s32	%p4, %r59, 0;
	@%p4 bra 	BB5_29;

	shr.u32 	%r61, %r41, %r6;
	and.b32  	%r62, %r61, %r27;
	mul.wide.u32 	%rd25, %r62, 4;
	add.s64 	%rd26, %rd7, %rd25;
	and.b32  	%r63, %r41, 31;
	shl.b32 	%r10, %r45, %r63;
	ld.global.u32 	%r64, [%rd26];
	and.b32  	%r65, %r64, %r10;
	setp.eq.s32	%p5, %r65, 0;
	@%p5 bra 	BB5_29;

	and.b32  	%r11, %r29, 31;
	shr.u32 	%r66, %r38, %r11;
	and.b32  	%r67, %r66, %r27;
	mul.wide.u32 	%rd27, %r67, 4;
	add.s64 	%rd28, %rd8, %rd27;
	ld.global.u32 	%r68, [%rd28];
	and.b32  	%r69, %r68, %r7;
	setp.eq.s32	%p6, %r69, 0;
	@%p6 bra 	BB5_29;

	shr.u32 	%r70, %r39, %r11;
	and.b32  	%r71, %r70, %r27;
	mul.wide.u32 	%rd29, %r71, 4;
	add.s64 	%rd30, %rd9, %rd29;
	ld.global.u32 	%r72, [%rd30];
	and.b32  	%r73, %r72, %r8;
	setp.eq.s32	%p7, %r73, 0;
	@%p7 bra 	BB5_29;

	shr.u32 	%r74, %r40, %r11;
	and.b32  	%r75, %r74, %r27;
	mul.wide.u32 	%rd31, %r75, 4;
	add.s64 	%rd32, %rd10, %rd31;
	ld.global.u32 	%r76, [%rd32];
	and.b32  	%r77, %r76, %r9;
	setp.eq.s32	%p8, %r77, 0;
	@%p8 bra 	BB5_29;

	shr.u32 	%r78, %r41, %r11;
	and.b32  	%r79, %r78, %r27;
	mul.wide.u32 	%rd33, %r79, 4;
	add.s64 	%rd34, %rd11, %rd33;
	ld.global.u32 	%r80, [%rd34];
	and.b32  	%r81, %r80, %r10;
	setp.eq.s32	%p9, %r81, 0;
	@%p9 bra 	BB5_29;

	setp.eq.s32	%p10, %r31, 0;
	mov.u32 	%r100, 0;
	mov.u32 	%r82, -1;
	@%p10 bra 	BB5_23;

	mov.u32 	%r99, %r31;

BB5_11:
	shr.u32 	%r14, %r99, 1;
	add.s32 	%r102, %r14, %r100;
	cvt.u64.u32	%rd35, %r102;
	cvt.u64.u32	%rd36, %r32;
	add.s64 	%rd2, %rd35, %rd36;
	shl.b64 	%rd37, %rd2, 7;
	add.s64 	%rd38, %rd13, %rd37;
	ld.global.u32 	%r16, [%rd38+12];
	setp.gt.u32	%p11, %r41, %r16;
	mov.u32 	%r101, %r45;
	@%p11 bra 	BB5_21;

	setp.lt.u32	%p12, %r41, %r16;
	mov.u32 	%r85, -1;
	@%p12 bra 	BB5_13;
	bra.uni 	BB5_14;

BB5_13:
	mov.u32 	%r101, %r85;
	bra.uni 	BB5_21;

BB5_14:
	ld.global.u32 	%r17, [%rd38+8];
	setp.gt.u32	%p13, %r40, %r17;
	mov.u32 	%r101, %r45;
	@%p13 bra 	BB5_21;

	setp.lt.u32	%p14, %r40, %r17;
	@%p14 bra 	BB5_16;
	bra.uni 	BB5_17;

BB5_16:
	mov.u32 	%r101, %r85;
	bra.uni 	BB5_21;

BB5_17:
	ld.global.u32 	%r18, [%rd38+4];
	setp.gt.u32	%p15, %r39, %r18;
	mov.u32 	%r101, %r45;
	@%p15 bra 	BB5_21;

	setp.lt.u32	%p16, %r39, %r18;
	mov.u32 	%r101, %r85;
	@%p16 bra 	BB5_21;

	ld.global.u32 	%r19, [%rd38];
	setp.gt.u32	%p17, %r38, %r19;
	mov.u32 	%r101, %r45;
	@%p17 bra 	BB5_21;

	setp.lt.u32	%p18, %r38, %r19;
	selp.b32	%r101, -1, 0, %p18;

BB5_21:
	add.s32 	%r91, %r14, 1;
	setp.gt.s32	%p19, %r101, 0;
	selp.b32	%r92, %r91, 0, %p19;
	add.s32 	%r100, %r92, %r100;
	selp.b32	%r93, -1, 0, %p19;
	add.s32 	%r94, %r93, %r99;
	shr.u32 	%r99, %r94, 1;
	setp.eq.s32	%p20, %r101, 0;
	@%p20 bra 	BB5_24;

	setp.ne.s32	%p21, %r99, 0;
	@%p21 bra 	BB5_11;

BB5_23:
	mov.u32 	%r102, %r82;

BB5_24:
	setp.eq.s32	%p22, %r102, -1;
	@%p22 bra 	BB5_29;

	add.s32 	%r25, %r102, %r32;
	mul.wide.u32 	%rd45, %r25, 4;
	add.s64 	%rd46, %rd14, %rd45;
	atom.global.add.u32 	%r96, [%rd46], 1;
	setp.ne.s32	%p23, %r96, 0;
	@%p23 bra 	BB5_29;

	atom.global.add.u32 	%r26, [%rd15], 1;
	setp.lt.u32	%p24, %r26, %r31;
	@%p24 bra 	BB5_28;
	bra.uni 	BB5_27;

BB5_28:
	mul.wide.u32 	%rd47, %r26, 32;
	add.s64 	%rd48, %rd12, %rd47;
	st.global.u32 	[%rd48+12], %r30;
	st.global.u32 	[%rd48+16], %r102;
	st.global.u32 	[%rd48+20], %r25;
	st.global.u64 	[%rd48], %rd1;
	mov.u32 	%r98, 0;
	st.global.u32 	[%rd48+8], %r98;
	st.global.u32 	[%rd48+24], %r98;
	st.global.u32 	[%rd48+28], %r98;
	bra.uni 	BB5_29;

BB5_27:
	atom.global.add.u32 	%r97, [%rd15], -1;

BB5_29:
	ret;
}


  